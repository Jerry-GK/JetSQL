<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
		<stop stop-color="#eeeeee" offset="5%"/>
		<stop stop-color="#eeeeb0" offset="95%"/>
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"/>
<text id="title" x="600.00" y="24">Flame Graph</text>
<text id="details" x="10.00" y="2117"> </text>
<text id="unzoom" x="10.00" y="24" class="">Reset Zoom</text>
<text id="search" x="1090.00" y="24" class="show">Reset Search</text>
<text id="ignorecase" x="1174.00" y="24">ic</text>
<text id="matched" x="1090.00" y="2117">Matched: 0.0%</text>
<g id="frames">
<g class="hide">
<title>__libc_recvmsg (26 samples, 0.02%)</title><rect x="22.6" y="2053" width="0.2" height="15.0" fill="rgb(236,50,6)" rx="2" ry="2"/>
<text x="25.57" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1205" width="0.31240601503759396" height="15.0" fill="rgb(210,227,53)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1215.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(233,114,53)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="2015.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>[libxul.so] (37 samples, 0.03%)</title><rect x="27.9" y="2005" width="0.4" height="15.0" fill="rgb(226,183,40)" rx="2" ry="2"/>
<text x="30.93" y="2015.5"/>
</g>
<g class="hide">
<title>update_audio_tstamp.isra.0 (30 samples, 0.03%)</title><rect x="69.04853801169597" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(205,132,51)" rx="2" ry="2" _orig_x="85.4" _orig_width="0.3"/>
<text x="72.04853801169597" y="1887.5" _orig_x="88.41"/>
</g>
<g class="hide">
<title>_int_free (34 samples, 0.03%)</title><rect x="242.43387635756062" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(230,158,3)" rx="2" ry="2" _orig_x="251.9" _orig_width="0.4"/>
<text x="245.43387635756062" y="2047.5" _orig_x="254.92"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (16 samples, 0.01%)</title><rect x="661.1194653299917" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(213,106,46)" rx="2" ry="2" _orig_x="633.2" _orig_width="0.1"/>
<text x="664.1194653299917" y="1807.5" _orig_x="636.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (614 samples, 0.52%)</title><rect x="147.77485380116966" y="1957" width="6.352255639097744" height="15.0" fill="rgb(247,57,0)" rx="2" ry="2" _orig_x="161.0" _orig_width="6.1"/>
<text x="150.77485380116966" y="1967.5" _orig_x="164.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (45 samples, 0.04%)</title><rect x="1134.795321637427" y="1797" width="0.985797827903091" height="15.0" fill="rgb(243,142,22)" rx="2" ry="2" _orig_x="825.4" _orig_width="0.4"/>
<text x="1137.795321637427" y="1807.5" _orig_x="828.36"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="45.735171261487054" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(211,171,41)" rx="2" ry="2" _orig_x="383.5" _orig_width="0.2"/>
<text x="48.735171261487054" y="1775.5" _orig_x="386.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="13.4" y="1845" width="0.2" height="15.0" fill="rgb(243,218,35)" rx="2" ry="2"/>
<text x="16.40" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-15821.map] (81 samples, 0.07%)</title><rect x="92.37485380116964" y="1717" width="0.937218045112782" height="15.0" fill="rgb(206,148,27)" rx="2" ry="2" _orig_x="107.8" _orig_width="0.9"/>
<text x="95.37485380116964" y="1727.5" _orig_x="110.85"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (80 samples, 0.07%)</title><rect x="1167.5730994152048" y="1909" width="1.971595655806182" height="15.0" fill="rgb(251,29,30)" rx="2" ry="2" _orig_x="838.7" _orig_width="0.8"/>
<text x="1170.5730994152048" y="1919.5" _orig_x="841.74"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_state (15 samples, 0.01%)</title><rect x="996.7836257309941" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(215,225,24)" rx="2" ry="2" _orig_x="769.4" _orig_width="0.2"/>
<text x="999.7836257309941" y="1791.5" _orig_x="772.44"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="10.42034252297416" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(214,13,38)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1663.5" _orig_x="32.07"/>
</g>
<g class="hide">
<title>PyDict_SetDefault (22 samples, 0.02%)</title><rect x="77.69177109440272" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(233,14,23)" rx="2" ry="2" _orig_x="93.7" _orig_width="0.2"/>
<text x="80.69177109440272" y="2047.5" _orig_x="96.73"/>
</g>
<g class="hide">
<title>v8::internal::Factory::CopyJSObjectWithAllocationSite (29 samples, 0.02%)</title><rect x="186.72147034252302" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(215,205,53)" rx="2" ry="2" _orig_x="198.4" _orig_width="0.3"/>
<text x="189.72147034252302" y="1471.5" _orig_x="201.39"/>
</g>
<g class="hide">
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (16 samples, 0.01%)</title><rect x="163.70756056808693" y="1573" width="0.10413533834586466" height="15.0" fill="rgb(219,176,0)" rx="2" ry="2" _orig_x="176.3" _orig_width="0.1"/>
<text x="166.70756056808693" y="1583.5" _orig_x="179.29"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (20 samples, 0.02%)</title><rect x="722.9782790309105" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(214,94,11)" rx="2" ry="2" _orig_x="658.3" _orig_width="0.2"/>
<text x="725.9782790309105" y="1791.5" _orig_x="661.26"/>
</g>
<g class="hide">
<title>[perf-15821.map] (37 samples, 0.03%)</title><rect x="92.89553049289897" y="1573" width="0.41654135338345866" height="15.0" fill="rgb(246,14,28)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1583.5" _orig_x="111.29"/>
</g>
<g>
<title>Column::GetType (15 samples, 0.01%)</title><rect x="962.5271512113617" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(215,50,21)" rx="2" ry="2" _orig_x="755.5" _orig_width="0.2"/>
<text x="965.5271512113617" y="1871.5" _orig_x="758.53"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(221,224,13)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1871.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="333.2" y="2053" width="0.3" height="15.0" fill="rgb(239,224,21)" rx="2" ry="2"/>
<text x="336.20" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (179 samples, 0.15%)</title><rect x="78.26649958228903" y="1765" width="4.189640768588137" height="15.0" fill="rgb(223,37,33)" rx="2" ry="2" _orig_x="396.7" _orig_width="1.7"/>
<text x="81.26649958228903" y="1775.5" _orig_x="399.65"/>
</g>
<g>
<title>LRUReplacer::Unpin (75 samples, 0.06%)</title><rect x="783.6048454469505" y="1909" width="1.971595655806182" height="15.0" fill="rgb(231,189,27)" rx="2" ry="2" _orig_x="682.9" _orig_width="0.8"/>
<text x="786.6048454469505" y="1919.5" _orig_x="685.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.06%)</title><rect x="343.86169590643283" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(207,40,12)" rx="2" ry="2" _orig_x="349.3" _orig_width="0.6"/>
<text x="346.86169590643283" y="1967.5" _orig_x="352.25"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (19 samples, 0.02%)</title><rect x="116.71261487050964" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(211,84,9)" rx="2" ry="2" _orig_x="412.3" _orig_width="0.2"/>
<text x="119.71261487050964" y="1759.5" _orig_x="415.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="327.51244778613204" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(214,39,14)" rx="2" ry="2" _orig_x="333.6" _orig_width="0.1"/>
<text x="330.51244778613204" y="1999.5" _orig_x="336.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="12.0" y="1845" width="0.1" height="15.0" fill="rgb(240,7,31)" rx="2" ry="2"/>
<text x="15.03" y="1855.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="25.2" y="2053" width="0.2" height="15.0" fill="rgb(205,161,19)" rx="2" ry="2"/>
<text x="28.22" y="2063.5"/>
</g>
<g class="hide">
<title>[chrome] (174 samples, 0.15%)</title><rect x="91.64590643274859" y="1861" width="1.874436090225564" height="15.0" fill="rgb(240,129,3)" rx="2" ry="2" _orig_x="107.1" _orig_width="1.8"/>
<text x="94.64590643274859" y="1871.5" _orig_x="110.13"/>
</g>
<g class="hide">
<title>[libxul.so] (35 samples, 0.03%)</title><rect x="10.107936507936564" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(210,17,36)" rx="2" ry="2" _orig_x="28.8" _orig_width="0.4"/>
<text x="13.107936507936564" y="1983.5" _orig_x="31.84"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1093" width="0.31240601503759396" height="15.0" fill="rgb(242,114,51)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1103.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.11%)</title><rect x="31.351545530492956" y="1861" width="1.2496240601503759" height="15.0" fill="rgb(206,27,36)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.2"/>
<text x="34.351545530492956" y="1871.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="55.61507936507942" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(251,98,24)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="1999.5" _orig_x="75.47"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(237,133,47)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1903.5" _orig_x="99.72"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (28 samples, 0.02%)</title><rect x="1096.595655806182" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(248,81,18)" rx="2" ry="2" _orig_x="809.9" _orig_width="0.3"/>
<text x="1099.595655806182" y="1807.5" _orig_x="812.94"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (15 samples, 0.01%)</title><rect x="228.1077694235589" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(217,193,10)" rx="2" ry="2" _orig_x="457.5" _orig_width="0.2"/>
<text x="231.1077694235589" y="1791.5" _orig_x="460.53"/>
</g>
<g class="hide">
<title>[perf-58119.map] (16 samples, 0.01%)</title><rect x="112.57710944026739" y="1557" width="0.10413533834586466" height="15.0" fill="rgb(223,171,10)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1567.5" _orig_x="130.17"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (17 samples, 0.01%)</title><rect x="601.4786967418546" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(248,82,41)" rx="2" ry="2" _orig_x="609.0" _orig_width="0.2"/>
<text x="604.4786967418546" y="1759.5" _orig_x="612.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.06%)</title><rect x="354.37936507936513" y="1989" width="0.7289473684210526" height="15.0" fill="rgb(237,176,0)" rx="2" ry="2" _orig_x="359.4" _orig_width="0.7"/>
<text x="357.37936507936513" y="1999.5" _orig_x="362.41"/>
</g>
<g class="hide">
<title>[perf-58119.map] (25 samples, 0.02%)</title><rect x="112.2647034252298" y="1589" width="0.20827067669172933" height="15.0" fill="rgb(209,162,32)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1599.5" _orig_x="129.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (22 samples, 0.02%)</title><rect x="196.80868838763578" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(247,99,26)" rx="2" ry="2" _orig_x="444.8" _orig_width="0.2"/>
<text x="199.80868838763578" y="1775.5" _orig_x="447.81"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1637" width="2.2909774436090227" height="15.0" fill="rgb(235,153,41)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1647.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="25.0" y="2037" width="0.2" height="15.0" fill="rgb(250,93,53)" rx="2" ry="2"/>
<text x="27.96" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-58157.map] (119 samples, 0.10%)</title><rect x="123.4071846282373" y="1541" width="1.2496240601503759" height="15.0" fill="rgb(231,135,28)" rx="2" ry="2" _orig_x="137.6" _orig_width="1.2"/>
<text x="126.4071846282373" y="1551.5" _orig_x="140.59"/>
</g>
<g class="hide">
<title>[unknown] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="1989" width="47.58984962406015" height="15.0" fill="rgb(240,130,11)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="1999.5" _orig_x="1138.90">[unknown] </text>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (17 samples, 0.01%)</title><rect x="226.62907268170417" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(209,108,3)" rx="2" ry="2" _orig_x="456.9" _orig_width="0.2"/>
<text x="229.62907268170417" y="1807.5" _orig_x="459.91"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (109 samples, 0.09%)</title><rect x="1079.5906432748536" y="1781" width="2.4644945697577274" height="15.0" fill="rgb(251,217,33)" rx="2" ry="2" _orig_x="803.0" _orig_width="1.0"/>
<text x="1082.5906432748536" y="1791.5" _orig_x="805.95"/>
</g>
<g class="hide">
<title>blink::EventTarget::FireEventListeners (63 samples, 0.05%)</title><rect x="183.90981620718466" y="1461" width="0.7289473684210526" height="15.0" fill="rgb(253,4,7)" rx="2" ry="2" _orig_x="195.7" _orig_width="0.7"/>
<text x="186.90981620718466" y="1471.5" _orig_x="198.73"/>
</g>
<g class="hide">
<title>Napi::Function::MakeCallback (236 samples, 0.20%)</title><rect x="122.2616959064328" y="1925" width="2.3951127819548867" height="15.0" fill="rgb(254,193,36)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1935.5" _orig_x="139.48"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (14 samples, 0.01%)</title><rect x="386.3283208020051" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(252,98,49)" rx="2" ry="2" _orig_x="521.7" _orig_width="0.1"/>
<text x="389.3283208020051" y="1791.5" _orig_x="524.66"/>
</g>
<g class="hide">
<title>epoll_wait (16 samples, 0.01%)</title><rect x="12.0" y="1909" width="0.1" height="15.0" fill="rgb(215,107,17)" rx="2" ry="2"/>
<text x="14.98" y="1919.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (44 samples, 0.04%)</title><rect x="1035.9690893901418" y="1829" width="0.985797827903091" height="15.0" fill="rgb(214,139,0)" rx="2" ry="2" _orig_x="785.3" _orig_width="0.4"/>
<text x="1038.9690893901418" y="1839.5" _orig_x="788.26"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (11 samples, 0.01%)</title><rect x="746.1445279866333" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(240,188,25)" rx="2" ry="2" _orig_x="667.7" _orig_width="0.1"/>
<text x="749.1445279866333" y="1807.5" _orig_x="670.65"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (15 samples, 0.01%)</title><rect x="208.14536340852123" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(210,219,41)" rx="2" ry="2" _orig_x="449.4" _orig_width="0.1"/>
<text x="211.14536340852123" y="1775.5" _orig_x="452.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="326.36695906432755" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(213,63,41)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="2031.5" _orig_x="335.48"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (57 samples, 0.05%)</title><rect x="270.1338763575606" y="2021" width="0.6248120300751879" height="15.0" fill="rgb(247,192,33)" rx="2" ry="2" _orig_x="278.5" _orig_width="0.6"/>
<text x="273.1338763575606" y="2031.5" _orig_x="281.53"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (25 samples, 0.02%)</title><rect x="73.09106098579787" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(215,137,7)" rx="2" ry="2" _orig_x="394.6" _orig_width="0.3"/>
<text x="76.09106098579787" y="1791.5" _orig_x="397.61"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (562 samples, 0.47%)</title><rect x="302.04260651629073" y="1829" width="13.554720133667502" height="15.0" fill="rgb(238,90,45)" rx="2" ry="2" _orig_x="487.5" _orig_width="5.5"/>
<text x="305.04260651629073" y="1839.5" _orig_x="490.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="325.221470342523" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(223,192,3)" rx="2" ry="2" _orig_x="331.4" _orig_width="0.1"/>
<text x="328.221470342523" y="1967.5" _orig_x="334.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.05%)</title><rect x="52.38688387635762" y="1845" width="0.6248120300751879" height="15.0" fill="rgb(226,150,16)" rx="2" ry="2" _orig_x="69.4" _orig_width="0.6"/>
<text x="55.38688387635762" y="1855.5" _orig_x="72.42"/>
</g>
<g class="hide">
<title>blink::V8PerIsolateData::HasInstance (15 samples, 0.01%)</title><rect x="184.7428989139516" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(254,123,6)" rx="2" ry="2" _orig_x="196.5" _orig_width="0.2"/>
<text x="187.7428989139516" y="1503.5" _orig_x="199.51"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="378.4419381787802" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(205,6,2)" rx="2" ry="2" _orig_x="518.5" _orig_width="0.1"/>
<text x="381.4419381787802" y="1839.5" _orig_x="521.45"/>
</g>
<g class="hide">
<title>[libprotocol-native.so] (19 samples, 0.02%)</title><rect x="59.15568086883882" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" _orig_x="75.9" _orig_width="0.2"/>
<text x="62.15568086883882" y="2047.5" _orig_x="78.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.07%)</title><rect x="64.67485380116965" y="1845" width="0.8330827067669173" height="15.0" fill="rgb(217,215,52)" rx="2" ry="2" _orig_x="81.2" _orig_width="0.8"/>
<text x="67.67485380116965" y="1855.5" _orig_x="84.16"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="789" width="2.2909774436090227" height="15.0" fill="rgb(247,13,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="799.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>base::internal::OperationsController::TryBeginOperation (14 samples, 0.01%)</title><rect x="205.46583124477866" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(220,42,54)" rx="2" ry="2" _orig_x="216.4" _orig_width="0.1"/>
<text x="208.46583124477866" y="1727.5" _orig_x="219.39"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="35.63074352548031" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(225,4,43)" rx="2" ry="2" _orig_x="379.4" _orig_width="0.1"/>
<text x="38.63074352548031" y="1711.5" _orig_x="382.40"/>
</g>
<g class="hide">
<title>TaskCon~ller_#7 (11 samples, 0.01%)</title><rect x="48.1" y="2069" width="0.1" height="15.0" fill="rgb(214,72,17)" rx="2" ry="2"/>
<text x="51.12" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (62 samples, 0.05%)</title><rect x="272.9615705931495" y="1797" width="1.7251461988304093" height="15.0" fill="rgb(205,224,52)" rx="2" ry="2" _orig_x="475.7" _orig_width="0.7"/>
<text x="275.9615705931495" y="1807.5" _orig_x="478.75"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (751 samples, 0.63%)</title><rect x="912.7443609022555" y="1829" width="18.483709273182956" height="15.0" fill="rgb(214,4,6)" rx="2" ry="2" _orig_x="735.3" _orig_width="7.5"/>
<text x="915.7443609022555" y="1839.5" _orig_x="738.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="352.19252297410196" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(215,66,17)" rx="2" ry="2" _orig_x="357.3" _orig_width="0.3"/>
<text x="355.19252297410196" y="1903.5" _orig_x="360.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="133" width="0.20827067669172933" height="15.0" fill="rgb(228,130,36)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="143.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="41.45267335004182" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(242,119,13)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1983.5" _orig_x="61.86"/>
</g>
<g class="hide">
<title>malloc (1,083 samples, 0.91%)</title><rect x="1164.4404332129961" y="2053" width="25.32290413156839" height="15.0" fill="rgb(249,107,5)" rx="2" ry="2" _orig_x="848.9" _orig_width="10.7"/>
<text x="1167.4404332129961" y="2063.5" _orig_x="851.85">m..</text>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (32 samples, 0.03%)</title><rect x="62.2472848788638" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(230,223,9)" rx="2" ry="2" _orig_x="390.2" _orig_width="0.3"/>
<text x="65.24728487886381" y="1743.5" _orig_x="393.22"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (94 samples, 0.08%)</title><rect x="743.1871345029239" y="1797" width="2.218045112781955" height="15.0" fill="rgb(254,45,32)" rx="2" ry="2" _orig_x="666.5" _orig_width="0.9"/>
<text x="746.1871345029239" y="1807.5" _orig_x="669.47"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (2,203 samples, 1.85%)</title><rect x="695.1294903926482" y="1877" width="53.725981620718464" height="15.0" fill="rgb(218,169,6)" rx="2" ry="2" _orig_x="647.0" _orig_width="21.8"/>
<text x="698.1294903926482" y="1887.5" _orig_x="649.98">Gener..</text>
</g>
<g>
<title>SimpleMemHeap::Allocate (949 samples, 0.80%)</title><rect x="698.8262322472848" y="1845" width="23.16624895572264" height="15.0" fill="rgb(251,221,4)" rx="2" ry="2" _orig_x="648.5" _orig_width="9.4"/>
<text x="701.8262322472848" y="1855.5" _orig_x="651.48"/>
</g>
<g class="hide">
<title>blink::V8EventTarget::ToImplWithTypeCheck (11 samples, 0.01%)</title><rect x="190.47034252297416" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(238,28,16)" rx="2" ry="2" _orig_x="202.0" _orig_width="0.1"/>
<text x="193.47034252297416" y="1455.5" _orig_x="205.03"/>
</g>
<g class="hide">
<title>[perf-32996.map] (59 samples, 0.05%)</title><rect x="18.7" y="1653" width="0.6" height="15.0" fill="rgb(209,184,40)" rx="2" ry="2"/>
<text x="21.68" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.08%)</title><rect x="73.21395154553056" y="1957" width="0.937218045112782" height="15.0" fill="rgb(229,22,16)" rx="2" ry="2" _orig_x="89.4" _orig_width="0.9"/>
<text x="76.21395154553056" y="1967.5" _orig_x="92.41"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1253" width="0.31240601503759396" height="15.0" fill="rgb(234,163,31)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1263.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (40 samples, 0.03%)</title><rect x="929.7493734335841" y="1781" width="0.985797827903091" height="15.0" fill="rgb(211,2,25)" rx="2" ry="2" _orig_x="742.2" _orig_width="0.4"/>
<text x="932.7493734335841" y="1791.5" _orig_x="745.17"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.03%)</title><rect x="12.6" y="1829" width="0.4" height="15.0" fill="rgb(246,189,38)" rx="2" ry="2"/>
<text x="15.56" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="116.84665831244784" y="1285" width="0.31240601503759396" height="15.0" fill="rgb(246,132,15)" rx="2" ry="2" _orig_x="131.3" _orig_width="0.3"/>
<text x="119.84665831244784" y="1295.5" _orig_x="134.32"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (608 samples, 0.51%)</title><rect x="664.0768588137008" y="1813" width="15.033416875522136" height="15.0" fill="rgb(242,181,15)" rx="2" ry="2" _orig_x="634.4" _orig_width="6.1"/>
<text x="667.0768588137008" y="1823.5" _orig_x="637.43"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (278 samples, 0.23%)</title><rect x="584.9665831244777" y="1749" width="6.654135338345864" height="15.0" fill="rgb(236,170,14)" rx="2" ry="2" _orig_x="602.3" _orig_width="2.7"/>
<text x="587.9665831244777" y="1759.5" _orig_x="605.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="108.4116959064328" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(206,154,25)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1871.5" _orig_x="126.23"/>
</g>
<g class="hide">
<title>[unknown] (475 samples, 0.40%)</title><rect x="26.8" y="2053" width="4.7" height="15.0" fill="rgb(208,132,5)" rx="2" ry="2"/>
<text x="29.79" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="21.9" y="1845" width="0.3" height="15.0" fill="rgb(245,22,16)" rx="2" ry="2"/>
<text x="24.93" y="1855.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (314 samples, 0.26%)</title><rect x="614.7869674185463" y="1813" width="7.639933166248955" height="15.0" fill="rgb(212,99,38)" rx="2" ry="2" _orig_x="614.4" _orig_width="3.1"/>
<text x="617.7869674185463" y="1823.5" _orig_x="617.37"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (60 samples, 0.05%)</title><rect x="582.9949874686716" y="1733" width="1.4786967418546364" height="15.0" fill="rgb(252,127,43)" rx="2" ry="2" _orig_x="601.5" _orig_width="0.6"/>
<text x="585.9949874686716" y="1743.5" _orig_x="604.50"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (19 samples, 0.02%)</title><rect x="1083.0409356725145" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(246,107,9)" rx="2" ry="2" _orig_x="804.4" _orig_width="0.2"/>
<text x="1086.0409356725145" y="1807.5" _orig_x="807.43"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (192 samples, 0.16%)</title><rect x="461.24895572264" y="1717" width="4.682539682539682" height="15.0" fill="rgb(210,27,47)" rx="2" ry="2" _orig_x="552.1" _orig_width="1.9"/>
<text x="464.24895572264" y="1727.5" _orig_x="555.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="83.21094402673356" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(248,221,5)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1855.5" _orig_x="102.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="15.9" y="2005" width="0.3" height="15.0" fill="rgb(251,46,15)" rx="2" ry="2"/>
<text x="18.94" y="2015.5"/>
</g>
<g>
<title>Field::CompareLessThan (63 samples, 0.05%)</title><rect x="789.2731829573935" y="1877" width="1.4786967418546364" height="15.0" fill="rgb(233,14,37)" rx="2" ry="2" _orig_x="685.2" _orig_width="0.6"/>
<text x="792.2731829573935" y="1887.5" _orig_x="688.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="84.14816207184634" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(233,60,18)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1919.5" _orig_x="102.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="197" width="0.20827067669172933" height="15.0" fill="rgb(236,225,44)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="207.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>[libxul.so] (25 samples, 0.02%)</title><rect x="45.0" y="2053" width="0.3" height="15.0" fill="rgb(211,31,44)" rx="2" ry="2"/>
<text x="48.04" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="319.077485380117" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(235,35,4)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1951.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1765" width="2.2909774436090227" height="15.0" fill="rgb(237,92,50)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1775.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (518 samples, 0.44%)</title><rect x="886.5109440267335" y="1909" width="5.415037593984962" height="15.0" fill="rgb(223,198,10)" rx="2" ry="2" _orig_x="870.4" _orig_width="5.2"/>
<text x="889.5109440267335" y="1919.5" _orig_x="873.44"/>
</g>
<g>
<title>TypeInt::CompareLessThan (16 samples, 0.01%)</title><rect x="17.147034252297356" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(230,167,43)" rx="2" ry="2" _orig_x="371.9" _orig_width="0.2"/>
<text x="20.147034252297356" y="1839.5" _orig_x="374.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="43.74365079365085" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(227,12,7)" rx="2" ry="2" _orig_x="61.1" _orig_width="0.2"/>
<text x="46.74365079365085" y="1999.5" _orig_x="64.08"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (27 samples, 0.02%)</title><rect x="125.69816207184634" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(226,19,10)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.3"/>
<text x="128.69816207184635" y="1855.5" _orig_x="142.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="1181.3" y="1589" width="0.3" height="15.0" fill="rgb(237,70,12)" rx="2" ry="2"/>
<text x="1184.32" y="1599.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(236,138,44)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1855.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (17 samples, 0.01%)</title><rect x="645.346700083542" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(251,110,4)" rx="2" ry="2" _orig_x="626.8" _orig_width="0.2"/>
<text x="648.346700083542" y="1743.5" _orig_x="629.78"/>
</g>
<g class="hide">
<title>[perf-58119.map] (213 samples, 0.18%)</title><rect x="115.70116959064332" y="1381" width="2.186842105263158" height="15.0" fill="rgb(246,95,21)" rx="2" ry="2" _orig_x="130.2" _orig_width="2.1"/>
<text x="118.70116959064332" y="1391.5" _orig_x="133.16"/>
</g>
<g class="hide">
<title>[perf-15821.map] (39 samples, 0.03%)</title><rect x="92.89553049289897" y="1589" width="0.41654135338345866" height="15.0" fill="rgb(228,163,16)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1599.5" _orig_x="111.27"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (30 samples, 0.03%)</title><rect x="193.11194653299918" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(210,111,42)" rx="2" ry="2" _orig_x="443.3" _orig_width="0.3"/>
<text x="196.11194653299918" y="1759.5" _orig_x="446.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (559 samples, 0.47%)</title><rect x="886.09440267335" y="1957" width="5.8315789473684205" height="15.0" fill="rgb(217,166,0)" rx="2" ry="2" _orig_x="870.0" _orig_width="5.6"/>
<text x="889.09440267335" y="1967.5" _orig_x="873.03"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="92.27071846282378" y="1621" width="0.10413533834586466" height="15.0" fill="rgb(238,203,23)" rx="2" ry="2" _orig_x="107.7" _orig_width="0.1"/>
<text x="95.27071846282378" y="1631.5" _orig_x="110.67"/>
</g>
<g class="hide">
<title>__strncpy_avx2 (18 samples, 0.02%)</title><rect x="900.0485380116959" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(230,1,34)" rx="2" ry="2" _orig_x="883.4" _orig_width="0.2"/>
<text x="903.0485380116959" y="2047.5" _orig_x="886.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="23.4" y="1973" width="0.2" height="15.0" fill="rgb(248,144,39)" rx="2" ry="2"/>
<text x="26.41" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (135 samples, 0.11%)</title><rect x="98.41470342522979" y="1877" width="1.3537593984962406" height="15.0" fill="rgb(215,100,33)" rx="2" ry="2" _orig_x="113.6" _orig_width="1.3"/>
<text x="101.41470342522979" y="1887.5" _orig_x="116.57"/>
</g>
<g>
<title>LRUReplacer::Unpin (127 samples, 0.11%)</title><rect x="946.2614870509606" y="1893" width="3.2038429406850457" height="15.0" fill="rgb(206,153,35)" rx="2" ry="2" _orig_x="748.9" _orig_width="1.3"/>
<text x="949.2614870509606" y="1903.5" _orig_x="751.93"/>
</g>
<g class="hide">
<title>[perf-9366.map] (23 samples, 0.02%)</title><rect x="10.316207184628293" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(250,17,3)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1935.5" _orig_x="31.96"/>
</g>
<g class="hide">
<title>__libc_write (22 samples, 0.02%)</title><rect x="25.0" y="2053" width="0.2" height="15.0" fill="rgb(212,175,28)" rx="2" ry="2"/>
<text x="27.96" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="25.0" y="2005" width="0.2" height="15.0" fill="rgb(210,187,11)" rx="2" ry="2"/>
<text x="27.96" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="16.35605680868844" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(250,132,41)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1951.5" _orig_x="37.81"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (15 samples, 0.01%)</title><rect x="940.3467000835421" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(242,73,0)" rx="2" ry="2" _orig_x="746.5" _orig_width="0.1"/>
<text x="943.3467000835421" y="1823.5" _orig_x="749.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="354.06695906432753" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(248,1,41)" rx="2" ry="2" _orig_x="359.1" _orig_width="0.2"/>
<text x="357.06695906432753" y="1903.5" _orig_x="362.06"/>
</g>
<g>
<title>BufferPoolManager::NewPage (12 samples, 0.01%)</title><rect x="244.37343358395992" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(213,169,0)" rx="2" ry="2" _orig_x="464.1" _orig_width="0.1"/>
<text x="247.37343358395992" y="1887.5" _orig_x="467.07"/>
</g>
<g class="hide">
<title>[code] (23 samples, 0.02%)</title><rect x="119.55417710944033" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(235,17,38)" rx="2" ry="2" _orig_x="133.9" _orig_width="0.2"/>
<text x="122.55417710944033" y="1727.5" _orig_x="136.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="11.253425229741072" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1935.5" _orig_x="32.90"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1173" width="2.2909774436090227" height="15.0" fill="rgb(250,170,41)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1183.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="16.0" y="1957" width="0.2" height="15.0" fill="rgb(237,185,29)" rx="2" ry="2"/>
<text x="18.95" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="278.6729741019215" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(218,24,27)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="2031.5" _orig_x="289.73"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1301" width="0.20827067669172933" height="15.0" fill="rgb(221,91,17)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1311.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="24.8" y="1957" width="0.2" height="15.0" fill="rgb(206,62,19)" rx="2" ry="2"/>
<text x="27.82" y="1967.5"/>
</g>
<g>
<title>Column::GetType (12 samples, 0.01%)</title><rect x="796.1737677527151" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(237,101,10)" rx="2" ry="2" _orig_x="688.0" _orig_width="0.1"/>
<text x="799.1737677527151" y="1855.5" _orig_x="690.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="322.82635756056817" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(218,122,9)" rx="2" ry="2" _orig_x="329.1" _orig_width="0.3"/>
<text x="325.82635756056817" y="2047.5" _orig_x="332.09"/>
</g>
<g class="hide">
<title>[chrome] (224 samples, 0.19%)</title><rect x="91.22936507936514" y="1909" width="2.2909774436090227" height="15.0" fill="rgb(216,39,47)" rx="2" ry="2" _orig_x="106.7" _orig_width="2.2"/>
<text x="94.22936507936514" y="1919.5" _orig_x="109.69"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (25 samples, 0.02%)</title><rect x="210.36340852130326" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(215,149,24)" rx="2" ry="2" _orig_x="450.3" _orig_width="0.2"/>
<text x="213.36340852130326" y="1775.5" _orig_x="453.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="22.4" y="2021" width="0.2" height="15.0" fill="rgb(210,125,20)" rx="2" ry="2"/>
<text x="25.38" y="2031.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (17 samples, 0.01%)</title><rect x="165.26315789473682" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(231,89,38)" rx="2" ry="2" _orig_x="432.0" _orig_width="0.1"/>
<text x="168.26315789473682" y="1807.5" _orig_x="434.97"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(231,10,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1807.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="142.77635756056813" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(220,62,6)" rx="2" ry="2" _orig_x="156.2" _orig_width="0.1"/>
<text x="145.77635756056813" y="1983.5" _orig_x="159.15"/>
</g>
<g class="hide">
<title>_dl_update_slotinfo (15 samples, 0.01%)</title><rect x="70.50643274853806" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(253,202,14)" rx="2" ry="2" _orig_x="86.8" _orig_width="0.1"/>
<text x="73.50643274853806" y="2047.5" _orig_x="89.75"/>
</g>
<g class="hide">
<title>base::subtle::TimeTicksNowIgnoringOverride (18 samples, 0.02%)</title><rect x="224.62673350041777" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(219,128,8)" rx="2" ry="2" _orig_x="234.8" _orig_width="0.2"/>
<text x="227.62673350041777" y="1823.5" _orig_x="237.79"/>
</g>
<g>
<title>Column::GetType (11 samples, 0.01%)</title><rect x="170.4385964912281" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(248,113,16)" rx="2" ry="2" _orig_x="434.1" _orig_width="0.1"/>
<text x="173.4385964912281" y="1839.5" _orig_x="437.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (350 samples, 0.29%)</title><rect x="310.0177109440268" y="2005" width="3.5406015037593983" height="15.0" fill="rgb(215,208,12)" rx="2" ry="2" _orig_x="316.8" _orig_width="3.4"/>
<text x="313.0177109440268" y="2015.5" _orig_x="319.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="16.2" y="1989" width="0.1" height="15.0" fill="rgb(231,127,33)" rx="2" ry="2"/>
<text x="19.18" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-9366.map] (22 samples, 0.02%)</title><rect x="10.316207184628293" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(249,114,44)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1903.5" _orig_x="31.97"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (98 samples, 0.08%)</title><rect x="1099.3065998329155" y="1877" width="2.4644945697577274" height="15.0" fill="rgb(252,20,53)" rx="2" ry="2" _orig_x="811.0" _orig_width="1.0"/>
<text x="1102.3065998329155" y="1887.5" _orig_x="814.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="22.6" y="1973" width="0.2" height="15.0" fill="rgb(244,35,35)" rx="2" ry="2"/>
<text x="25.59" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1621" width="0.31240601503759396" height="15.0" fill="rgb(216,174,50)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1631.5" _orig_x="99.72"/>
</g>
<g>
<title>Field::CompareLessThan (51 samples, 0.04%)</title><rect x="323.97660818713445" y="1861" width="1.2322472848788637" height="15.0" fill="rgb(228,36,46)" rx="2" ry="2" _orig_x="496.4" _orig_width="0.5"/>
<text x="326.97660818713445" y="1871.5" _orig_x="499.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="343.5492898913952" y="2005" width="0.937218045112782" height="15.0" fill="rgb(230,105,27)" rx="2" ry="2" _orig_x="349.0" _orig_width="0.9"/>
<text x="346.5492898913952" y="2015.5" _orig_x="351.99"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="14.7" y="1845" width="0.2" height="15.0" fill="rgb(229,125,34)" rx="2" ry="2"/>
<text x="17.73" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20,161 samples, 16.95%)</title><rect x="954.615455304929" y="1957" width="208.37481203007516" height="15.0" fill="rgb(252,215,48)" rx="2" ry="2" _orig_x="935.8" _orig_width="200.1"/>
<text x="957.615455304929" y="1967.5" _orig_x="938.85">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (334 samples, 0.28%)</title><rect x="228.84711779448622" y="1781" width="8.132832080200501" height="15.0" fill="rgb(246,84,23)" rx="2" ry="2" _orig_x="457.8" _orig_width="3.3"/>
<text x="231.84711779448622" y="1791.5" _orig_x="460.82"/>
</g>
<g class="hide">
<title>g_slice_alloc (15 samples, 0.01%)</title><rect x="330.2" y="2053" width="0.1" height="15.0" fill="rgb(212,193,32)" rx="2" ry="2"/>
<text x="333.18" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (12 samples, 0.01%)</title><rect x="12.8" y="1765" width="0.1" height="15.0" fill="rgb(250,16,35)" rx="2" ry="2"/>
<text x="15.81" y="1775.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (13 samples, 0.01%)</title><rect x="782.6190476190476" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(241,28,27)" rx="2" ry="2" _orig_x="682.5" _orig_width="0.1"/>
<text x="785.6190476190476" y="1903.5" _orig_x="685.51"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1381" width="2.2909774436090227" height="15.0" fill="rgb(251,32,2)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1391.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="1187.3" y="2021" width="0.1" height="15.0" fill="rgb(240,181,45)" rx="2" ry="2"/>
<text x="1190.33" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1189" width="0.31240601503759396" height="15.0" fill="rgb(253,111,2)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1199.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(253,145,5)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1919.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (11 samples, 0.01%)</title><rect x="628.8345864661654" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(220,122,42)" rx="2" ry="2" _orig_x="620.1" _orig_width="0.1"/>
<text x="631.8345864661654" y="1807.5" _orig_x="623.12"/>
</g>
<g>
<title>Column::GetType (13 samples, 0.01%)</title><rect x="445.72263993316614" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(207,9,34)" rx="2" ry="2" _orig_x="545.8" _orig_width="0.1"/>
<text x="448.72263993316614" y="1855.5" _orig_x="548.77"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="597" width="0.31240601503759396" height="15.0" fill="rgb(243,185,39)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="607.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="162.24966583124484" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(243,58,20)" rx="2" ry="2" _orig_x="174.9" _orig_width="0.2"/>
<text x="165.24966583124484" y="1999.5" _orig_x="177.92"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="485" width="0.20827067669172933" height="15.0" fill="rgb(229,209,35)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="495.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>v8::Function::Call (96 samples, 0.08%)</title><rect x="98.62297410192151" y="1765" width="1.0413533834586466" height="15.0" fill="rgb(229,12,42)" rx="2" ry="2" _orig_x="113.8" _orig_width="1.0"/>
<text x="101.62297410192151" y="1775.5" _orig_x="116.82"/>
</g>
<g class="hide">
<title>record__write.isra.0 (167 samples, 0.14%)</title><rect x="928.5816207184628" y="1973" width="1.7703007518796992" height="15.0" fill="rgb(222,13,18)" rx="2" ry="2" _orig_x="910.8" _orig_width="1.7"/>
<text x="931.5816207184628" y="1983.5" _orig_x="913.81"/>
</g>
<g class="hide">
<title>[chrome] (27 samples, 0.02%)</title><rect x="11.6" y="1797" width="0.3" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2"/>
<text x="14.60" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (70 samples, 0.06%)</title><rect x="17.7" y="1461" width="0.7" height="15.0" fill="rgb(210,126,19)" rx="2" ry="2"/>
<text x="20.72" y="1471.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="322.930492898914" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(225,57,35)" rx="2" ry="2" _orig_x="329.2" _orig_width="0.2"/>
<text x="325.930492898914" y="1951.5" _orig_x="332.16"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (18 samples, 0.02%)</title><rect x="892.5355054302423" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(253,126,36)" rx="2" ry="2" _orig_x="727.1" _orig_width="0.2"/>
<text x="895.5355054302423" y="1807.5" _orig_x="730.10"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (209 samples, 0.18%)</title><rect x="541.5914786967419" y="1781" width="5.175438596491228" height="15.0" fill="rgb(214,96,34)" rx="2" ry="2" _orig_x="584.7" _orig_width="2.1"/>
<text x="544.5914786967419" y="1791.5" _orig_x="587.73"/>
</g>
<g class="hide">
<title>[perf-58145.map] (187 samples, 0.16%)</title><rect x="126.84365079365085" y="1653" width="1.874436090225564" height="15.0" fill="rgb(229,135,14)" rx="2" ry="2" _orig_x="140.9" _orig_width="1.8"/>
<text x="129.84365079365085" y="1663.5" _orig_x="143.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="931.4974101921471" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(252,147,6)" rx="2" ry="2" _orig_x="913.6" _orig_width="0.2"/>
<text x="934.4974101921471" y="2015.5" _orig_x="916.58"/>
</g>
<g class="hide">
<title>blink::V8Function::Invoke (2,242 samples, 1.89%)</title><rect x="177.55756056808693" y="1685" width="23.22218045112782" height="15.0" fill="rgb(249,136,19)" rx="2" ry="2" _orig_x="189.6" _orig_width="22.3"/>
<text x="180.55756056808693" y="1695.5" _orig_x="192.63">blink::V8Function::Invoke </text>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(228,131,11)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1839.5" _orig_x="32.46"/>
</g>
<g>
<title>operator new (12 samples, 0.01%)</title><rect x="1009.1060985797827" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(248,184,30)" rx="2" ry="2" _orig_x="774.4" _orig_width="0.1"/>
<text x="1012.1060985797827" y="1743.5" _orig_x="777.38"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="31.455680868838815" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(225,2,22)" rx="2" ry="2" _orig_x="49.3" _orig_width="0.1"/>
<text x="34.45568086883881" y="1775.5" _orig_x="52.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.08%)</title><rect x="251.80605680868842" y="1813" width="1.0413533834586466" height="15.0" fill="rgb(246,39,39)" rx="2" ry="2" _orig_x="260.9" _orig_width="1.0"/>
<text x="254.80605680868842" y="1823.5" _orig_x="263.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="124.34440267335009" y="1061" width="0.10413533834586466" height="15.0" fill="rgb(244,167,21)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1071.5" _orig_x="141.45"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (34 samples, 0.03%)</title><rect x="770.5430242272347" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(229,133,12)" rx="2" ry="2" _orig_x="677.6" _orig_width="0.3"/>
<text x="773.5430242272347" y="1839.5" _orig_x="680.56"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (12 samples, 0.01%)</title><rect x="1045.0877192982455" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(206,119,22)" rx="2" ry="2" _orig_x="789.0" _orig_width="0.1"/>
<text x="1048.0877192982455" y="1855.5" _orig_x="792.01"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (456 samples, 0.38%)</title><rect x="284.2982456140351" y="1797" width="11.336675020885545" height="15.0" fill="rgb(240,215,36)" rx="2" ry="2" _orig_x="480.3" _orig_width="4.6"/>
<text x="287.2982456140351" y="1807.5" _orig_x="483.33"/>
</g>
<g>
<title>operator new (17 samples, 0.01%)</title><rect x="388.54636591478703" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(206,215,12)" rx="2" ry="2" _orig_x="522.6" _orig_width="0.1"/>
<text x="391.54636591478703" y="1759.5" _orig_x="525.56"/>
</g>
<g class="hide">
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter (15 samples, 0.01%)</title><rect x="215.87936507936513" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(213,35,47)" rx="2" ry="2" _orig_x="226.4" _orig_width="0.2"/>
<text x="218.87936507936513" y="1759.5" _orig_x="229.45"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (13 samples, 0.01%)</title><rect x="863.454469507101" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(220,39,15)" rx="2" ry="2" _orig_x="715.3" _orig_width="0.1"/>
<text x="866.454469507101" y="1839.5" _orig_x="718.30"/>
</g>
<g>
<title>Row::~Row (23 samples, 0.02%)</title><rect x="944.0434419381787" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(250,105,22)" rx="2" ry="2" _orig_x="748.0" _orig_width="0.2"/>
<text x="947.0434419381787" y="1903.5" _orig_x="750.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="22.7" y="1909" width="0.1" height="15.0" fill="rgb(222,13,4)" rx="2" ry="2"/>
<text x="25.66" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1813" width="2.2909774436090227" height="15.0" fill="rgb(226,98,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1823.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="27.915079365079418" y="149" width="0.20827067669172933" height="15.0" fill="rgb(210,175,54)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="159.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="1941" width="1.7703007518796992" height="15.0" fill="rgb(212,76,50)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="1951.5" _orig_x="292.42"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (11 samples, 0.01%)</title><rect x="188.18295739348372" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(208,39,39)" rx="2" ry="2" _orig_x="441.3" _orig_width="0.1"/>
<text x="191.18295739348372" y="1727.5" _orig_x="444.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="145.2756056808689" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(248,142,41)" rx="2" ry="2" _orig_x="158.6" _orig_width="0.2"/>
<text x="148.2756056808689" y="1935.5" _orig_x="161.59"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="232.02034252297415" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(240,140,45)" rx="2" ry="2" _orig_x="241.9" _orig_width="0.1"/>
<text x="235.02034252297415" y="2031.5" _orig_x="244.86"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (336 samples, 0.28%)</title><rect x="1067.514619883041" y="1813" width="8.379281537176274" height="15.0" fill="rgb(251,48,30)" rx="2" ry="2" _orig_x="798.1" _orig_width="3.4"/>
<text x="1070.514619883041" y="1823.5" _orig_x="801.12"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (17 samples, 0.01%)</title><rect x="971.892230576441" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(248,79,53)" rx="2" ry="2" _orig_x="759.3" _orig_width="0.2"/>
<text x="974.892230576441" y="1759.5" _orig_x="762.29"/>
</g>
<g class="hide">
<title>[perf-58145.map] (46 samples, 0.04%)</title><rect x="130.59252297410197" y="1749" width="0.5206766917293233" height="15.0" fill="rgb(237,148,43)" rx="2" ry="2" _orig_x="144.5" _orig_width="0.5"/>
<text x="133.59252297410197" y="1759.5" _orig_x="147.49"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (78 samples, 0.07%)</title><rect x="295.33462823725984" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(224,114,37)" rx="2" ry="2" _orig_x="302.7" _orig_width="0.8"/>
<text x="298.33462823725984" y="2015.5" _orig_x="305.74"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1109" width="0.20827067669172933" height="15.0" fill="rgb(224,93,33)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1119.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::~Row (796 samples, 0.67%)</title><rect x="752.3057644110277" y="1877" width="19.469507101086048" height="15.0" fill="rgb(210,214,34)" rx="2" ry="2" _orig_x="670.2" _orig_width="7.9"/>
<text x="755.3057644110277" y="1887.5" _orig_x="673.20"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (87 samples, 0.07%)</title><rect x="1005.9022556390977" y="1765" width="1.971595655806182" height="15.0" fill="rgb(252,159,17)" rx="2" ry="2" _orig_x="773.1" _orig_width="0.8"/>
<text x="1008.9022556390977" y="1775.5" _orig_x="776.08"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (50 samples, 0.04%)</title><rect x="588.6633249791142" y="1685" width="1.2322472848788637" height="15.0" fill="rgb(254,226,38)" rx="2" ry="2" _orig_x="603.8" _orig_width="0.5"/>
<text x="591.6633249791142" y="1695.5" _orig_x="606.77"/>
</g>
<g class="hide">
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues (11 samples, 0.01%)</title><rect x="243.47522974101926" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(225,69,0)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.1"/>
<text x="246.47522974101926" y="1871.5" _orig_x="255.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="118.61695906432753" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(249,34,6)" rx="2" ry="2" _orig_x="133.0" _orig_width="0.2"/>
<text x="121.61695906432753" y="1759.5" _orig_x="136.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="20.1" y="1909" width="0.2" height="15.0" fill="rgb(208,150,38)" rx="2" ry="2"/>
<text x="23.14" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.04%)</title><rect x="17.8" y="1365" width="0.5" height="15.0" fill="rgb(242,90,35)" rx="2" ry="2"/>
<text x="20.85" y="1375.5"/>
</g>
<g>
<title>BPlusTreePage::GetSize (14 samples, 0.01%)</title><rect x="786.5622389306601" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(238,156,26)" rx="2" ry="2" _orig_x="684.1" _orig_width="0.2"/>
<text x="789.5622389306601" y="1903.5" _orig_x="687.15"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::KeyIndex (3,169 samples, 2.66%)</title><rect x="90.09607351712614" y="1877" width="77.63157894736841" height="15.0" fill="rgb(247,142,26)" rx="2" ry="2" _orig_x="401.5" _orig_width="31.5"/>
<text x="93.09607351712614" y="1887.5" _orig_x="404.53">BPlusTree..</text>
</g>
<g class="hide">
<title>[code] (275 samples, 0.23%)</title><rect x="17.1" y="1893" width="2.8" height="15.0" fill="rgb(211,105,8)" rx="2" ry="2"/>
<text x="20.14" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1669" width="0.41654135338345866" height="15.0" fill="rgb(206,109,17)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1679.5" _orig_x="135.37"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="981" width="0.31240601503759396" height="15.0" fill="rgb(248,107,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="991.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="22.4" y="2037" width="0.2" height="15.0" fill="rgb(217,177,52)" rx="2" ry="2"/>
<text x="25.38" y="2047.5"/>
</g>
<g class="hide">
<title>v8::internal::Object::GetProperty (31 samples, 0.03%)</title><rect x="99.24778613199672" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(233,108,21)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.3"/>
<text x="102.24778613199672" y="1423.5" _orig_x="117.36"/>
</g>
<g class="hide">
<title>v8::internal::EmbeddedData::InstructionStartOfBuiltin (12 samples, 0.01%)</title><rect x="198.280492898914" y="1589" width="0.10413533834586466" height="15.0" fill="rgb(221,18,16)" rx="2" ry="2" _orig_x="209.5" _orig_width="0.1"/>
<text x="201.280492898914" y="1599.5" _orig_x="212.52"/>
</g>
<g class="hide">
<title>[chrome] (129 samples, 0.11%)</title><rect x="85.81432748538018" y="1989" width="1.3537593984962406" height="15.0" fill="rgb(206,120,52)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.3"/>
<text x="88.81432748538018" y="1999.5" _orig_x="104.49"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (46 samples, 0.04%)</title><rect x="876.7627401837929" y="1797" width="0.985797827903091" height="15.0" fill="rgb(236,25,27)" rx="2" ry="2" _orig_x="720.7" _orig_width="0.4"/>
<text x="879.7627401837929" y="1807.5" _orig_x="723.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.07%)</title><rect x="54.573725981620775" y="1797" width="0.937218045112782" height="15.0" fill="rgb(247,141,14)" rx="2" ry="2" _orig_x="71.5" _orig_width="0.9"/>
<text x="57.573725981620775" y="1807.5" _orig_x="74.52"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (21 samples, 0.02%)</title><rect x="521.3826232247285" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(209,84,44)" rx="2" ry="2" _orig_x="576.5" _orig_width="0.2"/>
<text x="524.3826232247285" y="1743.5" _orig_x="579.49"/>
</g>
<g class="hide">
<title>__poll (283 samples, 0.24%)</title><rect x="236.18575605680874" y="2037" width="3.019924812030075" height="15.0" fill="rgb(251,224,10)" rx="2" ry="2" _orig_x="245.9" _orig_width="2.9"/>
<text x="239.18575605680874" y="2047.5" _orig_x="248.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="276.9026733500418" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(241,125,33)" rx="2" ry="2" _orig_x="285.0" _orig_width="0.5"/>
<text x="279.9026733500418" y="1999.5" _orig_x="288.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="50.82485380116965" y="53" width="0.20827067669172933" height="15.0" fill="rgb(220,221,41)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="63.5" _orig_x="70.86"/>
</g>
<g class="hide">
<title>ksoftirqd/0 (19 samples, 0.02%)</title><rect x="345.4" y="2069" width="0.2" height="15.0" fill="rgb(248,177,44)" rx="2" ry="2"/>
<text x="348.43" y="2079.5"/>
</g>
<g class="hide">
<title>kworker/6:1-eve (95 samples, 0.08%)</title><rect x="357.6" y="2069" width="1.0" height="15.0" fill="rgb(207,100,17)" rx="2" ry="2"/>
<text x="360.63" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (106 samples, 0.09%)</title><rect x="977.3141186299081" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(250,65,21)" rx="2" ry="2" _orig_x="761.5" _orig_width="1.0"/>
<text x="980.3141186299081" y="1775.5" _orig_x="764.45"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (11 samples, 0.01%)</title><rect x="746.3909774436088" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(219,185,1)" rx="2" ry="2" _orig_x="667.8" _orig_width="0.1"/>
<text x="749.3909774436088" y="1823.5" _orig_x="670.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (623 samples, 0.52%)</title><rect x="101.85116959064334" y="1973" width="6.4563909774436095" height="15.0" fill="rgb(226,217,1)" rx="2" ry="2" _orig_x="116.9" _orig_width="6.2"/>
<text x="104.85116959064334" y="1983.5" _orig_x="119.89"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (122 samples, 0.10%)</title><rect x="102.41854636591478" y="1701" width="2.957393483709273" height="15.0" fill="rgb(248,36,2)" rx="2" ry="2" _orig_x="406.5" _orig_width="1.2"/>
<text x="105.41854636591478" y="1711.5" _orig_x="409.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="95.70718462823731" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(245,98,6)" rx="2" ry="2" _orig_x="111.0" _orig_width="0.3"/>
<text x="98.70718462823731" y="1967.5" _orig_x="113.96"/>
</g>
<g class="hide">
<title>malloc (78 samples, 0.07%)</title><rect x="276.8" y="2053" width="0.8" height="15.0" fill="rgb(214,145,27)" rx="2" ry="2"/>
<text x="279.83" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-58119.map] (29 samples, 0.02%)</title><rect x="121.22034252297415" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(248,3,12)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1679.5" _orig_x="138.50"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (96 samples, 0.08%)</title><rect x="1128.1411862990813" y="1749" width="2.4644945697577274" height="15.0" fill="rgb(215,24,20)" rx="2" ry="2" _orig_x="822.7" _orig_width="1.0"/>
<text x="1131.1411862990813" y="1759.5" _orig_x="825.70"/>
</g>
<g class="hide">
<title>[perf-58119.map] (18 samples, 0.02%)</title><rect x="120.80380116959068" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(228,67,31)" rx="2" ry="2" _orig_x="135.1" _orig_width="0.2"/>
<text x="123.80380116959068" y="1407.5" _orig_x="138.09"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="1957" width="0.1" height="15.0" fill="rgb(236,82,14)" rx="2" ry="2"/>
<text x="13.06" y="1967.5"/>
</g>
<g class="hide">
<title>base::ScaledLinearHistogram::AddScaledCount (42 samples, 0.04%)</title><rect x="210.88086883876363" y="1701" width="0.41654135338345866" height="15.0" fill="rgb(248,156,35)" rx="2" ry="2" _orig_x="221.6" _orig_width="0.4"/>
<text x="213.88086883876363" y="1711.5" _orig_x="224.59"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (14 samples, 0.01%)</title><rect x="267.04678362573105" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(241,106,13)" rx="2" ry="2" _orig_x="473.3" _orig_width="0.1"/>
<text x="270.04678362573105" y="1775.5" _orig_x="476.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,720 samples, 18.26%)</title><rect x="938.5786131996658" y="2037" width="224.41165413533835" height="15.0" fill="rgb(229,52,23)" rx="2" ry="2" _orig_x="920.4" _orig_width="215.5"/>
<text x="941.5786131996658" y="2047.5" _orig_x="923.38">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>DirTree::update (21 samples, 0.02%)</title><rect x="146.10868838763582" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(238,183,54)" rx="2" ry="2" _orig_x="159.4" _orig_width="0.2"/>
<text x="149.10868838763582" y="1967.5" _orig_x="162.43"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="43.951921470342576" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(237,206,47)" rx="2" ry="2" _orig_x="61.3" _orig_width="0.2"/>
<text x="46.951921470342576" y="1983.5" _orig_x="64.34"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (19 samples, 0.02%)</title><rect x="300.563909774436" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(216,207,1)" rx="2" ry="2" _orig_x="486.9" _orig_width="0.2"/>
<text x="303.563909774436" y="1823.5" _orig_x="489.95"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (17 samples, 0.01%)</title><rect x="715.5847953216373" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(229,90,0)" rx="2" ry="2" _orig_x="655.3" _orig_width="0.2"/>
<text x="718.5847953216373" y="1743.5" _orig_x="658.29"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="2005" width="1.7703007518796992" height="15.0" fill="rgb(209,88,37)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="2015.5" _orig_x="292.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="351.15116959064335" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(250,145,43)" rx="2" ry="2" _orig_x="356.3" _orig_width="0.2"/>
<text x="354.15116959064335" y="1887.5" _orig_x="359.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="276.1737259816208" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(220,115,28)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1903.5" _orig_x="287.29"/>
</g>
<g>
<title>operator new (13 samples, 0.01%)</title><rect x="634.5029239766081" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(241,55,34)" rx="2" ry="2" _orig_x="622.4" _orig_width="0.1"/>
<text x="637.5029239766081" y="1759.5" _orig_x="625.41"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(242,197,34)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1535.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(231,7,47)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1791.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>blink::scheduler::MetricsHelper::RecordCommonTaskMetrics (50 samples, 0.04%)</title><rect x="211.40154553049294" y="1701" width="0.5206766917293233" height="15.0" fill="rgb(221,43,35)" rx="2" ry="2" _orig_x="222.1" _orig_width="0.5"/>
<text x="214.40154553049294" y="1711.5" _orig_x="225.09"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (20 samples, 0.02%)</title><rect x="775.7184628237261" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(222,52,6)" rx="2" ry="2" _orig_x="679.7" _orig_width="0.2"/>
<text x="778.7184628237261" y="1871.5" _orig_x="682.68"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (19 samples, 0.02%)</title><rect x="1085.505430242272" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(208,173,16)" rx="2" ry="2" _orig_x="805.4" _orig_width="0.2"/>
<text x="1088.505430242272" y="1823.5" _orig_x="808.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="130.8007936507937" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(210,214,25)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1423.5" _orig_x="147.69"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (13 samples, 0.01%)</title><rect x="635.2422723475355" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(235,140,22)" rx="2" ry="2" _orig_x="622.7" _orig_width="0.1"/>
<text x="638.2422723475355" y="1791.5" _orig_x="625.65"/>
</g>
<g class="hide">
<title>[unknown] (448 samples, 0.38%)</title><rect x="891.1" y="2053" width="4.5" height="15.0" fill="rgb(236,45,51)" rx="2" ry="2"/>
<text x="894.14" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,422 samples, 1.20%)</title><rect x="331.8629908103593" y="1797" width="34.749373433583955" height="15.0" fill="rgb(222,196,0)" rx="2" ry="2" _orig_x="499.6" _orig_width="14.1"/>
<text x="334.8629908103593" y="1807.5" _orig_x="502.57">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="280.4432748538012" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(210,132,45)" rx="2" ry="2" _orig_x="288.4" _orig_width="0.3"/>
<text x="283.4432748538012" y="1919.5" _orig_x="291.43"/>
</g>
<g class="hide">
<title>[perf-58119.map] (19 samples, 0.02%)</title><rect x="119.65831244778619" y="1621" width="0.10413533834586466" height="15.0" fill="rgb(224,73,54)" rx="2" ry="2" _orig_x="134.0" _orig_width="0.1"/>
<text x="122.65831244778619" y="1631.5" _orig_x="136.96"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (74 samples, 0.06%)</title><rect x="437.09690893901404" y="1829" width="1.971595655806182" height="15.0" fill="rgb(205,13,51)" rx="2" ry="2" _orig_x="542.3" _orig_width="0.8"/>
<text x="440.09690893901404" y="1839.5" _orig_x="545.34"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(249,187,4)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1679.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(211,157,0)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1775.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="119.24177109440272" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(205,98,45)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1839.5" _orig_x="136.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (143 samples, 0.12%)</title><rect x="156.39097744360896" y="1733" width="3.4502923976608186" height="15.0" fill="rgb(221,186,15)" rx="2" ry="2" _orig_x="428.4" _orig_width="1.4"/>
<text x="159.39097744360896" y="1743.5" _orig_x="431.38"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (11 samples, 0.01%)</title><rect x="495.75187969924815" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(246,57,11)" rx="2" ry="2" _orig_x="566.1" _orig_width="0.1"/>
<text x="498.75187969924815" y="1743.5" _orig_x="569.06"/>
</g>
<g class="hide">
<title>ReadRequestFromClient (11 samples, 0.01%)</title><rect x="47.388387635756104" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(219,201,37)" rx="2" ry="2" _orig_x="64.6" _orig_width="0.1"/>
<text x="50.388387635756104" y="2047.5" _orig_x="67.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="327.51244778613204" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(246,225,42)" rx="2" ry="2" _orig_x="333.6" _orig_width="0.1"/>
<text x="330.51244778613204" y="1983.5" _orig_x="336.57"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="118.30455304928994" y="1397" width="0.10413533834586466" height="15.0" fill="rgb(251,163,7)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1407.5" _orig_x="135.68"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (68 samples, 0.06%)</title><rect x="774.4862155388472" y="1893" width="1.7251461988304093" height="15.0" fill="rgb(207,18,38)" rx="2" ry="2" _orig_x="679.2" _orig_width="0.7"/>
<text x="777.4862155388472" y="1903.5" _orig_x="682.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="353.5462823725982" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(230,193,13)" rx="2" ry="2" _orig_x="358.6" _orig_width="0.7"/>
<text x="356.5462823725982" y="2031.5" _orig_x="361.60"/>
</g>
<g class="hide">
<title>pulseaudio (52 samples, 0.04%)</title><rect x="913.3" y="2069" width="0.5" height="15.0" fill="rgb(218,15,0)" rx="2" ry="2"/>
<text x="916.31" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1141" width="0.31240601503759396" height="15.0" fill="rgb(252,81,39)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1151.5" _orig_x="99.72"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (76 samples, 0.06%)</title><rect x="873.8053467000835" y="1781" width="1.971595655806182" height="15.0" fill="rgb(216,176,27)" rx="2" ry="2" _orig_x="719.5" _orig_width="0.8"/>
<text x="876.8053467000835" y="1791.5" _orig_x="722.52"/>
</g>
<g>
<title>ExecuteEngine::AddField (60 samples, 0.05%)</title><rect x="1165.8479532163742" y="1957" width="1.4786967418546364" height="15.0" fill="rgb(226,196,20)" rx="2" ry="2" _orig_x="838.0" _orig_width="0.6"/>
<text x="1168.8479532163742" y="1967.5" _orig_x="841.03"/>
</g>
<g class="hide">
<title>[chrome] (80 samples, 0.07%)</title><rect x="86.12673350041776" y="1797" width="0.8330827067669173" height="15.0" fill="rgb(240,57,50)" rx="2" ry="2" _orig_x="101.8" _orig_width="0.8"/>
<text x="89.12673350041776" y="1807.5" _orig_x="104.85"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (19 samples, 0.02%)</title><rect x="1002.2055137844611" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(209,79,19)" rx="2" ry="2" _orig_x="771.6" _orig_width="0.2"/>
<text x="1005.2055137844611" y="1759.5" _orig_x="774.62"/>
</g>
<g class="hide">
<title>__libc_start_main (17 samples, 0.01%)</title><rect x="913.1" y="2053" width="0.1" height="15.0" fill="rgb(209,37,38)" rx="2" ry="2"/>
<text x="916.07" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (61 samples, 0.05%)</title><rect x="319.2940685045948" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(220,171,7)" rx="2" ry="2" _orig_x="494.5" _orig_width="0.6"/>
<text x="322.2940685045948" y="1839.5" _orig_x="497.46"/>
</g>
<g class="hide">
<title>[perf-58119.map] (27 samples, 0.02%)</title><rect x="112.16056808688393" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(250,203,29)" rx="2" ry="2" _orig_x="126.8" _orig_width="0.3"/>
<text x="115.16056808688393" y="1647.5" _orig_x="129.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.03%)</title><rect x="929.9353801169591" y="1621" width="0.41654135338345866" height="15.0" fill="rgb(221,205,38)" rx="2" ry="2" _orig_x="912.1" _orig_width="0.4"/>
<text x="932.9353801169591" y="1631.5" _orig_x="915.05"/>
</g>
<g class="hide">
<title>[perf-58119.map] (104 samples, 0.09%)</title><rect x="119.8665831244779" y="1637" width="1.1454887218045113" height="15.0" fill="rgb(216,176,27)" rx="2" ry="2" _orig_x="134.2" _orig_width="1.1"/>
<text x="122.8665831244779" y="1647.5" _orig_x="137.23"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (13 samples, 0.01%)</title><rect x="335.8061821219716" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(227,185,14)" rx="2" ry="2" _orig_x="501.2" _orig_width="0.1"/>
<text x="338.8061821219716" y="1743.5" _orig_x="504.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="304.39440267335004" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(231,182,25)" rx="2" ry="2" _orig_x="311.4" _orig_width="0.3"/>
<text x="307.39440267335004" y="1919.5" _orig_x="314.42"/>
</g>
<g class="hide">
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter (11 samples, 0.01%)</title><rect x="214.00492898913956" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(208,88,43)" rx="2" ry="2" _orig_x="224.6" _orig_width="0.1"/>
<text x="217.00492898913956" y="1775.5" _orig_x="227.55"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (19 samples, 0.02%)</title><rect x="883.1704260651628" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(232,50,46)" rx="2" ry="2" _orig_x="723.3" _orig_width="0.2"/>
<text x="886.1704260651628" y="1759.5" _orig_x="726.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="131.84214703425232" y="1973" width="0.8330827067669173" height="15.0" fill="rgb(246,111,20)" rx="2" ry="2" _orig_x="145.7" _orig_width="0.8"/>
<text x="134.84214703425232" y="1983.5" _orig_x="148.67"/>
</g>
<g class="hide">
<title>[perf-58119.map] (475 samples, 0.40%)</title><rect x="112.99365079365084" y="1653" width="4.894360902255639" height="15.0" fill="rgb(250,196,41)" rx="2" ry="2" _orig_x="127.6" _orig_width="4.7"/>
<text x="115.99365079365084" y="1663.5" _orig_x="130.57"/>
</g>
<g class="hide">
<title>[perf-58157.map] (218 samples, 0.18%)</title><rect x="122.36583124477866" y="1781" width="2.2909774436090227" height="15.0" fill="rgb(227,219,32)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1791.5" _orig_x="139.62"/>
</g>
<g class="hide">
<title>blink::scheduler::QueueingTimeEstimator::OnExecutionStarted (14 samples, 0.01%)</title><rect x="222.5440267335005" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(212,35,20)" rx="2" ry="2" _orig_x="232.8" _orig_width="0.2"/>
<text x="225.5440267335005" y="1743.5" _orig_x="235.85"/>
</g>
<g class="hide">
<title>[code] (26 samples, 0.02%)</title><rect x="99.8725981620719" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(213,92,44)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1871.5" _orig_x="118.02"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (62 samples, 0.05%)</title><rect x="298.83876357560564" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(214,96,34)" rx="2" ry="2" _orig_x="486.2" _orig_width="0.6"/>
<text x="301.83876357560564" y="1839.5" _orig_x="489.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.07%)</title><rect x="320.9519214703426" y="1973" width="0.8330827067669173" height="15.0" fill="rgb(247,93,21)" rx="2" ry="2" _orig_x="327.3" _orig_width="0.8"/>
<text x="323.9519214703426" y="1983.5" _orig_x="330.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="898.2782372598163" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(220,217,7)" rx="2" ry="2" _orig_x="881.7" _orig_width="0.1"/>
<text x="901.2782372598163" y="1759.5" _orig_x="884.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="108.61996658312454" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(220,189,50)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="1983.5" _orig_x="126.43"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="197" width="0.20827067669172933" height="15.0" fill="rgb(220,77,29)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="207.5" _orig_x="328.48"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (455 samples, 0.38%)</title><rect x="129.7744360902256" y="1781" width="11.090225563909774" height="15.0" fill="rgb(215,130,29)" rx="2" ry="2" _orig_x="417.6" _orig_width="4.5"/>
<text x="132.7744360902256" y="1791.5" _orig_x="420.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="130.8007936507937" y="1365" width="0.20827067669172933" height="15.0" fill="rgb(244,26,42)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1375.5" _orig_x="147.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,843 samples, 3.23%)</title><rect x="1170.8004177109442" y="1877" width="39.7796992481203" height="15.0" fill="rgb(224,159,15)" rx="2" ry="2" _orig_x="1143.4" _orig_width="38.2"/>
<text x="1173.8004177109442" y="1887.5" _orig_x="1146.44">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (22 samples, 0.02%)</title><rect x="472.8320802005011" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(207,114,15)" rx="2" ry="2" _orig_x="556.8" _orig_width="0.2"/>
<text x="475.8320802005011" y="1743.5" _orig_x="559.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (32 samples, 0.03%)</title><rect x="539.1269841269842" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(242,163,19)" rx="2" ry="2" _orig_x="583.7" _orig_width="0.3"/>
<text x="542.1269841269842" y="1807.5" _orig_x="586.69"/>
</g>
<g class="hide">
<title>IPC_I/O_Child (270 samples, 0.23%)</title><rect x="20.3" y="2069" width="2.7" height="15.0" fill="rgb(241,179,10)" rx="2" ry="2"/>
<text x="23.33" y="2079.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (27 samples, 0.02%)</title><rect x="715.5847953216373" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(227,115,9)" rx="2" ry="2" _orig_x="655.3" _orig_width="0.2"/>
<text x="718.5847953216373" y="1759.5" _orig_x="658.25"/>
</g>
<g class="hide">
<title>snd_pcm_status64 (62 samples, 0.05%)</title><rect x="69.46507936507942" y="1925" width="0.6248120300751879" height="15.0" fill="rgb(224,49,15)" rx="2" ry="2" _orig_x="85.8" _orig_width="0.6"/>
<text x="72.46507936507942" y="1935.5" _orig_x="88.79"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1653" width="2.2909774436090227" height="15.0" fill="rgb(237,139,52)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1663.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (31 samples, 0.03%)</title><rect x="282.10944026733506" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(219,59,38)" rx="2" ry="2" _orig_x="290.0" _orig_width="0.3"/>
<text x="285.10944026733506" y="1871.5" _orig_x="292.96"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (80 samples, 0.07%)</title><rect x="1109.657477025898" y="1845" width="1.971595655806182" height="15.0" fill="rgb(215,82,46)" rx="2" ry="2" _orig_x="815.2" _orig_width="0.8"/>
<text x="1112.657477025898" y="1855.5" _orig_x="818.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="278.6729741019215" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(221,171,0)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="1983.5" _orig_x="289.74"/>
</g>
<g>
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;::pair (12 samples, 0.01%)</title><rect x="1162.8905597326648" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(206,191,16)" rx="2" ry="2" _orig_x="836.8" _orig_width="0.1"/>
<text x="1165.8905597326648" y="1839.5" _orig_x="839.79"/>
</g>
<g class="hide">
<title>v8::internal::ConcurrentMarking::Run (525 samples, 0.44%)</title><rect x="33.954928989139574" y="1909" width="5.415037593984962" height="15.0" fill="rgb(225,128,50)" rx="2" ry="2" _orig_x="51.7" _orig_width="5.2"/>
<text x="36.954928989139574" y="1919.5" _orig_x="54.74"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(248,130,52)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1439.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (302 samples, 0.25%)</title><rect x="811.9465329991646" y="1749" width="7.393483709273183" height="15.0" fill="rgb(232,45,18)" rx="2" ry="2" _orig_x="694.4" _orig_width="3.0"/>
<text x="814.9465329991646" y="1759.5" _orig_x="697.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="913.1695906432749" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(225,135,20)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="1983.5" _orig_x="899.02"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (134 samples, 0.11%)</title><rect x="886.6207184628238" y="1781" width="3.2038429406850457" height="15.0" fill="rgb(213,131,3)" rx="2" ry="2" _orig_x="724.7" _orig_width="1.3"/>
<text x="889.6207184628238" y="1791.5" _orig_x="727.68"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1509" width="0.20827067669172933" height="15.0" fill="rgb(245,217,48)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1519.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>blink::PerformanceMonitor::WillProcessTask (34 samples, 0.03%)</title><rect x="223.58538011695913" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(254,77,22)" rx="2" ry="2" _orig_x="233.8" _orig_width="0.3"/>
<text x="226.58538011695913" y="1775.5" _orig_x="236.81"/>
</g>
<g>
<title>Schema::GetColumn (12 samples, 0.01%)</title><rect x="95.27151211361743" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(228,18,10)" rx="2" ry="2" _orig_x="403.6" _orig_width="0.1"/>
<text x="98.27151211361743" y="1823.5" _orig_x="406.57"/>
</g>
<g class="hide">
<title>Socket_Thread (284 samples, 0.24%)</title><rect x="44.9" y="2069" width="2.8" height="15.0" fill="rgb(219,16,21)" rx="2" ry="2"/>
<text x="47.89" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (25 samples, 0.02%)</title><rect x="717.3099415204678" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(235,214,40)" rx="2" ry="2" _orig_x="656.0" _orig_width="0.2"/>
<text x="720.3099415204678" y="1791.5" _orig_x="658.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (225 samples, 0.19%)</title><rect x="812.6858813700919" y="1733" width="5.4218880534670015" height="15.0" fill="rgb(218,153,31)" rx="2" ry="2" _orig_x="694.7" _orig_width="2.2"/>
<text x="815.6858813700919" y="1743.5" _orig_x="697.65"/>
</g>
<g class="hide">
<title>QImage::~QImage (92 samples, 0.08%)</title><rect x="227.6466583124478" y="2037" width="0.937218045112782" height="15.0" fill="rgb(217,209,28)" rx="2" ry="2" _orig_x="237.7" _orig_width="0.9"/>
<text x="230.6466583124478" y="2047.5" _orig_x="240.72"/>
</g>
<g class="hide">
<title>[unknown] (46 samples, 0.04%)</title><rect x="282.5" y="2053" width="0.4" height="15.0" fill="rgb(249,192,35)" rx="2" ry="2"/>
<text x="285.47" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="1162.3104693140792" y="1957" width="0.2366626554352186" height="15.0" fill="rgb(232,170,40)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="1967.5" _orig_x="850.98"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="2005" width="0.5" height="15.0" fill="rgb(229,112,34)" rx="2" ry="2"/>
<text x="17.63" y="2015.5"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::InstantiateObject (57 samples, 0.05%)</title><rect x="186.40906432748542" y="1477" width="0.6248120300751879" height="15.0" fill="rgb(245,165,25)" rx="2" ry="2" _orig_x="198.1" _orig_width="0.6"/>
<text x="189.40906432748542" y="1487.5" _orig_x="201.14"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (13 samples, 0.01%)</title><rect x="54.853801169590604" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(243,44,29)" rx="2" ry="2" _orig_x="387.2" _orig_width="0.1"/>
<text x="57.853801169590604" y="1775.5" _orig_x="390.21"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="679.3567251461989" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(228,170,14)" rx="2" ry="2" _orig_x="640.6" _orig_width="0.2"/>
<text x="682.3567251461989" y="1839.5" _orig_x="643.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="280.2350041771095" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(206,66,40)" rx="2" ry="2" _orig_x="288.2" _orig_width="0.5"/>
<text x="283.2350041771095" y="1999.5" _orig_x="291.20"/>
</g>
<g>
<title>std::unordered_map&lt;unsigned int, TableInfo*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt; &gt;::find (28 samples, 0.02%)</title><rect x="1159.68671679198" y="1941" width="0.7393483709273182" height="15.0" fill="rgb(240,156,48)" rx="2" ry="2" _orig_x="835.5" _orig_width="0.3"/>
<text x="1162.68671679198" y="1951.5" _orig_x="838.50"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(249,83,38)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1423.5" _orig_x="328.48"/>
</g>
<g>
<title>operator new (14 samples, 0.01%)</title><rect x="772.5146198830408" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(246,202,33)" rx="2" ry="2" _orig_x="678.4" _orig_width="0.1"/>
<text x="775.5146198830408" y="1887.5" _orig_x="681.35"/>
</g>
<g class="hide">
<title>[perf-33014.map] (45 samples, 0.04%)</title><rect x="129.75944026733504" y="1845" width="0.41654135338345866" height="15.0" fill="rgb(247,61,38)" rx="2" ry="2" _orig_x="143.7" _orig_width="0.4"/>
<text x="132.75944026733504" y="1855.5" _orig_x="146.69"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (14 samples, 0.01%)</title><rect x="34.398496240601446" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(239,8,33)" rx="2" ry="2" _orig_x="378.9" _orig_width="0.1"/>
<text x="37.398496240601446" y="1727.5" _orig_x="381.88"/>
</g>
<g class="hide">
<title>[unknown] (19 samples, 0.02%)</title><rect x="10.316207184628293" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(228,74,37)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1823.5" _orig_x="32.00"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (74 samples, 0.06%)</title><rect x="338.2706766917293" y="1733" width="1.971595655806182" height="15.0" fill="rgb(252,4,23)" rx="2" ry="2" _orig_x="502.2" _orig_width="0.8"/>
<text x="341.2706766917293" y="1743.5" _orig_x="505.24"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1285" width="2.2909774436090227" height="15.0" fill="rgb(226,101,8)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1295.5" _orig_x="69.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (13 samples, 0.01%)</title><rect x="1034.4903926482873" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(218,37,52)" rx="2" ry="2" _orig_x="784.7" _orig_width="0.2"/>
<text x="1037.4903926482873" y="1807.5" _orig_x="787.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="353.5462823725982" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(251,11,28)" rx="2" ry="2" _orig_x="358.6" _orig_width="0.7"/>
<text x="356.5462823725982" y="2047.5" _orig_x="361.60"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (36 samples, 0.03%)</title><rect x="1170.0375939849625" y="1909" width="0.985797827903091" height="15.0" fill="rgb(206,114,48)" rx="2" ry="2" _orig_x="839.7" _orig_width="0.4"/>
<text x="1173.0375939849625" y="1919.5" _orig_x="842.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (265 samples, 0.22%)</title><rect x="880.9917710944027" y="1829" width="2.811654135338346" height="15.0" fill="rgb(221,193,17)" rx="2" ry="2" _orig_x="865.1" _orig_width="2.7"/>
<text x="883.9917710944027" y="1839.5" _orig_x="868.13"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (16 samples, 0.01%)</title><rect x="872.3266499582288" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(221,37,47)" rx="2" ry="2" _orig_x="718.9" _orig_width="0.1"/>
<text x="875.3266499582288" y="1807.5" _orig_x="721.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,737 samples, 3.98%)</title><rect x="1114.046658312448" y="1877" width="48.94360902255639" height="15.0" fill="rgb(218,151,51)" rx="2" ry="2" _orig_x="1088.9" _orig_width="47.0"/>
<text x="1117.046658312448" y="1887.5" _orig_x="1091.90">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1557" width="0.31240601503759396" height="15.0" fill="rgb(215,192,22)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1567.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="757" width="0.31240601503759396" height="15.0" fill="rgb(206,136,16)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="767.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (188 samples, 0.16%)</title><rect x="586.1988304093566" y="1717" width="4.682539682539682" height="15.0" fill="rgb(248,187,15)" rx="2" ry="2" _orig_x="602.8" _orig_width="1.9"/>
<text x="589.1988304093566" y="1727.5" _orig_x="605.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="1181.4" y="1541" width="0.2" height="15.0" fill="rgb(237,138,50)" rx="2" ry="2"/>
<text x="1184.39" y="1551.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (327 samples, 0.27%)</title><rect x="249.41094402673357" y="1861" width="3.4364661654135333" height="15.0" fill="rgb(208,74,41)" rx="2" ry="2" _orig_x="258.6" _orig_width="3.3"/>
<text x="252.41094402673357" y="1871.5" _orig_x="261.65"/>
</g>
<g class="hide">
<title>Builtins_JSEntry (150 samples, 0.13%)</title><rect x="163.60342522974105" y="1621" width="1.4578947368421051" height="15.0" fill="rgb(220,28,45)" rx="2" ry="2" _orig_x="176.2" _orig_width="1.4"/>
<text x="166.60342522974105" y="1631.5" _orig_x="179.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="326.78350041771097" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(253,0,34)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1983.5" _orig_x="335.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="83.21094402673356" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(234,124,22)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1791.5" _orig_x="102.04"/>
</g>
<g>
<title>Row::Row (347 samples, 0.29%)</title><rect x="1093.391812865497" y="1893" width="8.379281537176274" height="15.0" fill="rgb(249,165,36)" rx="2" ry="2" _orig_x="808.6" _orig_width="3.4"/>
<text x="1096.391812865497" y="1903.5" _orig_x="811.56"/>
</g>
<g class="hide">
<title>[perf-58145.map] (43 samples, 0.04%)</title><rect x="130.59252297410197" y="1733" width="0.5206766917293233" height="15.0" fill="rgb(252,155,53)" rx="2" ry="2" _orig_x="144.5" _orig_width="0.5"/>
<text x="133.59252297410197" y="1743.5" _orig_x="147.52"/>
</g>
<g class="hide">
<title>[perf-58157.map] (145 samples, 0.12%)</title><rect x="123.09477861319974" y="1653" width="1.5620300751879699" height="15.0" fill="rgb(222,185,41)" rx="2" ry="2" _orig_x="137.3" _orig_width="1.5"/>
<text x="126.09477861319974" y="1663.5" _orig_x="140.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="19.167710944026787" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(234,112,52)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="1951.5" _orig_x="40.55"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (17 samples, 0.01%)</title><rect x="115.72681704260647" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(248,145,3)" rx="2" ry="2" _orig_x="411.9" _orig_width="0.2"/>
<text x="118.72681704260647" y="1759.5" _orig_x="414.90"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(235,80,15)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1743.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (185 samples, 0.16%)</title><rect x="63.52936507936513" y="1909" width="1.9785714285714284" height="15.0" fill="rgb(216,30,21)" rx="2" ry="2" _orig_x="80.1" _orig_width="1.9"/>
<text x="66.52936507936514" y="1919.5" _orig_x="83.12"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="101" width="0.20827067669172933" height="15.0" fill="rgb(206,171,39)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="111.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (207 samples, 0.17%)</title><rect x="915.2088554720132" y="1781" width="5.175438596491228" height="15.0" fill="rgb(245,25,40)" rx="2" ry="2" _orig_x="736.3" _orig_width="2.1"/>
<text x="918.2088554720132" y="1791.5" _orig_x="739.30"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (15 samples, 0.01%)</title><rect x="46.4745196324144" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(237,194,23)" rx="2" ry="2" _orig_x="383.8" _orig_width="0.1"/>
<text x="49.4745196324144" y="1791.5" _orig_x="386.76"/>
</g>
<g class="hide">
<title>[code] (202 samples, 0.17%)</title><rect x="119.45004177109446" y="1813" width="2.082706766917293" height="15.0" fill="rgb(231,177,16)" rx="2" ry="2" _orig_x="133.8" _orig_width="2.0"/>
<text x="122.45004177109446" y="1823.5" _orig_x="136.84"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (12 samples, 0.01%)</title><rect x="923.3416875522139" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(228,220,17)" rx="2" ry="2" _orig_x="739.6" _orig_width="0.1"/>
<text x="926.3416875522139" y="1759.5" _orig_x="742.59"/>
</g>
<g class="hide">
<title>[chrome] (19 samples, 0.02%)</title><rect x="11.6" y="1749" width="0.2" height="15.0" fill="rgb(248,111,34)" rx="2" ry="2"/>
<text x="14.65" y="1759.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (60 samples, 0.05%)</title><rect x="1162.5471319695146" y="2053" width="1.4199759326113115" height="15.0" fill="rgb(205,56,14)" rx="2" ry="2" _orig_x="848.1" _orig_width="0.6"/>
<text x="1165.5471319695146" y="2063.5" _orig_x="851.15"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (12 samples, 0.01%)</title><rect x="545.534670008354" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(245,27,50)" rx="2" ry="2" _orig_x="586.3" _orig_width="0.1"/>
<text x="548.534670008354" y="1759.5" _orig_x="589.29"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1797" width="2.2909774436090227" height="15.0" fill="rgb(253,191,42)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1807.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(244,147,1)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1999.5" _orig_x="101.86"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (27 samples, 0.02%)</title><rect x="625.3842940685047" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(241,22,17)" rx="2" ry="2" _orig_x="618.7" _orig_width="0.3"/>
<text x="628.3842940685047" y="1839.5" _orig_x="621.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(249,100,24)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="2015.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>start_thread (16 samples, 0.01%)</title><rect x="58.0" y="2053" width="0.2" height="15.0" fill="rgb(233,137,23)" rx="2" ry="2"/>
<text x="61.02" y="2063.5"/>
</g>
<g class="hide">
<title>v8::Object::CreationContext (21 samples, 0.02%)</title><rect x="194.42748538011702" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(221,44,54)" rx="2" ry="2" _orig_x="205.8" _orig_width="0.2"/>
<text x="197.42748538011702" y="1423.5" _orig_x="208.77"/>
</g>
<g class="hide">
<title>epoll_wait (13 samples, 0.01%)</title><rect x="51.03312447786137" y="133" width="0.10413533834586466" height="15.0" fill="rgb(212,219,52)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="143.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="11.3" y="1941" width="0.1" height="15.0" fill="rgb(240,219,18)" rx="2" ry="2"/>
<text x="14.27" y="1951.5"/>
</g>
<g class="hide">
<title>SCTP_timer (563 samples, 0.47%)</title><rect x="39.2" y="2069" width="5.6" height="15.0" fill="rgb(251,10,39)" rx="2" ry="2"/>
<text x="42.21" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(232,117,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1823.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::DeserializeFrom (3,120 samples, 2.62%)</title><rect x="326.68755221386795" y="1845" width="76.39933166248956" height="15.0" fill="rgb(246,171,36)" rx="2" ry="2" _orig_x="497.5" _orig_width="31.0"/>
<text x="329.68755221386795" y="1855.5" _orig_x="500.52">Row::Des..</text>
</g>
<g class="hide">
<title>base::internal::TaskTrackerPosix::RunTask (754 samples, 0.63%)</title><rect x="32.70530492898919" y="1973" width="7.810150375939849" height="15.0" fill="rgb(240,103,14)" rx="2" ry="2" _orig_x="50.5" _orig_width="7.5"/>
<text x="35.70530492898919" y="1983.5" _orig_x="53.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="228.89628237259822" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(205,120,11)" rx="2" ry="2" _orig_x="238.9" _orig_width="0.3"/>
<text x="231.89628237259822" y="1919.5" _orig_x="241.89"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (16 samples, 0.01%)</title><rect x="60.522138680033414" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(247,104,28)" rx="2" ry="2" _orig_x="389.5" _orig_width="0.2"/>
<text x="63.522138680033414" y="1759.5" _orig_x="392.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="16.35605680868844" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(207,98,31)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1967.5" _orig_x="37.79"/>
</g>
<g class="hide">
<title>JS_Helper (62 samples, 0.05%)</title><rect x="33.8" y="2069" width="0.6" height="15.0" fill="rgb(217,228,24)" rx="2" ry="2"/>
<text x="36.82" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="934.1007936507937" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(232,54,5)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="1951.5" _orig_x="919.14"/>
</g>
<g>
<title>operator new (12 samples, 0.01%)</title><rect x="471.84628237259807" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(224,146,52)" rx="2" ry="2" _orig_x="556.4" _orig_width="0.1"/>
<text x="474.84628237259807" y="1743.5" _orig_x="559.38"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1157" width="2.2909774436090227" height="15.0" fill="rgb(250,11,25)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1167.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (35 samples, 0.03%)</title><rect x="27.915079365079418" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(253,153,3)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="2031.5" _orig_x="48.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="16.2" y="1941" width="0.1" height="15.0" fill="rgb(215,30,53)" rx="2" ry="2"/>
<text x="19.21" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.13%)</title><rect x="13.336131996658366" y="2021" width="1.5620300751879699" height="15.0" fill="rgb(247,208,36)" rx="2" ry="2" _orig_x="31.9" _orig_width="1.5"/>
<text x="16.336131996658366" y="2031.5" _orig_x="34.88"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="917" width="0.31240601503759396" height="15.0" fill="rgb(247,136,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="927.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (48 samples, 0.04%)</title><rect x="737.5187969924813" y="1797" width="0.985797827903091" height="15.0" fill="rgb(210,197,39)" rx="2" ry="2" _orig_x="664.2" _orig_width="0.4"/>
<text x="740.5187969924813" y="1807.5" _orig_x="667.17"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (12 samples, 0.01%)</title><rect x="438.08270676691734" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(212,65,53)" rx="2" ry="2" _orig_x="542.7" _orig_width="0.1"/>
<text x="441.08270676691734" y="1791.5" _orig_x="545.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="16.35605680868844" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(238,59,37)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1999.5" _orig_x="37.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="271.9041771094403" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(209,203,49)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1775.5" _orig_x="283.24"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarking::EmbedderStep (11 samples, 0.01%)</title><rect x="207.23613199665834" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(241,183,42)" rx="2" ry="2" _orig_x="218.1" _orig_width="0.1"/>
<text x="210.23613199665834" y="1727.5" _orig_x="221.05"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1445" width="0.20827067669172933" height="15.0" fill="rgb(231,125,2)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1455.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="283.8053467000836" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(241,195,45)" rx="2" ry="2" _orig_x="480.1" _orig_width="0.1"/>
<text x="286.8053467000836" y="1807.5" _orig_x="483.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="13.1" y="1845" width="0.2" height="15.0" fill="rgb(214,57,25)" rx="2" ry="2"/>
<text x="16.06" y="1855.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (31 samples, 0.03%)</title><rect x="707.9448621553885" y="1701" width="0.7393483709273182" height="15.0" fill="rgb(243,106,36)" rx="2" ry="2" _orig_x="652.2" _orig_width="0.3"/>
<text x="710.9448621553885" y="1711.5" _orig_x="655.15"/>
</g>
<g>
<title>MemHeap::MemHeap (13 samples, 0.01%)</title><rect x="330.13784461152875" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(241,45,2)" rx="2" ry="2" _orig_x="498.9" _orig_width="0.2"/>
<text x="333.13784461152875" y="1839.5" _orig_x="501.93"/>
</g>
<g>
<title>Row::Row (158 samples, 0.13%)</title><rect x="1167.5730994152048" y="1957" width="3.6967418546365916" height="15.0" fill="rgb(234,91,16)" rx="2" ry="2" _orig_x="838.7" _orig_width="1.5"/>
<text x="1170.5730994152048" y="1967.5" _orig_x="841.67"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="132.23893065998334" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(249,20,32)" rx="2" ry="2" _orig_x="418.6" _orig_width="0.1"/>
<text x="135.23893065998334" y="1743.5" _orig_x="421.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="41.45267335004182" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(220,17,26)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1935.5" _orig_x="61.91"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (23 samples, 0.02%)</title><rect x="111.29072681704265" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(236,104,37)" rx="2" ry="2" _orig_x="410.1" _orig_width="0.2"/>
<text x="114.29072681704265" y="1727.5" _orig_x="413.10"/>
</g>
<g class="hide">
<title>__GI___writev (29 samples, 0.02%)</title><rect x="28.223024468511806" y="2053" width="0.4733253108704372" height="15.0" fill="rgb(253,175,48)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="2063.5" _orig_x="371.76"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (20 samples, 0.02%)</title><rect x="741.954887218045" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(252,144,49)" rx="2" ry="2" _orig_x="666.0" _orig_width="0.2"/>
<text x="744.954887218045" y="1759.5" _orig_x="669.05"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl (38 samples, 0.03%)</title><rect x="243.26695906432752" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(246,70,13)" rx="2" ry="2" _orig_x="252.7" _orig_width="0.4"/>
<text x="246.26695906432752" y="1919.5" _orig_x="255.70"/>
</g>
<g class="hide">
<title>[chrome] (38 samples, 0.03%)</title><rect x="14.1" y="1877" width="0.4" height="15.0" fill="rgb(234,150,6)" rx="2" ry="2"/>
<text x="17.12" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1541" width="0.31240601503759396" height="15.0" fill="rgb(242,25,39)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1551.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-9366.map] (13 samples, 0.01%)</title><rect x="10.42034252297416" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(246,136,16)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1679.5" _orig_x="32.06"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="741" width="0.31240601503759396" height="15.0" fill="rgb(215,64,10)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="751.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(206,6,18)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1695.5" _orig_x="32.46"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::deallocate (12 samples, 0.01%)</title><rect x="427.23893065998317" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(208,97,7)" rx="2" ry="2" _orig_x="538.3" _orig_width="0.1"/>
<text x="430.23893065998317" y="1711.5" _orig_x="541.31"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (887 samples, 0.75%)</title><rect x="174.3817878028404" y="1781" width="21.687552213868006" height="15.0" fill="rgb(244,45,16)" rx="2" ry="2" _orig_x="435.7" _orig_width="8.8"/>
<text x="177.3817878028404" y="1791.5" _orig_x="438.75">s..</text>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (42 samples, 0.04%)</title><rect x="28.97660818713447" y="1669" width="0.985797827903091" height="15.0" fill="rgb(209,172,16)" rx="2" ry="2" _orig_x="376.7" _orig_width="0.4"/>
<text x="31.97660818713447" y="1679.5" _orig_x="379.67"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (14 samples, 0.01%)</title><rect x="1114.3400167084378" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(247,83,26)" rx="2" ry="2" _orig_x="817.1" _orig_width="0.1"/>
<text x="1117.3400167084378" y="1823.5" _orig_x="820.09"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1013" width="0.20827067669172933" height="15.0" fill="rgb(235,146,29)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1023.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="354.6917710944027" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(247,124,18)" rx="2" ry="2" _orig_x="359.7" _orig_width="0.4"/>
<text x="357.6917710944027" y="1951.5" _orig_x="362.73"/>
</g>
<g class="hide">
<title>[unknown] (20 samples, 0.02%)</title><rect x="908.6917710944027" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(245,15,42)" rx="2" ry="2" _orig_x="891.7" _orig_width="0.2"/>
<text x="911.6917710944027" y="2031.5" _orig_x="894.71"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="773" width="0.31240601503759396" height="15.0" fill="rgb(252,160,9)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="783.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="501" width="0.31240601503759396" height="15.0" fill="rgb(219,217,51)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="511.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (364 samples, 0.31%)</title><rect x="920.3842940685045" y="1797" width="8.87218045112782" height="15.0" fill="rgb(205,131,17)" rx="2" ry="2" _orig_x="738.4" _orig_width="3.6"/>
<text x="923.3842940685045" y="1807.5" _orig_x="741.42"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (15 samples, 0.01%)</title><rect x="125.80229741019221" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(252,18,29)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1759.5" _orig_x="142.89"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (155 samples, 0.13%)</title><rect x="642.6357560568089" y="1781" width="3.6967418546365916" height="15.0" fill="rgb(245,157,39)" rx="2" ry="2" _orig_x="625.7" _orig_width="1.5"/>
<text x="645.6357560568089" y="1791.5" _orig_x="628.68"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (12 samples, 0.01%)</title><rect x="538.3876357560566" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(205,101,13)" rx="2" ry="2" _orig_x="583.4" _orig_width="0.1"/>
<text x="541.3876357560566" y="1791.5" _orig_x="586.37"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (24 samples, 0.02%)</title><rect x="120.90225563909772" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(208,77,16)" rx="2" ry="2" _orig_x="414.0" _orig_width="0.2"/>
<text x="123.90225563909772" y="1775.5" _orig_x="416.97"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (59 samples, 0.05%)</title><rect x="100.2" y="2053" width="0.6" height="15.0" fill="rgb(220,64,6)" rx="2" ry="2"/>
<text x="103.22" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(232,76,42)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1727.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (18 samples, 0.02%)</title><rect x="118.61695906432753" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(212,158,48)" rx="2" ry="2" _orig_x="133.0" _orig_width="0.2"/>
<text x="121.61695906432753" y="1775.5" _orig_x="136.01"/>
</g>
<g class="hide">
<title>ib_log_flush (36 samples, 0.03%)</title><rect x="332.8" y="2069" width="0.4" height="15.0" fill="rgb(228,40,4)" rx="2" ry="2"/>
<text x="335.84" y="2079.5"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (37 samples, 0.03%)</title><rect x="138.89306599832918" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(252,117,52)" rx="2" ry="2" _orig_x="421.3" _orig_width="0.3"/>
<text x="141.89306599832918" y="1743.5" _orig_x="424.26"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (44 samples, 0.04%)</title><rect x="677.6315789473683" y="1781" width="0.985797827903091" height="15.0" fill="rgb(250,73,21)" rx="2" ry="2" _orig_x="639.9" _orig_width="0.4"/>
<text x="680.6315789473683" y="1791.5" _orig_x="642.88"/>
</g>
<g class="hide">
<title>_nv002448kms (15 samples, 0.01%)</title><rect x="302.10342522974105" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(219,179,37)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="2031.5" _orig_x="312.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="131.321470342523" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(247,146,3)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1823.5" _orig_x="148.25"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (16 samples, 0.01%)</title><rect x="1127.6482873851294" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(229,89,3)" rx="2" ry="2" _orig_x="822.5" _orig_width="0.2"/>
<text x="1130.6482873851294" y="1759.5" _orig_x="825.54"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (34 samples, 0.03%)</title><rect x="612.8153717627403" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(208,43,22)" rx="2" ry="2" _orig_x="613.6" _orig_width="0.3"/>
<text x="615.8153717627403" y="1775.5" _orig_x="616.58"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (21 samples, 0.02%)</title><rect x="1060.6140350877192" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(227,170,50)" rx="2" ry="2" _orig_x="795.3" _orig_width="0.2"/>
<text x="1063.6140350877192" y="1823.5" _orig_x="798.26"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (41 samples, 0.03%)</title><rect x="580.2840434419381" y="1733" width="0.985797827903091" height="15.0" fill="rgb(223,186,38)" rx="2" ry="2" _orig_x="600.4" _orig_width="0.4"/>
<text x="583.2840434419381" y="1743.5" _orig_x="603.44"/>
</g>
<g class="hide">
<title>[[vdso]] (47 samples, 0.04%)</title><rect x="228.79214703425237" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(226,73,14)" rx="2" ry="2" _orig_x="238.8" _orig_width="0.4"/>
<text x="231.79214703425237" y="1999.5" _orig_x="241.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="22.4" y="1957" width="0.2" height="15.0" fill="rgb(235,149,2)" rx="2" ry="2"/>
<text x="25.43" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="133" width="0.20827067669172933" height="15.0" fill="rgb(222,184,33)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="143.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (247 samples, 0.21%)</title><rect x="88.52184628237265" y="1893" width="2.4992481203007517" height="15.0" fill="rgb(254,92,53)" rx="2" ry="2" _orig_x="104.1" _orig_width="2.4"/>
<text x="91.52184628237265" y="1903.5" _orig_x="107.09"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="59.98876357560574" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(239,191,5)" rx="2" ry="2" _orig_x="76.7" _orig_width="0.3"/>
<text x="62.98876357560574" y="2031.5" _orig_x="79.70"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (23 samples, 0.02%)</title><rect x="283.0" y="2053" width="0.3" height="15.0" fill="rgb(242,69,32)" rx="2" ry="2"/>
<text x="286.04" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="28.8522974101922" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(238,210,50)" rx="2" ry="2" _orig_x="46.8" _orig_width="0.3"/>
<text x="31.8522974101922" y="1983.5" _orig_x="49.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (231 samples, 0.19%)</title><rect x="341.72096908939017" y="1733" width="5.668337510442773" height="15.0" fill="rgb(211,48,4)" rx="2" ry="2" _orig_x="503.6" _orig_width="2.3"/>
<text x="344.72096908939017" y="1743.5" _orig_x="506.64"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (393 samples, 0.33%)</title><rect x="757.2347535505431" y="1813" width="9.611528822055138" height="15.0" fill="rgb(248,168,8)" rx="2" ry="2" _orig_x="672.2" _orig_width="3.9"/>
<text x="760.2347535505431" y="1823.5" _orig_x="675.18"/>
</g>
<g class="hide">
<title>pa_hashmap_iterate (29 samples, 0.02%)</title><rect x="90.8" y="2053" width="0.2" height="15.0" fill="rgb(205,85,34)" rx="2" ry="2"/>
<text x="93.76" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="97.68575605680874" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(205,57,47)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="1951.5" _orig_x="115.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (426 samples, 0.36%)</title><rect x="879.3256056808689" y="1893" width="4.47781954887218" height="15.0" fill="rgb(247,63,27)" rx="2" ry="2" _orig_x="863.5" _orig_width="4.3"/>
<text x="882.3256056808689" y="1903.5" _orig_x="866.53"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (99 samples, 0.08%)</title><rect x="1146.624895572264" y="1845" width="2.4644945697577274" height="15.0" fill="rgb(233,131,16)" rx="2" ry="2" _orig_x="830.2" _orig_width="1.0"/>
<text x="1149.624895572264" y="1855.5" _orig_x="833.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (12 samples, 0.01%)</title><rect x="726.4285714285714" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(224,154,23)" rx="2" ry="2" _orig_x="659.7" _orig_width="0.1"/>
<text x="729.4285714285714" y="1807.5" _orig_x="662.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.4" y="1877" width="0.2" height="15.0" fill="rgb(211,102,44)" rx="2" ry="2"/>
<text x="26.45" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="326.78350041771097" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(252,81,15)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1967.5" _orig_x="335.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="15.8" y="1925" width="0.1" height="15.0" fill="rgb(208,226,39)" rx="2" ry="2"/>
<text x="18.76" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(242,118,22)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="2031.5" _orig_x="34.51"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="392.2431077694236" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(247,126,0)" rx="2" ry="2" _orig_x="524.1" _orig_width="0.1"/>
<text x="395.2431077694236" y="1759.5" _orig_x="527.09"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (15 samples, 0.01%)</title><rect x="272.4248538011696" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(238,217,25)" rx="2" ry="2" _orig_x="280.7" _orig_width="0.1"/>
<text x="275.4248538011696" y="2047.5" _orig_x="283.65"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="885" width="0.31240601503759396" height="15.0" fill="rgb(241,134,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="895.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>blink::V8EventListener::InvokeWithoutRunnabilityCheck (34 samples, 0.03%)</title><rect x="184.01395154553055" y="1429" width="0.41654135338345866" height="15.0" fill="rgb(223,119,19)" rx="2" ry="2" _orig_x="195.8" _orig_width="0.4"/>
<text x="187.01395154553055" y="1439.5" _orig_x="198.84"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(224,223,24)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1711.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>Builtins_LoadICTrampoline (17 samples, 0.01%)</title><rect x="181.41056808688393" y="1573" width="0.10413533834586466" height="15.0" fill="rgb(218,119,45)" rx="2" ry="2" _orig_x="193.3" _orig_width="0.1"/>
<text x="184.41056808688393" y="1583.5" _orig_x="196.27"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="725" width="0.31240601503759396" height="15.0" fill="rgb(222,104,27)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="735.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1525" width="0.31240601503759396" height="15.0" fill="rgb(234,135,23)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1535.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="28.8522974101922" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(214,167,11)" rx="2" ry="2" _orig_x="46.8" _orig_width="0.3"/>
<text x="31.8522974101922" y="2047.5" _orig_x="49.75"/>
</g>
<g class="hide">
<title>[[vdso]] (23 samples, 0.02%)</title><rect x="274.81996658312454" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(226,95,26)" rx="2" ry="2" _orig_x="283.0" _orig_width="0.3"/>
<text x="277.81996658312454" y="2047.5" _orig_x="286.04"/>
</g>
<g class="hide">
<title>[perf-58145.map] (38 samples, 0.03%)</title><rect x="130.69665831244782" y="1717" width="0.41654135338345866" height="15.0" fill="rgb(214,147,1)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.4"/>
<text x="133.69665831244782" y="1727.5" _orig_x="147.57"/>
</g>
<g>
<title>[libminisql_shared.so] (17 samples, 0.01%)</title><rect x="460.0167084377611" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(228,34,40)" rx="2" ry="2" _orig_x="551.6" _orig_width="0.1"/>
<text x="463.0167084377611" y="1743.5" _orig_x="554.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (149 samples, 0.13%)</title><rect x="108.33333333333327" y="1733" width="3.6967418546365916" height="15.0" fill="rgb(221,93,45)" rx="2" ry="2" _orig_x="408.9" _orig_width="1.5"/>
<text x="111.33333333333327" y="1743.5" _orig_x="411.89"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (62 samples, 0.05%)</title><rect x="1034.2439431913117" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(231,182,35)" rx="2" ry="2" _orig_x="784.6" _orig_width="0.6"/>
<text x="1037.2439431913117" y="1823.5" _orig_x="787.56"/>
</g>
<g class="hide">
<title>qt_qimageScaleAARGBA_down_xy_sse4&lt;false&gt; (91 samples, 0.08%)</title><rect x="252.84741019214707" y="2037" width="0.937218045112782" height="15.0" fill="rgb(252,107,0)" rx="2" ry="2" _orig_x="261.9" _orig_width="0.9"/>
<text x="255.84741019214707" y="2047.5" _orig_x="264.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="320.53538011695906" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(221,218,50)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1903.5" _orig_x="329.85"/>
</g>
<g class="hide">
<title>CefExecuteProcess (492 samples, 0.41%)</title><rect x="162.5620718462824" y="2021" width="5.102631578947369" height="15.0" fill="rgb(254,144,52)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="2031.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="10.836883876357616" y="53" width="0.20827067669172933" height="15.0" fill="rgb(253,151,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="63.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="161.31244778613205" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(247,215,7)" rx="2" ry="2" _orig_x="174.0" _orig_width="0.2"/>
<text x="164.31244778613205" y="1791.5" _orig_x="177.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="346.67335004177113" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(253,175,31)" rx="2" ry="2" _orig_x="352.0" _orig_width="0.3"/>
<text x="349.67335004177113" y="1871.5" _orig_x="355.04"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (16 samples, 0.01%)</title><rect x="59.780492898914005" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(208,205,27)" rx="2" ry="2" _orig_x="76.5" _orig_width="0.2"/>
<text x="62.780492898914005" y="2031.5" _orig_x="79.54"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="116.84665831244784" y="1269" width="0.20827067669172933" height="15.0" fill="rgb(214,61,54)" rx="2" ry="2" _orig_x="131.3" _orig_width="0.2"/>
<text x="119.84665831244784" y="1279.5" _orig_x="134.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="21.8" y="1893" width="0.4" height="15.0" fill="rgb(226,174,12)" rx="2" ry="2"/>
<text x="24.85" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="42.285756056808744" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(250,142,11)" rx="2" ry="2" _orig_x="59.7" _orig_width="0.2"/>
<text x="45.285756056808744" y="2015.5" _orig_x="62.65"/>
</g>
<g class="hide">
<title>[code] (200 samples, 0.17%)</title><rect x="98.1022974101922" y="2021" width="2.082706766917293" height="15.0" fill="rgb(243,5,43)" rx="2" ry="2" _orig_x="113.3" _orig_width="2.0"/>
<text x="101.1022974101922" y="2031.5" _orig_x="116.32"/>
</g>
<g>
<title>operator new (15 samples, 0.01%)</title><rect x="219.72848788638265" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(205,154,3)" rx="2" ry="2" _orig_x="454.1" _orig_width="0.1"/>
<text x="222.72848788638265" y="1839.5" _orig_x="457.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="181" width="0.20827067669172933" height="15.0" fill="rgb(216,176,54)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="191.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>crash_reporter::internal::CrashKeyStringImpl::Set (25 samples, 0.02%)</title><rect x="219.2116959064328" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(208,96,35)" rx="2" ry="2" _orig_x="229.6" _orig_width="0.3"/>
<text x="222.2116959064328" y="1711.5" _orig_x="232.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (20 samples, 0.02%)</title><rect x="367.5981620718463" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(227,141,41)" rx="2" ry="2" _orig_x="514.1" _orig_width="0.2"/>
<text x="370.5981620718463" y="1775.5" _orig_x="517.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="11.565831244778668" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(216,0,31)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="1935.5" _orig_x="33.23"/>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="118.30455304928994" y="1333" width="0.10413533834586466" height="15.0" fill="rgb(214,72,27)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1343.5" _orig_x="135.71"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (13 samples, 0.01%)</title><rect x="303.7677527151211" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(232,210,17)" rx="2" ry="2" _orig_x="488.2" _orig_width="0.2"/>
<text x="306.7677527151211" y="1823.5" _orig_x="491.25"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (11 samples, 0.01%)</title><rect x="218.249791144528" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(237,170,37)" rx="2" ry="2" _orig_x="453.5" _orig_width="0.1"/>
<text x="221.249791144528" y="1775.5" _orig_x="456.50"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (17 samples, 0.01%)</title><rect x="880.4594820384294" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(221,148,21)" rx="2" ry="2" _orig_x="722.2" _orig_width="0.2"/>
<text x="883.4594820384294" y="1775.5" _orig_x="725.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="19.6" y="1781" width="0.2" height="15.0" fill="rgb(210,152,32)" rx="2" ry="2"/>
<text x="22.60" y="1791.5"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (205 samples, 0.17%)</title><rect x="107.59398496240607" y="1749" width="5.175438596491228" height="15.0" fill="rgb(205,169,0)" rx="2" ry="2" _orig_x="408.6" _orig_width="2.1"/>
<text x="110.59398496240607" y="1759.5" _orig_x="411.65"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (23 samples, 0.02%)</title><rect x="109.81203007518796" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(236,49,35)" rx="2" ry="2" _orig_x="409.5" _orig_width="0.2"/>
<text x="112.81203007518796" y="1727.5" _orig_x="412.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="931.4974101921471" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(231,138,9)" rx="2" ry="2" _orig_x="913.6" _orig_width="0.2"/>
<text x="934.4974101921471" y="1983.5" _orig_x="916.62"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (14 samples, 0.01%)</title><rect x="855.0751879699247" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(213,118,6)" rx="2" ry="2" _orig_x="711.9" _orig_width="0.1"/>
<text x="858.0751879699247" y="1775.5" _orig_x="714.90"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="933" width="0.31240601503759396" height="15.0" fill="rgb(242,17,44)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="943.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="355.21244778613203" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(254,93,12)" rx="2" ry="2" _orig_x="360.2" _orig_width="0.3"/>
<text x="358.21244778613203" y="1983.5" _orig_x="363.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="97.78989139515461" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(235,152,54)" rx="2" ry="2" _orig_x="113.0" _orig_width="0.2"/>
<text x="100.78989139515461" y="1935.5" _orig_x="115.98"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (36 samples, 0.03%)</title><rect x="554.1604010025061" y="1781" width="0.985797827903091" height="15.0" fill="rgb(245,173,10)" rx="2" ry="2" _orig_x="589.8" _orig_width="0.4"/>
<text x="557.1604010025061" y="1791.5" _orig_x="592.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (143 samples, 0.12%)</title><rect x="802.827903091061" y="1781" width="3.4502923976608186" height="15.0" fill="rgb(218,153,39)" rx="2" ry="2" _orig_x="690.7" _orig_width="1.4"/>
<text x="805.827903091061" y="1791.5" _orig_x="693.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (31 samples, 0.03%)</title><rect x="725.4427736006681" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(252,135,28)" rx="2" ry="2" _orig_x="659.3" _orig_width="0.3"/>
<text x="728.4427736006681" y="1807.5" _orig_x="662.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="29.268838763575662" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(230,55,10)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="1999.5" _orig_x="50.19"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1269" width="2.2909774436090227" height="15.0" fill="rgb(247,58,47)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1279.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="27.915079365079418" y="101" width="0.20827067669172933" height="15.0" fill="rgb(220,190,29)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="111.5" _orig_x="48.88"/>
</g>
<g>
<title>LRUReplacer::Unpin (192 samples, 0.16%)</title><rect x="1173.2414369256473" y="1925" width="4.682539682539682" height="15.0" fill="rgb(247,89,33)" rx="2" ry="2" _orig_x="841.0" _orig_width="1.9"/>
<text x="1176.2414369256473" y="1935.5" _orig_x="843.98"/>
</g>
<g>
<title>Row::Row (128 samples, 0.11%)</title><rect x="66.68337510442772" y="1845" width="2.957393483709273" height="15.0" fill="rgb(252,60,43)" rx="2" ry="2" _orig_x="392.0" _orig_width="1.2"/>
<text x="69.68337510442772" y="1855.5" _orig_x="394.97"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (23 samples, 0.02%)</title><rect x="303.27485380116957" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(228,129,50)" rx="2" ry="2" _orig_x="488.0" _orig_width="0.2"/>
<text x="306.27485380116957" y="1807.5" _orig_x="491.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="160.89590643274857" y="1829" width="0.6248120300751879" height="15.0" fill="rgb(228,141,21)" rx="2" ry="2" _orig_x="173.6" _orig_width="0.6"/>
<text x="163.89590643274857" y="1839.5" _orig_x="176.56"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (19 samples, 0.02%)</title><rect x="325.11733500417716" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(210,78,4)" rx="2" ry="2" _orig_x="331.3" _orig_width="0.2"/>
<text x="328.11733500417716" y="2047.5" _orig_x="334.29"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (13 samples, 0.01%)</title><rect x="826.2406015037595" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(248,202,2)" rx="2" ry="2" _orig_x="700.2" _orig_width="0.1"/>
<text x="829.2406015037595" y="1759.5" _orig_x="703.17"/>
</g>
<g>
<title>_int_free (12 samples, 0.01%)</title><rect x="1137.5062656641603" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(234,189,33)" rx="2" ry="2" _orig_x="826.5" _orig_width="0.1"/>
<text x="1140.5062656641603" y="1871.5" _orig_x="829.51"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="869" width="0.31240601503759396" height="15.0" fill="rgb(245,106,21)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="879.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (32 samples, 0.03%)</title><rect x="286.7627401837928" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(212,120,34)" rx="2" ry="2" _orig_x="481.3" _orig_width="0.3"/>
<text x="289.7627401837928" y="1791.5" _orig_x="484.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="124.34440267335009" y="1077" width="0.10413533834586466" height="15.0" fill="rgb(243,22,23)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1087.5" _orig_x="141.45"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (12 samples, 0.01%)</title><rect x="1139.7243107769423" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(235,117,41)" rx="2" ry="2" _orig_x="827.4" _orig_width="0.2"/>
<text x="1142.7243107769423" y="1871.5" _orig_x="830.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="344.90304928989144" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(243,144,49)" rx="2" ry="2" _orig_x="350.3" _orig_width="0.2"/>
<text x="347.90304928989144" y="1903.5" _orig_x="353.30"/>
</g>
<g class="hide">
<title>ib_log_wr_notif (32 samples, 0.03%)</title><rect x="333.2" y="2069" width="0.3" height="15.0" fill="rgb(232,95,39)" rx="2" ry="2"/>
<text x="336.20" y="2079.5"/>
</g>
<g class="hide">
<title>QGifHandler::~QGifHandler (14 samples, 0.01%)</title><rect x="227.4383876357561" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(250,171,35)" rx="2" ry="2" _orig_x="237.5" _orig_width="0.1"/>
<text x="230.4383876357561" y="2047.5" _orig_x="240.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="351.56771094402677" y="1973" width="0.937218045112782" height="15.0" fill="rgb(234,8,2)" rx="2" ry="2" _orig_x="356.7" _orig_width="0.9"/>
<text x="354.56771094402677" y="1983.5" _orig_x="359.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="82.79440267335009" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(232,74,32)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1919.5" _orig_x="101.64"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="357" width="0.20827067669172933" height="15.0" fill="rgb(236,115,50)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="367.5" _orig_x="328.48"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (24 samples, 0.02%)</title><rect x="1135.7811194653298" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(241,224,4)" rx="2" ry="2" _orig_x="825.8" _orig_width="0.2"/>
<text x="1138.7811194653298" y="1807.5" _orig_x="828.80"/>
</g>
<g class="hide">
<title>[unknown] (93 samples, 0.08%)</title><rect x="10.107936507936564" y="1989" width="1.0413533834586466" height="15.0" fill="rgb(221,198,48)" rx="2" ry="2" _orig_x="28.8" _orig_width="1.0"/>
<text x="13.107936507936564" y="1999.5" _orig_x="31.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (22 samples, 0.02%)</title><rect x="975.0960735171262" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(224,13,5)" rx="2" ry="2" _orig_x="760.6" _orig_width="0.2"/>
<text x="978.0960735171262" y="1807.5" _orig_x="763.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="355.3165831244779" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(245,138,27)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="358.3165831244779" y="1967.5" _orig_x="363.26"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (519 samples, 0.44%)</title><rect x="1031.0401002506264" y="1845" width="12.815371762740183" height="15.0" fill="rgb(237,22,52)" rx="2" ry="2" _orig_x="783.3" _orig_width="5.2"/>
<text x="1034.0401002506264" y="1855.5" _orig_x="786.31"/>
</g>
<g class="hide">
<title>[perf-2510.map] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(213,36,39)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1951.5" _orig_x="297.81"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (13 samples, 0.01%)</title><rect x="415.90225563909786" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(246,214,36)" rx="2" ry="2" _orig_x="533.7" _orig_width="0.2"/>
<text x="418.90225563909786" y="1791.5" _orig_x="536.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="131.4256056808689" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(232,67,52)" rx="2" ry="2" _orig_x="145.3" _orig_width="0.1"/>
<text x="134.4256056808689" y="1775.5" _orig_x="148.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (404 samples, 0.34%)</title><rect x="66.13274853801175" y="2021" width="4.165413533834586" height="15.0" fill="rgb(211,170,18)" rx="2" ry="2" _orig_x="82.6" _orig_width="4.0"/>
<text x="69.13274853801175" y="2031.5" _orig_x="85.57"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (12 samples, 0.01%)</title><rect x="433.15371762740193" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(220,210,43)" rx="2" ry="2" _orig_x="540.7" _orig_width="0.1"/>
<text x="436.15371762740193" y="1839.5" _orig_x="543.67"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(234,41,25)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1455.5" _orig_x="48.87"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (26 samples, 0.02%)</title><rect x="1068.7468671679198" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(231,43,22)" rx="2" ry="2" _orig_x="798.6" _orig_width="0.3"/>
<text x="1071.7468671679198" y="1807.5" _orig_x="801.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (253 samples, 0.21%)</title><rect x="889.3225981620719" y="1733" width="2.6033834586466167" height="15.0" fill="rgb(243,202,43)" rx="2" ry="2" _orig_x="873.1" _orig_width="2.5"/>
<text x="892.3225981620719" y="1743.5" _orig_x="876.07"/>
</g>
<g class="hide">
<title>[chrome] (19 samples, 0.02%)</title><rect x="92.99966583124484" y="1381" width="0.10413533834586466" height="15.0" fill="rgb(224,170,37)" rx="2" ry="2" _orig_x="108.4" _orig_width="0.1"/>
<text x="95.99966583124484" y="1391.5" _orig_x="111.35"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (164 samples, 0.14%)</title><rect x="705.7268170426064" y="1749" width="4.189640768588137" height="15.0" fill="rgb(218,26,18)" rx="2" ry="2" _orig_x="651.3" _orig_width="1.7"/>
<text x="708.7268170426064" y="1759.5" _orig_x="654.33"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (381 samples, 0.32%)</title><rect x="74.32330827067675" y="1797" width="9.365079365079364" height="15.0" fill="rgb(234,171,6)" rx="2" ry="2" _orig_x="395.1" _orig_width="3.8"/>
<text x="77.32330827067675" y="1807.5" _orig_x="398.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="345.4" y="2053" width="0.2" height="15.0" fill="rgb(252,127,52)" rx="2" ry="2"/>
<text x="348.43" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="355.0" y="2053" width="1.5" height="15.0" fill="rgb(206,106,49)" rx="2" ry="2"/>
<text x="358.01" y="2063.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (17 samples, 0.01%)</title><rect x="53.11583124477866" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(252,150,48)" rx="2" ry="2" _orig_x="70.1" _orig_width="0.1"/>
<text x="56.11583124477866" y="2031.5" _orig_x="73.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="929.9353801169591" y="1605" width="0.41654135338345866" height="15.0" fill="rgb(244,151,28)" rx="2" ry="2" _orig_x="912.1" _orig_width="0.4"/>
<text x="932.9353801169591" y="1615.5" _orig_x="915.14"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(236,224,15)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1759.5" _orig_x="328.48"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::KeyIndex (5,034 samples, 4.23%)</title><rect x="442.765246449457" y="1893" width="122.9782790309106" height="15.0" fill="rgb(251,140,47)" rx="2" ry="2" _orig_x="544.6" _orig_width="49.9"/>
<text x="445.765246449457" y="1903.5" _orig_x="547.56">BPlusTreeLeafPa..</text>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (16 samples, 0.01%)</title><rect x="661.6123642439431" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(238,83,47)" rx="2" ry="2" _orig_x="633.4" _orig_width="0.2"/>
<text x="664.6123642439431" y="1823.5" _orig_x="636.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="344.59064327485385" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(223,85,35)" rx="2" ry="2" _orig_x="350.0" _orig_width="0.5"/>
<text x="347.59064327485385" y="1999.5" _orig_x="353.02"/>
</g>
<g class="hide">
<title>start_thread (225 samples, 0.19%)</title><rect x="11.4" y="2053" width="2.2" height="15.0" fill="rgb(224,157,6)" rx="2" ry="2"/>
<text x="14.39" y="2063.5"/>
</g>
<g class="hide">
<title>base::internal::TaskTracker::RunContinueOnShutdown (117 samples, 0.10%)</title><rect x="32.70530492898919" y="1941" width="1.2496240601503759" height="15.0" fill="rgb(226,172,48)" rx="2" ry="2" _orig_x="50.5" _orig_width="1.2"/>
<text x="35.70530492898919" y="1951.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.06%)</title><rect x="12.3" y="1877" width="0.7" height="15.0" fill="rgb(208,104,22)" rx="2" ry="2"/>
<text x="15.33" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (436 samples, 0.37%)</title><rect x="248.36959064327493" y="1893" width="4.47781954887218" height="15.0" fill="rgb(209,58,4)" rx="2" ry="2" _orig_x="257.6" _orig_width="4.3"/>
<text x="251.36959064327493" y="1903.5" _orig_x="260.56"/>
</g>
<g class="hide">
<title>std::__invoke_impl&lt;void, void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="1925" width="2.2909774436090227" height="15.0" fill="rgb(207,123,8)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="1935.5" _orig_x="38.23"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (21 samples, 0.02%)</title><rect x="318.30827067669173" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(220,136,26)" rx="2" ry="2" _orig_x="494.1" _orig_width="0.2"/>
<text x="321.30827067669173" y="1839.5" _orig_x="497.05"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="1957" width="1.7703007518796992" height="15.0" fill="rgb(209,118,15)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="1967.5" _orig_x="292.42"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (43 samples, 0.04%)</title><rect x="1028.3291562238933" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(210,141,16)" rx="2" ry="2" _orig_x="782.2" _orig_width="0.5"/>
<text x="1031.3291562238933" y="1807.5" _orig_x="785.24"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (643 samples, 0.54%)</title><rect x="877.2428989139515" y="2037" width="6.6646616541353385" height="15.0" fill="rgb(217,16,1)" rx="2" ry="2" _orig_x="861.5" _orig_width="6.4"/>
<text x="880.2428989139515" y="2047.5" _orig_x="864.48"/>
</g>
<g class="hide">
<title>ib_clone_gtid (41 samples, 0.03%)</title><rect x="331.3" y="2069" width="0.4" height="15.0" fill="rgb(246,55,16)" rx="2" ry="2"/>
<text x="334.28" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (14 samples, 0.01%)</title><rect x="416.3951545530492" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(206,1,38)" rx="2" ry="2" _orig_x="533.9" _orig_width="0.1"/>
<text x="419.3951545530492" y="1791.5" _orig_x="536.86"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (15 samples, 0.01%)</title><rect x="255.4636591478697" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(243,114,4)" rx="2" ry="2" _orig_x="468.6" _orig_width="0.1"/>
<text x="258.4636591478697" y="1727.5" _orig_x="471.59"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="18.1" y="1205" width="0.1" height="15.0" fill="rgb(227,59,52)" rx="2" ry="2"/>
<text x="21.14" y="1215.5"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarking::Step (23 samples, 0.02%)</title><rect x="207.1319966583125" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(241,181,52)" rx="2" ry="2" _orig_x="218.0" _orig_width="0.3"/>
<text x="210.1319966583125" y="1743.5" _orig_x="221.04"/>
</g>
<g>
<title>LRUReplacer::Unpin (38 samples, 0.03%)</title><rect x="690.93984962406" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(254,123,0)" rx="2" ry="2" _orig_x="645.3" _orig_width="0.3"/>
<text x="693.93984962406" y="1887.5" _orig_x="648.26"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (136 samples, 0.11%)</title><rect x="286.3789891395155" y="2037" width="1.4578947368421051" height="15.0" fill="rgb(236,15,24)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.4"/>
<text x="289.3789891395155" y="2047.5" _orig_x="297.11"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="693" width="2.2909774436090227" height="15.0" fill="rgb(213,139,15)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="703.5" _orig_x="69.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (96 samples, 0.08%)</title><rect x="122.13450292397661" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(231,125,4)" rx="2" ry="2" _orig_x="414.5" _orig_width="1.0"/>
<text x="125.13450292397661" y="1775.5" _orig_x="417.50"/>
</g>
<g class="hide">
<title>[code] (32 samples, 0.03%)</title><rect x="121.22034252297415" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(206,168,0)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1727.5" _orig_x="138.47"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (93 samples, 0.08%)</title><rect x="873.5588972431076" y="1797" width="2.218045112781955" height="15.0" fill="rgb(221,215,31)" rx="2" ry="2" _orig_x="719.4" _orig_width="0.9"/>
<text x="876.5588972431076" y="1807.5" _orig_x="722.35"/>
</g>
<g class="hide">
<title>runtime.mstart0 (27 samples, 0.02%)</title><rect x="269.9256056808689" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(220,67,42)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.2"/>
<text x="272.9256056808689" y="2031.5" _orig_x="281.26"/>
</g>
<g class="hide">
<title>[perf-58119.map] (475 samples, 0.40%)</title><rect x="112.99365079365084" y="1669" width="4.894360902255639" height="15.0" fill="rgb(218,92,28)" rx="2" ry="2" _orig_x="127.6" _orig_width="4.7"/>
<text x="115.99365079365084" y="1679.5" _orig_x="130.57"/>
</g>
<g>
<title>Row::~Row (26 samples, 0.02%)</title><rect x="441.77944862155397" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(212,116,5)" rx="2" ry="2" _orig_x="544.2" _orig_width="0.2"/>
<text x="444.77944862155397" y="1887.5" _orig_x="547.15"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (161 samples, 0.14%)</title><rect x="33.16624895572258" y="1733" width="3.943191311612364" height="15.0" fill="rgb(209,222,1)" rx="2" ry="2" _orig_x="378.4" _orig_width="1.6"/>
<text x="36.16624895572258" y="1743.5" _orig_x="381.39"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (12 samples, 0.01%)</title><rect x="906.0902255639098" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(241,145,3)" rx="2" ry="2" _orig_x="732.6" _orig_width="0.2"/>
<text x="909.0902255639098" y="1839.5" _orig_x="735.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (15 samples, 0.01%)</title><rect x="374.4987468671678" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(224,5,51)" rx="2" ry="2" _orig_x="516.9" _orig_width="0.2"/>
<text x="377.4987468671678" y="1759.5" _orig_x="519.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="24.8" y="1893" width="0.2" height="15.0" fill="rgb(232,202,20)" rx="2" ry="2"/>
<text x="27.84" y="1903.5"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (47 samples, 0.04%)</title><rect x="777.936507936508" y="1877" width="1.2322472848788637" height="15.0" fill="rgb(239,34,44)" rx="2" ry="2" _orig_x="680.6" _orig_width="0.5"/>
<text x="780.936507936508" y="1887.5" _orig_x="683.63"/>
</g>
<g>
<title>Row::~Row (24 samples, 0.02%)</title><rect x="1154.2648287385127" y="1909" width="0.7393483709273182" height="15.0" fill="rgb(213,17,47)" rx="2" ry="2" _orig_x="833.3" _orig_width="0.3"/>
<text x="1157.2648287385127" y="1919.5" _orig_x="836.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="11.253425229741072" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(215,52,10)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1951.5" _orig_x="32.86"/>
</g>
<g>
<title>LRUReplacer::Unpin (98 samples, 0.08%)</title><rect x="1155.9899749373433" y="1909" width="2.4644945697577274" height="15.0" fill="rgb(249,98,15)" rx="2" ry="2" _orig_x="834.0" _orig_width="1.0"/>
<text x="1158.9899749373433" y="1919.5" _orig_x="837.01"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (18 samples, 0.02%)</title><rect x="622.9197994987469" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(212,196,33)" rx="2" ry="2" _orig_x="617.7" _orig_width="0.2"/>
<text x="625.9197994987469" y="1823.5" _orig_x="620.72"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1317" width="0.31240601503759396" height="15.0" fill="rgb(246,200,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1327.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (52 samples, 0.04%)</title><rect x="176.10693400167077" y="1749" width="1.2322472848788637" height="15.0" fill="rgb(237,126,32)" rx="2" ry="2" _orig_x="436.4" _orig_width="0.5"/>
<text x="179.10693400167077" y="1759.5" _orig_x="439.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="277.2150793650794" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(246,181,0)" rx="2" ry="2" _orig_x="285.3" _orig_width="0.2"/>
<text x="280.2150793650794" y="1903.5" _orig_x="288.27"/>
</g>
<g class="hide">
<title>v8::ValueDeserializer::ReadValue (13 samples, 0.01%)</title><rect x="113.51432748538016" y="1509" width="0.20827067669172933" height="15.0" fill="rgb(206,159,29)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1519.5" _orig_x="131.13"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (309 samples, 0.26%)</title><rect x="824.0225563909772" y="1765" width="7.393483709273183" height="15.0" fill="rgb(236,113,54)" rx="2" ry="2" _orig_x="699.3" _orig_width="3.0"/>
<text x="827.0225563909772" y="1775.5" _orig_x="702.27"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(209,49,44)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1903.5" _orig_x="297.81"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (20 samples, 0.02%)</title><rect x="163.53801169590645" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(206,124,45)" rx="2" ry="2" _orig_x="431.3" _orig_width="0.2"/>
<text x="166.53801169590645" y="1823.5" _orig_x="434.27"/>
</g>
<g class="hide">
<title>[perf-32884.map] (56 samples, 0.05%)</title><rect x="99.03951545530498" y="1493" width="0.6248120300751879" height="15.0" fill="rgb(239,133,31)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1503.5" _orig_x="117.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="277.2150793650794" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(219,162,52)" rx="2" ry="2" _orig_x="285.3" _orig_width="0.2"/>
<text x="280.2150793650794" y="1919.5" _orig_x="288.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (563 samples, 0.47%)</title><rect x="886.09440267335" y="1973" width="5.8315789473684205" height="15.0" fill="rgb(224,205,46)" rx="2" ry="2" _orig_x="870.0" _orig_width="5.6"/>
<text x="889.09440267335" y="1983.5" _orig_x="872.99"/>
</g>
<g>
<title>std::vector&lt;IndexInfo*, std::allocator&lt;IndexInfo*&gt; &gt;::_M_realloc_insert&lt;IndexInfo* const&amp;&gt; (12 samples, 0.01%)</title><rect x="1165.6015037593984" y="1925" width="0.24644945697577275" height="15.0" fill="rgb(241,29,24)" rx="2" ry="2" _orig_x="837.9" _orig_width="0.1"/>
<text x="1168.6015037593984" y="1935.5" _orig_x="840.86"/>
</g>
<g class="hide">
<title>[perf-58119.map] (30 samples, 0.03%)</title><rect x="121.22034252297415" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(250,187,36)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1695.5" _orig_x="138.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (31 samples, 0.03%)</title><rect x="495.2589807852965" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(246,107,20)" rx="2" ry="2" _orig_x="565.9" _orig_width="0.3"/>
<text x="498.2589807852965" y="1775.5" _orig_x="568.94"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (155 samples, 0.13%)</title><rect x="31.9" y="2053" width="1.5" height="15.0" fill="rgb(235,91,18)" rx="2" ry="2"/>
<text x="34.86" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="43.0147034252298" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(251,194,12)" rx="2" ry="2" _orig_x="60.4" _orig_width="0.6"/>
<text x="46.0147034252298" y="1967.5" _orig_x="63.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.15%)</title><rect x="345.11131996658315" y="2037" width="1.874436090225564" height="15.0" fill="rgb(217,183,1)" rx="2" ry="2" _orig_x="350.5" _orig_width="1.8"/>
<text x="348.11131996658315" y="2047.5" _orig_x="353.48"/>
</g>
<g>
<title>Field::Field (15 samples, 0.01%)</title><rect x="94.77861319966577" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(206,173,26)" rx="2" ry="2" _orig_x="403.4" _orig_width="0.1"/>
<text x="97.77861319966577" y="1823.5" _orig_x="406.36"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (195 samples, 0.16%)</title><rect x="309.9289891395154" y="1781" width="4.682539682539682" height="15.0" fill="rgb(219,45,15)" rx="2" ry="2" _orig_x="490.7" _orig_width="1.9"/>
<text x="312.9289891395154" y="1791.5" _orig_x="493.66"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (30 samples, 0.03%)</title><rect x="61.0" y="2053" width="0.3" height="15.0" fill="rgb(210,94,12)" rx="2" ry="2"/>
<text x="63.98" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="131.84214703425232" y="1941" width="0.8330827067669173" height="15.0" fill="rgb(220,205,28)" rx="2" ry="2" _orig_x="145.7" _orig_width="0.8"/>
<text x="134.84214703425232" y="1951.5" _orig_x="148.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (187 samples, 0.16%)</title><rect x="24.582748538011757" y="1877" width="1.9785714285714284" height="15.0" fill="rgb(236,82,46)" rx="2" ry="2" _orig_x="42.7" _orig_width="1.9"/>
<text x="27.582748538011757" y="1887.5" _orig_x="45.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="354.37936507936513" y="2005" width="0.7289473684210526" height="15.0" fill="rgb(233,179,5)" rx="2" ry="2" _orig_x="359.4" _orig_width="0.7"/>
<text x="357.37936507936513" y="2015.5" _orig_x="362.38"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="2021" width="1.7703007518796992" height="15.0" fill="rgb(213,100,48)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="2031.5" _orig_x="292.42"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (16 samples, 0.01%)</title><rect x="919.1520467836257" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(244,201,25)" rx="2" ry="2" _orig_x="737.9" _orig_width="0.1"/>
<text x="922.1520467836257" y="1759.5" _orig_x="740.86"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="124.59899749373432" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(209,119,4)" rx="2" ry="2" _orig_x="415.5" _orig_width="0.1"/>
<text x="127.59899749373432" y="1807.5" _orig_x="418.46"/>
</g>
<g class="hide">
<title>[unknown] (17 samples, 0.01%)</title><rect x="10.316207184628293" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(230,219,43)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1759.5" _orig_x="32.02"/>
</g>
<g class="hide">
<title>v8::internal::HandleScope::Extend (18 samples, 0.02%)</title><rect x="201.61282372598166" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(216,86,32)" rx="2" ry="2" _orig_x="212.7" _orig_width="0.2"/>
<text x="204.61282372598166" y="1711.5" _orig_x="215.68"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (13 samples, 0.01%)</title><rect x="229.83291562238927" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(240,31,25)" rx="2" ry="2" _orig_x="458.2" _orig_width="0.2"/>
<text x="232.83291562238927" y="1743.5" _orig_x="461.23"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (39 samples, 0.03%)</title><rect x="1078.6048454469508" y="1781" width="0.985797827903091" height="15.0" fill="rgb(225,115,36)" rx="2" ry="2" _orig_x="802.6" _orig_width="0.4"/>
<text x="1081.6048454469508" y="1791.5" _orig_x="805.56"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (882 samples, 0.74%)</title><rect x="21.82957393483712" y="1781" width="21.441102756892228" height="15.0" fill="rgb(217,147,42)" rx="2" ry="2" _orig_x="373.8" _orig_width="8.7"/>
<text x="24.82957393483712" y="1791.5" _orig_x="376.79">s..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (23 samples, 0.02%)</title><rect x="811.2071846282373" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(223,220,40)" rx="2" ry="2" _orig_x="694.1" _orig_width="0.2"/>
<text x="814.2071846282373" y="1759.5" _orig_x="697.12"/>
</g>
<g class="hide">
<title>__poll (37 samples, 0.03%)</title><rect x="46.7" y="2053" width="0.4" height="15.0" fill="rgb(241,131,44)" rx="2" ry="2"/>
<text x="49.74" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="10.836883876357616" y="69" width="0.20827067669172933" height="15.0" fill="rgb(250,20,31)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="79.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-32884.map] (58 samples, 0.05%)</title><rect x="99.03951545530498" y="1525" width="0.6248120300751879" height="15.0" fill="rgb(226,165,52)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1535.5" _orig_x="117.19"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1509" width="0.31240601503759396" height="15.0" fill="rgb(254,52,37)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1519.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="709" width="0.31240601503759396" height="15.0" fill="rgb(253,141,0)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="719.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.05%)</title><rect x="54.78199665831251" y="1765" width="0.7289473684210526" height="15.0" fill="rgb(214,158,2)" rx="2" ry="2" _orig_x="71.7" _orig_width="0.7"/>
<text x="57.78199665831251" y="1775.5" _orig_x="74.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.11%)</title><rect x="72.90154553049294" y="2005" width="1.2496240601503759" height="15.0" fill="rgb(216,195,17)" rx="2" ry="2" _orig_x="89.1" _orig_width="1.2"/>
<text x="75.90154553049294" y="2015.5" _orig_x="92.07"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (21 samples, 0.02%)</title><rect x="755.7560568086884" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(231,223,15)" rx="2" ry="2" _orig_x="671.6" _orig_width="0.2"/>
<text x="758.7560568086884" y="1823.5" _orig_x="674.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="124.34440267335009" y="949" width="0.10413533834586466" height="15.0" fill="rgb(234,217,49)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="959.5" _orig_x="141.50"/>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertDown (27,667 samples, 23.27%)</title><rect x="15.914786967418486" y="1909" width="676.750208855472" height="15.0" fill="rgb(213,211,20)" rx="2" ry="2" _orig_x="371.4" _orig_width="274.6"/>
<text x="18.914786967418486" y="1919.5" _orig_x="374.45">BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertDown </text>
</g>
<g class="hide">
<title>_nv022966rm (18 samples, 0.02%)</title><rect x="1182.9" y="2053" width="0.1" height="15.0" fill="rgb(224,183,4)" rx="2" ry="2"/>
<text x="1185.86" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (13 samples, 0.01%)</title><rect x="584.7201336675022" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(252,133,19)" rx="2" ry="2" _orig_x="602.2" _orig_width="0.1"/>
<text x="587.7201336675022" y="1759.5" _orig_x="605.15"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (922 samples, 0.78%)</title><rect x="504.13116123642436" y="1813" width="22.67335004177109" height="15.0" fill="rgb(210,165,29)" rx="2" ry="2" _orig_x="569.5" _orig_width="9.2"/>
<text x="507.13116123642436" y="1823.5" _orig_x="572.53">s..</text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (15 samples, 0.01%)</title><rect x="273.70091896407683" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(236,107,16)" rx="2" ry="2" _orig_x="476.0" _orig_width="0.1"/>
<text x="276.70091896407683" y="1759.5" _orig_x="478.99"/>
</g>
<g>
<title>operator new (17 samples, 0.01%)</title><rect x="527.7903091060987" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(237,150,5)" rx="2" ry="2" _orig_x="579.1" _orig_width="0.1"/>
<text x="530.7903091060987" y="1855.5" _orig_x="582.05"/>
</g>
<g class="hide">
<title>read (34 samples, 0.03%)</title><rect x="83.1068086883877" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(228,110,22)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="2047.5" _orig_x="101.86"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="661" width="0.31240601503759396" height="15.0" fill="rgb(210,210,21)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="671.5" _orig_x="99.72"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (13 samples, 0.01%)</title><rect x="345.9106098579783" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(252,18,46)" rx="2" ry="2" _orig_x="505.3" _orig_width="0.2"/>
<text x="348.9106098579783" y="1711.5" _orig_x="508.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (329 samples, 0.28%)</title><rect x="104.8710944026734" y="1861" width="3.4364661654135333" height="15.0" fill="rgb(213,191,39)" rx="2" ry="2" _orig_x="119.8" _orig_width="3.3"/>
<text x="107.8710944026734" y="1871.5" _orig_x="122.79"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (16 samples, 0.01%)</title><rect x="455.08771929824564" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(239,42,38)" rx="2" ry="2" _orig_x="549.6" _orig_width="0.1"/>
<text x="458.08771929824564" y="1743.5" _orig_x="552.55"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (76 samples, 0.06%)</title><rect x="582.7485380116958" y="1749" width="1.971595655806182" height="15.0" fill="rgb(247,44,43)" rx="2" ry="2" _orig_x="601.4" _orig_width="0.8"/>
<text x="585.7485380116958" y="1759.5" _orig_x="604.40"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (53 samples, 0.04%)</title><rect x="409.4945697577277" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(224,188,32)" rx="2" ry="2" _orig_x="531.1" _orig_width="0.5"/>
<text x="412.4945697577277" y="1839.5" _orig_x="534.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (279 samples, 0.23%)</title><rect x="236.2898913951546" y="2021" width="2.9157894736842103" height="15.0" fill="rgb(239,120,30)" rx="2" ry="2" _orig_x="246.0" _orig_width="2.8"/>
<text x="239.2898913951546" y="2031.5" _orig_x="248.98"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="85" width="0.31240601503759396" height="15.0" fill="rgb(251,25,36)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="95.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="934.1007936507937" y="1989" width="0.6248120300751879" height="15.0" fill="rgb(254,102,19)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="1999.5" _orig_x="919.10"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1125" width="0.20827067669172933" height="15.0" fill="rgb(232,140,31)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1135.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="613" width="0.31240601503759396" height="15.0" fill="rgb(222,40,4)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="623.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (201 samples, 0.17%)</title><rect x="240.24703425229748" y="1925" width="2.082706766917293" height="15.0" fill="rgb(235,2,7)" rx="2" ry="2" _orig_x="249.8" _orig_width="2.0"/>
<text x="243.24703425229748" y="1935.5" _orig_x="252.77"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (80 samples, 0.07%)</title><rect x="215.0459482038429" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(251,40,2)" rx="2" ry="2" _orig_x="452.2" _orig_width="0.7"/>
<text x="218.0459482038429" y="1759.5" _orig_x="455.15"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate (13 samples, 0.01%)</title><rect x="1118.7761069340015" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(234,21,34)" rx="2" ry="2" _orig_x="818.9" _orig_width="0.1"/>
<text x="1121.7761069340015" y="1759.5" _orig_x="821.92"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (12 samples, 0.01%)</title><rect x="1100.5388471177944" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(222,71,30)" rx="2" ry="2" _orig_x="811.5" _orig_width="0.1"/>
<text x="1103.5388471177944" y="1839.5" _orig_x="814.48"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (14 samples, 0.01%)</title><rect x="1177.9239766081869" y="1925" width="0.24644945697577275" height="15.0" fill="rgb(210,104,51)" rx="2" ry="2" _orig_x="842.9" _orig_width="0.1"/>
<text x="1180.9239766081869" y="1935.5" _orig_x="845.91"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="325" width="0.20827067669172933" height="15.0" fill="rgb(233,144,16)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="335.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[vdso]] (367 samples, 0.31%)</title><rect x="309.80944026733505" y="2037" width="3.748872180451128" height="15.0" fill="rgb(206,42,3)" rx="2" ry="2" _orig_x="316.6" _orig_width="3.6"/>
<text x="312.80944026733505" y="2047.5" _orig_x="319.59"/>
</g>
<g class="hide">
<title>[perf-32996.map] (96 samples, 0.08%)</title><rect x="17.5" y="1589" width="0.9" height="15.0" fill="rgb(222,139,22)" rx="2" ry="2"/>
<text x="20.47" y="1599.5"/>
</g>
<g class="hide">
<title>[chrome] (41 samples, 0.03%)</title><rect x="11.5" y="1877" width="0.4" height="15.0" fill="rgb(206,36,21)" rx="2" ry="2"/>
<text x="14.49" y="1887.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (30 samples, 0.03%)</title><rect x="300.563909774436" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(206,92,25)" rx="2" ry="2" _orig_x="486.9" _orig_width="0.3"/>
<text x="303.563909774436" y="1839.5" _orig_x="489.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.08%)</title><rect x="903.2767335004178" y="1909" width="0.937218045112782" height="15.0" fill="rgb(244,198,21)" rx="2" ry="2" _orig_x="886.5" _orig_width="0.9"/>
<text x="906.2767335004178" y="1919.5" _orig_x="889.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="117" width="0.20827067669172933" height="15.0" fill="rgb(221,27,51)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="127.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.13%)</title><rect x="53.94891395154559" y="1973" width="1.5620300751879699" height="15.0" fill="rgb(251,1,6)" rx="2" ry="2" _orig_x="70.9" _orig_width="1.5"/>
<text x="56.94891395154559" y="1983.5" _orig_x="73.86"/>
</g>
<g class="hide">
<title>base::ConditionVariable::TimedWait (14 samples, 0.01%)</title><rect x="171.83011695906438" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(237,13,23)" rx="2" ry="2" _orig_x="184.1" _orig_width="0.2"/>
<text x="174.83011695906438" y="1807.5" _orig_x="187.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="22.6" y="1957" width="0.2" height="15.0" fill="rgb(205,162,11)" rx="2" ry="2"/>
<text x="25.59" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (204 samples, 0.17%)</title><rect x="279.3" y="2053" width="2.0" height="15.0" fill="rgb(218,161,8)" rx="2" ry="2"/>
<text x="282.32" y="2063.5"/>
</g>
<g class="hide">
<title>__GI___getdents64 (28 samples, 0.02%)</title><rect x="915.7" y="2053" width="0.2" height="15.0" fill="rgb(235,61,42)" rx="2" ry="2"/>
<text x="918.65" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (35 samples, 0.03%)</title><rect x="275.4260651629072" y="1797" width="0.985797827903091" height="15.0" fill="rgb(211,57,51)" rx="2" ry="2" _orig_x="476.7" _orig_width="0.4"/>
<text x="278.4260651629072" y="1807.5" _orig_x="479.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.12%)</title><rect x="13.440267335004233" y="1973" width="1.4578947368421051" height="15.0" fill="rgb(211,204,3)" rx="2" ry="2" _orig_x="32.0" _orig_width="1.4"/>
<text x="16.440267335004233" y="1983.5" _orig_x="35.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (438 samples, 0.37%)</title><rect x="103.7256056808689" y="1893" width="4.581954887218045" height="15.0" fill="rgb(250,222,15)" rx="2" ry="2" _orig_x="118.7" _orig_width="4.4"/>
<text x="106.7256056808689" y="1903.5" _orig_x="121.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (329 samples, 0.28%)</title><rect x="99.70760233918122" y="1749" width="7.886382623224728" height="15.0" fill="rgb(226,6,53)" rx="2" ry="2" _orig_x="405.4" _orig_width="3.2"/>
<text x="102.70760233918122" y="1759.5" _orig_x="408.38"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (30 samples, 0.03%)</title><rect x="483.4294068504595" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(235,119,9)" rx="2" ry="2" _orig_x="561.1" _orig_width="0.3"/>
<text x="486.4294068504595" y="1775.5" _orig_x="564.09"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (58 samples, 0.05%)</title><rect x="492.0551378446115" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(212,46,47)" rx="2" ry="2" _orig_x="564.6" _orig_width="0.6"/>
<text x="495.0551378446115" y="1807.5" _orig_x="567.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="90.60455304928993" y="1797" width="0.41654135338345866" height="15.0" fill="rgb(253,226,14)" rx="2" ry="2" _orig_x="106.1" _orig_width="0.4"/>
<text x="93.60455304928993" y="1807.5" _orig_x="109.07"/>
</g>
<g class="hide">
<title>[code] (27 samples, 0.02%)</title><rect x="12.7" y="1797" width="0.2" height="15.0" fill="rgb(209,150,30)" rx="2" ry="2"/>
<text x="15.66" y="1807.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (19 samples, 0.02%)</title><rect x="400.375939849624" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(251,118,11)" rx="2" ry="2" _orig_x="527.4" _orig_width="0.1"/>
<text x="403.375939849624" y="1791.5" _orig_x="530.36"/>
</g>
<g class="hide">
<title>__strlen_avx2 (58 samples, 0.05%)</title><rect x="899.4237259816207" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(208,105,29)" rx="2" ry="2" _orig_x="882.8" _orig_width="0.6"/>
<text x="902.4237259816207" y="2047.5" _orig_x="885.82"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (25 samples, 0.02%)</title><rect x="1054.6992481203006" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(225,49,38)" rx="2" ry="2" _orig_x="792.9" _orig_width="0.3"/>
<text x="1057.6992481203006" y="1839.5" _orig_x="795.95"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (120 samples, 0.10%)</title><rect x="726.675020885547" y="1813" width="2.957393483709273" height="15.0" fill="rgb(223,17,52)" rx="2" ry="2" _orig_x="659.8" _orig_width="1.2"/>
<text x="729.675020885547" y="1823.5" _orig_x="662.79"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="113.51432748538016" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(229,133,44)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1535.5" _orig_x="131.12"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (41 samples, 0.03%)</title><rect x="336.0526315789474" y="1733" width="0.985797827903091" height="15.0" fill="rgb(245,224,20)" rx="2" ry="2" _orig_x="501.3" _orig_width="0.4"/>
<text x="339.0526315789474" y="1743.5" _orig_x="504.34"/>
</g>
<g class="hide">
<title>Watcher::notify (11 samples, 0.01%)</title><rect x="154.6477861319967" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(233,125,0)" rx="2" ry="2" _orig_x="167.6" _orig_width="0.1"/>
<text x="157.6477861319967" y="1999.5" _orig_x="170.63"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (15 samples, 0.01%)</title><rect x="149.2439431913116" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(247,84,52)" rx="2" ry="2" _orig_x="425.5" _orig_width="0.1"/>
<text x="152.2439431913116" y="1807.5" _orig_x="428.49"/>
</g>
<g class="hide">
<title>[perf-32996.map] (92 samples, 0.08%)</title><rect x="17.5" y="1573" width="0.9" height="15.0" fill="rgb(242,205,40)" rx="2" ry="2"/>
<text x="20.51" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="13.8" y="2005" width="0.2" height="15.0" fill="rgb(231,207,38)" rx="2" ry="2"/>
<text x="16.76" y="2015.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (29 samples, 0.02%)</title><rect x="722.7318295739349" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(253,124,7)" rx="2" ry="2" _orig_x="658.2" _orig_width="0.3"/>
<text x="725.7318295739349" y="1807.5" _orig_x="661.23"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (37 samples, 0.03%)</title><rect x="818.3542188805346" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(247,132,5)" rx="2" ry="2" _orig_x="697.0" _orig_width="0.3"/>
<text x="821.3542188805346" y="1743.5" _orig_x="699.98"/>
</g>
<g class="hide">
<title>[perf-9366.map] (14 samples, 0.01%)</title><rect x="10.42034252297416" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(236,204,25)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1711.5" _orig_x="32.05"/>
</g>
<g class="hide">
<title>[libjvm.so] (34 samples, 0.03%)</title><rect x="43.951921470342576" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(250,4,8)" rx="2" ry="2" _orig_x="61.3" _orig_width="0.3"/>
<text x="46.951921470342576" y="2015.5" _orig_x="64.28"/>
</g>
<g>
<title>[libminisql_shared.so] (17 samples, 0.01%)</title><rect x="970.4135338345865" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(216,120,38)" rx="2" ry="2" _orig_x="758.7" _orig_width="0.2"/>
<text x="973.4135338345865" y="1807.5" _orig_x="761.75"/>
</g>
<g class="hide">
<title>rcu_sched (93 samples, 0.08%)</title><rect x="913.8" y="2069" width="1.0" height="15.0" fill="rgb(205,123,51)" rx="2" ry="2"/>
<text x="916.83" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="320.43124477861323" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(219,138,46)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="1935.5" _orig_x="329.85"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (19 samples, 0.02%)</title><rect x="843.2456140350877" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(240,109,1)" rx="2" ry="2" _orig_x="707.1" _orig_width="0.2"/>
<text x="846.2456140350877" y="1807.5" _orig_x="710.11"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (29 samples, 0.02%)</title><rect x="1141.6959064327486" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(246,213,53)" rx="2" ry="2" _orig_x="828.2" _orig_width="0.3"/>
<text x="1144.6959064327486" y="1887.5" _orig_x="831.19"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (28 samples, 0.02%)</title><rect x="493.5338345864663" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(210,214,40)" rx="2" ry="2" _orig_x="565.2" _orig_width="0.3"/>
<text x="496.5338345864663" y="1807.5" _orig_x="568.18"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (35 samples, 0.03%)</title><rect x="1065.5430242272346" y="1797" width="0.985797827903091" height="15.0" fill="rgb(234,176,46)" rx="2" ry="2" _orig_x="797.3" _orig_width="0.4"/>
<text x="1068.5430242272346" y="1807.5" _orig_x="800.32"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="146.21282372598168" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(250,62,20)" rx="2" ry="2" _orig_x="159.5" _orig_width="0.1"/>
<text x="149.21282372598168" y="1951.5" _orig_x="162.50"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (2,058 samples, 1.73%)</title><rect x="169.94569757727646" y="1845" width="50.27568922305764" height="15.0" fill="rgb(226,113,37)" rx="2" ry="2" _orig_x="433.9" _orig_width="20.4"/>
<text x="172.94569757727646" y="1855.5" _orig_x="436.88">Gener..</text>
</g>
<g class="hide">
<title>[perf-32996.map] (116 samples, 0.10%)</title><rect x="17.3" y="1717" width="1.1" height="15.0" fill="rgb(219,1,21)" rx="2" ry="2"/>
<text x="20.27" y="1727.5"/>
</g>
<g class="hide">
<title>__poll (58 samples, 0.05%)</title><rect x="280.13086883876366" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(223,55,25)" rx="2" ry="2" _orig_x="288.1" _orig_width="0.6"/>
<text x="283.13086883876366" y="2047.5" _orig_x="291.15"/>
</g>
<g class="hide">
<title>g_type_check_instance_cast (40 samples, 0.03%)</title><rect x="306.789515455305" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(238,126,24)" rx="2" ry="2" _orig_x="313.7" _orig_width="0.4"/>
<text x="309.789515455305" y="2047.5" _orig_x="316.68"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="565" width="0.31240601503759396" height="15.0" fill="rgb(246,228,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="575.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(238,15,4)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1935.5" _orig_x="328.48"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (12 samples, 0.01%)</title><rect x="1056.1779448621555" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(254,103,1)" rx="2" ry="2" _orig_x="793.5" _orig_width="0.1"/>
<text x="1059.1779448621555" y="1839.5" _orig_x="796.52"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="997" width="0.20827067669172933" height="15.0" fill="rgb(239,160,46)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1007.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="153.2940267335005" y="1701" width="0.8330827067669173" height="15.0" fill="rgb(243,77,52)" rx="2" ry="2" _orig_x="166.3" _orig_width="0.8"/>
<text x="156.2940267335005" y="1711.5" _orig_x="169.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="16.35605680868844" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(209,50,10)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1983.5" _orig_x="37.78"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (12 samples, 0.01%)</title><rect x="31.93400167084372" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(222,187,52)" rx="2" ry="2" _orig_x="377.9" _orig_width="0.2"/>
<text x="34.93400167084372" y="1743.5" _orig_x="380.95"/>
</g>
<g class="hide">
<title>[[vdso]] (28 samples, 0.02%)</title><rect x="323.4511695906433" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(210,102,14)" rx="2" ry="2" _orig_x="329.7" _orig_width="0.3"/>
<text x="326.4511695906433" y="2047.5" _orig_x="332.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.09%)</title><rect x="141.31846282372604" y="1925" width="1.1454887218045113" height="15.0" fill="rgb(211,126,35)" rx="2" ry="2" _orig_x="154.8" _orig_width="1.1"/>
<text x="144.31846282372604" y="1935.5" _orig_x="157.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (941 samples, 0.79%)</title><rect x="258.36658312447787" y="1957" width="9.684586466165413" height="15.0" fill="rgb(205,210,14)" rx="2" ry="2" _orig_x="267.2" _orig_width="9.3"/>
<text x="261.36658312447787" y="1967.5" _orig_x="270.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="19.896658312447844" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(219,136,8)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1823.5" _orig_x="41.20"/>
</g>
<g>
<title>[libstdc++.so.6.0.28] (14 samples, 0.01%)</title><rect x="1140.217209690894" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(216,217,42)" rx="2" ry="2" _orig_x="827.6" _orig_width="0.1"/>
<text x="1143.217209690894" y="1887.5" _orig_x="830.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="124.24026733500423" y="1157" width="0.20827067669172933" height="15.0" fill="rgb(233,182,31)" rx="2" ry="2" _orig_x="138.4" _orig_width="0.2"/>
<text x="127.24026733500423" y="1167.5" _orig_x="141.35"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(240,120,31)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="2031.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>pa_memblockq_prebuf_active (19 samples, 0.02%)</title><rect x="71.23538011695912" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(244,213,12)" rx="2" ry="2" _orig_x="87.5" _orig_width="0.2"/>
<text x="74.23538011695912" y="2047.5" _orig_x="90.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.04%)</title><rect x="1162.78379462495" y="2005" width="1.183313277176093" height="15.0" fill="rgb(206,92,35)" rx="2" ry="2" _orig_x="848.2" _orig_width="0.5"/>
<text x="1165.78379462495" y="2015.5" _orig_x="851.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="30.41432748538017" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(219,7,16)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1903.5" _orig_x="51.34"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="10.316207184628293" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(233,138,33)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1919.5" _orig_x="31.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="28.8522974101922" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(212,180,39)" rx="2" ry="2" _orig_x="46.8" _orig_width="0.3"/>
<text x="31.8522974101922" y="1999.5" _orig_x="49.78"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="821" width="0.31240601503759396" height="15.0" fill="rgb(206,170,23)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="831.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>std::multimap&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::shared_ptr&lt;wukong::Timer::TimerEvent&gt;, std::less&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const, std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt; &gt; &gt;::upper_bound (18 samples, 0.02%)</title><rect x="18.959440267335054" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(212,77,25)" rx="2" ry="2" _orig_x="37.3" _orig_width="0.1"/>
<text x="21.959440267335054" y="1887.5" _orig_x="40.27"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (13 samples, 0.01%)</title><rect x="890.3174603174604" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(211,186,18)" rx="2" ry="2" _orig_x="726.2" _orig_width="0.1"/>
<text x="893.3174603174604" y="1791.5" _orig_x="729.22"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (31 samples, 0.03%)</title><rect x="1171.516290726817" y="1893" width="0.7393483709273182" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" _orig_x="840.3" _orig_width="0.3"/>
<text x="1174.516290726817" y="1903.5" _orig_x="843.33"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="1989" width="0.6" height="15.0" fill="rgb(227,153,18)" rx="2" ry="2"/>
<text x="17.02" y="1999.5"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (66 samples, 0.06%)</title><rect x="777.936507936508" y="1893" width="1.7251461988304093" height="15.0" fill="rgb(231,19,46)" rx="2" ry="2" _orig_x="680.6" _orig_width="0.7"/>
<text x="780.936507936508" y="1903.5" _orig_x="683.63"/>
</g>
<g class="hide">
<title>[unknown] (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="2021" width="55.81654135338346" height="15.0" fill="rgb(251,99,27)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="2031.5" _orig_x="185.47">[unknown] </text>
</g>
<g class="hide">
<title>[chrome] (11 samples, 0.01%)</title><rect x="92.27071846282378" y="1589" width="0.10413533834586466" height="15.0" fill="rgb(207,118,14)" rx="2" ry="2" _orig_x="107.7" _orig_width="0.1"/>
<text x="95.27071846282378" y="1599.5" _orig_x="110.70"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (60 samples, 0.05%)</title><rect x="286.48312447786134" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(220,76,24)" rx="2" ry="2" _orig_x="294.2" _orig_width="0.6"/>
<text x="289.48312447786134" y="1951.5" _orig_x="297.22"/>
</g>
<g class="hide">
<title>base::RepeatingTimer::RunUserTask (16 samples, 0.01%)</title><rect x="174.01695906432752" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(216,145,29)" rx="2" ry="2" _orig_x="186.2" _orig_width="0.2"/>
<text x="177.01695906432752" y="1775.5" _orig_x="189.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (95 samples, 0.08%)</title><rect x="454.3483709273182" y="1765" width="2.218045112781955" height="15.0" fill="rgb(242,52,23)" rx="2" ry="2" _orig_x="549.3" _orig_width="0.9"/>
<text x="457.3483709273182" y="1775.5" _orig_x="552.26"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::Allocate&lt;blink::IDLDictionaryBase&gt; (42 samples, 0.04%)</title><rect x="189.94966583124483" y="1445" width="0.41654135338345866" height="15.0" fill="rgb(210,38,40)" rx="2" ry="2" _orig_x="201.5" _orig_width="0.4"/>
<text x="192.94966583124483" y="1455.5" _orig_x="204.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="1957" width="0.4733253108704372" height="15.0" fill="rgb(205,216,53)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1967.5" _orig_x="371.76"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (53 samples, 0.04%)</title><rect x="929.5029239766081" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(245,27,46)" rx="2" ry="2" _orig_x="742.1" _orig_width="0.5"/>
<text x="932.5029239766081" y="1807.5" _orig_x="745.10"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="885.5737259816208" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(213,96,9)" rx="2" ry="2" _orig_x="869.5" _orig_width="0.2"/>
<text x="888.5737259816208" y="2031.5" _orig_x="872.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1333" width="0.31240601503759396" height="15.0" fill="rgb(251,160,17)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1343.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="114.00167084377607" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(244,188,54)" rx="2" ry="2" _orig_x="411.2" _orig_width="0.1"/>
<text x="117.00167084377607" y="1759.5" _orig_x="414.17"/>
</g>
<g class="hide">
<title>[unknown] (50 samples, 0.04%)</title><rect x="27.81094402673355" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(247,43,53)" rx="2" ry="2" _orig_x="45.8" _orig_width="0.4"/>
<text x="30.81094402673355" y="2047.5" _orig_x="48.75"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (430 samples, 0.36%)</title><rect x="822.543859649123" y="1781" width="10.597326649958228" height="15.0" fill="rgb(243,28,7)" rx="2" ry="2" _orig_x="698.7" _orig_width="4.3"/>
<text x="825.543859649123" y="1791.5" _orig_x="701.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="20.1" y="1925" width="0.2" height="15.0" fill="rgb(232,174,8)" rx="2" ry="2"/>
<text x="23.14" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1749" width="2.2909774436090227" height="15.0" fill="rgb(211,59,8)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1759.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="43.0147034252298" y="1989" width="0.6248120300751879" height="15.0" fill="rgb(213,77,5)" rx="2" ry="2" _orig_x="60.4" _orig_width="0.6"/>
<text x="46.0147034252298" y="1999.5" _orig_x="63.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="131.321470342523" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(245,121,27)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1903.5" _orig_x="148.18"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (556 samples, 0.47%)</title><rect x="70.13366750208849" y="1813" width="13.554720133667502" height="15.0" fill="rgb(238,192,8)" rx="2" ry="2" _orig_x="393.4" _orig_width="5.5"/>
<text x="73.13366750208849" y="1823.5" _orig_x="396.36"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(217,120,32)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1887.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="933.3718462823726" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(218,62,28)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1967.5" _orig_x="918.41"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.06%)</title><rect x="17.7" y="1445" width="0.7" height="15.0" fill="rgb(253,11,12)" rx="2" ry="2"/>
<text x="20.73" y="1455.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="83.1068086883877" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(230,117,20)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1871.5" _orig_x="101.91"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (86 samples, 0.07%)</title><rect x="560.8145363408521" y="1829" width="2.218045112781955" height="15.0" fill="rgb(229,167,12)" rx="2" ry="2" _orig_x="592.5" _orig_width="0.9"/>
<text x="563.8145363408521" y="1839.5" _orig_x="595.50"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl (441 samples, 0.37%)</title><rect x="162.87447786132003" y="1813" width="4.581954887218045" height="15.0" fill="rgb(246,35,22)" rx="2" ry="2" _orig_x="175.5" _orig_width="4.4"/>
<text x="165.87447786132003" y="1823.5" _orig_x="178.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (134 samples, 0.11%)</title><rect x="928.8940267335005" y="1813" width="1.4578947368421051" height="15.0" fill="rgb(248,199,32)" rx="2" ry="2" _orig_x="911.1" _orig_width="1.4"/>
<text x="931.8940267335005" y="1823.5" _orig_x="914.13"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="677" width="2.2909774436090227" height="15.0" fill="rgb(207,35,40)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="687.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.147786131996714" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(208,62,2)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="1983.5" _orig_x="37.57"/>
</g>
<g class="hide">
<title>[code] (31 samples, 0.03%)</title><rect x="99.8725981620719" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(213,154,1)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1951.5" _orig_x="117.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.13%)</title><rect x="53.844778613199715" y="1989" width="1.6661654135338346" height="15.0" fill="rgb(244,117,2)" rx="2" ry="2" _orig_x="70.8" _orig_width="1.6"/>
<text x="56.844778613199715" y="1999.5" _orig_x="73.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,290 samples, 3.61%)</title><rect x="1166.218462823726" y="1893" width="44.36165413533835" height="15.0" fill="rgb(230,133,2)" rx="2" ry="2" _orig_x="1139.0" _orig_width="42.6"/>
<text x="1169.218462823726" y="1903.5" _orig_x="1142.01">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="1941" width="0.5" height="15.0" fill="rgb(232,132,44)" rx="2" ry="2"/>
<text x="17.63" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11 samples, 0.01%)</title><rect x="1159.4402673350041" y="1925" width="0.24644945697577275" height="15.0" fill="rgb(244,129,13)" rx="2" ry="2" _orig_x="835.4" _orig_width="0.1"/>
<text x="1162.4402673350041" y="1935.5" _orig_x="838.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="19.896658312447844" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(209,49,36)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1839.5" _orig_x="41.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="349.9" y="2053" width="0.6" height="15.0" fill="rgb(234,89,8)" rx="2" ry="2"/>
<text x="352.92" y="2063.5"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (5,536 samples, 4.66%)</title><rect x="956.3659147869673" y="1893" width="135.30075187969925" height="15.0" fill="rgb(242,7,2)" rx="2" ry="2" _orig_x="753.0" _orig_width="54.9"/>
<text x="959.3659147869673" y="1903.5" _orig_x="755.97">GenericKey&lt;32ul&gt;..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="355.73312447786134" y="1845" width="0.41654135338345866" height="15.0" fill="rgb(229,15,27)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1855.5" _orig_x="363.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.04%)</title><rect x="328.44966583124483" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(214,162,35)" rx="2" ry="2" _orig_x="334.5" _orig_width="0.5"/>
<text x="331.44966583124483" y="1999.5" _orig_x="337.46"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="1973" width="1.7703007518796992" height="15.0" fill="rgb(249,68,32)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="1983.5" _orig_x="292.42"/>
</g>
<g class="hide">
<title>EventList::update (23 samples, 0.02%)</title><rect x="146.4210944026734" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(241,123,53)" rx="2" ry="2" _orig_x="159.7" _orig_width="0.2"/>
<text x="149.4210944026734" y="1967.5" _orig_x="162.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="22.1" y="1765" width="0.1" height="15.0" fill="rgb(254,87,40)" rx="2" ry="2"/>
<text x="25.11" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="188.17936507936514" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(217,27,28)" rx="2" ry="2" _orig_x="199.8" _orig_width="0.2"/>
<text x="191.17936507936514" y="1407.5" _orig_x="202.81"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (18 samples, 0.02%)</title><rect x="876.0233918128654" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(225,130,11)" rx="2" ry="2" _orig_x="720.4" _orig_width="0.2"/>
<text x="879.0233918128654" y="1807.5" _orig_x="723.40"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (37 samples, 0.03%)</title><rect x="825.2548036758561" y="1749" width="0.985797827903091" height="15.0" fill="rgb(247,28,13)" rx="2" ry="2" _orig_x="699.8" _orig_width="0.4"/>
<text x="828.2548036758561" y="1759.5" _orig_x="702.80"/>
</g>
<g>
<title>std::_Destroy&lt;Field**&gt; (11 samples, 0.01%)</title><rect x="936.8964076858814" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(253,66,42)" rx="2" ry="2" _orig_x="745.1" _orig_width="0.1"/>
<text x="939.8964076858814" y="1839.5" _orig_x="748.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="934.1007936507937" y="1925" width="0.6248120300751879" height="15.0" fill="rgb(207,222,30)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="1935.5" _orig_x="919.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.10%)</title><rect x="902.9643274853802" y="1989" width="1.2496240601503759" height="15.0" fill="rgb(218,98,25)" rx="2" ry="2" _orig_x="886.2" _orig_width="1.2"/>
<text x="905.9643274853802" y="1999.5" _orig_x="889.21"/>
</g>
<g class="hide">
<title>runtime.findrunnable (44 samples, 0.04%)</title><rect x="270.2380116959065" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(240,180,52)" rx="2" ry="2" _orig_x="278.6" _orig_width="0.4"/>
<text x="273.2380116959065" y="1951.5" _orig_x="281.60"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="27.602673350041826" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(214,196,35)" rx="2" ry="2" _orig_x="45.6" _orig_width="0.2"/>
<text x="30.602673350041826" y="2031.5" _orig_x="48.64"/>
</g>
<g class="hide">
<title>[perf-58119.map] (12 samples, 0.01%)</title><rect x="120.80380116959068" y="1365" width="0.20827067669172933" height="15.0" fill="rgb(226,125,12)" rx="2" ry="2" _orig_x="135.1" _orig_width="0.2"/>
<text x="123.80380116959068" y="1375.5" _orig_x="138.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="275.6725146198831" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(222,1,46)" rx="2" ry="2" _orig_x="476.8" _orig_width="0.3"/>
<text x="278.6725146198831" y="1791.5" _orig_x="479.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="131.21733500417716" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(247,28,48)" rx="2" ry="2" _orig_x="145.1" _orig_width="0.3"/>
<text x="134.21733500417716" y="1951.5" _orig_x="148.13"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.05%)</title><rect x="24.4" y="2053" width="0.6" height="15.0" fill="rgb(222,219,45)" rx="2" ry="2"/>
<text x="27.37" y="2063.5"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="234.76190476190473" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(244,194,37)" rx="2" ry="2" _orig_x="460.2" _orig_width="0.1"/>
<text x="237.76190476190473" y="1695.5" _orig_x="463.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="19.167710944026787" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(223,24,10)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="1999.5" _orig_x="40.52"/>
</g>
<g class="hide">
<title>uv_run (1,035 samples, 0.87%)</title><rect x="122.05342522974108" y="2005" width="10.621804511278194" height="15.0" fill="rgb(236,83,21)" rx="2" ry="2" _orig_x="136.3" _orig_width="10.2"/>
<text x="125.05342522974108" y="2015.5" _orig_x="139.26"/>
</g>
<g class="hide">
<title>snd_pcm_ioctl (263 samples, 0.22%)</title><rect x="67.48650793650799" y="1973" width="2.707518796992481" height="15.0" fill="rgb(250,92,35)" rx="2" ry="2" _orig_x="83.9" _orig_width="2.6"/>
<text x="70.48650793650799" y="1983.5" _orig_x="86.90"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (13 samples, 0.01%)</title><rect x="16.147786131996714" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(212,145,54)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="2047.5" _orig_x="37.57"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1221" width="0.31240601503759396" height="15.0" fill="rgb(254,152,41)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1231.5" _orig_x="48.87"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,214 samples, 1.02%)</title><rect x="904.6115288220551" y="1861" width="29.573934837092732" height="15.0" fill="rgb(205,110,34)" rx="2" ry="2" _orig_x="732.0" _orig_width="12.0"/>
<text x="907.6115288220551" y="1871.5" _orig_x="734.96">S..</text>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="931.9674185463659" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(209,68,6)" rx="2" ry="2" _orig_x="743.1" _orig_width="0.2"/>
<text x="934.9674185463659" y="1855.5" _orig_x="746.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (231 samples, 0.19%)</title><rect x="88.62598162071852" y="1877" width="2.3951127819548867" height="15.0" fill="rgb(232,228,41)" rx="2" ry="2" _orig_x="104.2" _orig_width="2.3"/>
<text x="91.62598162071852" y="1887.5" _orig_x="107.25"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (11 samples, 0.01%)</title><rect x="513.7426900584794" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(219,3,10)" rx="2" ry="2" _orig_x="573.4" _orig_width="0.1"/>
<text x="516.7426900584794" y="1791.5" _orig_x="576.40"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (16 samples, 0.01%)</title><rect x="129.03508771929825" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(237,124,34)" rx="2" ry="2" _orig_x="417.3" _orig_width="0.1"/>
<text x="132.03508771929825" y="1791.5" _orig_x="420.28"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (32 samples, 0.03%)</title><rect x="883.6633249791143" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(243,183,10)" rx="2" ry="2" _orig_x="723.5" _orig_width="0.3"/>
<text x="886.6633249791143" y="1759.5" _orig_x="726.50"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (195 samples, 0.16%)</title><rect x="1077.6190476190477" y="1797" width="4.682539682539682" height="15.0" fill="rgb(253,123,33)" rx="2" ry="2" _orig_x="802.2" _orig_width="1.9"/>
<text x="1080.6190476190477" y="1807.5" _orig_x="805.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="2021" width="0.4" height="15.0" fill="rgb(242,131,27)" rx="2" ry="2"/>
<text x="24.77" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(229,198,34)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1887.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(211,40,48)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1871.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="322.930492898914" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(237,194,46)" rx="2" ry="2" _orig_x="329.2" _orig_width="0.2"/>
<text x="325.930492898914" y="1919.5" _orig_x="332.24"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (40 samples, 0.03%)</title><rect x="492.3015873015874" y="1781" width="0.985797827903091" height="15.0" fill="rgb(242,174,14)" rx="2" ry="2" _orig_x="564.7" _orig_width="0.4"/>
<text x="495.3015873015874" y="1791.5" _orig_x="567.73"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (47 samples, 0.04%)</title><rect x="99.95405179615705" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(227,73,36)" rx="2" ry="2" _orig_x="405.5" _orig_width="0.5"/>
<text x="102.95405179615705" y="1743.5" _orig_x="408.54"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (18 samples, 0.02%)</title><rect x="615.5263157894738" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(217,80,34)" rx="2" ry="2" _orig_x="614.7" _orig_width="0.2"/>
<text x="618.5263157894738" y="1807.5" _orig_x="617.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.09%)</title><rect x="303.665455304929" y="1973" width="1.0413533834586466" height="15.0" fill="rgb(206,139,40)" rx="2" ry="2" _orig_x="310.7" _orig_width="1.0"/>
<text x="306.665455304929" y="1983.5" _orig_x="313.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (257 samples, 0.22%)</title><rect x="236.4981620718463" y="2005" width="2.707518796992481" height="15.0" fill="rgb(254,44,28)" rx="2" ry="2" _orig_x="246.2" _orig_width="2.6"/>
<text x="239.4981620718463" y="2015.5" _orig_x="249.20"/>
</g>
<g class="hide">
<title>[perf-58119.map] (249 samples, 0.21%)</title><rect x="115.28462823725988" y="1397" width="2.6033834586466167" height="15.0" fill="rgb(253,123,12)" rx="2" ry="2" _orig_x="129.8" _orig_width="2.5"/>
<text x="118.28462823725988" y="1407.5" _orig_x="132.80"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (911 samples, 0.77%)</title><rect x="21.09022556390977" y="1813" width="22.18045112781955" height="15.0" fill="rgb(240,140,32)" rx="2" ry="2" _orig_x="373.5" _orig_width="9.0"/>
<text x="24.09022556390977" y="1823.5" _orig_x="376.50"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="11.7" y="1701" width="0.1" height="15.0" fill="rgb(214,17,3)" rx="2" ry="2"/>
<text x="14.67" y="1711.5"/>
</g>
<g class="hide">
<title>[code] (147 samples, 0.12%)</title><rect x="31.143274853801223" y="1973" width="1.4578947368421051" height="15.0" fill="rgb(251,172,6)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1983.5" _orig_x="51.97"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="805" width="2.2909774436090227" height="15.0" fill="rgb(210,2,10)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="815.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-8551.map] (14 samples, 0.01%)</title><rect x="184.22222222222229" y="1317" width="0.10413533834586466" height="15.0" fill="rgb(241,1,4)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1327.5" _orig_x="198.97"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="549" width="0.31240601503759396" height="15.0" fill="rgb(210,66,49)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="559.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1237" width="0.31240601503759396" height="15.0" fill="rgb(254,144,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1247.5" _orig_x="32.46"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (11 samples, 0.01%)</title><rect x="830.9231411862991" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(250,28,24)" rx="2" ry="2" _orig_x="702.1" _orig_width="0.1"/>
<text x="833.9231411862991" y="1743.5" _orig_x="705.11"/>
</g>
<g>
<title>Row::~Row (12 samples, 0.01%)</title><rect x="779.1687552213867" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(205,47,54)" rx="2" ry="2" _orig_x="681.1" _orig_width="0.2"/>
<text x="782.1687552213867" y="1887.5" _orig_x="684.14"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (20 samples, 0.02%)</title><rect x="778.1829573934838" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(227,56,5)" rx="2" ry="2" _orig_x="680.7" _orig_width="0.2"/>
<text x="781.1829573934838" y="1855.5" _orig_x="683.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="11.149289891395211" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(235,167,50)" rx="2" ry="2" _orig_x="29.8" _orig_width="0.3"/>
<text x="14.149289891395211" y="2015.5" _orig_x="32.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(223,204,47)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1951.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="271.80004177109447" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(223,133,6)" rx="2" ry="2" _orig_x="280.1" _orig_width="0.2"/>
<text x="274.80004177109447" y="1999.5" _orig_x="283.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="43.11883876357566" y="1893" width="0.5206766917293233" height="15.0" fill="rgb(249,223,41)" rx="2" ry="2" _orig_x="60.5" _orig_width="0.5"/>
<text x="46.11883876357566" y="1903.5" _orig_x="63.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="931.8098162071847" y="2037" width="0.937218045112782" height="15.0" fill="rgb(246,54,17)" rx="2" ry="2" _orig_x="913.9" _orig_width="0.9"/>
<text x="934.8098162071847" y="2047.5" _orig_x="916.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (18 samples, 0.02%)</title><rect x="1014.7744360902257" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(221,122,0)" rx="2" ry="2" _orig_x="776.7" _orig_width="0.2"/>
<text x="1017.7744360902257" y="1807.5" _orig_x="779.72"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1061" width="0.31240601503759396" height="15.0" fill="rgb(213,28,35)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1071.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[code] (30 samples, 0.03%)</title><rect x="31.351545530492956" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(207,195,52)" rx="2" ry="2" _orig_x="49.2" _orig_width="0.3"/>
<text x="34.351545530492956" y="1807.5" _orig_x="52.18"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="2021" width="1.5" height="15.0" fill="rgb(221,208,17)" rx="2" ry="2"/>
<text x="15.14" y="2031.5"/>
</g>
<g>
<title>[libminisql_shared.so] (18 samples, 0.02%)</title><rect x="453.85547201336675" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(224,161,24)" rx="2" ry="2" _orig_x="549.1" _orig_width="0.2"/>
<text x="456.85547201336675" y="1775.5" _orig_x="552.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="24.8" y="1973" width="0.2" height="15.0" fill="rgb(229,140,35)" rx="2" ry="2"/>
<text x="27.82" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="21.6" y="1797" width="0.1" height="15.0" fill="rgb(209,5,0)" rx="2" ry="2"/>
<text x="24.62" y="1807.5"/>
</g>
<g class="hide">
<title>MainSession (299 samples, 0.25%)</title><rect x="34.7" y="2069" width="3.0" height="15.0" fill="rgb(254,171,0)" rx="2" ry="2"/>
<text x="37.70" y="2079.5"/>
</g>
<g>
<title>MemHeap::~MemHeap (13 samples, 0.01%)</title><rect x="1031.779448621554" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(245,47,46)" rx="2" ry="2" _orig_x="783.6" _orig_width="0.1"/>
<text x="1034.779448621554" y="1839.5" _orig_x="786.61"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (14 samples, 0.01%)</title><rect x="778.922305764411" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(219,59,43)" rx="2" ry="2" _orig_x="681.0" _orig_width="0.1"/>
<text x="781.922305764411" y="1839.5" _orig_x="683.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="915.2522974101922" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(207,225,0)" rx="2" ry="2" _orig_x="898.0" _orig_width="0.1"/>
<text x="918.2522974101922" y="1935.5" _orig_x="900.97"/>
</g>
<g class="hide">
<title>[postgres] (15 samples, 0.01%)</title><rect x="930.9767335004177" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(217,215,22)" rx="2" ry="2" _orig_x="913.1" _orig_width="0.1"/>
<text x="933.9767335004177" y="1999.5" _orig_x="916.07"/>
</g>
<g class="hide">
<title>blink::probe::CallFunction::CallFunction (16 samples, 0.01%)</title><rect x="179.4319966583125" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(210,14,8)" rx="2" ry="2" _orig_x="191.4" _orig_width="0.1"/>
<text x="182.4319966583125" y="1663.5" _orig_x="194.38"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (23 samples, 0.02%)</title><rect x="993.3333333333333" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(219,110,37)" rx="2" ry="2" _orig_x="768.0" _orig_width="0.2"/>
<text x="996.3333333333333" y="1791.5" _orig_x="771.01"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="149" width="0.20827067669172933" height="15.0" fill="rgb(243,148,23)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="159.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (14 samples, 0.01%)</title><rect x="299.3316624895571" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(215,188,44)" rx="2" ry="2" _orig_x="486.4" _orig_width="0.2"/>
<text x="302.3316624895571" y="1791.5" _orig_x="489.42"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1509" width="0.31240601503759396" height="15.0" fill="rgb(215,91,37)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1519.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (15 samples, 0.01%)</title><rect x="314.8579782790308" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(211,112,0)" rx="2" ry="2" _orig_x="492.7" _orig_width="0.1"/>
<text x="317.8579782790308" y="1775.5" _orig_x="495.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="170.7887635756057" y="1733" width="0.5206766917293233" height="15.0" fill="rgb(254,68,12)" rx="2" ry="2" _orig_x="183.1" _orig_width="0.5"/>
<text x="173.7887635756057" y="1743.5" _orig_x="186.10"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (14 samples, 0.01%)</title><rect x="121.39515455304925" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(251,38,53)" rx="2" ry="2" _orig_x="414.2" _orig_width="0.2"/>
<text x="124.39515455304925" y="1791.5" _orig_x="417.25"/>
</g>
<g class="hide">
<title>uv_run (33 samples, 0.03%)</title><rect x="99.8725981620719" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(239,200,24)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1967.5" _orig_x="117.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="25.2" y="1973" width="0.2" height="15.0" fill="rgb(248,190,30)" rx="2" ry="2"/>
<text x="28.24" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="933.3718462823726" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(205,194,44)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1935.5" _orig_x="918.42"/>
</g>
<g class="hide">
<title>blink::NativeValueTraits&lt;blink::MessageEventInit, void&gt;::NativeValue (608 samples, 0.51%)</title><rect x="189.84553049289897" y="1461" width="6.2481203007518795" height="15.0" fill="rgb(236,54,34)" rx="2" ry="2" _orig_x="201.4" _orig_width="6.0"/>
<text x="192.84553049289897" y="1471.5" _orig_x="204.36"/>
</g>
<g class="hide">
<title>[code] (891 samples, 0.75%)</title><rect x="110.07786131996663" y="1845" width="9.16390977443609" height="15.0" fill="rgb(235,165,4)" rx="2" ry="2" _orig_x="124.8" _orig_width="8.8"/>
<text x="113.07786131996663" y="1855.5" _orig_x="127.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="131.321470342523" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(221,188,34)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1839.5" _orig_x="148.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (44 samples, 0.04%)</title><rect x="68.65497076023394" y="1829" width="0.985797827903091" height="15.0" fill="rgb(219,204,25)" rx="2" ry="2" _orig_x="392.8" _orig_width="0.4"/>
<text x="71.65497076023394" y="1839.5" _orig_x="395.80"/>
</g>
<g class="hide">
<title>__libc_recvmsg (27 samples, 0.02%)</title><rect x="235.87335004177115" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(247,76,3)" rx="2" ry="2" _orig_x="245.6" _orig_width="0.3"/>
<text x="238.87335004177115" y="2047.5" _orig_x="248.61"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (209 samples, 0.18%)</title><rect x="197.7944862155388" y="1813" width="5.175438596491228" height="15.0" fill="rgb(251,48,33)" rx="2" ry="2" _orig_x="445.2" _orig_width="2.1"/>
<text x="200.7944862155388" y="1823.5" _orig_x="448.18"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (11 samples, 0.01%)</title><rect x="683.7928153717627" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(251,43,31)" rx="2" ry="2" _orig_x="642.4" _orig_width="0.1"/>
<text x="686.7928153717627" y="1839.5" _orig_x="645.41"/>
</g>
<g class="hide">
<title>[chrome] (52 samples, 0.04%)</title><rect x="14.0" y="1909" width="0.6" height="15.0" fill="rgb(227,22,23)" rx="2" ry="2"/>
<text x="17.05" y="1919.5"/>
</g>
<g class="hide">
<title>NetworkManager (116 samples, 0.10%)</title><rect x="37.8" y="2069" width="1.1" height="15.0" fill="rgb(252,20,5)" rx="2" ry="2"/>
<text x="40.77" y="2079.5"/>
</g>
<g class="hide">
<title>uv_run (233 samples, 0.20%)</title><rect x="119.45004177109446" y="1845" width="2.3951127819548867" height="15.0" fill="rgb(246,220,26)" rx="2" ry="2" _orig_x="133.8" _orig_width="2.3"/>
<text x="122.45004177109446" y="1855.5" _orig_x="136.78"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::allocate (16 samples, 0.01%)</title><rect x="1063.0785296574768" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(242,83,24)" rx="2" ry="2" _orig_x="796.3" _orig_width="0.1"/>
<text x="1066.0785296574768" y="1791.5" _orig_x="799.25"/>
</g>
<g>
<title>MemHeap::MemHeap (11 samples, 0.01%)</title><rect x="221.45363408521305" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(215,110,13)" rx="2" ry="2" _orig_x="454.8" _orig_width="0.1"/>
<text x="224.45363408521305" y="1823.5" _orig_x="457.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(241,133,13)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1967.5" _orig_x="101.63"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="432.4143692564744" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(227,102,11)" rx="2" ry="2" _orig_x="540.4" _orig_width="0.2"/>
<text x="435.4143692564744" y="1839.5" _orig_x="543.44"/>
</g>
<g>
<title>operator new (18 samples, 0.02%)</title><rect x="998.5087719298245" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(237,36,51)" rx="2" ry="2" _orig_x="770.1" _orig_width="0.2"/>
<text x="1001.5087719298245" y="1791.5" _orig_x="773.11"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="1925" width="0.7" height="15.0" fill="rgb(227,90,27)" rx="2" ry="2"/>
<text x="14.39" y="1935.5"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (27 samples, 0.02%)</title><rect x="925.8061821219716" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(230,203,37)" rx="2" ry="2" _orig_x="740.6" _orig_width="0.2"/>
<text x="928.8061821219716" y="1727.5" _orig_x="743.57"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (50 samples, 0.04%)</title><rect x="55.593149540517956" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(212,209,11)" rx="2" ry="2" _orig_x="387.5" _orig_width="0.5"/>
<text x="58.593149540517956" y="1775.5" _orig_x="390.52"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="789" width="0.20827067669172933" height="15.0" fill="rgb(229,1,30)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="799.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[perf-58119.map] (38 samples, 0.03%)</title><rect x="118.09628237259821" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(231,46,46)" rx="2" ry="2" _orig_x="132.5" _orig_width="0.3"/>
<text x="121.09628237259821" y="1471.5" _orig_x="135.46"/>
</g>
<g class="hide">
<title>[ntfs-3g] (111 samples, 0.09%)</title><rect x="860.3" y="2053" width="1.1" height="15.0" fill="rgb(231,169,53)" rx="2" ry="2"/>
<text x="863.34" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (622 samples, 0.52%)</title><rect x="1156.0131996658313" y="1733" width="6.4563909774436095" height="15.0" fill="rgb(245,203,13)" rx="2" ry="2" _orig_x="1129.2" _orig_width="6.2"/>
<text x="1159.0131996658313" y="1743.5" _orig_x="1132.21"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (119 samples, 0.10%)</title><rect x="286.3789891395155" y="1973" width="1.2496240601503759" height="15.0" fill="rgb(224,91,32)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.2"/>
<text x="289.3789891395155" y="1983.5" _orig_x="297.14"/>
</g>
<g class="hide">
<title>[unknown] (94 samples, 0.08%)</title><rect x="10.107936507936564" y="2005" width="1.0413533834586466" height="15.0" fill="rgb(240,106,40)" rx="2" ry="2" _orig_x="28.8" _orig_width="1.0"/>
<text x="13.107936507936564" y="2015.5" _orig_x="31.83"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (81 samples, 0.07%)</title><rect x="27.990810359231443" y="1685" width="1.971595655806182" height="15.0" fill="rgb(240,88,20)" rx="2" ry="2" _orig_x="376.3" _orig_width="0.8"/>
<text x="30.990810359231443" y="1695.5" _orig_x="379.28"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="332.10944026733495" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(214,207,14)" rx="2" ry="2" _orig_x="499.7" _orig_width="0.1"/>
<text x="335.10944026733495" y="1791.5" _orig_x="502.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (15 samples, 0.01%)</title><rect x="619.2230576441103" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(227,150,2)" rx="2" ry="2" _orig_x="616.2" _orig_width="0.2"/>
<text x="622.2230576441103" y="1759.5" _orig_x="619.22"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (12 samples, 0.01%)</title><rect x="1107.1929824561405" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(250,169,11)" rx="2" ry="2" _orig_x="814.2" _orig_width="0.1"/>
<text x="1110.1929824561405" y="1807.5" _orig_x="817.15"/>
</g>
<g class="hide">
<title>_nv023367rm (17 samples, 0.01%)</title><rect x="337.6" y="2053" width="0.2" height="15.0" fill="rgb(225,7,49)" rx="2" ry="2"/>
<text x="340.63" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (31 samples, 0.03%)</title><rect x="23.80116959064333" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(211,164,10)" rx="2" ry="2" _orig_x="374.6" _orig_width="0.3"/>
<text x="26.80116959064333" y="1743.5" _orig_x="377.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.12%)</title><rect x="13.336131996658366" y="2005" width="1.5620300751879699" height="15.0" fill="rgb(254,190,36)" rx="2" ry="2" _orig_x="31.9" _orig_width="1.5"/>
<text x="16.336131996658366" y="2015.5" _orig_x="34.93"/>
</g>
<g class="hide">
<title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (15 samples, 0.01%)</title><rect x="38.53688387635762" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(207,180,9)" rx="2" ry="2" _orig_x="56.1" _orig_width="0.1"/>
<text x="41.53688387635762" y="1903.5" _orig_x="59.09"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (12 samples, 0.01%)</title><rect x="200.75187969924804" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(240,163,12)" rx="2" ry="2" _orig_x="446.4" _orig_width="0.1"/>
<text x="203.75187969924804" y="1743.5" _orig_x="449.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="276.1737259816208" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(242,140,27)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1919.5" _orig_x="287.29"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1317" width="0.31240601503759396" height="15.0" fill="rgb(216,190,6)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1327.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>syscall (52 samples, 0.04%)</title><rect x="21.2" y="2021" width="0.5" height="15.0" fill="rgb(237,209,10)" rx="2" ry="2"/>
<text x="24.22" y="2031.5"/>
</g>
<g>
<title>Row::GetField (11 samples, 0.01%)</title><rect x="688.4753550543023" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(212,189,33)" rx="2" ry="2" _orig_x="644.3" _orig_width="0.1"/>
<text x="691.4753550543023" y="1887.5" _orig_x="647.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="270.3421470342523" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(207,178,43)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1807.5" _orig_x="281.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (251 samples, 0.21%)</title><rect x="922.6023391812863" y="1765" width="5.914786967418546" height="15.0" fill="rgb(247,113,9)" rx="2" ry="2" _orig_x="739.3" _orig_width="2.4"/>
<text x="925.6023391812863" y="1775.5" _orig_x="742.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="349.4850041771095" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(209,159,46)" rx="2" ry="2" _orig_x="354.7" _orig_width="0.3"/>
<text x="352.4850041771095" y="1951.5" _orig_x="357.68"/>
</g>
<g>
<title>Row::~Row (1,195 samples, 1.00%)</title><rect x="657.1762740183793" y="1861" width="29.081035923141187" height="15.0" fill="rgb(243,173,18)" rx="2" ry="2" _orig_x="631.6" _orig_width="11.8"/>
<text x="660.1762740183793" y="1871.5" _orig_x="634.56">R..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (36 samples, 0.03%)</title><rect x="488.6048454469508" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(223,204,36)" rx="2" ry="2" _orig_x="563.2" _orig_width="0.3"/>
<text x="491.6048454469508" y="1791.5" _orig_x="566.17"/>
</g>
<g class="hide">
<title>base::HangWatchScope::~HangWatchScope (27 samples, 0.02%)</title><rect x="173.28801169590648" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(235,74,0)" rx="2" ry="2" _orig_x="185.5" _orig_width="0.2"/>
<text x="176.28801169590648" y="1807.5" _orig_x="188.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="43.22297410192153" y="1861" width="0.41654135338345866" height="15.0" fill="rgb(222,71,17)" rx="2" ry="2" _orig_x="60.6" _orig_width="0.4"/>
<text x="46.22297410192153" y="1871.5" _orig_x="63.61"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (165 samples, 0.14%)</title><rect x="419.1060985797827" y="1765" width="4.189640768588137" height="15.0" fill="rgb(249,165,3)" rx="2" ry="2" _orig_x="535.0" _orig_width="1.7"/>
<text x="422.1060985797827" y="1775.5" _orig_x="538.04"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (296 samples, 0.25%)</title><rect x="459.77025898078523" y="1749" width="7.393483709273183" height="15.0" fill="rgb(237,60,52)" rx="2" ry="2" _orig_x="551.5" _orig_width="3.0"/>
<text x="462.77025898078523" y="1759.5" _orig_x="554.53"/>
</g>
<g class="hide">
<title>[perf-58145.map] (57 samples, 0.05%)</title><rect x="130.4883876357561" y="1797" width="0.6248120300751879" height="15.0" fill="rgb(226,123,36)" rx="2" ry="2" _orig_x="144.4" _orig_width="0.6"/>
<text x="133.4883876357561" y="1807.5" _orig_x="147.40"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (157 samples, 0.13%)</title><rect x="559.0893901420216" y="1845" width="3.943191311612364" height="15.0" fill="rgb(228,107,1)" rx="2" ry="2" _orig_x="591.8" _orig_width="1.6"/>
<text x="562.0893901420216" y="1855.5" _orig_x="594.79"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (13 samples, 0.01%)</title><rect x="357.0008354218881" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(220,5,16)" rx="2" ry="2" _orig_x="509.8" _orig_width="0.2"/>
<text x="360.0008354218881" y="1759.5" _orig_x="512.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="274.9241019214704" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(239,101,27)" rx="2" ry="2" _orig_x="283.1" _orig_width="0.2"/>
<text x="277.9241019214704" y="1983.5" _orig_x="286.06"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (16 samples, 0.01%)</title><rect x="764.1353383458646" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(223,118,46)" rx="2" ry="2" _orig_x="675.0" _orig_width="0.2"/>
<text x="767.1353383458646" y="1743.5" _orig_x="678.01"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (31 samples, 0.03%)</title><rect x="685.5179615705931" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(224,62,15)" rx="2" ry="2" _orig_x="643.1" _orig_width="0.3"/>
<text x="688.5179615705931" y="1823.5" _orig_x="646.07"/>
</g>
<g class="hide">
<title>__libc_recvmsg (16 samples, 0.01%)</title><rect x="23.7" y="2053" width="0.1" height="15.0" fill="rgb(214,52,44)" rx="2" ry="2"/>
<text x="26.68" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (76 samples, 0.06%)</title><rect x="127.8850041771095" y="1509" width="0.8330827067669173" height="15.0" fill="rgb(210,124,24)" rx="2" ry="2" _orig_x="141.9" _orig_width="0.8"/>
<text x="130.8850041771095" y="1519.5" _orig_x="144.94"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (223 samples, 0.19%)</title><rect x="16.772598162071905" y="2005" width="2.2909774436090227" height="15.0" fill="rgb(246,155,2)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="2015.5" _orig_x="38.23"/>
</g>
<g>
<title>operator new (13 samples, 0.01%)</title><rect x="942.0718462823727" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(238,139,50)" rx="2" ry="2" _orig_x="747.2" _orig_width="0.1"/>
<text x="945.0718462823727" y="1887.5" _orig_x="750.20"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.01%)</title><rect x="1164.3692564745195" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(215,213,16)" rx="2" ry="2" _orig_x="837.4" _orig_width="0.1"/>
<text x="1167.3692564745195" y="1919.5" _orig_x="840.37"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (27 samples, 0.02%)</title><rect x="1107.9323308270677" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(240,116,36)" rx="2" ry="2" _orig_x="814.5" _orig_width="0.2"/>
<text x="1110.9323308270677" y="1839.5" _orig_x="817.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (311 samples, 0.26%)</title><rect x="340.3210944026734" y="2005" width="3.2281954887218047" height="15.0" fill="rgb(253,157,10)" rx="2" ry="2" _orig_x="345.9" _orig_width="3.1"/>
<text x="343.3210944026734" y="2015.5" _orig_x="348.88"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.06%)</title><rect x="111.95229741019219" y="1701" width="0.7289473684210526" height="15.0" fill="rgb(249,193,12)" rx="2" ry="2" _orig_x="126.6" _orig_width="0.7"/>
<text x="114.95229741019219" y="1711.5" _orig_x="129.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="326.78350041771097" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(214,62,21)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1951.5" _orig_x="335.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (476 samples, 0.40%)</title><rect x="887.0316207184628" y="1877" width="4.894360902255639" height="15.0" fill="rgb(228,204,39)" rx="2" ry="2" _orig_x="870.9" _orig_width="4.7"/>
<text x="890.0316207184628" y="1887.5" _orig_x="873.85"/>
</g>
<g class="hide">
<title>[[vdso]] (102 samples, 0.09%)</title><rect x="904.7346282372598" y="2037" width="1.1454887218045113" height="15.0" fill="rgb(236,150,39)" rx="2" ry="2" _orig_x="887.9" _orig_width="1.1"/>
<text x="907.7346282372598" y="2047.5" _orig_x="890.94"/>
</g>
<g class="hide">
<title>blink::BaseArena::SweepUnsweptPageOnConcurrentThread (18 samples, 0.02%)</title><rect x="32.70530492898919" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(212,204,48)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1855.5" _orig_x="53.49"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="76.54135338345864" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(254,62,43)" rx="2" ry="2" _orig_x="396.0" _orig_width="0.1"/>
<text x="79.54135338345864" y="1727.5" _orig_x="399.00"/>
</g>
<g>
<title>[libminisql_shared.so] (21 samples, 0.02%)</title><rect x="931.2280701754383" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(209,228,5)" rx="2" ry="2" _orig_x="742.8" _orig_width="0.2"/>
<text x="934.2280701754383" y="1855.5" _orig_x="745.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="25.0" y="1957" width="0.2" height="15.0" fill="rgb(246,136,25)" rx="2" ry="2"/>
<text x="28.00" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.09%)</title><rect x="929.206432748538" y="1781" width="1.1454887218045113" height="15.0" fill="rgb(217,202,10)" rx="2" ry="2" _orig_x="911.4" _orig_width="1.1"/>
<text x="932.206432748538" y="1791.5" _orig_x="914.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (67 samples, 0.06%)</title><rect x="639.9248120300753" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(244,42,26)" rx="2" ry="2" _orig_x="624.6" _orig_width="0.7"/>
<text x="642.9248120300753" y="1759.5" _orig_x="627.59"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (32 samples, 0.03%)</title><rect x="631.5455304928989" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(221,72,35)" rx="2" ry="2" _orig_x="621.2" _orig_width="0.3"/>
<text x="634.5455304928989" y="1791.5" _orig_x="624.21"/>
</g>
<g class="hide">
<title>[Xorg] (18 samples, 0.02%)</title><rect x="49.05455304928995" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(222,197,52)" rx="2" ry="2" _orig_x="66.2" _orig_width="0.2"/>
<text x="52.05455304928995" y="2031.5" _orig_x="69.22"/>
</g>
<g class="hide">
<title>malloc (46 samples, 0.04%)</title><rect x="889.0" y="2053" width="0.4" height="15.0" fill="rgb(240,157,18)" rx="2" ry="2"/>
<text x="891.95" y="2063.5"/>
</g>
<g class="hide">
<title>base::internal::TaskTracker::RunSkipOnShutdown (635 samples, 0.53%)</title><rect x="33.954928989139574" y="1941" width="6.560526315789473" height="15.0" fill="rgb(221,163,7)" rx="2" ry="2" _orig_x="51.7" _orig_width="6.3"/>
<text x="36.954928989139574" y="1951.5" _orig_x="54.66"/>
</g>
<g class="hide">
<title>_nv035303rm (24 samples, 0.02%)</title><rect x="344.4" y="2053" width="0.3" height="15.0" fill="rgb(230,226,2)" rx="2" ry="2"/>
<text x="347.42" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="69" width="0.20827067669172933" height="15.0" fill="rgb(236,83,13)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="79.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="21.4" y="1909" width="0.3" height="15.0" fill="rgb(226,42,30)" rx="2" ry="2"/>
<text x="24.41" y="1919.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (22 samples, 0.02%)</title><rect x="890.8103592314117" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(232,107,43)" rx="2" ry="2" _orig_x="726.4" _orig_width="0.2"/>
<text x="893.8103592314117" y="1807.5" _orig_x="729.42"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (14 samples, 0.01%)</title><rect x="930.2422723475354" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(206,105,34)" rx="2" ry="2" _orig_x="742.4" _orig_width="0.2"/>
<text x="933.2422723475354" y="1775.5" _orig_x="745.43"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (11 samples, 0.01%)</title><rect x="1044.1019214703426" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(210,89,35)" rx="2" ry="2" _orig_x="788.6" _orig_width="0.1"/>
<text x="1047.1019214703426" y="1855.5" _orig_x="791.62"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(248,17,44)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1455.5" _orig_x="99.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (35 samples, 0.03%)</title><rect x="141.1111111111111" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(244,89,17)" rx="2" ry="2" _orig_x="422.2" _orig_width="0.3"/>
<text x="144.1111111111111" y="1791.5" _orig_x="425.16"/>
</g>
<g>
<title>Row::GetField (20 samples, 0.02%)</title><rect x="405.30492898913946" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(206,21,23)" rx="2" ry="2" _orig_x="529.4" _orig_width="0.2"/>
<text x="408.30492898913946" y="1871.5" _orig_x="532.38"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (20 samples, 0.02%)</title><rect x="414.9164578111945" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(233,72,42)" rx="2" ry="2" _orig_x="533.3" _orig_width="0.2"/>
<text x="417.9164578111945" y="1823.5" _orig_x="536.32"/>
</g>
<g class="hide">
<title>main (17 samples, 0.01%)</title><rect x="930.9767335004177" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(217,227,4)" rx="2" ry="2" _orig_x="913.1" _orig_width="0.1"/>
<text x="933.9767335004177" y="2047.5" _orig_x="916.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="41.869214703425286" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(205,31,22)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1951.5" _orig_x="62.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="325.11733500417716" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(238,224,28)" rx="2" ry="2" _orig_x="331.3" _orig_width="0.2"/>
<text x="328.11733500417716" y="2015.5" _orig_x="334.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="23.4" y="1941" width="0.2" height="15.0" fill="rgb(207,119,21)" rx="2" ry="2"/>
<text x="26.42" y="1951.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,197 samples, 1.01%)</title><rect x="864.9331662489556" y="1829" width="29.081035923141187" height="15.0" fill="rgb(206,10,6)" rx="2" ry="2" _orig_x="715.9" _orig_width="11.8"/>
<text x="867.9331662489556" y="1839.5" _orig_x="718.87">st..</text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (11 samples, 0.01%)</title><rect x="135.9356725146199" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(218,67,30)" rx="2" ry="2" _orig_x="420.1" _orig_width="0.1"/>
<text x="138.9356725146199" y="1727.5" _orig_x="423.14"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (351 samples, 0.30%)</title><rect x="594.3316624895572" y="1765" width="8.625730994152045" height="15.0" fill="rgb(227,179,54)" rx="2" ry="2" _orig_x="606.1" _orig_width="3.5"/>
<text x="597.3316624895572" y="1775.5" _orig_x="609.10"/>
</g>
<g class="hide">
<title>webrtc::DegradedCall::DestroyFlexfecReceiveStream (26 samples, 0.02%)</title><rect x="202.55004177109444" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(214,69,54)" rx="2" ry="2" _orig_x="213.6" _orig_width="0.3"/>
<text x="205.55004177109444" y="1727.5" _orig_x="216.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.06%)</title><rect x="132.98763575605687" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(208,108,1)" rx="2" ry="2" _orig_x="146.8" _orig_width="0.7"/>
<text x="135.98763575605687" y="2047.5" _orig_x="149.80"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (14 samples, 0.01%)</title><rect x="512.0175438596492" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(207,174,20)" rx="2" ry="2" _orig_x="572.7" _orig_width="0.2"/>
<text x="515.0175438596492" y="1791.5" _orig_x="575.71"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="869" width="0.31240601503759396" height="15.0" fill="rgb(249,223,39)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="879.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="155.16846282372603" y="1973" width="1.5620300751879699" height="15.0" fill="rgb(233,133,27)" rx="2" ry="2" _orig_x="168.1" _orig_width="1.5"/>
<text x="158.16846282372603" y="1983.5" _orig_x="171.11"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (115 samples, 0.10%)</title><rect x="306.9715956558062" y="1781" width="2.957393483709273" height="15.0" fill="rgb(216,130,18)" rx="2" ry="2" _orig_x="489.5" _orig_width="1.2"/>
<text x="309.9715956558062" y="1791.5" _orig_x="492.52"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (401 samples, 0.34%)</title><rect x="305.9857978279031" y="1813" width="9.611528822055138" height="15.0" fill="rgb(247,159,45)" rx="2" ry="2" _orig_x="489.1" _orig_width="3.9"/>
<text x="308.9857978279031" y="1823.5" _orig_x="492.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="124.34440267335009" y="1029" width="0.10413533834586466" height="15.0" fill="rgb(231,88,20)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1039.5" _orig_x="141.48"/>
</g>
<g class="hide">
<title>std::condition_variable::__wait_until_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (29 samples, 0.02%)</title><rect x="17.91808688387641" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(232,147,6)" rx="2" ry="2" _orig_x="36.3" _orig_width="0.3"/>
<text x="20.91808688387641" y="1839.5" _orig_x="39.33"/>
</g>
<g class="hide">
<title>kworker/1:1-eve (182 samples, 0.15%)</title><rect x="350.5" y="2069" width="1.8" height="15.0" fill="rgb(229,13,3)" rx="2" ry="2"/>
<text x="353.45" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (248 samples, 0.21%)</title><rect x="1179.1" y="1685" width="2.5" height="15.0" fill="rgb(239,53,40)" rx="2" ry="2"/>
<text x="1182.10" y="1695.5"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (98 samples, 0.08%)</title><rect x="288.1492898913952" y="2037" width="1.0413533834586466" height="15.0" fill="rgb(246,137,38)" rx="2" ry="2" _orig_x="295.8" _orig_width="1.0"/>
<text x="291.1492898913952" y="2047.5" _orig_x="298.85"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (44 samples, 0.04%)</title><rect x="182.9725981620719" y="1445" width="0.41654135338345866" height="15.0" fill="rgb(216,164,8)" rx="2" ry="2" _orig_x="194.8" _orig_width="0.4"/>
<text x="185.9725981620719" y="1455.5" _orig_x="197.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="13.1" y="1781" width="0.2" height="15.0" fill="rgb(227,228,49)" rx="2" ry="2"/>
<text x="16.08" y="1791.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (11 samples, 0.01%)</title><rect x="34.64494569757727" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(251,6,26)" rx="2" ry="2" _orig_x="379.0" _orig_width="0.1"/>
<text x="37.64494569757727" y="1727.5" _orig_x="382.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="65.29966583124482" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(254,132,3)" rx="2" ry="2" _orig_x="81.8" _orig_width="0.2"/>
<text x="68.29966583124482" y="1807.5" _orig_x="84.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (267 samples, 0.22%)</title><rect x="340.7376357560569" y="1973" width="2.811654135338346" height="15.0" fill="rgb(207,107,15)" rx="2" ry="2" _orig_x="346.3" _orig_width="2.7"/>
<text x="343.7376357560569" y="1983.5" _orig_x="349.31"/>
</g>
<g class="hide">
<title>[unknown] (98 samples, 0.08%)</title><rect x="876.2015455304929" y="2037" width="0.937218045112782" height="15.0" fill="rgb(221,96,30)" rx="2" ry="2" _orig_x="860.5" _orig_width="0.9"/>
<text x="879.2015455304929" y="2047.5" _orig_x="863.47"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (50 samples, 0.04%)</title><rect x="620.9482038429405" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(222,224,0)" rx="2" ry="2" _orig_x="616.9" _orig_width="0.5"/>
<text x="623.9482038429405" y="1775.5" _orig_x="619.91"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (6,377 samples, 5.36%)</title><rect x="787.0551378446114" y="1893" width="156.00250626566412" height="15.0" fill="rgb(250,59,11)" rx="2" ry="2" _orig_x="684.3" _orig_width="63.3"/>
<text x="790.0551378446114" y="1903.5" _orig_x="687.34">GenericComparator&lt;3..</text>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(234,35,7)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1391.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="352.92147034252304" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(211,67,2)" rx="2" ry="2" _orig_x="358.0" _orig_width="0.6"/>
<text x="355.92147034252304" y="1967.5" _orig_x="361.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (477 samples, 0.40%)</title><rect x="923.5831244778614" y="1669" width="4.998496240601503" height="15.0" fill="rgb(241,121,35)" rx="2" ry="2" _orig_x="906.0" _orig_width="4.8"/>
<text x="926.5831244778614" y="1679.5" _orig_x="909.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (140 samples, 0.12%)</title><rect x="155.2725981620719" y="1941" width="1.4578947368421051" height="15.0" fill="rgb(216,183,52)" rx="2" ry="2" _orig_x="168.2" _orig_width="1.4"/>
<text x="158.2725981620719" y="1951.5" _orig_x="171.17"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (27 samples, 0.02%)</title><rect x="852.3642439431911" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(249,209,40)" rx="2" ry="2" _orig_x="710.8" _orig_width="0.2"/>
<text x="855.3642439431911" y="1823.5" _orig_x="713.77"/>
</g>
<g class="hide">
<title>[perf-58119.map] (461 samples, 0.39%)</title><rect x="113.09778613199671" y="1621" width="4.7902255639097735" height="15.0" fill="rgb(253,156,25)" rx="2" ry="2" _orig_x="127.7" _orig_width="4.6"/>
<text x="116.09778613199671" y="1631.5" _orig_x="130.70"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (13 samples, 0.01%)</title><rect x="163.53801169590645" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(242,161,2)" rx="2" ry="2" _orig_x="431.3" _orig_width="0.2"/>
<text x="166.53801169590645" y="1807.5" _orig_x="434.34"/>
</g>
<g>
<title>operator new (15 samples, 0.01%)</title><rect x="1001.4661654135336" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(216,142,20)" rx="2" ry="2" _orig_x="771.3" _orig_width="0.2"/>
<text x="1004.4661654135336" y="1775.5" _orig_x="774.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="188.17936507936514" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(237,222,10)" rx="2" ry="2" _orig_x="199.8" _orig_width="0.2"/>
<text x="191.17936507936514" y="1423.5" _orig_x="202.79"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1173" width="0.20827067669172933" height="15.0" fill="rgb(237,219,44)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1183.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="326.78350041771097" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(251,135,14)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1935.5" _orig_x="335.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="55.61507936507942" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(239,43,46)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="1983.5" _orig_x="75.49"/>
</g>
<g class="hide">
<title>_nv035303rm (26 samples, 0.02%)</title><rect x="1187.2" y="2053" width="0.2" height="15.0" fill="rgb(212,31,33)" rx="2" ry="2"/>
<text x="1190.19" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1301" width="2.2909774436090227" height="15.0" fill="rgb(223,68,19)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1311.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (13 samples, 0.01%)</title><rect x="62.740183792815316" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(215,217,7)" rx="2" ry="2" _orig_x="390.4" _orig_width="0.1"/>
<text x="65.74018379281532" y="1727.5" _orig_x="393.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="1989" width="0.4" height="15.0" fill="rgb(218,26,33)" rx="2" ry="2"/>
<text x="24.77" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="321.1601921470343" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(243,82,24)" rx="2" ry="2" _orig_x="327.5" _orig_width="0.6"/>
<text x="324.1601921470343" y="1951.5" _orig_x="330.49"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1525" width="0.31240601503759396" height="15.0" fill="rgb(225,70,54)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1535.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(237,39,5)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1711.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (14 samples, 0.01%)</title><rect x="109.07268170426062" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(230,168,1)" rx="2" ry="2" _orig_x="409.2" _orig_width="0.1"/>
<text x="112.07268170426062" y="1727.5" _orig_x="412.15"/>
</g>
<g>
<title>Field::Field (57 samples, 0.05%)</title><rect x="963.0200501253133" y="1861" width="1.2322472848788637" height="15.0" fill="rgb(231,183,11)" rx="2" ry="2" _orig_x="755.7" _orig_width="0.5"/>
<text x="966.0200501253133" y="1871.5" _orig_x="758.68"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="885" width="0.31240601503759396" height="15.0" fill="rgb(220,96,49)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="895.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="405" width="0.31240601503759396" height="15.0" fill="rgb(231,102,12)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="415.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-33014.map] (54 samples, 0.05%)</title><rect x="129.65530492898918" y="1893" width="0.5206766917293233" height="15.0" fill="rgb(240,148,4)" rx="2" ry="2" _orig_x="143.6" _orig_width="0.5"/>
<text x="132.65530492898918" y="1903.5" _orig_x="146.60"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::AdvanceLazySweep (12 samples, 0.01%)</title><rect x="174.53763575605686" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(215,183,13)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1695.5" _orig_x="189.70"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (53 samples, 0.04%)</title><rect x="845.7101086048455" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(218,182,52)" rx="2" ry="2" _orig_x="708.1" _orig_width="0.5"/>
<text x="848.7101086048455" y="1807.5" _orig_x="711.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="343.13274853801175" y="1861" width="0.41654135338345866" height="15.0" fill="rgb(246,132,11)" rx="2" ry="2" _orig_x="348.6" _orig_width="0.4"/>
<text x="346.13274853801175" y="1871.5" _orig_x="351.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="355.5248538011696" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(250,109,45)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1967.5" _orig_x="363.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="43.32710944026739" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(242,228,8)" rx="2" ry="2" _orig_x="60.7" _orig_width="0.3"/>
<text x="46.32710944026739" y="1839.5" _orig_x="63.75"/>
</g>
<g class="hide">
<title>[code] (116 samples, 0.10%)</title><rect x="98.51883876357566" y="1829" width="1.2496240601503759" height="15.0" fill="rgb(214,1,5)" rx="2" ry="2" _orig_x="113.7" _orig_width="1.2"/>
<text x="101.51883876357566" y="1839.5" _orig_x="116.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (14 samples, 0.01%)</title><rect x="778.922305764411" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(252,219,17)" rx="2" ry="2" _orig_x="681.0" _orig_width="0.1"/>
<text x="781.922305764411" y="1855.5" _orig_x="683.96"/>
</g>
<g>
<title>Field::Field (25 samples, 0.02%)</title><rect x="796.4202172096909" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(214,178,24)" rx="2" ry="2" _orig_x="688.1" _orig_width="0.2"/>
<text x="799.4202172096909" y="1855.5" _orig_x="691.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="1163.4937825912555" y="1909" width="0.4733253108704372" height="15.0" fill="rgb(236,86,5)" rx="2" ry="2" _orig_x="848.5" _orig_width="0.2"/>
<text x="1166.4937825912555" y="1919.5" _orig_x="851.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="303.2489139515456" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(245,117,4)" rx="2" ry="2" _orig_x="310.3" _orig_width="0.2"/>
<text x="306.2489139515456" y="1743.5" _orig_x="313.29"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (14 samples, 0.01%)</title><rect x="1163.876357560568" y="1909" width="0.4928989139515455" height="15.0" fill="rgb(247,181,50)" rx="2" ry="2" _orig_x="837.2" _orig_width="0.2"/>
<text x="1166.876357560568" y="1919.5" _orig_x="840.23"/>
</g>
<g class="hide">
<title>ntfs_mbstoucs (17 samples, 0.01%)</title><rect x="902.235380116959" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(249,215,52)" rx="2" ry="2" _orig_x="885.5" _orig_width="0.2"/>
<text x="905.235380116959" y="2047.5" _orig_x="888.51"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (11 samples, 0.01%)</title><rect x="1043.609022556391" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(250,81,18)" rx="2" ry="2" _orig_x="788.4" _orig_width="0.1"/>
<text x="1046.609022556391" y="1823.5" _orig_x="791.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="931.9139515455305" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(234,35,51)" rx="2" ry="2" _orig_x="914.0" _orig_width="0.8"/>
<text x="934.9139515455305" y="1999.5" _orig_x="917.05"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (30 samples, 0.03%)</title><rect x="537.8947368421053" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(234,91,16)" rx="2" ry="2" _orig_x="583.2" _orig_width="0.3"/>
<text x="540.8947368421053" y="1823.5" _orig_x="586.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(213,217,26)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1983.5" _orig_x="101.86"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1109" width="2.2909774436090227" height="15.0" fill="rgb(206,229,1)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1119.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (263 samples, 0.22%)</title><rect x="126.01056808688392" y="1861" width="2.707518796992481" height="15.0" fill="rgb(213,176,39)" rx="2" ry="2" _orig_x="140.1" _orig_width="2.6"/>
<text x="129.01056808688392" y="1871.5" _orig_x="143.14"/>
</g>
<g class="hide">
<title>__GI___ioctl (412 samples, 0.35%)</title><rect x="66.02861319966588" y="2037" width="4.269548872180451" height="15.0" fill="rgb(214,3,36)" rx="2" ry="2" _orig_x="82.5" _orig_width="4.1"/>
<text x="69.02861319966588" y="2047.5" _orig_x="85.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="855.8145363408522" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(225,69,17)" rx="2" ry="2" _orig_x="712.2" _orig_width="0.1"/>
<text x="858.8145363408522" y="1775.5" _orig_x="715.23"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (26 samples, 0.02%)</title><rect x="466.42439431913124" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(240,73,52)" rx="2" ry="2" _orig_x="554.2" _orig_width="0.2"/>
<text x="469.42439431913124" y="1727.5" _orig_x="557.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(239,45,20)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1951.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="485" width="0.31240601503759396" height="15.0" fill="rgb(210,47,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="495.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[perf-58145.map] (81 samples, 0.07%)</title><rect x="130.28011695906437" y="1861" width="0.8330827067669173" height="15.0" fill="rgb(236,8,44)" rx="2" ry="2" _orig_x="144.2" _orig_width="0.8"/>
<text x="133.28011695906437" y="1871.5" _orig_x="147.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="327.09590643274856" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(243,200,24)" rx="2" ry="2" _orig_x="333.2" _orig_width="0.2"/>
<text x="330.09590643274856" y="1983.5" _orig_x="336.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (178 samples, 0.15%)</title><rect x="180.0501253132832" y="1733" width="4.43609022556391" height="15.0" fill="rgb(254,171,3)" rx="2" ry="2" _orig_x="438.0" _orig_width="1.8"/>
<text x="183.0501253132832" y="1743.5" _orig_x="440.99"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (159 samples, 0.13%)</title><rect x="395.69340016708435" y="1781" width="3.943191311612364" height="15.0" fill="rgb(231,78,10)" rx="2" ry="2" _orig_x="525.5" _orig_width="1.6"/>
<text x="398.69340016708435" y="1791.5" _orig_x="528.49"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (14 samples, 0.01%)</title><rect x="286.69139515455305" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(212,90,4)" rx="2" ry="2" _orig_x="294.4" _orig_width="0.1"/>
<text x="289.69139515455305" y="1871.5" _orig_x="297.38"/>
</g>
<g class="hide">
<title>[perf-58157.map] (80 samples, 0.07%)</title><rect x="123.82372598162077" y="1461" width="0.8330827067669173" height="15.0" fill="rgb(250,15,29)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.8"/>
<text x="126.82372598162077" y="1471.5" _orig_x="140.96"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1573" width="0.31240601503759396" height="15.0" fill="rgb(244,221,9)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1583.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="773" width="0.31240601503759396" height="15.0" fill="rgb(220,103,9)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="783.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="280.4432748538012" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(212,3,2)" rx="2" ry="2" _orig_x="288.4" _orig_width="0.3"/>
<text x="283.4432748538012" y="1887.5" _orig_x="291.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="11.565831244778668" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(234,10,1)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="1983.5" _orig_x="33.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="349.5891395154554" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(219,156,3)" rx="2" ry="2" _orig_x="354.8" _orig_width="0.2"/>
<text x="352.5891395154554" y="1903.5" _orig_x="357.81"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (13 samples, 0.01%)</title><rect x="264.0893901420218" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(212,66,24)" rx="2" ry="2" _orig_x="472.1" _orig_width="0.1"/>
<text x="267.0893901420218" y="1743.5" _orig_x="475.07"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (21 samples, 0.02%)</title><rect x="119.55417710944033" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(206,228,28)" rx="2" ry="2" _orig_x="133.9" _orig_width="0.2"/>
<text x="122.55417710944033" y="1695.5" _orig_x="136.94"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (20 samples, 0.02%)</title><rect x="908.1710944026735" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(232,9,36)" rx="2" ry="2" _orig_x="891.2" _orig_width="0.2"/>
<text x="911.1710944026735" y="2047.5" _orig_x="894.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (846 samples, 0.71%)</title><rect x="919.8342522974102" y="1765" width="8.747368421052633" height="15.0" fill="rgb(251,108,6)" rx="2" ry="2" _orig_x="902.4" _orig_width="8.4"/>
<text x="922.8342522974102" y="1775.5" _orig_x="905.37"/>
</g>
<g class="hide">
<title>Nan::imp::FunctionCallbackWrapper (27 samples, 0.02%)</title><rect x="129.86357560568092" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(234,168,4)" rx="2" ry="2" _orig_x="143.8" _orig_width="0.3"/>
<text x="132.86357560568092" y="1823.5" _orig_x="146.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.04%)</title><rect x="932.2263575605681" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(224,92,7)" rx="2" ry="2" _orig_x="914.3" _orig_width="0.5"/>
<text x="935.2263575605681" y="1935.5" _orig_x="917.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="1162.3104693140792" y="1941" width="0.2366626554352186" height="15.0" fill="rgb(216,135,53)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="1951.5" _orig_x="851.00"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (221 samples, 0.19%)</title><rect x="44.50292397660818" y="1813" width="5.4218880534670015" height="15.0" fill="rgb(230,204,23)" rx="2" ry="2" _orig_x="383.0" _orig_width="2.2"/>
<text x="47.50292397660818" y="1823.5" _orig_x="386.03"/>
</g>
<g class="hide">
<title>[unknown] (28 samples, 0.02%)</title><rect x="10.836883876357616" y="213" width="0.20827067669172933" height="15.0" fill="rgb(237,182,29)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="223.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,177 samples, 0.99%)</title><rect x="916.3977861319967" y="1893" width="12.183834586466164" height="15.0" fill="rgb(237,183,29)" rx="2" ry="2" _orig_x="899.1" _orig_width="11.7"/>
<text x="919.3977861319967" y="1903.5" _orig_x="902.08"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (144 samples, 0.12%)</title><rect x="844.7243107769424" y="1829" width="3.6967418546365916" height="15.0" fill="rgb(241,76,54)" rx="2" ry="2" _orig_x="707.7" _orig_width="1.5"/>
<text x="847.7243107769424" y="1839.5" _orig_x="710.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="2037" width="0.2" height="15.0" fill="rgb(213,166,4)" rx="2" ry="2"/>
<text x="18.74" y="2047.5"/>
</g>
<g>
<title>TableHeap::InsertTuple (294 samples, 0.25%)</title><rect x="1172.7485380116957" y="1957" width="7.14703425229741" height="15.0" fill="rgb(241,6,48)" rx="2" ry="2" _orig_x="840.8" _orig_width="2.9"/>
<text x="1175.7485380116957" y="1967.5" _orig_x="843.79"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (14 samples, 0.01%)</title><rect x="478.25396825396825" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(221,185,30)" rx="2" ry="2" _orig_x="559.0" _orig_width="0.2"/>
<text x="481.25396825396825" y="1759.5" _orig_x="562.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.07%)</title><rect x="346.1526733500418" y="1909" width="0.8330827067669173" height="15.0" fill="rgb(248,27,10)" rx="2" ry="2" _orig_x="351.5" _orig_width="0.8"/>
<text x="349.1526733500418" y="1919.5" _orig_x="354.45"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1061" width="0.31240601503759396" height="15.0" fill="rgb(211,209,15)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1071.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[perf-58157.map] (112 samples, 0.09%)</title><rect x="123.4071846282373" y="1493" width="1.2496240601503759" height="15.0" fill="rgb(221,103,29)" rx="2" ry="2" _orig_x="137.6" _orig_width="1.2"/>
<text x="126.4071846282373" y="1503.5" _orig_x="140.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (150 samples, 0.13%)</title><rect x="63.94590643274859" y="1877" width="1.5620300751879699" height="15.0" fill="rgb(210,229,42)" rx="2" ry="2" _orig_x="80.5" _orig_width="1.5"/>
<text x="66.94590643274859" y="1887.5" _orig_x="83.47"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (925 samples, 0.78%)</title><rect x="699.3191311612364" y="1813" width="22.67335004177109" height="15.0" fill="rgb(224,112,39)" rx="2" ry="2" _orig_x="648.7" _orig_width="9.2"/>
<text x="702.3191311612364" y="1823.5" _orig_x="651.72">s..</text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (12 samples, 0.01%)</title><rect x="257.6817042606516" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(214,223,49)" rx="2" ry="2" _orig_x="469.5" _orig_width="0.1"/>
<text x="260.6817042606516" y="1695.5" _orig_x="472.50"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (63 samples, 0.05%)</title><rect x="910.5263157894736" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(228,103,26)" rx="2" ry="2" _orig_x="734.4" _orig_width="0.6"/>
<text x="913.5263157894736" y="1839.5" _orig_x="737.38"/>
</g>
<g class="hide">
<title>std::__1::recursive_mutex::~recursive_mutex (13 samples, 0.01%)</title><rect x="225.6680868838764" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(215,28,40)" rx="2" ry="2" _orig_x="235.8" _orig_width="0.2"/>
<text x="228.6680868838764" y="1823.5" _orig_x="238.82"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="549" width="0.31240601503759396" height="15.0" fill="rgb(249,27,38)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="559.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (11 samples, 0.01%)</title><rect x="237.71929824561397" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(239,194,39)" rx="2" ry="2" _orig_x="461.4" _orig_width="0.2"/>
<text x="240.71929824561397" y="1823.5" _orig_x="464.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="130.8007936507937" y="1445" width="0.20827067669172933" height="15.0" fill="rgb(209,6,33)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1455.5" _orig_x="147.67"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (31 samples, 0.03%)</title><rect x="597.781954887218" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(229,82,16)" rx="2" ry="2" _orig_x="607.5" _orig_width="0.3"/>
<text x="600.781954887218" y="1743.5" _orig_x="610.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="97.78989139515461" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(220,178,2)" rx="2" ry="2" _orig_x="113.0" _orig_width="0.2"/>
<text x="100.78989139515461" y="1871.5" _orig_x="116.05"/>
</g>
<g class="hide">
<title>v8::internal::ApiNatives::InstantiateObject (64 samples, 0.05%)</title><rect x="186.40906432748542" y="1493" width="0.7289473684210526" height="15.0" fill="rgb(221,188,6)" rx="2" ry="2" _orig_x="198.1" _orig_width="0.7"/>
<text x="189.40906432748542" y="1503.5" _orig_x="201.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.06%)</title><rect x="131.9462823725982" y="1909" width="0.7289473684210526" height="15.0" fill="rgb(250,137,45)" rx="2" ry="2" _orig_x="145.8" _orig_width="0.7"/>
<text x="134.9462823725982" y="1919.5" _orig_x="148.76"/>
</g>
<g class="hide">
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (366 samples, 0.31%)</title><rect x="181.82710944026738" y="1557" width="3.8530075187969928" height="15.0" fill="rgb(222,119,34)" rx="2" ry="2" _orig_x="193.7" _orig_width="3.7"/>
<text x="184.82710944026738" y="1567.5" _orig_x="196.72"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (24 samples, 0.02%)</title><rect x="318.55680868838766" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(233,169,10)" rx="2" ry="2" _orig_x="325.0" _orig_width="0.3"/>
<text x="321.55680868838766" y="1999.5" _orig_x="328.02"/>
</g>
<g>
<title>Row::Row (189 samples, 0.16%)</title><rect x="652.4937343358397" y="1861" width="4.682539682539682" height="15.0" fill="rgb(210,89,11)" rx="2" ry="2" _orig_x="629.7" _orig_width="1.9"/>
<text x="655.4937343358397" y="1871.5" _orig_x="632.69"/>
</g>
<g class="hide">
<title>epoll_wait (89 samples, 0.07%)</title><rect x="131.7380116959065" y="1989" width="0.937218045112782" height="15.0" fill="rgb(237,223,11)" rx="2" ry="2" _orig_x="145.6" _orig_width="0.9"/>
<text x="134.7380116959065" y="1999.5" _orig_x="148.61"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (166 samples, 0.14%)</title><rect x="281.4846282372598" y="1925" width="1.7703007518796992" height="15.0" fill="rgb(235,142,11)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="1935.5" _orig_x="292.43"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (12 samples, 0.01%)</title><rect x="1032.272347535505" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(221,225,3)" rx="2" ry="2" _orig_x="783.8" _orig_width="0.1"/>
<text x="1035.272347535505" y="1839.5" _orig_x="786.77"/>
</g>
<g class="hide">
<title>v8::Function::Call (269 samples, 0.23%)</title><rect x="126.01056808688392" y="1877" width="2.707518796992481" height="15.0" fill="rgb(234,213,0)" rx="2" ry="2" _orig_x="140.1" _orig_width="2.6"/>
<text x="129.01056808688392" y="1887.5" _orig_x="143.08"/>
</g>
<g class="hide">
<title>runtime.sysmon (27 samples, 0.02%)</title><rect x="269.9256056808689" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(215,62,41)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.2"/>
<text x="272.9256056808689" y="1999.5" _orig_x="281.26"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(207,228,1)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1871.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (41 samples, 0.03%)</title><rect x="317.51545530492905" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(232,69,6)" rx="2" ry="2" _orig_x="324.0" _orig_width="0.4"/>
<text x="320.51545530492905" y="2047.5" _orig_x="326.98"/>
</g>
<g class="hide">
<title>[unknown] (28 samples, 0.02%)</title><rect x="23.3" y="2037" width="0.3" height="15.0" fill="rgb(247,139,15)" rx="2" ry="2"/>
<text x="26.31" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (204 samples, 0.17%)</title><rect x="548.7385129490393" y="1749" width="4.928989139515455" height="15.0" fill="rgb(205,66,15)" rx="2" ry="2" _orig_x="587.6" _orig_width="2.0"/>
<text x="551.7385129490393" y="1759.5" _orig_x="590.56"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (572 samples, 0.48%)</title><rect x="147.2723475355054" y="1813" width="13.801169590643275" height="15.0" fill="rgb(241,6,37)" rx="2" ry="2" _orig_x="424.7" _orig_width="5.6"/>
<text x="150.2723475355054" y="1823.5" _orig_x="427.67"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="392.4895572263994" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(207,60,31)" rx="2" ry="2" _orig_x="524.2" _orig_width="0.1"/>
<text x="395.4895572263994" y="1759.5" _orig_x="527.21"/>
</g>
<g class="hide">
<title>__libc_start_main (240 samples, 0.20%)</title><rect x="106.6" y="2053" width="2.4" height="15.0" fill="rgb(238,177,29)" rx="2" ry="2"/>
<text x="109.64" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (23 samples, 0.02%)</title><rect x="14.7" y="1861" width="0.2" height="15.0" fill="rgb(235,154,45)" rx="2" ry="2"/>
<text x="17.70" y="1871.5"/>
</g>
<g class="hide">
<title>malloc_consolidate (28 samples, 0.02%)</title><rect x="889.4" y="2053" width="0.3" height="15.0" fill="rgb(225,223,49)" rx="2" ry="2"/>
<text x="892.41" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1221" width="0.31240601503759396" height="15.0" fill="rgb(210,210,36)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1231.5" _orig_x="99.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (179 samples, 0.15%)</title><rect x="885.3884711779449" y="1797" width="4.43609022556391" height="15.0" fill="rgb(227,180,30)" rx="2" ry="2" _orig_x="724.2" _orig_width="1.8"/>
<text x="888.3884711779449" y="1807.5" _orig_x="727.23"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::PostDelayedTaskImpl (49 samples, 0.04%)</title><rect x="205.6741019214704" y="1717" width="0.5206766917293233" height="15.0" fill="rgb(252,79,13)" rx="2" ry="2" _orig_x="216.6" _orig_width="0.5"/>
<text x="208.6741019214704" y="1727.5" _orig_x="219.61"/>
</g>
<g>
<title>std::__detail::_Identity::operator (11 samples, 0.01%)</title><rect x="718.2957393483707" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(206,7,33)" rx="2" ry="2" _orig_x="656.4" _orig_width="0.1"/>
<text x="721.2957393483707" y="1791.5" _orig_x="659.42"/>
</g>
<g class="hide">
<title>_nv022966rm (26 samples, 0.02%)</title><rect x="337.3" y="2053" width="0.2" height="15.0" fill="rgb(253,166,52)" rx="2" ry="2"/>
<text x="340.28" y="2063.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (23 samples, 0.02%)</title><rect x="19.6" y="1861" width="0.2" height="15.0" fill="rgb(212,11,46)" rx="2" ry="2"/>
<text x="22.58" y="1871.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (12 samples, 0.01%)</title><rect x="199.76608187134502" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(237,106,22)" rx="2" ry="2" _orig_x="446.0" _orig_width="0.2"/>
<text x="202.76608187134502" y="1759.5" _orig_x="449.04"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="197" width="0.31240601503759396" height="15.0" fill="rgb(228,39,29)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="207.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (23 samples, 0.02%)</title><rect x="183.7468671679198" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(243,15,28)" rx="2" ry="2" _orig_x="439.5" _orig_width="0.2"/>
<text x="186.7468671679198" y="1711.5" _orig_x="442.52"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="219.235588972431" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(235,151,34)" rx="2" ry="2" _orig_x="453.9" _orig_width="0.1"/>
<text x="222.235588972431" y="1839.5" _orig_x="456.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (616 samples, 0.52%)</title><rect x="892.0301169590645" y="2005" width="6.352255639097744" height="15.0" fill="rgb(237,25,4)" rx="2" ry="2" _orig_x="875.7" _orig_width="6.1"/>
<text x="895.0301169590645" y="2015.5" _orig_x="878.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1077" width="0.31240601503759396" height="15.0" fill="rgb(236,83,44)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1087.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="929.6229741019215" y="1669" width="0.7289473684210526" height="15.0" fill="rgb(215,124,10)" rx="2" ry="2" _orig_x="911.8" _orig_width="0.7"/>
<text x="932.6229741019215" y="1679.5" _orig_x="914.80"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (15 samples, 0.01%)</title><rect x="691.9256474519633" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(243,142,17)" rx="2" ry="2" _orig_x="645.7" _orig_width="0.2"/>
<text x="694.9256474519633" y="1903.5" _orig_x="648.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="118.61695906432753" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(250,33,19)" rx="2" ry="2" _orig_x="133.0" _orig_width="0.2"/>
<text x="121.61695906432753" y="1727.5" _orig_x="136.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="325.11733500417716" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(240,0,29)" rx="2" ry="2" _orig_x="331.3" _orig_width="0.2"/>
<text x="328.11733500417716" y="1983.5" _orig_x="334.34"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (14 samples, 0.01%)</title><rect x="1172.0091896407685" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(243,76,2)" rx="2" ry="2" _orig_x="840.5" _orig_width="0.1"/>
<text x="1175.0091896407685" y="1871.5" _orig_x="843.48"/>
</g>
<g class="hide">
<title>blink::ThreadState::PerformIdleLazySweep (12 samples, 0.01%)</title><rect x="174.53763575605686" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(252,90,4)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1711.5" _orig_x="189.70"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (17 samples, 0.01%)</title><rect x="265.5680868838763" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(247,34,26)" rx="2" ry="2" _orig_x="472.7" _orig_width="0.2"/>
<text x="268.5680868838763" y="1727.5" _orig_x="475.75"/>
</g>
<g class="hide">
<title>__GI___ioctl (74 samples, 0.06%)</title><rect x="301.79101921470345" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(224,217,34)" rx="2" ry="2" _orig_x="308.9" _orig_width="0.8"/>
<text x="304.79101921470345" y="2047.5" _orig_x="311.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (361 samples, 0.30%)</title><rect x="309.9135756056809" y="2021" width="3.644736842105263" height="15.0" fill="rgb(208,140,51)" rx="2" ry="2" _orig_x="316.7" _orig_width="3.5"/>
<text x="312.9135756056809" y="2031.5" _orig_x="319.65"/>
</g>
<g class="hide">
<title>__libc_send (22 samples, 0.02%)</title><rect x="10.5" y="2053" width="0.2" height="15.0" fill="rgb(206,170,2)" rx="2" ry="2"/>
<text x="13.52" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="117" width="0.20827067669172933" height="15.0" fill="rgb(213,160,33)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="127.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Identity::operator (22 samples, 0.02%)</title><rect x="605.6683375104428" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(246,122,5)" rx="2" ry="2" _orig_x="610.7" _orig_width="0.2"/>
<text x="608.6683375104428" y="1775.5" _orig_x="613.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="355.5248538011696" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(251,124,5)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1935.5" _orig_x="363.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1285" width="0.31240601503759396" height="15.0" fill="rgb(244,118,42)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1295.5" _orig_x="141.29"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (18 samples, 0.02%)</title><rect x="621.4411027568923" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(243,220,38)" rx="2" ry="2" _orig_x="617.1" _orig_width="0.2"/>
<text x="624.4411027568923" y="1743.5" _orig_x="620.14"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (14 samples, 0.01%)</title><rect x="655.204678362573" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(247,160,28)" rx="2" ry="2" _orig_x="630.8" _orig_width="0.1"/>
<text x="658.204678362573" y="1823.5" _orig_x="633.76"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (12 samples, 0.01%)</title><rect x="30.20885547201334" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(242,213,43)" rx="2" ry="2" _orig_x="377.2" _orig_width="0.1"/>
<text x="33.20885547201334" y="1695.5" _orig_x="380.17"/>
</g>
<g>
<title>Row::GetField (17 samples, 0.01%)</title><rect x="143.08270676691728" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(236,77,49)" rx="2" ry="2" _orig_x="423.0" _orig_width="0.2"/>
<text x="146.08270676691728" y="1855.5" _orig_x="426.01"/>
</g>
<g class="hide">
<title>[perf-58119.map] (30 samples, 0.03%)</title><rect x="121.22034252297415" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(219,226,3)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1711.5" _orig_x="138.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="326.47109440267343" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(228,103,52)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1887.5" _orig_x="335.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="228.79214703425237" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(209,6,45)" rx="2" ry="2" _orig_x="238.8" _orig_width="0.4"/>
<text x="231.79214703425237" y="1951.5" _orig_x="241.85"/>
</g>
<g class="hide">
<title>[perf-32996.map] (110 samples, 0.09%)</title><rect x="17.3" y="1653" width="1.1" height="15.0" fill="rgb(253,108,41)" rx="2" ry="2"/>
<text x="20.33" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(206,98,13)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1999.5" _orig_x="101.63"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (17 samples, 0.01%)</title><rect x="536.1695906432748" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(217,144,40)" rx="2" ry="2" _orig_x="582.5" _orig_width="0.2"/>
<text x="539.1695906432748" y="1823.5" _orig_x="585.53"/>
</g>
<g class="hide">
<title>blink::TaskHandle::Runner::Run (51 samples, 0.04%)</title><rect x="174.85004177109445" y="1765" width="0.5206766917293233" height="15.0" fill="rgb(237,190,38)" rx="2" ry="2" _orig_x="187.0" _orig_width="0.5"/>
<text x="177.85004177109445" y="1775.5" _orig_x="189.96"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (32 samples, 0.03%)</title><rect x="189.6616541353383" y="1717" width="0.985797827903091" height="15.0" fill="rgb(247,128,19)" rx="2" ry="2" _orig_x="441.9" _orig_width="0.4"/>
<text x="192.6616541353383" y="1727.5" _orig_x="444.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.17%)</title><rect x="881.616583124478" y="1813" width="2.186842105263158" height="15.0" fill="rgb(212,107,22)" rx="2" ry="2" _orig_x="865.7" _orig_width="2.1"/>
<text x="884.616583124478" y="1823.5" _orig_x="868.72"/>
</g>
<g>
<title>BPlusTreeIndex&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertEntry (31,496 samples, 26.49%)</title><rect x="15.668337510442797" y="1957" width="770.4010025062656" height="15.0" fill="rgb(242,58,43)" rx="2" ry="2" _orig_x="371.3" _orig_width="312.6"/>
<text x="18.668337510442797" y="1967.5" _orig_x="374.34">BPlusTreeIndex&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertEntry </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="932.2263575605681" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(246,181,4)" rx="2" ry="2" _orig_x="914.3" _orig_width="0.5"/>
<text x="935.2263575605681" y="1919.5" _orig_x="917.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (584 samples, 0.49%)</title><rect x="148.08725981620725" y="1925" width="6.03984962406015" height="15.0" fill="rgb(229,39,3)" rx="2" ry="2" _orig_x="161.3" _orig_width="5.8"/>
<text x="151.08725981620725" y="1935.5" _orig_x="164.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.15%)</title><rect x="240.4553049289892" y="1909" width="1.874436090225564" height="15.0" fill="rgb(222,28,31)" rx="2" ry="2" _orig_x="250.0" _orig_width="1.8"/>
<text x="243.4553049289892" y="1919.5" _orig_x="253.03"/>
</g>
<g>
<title>Row::DeserializeFrom (2,018 samples, 1.70%)</title><rect x="93.05346700083538" y="1829" width="49.28989139515455" height="15.0" fill="rgb(250,60,0)" rx="2" ry="2" _orig_x="402.7" _orig_width="20.0"/>
<text x="96.05346700083538" y="1839.5" _orig_x="405.72">Row:..</text>
</g>
<g class="hide">
<title>[chrome] (26 samples, 0.02%)</title><rect x="30.830868838763635" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(229,96,30)" rx="2" ry="2" _orig_x="48.7" _orig_width="0.3"/>
<text x="33.830868838763635" y="2015.5" _orig_x="51.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="355.6289891395155" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(251,155,43)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="358.6289891395155" y="1855.5" _orig_x="363.55"/>
</g>
<g class="hide">
<title>blink::ToExecutionContext (12 samples, 0.01%)</title><rect x="178.59891395154557" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(220,135,34)" rx="2" ry="2" _orig_x="190.6" _orig_width="0.1"/>
<text x="181.59891395154557" y="1663.5" _orig_x="193.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.06%)</title><rect x="1161.740643274854" y="1637" width="0.7289473684210526" height="15.0" fill="rgb(212,134,9)" rx="2" ry="2" _orig_x="1134.7" _orig_width="0.7"/>
<text x="1164.740643274854" y="1647.5" _orig_x="1137.71"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::GetObjectProperty (15 samples, 0.01%)</title><rect x="164.7489139515456" y="1429" width="0.10413533834586466" height="15.0" fill="rgb(239,111,45)" rx="2" ry="2" _orig_x="177.3" _orig_width="0.1"/>
<text x="167.7489139515456" y="1439.5" _orig_x="180.26"/>
</g>
<g class="hide">
<title>__strncpy_avx2 (20 samples, 0.02%)</title><rect x="219.00342522974108" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(238,18,50)" rx="2" ry="2" _orig_x="229.4" _orig_width="0.2"/>
<text x="222.00342522974108" y="1711.5" _orig_x="232.44"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (34 samples, 0.03%)</title><rect x="199.21771094402678" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(252,116,16)" rx="2" ry="2" _orig_x="210.4" _orig_width="0.3"/>
<text x="202.21771094402678" y="1663.5" _orig_x="213.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="313.6624477861321" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(213,50,7)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1951.5" _orig_x="323.28"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.08%)</title><rect x="275.75718462823727" y="2037" width="0.937218045112782" height="15.0" fill="rgb(252,109,47)" rx="2" ry="2" _orig_x="283.9" _orig_width="0.9"/>
<text x="278.75718462823727" y="2047.5" _orig_x="286.91"/>
</g>
<g class="hide">
<title>Builtins_JSEntry (1,687 samples, 1.42%)</title><rect x="180.78575605680874" y="1605" width="17.494736842105265" height="15.0" fill="rgb(229,90,7)" rx="2" ry="2" _orig_x="192.7" _orig_width="16.8"/>
<text x="183.78575605680874" y="1615.5" _orig_x="195.74">Builtins_JSEntry </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="1973" width="0.4733253108704372" height="15.0" fill="rgb(221,183,50)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1983.5" _orig_x="371.76"/>
</g>
<g class="hide">
<title>[unknown] (50 samples, 0.04%)</title><rect x="23.2" y="2053" width="0.5" height="15.0" fill="rgb(254,138,33)" rx="2" ry="2"/>
<text x="26.17" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1333" width="0.31240601503759396" height="15.0" fill="rgb(240,114,30)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1343.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (292 samples, 0.25%)</title><rect x="340.52936507936516" y="1989" width="3.019924812030075" height="15.0" fill="rgb(211,140,41)" rx="2" ry="2" _orig_x="346.1" _orig_width="2.9"/>
<text x="343.52936507936516" y="1999.5" _orig_x="349.07"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="922.109440267335" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(221,140,0)" rx="2" ry="2" _orig_x="739.1" _orig_width="0.1"/>
<text x="925.109440267335" y="1775.5" _orig_x="742.08"/>
</g>
<g class="hide">
<title>[chrome] (48 samples, 0.04%)</title><rect x="14.1" y="1893" width="0.5" height="15.0" fill="rgb(217,97,50)" rx="2" ry="2"/>
<text x="17.09" y="1903.5"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="2037" width="0.6" height="15.0" fill="rgb(226,26,31)" rx="2" ry="2"/>
<text x="17.02" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (16 samples, 0.01%)</title><rect x="1111.87552213868" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(248,48,0)" rx="2" ry="2" _orig_x="816.1" _orig_width="0.2"/>
<text x="1114.87552213868" y="1823.5" _orig_x="819.15"/>
</g>
<g class="hide">
<title>[code] (248 samples, 0.21%)</title><rect x="142.46395154553056" y="2021" width="2.6033834586466167" height="15.0" fill="rgb(231,91,12)" rx="2" ry="2" _orig_x="155.9" _orig_width="2.5"/>
<text x="145.46395154553056" y="2031.5" _orig_x="158.94"/>
</g>
<g class="hide">
<title>ThreadPoolSingl (33 samples, 0.03%)</title><rect x="58.2" y="2069" width="0.3" height="15.0" fill="rgb(217,19,19)" rx="2" ry="2"/>
<text x="61.18" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="933.3718462823726" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(251,33,37)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1951.5" _orig_x="918.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.04%)</title><rect x="349.2767335004178" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(210,148,13)" rx="2" ry="2" _orig_x="354.5" _orig_width="0.5"/>
<text x="352.2767335004178" y="1967.5" _orig_x="357.51"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.11%)</title><rect x="31.351545530492956" y="1845" width="1.2496240601503759" height="15.0" fill="rgb(236,157,9)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.2"/>
<text x="34.351545530492956" y="1855.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="119.24177109440272" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(213,100,4)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1759.5" _orig_x="136.65"/>
</g>
<g>
<title>std::__detail::_Identity::operator (13 samples, 0.01%)</title><rect x="348.6215538847117" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(207,120,5)" rx="2" ry="2" _orig_x="506.4" _orig_width="0.1"/>
<text x="351.6215538847117" y="1759.5" _orig_x="509.36"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (14 samples, 0.01%)</title><rect x="238.95154553049284" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(206,70,7)" rx="2" ry="2" _orig_x="461.9" _orig_width="0.2"/>
<text x="241.95154553049284" y="1839.5" _orig_x="464.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="50.82485380116965" y="85" width="0.20827067669172933" height="15.0" fill="rgb(234,102,21)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="95.5" _orig_x="70.86"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (25 samples, 0.02%)</title><rect x="1085.998329156224" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(247,49,44)" rx="2" ry="2" _orig_x="805.6" _orig_width="0.3"/>
<text x="1088.998329156224" y="1823.5" _orig_x="808.62"/>
</g>
<g class="hide">
<title>[unknown] (2,169 samples, 1.82%)</title><rect x="293.6" y="2053" width="21.6" height="15.0" fill="rgb(206,107,0)" rx="2" ry="2"/>
<text x="296.64" y="2063.5">[..</text>
</g>
<g class="hide">
<title>blink::MemoryUsageMonitor::GetCurrentMemoryUsage (16 samples, 0.01%)</title><rect x="174.01695906432752" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(239,185,2)" rx="2" ry="2" _orig_x="186.2" _orig_width="0.2"/>
<text x="177.01695906432752" y="1743.5" _orig_x="189.25"/>
</g>
<g>
<title>Schema::GetColumnCount (11 samples, 0.01%)</title><rect x="439.0685045948204" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(242,223,18)" rx="2" ry="2" _orig_x="543.1" _orig_width="0.1"/>
<text x="442.0685045948204" y="1871.5" _orig_x="546.07"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (73 samples, 0.06%)</title><rect x="808.249791144528" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(254,59,38)" rx="2" ry="2" _orig_x="692.9" _orig_width="0.7"/>
<text x="811.249791144528" y="1759.5" _orig_x="695.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="124.34440267335009" y="1109" width="0.10413533834586466" height="15.0" fill="rgb(254,209,28)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1119.5" _orig_x="141.45"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (24 samples, 0.02%)</title><rect x="899.9289891395155" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(254,98,11)" rx="2" ry="2" _orig_x="730.1" _orig_width="0.3"/>
<text x="902.9289891395155" y="1791.5" _orig_x="733.15"/>
</g>
<g class="hide">
<title>[unknown] (237 samples, 0.20%)</title><rect x="49.57522974101927" y="1973" width="2.3951127819548867" height="15.0" fill="rgb(244,126,18)" rx="2" ry="2" _orig_x="66.7" _orig_width="2.3"/>
<text x="52.57522974101927" y="1983.5" _orig_x="69.67"/>
</g>
<g>
<title>std::allocator&lt;Field*&gt;::allocator (11 samples, 0.01%)</title><rect x="146.53299916457806" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(238,216,49)" rx="2" ry="2" _orig_x="424.4" _orig_width="0.1"/>
<text x="149.53299916457806" y="1791.5" _orig_x="427.44"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="41.244402673350095" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(211,187,51)" rx="2" ry="2" _orig_x="58.7" _orig_width="0.1"/>
<text x="44.244402673350095" y="2047.5" _orig_x="61.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="64.88312447786137" y="1829" width="0.6248120300751879" height="15.0" fill="rgb(242,184,12)" rx="2" ry="2" _orig_x="81.4" _orig_width="0.6"/>
<text x="67.88312447786137" y="1839.5" _orig_x="84.43"/>
</g>
<g class="hide">
<title>[chrome] (11 samples, 0.01%)</title><rect x="86.75154553049296" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(209,71,20)" rx="2" ry="2" _orig_x="102.4" _orig_width="0.1"/>
<text x="89.75154553049296" y="1727.5" _orig_x="105.43"/>
</g>
<g class="hide">
<title>apport (733 samples, 0.62%)</title><rect x="92.5" y="2069" width="7.3" height="15.0" fill="rgb(223,34,38)" rx="2" ry="2"/>
<text x="95.51" y="2079.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (14 samples, 0.01%)</title><rect x="497.96992481203006" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(211,190,16)" rx="2" ry="2" _orig_x="567.0" _orig_width="0.1"/>
<text x="500.96992481203006" y="1743.5" _orig_x="570.01"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (11 samples, 0.01%)</title><rect x="777.1971595655805" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(220,225,35)" rx="2" ry="2" _orig_x="680.3" _orig_width="0.1"/>
<text x="780.1971595655805" y="1855.5" _orig_x="683.34"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="565" width="0.31240601503759396" height="15.0" fill="rgb(239,3,38)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="575.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (115 samples, 0.10%)</title><rect x="27.74436090225561" y="1701" width="2.7109440267335008" height="15.0" fill="rgb(232,60,27)" rx="2" ry="2" _orig_x="376.2" _orig_width="1.1"/>
<text x="30.74436090225561" y="1711.5" _orig_x="379.18"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (30 samples, 0.03%)</title><rect x="484.9081035923142" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(246,170,37)" rx="2" ry="2" _orig_x="561.7" _orig_width="0.3"/>
<text x="487.9081035923142" y="1775.5" _orig_x="564.68"/>
</g>
<g class="hide">
<title>[perf-4309.map] (17 samples, 0.01%)</title><rect x="10.1" y="1861" width="0.1" height="15.0" fill="rgb(224,190,21)" rx="2" ry="2"/>
<text x="13.08" y="1871.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (316 samples, 0.27%)</title><rect x="921.6165413533834" y="1781" width="7.639933166248955" height="15.0" fill="rgb(214,84,46)" rx="2" ry="2" _orig_x="738.9" _orig_width="3.1"/>
<text x="924.6165413533834" y="1791.5" _orig_x="741.90"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (94 samples, 0.08%)</title><rect x="366.85881370091886" y="1813" width="2.4644945697577274" height="15.0" fill="rgb(207,8,43)" rx="2" ry="2" _orig_x="513.8" _orig_width="1.0"/>
<text x="369.85881370091886" y="1823.5" _orig_x="516.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (532 samples, 0.45%)</title><rect x="892.9673350041771" y="1941" width="5.415037593984962" height="15.0" fill="rgb(231,180,12)" rx="2" ry="2" _orig_x="876.6" _orig_width="5.2"/>
<text x="895.9673350041771" y="1951.5" _orig_x="879.56"/>
</g>
<g class="hide">
<title>v8::String::WriteOneByte (15 samples, 0.01%)</title><rect x="196.71846282372604" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(210,32,48)" rx="2" ry="2" _orig_x="208.0" _orig_width="0.2"/>
<text x="199.71846282372604" y="1439.5" _orig_x="211.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="1973" width="0.2" height="15.0" fill="rgb(248,146,53)" rx="2" ry="2"/>
<text x="18.74" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.14%)</title><rect x="928.5816207184628" y="1941" width="1.7703007518796992" height="15.0" fill="rgb(231,198,26)" rx="2" ry="2" _orig_x="910.8" _orig_width="1.7"/>
<text x="931.5816207184628" y="1951.5" _orig_x="913.83"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(210,87,38)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1887.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="358.6" y="2053" width="0.7" height="15.0" fill="rgb(234,49,1)" rx="2" ry="2"/>
<text x="361.58" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="20.1" y="1973" width="0.2" height="15.0" fill="rgb(234,43,21)" rx="2" ry="2"/>
<text x="23.12" y="1983.5"/>
</g>
<g class="hide">
<title>kworker/7:2-eve (77 samples, 0.06%)</title><rect x="358.6" y="2069" width="0.7" height="15.0" fill="rgb(235,111,44)" rx="2" ry="2"/>
<text x="361.58" y="2079.5"/>
</g>
<g class="hide">
<title>[code] (35 samples, 0.03%)</title><rect x="124.13613199665838" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(237,12,22)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1375.5" _orig_x="141.28"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1413" width="2.2909774436090227" height="15.0" fill="rgb(229,45,29)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1423.5" _orig_x="69.82"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="730.8646616541353" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(238,157,26)" rx="2" ry="2" _orig_x="661.5" _orig_width="0.1"/>
<text x="733.8646616541353" y="1855.5" _orig_x="664.47"/>
</g>
<g class="hide">
<title>uv_run (284 samples, 0.24%)</title><rect x="17.1" y="1909" width="2.9" height="15.0" fill="rgb(218,70,51)" rx="2" ry="2"/>
<text x="20.13" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (590 samples, 0.50%)</title><rect x="134.54966583124485" y="1989" width="6.143984962406015" height="15.0" fill="rgb(235,163,6)" rx="2" ry="2" _orig_x="148.3" _orig_width="5.9"/>
<text x="137.54966583124485" y="1999.5" _orig_x="151.30"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1285" width="0.20827067669172933" height="15.0" fill="rgb(227,213,18)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1295.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (14 samples, 0.01%)</title><rect x="834.3734335839598" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(229,85,40)" rx="2" ry="2" _orig_x="703.5" _orig_width="0.1"/>
<text x="837.3734335839598" y="1775.5" _orig_x="706.50"/>
</g>
<g class="hide">
<title>[code] (150 samples, 0.13%)</title><rect x="31.143274853801223" y="1989" width="1.4578947368421051" height="15.0" fill="rgb(207,94,24)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1999.5" _orig_x="51.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (11 samples, 0.01%)</title><rect x="177.58563074352548" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(212,40,6)" rx="2" ry="2" _orig_x="437.0" _orig_width="0.1"/>
<text x="180.58563074352548" y="1743.5" _orig_x="439.97"/>
</g>
<g class="hide">
<title>[perf-9366.map] (12 samples, 0.01%)</title><rect x="10.42034252297416" y="1637" width="0.10413533834586466" height="15.0" fill="rgb(230,156,35)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1647.5" _orig_x="32.07"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="1140.7101086048453" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(242,194,0)" rx="2" ry="2" _orig_x="827.8" _orig_width="0.2"/>
<text x="1143.7101086048453" y="1887.5" _orig_x="830.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="354.2" y="2053" width="0.8" height="15.0" fill="rgb(252,14,14)" rx="2" ry="2"/>
<text x="357.19" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (278 samples, 0.23%)</title><rect x="23.645530492898967" y="1925" width="2.9157894736842103" height="15.0" fill="rgb(233,195,48)" rx="2" ry="2" _orig_x="41.8" _orig_width="2.8"/>
<text x="26.645530492898967" y="1935.5" _orig_x="44.84"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="357" width="2.2909774436090227" height="15.0" fill="rgb(252,107,13)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="367.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="117.57560568086889" y="1285" width="0.10413533834586466" height="15.0" fill="rgb(230,104,46)" rx="2" ry="2" _orig_x="132.0" _orig_width="0.1"/>
<text x="120.57560568086889" y="1295.5" _orig_x="134.96"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (56 samples, 0.05%)</title><rect x="662.1052631578948" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(228,78,6)" rx="2" ry="2" _orig_x="633.6" _orig_width="0.5"/>
<text x="665.1052631578948" y="1823.5" _orig_x="636.56"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="1121.2406015037593" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(245,163,16)" rx="2" ry="2" _orig_x="819.9" _orig_width="0.2"/>
<text x="1124.2406015037593" y="1791.5" _orig_x="822.94"/>
</g>
<g>
<title>Row::~Row (1,981 samples, 1.67%)</title><rect x="1101.7710944026733" y="1893" width="48.55054302422723" height="15.0" fill="rgb(237,204,28)" rx="2" ry="2" _orig_x="812.0" _orig_width="19.7"/>
<text x="1104.7710944026733" y="1903.5" _orig_x="815.00">Row..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (23 samples, 0.02%)</title><rect x="776.4578111946532" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(245,102,48)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.3"/>
<text x="779.4578111946532" y="1807.5" _orig_x="683.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="11.149289891395211" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(247,182,27)" rx="2" ry="2" _orig_x="29.8" _orig_width="0.3"/>
<text x="14.149289891395211" y="1967.5" _orig_x="32.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (503 samples, 0.42%)</title><rect x="878.5966583124477" y="1941" width="5.206766917293233" height="15.0" fill="rgb(224,122,36)" rx="2" ry="2" _orig_x="862.8" _orig_width="5.0"/>
<text x="881.5966583124477" y="1951.5" _orig_x="865.77"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (16 samples, 0.01%)</title><rect x="199.76608187134502" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(245,171,12)" rx="2" ry="2" _orig_x="446.0" _orig_width="0.2"/>
<text x="202.76608187134502" y="1775.5" _orig_x="449.03"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (199 samples, 0.17%)</title><rect x="665.5555555555555" y="1781" width="4.928989139515455" height="15.0" fill="rgb(223,46,20)" rx="2" ry="2" _orig_x="635.0" _orig_width="2.0"/>
<text x="668.5555555555555" y="1791.5" _orig_x="637.99"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (26 samples, 0.02%)</title><rect x="886.8671679197994" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(236,76,34)" rx="2" ry="2" _orig_x="724.8" _orig_width="0.3"/>
<text x="889.8671679197994" y="1775.5" _orig_x="727.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="25.1" y="1893" width="0.1" height="15.0" fill="rgb(236,57,32)" rx="2" ry="2"/>
<text x="28.06" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (12 samples, 0.01%)</title><rect x="283.0466583124478" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(236,112,6)" rx="2" ry="2" _orig_x="290.9" _orig_width="0.2"/>
<text x="286.0466583124478" y="1855.5" _orig_x="293.94"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (26 samples, 0.02%)</title><rect x="87.1386800334169" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(231,29,27)" rx="2" ry="2" _orig_x="400.3" _orig_width="0.3"/>
<text x="90.1386800334169" y="1807.5" _orig_x="403.33"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (79 samples, 0.07%)</title><rect x="887.6065162907269" y="1765" width="1.971595655806182" height="15.0" fill="rgb(215,116,18)" rx="2" ry="2" _orig_x="725.1" _orig_width="0.8"/>
<text x="890.6065162907269" y="1775.5" _orig_x="728.10"/>
</g>
<g class="hide">
<title>[perf-58119.map] (24 samples, 0.02%)</title><rect x="112.2647034252298" y="1573" width="0.20827067669172933" height="15.0" fill="rgb(223,150,5)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1583.5" _orig_x="129.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="271.9041771094403" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(229,46,44)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1823.5" _orig_x="283.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,184 samples, 1.00%)</title><rect x="1169.8" y="1765" width="11.8" height="15.0" fill="rgb(250,41,10)" rx="2" ry="2"/>
<text x="1172.83" y="1775.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(237,125,31)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1855.5" _orig_x="298.05"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (560 samples, 0.47%)</title><rect x="205.43441938178782" y="1797" width="13.554720133667502" height="15.0" fill="rgb(215,151,38)" rx="2" ry="2" _orig_x="448.3" _orig_width="5.5"/>
<text x="208.43441938178782" y="1807.5" _orig_x="451.28"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1445" width="0.20827067669172933" height="15.0" fill="rgb(211,124,42)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1455.5" _orig_x="111.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="355.3165831244779" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(243,18,43)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="358.3165831244779" y="1919.5" _orig_x="363.33"/>
</g>
<g class="hide">
<title>[code] (309 samples, 0.26%)</title><rect x="125.59402673350046" y="1909" width="3.2281954887218047" height="15.0" fill="rgb(221,96,24)" rx="2" ry="2" _orig_x="139.7" _orig_width="3.1"/>
<text x="128.59402673350047" y="1919.5" _orig_x="142.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="252.63913951545535" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(206,164,44)" rx="2" ry="2" _orig_x="261.7" _orig_width="0.2"/>
<text x="255.63913951545535" y="1775.5" _orig_x="264.67"/>
</g>
<g class="hide">
<title>[unknown] (17 samples, 0.01%)</title><rect x="325.3256056808689" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(248,10,23)" rx="2" ry="2" _orig_x="331.5" _orig_width="0.1"/>
<text x="328.3256056808689" y="2031.5" _orig_x="334.48"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (919 samples, 0.77%)</title><rect x="95.76441102756894" y="1797" width="22.42690058479532" height="15.0" fill="rgb(213,102,10)" rx="2" ry="2" _orig_x="403.8" _orig_width="9.1"/>
<text x="98.76441102756894" y="1807.5" _orig_x="406.77">s..</text>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (11 samples, 0.01%)</title><rect x="472.58563074352554" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(237,0,7)" rx="2" ry="2" _orig_x="556.7" _orig_width="0.1"/>
<text x="475.58563074352554" y="1743.5" _orig_x="559.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="11.774101921470397" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(231,11,0)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="1999.5" _orig_x="33.42"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (14 samples, 0.01%)</title><rect x="318.4526733500418" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(217,32,22)" rx="2" ry="2" _orig_x="324.9" _orig_width="0.1"/>
<text x="321.4526733500418" y="2015.5" _orig_x="327.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(236,22,10)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1471.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="661" width="0.31240601503759396" height="15.0" fill="rgb(218,3,44)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="671.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (808 samples, 0.68%)</title><rect x="1173.6" y="1733" width="8.0" height="15.0" fill="rgb(239,157,12)" rx="2" ry="2"/>
<text x="1176.56" y="1743.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,355 samples, 1.14%)</title><rect x="452.3767752715121" y="1781" width="33.27067669172932" height="15.0" fill="rgb(213,17,12)" rx="2" ry="2" _orig_x="548.5" _orig_width="13.5"/>
<text x="455.3767752715121" y="1791.5" _orig_x="551.53">std..</text>
</g>
<g class="hide">
<title>[perf-58119.map] (23 samples, 0.02%)</title><rect x="121.32447786132002" y="1653" width="0.20827067669172933" height="15.0" fill="rgb(248,115,26)" rx="2" ry="2" _orig_x="135.6" _orig_width="0.2"/>
<text x="124.32447786132002" y="1663.5" _orig_x="138.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="132.46695906432757" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(214,226,11)" rx="2" ry="2" _orig_x="146.3" _orig_width="0.2"/>
<text x="135.46695906432757" y="1791.5" _orig_x="149.28"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (19 samples, 0.02%)</title><rect x="538.1411862990809" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(242,168,19)" rx="2" ry="2" _orig_x="583.3" _orig_width="0.2"/>
<text x="541.1411862990809" y="1807.5" _orig_x="586.30"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (16 samples, 0.01%)</title><rect x="774.7326649958228" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(222,28,31)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.1"/>
<text x="777.7326649958228" y="1839.5" _orig_x="682.27"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1157" width="0.20827067669172933" height="15.0" fill="rgb(215,66,49)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1167.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (200 samples, 0.17%)</title><rect x="142.98462823725987" y="1989" width="2.082706766917293" height="15.0" fill="rgb(243,194,38)" rx="2" ry="2" _orig_x="156.4" _orig_width="2.0"/>
<text x="145.98462823725987" y="1999.5" _orig_x="159.42"/>
</g>
<g class="hide">
<title>__poll (26 samples, 0.02%)</title><rect x="316.0" y="2053" width="0.2" height="15.0" fill="rgb(209,160,25)" rx="2" ry="2"/>
<text x="318.99" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="132.36282372598166" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(240,135,1)" rx="2" ry="2" _orig_x="146.2" _orig_width="0.3"/>
<text x="135.36282372598166" y="1807.5" _orig_x="149.21"/>
</g>
<g class="hide">
<title>Builtins_JSBuiltinsConstructStub (1,147 samples, 0.96%)</title><rect x="185.99252297410197" y="1557" width="11.767293233082707" height="15.0" fill="rgb(251,105,27)" rx="2" ry="2" _orig_x="197.7" _orig_width="11.3"/>
<text x="188.99252297410197" y="1567.5" _orig_x="200.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,220 samples, 1.03%)</title><rect x="915.9812447786132" y="1925" width="12.600375939849624" height="15.0" fill="rgb(232,92,45)" rx="2" ry="2" _orig_x="898.7" _orig_width="12.1"/>
<text x="918.9812447786132" y="1935.5" _orig_x="901.66"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="324.492522974102" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(209,201,50)" rx="2" ry="2" _orig_x="330.7" _orig_width="0.1"/>
<text x="327.492522974102" y="2047.5" _orig_x="333.70"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (11 samples, 0.01%)</title><rect x="1120.9941520467835" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(238,221,12)" rx="2" ry="2" _orig_x="819.8" _orig_width="0.1"/>
<text x="1123.9941520467835" y="1791.5" _orig_x="822.83"/>
</g>
<g class="hide">
<title>[perf-58119.map] (16 samples, 0.01%)</title><rect x="118.30455304928994" y="1413" width="0.10413533834586466" height="15.0" fill="rgb(221,179,30)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1423.5" _orig_x="135.68"/>
</g>
<g class="hide">
<title>[libfreeblpriv3.so] (15 samples, 0.01%)</title><rect x="10.3" y="2053" width="0.1" height="15.0" fill="rgb(230,181,46)" rx="2" ry="2"/>
<text x="13.27" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (195 samples, 0.16%)</title><rect x="49.679365079365134" y="229" width="2.082706766917293" height="15.0" fill="rgb(242,122,47)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.0"/>
<text x="52.679365079365134" y="239.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (73 samples, 0.06%)</title><rect x="42.91056808688393" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(212,70,33)" rx="2" ry="2" _orig_x="60.3" _orig_width="0.7"/>
<text x="45.91056808688393" y="2047.5" _orig_x="63.26"/>
</g>
<g class="hide">
<title>[code] (141 samples, 0.12%)</title><rect x="31.143274853801223" y="1909" width="1.4578947368421051" height="15.0" fill="rgb(211,222,23)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1919.5" _orig_x="52.01"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (23 samples, 0.02%)</title><rect x="544.7953216374268" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(252,108,20)" rx="2" ry="2" _orig_x="586.0" _orig_width="0.3"/>
<text x="547.7953216374268" y="1743.5" _orig_x="589.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="911.7116959064329" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(233,104,22)" rx="2" ry="2" _orig_x="894.6" _orig_width="0.1"/>
<text x="914.7116959064329" y="1951.5" _orig_x="897.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="1973" width="0.4" height="15.0" fill="rgb(211,175,49)" rx="2" ry="2"/>
<text x="24.77" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="12.0" y="1829" width="0.1" height="15.0" fill="rgb(228,149,4)" rx="2" ry="2"/>
<text x="15.03" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="11.3" y="1925" width="0.1" height="15.0" fill="rgb(254,114,27)" rx="2" ry="2"/>
<text x="14.28" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.10%)</title><rect x="56.2398913951546" y="1941" width="1.3537593984962406" height="15.0" fill="rgb(249,173,40)" rx="2" ry="2" _orig_x="73.1" _orig_width="1.3"/>
<text x="59.2398913951546" y="1951.5" _orig_x="76.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.05%)</title><rect x="932.0180868838764" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(213,9,9)" rx="2" ry="2" _orig_x="914.1" _orig_width="0.7"/>
<text x="935.0180868838764" y="1983.5" _orig_x="917.13"/>
</g>
<g class="hide">
<title>[perf-58119.map] (16 samples, 0.01%)</title><rect x="112.57710944026739" y="1573" width="0.10413533834586466" height="15.0" fill="rgb(228,227,42)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1583.5" _orig_x="130.17"/>
</g>
<g class="hide">
<title>start_thread (44 samples, 0.04%)</title><rect x="34.0" y="2053" width="0.4" height="15.0" fill="rgb(205,42,49)" rx="2" ry="2"/>
<text x="37.00" y="2063.5"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (16 samples, 0.01%)</title><rect x="464.9456975772766" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(243,72,32)" rx="2" ry="2" _orig_x="553.6" _orig_width="0.2"/>
<text x="467.9456975772766" y="1711.5" _orig_x="556.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (283 samples, 0.24%)</title><rect x="23.645530492898967" y="1941" width="2.9157894736842103" height="15.0" fill="rgb(227,161,29)" rx="2" ry="2" _orig_x="41.8" _orig_width="2.8"/>
<text x="26.645530492898967" y="1951.5" _orig_x="44.79"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1029" width="0.31240601503759396" height="15.0" fill="rgb(227,119,47)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1039.5" _orig_x="32.46"/>
</g>
<g>
<title>[libminisql_shared.so] (13 samples, 0.01%)</title><rect x="584.9665831244777" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(221,52,31)" rx="2" ry="2" _orig_x="602.3" _orig_width="0.2"/>
<text x="587.9665831244777" y="1743.5" _orig_x="605.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (339 samples, 0.29%)</title><rect x="310.12184628237264" y="1973" width="3.4364661654135333" height="15.0" fill="rgb(235,198,9)" rx="2" ry="2" _orig_x="316.9" _orig_width="3.3"/>
<text x="313.12184628237264" y="1983.5" _orig_x="319.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="353.85868838763577" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(245,167,20)" rx="2" ry="2" _orig_x="358.9" _orig_width="0.4"/>
<text x="356.85868838763577" y="1951.5" _orig_x="361.93"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="581" width="0.31240601503759396" height="15.0" fill="rgb(238,74,46)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="591.5" _orig_x="32.46"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (14 samples, 0.01%)</title><rect x="680.3425229741019" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(231,42,18)" rx="2" ry="2" _orig_x="641.0" _orig_width="0.2"/>
<text x="683.3425229741019" y="1839.5" _orig_x="644.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (20 samples, 0.02%)</title><rect x="1050.5096073517127" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(218,210,8)" rx="2" ry="2" _orig_x="791.2" _orig_width="0.2"/>
<text x="1053.5096073517127" y="1855.5" _orig_x="794.20"/>
</g>
<g class="hide">
<title>[perf-9366.map] (17 samples, 0.01%)</title><rect x="26.6" y="2053" width="0.2" height="15.0" fill="rgb(244,185,0)" rx="2" ry="2"/>
<text x="29.62" y="2063.5"/>
</g>
<g>
<title>ExecuteEngine::ExecuteExecfile (48,201 samples, 40.53%)</title><rect x="10.492898913951514" y="2005" width="1178.767752715121" height="15.0" fill="rgb(250,77,47)" rx="2" ry="2" _orig_x="369.2" _orig_width="478.3"/>
<text x="13.492898913951514" y="2015.5" _orig_x="372.20">ExecuteEngine::ExecuteExecfile </text>
</g>
<g class="hide">
<title>blink::V8Element::GetBoundingClientRectMethodCallback (132 samples, 0.11%)</title><rect x="182.13951545530497" y="1525" width="1.4578947368421051" height="15.0" fill="rgb(223,101,37)" rx="2" ry="2" _orig_x="194.0" _orig_width="1.4"/>
<text x="185.13951545530497" y="1535.5" _orig_x="197.05"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="551.203007518797" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(225,137,35)" rx="2" ry="2" _orig_x="588.6" _orig_width="0.1"/>
<text x="554.203007518797" y="1711.5" _orig_x="591.61"/>
</g>
<g class="hide">
<title>WTF::TraceHashTableBackingInCollectionTrait&lt; (14 samples, 0.01%)</title><rect x="174.85004177109445" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(254,18,10)" rx="2" ry="2" _orig_x="187.0" _orig_width="0.2"/>
<text x="177.85004177109445" y="1711.5" _orig_x="190.01"/>
</g>
<g>
<title>__memset_avx2_unaligned (13 samples, 0.01%)</title><rect x="586.4452798663324" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(218,173,13)" rx="2" ry="2" _orig_x="602.9" _orig_width="0.1"/>
<text x="589.4452798663324" y="1711.5" _orig_x="605.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (148 samples, 0.12%)</title><rect x="915.7017543859648" y="1765" width="3.6967418546365916" height="15.0" fill="rgb(223,228,7)" rx="2" ry="2" _orig_x="736.5" _orig_width="1.5"/>
<text x="918.7017543859648" y="1775.5" _orig_x="739.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="351.98425229741025" y="1941" width="0.5206766917293233" height="15.0" fill="rgb(248,186,45)" rx="2" ry="2" _orig_x="357.1" _orig_width="0.5"/>
<text x="354.98425229741025" y="1951.5" _orig_x="360.09"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1013" width="2.2909774436090227" height="15.0" fill="rgb(250,209,53)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1023.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="170.68462823725986" y="1749" width="0.6248120300751879" height="15.0" fill="rgb(220,135,31)" rx="2" ry="2" _orig_x="183.0" _orig_width="0.6"/>
<text x="173.68462823725986" y="1759.5" _orig_x="186.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (25 samples, 0.02%)</title><rect x="728.6466165413534" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(245,35,38)" rx="2" ry="2" _orig_x="660.6" _orig_width="0.2"/>
<text x="731.6466165413534" y="1775.5" _orig_x="663.60"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (14 samples, 0.01%)</title><rect x="59.57222222222227" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(206,226,7)" rx="2" ry="2" _orig_x="76.3" _orig_width="0.1"/>
<text x="62.57222222222227" y="2031.5" _orig_x="79.26"/>
</g>
<g class="hide">
<title>[unknown] (237 samples, 0.20%)</title><rect x="317.93199665831247" y="2037" width="2.3951127819548867" height="15.0" fill="rgb(228,171,38)" rx="2" ry="2" _orig_x="324.4" _orig_width="2.3"/>
<text x="320.93199665831247" y="2047.5" _orig_x="327.38"/>
</g>
<g class="hide">
<title>snd_ctl_ioctl (90 samples, 0.08%)</title><rect x="66.5492898913952" y="1973" width="0.937218045112782" height="15.0" fill="rgb(222,29,41)" rx="2" ry="2" _orig_x="83.0" _orig_width="0.9"/>
<text x="69.5492898913952" y="1983.5" _orig_x="85.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="933.3718462823726" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(232,212,33)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1983.5" _orig_x="918.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.03%)</title><rect x="16.35605680868844" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(221,52,24)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1919.5" _orig_x="37.83"/>
</g>
<g>
<title>malloc (15 samples, 0.01%)</title><rect x="1047.3057644110274" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(241,12,2)" rx="2" ry="2" _orig_x="789.9" _orig_width="0.1"/>
<text x="1050.3057644110274" y="1871.5" _orig_x="792.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="41.76507936507942" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(231,187,51)" rx="2" ry="2" _orig_x="59.2" _orig_width="0.4"/>
<text x="44.76507936507942" y="2031.5" _orig_x="62.25"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (14 samples, 0.01%)</title><rect x="28.97660818713447" y="1653" width="0.4928989139515455" height="15.0" fill="rgb(234,121,31)" rx="2" ry="2" _orig_x="376.7" _orig_width="0.2"/>
<text x="31.97660818713447" y="1663.5" _orig_x="379.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (179 samples, 0.15%)</title><rect x="256.2030075187969" y="1749" width="4.43609022556391" height="15.0" fill="rgb(215,111,3)" rx="2" ry="2" _orig_x="468.9" _orig_width="1.8"/>
<text x="259.2030075187969" y="1759.5" _orig_x="471.91"/>
</g>
<g>
<title>std::__detail::_Identity::operator (19 samples, 0.02%)</title><rect x="481.2113617376776" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(240,5,38)" rx="2" ry="2" _orig_x="560.2" _orig_width="0.2"/>
<text x="484.2113617376776" y="1775.5" _orig_x="563.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="29.268838763575662" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(227,212,51)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="2015.5" _orig_x="50.18"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (34 samples, 0.03%)</title><rect x="530.7477025898078" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(245,106,3)" rx="2" ry="2" _orig_x="580.3" _orig_width="0.3"/>
<text x="533.7477025898078" y="1791.5" _orig_x="583.29"/>
</g>
<g class="hide">
<title>[perf-8551.map] (1,601 samples, 1.35%)</title><rect x="181.5147034252298" y="1573" width="16.557518796992483" height="15.0" fill="rgb(207,168,5)" rx="2" ry="2" _orig_x="193.4" _orig_width="15.9"/>
<text x="184.5147034252298" y="1583.5" _orig_x="196.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="13.8" y="1989" width="0.2" height="15.0" fill="rgb(208,16,16)" rx="2" ry="2"/>
<text x="16.77" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-15821.map] (55 samples, 0.05%)</title><rect x="92.68725981620723" y="1653" width="0.6248120300751879" height="15.0" fill="rgb(224,65,35)" rx="2" ry="2" _orig_x="108.1" _orig_width="0.6"/>
<text x="95.68725981620723" y="1663.5" _orig_x="111.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.03%)</title><rect x="352.0883876357561" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(234,178,10)" rx="2" ry="2" _orig_x="357.2" _orig_width="0.4"/>
<text x="355.0883876357561" y="1919.5" _orig_x="360.22"/>
</g>
<g class="hide">
<title>[firefox] (13 samples, 0.01%)</title><rect x="27.915079365079418" y="37" width="0.10413533834586466" height="15.0" fill="rgb(228,213,0)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.1"/>
<text x="30.915079365079418" y="47.5" _orig_x="48.88"/>
</g>
<g>
<title>std::__detail::_Identity::operator (22 samples, 0.02%)</title><rect x="995.3049289891393" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(223,138,39)" rx="2" ry="2" _orig_x="768.8" _orig_width="0.2"/>
<text x="998.3049289891393" y="1791.5" _orig_x="771.79"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="273.25793650793656" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(238,167,10)" rx="2" ry="2" _orig_x="281.5" _orig_width="0.2"/>
<text x="276.25793650793656" y="2047.5" _orig_x="284.55"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="597" width="0.31240601503759396" height="15.0" fill="rgb(245,116,38)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="607.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>malloc (11 samples, 0.01%)</title><rect x="330.5" y="2053" width="0.1" height="15.0" fill="rgb(234,62,23)" rx="2" ry="2"/>
<text x="333.46" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (17 samples, 0.01%)</title><rect x="122.62740183792812" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,69,3)" rx="2" ry="2" _orig_x="414.7" _orig_width="0.1"/>
<text x="125.62740183792812" y="1759.5" _orig_x="417.67"/>
</g>
<g class="hide">
<title>[perf-58119.map] (81 samples, 0.07%)</title><rect x="120.17898913951551" y="1557" width="0.8330827067669173" height="15.0" fill="rgb(253,205,3)" rx="2" ry="2" _orig_x="134.5" _orig_width="0.8"/>
<text x="123.17898913951551" y="1567.5" _orig_x="137.46"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.03%)</title><rect x="17.9" y="1349" width="0.4" height="15.0" fill="rgb(214,81,10)" rx="2" ry="2"/>
<text x="20.90" y="1359.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (1,850 samples, 1.56%)</title><rect x="179.74440267335007" y="1653" width="19.056766917293235" height="15.0" fill="rgb(242,156,30)" rx="2" ry="2" _orig_x="191.7" _orig_width="18.3"/>
<text x="182.74440267335007" y="1663.5" _orig_x="194.68">v8::Function::Call </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="15.002297410192202" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(209,156,47)" rx="2" ry="2" _orig_x="33.5" _orig_width="0.2"/>
<text x="18.002297410192202" y="2047.5" _orig_x="36.55"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (19 samples, 0.02%)</title><rect x="355.5221386800333" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(235,195,13)" rx="2" ry="2" _orig_x="509.2" _orig_width="0.2"/>
<text x="358.5221386800333" y="1727.5" _orig_x="512.23"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (22 samples, 0.02%)</title><rect x="712.873851294904" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(252,109,54)" rx="2" ry="2" _orig_x="654.2" _orig_width="0.2"/>
<text x="715.873851294904" y="1759.5" _orig_x="657.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="274.81996658312454" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(251,52,48)" rx="2" ry="2" _orig_x="283.0" _orig_width="0.3"/>
<text x="277.81996658312454" y="1999.5" _orig_x="286.05"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.03%)</title><rect x="14.6" y="1893" width="0.4" height="15.0" fill="rgb(251,134,51)" rx="2" ry="2"/>
<text x="17.64" y="1903.5"/>
</g>
<g class="hide">
<title>Watcher::triggerCallbacks (24 samples, 0.02%)</title><rect x="161.62485380116965" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(225,148,28)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1999.5" _orig_x="177.26"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (17 samples, 0.01%)</title><rect x="187.6900584795322" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(242,8,26)" rx="2" ry="2" _orig_x="441.1" _orig_width="0.1"/>
<text x="190.6900584795322" y="1727.5" _orig_x="444.06"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (12 samples, 0.01%)</title><rect x="470.3675856307434" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(210,150,22)" rx="2" ry="2" _orig_x="555.8" _orig_width="0.1"/>
<text x="473.3675856307434" y="1759.5" _orig_x="558.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (222 samples, 0.19%)</title><rect x="240.0387635756057" y="1973" width="2.2909774436090227" height="15.0" fill="rgb(210,177,21)" rx="2" ry="2" _orig_x="249.6" _orig_width="2.2"/>
<text x="243.0387635756057" y="1983.5" _orig_x="252.57"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1621" width="0.31240601503759396" height="15.0" fill="rgb(217,123,16)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1631.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (220 samples, 0.19%)</title><rect x="32.426900584795376" y="1749" width="5.4218880534670015" height="15.0" fill="rgb(238,20,36)" rx="2" ry="2" _orig_x="378.1" _orig_width="2.2"/>
<text x="35.426900584795376" y="1759.5" _orig_x="381.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="349.06846282372607" y="1989" width="0.7289473684210526" height="15.0" fill="rgb(209,131,20)" rx="2" ry="2" _orig_x="354.3" _orig_width="0.7"/>
<text x="352.06846282372607" y="1999.5" _orig_x="357.32"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (14 samples, 0.01%)</title><rect x="524.3400167084378" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(253,92,10)" rx="2" ry="2" _orig_x="577.7" _orig_width="0.2"/>
<text x="527.3400167084378" y="1791.5" _orig_x="580.71"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1269" width="0.20827067669172933" height="15.0" fill="rgb(210,203,47)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1279.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="94.45756056808693" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(212,157,1)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.1"/>
<text x="97.45756056808693" y="1951.5" _orig_x="112.81"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (38 samples, 0.03%)</title><rect x="371.29490392648296" y="1781" width="0.985797827903091" height="15.0" fill="rgb(227,141,1)" rx="2" ry="2" _orig_x="515.6" _orig_width="0.4"/>
<text x="374.29490392648296" y="1791.5" _orig_x="518.59"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (150 samples, 0.13%)</title><rect x="946.2614870509606" y="1909" width="3.6967418546365916" height="15.0" fill="rgb(218,64,42)" rx="2" ry="2" _orig_x="748.9" _orig_width="1.5"/>
<text x="949.2614870509606" y="1919.5" _orig_x="751.92"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (48 samples, 0.04%)</title><rect x="215.53884711779443" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(207,98,0)" rx="2" ry="2" _orig_x="452.4" _orig_width="0.5"/>
<text x="218.53884711779443" y="1743.5" _orig_x="455.40"/>
</g>
<g class="hide">
<title>[unknown] (200 samples, 0.17%)</title><rect x="49.679365079365134" y="245" width="2.082706766917293" height="15.0" fill="rgb(223,110,35)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.0"/>
<text x="52.679365079365134" y="255.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (11 samples, 0.01%)</title><rect x="113.75522138680037" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,90,8)" rx="2" ry="2" _orig_x="411.1" _orig_width="0.1"/>
<text x="116.75522138680037" y="1759.5" _orig_x="414.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="355.73312447786134" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(229,26,15)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="2047.5" _orig_x="363.68"/>
</g>
<g class="hide">
<title>[perf-32884.map] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(230,0,23)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1711.5" _orig_x="118.02"/>
</g>
<g>
<title>Field::CompareGreaterThan (20 samples, 0.02%)</title><rect x="168.7134502923976" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(224,35,48)" rx="2" ry="2" _orig_x="433.4" _orig_width="0.2"/>
<text x="171.7134502923976" y="1855.5" _orig_x="436.38"/>
</g>
<g class="hide">
<title>blink::WindowOrWorkerGlobalScope::setInterval (12 samples, 0.01%)</title><rect x="185.36771094402678" y="1509" width="0.10413533834586466" height="15.0" fill="rgb(237,52,25)" rx="2" ry="2" _orig_x="197.1" _orig_width="0.1"/>
<text x="188.36771094402678" y="1519.5" _orig_x="200.10"/>
</g>
<g class="hide">
<title>blink::(anonymous namespace)::IsCallbackFunctionRunnableInternal (93 samples, 0.08%)</title><rect x="177.76583124477867" y="1669" width="0.937218045112782" height="15.0" fill="rgb(235,101,26)" rx="2" ry="2" _orig_x="189.8" _orig_width="0.9"/>
<text x="180.76583124477867" y="1679.5" _orig_x="192.79"/>
</g>
<g class="hide">
<title>[[vdso]] (11 samples, 0.01%)</title><rect x="100.1" y="2053" width="0.1" height="15.0" fill="rgb(229,163,12)" rx="2" ry="2"/>
<text x="103.11" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (37 samples, 0.03%)</title><rect x="374.252297410192" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(218,48,8)" rx="2" ry="2" _orig_x="516.8" _orig_width="0.3"/>
<text x="377.252297410192" y="1775.5" _orig_x="519.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="133.1959064327486" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(239,104,38)" rx="2" ry="2" _orig_x="147.0" _orig_width="0.5"/>
<text x="136.1959064327486" y="1999.5" _orig_x="149.96"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(214,126,5)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1967.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>blink::ScheduledAction::Execute (220 samples, 0.19%)</title><rect x="163.08274853801174" y="1749" width="2.2909774436090227" height="15.0" fill="rgb(251,166,9)" rx="2" ry="2" _orig_x="175.7" _orig_width="2.2"/>
<text x="166.08274853801174" y="1759.5" _orig_x="178.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.09%)</title><rect x="903.1725981620718" y="1925" width="1.0413533834586466" height="15.0" fill="rgb(250,90,27)" rx="2" ry="2" _orig_x="886.4" _orig_width="1.0"/>
<text x="906.1725981620718" y="1935.5" _orig_x="889.39"/>
</g>
<g>
<title>Schema::GetColumn (19 samples, 0.02%)</title><rect x="797.6524644945698" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(226,23,27)" rx="2" ry="2" _orig_x="688.6" _orig_width="0.1"/>
<text x="800.6524644945698" y="1855.5" _orig_x="691.56"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (16 samples, 0.01%)</title><rect x="751.5664160401002" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(248,144,29)" rx="2" ry="2" _orig_x="669.9" _orig_width="0.2"/>
<text x="754.5664160401002" y="1839.5" _orig_x="672.95"/>
</g>
<g class="hide">
<title>blink::TimerBase::RunInternal (3,012 samples, 2.53%)</title><rect x="175.3707184628238" y="1765" width="31.13646616541353" height="15.0" fill="rgb(212,211,26)" rx="2" ry="2" _orig_x="187.5" _orig_width="29.9"/>
<text x="178.3707184628238" y="1775.5" _orig_x="190.55">blink::TimerBase::RunInternal </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (23 samples, 0.02%)</title><rect x="118.68421052631582" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(238,195,50)" rx="2" ry="2" _orig_x="413.1" _orig_width="0.2"/>
<text x="121.68421052631582" y="1775.5" _orig_x="416.10"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (15 samples, 0.01%)</title><rect x="335.55973266499586" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(236,132,18)" rx="2" ry="2" _orig_x="501.1" _orig_width="0.1"/>
<text x="338.55973266499586" y="1743.5" _orig_x="504.06"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (14 samples, 0.01%)</title><rect x="873.0659983291563" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(231,226,5)" rx="2" ry="2" _orig_x="719.2" _orig_width="0.2"/>
<text x="876.0659983291563" y="1791.5" _orig_x="722.21"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="1016.4995822890559" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(205,229,32)" rx="2" ry="2" _orig_x="777.4" _orig_width="0.1"/>
<text x="1019.4995822890559" y="1791.5" _orig_x="780.42"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (29 samples, 0.02%)</title><rect x="995.7978279030909" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(250,110,19)" rx="2" ry="2" _orig_x="769.0" _orig_width="0.3"/>
<text x="998.7978279030909" y="1791.5" _orig_x="772.01"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (29 samples, 0.02%)</title><rect x="502.15956558061833" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(206,7,2)" rx="2" ry="2" _orig_x="568.7" _orig_width="0.3"/>
<text x="505.15956558061833" y="1839.5" _orig_x="571.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="51.03312447786137" y="53" width="0.10413533834586466" height="15.0" fill="rgb(208,98,52)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="63.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="1163.2571199358201" y="1941" width="0.7099879663056557" height="15.0" fill="rgb(245,143,3)" rx="2" ry="2" _orig_x="848.4" _orig_width="0.3"/>
<text x="1166.2571199358201" y="1951.5" _orig_x="851.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.12%)</title><rect x="152.66921470342527" y="1749" width="1.4578947368421051" height="15.0" fill="rgb(234,190,33)" rx="2" ry="2" _orig_x="165.7" _orig_width="1.4"/>
<text x="155.66921470342527" y="1759.5" _orig_x="168.71"/>
</g>
<g class="hide">
<title>[unknown] (42 samples, 0.04%)</title><rect x="15.3" y="2053" width="0.4" height="15.0" fill="rgb(227,222,49)" rx="2" ry="2"/>
<text x="18.32" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (252 samples, 0.21%)</title><rect x="350.3467000835422" y="1749" width="6.1612364243943185" height="15.0" fill="rgb(211,123,16)" rx="2" ry="2" _orig_x="507.1" _orig_width="2.5"/>
<text x="353.3467000835422" y="1759.5" _orig_x="510.11"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (57 samples, 0.05%)</title><rect x="673.9348370927318" y="1717" width="1.4786967418546364" height="15.0" fill="rgb(217,73,54)" rx="2" ry="2" _orig_x="638.4" _orig_width="0.6"/>
<text x="676.9348370927318" y="1727.5" _orig_x="641.39"/>
</g>
<g>
<title>Row::DeserializeFrom (5,317 samples, 4.47%)</title><rect x="958.5839598997493" y="1877" width="129.87886382623225" height="15.0" fill="rgb(240,23,9)" rx="2" ry="2" _orig_x="753.9" _orig_width="52.7"/>
<text x="961.5839598997493" y="1887.5" _orig_x="756.85">Row::DeserializeF..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (228 samples, 0.19%)</title><rect x="636.72096908939" y="1781" width="5.668337510442773" height="15.0" fill="rgb(210,87,4)" rx="2" ry="2" _orig_x="623.3" _orig_width="2.3"/>
<text x="639.72096908939" y="1791.5" _orig_x="626.35"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (30 samples, 0.03%)</title><rect x="1168.065998329156" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(252,192,25)" rx="2" ry="2" _orig_x="838.9" _orig_width="0.3"/>
<text x="1171.065998329156" y="1887.5" _orig_x="841.87"/>
</g>
<g class="hide">
<title>[perf-32996.map] (78 samples, 0.07%)</title><rect x="18.5" y="1717" width="0.8" height="15.0" fill="rgb(250,50,39)" rx="2" ry="2"/>
<text x="21.49" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="131.84214703425232" y="1957" width="0.8330827067669173" height="15.0" fill="rgb(224,149,38)" rx="2" ry="2" _orig_x="145.7" _orig_width="0.8"/>
<text x="134.84214703425232" y="1967.5" _orig_x="148.72"/>
</g>
<g class="hide">
<title>[unknown] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="2005" width="47.58984962406015" height="15.0" fill="rgb(218,174,2)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="2015.5" _orig_x="1138.90">[unknown] </text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (17 samples, 0.01%)</title><rect x="407.7694235588972" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(211,124,31)" rx="2" ry="2" _orig_x="530.4" _orig_width="0.2"/>
<text x="410.7694235588972" y="1775.5" _orig_x="533.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="95.49891395154557" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(244,191,47)" rx="2" ry="2" _orig_x="110.8" _orig_width="0.5"/>
<text x="98.49891395154557" y="2031.5" _orig_x="113.82"/>
</g>
<g class="hide">
<title>v8::Object::Set (22 samples, 0.02%)</title><rect x="124.86507936507942" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(234,13,40)" rx="2" ry="2" _orig_x="139.0" _orig_width="0.2"/>
<text x="127.86507936507942" y="1887.5" _orig_x="142.01"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (54 samples, 0.05%)</title><rect x="196.31578947368425" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(214,89,42)" rx="2" ry="2" _orig_x="444.6" _orig_width="0.6"/>
<text x="199.31578947368425" y="1807.5" _orig_x="447.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="66.8616959064328" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(247,217,36)" rx="2" ry="2" _orig_x="83.3" _orig_width="0.1"/>
<text x="69.8616959064328" y="1935.5" _orig_x="86.34"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.04%)</title><rect x="124.0319966583125" y="1397" width="0.5206766917293233" height="15.0" fill="rgb(216,160,29)" rx="2" ry="2" _orig_x="138.2" _orig_width="0.5"/>
<text x="127.0319966583125" y="1407.5" _orig_x="141.22"/>
</g>
<g class="hide">
<title>__memcmp_avx2_movbe (18 samples, 0.02%)</title><rect x="196.5101921470343" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(252,156,41)" rx="2" ry="2" _orig_x="207.8" _orig_width="0.2"/>
<text x="199.5101921470343" y="1407.5" _orig_x="210.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="360.7" y="2053" width="0.4" height="15.0" fill="rgb(228,21,9)" rx="2" ry="2"/>
<text x="363.68" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="903.3808688387636" y="1893" width="0.8330827067669173" height="15.0" fill="rgb(239,7,26)" rx="2" ry="2" _orig_x="886.6" _orig_width="0.8"/>
<text x="906.3808688387636" y="1903.5" _orig_x="889.59"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="27.915079365079418" y="117" width="0.20827067669172933" height="15.0" fill="rgb(228,112,30)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="127.5" _orig_x="48.88"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (127 samples, 0.11%)</title><rect x="666.2949039264827" y="1749" width="2.957393483709273" height="15.0" fill="rgb(244,9,54)" rx="2" ry="2" _orig_x="635.3" _orig_width="1.2"/>
<text x="669.2949039264827" y="1759.5" _orig_x="638.28"/>
</g>
<g>
<title>MemHeap::MemHeap (12 samples, 0.01%)</title><rect x="898.6967418546366" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(235,217,18)" rx="2" ry="2" _orig_x="729.6" _orig_width="0.1"/>
<text x="901.6967418546366" y="1855.5" _orig_x="732.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="11.149289891395211" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(211,81,34)" rx="2" ry="2" _orig_x="29.8" _orig_width="0.3"/>
<text x="14.149289891395211" y="1983.5" _orig_x="32.83"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (12 samples, 0.01%)</title><rect x="31.4411027568922" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(226,170,5)" rx="2" ry="2" _orig_x="377.7" _orig_width="0.1"/>
<text x="34.4411027568922" y="1743.5" _orig_x="380.66"/>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertDown (31,377 samples, 26.39%)</title><rect x="15.914786967418486" y="1925" width="767.1971595655806" height="15.0" fill="rgb(220,73,49)" rx="2" ry="2" _orig_x="371.4" _orig_width="311.3"/>
<text x="18.914786967418486" y="1935.5" _orig_x="374.39">BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertDown </text>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (12 samples, 0.01%)</title><rect x="866.6583124477861" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(232,86,28)" rx="2" ry="2" _orig_x="716.6" _orig_width="0.1"/>
<text x="869.6583124477861" y="1823.5" _orig_x="719.57"/>
</g>
<g>
<title>Row::DeserializeFrom (47 samples, 0.04%)</title><rect x="777.936507936508" y="1861" width="1.2322472848788637" height="15.0" fill="rgb(248,170,23)" rx="2" ry="2" _orig_x="680.6" _orig_width="0.5"/>
<text x="780.936507936508" y="1871.5" _orig_x="683.63"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (11 samples, 0.01%)</title><rect x="814.9039264828739" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(221,193,43)" rx="2" ry="2" _orig_x="695.6" _orig_width="0.1"/>
<text x="817.9039264828739" y="1711.5" _orig_x="698.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="932.3304928989139" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(236,103,54)" rx="2" ry="2" _orig_x="914.4" _orig_width="0.4"/>
<text x="935.3304928989139" y="1887.5" _orig_x="917.41"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (16 samples, 0.01%)</title><rect x="649.7827903091061" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(249,28,29)" rx="2" ry="2" _orig_x="628.6" _orig_width="0.1"/>
<text x="652.7827903091061" y="1791.5" _orig_x="631.58"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="227.4383876357561" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(206,9,25)" rx="2" ry="2" _orig_x="237.5" _orig_width="0.1"/>
<text x="230.4383876357561" y="2031.5" _orig_x="240.47"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (20 samples, 0.02%)</title><rect x="899.0071846282373" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(207,120,32)" rx="2" ry="2" _orig_x="882.4" _orig_width="0.2"/>
<text x="902.0071846282373" y="2047.5" _orig_x="885.35"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (18 samples, 0.02%)</title><rect x="113.26232247284874" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(232,168,34)" rx="2" ry="2" _orig_x="410.9" _orig_width="0.1"/>
<text x="116.26232247284874" y="1759.5" _orig_x="413.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.13%)</title><rect x="53.844778613199715" y="2021" width="1.6661654135338346" height="15.0" fill="rgb(234,58,35)" rx="2" ry="2" _orig_x="70.8" _orig_width="1.6"/>
<text x="56.844778613199715" y="2031.5" _orig_x="73.85"/>
</g>
<g class="hide">
<title>[unknown] (1,326 samples, 1.12%)</title><rect x="75.6" y="2053" width="13.1" height="15.0" fill="rgb(211,72,7)" rx="2" ry="2"/>
<text x="78.56" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="25.0" y="1989" width="0.2" height="15.0" fill="rgb(233,48,29)" rx="2" ry="2"/>
<text x="27.96" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (28 samples, 0.02%)</title><rect x="994.3191311612363" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(217,180,21)" rx="2" ry="2" _orig_x="768.4" _orig_width="0.3"/>
<text x="997.3191311612363" y="1775.5" _orig_x="771.38"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="357" width="0.31240601503759396" height="15.0" fill="rgb(254,82,16)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="367.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (99 samples, 0.08%)</title><rect x="46.96741854636591" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(235,16,24)" rx="2" ry="2" _orig_x="384.0" _orig_width="1.0"/>
<text x="49.96741854636591" y="1775.5" _orig_x="387.02"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="327.61658312447787" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(211,126,24)" rx="2" ry="2" _orig_x="333.7" _orig_width="0.1"/>
<text x="330.61658312447787" y="2031.5" _orig_x="336.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="42.285756056808744" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(208,12,16)" rx="2" ry="2" _orig_x="59.7" _orig_width="0.2"/>
<text x="45.285756056808744" y="1967.5" _orig_x="62.71"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="113.51432748538016" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(242,9,27)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1551.5" _orig_x="131.12"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1045" width="0.31240601503759396" height="15.0" fill="rgb(229,81,29)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1055.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>gdbus (416 samples, 0.35%)</title><rect x="283.3" y="2069" width="4.1" height="15.0" fill="rgb(252,155,8)" rx="2" ry="2"/>
<text x="286.31" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1253" width="0.31240601503759396" height="15.0" fill="rgb(205,159,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1263.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>blink::Element::getBoundingClientRect (120 samples, 0.10%)</title><rect x="182.13951545530497" y="1509" width="1.2496240601503759" height="15.0" fill="rgb(211,2,29)" rx="2" ry="2" _orig_x="194.0" _orig_width="1.2"/>
<text x="185.13951545530497" y="1519.5" _orig_x="197.05"/>
</g>
<g class="hide">
<title>__libc_recvmsg (35 samples, 0.03%)</title><rect x="329.1" y="2053" width="0.3" height="15.0" fill="rgb(252,161,47)" rx="2" ry="2"/>
<text x="332.07" y="2063.5"/>
</g>
<g class="hide">
<title>wukong::BlockingQueue&lt;std::shared_ptr&lt;wukong::AsyncTask&gt; &gt;::waitFor&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (78 samples, 0.07%)</title><rect x="17.605680868838817" y="1877" width="0.8330827067669173" height="15.0" fill="rgb(213,85,46)" rx="2" ry="2" _orig_x="36.0" _orig_width="0.8"/>
<text x="20.605680868838817" y="1887.5" _orig_x="39.05"/>
</g>
<g class="hide">
<title>v8::Function::Call (169 samples, 0.14%)</title><rect x="129.44703425229747" y="1957" width="1.7703007518796992" height="15.0" fill="rgb(246,121,42)" rx="2" ry="2" _orig_x="143.4" _orig_width="1.7"/>
<text x="132.44703425229747" y="1967.5" _orig_x="146.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (143 samples, 0.12%)</title><rect x="349.7974101921471" y="2021" width="1.5620300751879699" height="15.0" fill="rgb(227,57,21)" rx="2" ry="2" _orig_x="355.0" _orig_width="1.5"/>
<text x="352.7974101921471" y="2031.5" _orig_x="358.04"/>
</g>
<g class="hide">
<title>_PyEval_EvalFrameDefault (84 samples, 0.07%)</title><rect x="81.336507936508" y="2037" width="0.937218045112782" height="15.0" fill="rgb(219,206,9)" rx="2" ry="2" _orig_x="97.2" _orig_width="0.9"/>
<text x="84.336507936508" y="2047.5" _orig_x="100.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="355.5248538011696" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(248,31,29)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1951.5" _orig_x="363.49"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.03%)</title><rect x="14.6" y="1909" width="0.4" height="15.0" fill="rgb(223,225,41)" rx="2" ry="2"/>
<text x="17.64" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(243,119,2)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1647.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (22 samples, 0.02%)</title><rect x="1038.4335839598996" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(206,169,15)" rx="2" ry="2" _orig_x="786.3" _orig_width="0.2"/>
<text x="1041.4335839598996" y="1791.5" _orig_x="789.30"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (116 samples, 0.10%)</title><rect x="611.5831244778614" y="1813" width="2.957393483709273" height="15.0" fill="rgb(231,76,25)" rx="2" ry="2" _orig_x="613.1" _orig_width="1.2"/>
<text x="614.5831244778614" y="1823.5" _orig_x="616.11"/>
</g>
<g>
<title>TypeInt::CompareLessThan (12 samples, 0.01%)</title><rect x="444.73684210526307" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(239,220,38)" rx="2" ry="2" _orig_x="545.4" _orig_width="0.1"/>
<text x="447.73684210526307" y="1855.5" _orig_x="548.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (581 samples, 0.49%)</title><rect x="204.94152046783628" y="1813" width="14.047619047619047" height="15.0" fill="rgb(239,1,12)" rx="2" ry="2" _orig_x="448.1" _orig_width="5.7"/>
<text x="207.94152046783628" y="1823.5" _orig_x="451.08"/>
</g>
<g class="hide">
<title>[perf-58119.map] (30 samples, 0.03%)</title><rect x="120.69966583124483" y="1477" width="0.31240601503759396" height="15.0" fill="rgb(253,118,41)" rx="2" ry="2" _orig_x="135.0" _orig_width="0.3"/>
<text x="123.69966583124483" y="1487.5" _orig_x="137.97"/>
</g>
<g class="hide">
<title>[perf-58119.map] (22 samples, 0.02%)</title><rect x="120.69966583124483" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(237,146,22)" rx="2" ry="2" _orig_x="135.0" _orig_width="0.3"/>
<text x="123.69966583124483" y="1439.5" _orig_x="138.05"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (82 samples, 0.07%)</title><rect x="1134.3024227234753" y="1813" width="1.971595655806182" height="15.0" fill="rgb(233,113,9)" rx="2" ry="2" _orig_x="825.2" _orig_width="0.8"/>
<text x="1137.3024227234753" y="1823.5" _orig_x="828.23"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (61 samples, 0.05%)</title><rect x="829.6908939014202" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(211,13,11)" rx="2" ry="2" _orig_x="701.6" _orig_width="0.6"/>
<text x="832.6908939014202" y="1759.5" _orig_x="704.61"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (25 samples, 0.02%)</title><rect x="413.68421052631567" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(220,207,42)" rx="2" ry="2" _orig_x="532.8" _orig_width="0.3"/>
<text x="416.68421052631567" y="1791.5" _orig_x="535.83"/>
</g>
<g class="hide">
<title>convertARGBToARGB32PM_sse4&lt;false&gt; (24 samples, 0.02%)</title><rect x="243.89177109440274" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(217,103,24)" rx="2" ry="2" _orig_x="253.3" _orig_width="0.3"/>
<text x="246.89177109440274" y="2047.5" _orig_x="256.34"/>
</g>
<g class="hide">
<title>azx_pcm_pointer (92 samples, 0.08%)</title><rect x="68.11131996658318" y="1877" width="0.937218045112782" height="15.0" fill="rgb(252,156,21)" rx="2" ry="2" _orig_x="84.5" _orig_width="0.9"/>
<text x="71.11131996658318" y="1887.5" _orig_x="87.49"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (135 samples, 0.11%)</title><rect x="487.1261487050961" y="1829" width="3.2038429406850457" height="15.0" fill="rgb(238,220,11)" rx="2" ry="2" _orig_x="562.6" _orig_width="1.3"/>
<text x="490.1261487050961" y="1839.5" _orig_x="565.55"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::find (16 samples, 0.01%)</title><rect x="1159.193817878028" y="1941" width="0.4928989139515455" height="15.0" fill="rgb(230,224,13)" rx="2" ry="2" _orig_x="835.3" _orig_width="0.2"/>
<text x="1162.193817878028" y="1951.5" _orig_x="838.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="353.75455304928994" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(223,111,48)" rx="2" ry="2" _orig_x="358.8" _orig_width="0.5"/>
<text x="356.75455304928994" y="1983.5" _orig_x="361.76"/>
</g>
<g class="hide">
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (21 samples, 0.02%)</title><rect x="185.68011695906438" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(235,26,48)" rx="2" ry="2" _orig_x="197.4" _orig_width="0.2"/>
<text x="188.68011695906438" y="1567.5" _orig_x="200.35"/>
</g>
<g>
<title>TypeInt::CompareLessThan (14 samples, 0.01%)</title><rect x="169.45279866332493" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(250,28,24)" rx="2" ry="2" _orig_x="433.7" _orig_width="0.2"/>
<text x="172.45279866332493" y="1839.5" _orig_x="436.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.05%)</title><rect x="302.83237259816207" y="1861" width="0.6248120300751879" height="15.0" fill="rgb(244,227,12)" rx="2" ry="2" _orig_x="309.9" _orig_width="0.6"/>
<text x="305.83237259816207" y="1871.5" _orig_x="312.90"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,492 samples, 1.25%)</title><rect x="450.40517961570606" y="1829" width="36.72096908939014" height="15.0" fill="rgb(236,80,36)" rx="2" ry="2" _orig_x="547.7" _orig_width="14.9"/>
<text x="453.40517961570606" y="1839.5" _orig_x="550.75">Si..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (36 samples, 0.03%)</title><rect x="277.890559732665" y="1765" width="0.985797827903091" height="15.0" fill="rgb(249,49,22)" rx="2" ry="2" _orig_x="477.7" _orig_width="0.4"/>
<text x="280.890559732665" y="1775.5" _orig_x="480.73"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (21 samples, 0.02%)</title><rect x="562.2932330827068" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(216,73,16)" rx="2" ry="2" _orig_x="593.1" _orig_width="0.2"/>
<text x="565.2932330827068" y="1823.5" _orig_x="596.06"/>
</g>
<g class="hide">
<title>[unknown] (218 samples, 0.18%)</title><rect x="49.679365079365134" y="325" width="2.2909774436090227" height="15.0" fill="rgb(214,131,40)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="335.5" _orig_x="69.82"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (32 samples, 0.03%)</title><rect x="295.63492063492055" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(247,7,37)" rx="2" ry="2" _orig_x="484.9" _orig_width="0.3"/>
<text x="298.63492063492055" y="1807.5" _orig_x="487.92"/>
</g>
<g class="hide">
<title>blink::scheduler::FrameSchedulerImpl::GetAgentClusterId (13 samples, 0.01%)</title><rect x="222.4398913951546" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(224,11,28)" rx="2" ry="2" _orig_x="232.7" _orig_width="0.1"/>
<text x="225.4398913951546" y="1743.5" _orig_x="235.72"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (11 samples, 0.01%)</title><rect x="420.0918964076858" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(250,21,32)" rx="2" ry="2" _orig_x="535.4" _orig_width="0.1"/>
<text x="423.0918964076858" y="1743.5" _orig_x="538.43"/>
</g>
<g class="hide">
<title>[[vdso]] (13 samples, 0.01%)</title><rect x="25.2" y="2037" width="0.2" height="15.0" fill="rgb(224,13,16)" rx="2" ry="2"/>
<text x="28.22" y="2047.5"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (16 samples, 0.01%)</title><rect x="1168.8053467000834" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(235,125,4)" rx="2" ry="2" _orig_x="839.2" _orig_width="0.1"/>
<text x="1171.8053467000834" y="1887.5" _orig_x="842.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,528 samples, 2.97%)</title><rect x="1126.0222222222224" y="1829" width="36.44736842105263" height="15.0" fill="rgb(229,208,24)" rx="2" ry="2" _orig_x="1100.4" _orig_width="35.0"/>
<text x="1129.0222222222224" y="1839.5" _orig_x="1103.40">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.05%)</title><rect x="132.0504177109441" y="1877" width="0.6248120300751879" height="15.0" fill="rgb(251,126,15)" rx="2" ry="2" _orig_x="145.9" _orig_width="0.6"/>
<text x="135.0504177109441" y="1887.5" _orig_x="148.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="131.21733500417716" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(251,169,2)" rx="2" ry="2" _orig_x="145.1" _orig_width="0.3"/>
<text x="134.21733500417716" y="1935.5" _orig_x="148.14"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(239,189,34)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1903.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1093" width="0.31240601503759396" height="15.0" fill="rgb(252,0,14)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1103.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="344.69477861319973" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(233,52,35)" rx="2" ry="2" _orig_x="350.1" _orig_width="0.4"/>
<text x="347.69477861319973" y="1983.5" _orig_x="353.08"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::ProbeInstantiationsCache (18 samples, 0.02%)</title><rect x="186.51319966583128" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(208,163,10)" rx="2" ry="2" _orig_x="198.2" _orig_width="0.2"/>
<text x="189.51319966583128" y="1471.5" _orig_x="201.22"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="693" width="0.20827067669172933" height="15.0" fill="rgb(219,115,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="703.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (25 samples, 0.02%)</title><rect x="224.83500417710948" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(250,207,11)" rx="2" ry="2" _orig_x="235.0" _orig_width="0.2"/>
<text x="227.83500417710948" y="1823.5" _orig_x="237.97"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (21 samples, 0.02%)</title><rect x="635.9816207184628" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(246,8,53)" rx="2" ry="2" _orig_x="623.0" _orig_width="0.2"/>
<text x="638.9816207184628" y="1775.5" _orig_x="625.95"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="24.6" y="2037" width="0.1" height="15.0" fill="rgb(232,96,24)" rx="2" ry="2"/>
<text x="27.62" y="2047.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (11 samples, 0.01%)</title><rect x="327.61658312447787" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(239,123,9)" rx="2" ry="2" _orig_x="333.7" _orig_width="0.1"/>
<text x="330.61658312447787" y="1999.5" _orig_x="336.70"/>
</g>
<g class="hide">
<title>__libc_read (21 samples, 0.02%)</title><rect x="22.4" y="2053" width="0.2" height="15.0" fill="rgb(222,10,30)" rx="2" ry="2"/>
<text x="25.36" y="2063.5"/>
</g>
<g class="hide">
<title>__libc_write (17 samples, 0.01%)</title><rect x="11.774101921470397" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(211,36,37)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="2047.5" _orig_x="33.41"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (21 samples, 0.02%)</title><rect x="126.32414369256472" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(229,164,17)" rx="2" ry="2" _orig_x="416.2" _orig_width="0.2"/>
<text x="129.32414369256472" y="1823.5" _orig_x="419.15"/>
</g>
<g class="hide">
<title>perf (1,559 samples, 1.31%)</title><rect x="897.0" y="2069" width="15.5" height="15.0" fill="rgb(231,210,54)" rx="2" ry="2"/>
<text x="900.04" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="21.9" y="1861" width="0.3" height="15.0" fill="rgb(226,60,8)" rx="2" ry="2"/>
<text x="24.91" y="1871.5"/>
</g>
<g class="hide">
<title>__xstat64 (619 samples, 0.52%)</title><rect x="147.77485380116966" y="1973" width="6.352255639097744" height="15.0" fill="rgb(239,11,12)" rx="2" ry="2" _orig_x="161.0" _orig_width="6.1"/>
<text x="150.77485380116966" y="1983.5" _orig_x="163.97"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="99.24778613199672" y="1349" width="0.20827067669172933" height="15.0" fill="rgb(231,189,36)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.2"/>
<text x="102.24778613199672" y="1359.5" _orig_x="117.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="930.039515455305" y="1589" width="0.31240601503759396" height="15.0" fill="rgb(245,87,37)" rx="2" ry="2" _orig_x="912.2" _orig_width="0.3"/>
<text x="933.039515455305" y="1599.5" _orig_x="915.18"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (244 samples, 0.21%)</title><rect x="585.7059314954051" y="1733" width="5.914786967418546" height="15.0" fill="rgb(248,120,16)" rx="2" ry="2" _orig_x="602.6" _orig_width="2.4"/>
<text x="588.7059314954051" y="1743.5" _orig_x="605.62"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (38 samples, 0.03%)</title><rect x="908.5547201336675" y="1829" width="0.985797827903091" height="15.0" fill="rgb(218,49,13)" rx="2" ry="2" _orig_x="733.6" _orig_width="0.4"/>
<text x="911.5547201336675" y="1839.5" _orig_x="736.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.08%)</title><rect x="343.5492898913952" y="2021" width="0.937218045112782" height="15.0" fill="rgb(254,124,22)" rx="2" ry="2" _orig_x="349.0" _orig_width="0.9"/>
<text x="346.5492898913952" y="2031.5" _orig_x="351.98"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (32 samples, 0.03%)</title><rect x="479.23976608187127" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(216,14,52)" rx="2" ry="2" _orig_x="559.4" _orig_width="0.3"/>
<text x="482.23976608187127" y="1775.5" _orig_x="562.41"/>
</g>
<g class="hide">
<title>[perf-58145.map] (14 samples, 0.01%)</title><rect x="125.80229741019221" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(232,29,16)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1695.5" _orig_x="142.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (15 samples, 0.01%)</title><rect x="648.7969924812031" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(236,214,11)" rx="2" ry="2" _orig_x="628.2" _orig_width="0.2"/>
<text x="651.7969924812031" y="1791.5" _orig_x="631.23"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (18 samples, 0.02%)</title><rect x="43.763575605680835" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(221,175,10)" rx="2" ry="2" _orig_x="382.7" _orig_width="0.2"/>
<text x="46.763575605680835" y="1775.5" _orig_x="385.69"/>
</g>
<g>
<title>TypeInt::CompareGreaterThan (14 samples, 0.01%)</title><rect x="693.8972431077694" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(242,211,2)" rx="2" ry="2" _orig_x="646.5" _orig_width="0.1"/>
<text x="696.8972431077694" y="1871.5" _orig_x="649.51"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="741" width="0.31240601503759396" height="15.0" fill="rgb(215,164,49)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="751.5" _orig_x="99.72"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (28 samples, 0.02%)</title><rect x="437.58980785296575" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(235,140,20)" rx="2" ry="2" _orig_x="542.5" _orig_width="0.3"/>
<text x="440.58980785296575" y="1807.5" _orig_x="545.51"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="325" width="0.31240601503759396" height="15.0" fill="rgb(248,103,20)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="335.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.13%)</title><rect x="928.6857560568087" y="1893" width="1.6661654135338346" height="15.0" fill="rgb(239,129,14)" rx="2" ry="2" _orig_x="910.9" _orig_width="1.6"/>
<text x="931.6857560568087" y="1903.5" _orig_x="913.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(252,115,12)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="2031.5" _orig_x="101.86"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (23 samples, 0.02%)</title><rect x="860.250626566416" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(221,97,40)" rx="2" ry="2" _orig_x="714.0" _orig_width="0.3"/>
<text x="863.250626566416" y="1855.5" _orig_x="717.04"/>
</g>
<g class="hide">
<title>blink::EventTarget::FireEventListeners (85 samples, 0.07%)</title><rect x="183.70154553049295" y="1477" width="0.937218045112782" height="15.0" fill="rgb(243,132,45)" rx="2" ry="2" _orig_x="195.5" _orig_width="0.9"/>
<text x="186.70154553049295" y="1487.5" _orig_x="198.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.15%)</title><rect x="345.11131996658315" y="2021" width="1.874436090225564" height="15.0" fill="rgb(219,184,35)" rx="2" ry="2" _orig_x="350.5" _orig_width="1.8"/>
<text x="348.11131996658315" y="2031.5" _orig_x="353.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(224,181,52)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="1967.5" _orig_x="918.65"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (13 samples, 0.01%)</title><rect x="427.97827903091064" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(208,121,13)" rx="2" ry="2" _orig_x="538.6" _orig_width="0.2"/>
<text x="430.97827903091064" y="1711.5" _orig_x="541.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="1162.3104693140792" y="2037" width="0.2366626554352186" height="15.0" fill="rgb(207,162,42)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="2047.5" _orig_x="850.97"/>
</g>
<g>
<title>_int_free (14 samples, 0.01%)</title><rect x="1119.0225563909773" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(221,189,43)" rx="2" ry="2" _orig_x="819.0" _orig_width="0.2"/>
<text x="1122.0225563909773" y="1759.5" _orig_x="822.05"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (42 samples, 0.04%)</title><rect x="1004.423558897243" y="1765" width="0.985797827903091" height="15.0" fill="rgb(228,148,45)" rx="2" ry="2" _orig_x="772.5" _orig_width="0.4"/>
<text x="1007.423558897243" y="1775.5" _orig_x="775.48"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="143.19289891395158" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(220,129,7)" rx="2" ry="2" _orig_x="156.6" _orig_width="0.1"/>
<text x="146.19289891395158" y="1887.5" _orig_x="159.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="933.3718462823726" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(225,4,25)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="2015.5" _orig_x="918.41"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (12 samples, 0.01%)</title><rect x="610.3508771929826" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(231,157,25)" rx="2" ry="2" _orig_x="612.6" _orig_width="0.2"/>
<text x="613.3508771929826" y="1791.5" _orig_x="615.63"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="917" width="0.31240601503759396" height="15.0" fill="rgb(251,17,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="927.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="1162.1571846282372" y="1573" width="0.31240601503759396" height="15.0" fill="rgb(249,220,29)" rx="2" ry="2" _orig_x="1135.1" _orig_width="0.3"/>
<text x="1165.1571846282372" y="1583.5" _orig_x="1138.13"/>
</g>
<g class="hide">
<title>_nv023565rm (17 samples, 0.01%)</title><rect x="1183.6" y="2053" width="0.2" height="15.0" fill="rgb(228,50,12)" rx="2" ry="2"/>
<text x="1186.65" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="278.6729741019215" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(237,53,48)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="1967.5" _orig_x="289.75"/>
</g>
<g class="hide">
<title>cmd_record (1,554 samples, 1.31%)</title><rect x="914.2109440267335" y="2005" width="16.14097744360902" height="15.0" fill="rgb(217,167,52)" rx="2" ry="2" _orig_x="897.0" _orig_width="15.5"/>
<text x="917.2109440267335" y="2015.5" _orig_x="900.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="161.10417710944034" y="1813" width="0.41654135338345866" height="15.0" fill="rgb(218,135,7)" rx="2" ry="2" _orig_x="173.8" _orig_width="0.4"/>
<text x="164.10417710944034" y="1823.5" _orig_x="176.78"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="18.1" y="1221" width="0.1" height="15.0" fill="rgb(245,192,43)" rx="2" ry="2"/>
<text x="21.09" y="1231.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (389 samples, 0.33%)</title><rect x="151.70843776106935" y="1781" width="9.365079365079364" height="15.0" fill="rgb(233,143,14)" rx="2" ry="2" _orig_x="426.5" _orig_width="3.8"/>
<text x="154.70843776106935" y="1791.5" _orig_x="429.46"/>
</g>
<g class="hide">
<title>__restore_rt (15 samples, 0.01%)</title><rect x="930.9767335004177" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(251,177,8)" rx="2" ry="2" _orig_x="913.1" _orig_width="0.1"/>
<text x="933.9767335004177" y="2015.5" _orig_x="916.07"/>
</g>
<g class="hide">
<title>v8::internal::LookupIterator::Start&lt;false&gt; (67 samples, 0.06%)</title><rect x="191.8241019214704" y="1381" width="0.7289473684210526" height="15.0" fill="rgb(206,222,19)" rx="2" ry="2" _orig_x="203.3" _orig_width="0.7"/>
<text x="194.8241019214704" y="1391.5" _orig_x="206.35"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (12 samples, 0.01%)</title><rect x="456.8128654970759" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(241,129,37)" rx="2" ry="2" _orig_x="550.3" _orig_width="0.1"/>
<text x="459.8128654970759" y="1759.5" _orig_x="553.31"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="85" width="0.20827067669172933" height="15.0" fill="rgb(230,144,14)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="95.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="341" width="0.31240601503759396" height="15.0" fill="rgb(244,35,51)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="351.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="1925" width="0.4733253108704372" height="15.0" fill="rgb(213,147,53)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1935.5" _orig_x="371.76"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1125" width="2.2909774436090227" height="15.0" fill="rgb(205,191,3)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1135.5" _orig_x="69.82"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="918.6591478696743" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(243,96,49)" rx="2" ry="2" _orig_x="737.7" _orig_width="0.1"/>
<text x="921.6591478696743" y="1743.5" _orig_x="740.68"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (49 samples, 0.04%)</title><rect x="43.27067669172932" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(248,155,6)" rx="2" ry="2" _orig_x="382.5" _orig_width="0.5"/>
<text x="46.27067669172932" y="1823.5" _orig_x="385.54"/>
</g>
<g class="hide">
<title>postgres (41 samples, 0.03%)</title><rect x="912.9" y="2069" width="0.4" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2"/>
<text x="915.91" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (418 samples, 0.35%)</title><rect x="924.2079365079366" y="1653" width="4.373684210526316" height="15.0" fill="rgb(219,171,4)" rx="2" ry="2" _orig_x="906.6" _orig_width="4.2"/>
<text x="927.2079365079366" y="1663.5" _orig_x="909.61"/>
</g>
<g class="hide">
<title>ChromeMain (240 samples, 0.20%)</title><rect x="91.12522974101927" y="2037" width="2.4992481203007517" height="15.0" fill="rgb(228,181,2)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="2047.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="27.915079365079418" y="53" width="0.20827067669172933" height="15.0" fill="rgb(252,171,44)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="63.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (143 samples, 0.12%)</title><rect x="349.7974101921471" y="2037" width="1.5620300751879699" height="15.0" fill="rgb(218,1,34)" rx="2" ry="2" _orig_x="355.0" _orig_width="1.5"/>
<text x="352.7974101921471" y="2047.5" _orig_x="358.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.04%)</title><rect x="344.59064327485385" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(241,101,47)" rx="2" ry="2" _orig_x="350.0" _orig_width="0.5"/>
<text x="347.59064327485385" y="2015.5" _orig_x="352.96"/>
</g>
<g class="hide">
<title>webrtc::(anonymous namespace)::TransformableAudioFrame::GetSsrc (15 samples, 0.01%)</title><rect x="212.54703425229744" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(232,179,1)" rx="2" ry="2" _orig_x="223.2" _orig_width="0.1"/>
<text x="215.54703425229744" y="1711.5" _orig_x="226.15"/>
</g>
<g class="hide">
<title>blink::DOMTimerCoordinator::InstallNewTimeout (17 samples, 0.01%)</title><rect x="185.15944026733507" y="1509" width="0.20827067669172933" height="15.0" fill="rgb(240,15,10)" rx="2" ry="2" _orig_x="196.9" _orig_width="0.2"/>
<text x="188.15944026733507" y="1519.5" _orig_x="199.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(212,109,12)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="1999.5" _orig_x="918.65"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (13 samples, 0.01%)</title><rect x="1010.8312447786132" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(234,105,12)" rx="2" ry="2" _orig_x="775.1" _orig_width="0.1"/>
<text x="1013.8312447786132" y="1791.5" _orig_x="778.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (284 samples, 0.24%)</title><rect x="895.4665831244779" y="1845" width="2.9157894736842103" height="15.0" fill="rgb(221,125,40)" rx="2" ry="2" _orig_x="879.0" _orig_width="2.8"/>
<text x="898.4665831244779" y="1855.5" _orig_x="882.02"/>
</g>
<g>
<title>Row::~Row (789 samples, 0.66%)</title><rect x="301.3032581453634" y="1861" width="19.469507101086048" height="15.0" fill="rgb(254,203,34)" rx="2" ry="2" _orig_x="487.2" _orig_width="7.9"/>
<text x="304.3032581453634" y="1871.5" _orig_x="490.24"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="602.2180451127819" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(205,14,44)" rx="2" ry="2" _orig_x="609.3" _orig_width="0.1"/>
<text x="605.2180451127819" y="1759.5" _orig_x="612.29"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (26 samples, 0.02%)</title><rect x="909.0476190476189" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(219,75,11)" rx="2" ry="2" _orig_x="733.8" _orig_width="0.2"/>
<text x="912.0476190476189" y="1823.5" _orig_x="736.76"/>
</g>
<g class="hide">
<title>[[vdso]] (21 samples, 0.02%)</title><rect x="19.167710944026787" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(239,209,12)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="2047.5" _orig_x="40.46"/>
</g>
<g class="hide">
<title>[unknown] (33 samples, 0.03%)</title><rect x="233.9989139515456" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(209,103,49)" rx="2" ry="2" _orig_x="243.8" _orig_width="0.4"/>
<text x="236.9989139515456" y="2031.5" _orig_x="246.83"/>
</g>
<g class="hide">
<title>[unknown] (121 samples, 0.10%)</title><rect x="45.3" y="2053" width="1.2" height="15.0" fill="rgb(209,162,3)" rx="2" ry="2"/>
<text x="48.29" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="931.8098162071847" y="2021" width="0.937218045112782" height="15.0" fill="rgb(227,135,7)" rx="2" ry="2" _orig_x="913.9" _orig_width="0.9"/>
<text x="934.8098162071847" y="2031.5" _orig_x="916.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="241.6007936507937" y="1861" width="0.7289473684210526" height="15.0" fill="rgb(215,189,53)" rx="2" ry="2" _orig_x="251.1" _orig_width="0.7"/>
<text x="244.6007936507937" y="1871.5" _orig_x="254.06"/>
</g>
<g class="hide">
<title>blink::V8MessageEvent::DataAttributeGetterCallback (12 samples, 0.01%)</title><rect x="184.22222222222229" y="1285" width="0.10413533834586466" height="15.0" fill="rgb(230,186,20)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1295.5" _orig_x="198.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.08%)</title><rect x="349.0" y="2053" width="0.9" height="15.0" fill="rgb(250,173,39)" rx="2" ry="2"/>
<text x="351.96" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(206,148,4)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1743.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.08%)</title><rect x="160.47936507936512" y="1861" width="1.0413533834586466" height="15.0" fill="rgb(233,206,8)" rx="2" ry="2" _orig_x="173.2" _orig_width="1.0"/>
<text x="163.47936507936512" y="1871.5" _orig_x="176.21"/>
</g>
<g>
<title>Row::~Row (1,152 samples, 0.97%)</title><rect x="410.7268170426065" y="1861" width="28.341687552213866" height="15.0" fill="rgb(226,83,1)" rx="2" ry="2" _orig_x="531.6" _orig_width="11.5"/>
<text x="413.7268170426065" y="1871.5" _orig_x="534.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (362 samples, 0.30%)</title><rect x="62.17560568086889" y="1973" width="3.748872180451128" height="15.0" fill="rgb(225,146,27)" rx="2" ry="2" _orig_x="78.8" _orig_width="3.6"/>
<text x="65.1756056808689" y="1983.5" _orig_x="81.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="15.106432748538069" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(244,190,44)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1983.5" _orig_x="36.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="280.3391395154554" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(217,43,41)" rx="2" ry="2" _orig_x="288.3" _orig_width="0.4"/>
<text x="283.3391395154554" y="1951.5" _orig_x="291.33"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (13 samples, 0.01%)</title><rect x="620.4553049289892" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(215,49,42)" rx="2" ry="2" _orig_x="616.7" _orig_width="0.1"/>
<text x="623.4553049289892" y="1759.5" _orig_x="619.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (648 samples, 0.54%)</title><rect x="806.7710944026732" y="1781" width="15.772765246449456" height="15.0" fill="rgb(231,12,21)" rx="2" ry="2" _orig_x="692.3" _orig_width="6.4"/>
<text x="809.7710944026732" y="1791.5" _orig_x="695.30"/>
</g>
<g class="hide">
<title>__libc_sendmsg (21 samples, 0.02%)</title><rect x="271.80004177109447" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(208,147,35)" rx="2" ry="2" _orig_x="280.1" _orig_width="0.2"/>
<text x="274.80004177109447" y="2031.5" _orig_x="283.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (532 samples, 0.45%)</title><rect x="886.4068086883876" y="1925" width="5.519172932330827" height="15.0" fill="rgb(230,84,7)" rx="2" ry="2" _orig_x="870.3" _orig_width="5.3"/>
<text x="889.4068086883876" y="1935.5" _orig_x="873.30"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1557" width="0.31240601503759396" height="15.0" fill="rgb(249,139,43)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1567.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>v8::internal::compiler::GraphReducer::ReduceGraph (59 samples, 0.05%)</title><rect x="31.663951545530548" y="1797" width="0.6248120300751879" height="15.0" fill="rgb(230,215,42)" rx="2" ry="2" _orig_x="49.5" _orig_width="0.6"/>
<text x="34.66395154553055" y="1807.5" _orig_x="52.49"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (48 samples, 0.04%)</title><rect x="344.4319131161236" y="1685" width="1.2322472848788637" height="15.0" fill="rgb(208,8,9)" rx="2" ry="2" _orig_x="504.7" _orig_width="0.5"/>
<text x="347.4319131161236" y="1695.5" _orig_x="507.71"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (102 samples, 0.09%)</title><rect x="530.0083542188805" y="1829" width="2.4644945697577274" height="15.0" fill="rgb(245,141,10)" rx="2" ry="2" _orig_x="580.0" _orig_width="1.0"/>
<text x="533.0083542188805" y="1839.5" _orig_x="582.97"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (18 samples, 0.02%)</title><rect x="629.0810359231413" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(235,151,29)" rx="2" ry="2" _orig_x="620.2" _orig_width="0.2"/>
<text x="632.0810359231413" y="1807.5" _orig_x="623.23"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (16 samples, 0.01%)</title><rect x="42.038429406850454" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(250,47,26)" rx="2" ry="2" _orig_x="382.0" _orig_width="0.2"/>
<text x="45.038429406850454" y="1759.5" _orig_x="385.01"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (20 samples, 0.02%)</title><rect x="977.5605680868839" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(240,35,26)" rx="2" ry="2" _orig_x="761.6" _orig_width="0.2"/>
<text x="980.5605680868839" y="1759.5" _orig_x="764.60"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (12 samples, 0.01%)</title><rect x="15.1" y="1989" width="0.2" height="15.0" fill="rgb(226,71,46)" rx="2" ry="2"/>
<text x="18.14" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,263 samples, 1.90%)</title><rect x="1187.1496658312446" y="1861" width="23.43045112781955" height="15.0" fill="rgb(248,155,45)" rx="2" ry="2" _orig_x="1159.1" _orig_width="22.5"/>
<text x="1190.1496658312446" y="1871.5" _orig_x="1162.12">[[kernel.kallsyms]] </text>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (21 samples, 0.02%)</title><rect x="1119.515455304929" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(234,78,42)" rx="2" ry="2" _orig_x="819.2" _orig_width="0.2"/>
<text x="1122.515455304929" y="1759.5" _orig_x="822.18"/>
</g>
<g class="hide">
<title>[code] (30 samples, 0.03%)</title><rect x="99.8725981620719" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(228,150,54)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1919.5" _orig_x="117.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="898.1741019214704" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(248,211,25)" rx="2" ry="2" _orig_x="881.6" _orig_width="0.2"/>
<text x="901.1741019214704" y="1775.5" _orig_x="884.65"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask (22 samples, 0.02%)</title><rect x="207.75680868838768" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(242,97,47)" rx="2" ry="2" _orig_x="218.6" _orig_width="0.2"/>
<text x="210.75680868838768" y="1791.5" _orig_x="221.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="28.459687123946942" y="1861" width="0.2366626554352186" height="15.0" fill="rgb(239,62,50)" rx="2" ry="2" _orig_x="368.9" _orig_width="0.1"/>
<text x="31.459687123946942" y="1871.5" _orig_x="371.91"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (26 samples, 0.02%)</title><rect x="287.0091896407685" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(253,82,43)" rx="2" ry="2" _orig_x="481.4" _orig_width="0.2"/>
<text x="290.0091896407685" y="1775.5" _orig_x="484.38"/>
</g>
<g class="hide">
<title>blink::V8ScriptRunner::CallFunction (32 samples, 0.03%)</title><rect x="184.1180868838764" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(206,59,44)" rx="2" ry="2" _orig_x="195.9" _orig_width="0.3"/>
<text x="187.1180868838764" y="1423.5" _orig_x="198.86"/>
</g>
<g class="hide">
<title>[code] (26 samples, 0.02%)</title><rect x="18.0" y="1253" width="0.3" height="15.0" fill="rgb(231,122,52)" rx="2" ry="2"/>
<text x="21.01" y="1263.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (17 samples, 0.01%)</title><rect x="981.9966583124477" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(219,178,0)" rx="2" ry="2" _orig_x="763.4" _orig_width="0.1"/>
<text x="984.9966583124477" y="1775.5" _orig_x="766.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="934.1007936507937" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(221,228,17)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="1967.5" _orig_x="919.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="118.7210944026734" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(218,190,47)" rx="2" ry="2" _orig_x="133.1" _orig_width="0.1"/>
<text x="121.7210944026734" y="1663.5" _orig_x="136.06"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (12 samples, 0.01%)</title><rect x="276.65831244778605" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(244,3,24)" rx="2" ry="2" _orig_x="477.2" _orig_width="0.1"/>
<text x="279.65831244778605" y="1791.5" _orig_x="480.16"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="997" width="2.2909774436090227" height="15.0" fill="rgb(207,180,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1007.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="66.5492898913952" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(213,109,47)" rx="2" ry="2" _orig_x="83.0" _orig_width="0.4"/>
<text x="69.5492898913952" y="1967.5" _orig_x="86.02"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (48 samples, 0.04%)</title><rect x="1169.7911445279865" y="1925" width="1.2322472848788637" height="15.0" fill="rgb(214,222,52)" rx="2" ry="2" _orig_x="839.6" _orig_width="0.5"/>
<text x="1172.7911445279865" y="1935.5" _orig_x="842.63"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="901" width="0.31240601503759396" height="15.0" fill="rgb(250,135,29)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="911.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(212,86,16)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1439.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (40 samples, 0.03%)</title><rect x="908.483500417711" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(222,151,27)" rx="2" ry="2" _orig_x="891.5" _orig_width="0.4"/>
<text x="911.483500417711" y="2047.5" _orig_x="894.51"/>
</g>
<g class="hide">
<title>__vfscanf_internal (47 samples, 0.04%)</title><rect x="235.3526733500418" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(240,213,50)" rx="2" ry="2" _orig_x="245.1" _orig_width="0.5"/>
<text x="238.3526733500418" y="2031.5" _orig_x="248.13"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (29 samples, 0.02%)</title><rect x="532.9657477025899" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(207,181,40)" rx="2" ry="2" _orig_x="581.2" _orig_width="0.3"/>
<text x="535.9657477025899" y="1823.5" _orig_x="584.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="313.5583124477862" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(253,192,34)" rx="2" ry="2" _orig_x="320.2" _orig_width="0.2"/>
<text x="316.5583124477862" y="2047.5" _orig_x="323.24"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="485" width="2.2909774436090227" height="15.0" fill="rgb(247,195,34)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="495.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>__libc_write (1,224 samples, 1.03%)</title><rect x="915.8771094402674" y="1941" width="12.704511278195488" height="15.0" fill="rgb(252,141,52)" rx="2" ry="2" _orig_x="898.6" _orig_width="12.2"/>
<text x="918.8771094402674" y="1951.5" _orig_x="901.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="914.8357560568087" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(224,46,43)" rx="2" ry="2" _orig_x="897.6" _orig_width="0.2"/>
<text x="917.8357560568087" y="1823.5" _orig_x="900.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="271.9041771094403" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(211,12,14)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1871.5" _orig_x="283.18"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (17 samples, 0.01%)</title><rect x="531.9799498746866" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(245,90,4)" rx="2" ry="2" _orig_x="580.8" _orig_width="0.1"/>
<text x="534.9799498746866" y="1823.5" _orig_x="583.76"/>
</g>
<g class="hide">
<title>blink::V8Function::InvokeAndReportException (212 samples, 0.18%)</title><rect x="163.18688387635763" y="1717" width="2.186842105263158" height="15.0" fill="rgb(237,125,39)" rx="2" ry="2" _orig_x="175.8" _orig_width="2.1"/>
<text x="166.18688387635763" y="1727.5" _orig_x="178.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="326.57522974101926" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(221,219,37)" rx="2" ry="2" _orig_x="332.7" _orig_width="0.1"/>
<text x="329.57522974101926" y="1855.5" _orig_x="335.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.16%)</title><rect x="346.9857560568087" y="2005" width="1.9785714285714284" height="15.0" fill="rgb(238,83,25)" rx="2" ry="2" _orig_x="352.3" _orig_width="1.9"/>
<text x="349.9857560568087" y="2015.5" _orig_x="355.35"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="27.915079365079418" y="69" width="0.20827067669172933" height="15.0" fill="rgb(218,175,9)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="79.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[code] (26 samples, 0.02%)</title><rect x="18.0" y="1269" width="0.3" height="15.0" fill="rgb(240,146,0)" rx="2" ry="2"/>
<text x="21.01" y="1279.5"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (17 samples, 0.01%)</title><rect x="325.3256056808689" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(226,217,12)" rx="2" ry="2" _orig_x="331.5" _orig_width="0.1"/>
<text x="328.3256056808689" y="2015.5" _orig_x="334.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.13%)</title><rect x="140.79778613199673" y="2037" width="1.6661654135338346" height="15.0" fill="rgb(214,189,23)" rx="2" ry="2" _orig_x="154.3" _orig_width="1.6"/>
<text x="143.79778613199673" y="2047.5" _orig_x="157.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (114 samples, 0.10%)</title><rect x="579.0517961570592" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(244,208,7)" rx="2" ry="2" _orig_x="599.9" _orig_width="1.1"/>
<text x="582.0517961570592" y="1775.5" _orig_x="602.85"/>
</g>
<g class="hide">
<title>[code] (28 samples, 0.02%)</title><rect x="99.8725981620719" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(235,103,0)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1903.5" _orig_x="118.00"/>
</g>
<g class="hide">
<title>[libX11.so.6.3.0] (21 samples, 0.02%)</title><rect x="232.54101921470348" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(247,152,3)" rx="2" ry="2" _orig_x="242.4" _orig_width="0.2"/>
<text x="235.54101921470348" y="2047.5" _orig_x="245.35"/>
</g>
<g>
<title>Field::Field (23 samples, 0.02%)</title><rect x="697.8404344193817" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(238,138,39)" rx="2" ry="2" _orig_x="648.1" _orig_width="0.2"/>
<text x="700.8404344193817" y="1855.5" _orig_x="651.06"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (19 samples, 0.02%)</title><rect x="320.2" y="2053" width="0.2" height="15.0" fill="rgb(210,158,51)" rx="2" ry="2"/>
<text x="323.24" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (73 samples, 0.06%)</title><rect x="407.03007518796994" y="1813" width="1.7251461988304093" height="15.0" fill="rgb(228,198,30)" rx="2" ry="2" _orig_x="530.1" _orig_width="0.7"/>
<text x="410.03007518796994" y="1823.5" _orig_x="533.05"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask (13 samples, 0.01%)</title><rect x="165.68613199665836" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(219,134,10)" rx="2" ry="2" _orig_x="178.2" _orig_width="0.1"/>
<text x="168.68613199665836" y="1759.5" _orig_x="181.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (197 samples, 0.17%)</title><rect x="101.43274853801174" y="1733" width="4.682539682539682" height="15.0" fill="rgb(225,134,22)" rx="2" ry="2" _orig_x="406.1" _orig_width="1.9"/>
<text x="104.43274853801174" y="1743.5" _orig_x="409.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="931.4974101921471" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(243,215,27)" rx="2" ry="2" _orig_x="913.6" _orig_width="0.2"/>
<text x="934.4974101921471" y="2031.5" _orig_x="916.58"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="756.4954051796157" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(205,119,43)" rx="2" ry="2" _orig_x="671.9" _orig_width="0.1"/>
<text x="759.4954051796157" y="1807.5" _orig_x="674.85"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (11 samples, 0.01%)</title><rect x="775.2255639097745" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(233,197,15)" rx="2" ry="2" _orig_x="679.5" _orig_width="0.1"/>
<text x="778.2255639097745" y="1839.5" _orig_x="682.52"/>
</g>
<g>
<title>Column::GetType (20 samples, 0.02%)</title><rect x="957.3517126148704" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(241,65,45)" rx="2" ry="2" _orig_x="753.4" _orig_width="0.2"/>
<text x="960.3517126148704" y="1887.5" _orig_x="756.45"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (50 samples, 0.04%)</title><rect x="907.3224728487886" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(249,100,44)" rx="2" ry="2" _orig_x="733.1" _orig_width="0.5"/>
<text x="910.3224728487886" y="1839.5" _orig_x="736.14"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,530 samples, 1.29%)</title><rect x="1102.756892230576" y="1877" width="37.460317460317455" height="15.0" fill="rgb(227,32,20)" rx="2" ry="2" _orig_x="812.4" _orig_width="15.2"/>
<text x="1105.756892230576" y="1887.5" _orig_x="815.38">Sim..</text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1141" width="0.31240601503759396" height="15.0" fill="rgb(222,163,15)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1151.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (85 samples, 0.07%)</title><rect x="18.4" y="1749" width="0.9" height="15.0" fill="rgb(226,130,19)" rx="2" ry="2"/>
<text x="21.44" y="1759.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (49 samples, 0.04%)</title><rect x="130.59252297410197" y="1765" width="0.5206766917293233" height="15.0" fill="rgb(211,151,1)" rx="2" ry="2" _orig_x="144.5" _orig_width="0.5"/>
<text x="133.59252297410197" y="1775.5" _orig_x="147.48"/>
</g>
<g class="hide">
<title>[libxul.so] (21 samples, 0.02%)</title><rect x="24.4" y="2037" width="0.2" height="15.0" fill="rgb(230,139,9)" rx="2" ry="2"/>
<text x="27.41" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="677" width="0.20827067669172933" height="15.0" fill="rgb(205,56,24)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="687.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="83.31507936507941" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(234,42,31)" rx="2" ry="2" _orig_x="99.1" _orig_width="0.1"/>
<text x="86.31507936507941" y="1759.5" _orig_x="102.07"/>
</g>
<g>
<title>__memset_avx2_unaligned (12 samples, 0.01%)</title><rect x="664.8162071846283" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(228,137,41)" rx="2" ry="2" _orig_x="634.7" _orig_width="0.2"/>
<text x="667.8162071846283" y="1791.5" _orig_x="637.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,462 samples, 1.23%)</title><rect x="1167.1" y="1813" width="14.5" height="15.0" fill="rgb(210,98,11)" rx="2" ry="2"/>
<text x="1170.07" y="1823.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (12 samples, 0.01%)</title><rect x="736.532999164578" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(237,225,30)" rx="2" ry="2" _orig_x="663.8" _orig_width="0.2"/>
<text x="739.532999164578" y="1807.5" _orig_x="666.83"/>
</g>
<g class="hide">
<title>operator new[] (24 samples, 0.02%)</title><rect x="147.15004177109446" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(206,204,4)" rx="2" ry="2" _orig_x="160.4" _orig_width="0.2"/>
<text x="150.15004177109446" y="1951.5" _orig_x="163.41"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadMetricsHelper::RecordTaskMetrics (272 samples, 0.23%)</title><rect x="209.83951545530496" y="1717" width="2.811654135338346" height="15.0" fill="rgb(231,24,34)" rx="2" ry="2" _orig_x="220.6" _orig_width="2.7"/>
<text x="212.83951545530496" y="1727.5" _orig_x="223.60"/>
</g>
<g class="hide">
<title>blink::MessageEventInit::MessageEventInit (13 samples, 0.01%)</title><rect x="189.84553049289897" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(211,182,49)" rx="2" ry="2" _orig_x="201.4" _orig_width="0.1"/>
<text x="192.84553049289897" y="1455.5" _orig_x="204.38"/>
</g>
<g class="hide">
<title>blink::V8EventTarget::ToImplWithTypeCheck (96 samples, 0.08%)</title><rect x="192.6571846282373" y="1429" width="1.0413533834586466" height="15.0" fill="rgb(209,181,6)" rx="2" ry="2" _orig_x="204.1" _orig_width="1.0"/>
<text x="195.6571846282373" y="1439.5" _orig_x="207.13"/>
</g>
<g class="hide">
<title>[chrome] (26 samples, 0.02%)</title><rect x="30.830868838763635" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(231,23,3)" rx="2" ry="2" _orig_x="48.7" _orig_width="0.3"/>
<text x="33.830868838763635" y="2031.5" _orig_x="51.70"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (16 samples, 0.01%)</title><rect x="484.41520467836256" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(207,28,19)" rx="2" ry="2" _orig_x="561.5" _orig_width="0.2"/>
<text x="487.41520467836256" y="1775.5" _orig_x="564.51"/>
</g>
<g class="hide">
<title>google::protobuf::internal::MapEntryImpl&lt;assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse, google::protobuf::MessageLite, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, float,  (12 samples, 0.01%)</title><rect x="184.63876357560574" y="1477" width="0.10413533834586466" height="15.0" fill="rgb(235,121,13)" rx="2" ry="2" _orig_x="196.4" _orig_width="0.1"/>
<text x="187.63876357560574" y="1487.5" _orig_x="199.37"/>
</g>
<g class="hide">
<title>[unknown] (172 samples, 0.14%)</title><rect x="49.679365079365134" y="181" width="1.7703007518796992" height="15.0" fill="rgb(230,9,3)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.7"/>
<text x="52.679365079365134" y="191.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="124.34440267335009" y="981" width="0.10413533834586466" height="15.0" fill="rgb(231,74,48)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="991.5" _orig_x="141.49"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(243,145,5)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1791.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (14 samples, 0.01%)</title><rect x="458.29156223893057" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(212,135,3)" rx="2" ry="2" _orig_x="550.9" _orig_width="0.1"/>
<text x="461.29156223893057" y="1727.5" _orig_x="553.87"/>
</g>
<g class="hide">
<title>irq/112-nvidia (1,095 samples, 0.92%)</title><rect x="334.3" y="2069" width="10.8" height="15.0" fill="rgb(216,32,24)" rx="2" ry="2"/>
<text x="337.27" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="108.30756056808693" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(238,122,34)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="2031.5" _orig_x="126.12"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (11 samples, 0.01%)</title><rect x="289.9665831244779" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,139,24)" rx="2" ry="2" _orig_x="482.6" _orig_width="0.1"/>
<text x="292.9665831244779" y="1759.5" _orig_x="485.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.106432748538069" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(239,172,23)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1935.5" _orig_x="36.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="51.03312447786137" y="85" width="0.10413533834586466" height="15.0" fill="rgb(238,85,21)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="95.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.4" y="1893" width="0.2" height="15.0" fill="rgb(229,103,29)" rx="2" ry="2"/>
<text x="26.45" y="1903.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (13 samples, 0.01%)</title><rect x="260.88554720133675" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,180,6)" rx="2" ry="2" _orig_x="470.8" _orig_width="0.1"/>
<text x="263.88554720133675" y="1759.5" _orig_x="473.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="280.4432748538012" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(212,228,22)" rx="2" ry="2" _orig_x="288.4" _orig_width="0.3"/>
<text x="283.4432748538012" y="1903.5" _orig_x="291.43"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (26 samples, 0.02%)</title><rect x="394.9540517961571" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(207,124,27)" rx="2" ry="2" _orig_x="525.2" _orig_width="0.2"/>
<text x="397.9540517961571" y="1775.5" _orig_x="528.15"/>
</g>
<g class="hide">
<title>v8::internal::String::WriteToFlat&lt;unsigned char&gt; (12 samples, 0.01%)</title><rect x="196.71846282372604" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(205,107,33)" rx="2" ry="2" _orig_x="208.0" _orig_width="0.2"/>
<text x="199.71846282372604" y="1423.5" _orig_x="211.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="13.4" y="1893" width="0.2" height="15.0" fill="rgb(224,182,41)" rx="2" ry="2"/>
<text x="16.38" y="1903.5"/>
</g>
<g class="hide">
<title>v8::internal::Object::GetProperty (22 samples, 0.02%)</title><rect x="195.46883876357566" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(249,86,26)" rx="2" ry="2" _orig_x="206.8" _orig_width="0.2"/>
<text x="198.46883876357566" y="1407.5" _orig_x="209.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (341 samples, 0.29%)</title><rect x="925.0410192147034" y="1637" width="3.5406015037593983" height="15.0" fill="rgb(243,170,15)" rx="2" ry="2" _orig_x="907.4" _orig_width="3.4"/>
<text x="928.0410192147034" y="1647.5" _orig_x="910.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.13%)</title><rect x="928.6857560568087" y="1925" width="1.6661654135338346" height="15.0" fill="rgb(221,214,50)" rx="2" ry="2" _orig_x="910.9" _orig_width="1.6"/>
<text x="931.6857560568087" y="1935.5" _orig_x="913.90"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks (14 samples, 0.01%)</title><rect x="220.25304928989144" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(233,14,5)" rx="2" ry="2" _orig_x="230.6" _orig_width="0.1"/>
<text x="223.25304928989144" y="1759.5" _orig_x="233.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.12%)</title><rect x="140.9019214703426" y="1973" width="1.5620300751879699" height="15.0" fill="rgb(218,61,46)" rx="2" ry="2" _orig_x="154.4" _orig_width="1.5"/>
<text x="143.9019214703426" y="1983.5" _orig_x="157.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (39 samples, 0.03%)</title><rect x="662.3517126148706" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(248,225,37)" rx="2" ry="2" _orig_x="633.7" _orig_width="0.3"/>
<text x="665.3517126148706" y="1807.5" _orig_x="636.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="11.98237259816213" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(233,11,16)" rx="2" ry="2" _orig_x="30.6" _orig_width="0.2"/>
<text x="14.98237259816213" y="2031.5" _orig_x="33.62"/>
</g>
<g class="hide">
<title>g_slice_alloc (17 samples, 0.01%)</title><rect x="896.6" y="2053" width="0.1" height="15.0" fill="rgb(249,100,39)" rx="2" ry="2"/>
<text x="899.56" y="2063.5"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="1925" width="0.6" height="15.0" fill="rgb(224,112,38)" rx="2" ry="2"/>
<text x="17.02" y="1935.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (15 samples, 0.01%)</title><rect x="377.2096908939014" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(248,24,54)" rx="2" ry="2" _orig_x="518.0" _orig_width="0.1"/>
<text x="380.2096908939014" y="1823.5" _orig_x="520.99"/>
</g>
<g class="hide">
<title>wukong::Timer::poll (58 samples, 0.05%)</title><rect x="18.5428989139516" y="1893" width="0.5206766917293233" height="15.0" fill="rgb(221,178,6)" rx="2" ry="2" _orig_x="36.9" _orig_width="0.5"/>
<text x="21.5428989139516" y="1903.5" _orig_x="39.87"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="439.80785296574766" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(250,209,27)" rx="2" ry="2" _orig_x="543.4" _orig_width="0.1"/>
<text x="442.80785296574766" y="1871.5" _orig_x="546.40"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (163 samples, 0.14%)</title><rect x="281.58876357560575" y="1909" width="1.6661654135338346" height="15.0" fill="rgb(252,226,2)" rx="2" ry="2" _orig_x="289.5" _orig_width="1.6"/>
<text x="284.58876357560575" y="1919.5" _orig_x="292.46"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="10.628613199665887" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(211,164,42)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1903.5" _orig_x="32.32"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1653" width="0.20827067669172933" height="15.0" fill="rgb(235,187,4)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1663.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (16 samples, 0.01%)</title><rect x="744.6658312447786" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(228,35,50)" rx="2" ry="2" _orig_x="667.1" _orig_width="0.1"/>
<text x="747.6658312447786" y="1759.5" _orig_x="670.06"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (12 samples, 0.01%)</title><rect x="326.88763575605685" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(232,144,19)" rx="2" ry="2" _orig_x="333.0" _orig_width="0.2"/>
<text x="329.88763575605685" y="2015.5" _orig_x="336.05"/>
</g>
<g class="hide">
<title>[perf-58145.map] (92 samples, 0.08%)</title><rect x="127.78086883876364" y="1525" width="0.937218045112782" height="15.0" fill="rgb(229,139,20)" rx="2" ry="2" _orig_x="141.8" _orig_width="0.9"/>
<text x="130.78086883876364" y="1535.5" _orig_x="144.78"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (11 samples, 0.01%)</title><rect x="34.398496240601446" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(248,191,5)" rx="2" ry="2" _orig_x="378.9" _orig_width="0.1"/>
<text x="37.398496240601446" y="1711.5" _orig_x="381.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="1162.3104693140792" y="2021" width="0.2366626554352186" height="15.0" fill="rgb(225,46,19)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="2031.5" _orig_x="850.97"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (111 samples, 0.09%)</title><rect x="152.44778613199668" y="1749" width="2.7109440267335008" height="15.0" fill="rgb(206,75,0)" rx="2" ry="2" _orig_x="426.8" _orig_width="1.1"/>
<text x="155.44778613199668" y="1759.5" _orig_x="429.79"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (11 samples, 0.01%)</title><rect x="408.7552213868002" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(215,147,6)" rx="2" ry="2" _orig_x="530.8" _orig_width="0.1"/>
<text x="411.7552213868002" y="1823.5" _orig_x="533.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="145.17147034252304" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(213,129,34)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="2015.5" _orig_x="161.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="165" width="0.20827067669172933" height="15.0" fill="rgb(218,52,19)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="175.5" _orig_x="71.64"/>
</g>
<g>
<title>yylex (63 samples, 0.05%)</title><rect x="1187.7819548872178" y="1973" width="1.4786967418546364" height="15.0" fill="rgb(244,214,9)" rx="2" ry="2" _orig_x="846.9" _orig_width="0.6"/>
<text x="1190.7819548872178" y="1983.5" _orig_x="849.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (252 samples, 0.21%)</title><rect x="595.3174603174604" y="1749" width="6.1612364243943185" height="15.0" fill="rgb(223,131,25)" rx="2" ry="2" _orig_x="606.5" _orig_width="2.5"/>
<text x="598.3174603174604" y="1759.5" _orig_x="609.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (11 samples, 0.01%)</title><rect x="659.640768588137" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(232,202,45)" rx="2" ry="2" _orig_x="632.6" _orig_width="0.1"/>
<text x="662.640768588137" y="1823.5" _orig_x="635.57"/>
</g>
<g class="hide">
<title>[code] (1,231 samples, 1.04%)</title><rect x="109.24477861319971" y="1893" width="12.704511278195488" height="15.0" fill="rgb(248,6,8)" rx="2" ry="2" _orig_x="124.0" _orig_width="12.2"/>
<text x="112.24477861319971" y="1903.5" _orig_x="126.97"/>
</g>
<g class="hide">
<title>[python3.8] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="37" width="0.31240601503759396" height="15.0" fill="rgb(217,161,34)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="47.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="981" width="0.31240601503759396" height="15.0" fill="rgb(240,126,38)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="991.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.06%)</title><rect x="302.72823725981624" y="1877" width="0.7289473684210526" height="15.0" fill="rgb(248,173,48)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1887.5" _orig_x="312.83"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (27 samples, 0.02%)</title><rect x="164.5238095238095" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(224,134,4)" rx="2" ry="2" _orig_x="431.7" _orig_width="0.3"/>
<text x="167.5238095238095" y="1807.5" _orig_x="434.70"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="805" width="0.20827067669172933" height="15.0" fill="rgb(216,161,8)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="815.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (29 samples, 0.02%)</title><rect x="10.836883876357616" y="245" width="0.20827067669172933" height="15.0" fill="rgb(228,89,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="255.5" _orig_x="32.46"/>
</g>
<g>
<title>operator delete (17 samples, 0.01%)</title><rect x="935.1712614870509" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(207,4,45)" rx="2" ry="2" _orig_x="744.4" _orig_width="0.2"/>
<text x="938.1712614870509" y="1871.5" _orig_x="747.40"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="27.915079365079418" y="181" width="0.20827067669172933" height="15.0" fill="rgb(209,29,7)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="191.5" _orig_x="48.88"/>
</g>
<g>
<title>malloc (15 samples, 0.01%)</title><rect x="829.1979949874686" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(253,141,32)" rx="2" ry="2" _orig_x="701.4" _orig_width="0.2"/>
<text x="832.1979949874686" y="1743.5" _orig_x="704.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (194 samples, 0.16%)</title><rect x="704.9874686716792" y="1765" width="4.928989139515455" height="15.0" fill="rgb(222,202,3)" rx="2" ry="2" _orig_x="651.0" _orig_width="2.0"/>
<text x="707.9874686716792" y="1775.5" _orig_x="654.03"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(230,151,46)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1839.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="242.01733500417717" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(235,19,34)" rx="2" ry="2" _orig_x="251.5" _orig_width="0.3"/>
<text x="245.01733500417717" y="1855.5" _orig_x="254.46"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="123.61545530492906" y="1445" width="0.20827067669172933" height="15.0" fill="rgb(233,4,42)" rx="2" ry="2" _orig_x="137.8" _orig_width="0.2"/>
<text x="126.61545530492906" y="1455.5" _orig_x="140.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="355.5248538011696" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(206,160,3)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1919.5" _orig_x="363.53"/>
</g>
<g class="hide">
<title>[libpixman-1.so.0.38.4] (29 samples, 0.02%)</title><rect x="909.0041771094403" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(225,9,16)" rx="2" ry="2" _orig_x="892.0" _orig_width="0.3"/>
<text x="912.0041771094403" y="2047.5" _orig_x="895.05"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="309" width="0.31240601503759396" height="15.0" fill="rgb(224,149,25)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="319.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>azx_get_pos_fifo (21 samples, 0.02%)</title><rect x="69.77748538011701" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(237,81,0)" rx="2" ry="2" _orig_x="86.1" _orig_width="0.2"/>
<text x="72.77748538011701" y="1855.5" _orig_x="89.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="41.869214703425286" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(254,78,31)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1983.5" _orig_x="62.27"/>
</g>
<g class="hide">
<title>[chrome] (25 samples, 0.02%)</title><rect x="11.6" y="1781" width="0.3" height="15.0" fill="rgb(217,64,16)" rx="2" ry="2"/>
<text x="14.61" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (322 samples, 0.27%)</title><rect x="16.8" y="1925" width="3.2" height="15.0" fill="rgb(222,58,28)" rx="2" ry="2"/>
<text x="19.77" y="1935.5"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTaskImpl (840 samples, 0.71%)</title><rect x="214.5256056808689" y="1765" width="8.643233082706768" height="15.0" fill="rgb(246,173,53)" rx="2" ry="2" _orig_x="225.1" _orig_width="8.3"/>
<text x="217.5256056808689" y="1775.5" _orig_x="228.11"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (37 samples, 0.03%)</title><rect x="36.12364243943196" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(251,79,23)" rx="2" ry="2" _orig_x="379.6" _orig_width="0.3"/>
<text x="39.12364243943196" y="1727.5" _orig_x="382.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="308.97635756056815" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(236,197,21)" rx="2" ry="2" _orig_x="315.8" _orig_width="0.1"/>
<text x="311.97635756056815" y="1839.5" _orig_x="318.77"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(246,1,21)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1807.5" _orig_x="118.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (15 samples, 0.01%)</title><rect x="48.69256474519629" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(231,54,18)" rx="2" ry="2" _orig_x="384.7" _orig_width="0.2"/>
<text x="51.69256474519629" y="1743.5" _orig_x="387.71"/>
</g>
<g class="hide">
<title>__libc_write (22 samples, 0.02%)</title><rect x="41.34853801169596" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(207,89,20)" rx="2" ry="2" _orig_x="58.8" _orig_width="0.3"/>
<text x="44.34853801169596" y="2047.5" _orig_x="61.84"/>
</g>
<g class="hide">
<title>[perf-58119.map] (69 samples, 0.06%)</title><rect x="117.15906432748542" y="1317" width="0.7289473684210526" height="15.0" fill="rgb(242,39,40)" rx="2" ry="2" _orig_x="131.6" _orig_width="0.7"/>
<text x="120.15906432748542" y="1327.5" _orig_x="134.58"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,478 samples, 1.24%)</title><rect x="1052.234753550543" y="1845" width="36.228070175438596" height="15.0" fill="rgb(244,46,27)" rx="2" ry="2" _orig_x="791.9" _orig_width="14.7"/>
<text x="1055.234753550543" y="1855.5" _orig_x="794.92">std..</text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="405" width="0.31240601503759396" height="15.0" fill="rgb(230,93,41)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="415.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (343 samples, 0.29%)</title><rect x="87.58462823725988" y="1989" width="3.5406015037593983" height="15.0" fill="rgb(218,87,29)" rx="2" ry="2" _orig_x="103.2" _orig_width="3.4"/>
<text x="90.58462823725988" y="1999.5" _orig_x="106.19"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (20 samples, 0.02%)</title><rect x="118.68421052631582" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(249,198,1)" rx="2" ry="2" _orig_x="413.1" _orig_width="0.2"/>
<text x="121.68421052631582" y="1759.5" _orig_x="416.11"/>
</g>
<g class="hide">
<title>v8::internal::FunctionCallbackArguments::Call (108 samples, 0.09%)</title><rect x="164.01996658312453" y="1509" width="1.0413533834586466" height="15.0" fill="rgb(225,176,21)" rx="2" ry="2" _orig_x="176.6" _orig_width="1.0"/>
<text x="167.01996658312453" y="1519.5" _orig_x="179.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="328.86620718462825" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(245,58,26)" rx="2" ry="2" _orig_x="334.9" _orig_width="0.1"/>
<text x="331.86620718462825" y="1935.5" _orig_x="337.85"/>
</g>
<g>
<title>Field::Field (22 samples, 0.02%)</title><rect x="172.65664160401" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(226,166,34)" rx="2" ry="2" _orig_x="435.0" _orig_width="0.3"/>
<text x="175.65664160401" y="1823.5" _orig_x="438.03"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::Invoke (1,761 samples, 1.48%)</title><rect x="180.2650793650794" y="1621" width="18.223684210526315" height="15.0" fill="rgb(211,65,2)" rx="2" ry="2" _orig_x="192.2" _orig_width="17.5"/>
<text x="183.2650793650794" y="1631.5" _orig_x="195.23">v8::internal::(anonymous namespace)::Invoke </text>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (24 samples, 0.02%)</title><rect x="832.6482873851293" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(238,41,25)" rx="2" ry="2" _orig_x="702.8" _orig_width="0.2"/>
<text x="835.6482873851293" y="1775.5" _orig_x="705.76"/>
</g>
<g class="hide">
<title>v8::(anonymous namespace)::CallDepthScope&lt;true&gt;::CallDepthScope (17 samples, 0.01%)</title><rect x="180.0568086883877" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(239,74,48)" rx="2" ry="2" _orig_x="192.0" _orig_width="0.2"/>
<text x="183.0568086883877" y="1647.5" _orig_x="195.00"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (14 samples, 0.01%)</title><rect x="549.4778613199666" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(211,142,9)" rx="2" ry="2" _orig_x="587.9" _orig_width="0.1"/>
<text x="552.4778613199666" y="1743.5" _orig_x="590.87"/>
</g>
<g class="hide">
<title>[code] (59 samples, 0.05%)</title><rect x="12.4" y="1861" width="0.6" height="15.0" fill="rgb(231,117,6)" rx="2" ry="2"/>
<text x="15.41" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="13.5" y="1797" width="0.1" height="15.0" fill="rgb(209,45,50)" rx="2" ry="2"/>
<text x="16.45" y="1807.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (12 samples, 0.01%)</title><rect x="84.67418546365917" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(253,135,8)" rx="2" ry="2" _orig_x="399.3" _orig_width="0.1"/>
<text x="87.67418546365917" y="1823.5" _orig_x="402.28"/>
</g>
<g class="hide">
<title>[code] (377 samples, 0.32%)</title><rect x="16.4" y="2021" width="3.7" height="15.0" fill="rgb(238,138,54)" rx="2" ry="2"/>
<text x="19.35" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (150 samples, 0.13%)</title><rect x="53.94891395154559" y="1957" width="1.5620300751879699" height="15.0" fill="rgb(243,185,41)" rx="2" ry="2" _orig_x="70.9" _orig_width="1.5"/>
<text x="56.94891395154559" y="1967.5" _orig_x="73.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (845 samples, 0.71%)</title><rect x="96.50375939849629" y="1765" width="20.70175438596491" height="15.0" fill="rgb(210,95,22)" rx="2" ry="2" _orig_x="404.1" _orig_width="8.4"/>
<text x="99.50375939849629" y="1775.5" _orig_x="407.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (673 samples, 0.57%)</title><rect x="921.60455304929" y="1717" width="6.977067669172932" height="15.0" fill="rgb(220,118,37)" rx="2" ry="2" _orig_x="904.1" _orig_width="6.7"/>
<text x="924.60455304929" y="1727.5" _orig_x="907.08"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (21 samples, 0.02%)</title><rect x="1066.7752715121132" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(207,40,4)" rx="2" ry="2" _orig_x="797.8" _orig_width="0.2"/>
<text x="1069.7752715121132" y="1823.5" _orig_x="800.76"/>
</g>
<g>
<title>[libminisql_shared.so] (13 samples, 0.01%)</title><rect x="127.8028404344194" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(227,18,3)" rx="2" ry="2" _orig_x="416.8" _orig_width="0.2"/>
<text x="130.8028404344194" y="1791.5" _orig_x="419.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="355.73312447786134" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(212,219,26)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1903.5" _orig_x="363.71"/>
</g>
<g>
<title>MemHeap::MemHeap (14 samples, 0.01%)</title><rect x="487.3725981620719" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(212,9,31)" rx="2" ry="2" _orig_x="562.7" _orig_width="0.1"/>
<text x="490.3725981620719" y="1823.5" _orig_x="565.67"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="581" width="0.31240601503759396" height="15.0" fill="rgb(241,33,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="591.5" _orig_x="48.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (13 samples, 0.01%)</title><rect x="564.2648287385128" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(233,211,28)" rx="2" ry="2" _orig_x="593.9" _orig_width="0.1"/>
<text x="567.2648287385128" y="1871.5" _orig_x="596.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="352.60906432748544" y="1989" width="0.937218045112782" height="15.0" fill="rgb(244,83,25)" rx="2" ry="2" _orig_x="357.7" _orig_width="0.9"/>
<text x="355.60906432748544" y="1999.5" _orig_x="360.74"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvents (891 samples, 0.75%)</title><rect x="145.69214703425234" y="2005" width="9.268045112781955" height="15.0" fill="rgb(225,167,46)" rx="2" ry="2" _orig_x="159.0" _orig_width="8.9"/>
<text x="148.69214703425234" y="2015.5" _orig_x="162.02"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (27 samples, 0.02%)</title><rect x="15.9" y="2053" width="0.3" height="15.0" fill="rgb(228,215,49)" rx="2" ry="2"/>
<text x="18.90" y="2063.5"/>
</g>
<g class="hide">
<title>chrome (1,056 samples, 0.89%)</title><rect x="100.1" y="2069" width="10.5" height="15.0" fill="rgb(254,223,47)" rx="2" ry="2"/>
<text x="103.11" y="2079.5"/>
</g>
<g class="hide">
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (118 samples, 0.10%)</title><rect x="163.91583124477867" y="1557" width="1.1454887218045113" height="15.0" fill="rgb(223,191,40)" rx="2" ry="2" _orig_x="176.5" _orig_width="1.1"/>
<text x="166.91583124477867" y="1567.5" _orig_x="179.46"/>
</g>
<g class="hide">
<title>[chrome] (13 samples, 0.01%)</title><rect x="86.75154553049296" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(233,98,53)" rx="2" ry="2" _orig_x="102.4" _orig_width="0.1"/>
<text x="89.75154553049296" y="1743.5" _orig_x="105.41"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (12 samples, 0.01%)</title><rect x="273.67447786132" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(246,178,48)" rx="2" ry="2" _orig_x="281.9" _orig_width="0.1"/>
<text x="276.67447786132" y="2047.5" _orig_x="284.86"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1029" width="0.31240601503759396" height="15.0" fill="rgb(211,64,6)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1039.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (108 samples, 0.09%)</title><rect x="837.0843776106934" y="1781" width="2.7109440267335008" height="15.0" fill="rgb(215,100,44)" rx="2" ry="2" _orig_x="704.6" _orig_width="1.1"/>
<text x="840.0843776106934" y="1791.5" _orig_x="707.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="355.8372598162072" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(251,116,10)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1727.5" _orig_x="363.81"/>
</g>
<g>
<title>Field::CompareLessThan (43 samples, 0.04%)</title><rect x="443.9974937343359" y="1861" width="0.985797827903091" height="15.0" fill="rgb(228,212,4)" rx="2" ry="2" _orig_x="545.1" _orig_width="0.4"/>
<text x="446.9974937343359" y="1871.5" _orig_x="548.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="96.6444026733501" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(224,133,9)" rx="2" ry="2" _orig_x="111.9" _orig_width="0.4"/>
<text x="99.6444026733501" y="1935.5" _orig_x="114.86"/>
</g>
<g class="hide">
<title>_nv009834rm (18 samples, 0.02%)</title><rect x="1181.7" y="2053" width="0.2" height="15.0" fill="rgb(249,209,14)" rx="2" ry="2"/>
<text x="1184.67" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (343 samples, 0.29%)</title><rect x="87.58462823725988" y="2005" width="3.5406015037593983" height="15.0" fill="rgb(213,5,3)" rx="2" ry="2" _orig_x="103.2" _orig_width="3.4"/>
<text x="90.58462823725988" y="2015.5" _orig_x="106.19"/>
</g>
<g class="hide">
<title>content::RendererMain (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1893" width="5.102631578947369" height="15.0" fill="rgb(212,56,18)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1903.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="118.30455304928994" y="1381" width="0.10413533834586466" height="15.0" fill="rgb(237,188,42)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1391.5" _orig_x="135.68"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (33 samples, 0.03%)</title><rect x="160.33416875522138" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(240,59,6)" rx="2" ry="2" _orig_x="430.0" _orig_width="0.3"/>
<text x="163.33416875522138" y="1775.5" _orig_x="432.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="254.6177109440268" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(223,228,33)" rx="2" ry="2" _orig_x="263.6" _orig_width="0.4"/>
<text x="257.61771094402684" y="1919.5" _orig_x="266.58"/>
</g>
<g class="hide">
<title>ThreadPoolForeg (981 samples, 0.82%)</title><rect x="48.2" y="2069" width="9.8" height="15.0" fill="rgb(237,75,25)" rx="2" ry="2"/>
<text x="51.23" y="2079.5"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="737.2723475355054" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(248,195,45)" rx="2" ry="2" _orig_x="664.1" _orig_width="0.1"/>
<text x="740.2723475355054" y="1807.5" _orig_x="667.05"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (25 samples, 0.02%)</title><rect x="455.82706766917283" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(222,178,41)" rx="2" ry="2" _orig_x="549.9" _orig_width="0.2"/>
<text x="458.82706766917283" y="1743.5" _orig_x="552.88"/>
</g>
<g>
<title>Schema::GetColumn (11 samples, 0.01%)</title><rect x="650.2756892230575" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(245,132,38)" rx="2" ry="2" _orig_x="628.8" _orig_width="0.1"/>
<text x="653.2756892230575" y="1855.5" _orig_x="631.76"/>
</g>
<g class="hide">
<title>mount.ntfs (3,101 samples, 2.61%)</title><rect x="859.7" y="2069" width="30.8" height="15.0" fill="rgb(219,33,47)" rx="2" ry="2"/>
<text x="862.72" y="2079.5">mo..</text>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (70 samples, 0.06%)</title><rect x="481.704260651629" y="1765" width="1.7251461988304093" height="15.0" fill="rgb(252,85,13)" rx="2" ry="2" _orig_x="560.4" _orig_width="0.7"/>
<text x="484.704260651629" y="1775.5" _orig_x="563.40"/>
</g>
<g class="hide">
<title>gsd-sharing (50 samples, 0.04%)</title><rect x="330.6" y="2069" width="0.5" height="15.0" fill="rgb(249,60,54)" rx="2" ry="2"/>
<text x="333.62" y="2079.5"/>
</g>
<g class="hide">
<title>blink::BaseArena::LazySweepWithDeadline (12 samples, 0.01%)</title><rect x="174.53763575605686" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(227,134,22)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1679.5" _orig_x="189.70"/>
</g>
<g class="hide">
<title>std::condition_variable::wait_until&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (46 samples, 0.04%)</title><rect x="17.81395154553055" y="1845" width="0.5206766917293233" height="15.0" fill="rgb(250,17,37)" rx="2" ry="2" _orig_x="36.2" _orig_width="0.5"/>
<text x="20.81395154553055" y="1855.5" _orig_x="39.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="883.178613199666" y="1733" width="0.6248120300751879" height="15.0" fill="rgb(225,137,14)" rx="2" ry="2" _orig_x="867.2" _orig_width="0.6"/>
<text x="886.178613199666" y="1743.5" _orig_x="870.19"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (52 samples, 0.04%)</title><rect x="497.4770258980784" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(252,82,16)" rx="2" ry="2" _orig_x="566.8" _orig_width="0.5"/>
<text x="500.4770258980784" y="1775.5" _orig_x="569.79"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (68 samples, 0.06%)</title><rect x="850.6390977443609" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(218,205,28)" rx="2" ry="2" _orig_x="710.1" _orig_width="0.6"/>
<text x="853.6390977443609" y="1807.5" _orig_x="713.07"/>
</g>
<g class="hide">
<title>[unknown] (203 samples, 0.17%)</title><rect x="49.679365079365134" y="261" width="2.082706766917293" height="15.0" fill="rgb(244,9,29)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.0"/>
<text x="52.679365079365134" y="271.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>runtime.mstart1 (27 samples, 0.02%)</title><rect x="269.9256056808689" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.2"/>
<text x="272.9256056808689" y="2015.5" _orig_x="281.26"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (415 samples, 0.35%)</title><rect x="756.7418546365915" y="1829" width="10.104427736006683" height="15.0" fill="rgb(245,48,19)" rx="2" ry="2" _orig_x="672.0" _orig_width="4.1"/>
<text x="759.7418546365915" y="1839.5" _orig_x="674.99"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (27 samples, 0.02%)</title><rect x="183.07673350041776" y="1349" width="0.31240601503759396" height="15.0" fill="rgb(237,32,35)" rx="2" ry="2" _orig_x="194.9" _orig_width="0.3"/>
<text x="186.07673350041776" y="1359.5" _orig_x="197.93"/>
</g>
<g>
<title>Column::GetType (11 samples, 0.01%)</title><rect x="570.1796157059314" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(244,200,50)" rx="2" ry="2" _orig_x="596.3" _orig_width="0.1"/>
<text x="573.1796157059314" y="1855.5" _orig_x="599.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (228 samples, 0.19%)</title><rect x="250.45229741019222" y="1845" width="2.3951127819548867" height="15.0" fill="rgb(210,99,54)" rx="2" ry="2" _orig_x="259.6" _orig_width="2.3"/>
<text x="253.45229741019222" y="1855.5" _orig_x="262.63"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (577 samples, 0.49%)</title><rect x="997.7694235588971" y="1797" width="14.047619047619047" height="15.0" fill="rgb(230,17,13)" rx="2" ry="2" _orig_x="769.8" _orig_width="5.7"/>
<text x="1000.7694235588971" y="1807.5" _orig_x="772.82"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="501.4202172096908" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(227,214,0)" rx="2" ry="2" _orig_x="568.4" _orig_width="0.1"/>
<text x="504.4202172096908" y="1839.5" _orig_x="571.36"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (26 samples, 0.02%)</title><rect x="632.7777777777778" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(229,41,53)" rx="2" ry="2" _orig_x="621.7" _orig_width="0.3"/>
<text x="635.7777777777778" y="1791.5" _orig_x="624.74"/>
</g>
<g class="hide">
<title>_nv033085rm (202 samples, 0.17%)</title><rect x="1184.9" y="2053" width="2.0" height="15.0" fill="rgb(213,176,27)" rx="2" ry="2"/>
<text x="1187.94" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1189" width="0.31240601503759396" height="15.0" fill="rgb(239,77,0)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1199.5" _orig_x="99.72"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (202 samples, 0.17%)</title><rect x="1094.3776106934001" y="1877" width="4.928989139515455" height="15.0" fill="rgb(223,27,31)" rx="2" ry="2" _orig_x="809.0" _orig_width="2.0"/>
<text x="1097.3776106934001" y="1887.5" _orig_x="811.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="915.2522974101922" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(244,207,44)" rx="2" ry="2" _orig_x="898.0" _orig_width="0.1"/>
<text x="918.2522974101922" y="1951.5" _orig_x="900.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (238 samples, 0.20%)</title><rect x="914.7159565580619" y="1797" width="5.668337510442773" height="15.0" fill="rgb(223,18,46)" rx="2" ry="2" _orig_x="736.1" _orig_width="2.3"/>
<text x="917.7159565580619" y="1807.5" _orig_x="739.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="118.61695906432753" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(215,142,13)" rx="2" ry="2" _orig_x="133.0" _orig_width="0.2"/>
<text x="121.61695906432753" y="1743.5" _orig_x="136.03"/>
</g>
<g class="hide">
<title>[chrome] (28 samples, 0.02%)</title><rect x="11.6" y="1813" width="0.3" height="15.0" fill="rgb(218,16,25)" rx="2" ry="2"/>
<text x="14.59" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (61 samples, 0.05%)</title><rect x="27.9" y="2021" width="0.6" height="15.0" fill="rgb(217,19,5)" rx="2" ry="2"/>
<text x="30.87" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="597" width="0.31240601503759396" height="15.0" fill="rgb(232,127,36)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="607.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>content::ContentMain (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1957" width="55.81654135338346" height="15.0" fill="rgb(243,151,25)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1967.5" _orig_x="185.47">content::ContentMain </text>
</g>
<g class="hide">
<title>[code] (17 samples, 0.01%)</title><rect x="18.8" y="1621" width="0.2" height="15.0" fill="rgb(205,26,51)" rx="2" ry="2"/>
<text x="21.80" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="2005" width="0.1" height="15.0" fill="rgb(246,156,33)" rx="2" ry="2"/>
<text x="26.70" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (188 samples, 0.16%)</title><rect x="1179.7" y="1669" width="1.9" height="15.0" fill="rgb(217,164,26)" rx="2" ry="2"/>
<text x="1182.70" y="1679.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (40 samples, 0.03%)</title><rect x="907.5689223057645" y="1813" width="0.985797827903091" height="15.0" fill="rgb(254,67,43)" rx="2" ry="2" _orig_x="733.2" _orig_width="0.4"/>
<text x="910.5689223057645" y="1823.5" _orig_x="736.20"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (35 samples, 0.03%)</title><rect x="85.08538011695912" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(233,192,12)" rx="2" ry="2" _orig_x="100.8" _orig_width="0.4"/>
<text x="88.08538011695912" y="2047.5" _orig_x="103.82"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (28 samples, 0.02%)</title><rect x="509.5530492898915" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(227,62,19)" rx="2" ry="2" _orig_x="571.7" _orig_width="0.3"/>
<text x="512.5530492898915" y="1791.5" _orig_x="574.68"/>
</g>
<g class="hide">
<title>[code] (27 samples, 0.02%)</title><rect x="99.8725981620719" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(218,152,0)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1887.5" _orig_x="118.01"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (459 samples, 0.39%)</title><rect x="735.0543024227236" y="1813" width="11.336675020885545" height="15.0" fill="rgb(221,123,22)" rx="2" ry="2" _orig_x="663.2" _orig_width="4.6"/>
<text x="738.0543024227236" y="1823.5" _orig_x="666.21"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1621" width="0.31240601503759396" height="15.0" fill="rgb(249,97,17)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1631.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="1163.7304452466908" y="1877" width="0.2366626554352186" height="15.0" fill="rgb(210,205,20)" rx="2" ry="2" _orig_x="848.6" _orig_width="0.1"/>
<text x="1166.7304452466908" y="1887.5" _orig_x="851.59"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1909" width="12.912781954887219" height="15.0" fill="rgb(228,140,12)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1919.5" _orig_x="126.94"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1045" width="0.31240601503759396" height="15.0" fill="rgb(251,91,10)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1055.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1589" width="0.20827067669172933" height="15.0" fill="rgb(222,85,29)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1599.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="1989" width="0.2" height="15.0" fill="rgb(248,12,8)" rx="2" ry="2"/>
<text x="18.74" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (31 samples, 0.03%)</title><rect x="116.84665831244784" y="1301" width="0.31240601503759396" height="15.0" fill="rgb(253,194,36)" rx="2" ry="2" _orig_x="131.3" _orig_width="0.3"/>
<text x="119.84665831244784" y="1311.5" _orig_x="134.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="12.0" y="1861" width="0.1" height="15.0" fill="rgb(224,41,31)" rx="2" ry="2"/>
<text x="15.02" y="1871.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (11 samples, 0.01%)</title><rect x="206.42021720969086" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(210,156,53)" rx="2" ry="2" _orig_x="448.7" _orig_width="0.1"/>
<text x="209.42021720969086" y="1791.5" _orig_x="451.69"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="469" width="2.2909774436090227" height="15.0" fill="rgb(229,144,12)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="479.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libxcb.so.1.1.0] (14 samples, 0.01%)</title><rect x="182.3" y="2053" width="0.1" height="15.0" fill="rgb(228,82,25)" rx="2" ry="2"/>
<text x="185.28" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="1161.740643274854" y="1621" width="0.7289473684210526" height="15.0" fill="rgb(225,83,18)" rx="2" ry="2" _orig_x="1134.7" _orig_width="0.7"/>
<text x="1164.740643274854" y="1631.5" _orig_x="1137.75"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (17 samples, 0.01%)</title><rect x="271.2364243943191" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(240,2,18)" rx="2" ry="2" _orig_x="475.0" _orig_width="0.2"/>
<text x="274.2364243943191" y="1775.5" _orig_x="478.00"/>
</g>
<g>
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::~_Vector_base (17 samples, 0.01%)</title><rect x="1182.8529657477025" y="1941" width="0.24644945697577275" height="15.0" fill="rgb(216,79,44)" rx="2" ry="2" _orig_x="844.9" _orig_width="0.1"/>
<text x="1185.8529657477025" y="1951.5" _orig_x="847.87"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (54 samples, 0.05%)</title><rect x="510.53884711779455" y="1765" width="1.4786967418546364" height="15.0" fill="rgb(222,106,49)" rx="2" ry="2" _orig_x="572.1" _orig_width="0.6"/>
<text x="513.5388471177946" y="1775.5" _orig_x="575.14"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (13 samples, 0.01%)</title><rect x="227.12197159565585" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(235,24,13)" rx="2" ry="2" _orig_x="457.1" _orig_width="0.2"/>
<text x="230.12197159565585" y="1807.5" _orig_x="460.12"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="949" width="2.2909774436090227" height="15.0" fill="rgb(247,60,41)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="959.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (103 samples, 0.09%)</title><rect x="58.6" y="2053" width="1.0" height="15.0" fill="rgb(236,223,34)" rx="2" ry="2"/>
<text x="61.61" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="170.580492898914" y="1781" width="0.7289473684210526" height="15.0" fill="rgb(216,103,20)" rx="2" ry="2" _orig_x="182.9" _orig_width="0.7"/>
<text x="173.580492898914" y="1791.5" _orig_x="185.87"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (611 samples, 0.51%)</title><rect x="540.6056808688386" y="1813" width="14.786967418546366" height="15.0" fill="rgb(249,101,38)" rx="2" ry="2" _orig_x="584.3" _orig_width="6.0"/>
<text x="543.6056808688386" y="1823.5" _orig_x="587.27"/>
</g>
<g class="hide">
<title>[perf-58157.map] (219 samples, 0.18%)</title><rect x="122.36583124477866" y="1813" width="2.2909774436090227" height="15.0" fill="rgb(223,196,42)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1823.5" _orig_x="139.61"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (11 samples, 0.01%)</title><rect x="485.8939014202172" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(223,83,11)" rx="2" ry="2" _orig_x="562.1" _orig_width="0.1"/>
<text x="488.8939014202172" y="1791.5" _orig_x="565.12"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (15 samples, 0.01%)</title><rect x="946.0150375939847" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(246,66,53)" rx="2" ry="2" _orig_x="748.8" _orig_width="0.1"/>
<text x="949.0150375939847" y="1887.5" _orig_x="751.77"/>
</g>
<g>
<title>Row::DeserializeFrom (37 samples, 0.03%)</title><rect x="774.7326649958228" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(214,157,20)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.3"/>
<text x="777.7326649958228" y="1871.5" _orig_x="682.26"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1253" width="0.31240601503759396" height="15.0" fill="rgb(250,19,22)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1263.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="114.5556808688388" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(239,121,27)" rx="2" ry="2" _orig_x="129.1" _orig_width="0.1"/>
<text x="117.5556808688388" y="1455.5" _orig_x="132.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (92 samples, 0.08%)</title><rect x="929.3105680868839" y="1733" width="1.0413533834586466" height="15.0" fill="rgb(232,187,41)" rx="2" ry="2" _orig_x="911.5" _orig_width="1.0"/>
<text x="932.3105680868839" y="1743.5" _orig_x="914.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="355.5248538011696" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(249,203,2)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="2015.5" _orig_x="363.46"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (85 samples, 0.07%)</title><rect x="152.69423558897236" y="1733" width="1.971595655806182" height="15.0" fill="rgb(212,133,50)" rx="2" ry="2" _orig_x="426.9" _orig_width="0.8"/>
<text x="155.69423558897236" y="1743.5" _orig_x="429.87"/>
</g>
<g class="hide">
<title>std::_Rb_tree&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const, std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const, std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt; &gt;, std::less&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const, std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt; &gt; &gt;::upper_bound (18 samples, 0.02%)</title><rect x="18.959440267335054" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(250,54,17)" rx="2" ry="2" _orig_x="37.3" _orig_width="0.1"/>
<text x="21.959440267335054" y="1871.5" _orig_x="40.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="11.669966583124534" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(214,0,25)" rx="2" ry="2" _orig_x="30.3" _orig_width="0.1"/>
<text x="14.669966583124534" y="1919.5" _orig_x="33.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="30.41432748538017" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(212,11,33)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1951.5" _orig_x="51.32"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (15 samples, 0.01%)</title><rect x="597.5355054302422" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(213,83,7)" rx="2" ry="2" _orig_x="607.4" _orig_width="0.1"/>
<text x="600.5355054302422" y="1727.5" _orig_x="610.38"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask (573 samples, 0.48%)</title><rect x="207.96507936507942" y="1781" width="5.935714285714286" height="15.0" fill="rgb(213,91,50)" rx="2" ry="2" _orig_x="218.8" _orig_width="5.7"/>
<text x="210.96507936507942" y="1791.5" _orig_x="221.81"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::shared_ptr&lt;InotifySubscription&gt; const&amp;&gt; (25 samples, 0.02%)</title><rect x="154.43951545530498" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(206,137,16)" rx="2" ry="2" _orig_x="167.4" _orig_width="0.2"/>
<text x="157.43951545530498" y="1983.5" _orig_x="170.36"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (39 samples, 0.03%)</title><rect x="407.52297410192136" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(208,47,10)" rx="2" ry="2" _orig_x="530.3" _orig_width="0.3"/>
<text x="410.52297410192136" y="1807.5" _orig_x="533.25"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (47 samples, 0.04%)</title><rect x="530.5012531328322" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(250,216,54)" rx="2" ry="2" _orig_x="580.2" _orig_width="0.5"/>
<text x="533.5012531328322" y="1807.5" _orig_x="583.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (188 samples, 0.16%)</title><rect x="926.6030492898914" y="1589" width="1.9785714285714284" height="15.0" fill="rgb(228,178,53)" rx="2" ry="2" _orig_x="908.9" _orig_width="1.9"/>
<text x="929.6030492898914" y="1599.5" _orig_x="911.90"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (3,069 samples, 2.58%)</title><rect x="167.9741019214704" y="1861" width="75.16708437761069" height="15.0" fill="rgb(215,160,22)" rx="2" ry="2" _orig_x="433.1" _orig_width="30.5"/>
<text x="170.9741019214704" y="1871.5" _orig_x="436.14">Generic..</text>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (22 samples, 0.02%)</title><rect x="972.3851294903926" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(221,89,8)" rx="2" ry="2" _orig_x="759.5" _orig_width="0.2"/>
<text x="975.3851294903926" y="1775.5" _orig_x="762.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="19.6" y="1845" width="0.2" height="15.0" fill="rgb(220,81,12)" rx="2" ry="2"/>
<text x="22.58" y="1855.5"/>
</g>
<g class="hide">
<title>_nv023484rm (16 samples, 0.01%)</title><rect x="338.0" y="2053" width="0.2" height="15.0" fill="rgb(215,173,20)" rx="2" ry="2"/>
<text x="341.05" y="2063.5"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (126 samples, 0.11%)</title><rect x="779.908103592314" y="1909" width="3.2038429406850457" height="15.0" fill="rgb(243,7,52)" rx="2" ry="2" _orig_x="681.4" _orig_width="1.3"/>
<text x="782.908103592314" y="1919.5" _orig_x="684.42"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (13 samples, 0.01%)</title><rect x="1126.1695906432747" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(227,214,33)" rx="2" ry="2" _orig_x="821.9" _orig_width="0.1"/>
<text x="1129.1695906432747" y="1759.5" _orig_x="824.86"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="2021" width="0.6" height="15.0" fill="rgb(236,207,42)" rx="2" ry="2"/>
<text x="17.02" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-15821.map] (31 samples, 0.03%)</title><rect x="92.89553049289897" y="1493" width="0.41654135338345866" height="15.0" fill="rgb(250,190,35)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1503.5" _orig_x="111.34"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign (48 samples, 0.04%)</title><rect x="1162.3976608187133" y="1909" width="1.2322472848788637" height="15.0" fill="rgb(229,46,43)" rx="2" ry="2" _orig_x="836.6" _orig_width="0.5"/>
<text x="1165.3976608187133" y="1919.5" _orig_x="839.61"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (11 samples, 0.01%)</title><rect x="59.98876357560574" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(215,132,42)" rx="2" ry="2" _orig_x="76.7" _orig_width="0.1"/>
<text x="62.98876357560574" y="2015.5" _orig_x="79.73"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (118 samples, 0.10%)</title><rect x="672.9490392648288" y="1733" width="2.957393483709273" height="15.0" fill="rgb(249,120,53)" rx="2" ry="2" _orig_x="638.0" _orig_width="1.2"/>
<text x="675.9490392648288" y="1743.5" _orig_x="641.01"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (14 samples, 0.01%)</title><rect x="412.9448621553884" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" _orig_x="532.5" _orig_width="0.1"/>
<text x="415.9448621553884" y="1823.5" _orig_x="535.47"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(249,200,13)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1855.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(223,158,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1471.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (24 samples, 0.02%)</title><rect x="596.5497076023391" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(218,53,2)" rx="2" ry="2" _orig_x="607.0" _orig_width="0.2"/>
<text x="599.5497076023391" y="1743.5" _orig_x="609.99"/>
</g>
<g>
<title>_int_free (15 samples, 0.01%)</title><rect x="555.8855472013366" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(254,42,44)" rx="2" ry="2" _orig_x="590.5" _orig_width="0.1"/>
<text x="558.8855472013366" y="1839.5" _orig_x="593.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="19.6" y="1829" width="0.2" height="15.0" fill="rgb(250,118,41)" rx="2" ry="2"/>
<text x="22.58" y="1839.5"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (22 samples, 0.02%)</title><rect x="472.09273182957395" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(213,69,34)" rx="2" ry="2" _orig_x="556.5" _orig_width="0.2"/>
<text x="475.09273182957395" y="1743.5" _orig_x="559.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (235 samples, 0.20%)</title><rect x="239.830492898914" y="2021" width="2.4992481203007517" height="15.0" fill="rgb(216,86,16)" rx="2" ry="2" _orig_x="249.4" _orig_width="2.4"/>
<text x="242.830492898914" y="2031.5" _orig_x="252.44"/>
</g>
<g>
<title>Schema::GetColumn (13 samples, 0.01%)</title><rect x="450.1587301587302" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(248,119,50)" rx="2" ry="2" _orig_x="547.6" _orig_width="0.1"/>
<text x="453.1587301587302" y="1839.5" _orig_x="550.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="131.21733500417716" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(229,121,47)" rx="2" ry="2" _orig_x="145.1" _orig_width="0.3"/>
<text x="134.21733500417716" y="1967.5" _orig_x="148.12"/>
</g>
<g class="hide">
<title>__GI___writev (590 samples, 0.50%)</title><rect x="885.7819966583126" y="2021" width="6.143984962406015" height="15.0" fill="rgb(239,189,29)" rx="2" ry="2" _orig_x="869.7" _orig_width="5.9"/>
<text x="888.7819966583126" y="2031.5" _orig_x="872.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (19 samples, 0.02%)</title><rect x="177.33918128654963" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(208,55,16)" rx="2" ry="2" _orig_x="436.9" _orig_width="0.2"/>
<text x="180.33918128654963" y="1759.5" _orig_x="439.89"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_Node_iterator_base (12 samples, 0.01%)</title><rect x="1035.2297410192145" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(220,71,20)" rx="2" ry="2" _orig_x="785.0" _orig_width="0.1"/>
<text x="1038.2297410192145" y="1791.5" _orig_x="787.98"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (820 samples, 0.69%)</title><rect x="22.322472848788635" y="1765" width="20.208855472013365" height="15.0" fill="rgb(249,15,3)" rx="2" ry="2" _orig_x="374.0" _orig_width="8.2"/>
<text x="25.322472848788635" y="1775.5" _orig_x="377.03"/>
</g>
<g>
<title>_int_free (14 samples, 0.01%)</title><rect x="1129.126984126984" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(233,162,12)" rx="2" ry="2" _orig_x="823.1" _orig_width="0.1"/>
<text x="1132.126984126984" y="1743.5" _orig_x="826.09"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (14 samples, 0.01%)</title><rect x="363.9014202172097" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(230,18,38)" rx="2" ry="2" _orig_x="512.6" _orig_width="0.1"/>
<text x="366.9014202172097" y="1775.5" _orig_x="515.55"/>
</g>
<g>
<title>operator new (18 samples, 0.02%)</title><rect x="440.0543024227235" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(223,3,15)" rx="2" ry="2" _orig_x="543.5" _orig_width="0.2"/>
<text x="443.0543024227235" y="1871.5" _orig_x="546.51"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (49 samples, 0.04%)</title><rect x="776.4578111946532" y="1877" width="0.985797827903091" height="15.0" fill="rgb(211,94,28)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.4"/>
<text x="779.4578111946532" y="1887.5" _orig_x="682.96"/>
</g>
<g>
<title>ExecuteEngine::Execute (48,024 samples, 40.38%)</title><rect x="10.985797827903033" y="1989" width="1174.3316624895572" height="15.0" fill="rgb(251,7,9)" rx="2" ry="2" _orig_x="369.4" _orig_width="476.5"/>
<text x="13.985797827903033" y="1999.5" _orig_x="372.39">ExecuteEngine::Execute </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (72 samples, 0.06%)</title><rect x="1096.1027568922304" y="1829" width="1.7251461988304093" height="15.0" fill="rgb(229,132,14)" rx="2" ry="2" _orig_x="809.7" _orig_width="0.7"/>
<text x="1099.1027568922304" y="1839.5" _orig_x="812.73"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (39 samples, 0.03%)</title><rect x="252.99916457811202" y="1749" width="0.985797827903091" height="15.0" fill="rgb(230,215,21)" rx="2" ry="2" _orig_x="467.6" _orig_width="0.4"/>
<text x="255.99916457811202" y="1759.5" _orig_x="470.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,173 samples, 0.99%)</title><rect x="916.3977861319967" y="1877" width="12.183834586466164" height="15.0" fill="rgb(221,210,28)" rx="2" ry="2" _orig_x="899.1" _orig_width="11.7"/>
<text x="919.3977861319967" y="1887.5" _orig_x="902.12"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (11 samples, 0.01%)</title><rect x="211.59565580618212" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(223,90,42)" rx="2" ry="2" _orig_x="450.8" _orig_width="0.1"/>
<text x="214.59565580618212" y="1759.5" _orig_x="453.84"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1205" width="0.31240601503759396" height="15.0" fill="rgb(237,67,36)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1215.5" _orig_x="99.72"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (24 samples, 0.02%)</title><rect x="1137.7527151211361" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(236,74,2)" rx="2" ry="2" _orig_x="826.6" _orig_width="0.3"/>
<text x="1140.7527151211361" y="1871.5" _orig_x="829.63"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (20 samples, 0.02%)</title><rect x="706.9590643274853" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(209,168,28)" rx="2" ry="2" _orig_x="651.8" _orig_width="0.2"/>
<text x="709.9590643274853" y="1711.5" _orig_x="654.77"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (438 samples, 0.37%)</title><rect x="206.9131161236424" y="1781" width="10.843776106934003" height="15.0" fill="rgb(213,102,20)" rx="2" ry="2" _orig_x="448.9" _orig_width="4.4"/>
<text x="209.9131161236424" y="1791.5" _orig_x="451.93"/>
</g>
<g>
<title>Field::Field (20 samples, 0.02%)</title><rect x="573.876357560568" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(212,108,50)" rx="2" ry="2" _orig_x="597.8" _orig_width="0.2"/>
<text x="576.876357560568" y="1839.5" _orig_x="600.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (11 samples, 0.01%)</title><rect x="120.16290726817039" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(251,0,54)" rx="2" ry="2" _orig_x="413.7" _orig_width="0.2"/>
<text x="123.16290726817039" y="1791.5" _orig_x="416.75"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (29 samples, 0.02%)</title><rect x="364.3943191311611" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(247,86,37)" rx="2" ry="2" _orig_x="512.8" _orig_width="0.3"/>
<text x="367.3943191311611" y="1775.5" _orig_x="515.85"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (2,096 samples, 1.76%)</title><rect x="91.82121971595653" y="1845" width="51.26148705096073" height="15.0" fill="rgb(248,13,42)" rx="2" ry="2" _orig_x="402.2" _orig_width="20.8"/>
<text x="94.82121971595653" y="1855.5" _orig_x="405.21">Gener..</text>
</g>
<g class="hide">
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,133 samples, 0.95%)</title><rect x="185.99252297410197" y="1541" width="11.767293233082707" height="15.0" fill="rgb(236,198,12)" rx="2" ry="2" _orig_x="197.7" _orig_width="11.3"/>
<text x="188.99252297410197" y="1551.5" _orig_x="200.71"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (134 samples, 0.11%)</title><rect x="611.0902255639096" y="1829" width="3.4502923976608186" height="15.0" fill="rgb(211,119,47)" rx="2" ry="2" _orig_x="612.9" _orig_width="1.4"/>
<text x="614.0902255639096" y="1839.5" _orig_x="615.93"/>
</g>
<g class="hide">
<title>[perf-58145.map] (260 samples, 0.22%)</title><rect x="126.11470342522978" y="1797" width="2.6033834586466167" height="15.0" fill="rgb(249,45,16)" rx="2" ry="2" _orig_x="140.2" _orig_width="2.5"/>
<text x="129.11470342522978" y="1807.5" _orig_x="143.17"/>
</g>
<g class="hide">
<title>[perf-32996.map] (78 samples, 0.07%)</title><rect x="18.5" y="1733" width="0.8" height="15.0" fill="rgb(221,126,35)" rx="2" ry="2"/>
<text x="21.49" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="327.51244778613204" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(244,69,25)" rx="2" ry="2" _orig_x="333.6" _orig_width="0.1"/>
<text x="330.51244778613204" y="1967.5" _orig_x="336.59"/>
</g>
<g class="hide">
<title>[perf-58119.map] (37 samples, 0.03%)</title><rect x="118.09628237259821" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(229,92,14)" rx="2" ry="2" _orig_x="132.5" _orig_width="0.3"/>
<text x="121.09628237259821" y="1455.5" _orig_x="135.47"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (54 samples, 0.05%)</title><rect x="1074.4152046783624" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(234,213,0)" rx="2" ry="2" _orig_x="800.9" _orig_width="0.6"/>
<text x="1077.4152046783624" y="1807.5" _orig_x="803.92"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.01%)</title><rect x="1181.1278195488721" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(236,164,8)" rx="2" ry="2" _orig_x="844.2" _orig_width="0.1"/>
<text x="1184.1278195488721" y="1919.5" _orig_x="847.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="911.6075605680869" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(227,191,10)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="2031.5" _orig_x="897.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="309.18462823725986" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(225,61,0)" rx="2" ry="2" _orig_x="316.0" _orig_width="0.2"/>
<text x="312.18462823725986" y="2015.5" _orig_x="319.02"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(229,196,7)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1903.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="13.8" y="1973" width="0.2" height="15.0" fill="rgb(211,8,0)" rx="2" ry="2"/>
<text x="16.77" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="12.919590643274908" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(208,89,14)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1903.5" _orig_x="34.53"/>
</g>
<g>
<title>_int_free (18 samples, 0.02%)</title><rect x="860.0041771094401" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(252,150,16)" rx="2" ry="2" _orig_x="713.9" _orig_width="0.1"/>
<text x="863.0041771094401" y="1855.5" _orig_x="716.86"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (12 samples, 0.01%)</title><rect x="465.9314954051796" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(254,124,35)" rx="2" ry="2" _orig_x="554.0" _orig_width="0.2"/>
<text x="468.9314954051796" y="1727.5" _orig_x="557.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="932.1222222222223" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(213,100,2)" rx="2" ry="2" _orig_x="914.2" _orig_width="0.6"/>
<text x="935.1222222222223" y="1951.5" _orig_x="917.22"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (25 samples, 0.02%)</title><rect x="776.4578111946532" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(244,201,12)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.3"/>
<text x="779.4578111946532" y="1823.5" _orig_x="683.03"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (17 samples, 0.01%)</title><rect x="201.2447786131997" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(234,145,17)" rx="2" ry="2" _orig_x="446.6" _orig_width="0.2"/>
<text x="204.2447786131997" y="1759.5" _orig_x="449.61"/>
</g>
<g class="hide">
<title>[perf-32884.map] (18 samples, 0.02%)</title><rect x="99.8725981620719" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(227,83,48)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1679.5" _orig_x="118.04"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (19 samples, 0.02%)</title><rect x="351.5789473684211" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(240,67,38)" rx="2" ry="2" _orig_x="507.6" _orig_width="0.2"/>
<text x="354.5789473684211" y="1743.5" _orig_x="510.58"/>
</g>
<g>
<title>Row::GetField (12 samples, 0.01%)</title><rect x="773.5004177109439" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(228,177,9)" rx="2" ry="2" _orig_x="678.8" _orig_width="0.1"/>
<text x="776.5004177109439" y="1903.5" _orig_x="681.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="355.0041771094403" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(228,164,28)" rx="2" ry="2" _orig_x="360.0" _orig_width="0.1"/>
<text x="358.0041771094403" y="1903.5" _orig_x="362.97"/>
</g>
<g class="hide">
<title>base::internal::CallbackBase::IsCancelled (18 samples, 0.02%)</title><rect x="216.92071846282377" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(219,179,10)" rx="2" ry="2" _orig_x="227.4" _orig_width="0.2"/>
<text x="219.92071846282377" y="1727.5" _orig_x="230.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="22.7" y="1893" width="0.1" height="15.0" fill="rgb(213,10,1)" rx="2" ry="2"/>
<text x="25.72" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="13.0" y="1877" width="0.3" height="15.0" fill="rgb(210,110,2)" rx="2" ry="2"/>
<text x="16.04" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="25.0" y="2021" width="0.2" height="15.0" fill="rgb(231,56,13)" rx="2" ry="2"/>
<text x="27.96" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="11.565831244778668" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(225,163,40)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="2015.5" _orig_x="33.19"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="917" width="0.31240601503759396" height="15.0" fill="rgb(221,135,27)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="927.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="119.34590643274858" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(218,67,34)" rx="2" ry="2" _orig_x="133.7" _orig_width="0.1"/>
<text x="122.34590643274858" y="1727.5" _orig_x="136.67"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,332 samples, 1.12%)</title><rect x="332.6023391812865" y="1781" width="32.531328320802004" height="15.0" fill="rgb(207,32,45)" rx="2" ry="2" _orig_x="499.9" _orig_width="13.2"/>
<text x="335.6023391812865" y="1791.5" _orig_x="502.92">std..</text>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1365" width="0.20827067669172933" height="15.0" fill="rgb(220,111,52)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1375.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (29 samples, 0.02%)</title><rect x="590.8813700918965" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(238,173,17)" rx="2" ry="2" _orig_x="604.7" _orig_width="0.3"/>
<text x="593.8813700918965" y="1727.5" _orig_x="607.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (169 samples, 0.14%)</title><rect x="345.21545530492904" y="1989" width="1.7703007518796992" height="15.0" fill="rgb(229,68,38)" rx="2" ry="2" _orig_x="350.6" _orig_width="1.7"/>
<text x="348.21545530492904" y="1999.5" _orig_x="353.58"/>
</g>
<g>
<title>TypeInt::CompareLessThan (42 samples, 0.04%)</title><rect x="955.3801169590643" y="1877" width="0.985797827903091" height="15.0" fill="rgb(235,65,1)" rx="2" ry="2" _orig_x="752.6" _orig_width="0.4"/>
<text x="958.3801169590643" y="1887.5" _orig_x="755.55"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (12 samples, 0.01%)</title><rect x="1054.4527986633248" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(216,107,19)" rx="2" ry="2" _orig_x="792.8" _orig_width="0.1"/>
<text x="1057.4527986633248" y="1839.5" _orig_x="795.83"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (49 samples, 0.04%)</title><rect x="741.4619883040934" y="1765" width="0.985797827903091" height="15.0" fill="rgb(217,87,23)" rx="2" ry="2" _orig_x="665.8" _orig_width="0.4"/>
<text x="744.4619883040934" y="1775.5" _orig_x="668.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="353.23387635756063" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(241,114,15)" rx="2" ry="2" _orig_x="358.3" _orig_width="0.3"/>
<text x="356.23387635756063" y="1903.5" _orig_x="361.31"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="161.07351712614872" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(245,187,38)" rx="2" ry="2" _orig_x="430.3" _orig_width="0.2"/>
<text x="164.07351712614872" y="1823.5" _orig_x="433.35"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::OnStackTracedNodeSpace::Acquire (18 samples, 0.02%)</title><rect x="193.90680868838768" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(253,176,23)" rx="2" ry="2" _orig_x="205.3" _orig_width="0.2"/>
<text x="196.90680868838768" y="1391.5" _orig_x="208.33"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="229" width="0.20827067669172933" height="15.0" fill="rgb(238,210,21)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="239.5" _orig_x="328.48"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (167 samples, 0.14%)</title><rect x="880.4594820384294" y="1781" width="3.943191311612364" height="15.0" fill="rgb(219,174,14)" rx="2" ry="2" _orig_x="722.2" _orig_width="1.6"/>
<text x="883.4594820384294" y="1791.5" _orig_x="725.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="913.1695906432749" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(243,48,0)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="2031.5" _orig_x="898.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="313.5583124477862" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(254,54,14)" rx="2" ry="2" _orig_x="320.2" _orig_width="0.2"/>
<text x="316.5583124477862" y="2015.5" _orig_x="323.24"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (198 samples, 0.17%)</title><rect x="671.9632414369256" y="1749" width="4.928989139515455" height="15.0" fill="rgb(212,45,50)" rx="2" ry="2" _orig_x="637.6" _orig_width="2.0"/>
<text x="674.9632414369256" y="1759.5" _orig_x="640.64"/>
</g>
<g>
<title>[libminisql_shared.so] (16 samples, 0.01%)</title><rect x="1043.8554720133666" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(225,201,15)" rx="2" ry="2" _orig_x="788.5" _orig_width="0.1"/>
<text x="1046.8554720133666" y="1855.5" _orig_x="791.46"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (36 samples, 0.03%)</title><rect x="607.639933166249" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(212,223,11)" rx="2" ry="2" _orig_x="611.5" _orig_width="0.3"/>
<text x="610.639933166249" y="1775.5" _orig_x="614.49"/>
</g>
<g>
<title>std::istream::get (11 samples, 0.01%)</title><rect x="1189.7535505430244" y="2005" width="0.24644945697577275" height="15.0" fill="rgb(212,110,0)" rx="2" ry="2" _orig_x="847.7" _orig_width="0.1"/>
<text x="1192.7535505430244" y="2015.5" _orig_x="850.68"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (19 samples, 0.02%)</title><rect x="734.3149540517961" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(231,95,26)" rx="2" ry="2" _orig_x="662.9" _orig_width="0.1"/>
<text x="737.3149540517961" y="1823.5" _orig_x="665.86"/>
</g>
<g class="hide">
<title>VM_Periodic_Tas (148 samples, 0.12%)</title><rect x="60.1" y="2069" width="1.5" height="15.0" fill="rgb(249,139,17)" rx="2" ry="2"/>
<text x="63.15" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (48 samples, 0.04%)</title><rect x="612.5689223057644" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(224,108,52)" rx="2" ry="2" _orig_x="613.5" _orig_width="0.5"/>
<text x="615.5689223057644" y="1791.5" _orig_x="616.48"/>
</g>
<g class="hide">
<title>__libc_pwrite64 (554 samples, 0.47%)</title><rect x="878.0759816207185" y="2005" width="5.727443609022556" height="15.0" fill="rgb(237,4,30)" rx="2" ry="2" _orig_x="862.3" _orig_width="5.5"/>
<text x="881.0759816207185" y="2015.5" _orig_x="865.26"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1541" width="0.31240601503759396" height="15.0" fill="rgb(246,125,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1551.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="25.2" y="1941" width="0.2" height="15.0" fill="rgb(210,145,46)" rx="2" ry="2"/>
<text x="28.24" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="161.62485380116965" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(247,53,37)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1919.5" _orig_x="177.34"/>
</g>
<g class="hide">
<title>EventList::internalUpdate (13 samples, 0.01%)</title><rect x="146.4210944026734" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(239,88,43)" rx="2" ry="2" _orig_x="159.7" _orig_width="0.1"/>
<text x="149.4210944026734" y="1951.5" _orig_x="162.66"/>
</g>
<g class="hide">
<title>blink::NormalPage::Sweep (16 samples, 0.01%)</title><rect x="32.70530492898919" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(230,10,43)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1839.5" _orig_x="53.51"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(218,226,35)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1695.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (19 samples, 0.02%)</title><rect x="241.16959064327486" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(250,1,43)" rx="2" ry="2" _orig_x="462.8" _orig_width="0.2"/>
<text x="244.16959064327486" y="1807.5" _orig_x="465.85"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (18 samples, 0.02%)</title><rect x="136.42857142857144" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(230,158,23)" rx="2" ry="2" _orig_x="420.3" _orig_width="0.2"/>
<text x="139.42857142857144" y="1727.5" _orig_x="423.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="19.6" y="1797" width="0.2" height="15.0" fill="rgb(224,12,19)" rx="2" ry="2"/>
<text x="22.59" y="1807.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (12 samples, 0.01%)</title><rect x="357.98663324979105" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(244,157,15)" rx="2" ry="2" _orig_x="510.2" _orig_width="0.1"/>
<text x="360.98663324979105" y="1759.5" _orig_x="513.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="12.0" y="1893" width="0.1" height="15.0" fill="rgb(240,11,37)" rx="2" ry="2"/>
<text x="15.01" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.14%)</title><rect x="926.9154553049291" y="1573" width="1.6661654135338346" height="15.0" fill="rgb(215,62,14)" rx="2" ry="2" _orig_x="909.2" _orig_width="1.6"/>
<text x="929.9154553049291" y="1583.5" _orig_x="912.16"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (18 samples, 0.02%)</title><rect x="327.40831244778616" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(236,40,14)" rx="2" ry="2" _orig_x="333.5" _orig_width="0.2"/>
<text x="330.40831244778616" y="2047.5" _orig_x="336.52"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.01%)</title><rect x="282.21357560568094" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(207,207,37)" rx="2" ry="2" _orig_x="290.1" _orig_width="0.2"/>
<text x="285.21357560568094" y="1855.5" _orig_x="293.14"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (25 samples, 0.02%)</title><rect x="835.112781954887" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(206,180,5)" rx="2" ry="2" _orig_x="703.8" _orig_width="0.2"/>
<text x="838.112781954887" y="1791.5" _orig_x="706.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="13.1" y="1733" width="0.2" height="15.0" fill="rgb(210,196,32)" rx="2" ry="2"/>
<text x="16.14" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="915.2522974101922" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(251,177,31)" rx="2" ry="2" _orig_x="898.0" _orig_width="0.1"/>
<text x="918.2522974101922" y="1919.5" _orig_x="900.97"/>
</g>
<g class="hide">
<title>v8::Object::Set (14 samples, 0.01%)</title><rect x="128.82222222222228" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(245,117,5)" rx="2" ry="2" _orig_x="142.8" _orig_width="0.1"/>
<text x="131.82222222222228" y="1919.5" _orig_x="145.77"/>
</g>
<g class="hide">
<title>[chrome] (129 samples, 0.11%)</title><rect x="92.06244778613205" y="1765" width="1.2496240601503759" height="15.0" fill="rgb(247,70,11)" rx="2" ry="2" _orig_x="107.5" _orig_width="1.2"/>
<text x="95.06244778613205" y="1775.5" _orig_x="110.45"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (26 samples, 0.02%)</title><rect x="267.53968253968253" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(242,137,54)" rx="2" ry="2" _orig_x="473.5" _orig_width="0.2"/>
<text x="270.53968253968253" y="1775.5" _orig_x="476.46"/>
</g>
<g class="hide">
<title>[unknown] (585 samples, 0.49%)</title><rect x="877.8677109440268" y="2021" width="6.03984962406015" height="15.0" fill="rgb(206,134,23)" rx="2" ry="2" _orig_x="862.1" _orig_width="5.8"/>
<text x="880.8677109440268" y="2031.5" _orig_x="865.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="93.93688387635761" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(233,44,18)" rx="2" ry="2" _orig_x="109.3" _orig_width="0.8"/>
<text x="96.93688387635761" y="2015.5" _orig_x="112.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (134 samples, 0.11%)</title><rect x="1095.363408521303" y="1845" width="3.2038429406850457" height="15.0" fill="rgb(211,126,21)" rx="2" ry="2" _orig_x="809.4" _orig_width="1.3"/>
<text x="1098.363408521303" y="1855.5" _orig_x="812.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="23.4" y="1957" width="0.2" height="15.0" fill="rgb(233,151,40)" rx="2" ry="2"/>
<text x="26.42" y="1967.5"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1·dwrap·1 (57 samples, 0.05%)</title><rect x="270.1338763575606" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(213,215,53)" rx="2" ry="2" _orig_x="278.5" _orig_width="0.6"/>
<text x="273.1338763575606" y="2047.5" _orig_x="281.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (652 samples, 0.55%)</title><rect x="101.53876357560573" y="2005" width="6.768796992481203" height="15.0" fill="rgb(248,137,8)" rx="2" ry="2" _orig_x="116.6" _orig_width="6.5"/>
<text x="104.53876357560573" y="2015.5" _orig_x="119.60"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (11 samples, 0.01%)</title><rect x="560.5680868838763" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(243,120,14)" rx="2" ry="2" _orig_x="592.4" _orig_width="0.1"/>
<text x="563.5680868838763" y="1839.5" _orig_x="595.39"/>
</g>
<g class="hide">
<title>__libc_write (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1349" width="0.31240601503759396" height="15.0" fill="rgb(245,3,32)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1359.5" _orig_x="141.29"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (18 samples, 0.02%)</title><rect x="183.18086883876362" y="1285" width="0.20827067669172933" height="15.0" fill="rgb(222,19,34)" rx="2" ry="2" _orig_x="195.0" _orig_width="0.2"/>
<text x="186.18086883876362" y="1295.5" _orig_x="198.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (13 samples, 0.01%)</title><rect x="1164.3692564745195" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(253,159,13)" rx="2" ry="2" _orig_x="837.4" _orig_width="0.1"/>
<text x="1167.3692564745195" y="1903.5" _orig_x="840.37"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="901" width="0.31240601503759396" height="15.0" fill="rgb(208,99,25)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="911.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="94.76996658312453" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(221,48,42)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="1983.5" _orig_x="113.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="235.977485380117" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(242,217,1)" rx="2" ry="2" _orig_x="245.7" _orig_width="0.2"/>
<text x="238.977485380117" y="1967.5" _orig_x="248.66"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="1941" width="0.6" height="15.0" fill="rgb(226,116,38)" rx="2" ry="2"/>
<text x="17.02" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (993 samples, 0.84%)</title><rect x="1171.7" y="1749" width="9.9" height="15.0" fill="rgb(248,161,10)" rx="2" ry="2"/>
<text x="1174.72" y="1759.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (901 samples, 0.76%)</title><rect x="174.1353383458647" y="1797" width="21.934001670843777" height="15.0" fill="rgb(212,89,30)" rx="2" ry="2" _orig_x="435.6" _orig_width="8.9"/>
<text x="177.1353383458647" y="1807.5" _orig_x="438.61">s..</text>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="453" width="2.2909774436090227" height="15.0" fill="rgb(230,143,0)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="463.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="276.9026733500418" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(207,46,53)" rx="2" ry="2" _orig_x="285.0" _orig_width="0.5"/>
<text x="279.9026733500418" y="2015.5" _orig_x="288.04"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (206 samples, 0.17%)</title><rect x="62.4" y="2053" width="2.0" height="15.0" fill="rgb(215,52,30)" rx="2" ry="2"/>
<text x="65.37" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="271.9041771094403" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(223,110,12)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1839.5" _orig_x="283.20"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (218 samples, 0.18%)</title><rect x="185.9649122807017" y="1749" width="5.4218880534670015" height="15.0" fill="rgb(208,80,47)" rx="2" ry="2" _orig_x="440.4" _orig_width="2.2"/>
<text x="188.9649122807017" y="1759.5" _orig_x="443.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="911.6075605680869" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(240,29,23)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="1967.5" _orig_x="897.53"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="1989" width="0.1" height="15.0" fill="rgb(222,182,53)" rx="2" ry="2"/>
<text x="13.06" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(210,183,4)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1743.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-58119.map] (20 samples, 0.02%)</title><rect x="120.80380116959068" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(207,25,19)" rx="2" ry="2" _orig_x="135.1" _orig_width="0.2"/>
<text x="123.80380116959068" y="1423.5" _orig_x="138.07"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::RecordCrashKeys (16 samples, 0.01%)</title><rect x="217.64966583124482" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(232,170,40)" rx="2" ry="2" _orig_x="228.1" _orig_width="0.2"/>
<text x="220.64966583124482" y="1727.5" _orig_x="231.11"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (900 samples, 0.76%)</title><rect x="96.25730994152046" y="1781" width="21.934001670843777" height="15.0" fill="rgb(246,200,41)" rx="2" ry="2" _orig_x="404.0" _orig_width="8.9"/>
<text x="99.25730994152046" y="1791.5" _orig_x="406.96">s..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (498 samples, 0.42%)</title><rect x="981.0108604845447" y="1781" width="12.076023391812864" height="15.0" fill="rgb(209,137,11)" rx="2" ry="2" _orig_x="763.0" _orig_width="4.9"/>
<text x="984.0108604845447" y="1791.5" _orig_x="765.96"/>
</g>
<g class="hide">
<title>[code] (49 samples, 0.04%)</title><rect x="124.0319966583125" y="1413" width="0.5206766917293233" height="15.0" fill="rgb(223,184,7)" rx="2" ry="2" _orig_x="138.2" _orig_width="0.5"/>
<text x="127.0319966583125" y="1423.5" _orig_x="141.20"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.11%)</title><rect x="98.51883876357566" y="1861" width="1.2496240601503759" height="15.0" fill="rgb(228,117,48)" rx="2" ry="2" _orig_x="113.7" _orig_width="1.2"/>
<text x="101.51883876357566" y="1871.5" _orig_x="116.67"/>
</g>
<g class="hide">
<title>[perf-58119.map] (16 samples, 0.01%)</title><rect x="117.67974101921475" y="1285" width="0.20827067669172933" height="15.0" fill="rgb(216,101,5)" rx="2" ry="2" _orig_x="132.1" _orig_width="0.2"/>
<text x="120.67974101921475" y="1295.5" _orig_x="135.10"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (119 samples, 0.10%)</title><rect x="286.3789891395155" y="2005" width="1.2496240601503759" height="15.0" fill="rgb(228,228,13)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.2"/>
<text x="289.3789891395155" y="2015.5" _orig_x="297.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="302.83237259816207" y="1829" width="0.6248120300751879" height="15.0" fill="rgb(213,216,15)" rx="2" ry="2" _orig_x="309.9" _orig_width="0.6"/>
<text x="305.83237259816207" y="1839.5" _orig_x="312.94"/>
</g>
<g class="hide">
<title>[code] (22 samples, 0.02%)</title><rect x="143.08876357560573" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(241,216,28)" rx="2" ry="2" _orig_x="156.5" _orig_width="0.2"/>
<text x="146.08876357560573" y="1903.5" _orig_x="159.48"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="437" width="0.20827067669172933" height="15.0" fill="rgb(254,199,7)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="447.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="326.88763575605685" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(232,143,0)" rx="2" ry="2" _orig_x="333.0" _orig_width="0.2"/>
<text x="329.88763575605685" y="2031.5" _orig_x="336.05"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="757" width="0.31240601503759396" height="15.0" fill="rgb(217,153,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="767.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="308.97635756056815" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(224,109,52)" rx="2" ry="2" _orig_x="315.8" _orig_width="0.1"/>
<text x="311.97635756056815" y="1823.5" _orig_x="318.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="278.6729741019215" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(242,209,25)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="2015.5" _orig_x="289.73"/>
</g>
<g class="hide">
<title>[perf-9366.map] (27 samples, 0.02%)</title><rect x="10.52447786132002" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(205,174,12)" rx="2" ry="2" _orig_x="29.2" _orig_width="0.3"/>
<text x="13.52447786132002" y="1983.5" _orig_x="32.19"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (15 samples, 0.01%)</title><rect x="841.2740183792813" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(230,101,27)" rx="2" ry="2" _orig_x="706.3" _orig_width="0.1"/>
<text x="844.2740183792813" y="1791.5" _orig_x="709.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (182 samples, 0.15%)</title><rect x="350.5" y="2053" width="1.8" height="15.0" fill="rgb(251,177,14)" rx="2" ry="2"/>
<text x="353.45" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="94.76996658312453" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(215,103,47)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="1999.5" _orig_x="113.10"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (55 samples, 0.05%)</title><rect x="1162.3976608187133" y="1925" width="1.2322472848788637" height="15.0" fill="rgb(227,174,41)" rx="2" ry="2" _orig_x="836.6" _orig_width="0.5"/>
<text x="1165.3976608187133" y="1935.5" _orig_x="839.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="28.956432748538067" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(218,164,5)" rx="2" ry="2" _orig_x="46.9" _orig_width="0.2"/>
<text x="31.956432748538067" y="1951.5" _orig_x="49.88"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1141" width="0.31240601503759396" height="15.0" fill="rgb(229,148,52)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1151.5" _orig_x="32.46"/>
</g>
<g>
<title>Field::Field (16 samples, 0.01%)</title><rect x="20.10442773600674" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(238,191,52)" rx="2" ry="2" _orig_x="373.1" _orig_width="0.2"/>
<text x="23.10442773600674" y="1823.5" _orig_x="376.14"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (22 samples, 0.02%)</title><rect x="493.5338345864663" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(221,109,36)" rx="2" ry="2" _orig_x="565.2" _orig_width="0.2"/>
<text x="496.5338345864663" y="1791.5" _orig_x="568.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.12%)</title><rect x="54.05304928989145" y="1925" width="1.4578947368421051" height="15.0" fill="rgb(253,206,19)" rx="2" ry="2" _orig_x="71.0" _orig_width="1.4"/>
<text x="57.05304928989145" y="1935.5" _orig_x="73.98"/>
</g>
<g>
<title>[libminisql_shared.so] (32 samples, 0.03%)</title><rect x="1052.7276524644947" y="1829" width="0.985797827903091" height="15.0" fill="rgb(240,127,36)" rx="2" ry="2" _orig_x="792.1" _orig_width="0.4"/>
<text x="1055.7276524644947" y="1839.5" _orig_x="795.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.06%)</title><rect x="52.282748538011745" y="1861" width="0.7289473684210526" height="15.0" fill="rgb(221,150,8)" rx="2" ry="2" _orig_x="69.3" _orig_width="0.7"/>
<text x="55.282748538011745" y="1871.5" _orig_x="72.31"/>
</g>
<g class="hide">
<title>[chrome] (109 samples, 0.09%)</title><rect x="85.91846282372603" y="1925" width="1.1454887218045113" height="15.0" fill="rgb(232,38,34)" rx="2" ry="2" _orig_x="101.6" _orig_width="1.1"/>
<text x="88.91846282372603" y="1935.5" _orig_x="104.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (253 samples, 0.21%)</title><rect x="151.52372598162077" y="1781" width="2.6033834586466167" height="15.0" fill="rgb(223,224,37)" rx="2" ry="2" _orig_x="164.6" _orig_width="2.5"/>
<text x="154.52372598162077" y="1791.5" _orig_x="167.60"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(248,148,25)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1679.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (21 samples, 0.02%)</title><rect x="478.74686716791985" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(212,221,51)" rx="2" ry="2" _orig_x="559.2" _orig_width="0.2"/>
<text x="481.74686716791985" y="1775.5" _orig_x="562.16"/>
</g>
<g class="hide">
<title>pa_cvolume_valid (17 samples, 0.01%)</title><rect x="70.7147034252298" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(213,22,47)" rx="2" ry="2" _orig_x="87.0" _orig_width="0.2"/>
<text x="73.7147034252298" y="2047.5" _orig_x="90.02"/>
</g>
<g class="hide">
<title>runtime.notetsleep_internal (12 samples, 0.01%)</title><rect x="269.9256056808689" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(240,148,17)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.1"/>
<text x="272.9256056808689" y="1967.5" _orig_x="281.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="25.936507936507994" y="1813" width="0.6248120300751879" height="15.0" fill="rgb(231,21,23)" rx="2" ry="2" _orig_x="44.0" _orig_width="0.6"/>
<text x="28.936507936507994" y="1823.5" _orig_x="46.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="344.48650793650796" y="2021" width="0.6248120300751879" height="15.0" fill="rgb(211,131,42)" rx="2" ry="2" _orig_x="349.9" _orig_width="0.6"/>
<text x="347.48650793650796" y="2031.5" _orig_x="352.93"/>
</g>
<g class="hide">
<title>XPending (17 samples, 0.01%)</title><rect x="232.12447786132" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(220,90,54)" rx="2" ry="2" _orig_x="242.0" _orig_width="0.1"/>
<text x="235.12447786132" y="2047.5" _orig_x="244.97"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (70 samples, 0.06%)</title><rect x="1118.28320802005" y="1765" width="1.7251461988304093" height="15.0" fill="rgb(234,6,14)" rx="2" ry="2" _orig_x="818.7" _orig_width="0.7"/>
<text x="1121.28320802005" y="1775.5" _orig_x="821.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (521 samples, 0.44%)</title><rect x="878.3883876357561" y="1973" width="5.415037593984962" height="15.0" fill="rgb(230,34,17)" rx="2" ry="2" _orig_x="862.6" _orig_width="5.2"/>
<text x="881.3883876357561" y="1983.5" _orig_x="865.59"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (779 samples, 0.66%)</title><rect x="100.18500417710949" y="2037" width="8.122556390977444" height="15.0" fill="rgb(251,228,41)" rx="2" ry="2" _orig_x="115.3" _orig_width="7.8"/>
<text x="103.18500417710949" y="2047.5" _orig_x="118.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="16.35605680868844" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(217,130,26)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1935.5" _orig_x="37.82"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (17 samples, 0.01%)</title><rect x="183.18086883876362" y="1269" width="0.20827067669172933" height="15.0" fill="rgb(226,225,52)" rx="2" ry="2" _orig_x="195.0" _orig_width="0.2"/>
<text x="186.18086883876362" y="1279.5" _orig_x="198.03"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="421" width="0.31240601503759396" height="15.0" fill="rgb(217,196,46)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="431.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="16.35605680868844" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(213,187,28)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1903.5" _orig_x="37.84"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="2037" width="1.5" height="15.0" fill="rgb(217,101,43)" rx="2" ry="2"/>
<text x="15.14" y="2047.5"/>
</g>
<g class="hide">
<title>[[vdso]] (158 samples, 0.13%)</title><rect x="55.92748538011701" y="2037" width="1.6661654135338346" height="15.0" fill="rgb(223,103,25)" rx="2" ry="2" _orig_x="72.8" _orig_width="1.6"/>
<text x="58.92748538011701" y="2047.5" _orig_x="75.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.08%)</title><rect x="251.9101921470343" y="1797" width="0.937218045112782" height="15.0" fill="rgb(235,18,40)" rx="2" ry="2" _orig_x="261.0" _orig_width="0.9"/>
<text x="254.9101921470343" y="1807.5" _orig_x="263.99"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (38 samples, 0.03%)</title><rect x="774.7326649958228" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(226,47,43)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.3"/>
<text x="777.7326649958228" y="1887.5" _orig_x="682.26"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1349" width="0.20827067669172933" height="15.0" fill="rgb(212,118,7)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1359.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::~Row (23 samples, 0.02%)</title><rect x="775.7184628237261" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(236,30,37)" rx="2" ry="2" _orig_x="679.7" _orig_width="0.2"/>
<text x="778.7184628237261" y="1887.5" _orig_x="682.68"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (15 samples, 0.01%)</title><rect x="722.9782790309105" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(214,100,8)" rx="2" ry="2" _orig_x="658.3" _orig_width="0.1"/>
<text x="725.9782790309105" y="1775.5" _orig_x="661.29"/>
</g>
<g>
<title>std::__detail::_Identity::operator (23 samples, 0.02%)</title><rect x="268.77192982456137" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(253,82,27)" rx="2" ry="2" _orig_x="474.0" _orig_width="0.2"/>
<text x="271.77192982456137" y="1775.5" _orig_x="476.98"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="578.5588972431078" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(216,89,12)" rx="2" ry="2" _orig_x="599.7" _orig_width="0.2"/>
<text x="581.5588972431078" y="1775.5" _orig_x="602.73"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (588 samples, 0.49%)</title><rect x="664.5697577276525" y="1797" width="14.29406850459482" height="15.0" fill="rgb(211,5,22)" rx="2" ry="2" _orig_x="634.6" _orig_width="5.8"/>
<text x="667.5697577276525" y="1807.5" _orig_x="637.55"/>
</g>
<g class="hide">
<title>cef_string_multimap_size (12 samples, 0.01%)</title><rect x="206.61131996658318" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(226,104,5)" rx="2" ry="2" _orig_x="217.5" _orig_width="0.1"/>
<text x="209.61131996658318" y="1775.5" _orig_x="220.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="313.6624477861321" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(243,198,24)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1967.5" _orig_x="323.28"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::Invoke (21 samples, 0.02%)</title><rect x="184.1180868838764" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(211,202,51)" rx="2" ry="2" _orig_x="195.9" _orig_width="0.3"/>
<text x="187.1180868838764" y="1375.5" _orig_x="198.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="932.3304928989139" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(233,88,27)" rx="2" ry="2" _orig_x="914.4" _orig_width="0.4"/>
<text x="935.3304928989139" y="1903.5" _orig_x="917.36"/>
</g>
<g class="hide">
<title>[perf-8415.map] (16 samples, 0.01%)</title><rect x="227.75079365079372" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(238,45,5)" rx="2" ry="2" _orig_x="237.8" _orig_width="0.1"/>
<text x="230.75079365079372" y="2031.5" _orig_x="240.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="124.34440267335009" y="1093" width="0.10413533834586466" height="15.0" fill="rgb(207,226,11)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1103.5" _orig_x="141.45"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="213" width="0.20827067669172933" height="15.0" fill="rgb(230,90,54)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="223.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="97.78989139515461" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(233,98,36)" rx="2" ry="2" _orig_x="113.0" _orig_width="0.2"/>
<text x="100.78989139515461" y="1903.5" _orig_x="116.01"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (54 samples, 0.05%)</title><rect x="144.31495405179615" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(216,133,33)" rx="2" ry="2" _orig_x="423.5" _orig_width="0.5"/>
<text x="147.31495405179615" y="1807.5" _orig_x="426.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (116 samples, 0.10%)</title><rect x="180.78947368421055" y="1701" width="2.957393483709273" height="15.0" fill="rgb(244,3,53)" rx="2" ry="2" _orig_x="438.3" _orig_width="1.2"/>
<text x="183.78947368421055" y="1711.5" _orig_x="441.34"/>
</g>
<g>
<title>Row::DeserializeFrom (1,917 samples, 1.61%)</title><rect x="18.379281537176215" y="1829" width="47.0718462823726" height="15.0" fill="rgb(232,187,21)" rx="2" ry="2" _orig_x="372.4" _orig_width="19.1"/>
<text x="21.379281537176215" y="1839.5" _orig_x="375.44">Row..</text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (36 samples, 0.03%)</title><rect x="985.4469507101085" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(207,154,8)" rx="2" ry="2" _orig_x="764.8" _orig_width="0.3"/>
<text x="988.4469507101085" y="1727.5" _orig_x="767.77"/>
</g>
<g>
<title>TypeInt::CompareLessThan (25 samples, 0.02%)</title><rect x="790.2589807852967" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(209,136,3)" rx="2" ry="2" _orig_x="685.6" _orig_width="0.2"/>
<text x="793.2589807852967" y="1871.5" _orig_x="688.56"/>
</g>
<g class="hide">
<title>nautilus (646 samples, 0.54%)</title><rect x="890.5" y="2069" width="6.4" height="15.0" fill="rgb(228,181,14)" rx="2" ry="2"/>
<text x="893.49" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(218,167,5)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="2015.5" _orig_x="918.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="238.6850041771095" y="1829" width="0.5206766917293233" height="15.0" fill="rgb(237,159,29)" rx="2" ry="2" _orig_x="248.3" _orig_width="0.5"/>
<text x="241.6850041771095" y="1839.5" _orig_x="251.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="352.0883876357561" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(220,210,46)" rx="2" ry="2" _orig_x="357.2" _orig_width="0.4"/>
<text x="355.0883876357561" y="1935.5" _orig_x="360.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="355.73312447786134" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(216,206,34)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1887.5" _orig_x="363.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="13.4" y="1861" width="0.2" height="15.0" fill="rgb(219,216,19)" rx="2" ry="2"/>
<text x="16.39" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="11.774101921470397" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(238,145,32)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="1951.5" _orig_x="33.43"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask (42 samples, 0.04%)</title><rect x="165.99853801169596" y="1781" width="0.41654135338345866" height="15.0" fill="rgb(240,191,13)" rx="2" ry="2" _orig_x="178.5" _orig_width="0.4"/>
<text x="168.99853801169596" y="1791.5" _orig_x="181.47"/>
</g>
<g class="hide">
<title>[code] (12 samples, 0.01%)</title><rect x="114.13913951545534" y="1493" width="0.10413533834586466" height="15.0" fill="rgb(243,113,0)" rx="2" ry="2" _orig_x="128.7" _orig_width="0.1"/>
<text x="117.13913951545534" y="1503.5" _orig_x="131.69"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.03%)</title><rect x="142.56808688387642" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(248,82,4)" rx="2" ry="2" _orig_x="156.0" _orig_width="0.4"/>
<text x="145.56808688387642" y="2015.5" _orig_x="158.97"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (21 samples, 0.02%)</title><rect x="1003.9306599832913" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(231,122,34)" rx="2" ry="2" _orig_x="772.3" _orig_width="0.2"/>
<text x="1006.9306599832913" y="1759.5" _orig_x="775.27"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="293" width="0.31240601503759396" height="15.0" fill="rgb(244,108,14)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="303.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (240 samples, 0.20%)</title><rect x="49.4710944026734" y="1989" width="2.4992481203007517" height="15.0" fill="rgb(207,207,24)" rx="2" ry="2" _orig_x="66.6" _orig_width="2.4"/>
<text x="52.4710944026734" y="1999.5" _orig_x="69.64"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (12 samples, 0.01%)</title><rect x="942.8111946532999" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(249,175,49)" rx="2" ry="2" _orig_x="747.5" _orig_width="0.1"/>
<text x="945.8111946532999" y="1887.5" _orig_x="750.50"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (11 samples, 0.01%)</title><rect x="937.6357560568085" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(225,186,12)" rx="2" ry="2" _orig_x="745.4" _orig_width="0.1"/>
<text x="940.6357560568085" y="1855.5" _orig_x="748.39"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (22 samples, 0.02%)</title><rect x="191.6332497911445" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(222,142,33)" rx="2" ry="2" _orig_x="442.7" _orig_width="0.2"/>
<text x="194.6332497911445" y="1759.5" _orig_x="445.72"/>
</g>
<g class="hide">
<title>[unknown] (218 samples, 0.18%)</title><rect x="49.679365079365134" y="309" width="2.2909774436090227" height="15.0" fill="rgb(252,176,49)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="319.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>threaded-ml (47 samples, 0.04%)</title><rect x="1188.6" y="2069" width="0.5" height="15.0" fill="rgb(225,82,48)" rx="2" ry="2"/>
<text x="1191.59" y="2079.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (11 samples, 0.01%)</title><rect x="388.7928153717628" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(207,206,54)" rx="2" ry="2" _orig_x="522.7" _orig_width="0.1"/>
<text x="391.7928153717628" y="1791.5" _orig_x="525.73"/>
</g>
<g class="hide">
<title>[libjvm.so] (11 samples, 0.01%)</title><rect x="44.05605680868844" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(248,176,0)" rx="2" ry="2" _orig_x="61.4" _orig_width="0.1"/>
<text x="47.05605680868844" y="1967.5" _orig_x="64.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (122 samples, 0.10%)</title><rect x="928.9981620718463" y="1797" width="1.3537593984962406" height="15.0" fill="rgb(248,190,35)" rx="2" ry="2" _orig_x="911.2" _orig_width="1.3"/>
<text x="931.9981620718463" y="1807.5" _orig_x="914.25"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="896.0" y="2053" width="0.1" height="15.0" fill="rgb(236,149,47)" rx="2" ry="2"/>
<text x="898.97" y="2063.5"/>
</g>
<g class="hide">
<title>[chrome] (36 samples, 0.03%)</title><rect x="11.5" y="1829" width="0.4" height="15.0" fill="rgb(229,38,9)" rx="2" ry="2"/>
<text x="14.54" y="1839.5"/>
</g>
<g class="hide">
<title>base::internal::TaskTracker::RunTask (753 samples, 0.63%)</title><rect x="32.70530492898919" y="1957" width="7.810150375939849" height="15.0" fill="rgb(235,52,14)" rx="2" ry="2" _orig_x="50.5" _orig_width="7.5"/>
<text x="35.70530492898919" y="1967.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="52.49101921470348" y="1829" width="0.5206766917293233" height="15.0" fill="rgb(210,25,7)" rx="2" ry="2" _orig_x="69.5" _orig_width="0.5"/>
<text x="55.49101921470348" y="1839.5" _orig_x="72.47"/>
</g>
<g>
<title>Row::DeserializeFrom (2,124 samples, 1.79%)</title><rect x="696.1152882205513" y="1861" width="52.000835421888056" height="15.0" fill="rgb(237,44,50)" rx="2" ry="2" _orig_x="647.4" _orig_width="21.1"/>
<text x="699.1152882205513" y="1871.5" _orig_x="650.43">Row:..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.07%)</title><rect x="107.47447786132001" y="1797" width="0.8330827067669173" height="15.0" fill="rgb(243,129,15)" rx="2" ry="2" _orig_x="122.3" _orig_width="0.8"/>
<text x="110.47447786132001" y="1807.5" _orig_x="125.26"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (12 samples, 0.01%)</title><rect x="38.83458646616539" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(227,73,46)" rx="2" ry="2" _orig_x="380.7" _orig_width="0.1"/>
<text x="41.83458646616539" y="1759.5" _orig_x="383.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(234,44,32)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1791.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (24 samples, 0.02%)</title><rect x="1034.983291562239" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(226,92,36)" rx="2" ry="2" _orig_x="784.9" _orig_width="0.2"/>
<text x="1037.983291562239" y="1807.5" _orig_x="787.86"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (74 samples, 0.06%)</title><rect x="474.06432748538" y="1733" width="1.971595655806182" height="15.0" fill="rgb(216,112,20)" rx="2" ry="2" _orig_x="557.3" _orig_width="0.8"/>
<text x="477.06432748538" y="1743.5" _orig_x="560.33"/>
</g>
<g>
<title>Row::~Row (20 samples, 0.02%)</title><rect x="565.0041771094404" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(221,164,7)" rx="2" ry="2" _orig_x="594.2" _orig_width="0.2"/>
<text x="568.0041771094404" y="1887.5" _orig_x="597.22"/>
</g>
<g class="hide">
<title>[perf-58119.map] (43 samples, 0.04%)</title><rect x="117.99214703425235" y="1509" width="0.41654135338345866" height="15.0" fill="rgb(254,160,8)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1519.5" _orig_x="135.41"/>
</g>
<g class="hide">
<title>[perf-58119.map] (347 samples, 0.29%)</title><rect x="114.24327485380124" y="1525" width="3.644736842105263" height="15.0" fill="rgb(225,151,40)" rx="2" ry="2" _orig_x="128.8" _orig_width="3.5"/>
<text x="117.24327485380124" y="1535.5" _orig_x="131.83"/>
</g>
<g>
<title>Field::CompareLessThan (34 samples, 0.03%)</title><rect x="246.09857978279032" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(242,150,11)" rx="2" ry="2" _orig_x="464.8" _orig_width="0.3"/>
<text x="249.09857978279032" y="1871.5" _orig_x="467.81"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="629" width="2.2909774436090227" height="15.0" fill="rgb(224,47,7)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="639.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (662 samples, 0.56%)</title><rect x="111.6398913951546" y="1749" width="6.872932330827067" height="15.0" fill="rgb(228,42,48)" rx="2" ry="2" _orig_x="126.3" _orig_width="6.6"/>
<text x="114.6398913951546" y="1759.5" _orig_x="129.33"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="1973" width="0.1" height="15.0" fill="rgb(252,24,36)" rx="2" ry="2"/>
<text x="13.06" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (501 samples, 0.42%)</title><rect x="886.7192147034253" y="1893" width="5.206766917293233" height="15.0" fill="rgb(210,74,28)" rx="2" ry="2" _orig_x="870.6" _orig_width="5.0"/>
<text x="889.7192147034253" y="1903.5" _orig_x="873.60"/>
</g>
<g>
<title>TablePage::InsertTuple (39 samples, 0.03%)</title><rect x="1178.9097744360902" y="1941" width="0.985797827903091" height="15.0" fill="rgb(243,16,35)" rx="2" ry="2" _orig_x="843.3" _orig_width="0.4"/>
<text x="1181.9097744360902" y="1951.5" _orig_x="846.27"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (999 samples, 0.84%)</title><rect x="1112.614870509607" y="1845" width="24.398496240601503" height="15.0" fill="rgb(248,207,29)" rx="2" ry="2" _orig_x="816.4" _orig_width="9.9"/>
<text x="1115.614870509607" y="1855.5" _orig_x="819.38">s..</text>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (56 samples, 0.05%)</title><rect x="815.1503759398496" y="1701" width="1.4786967418546364" height="15.0" fill="rgb(251,0,23)" rx="2" ry="2" _orig_x="695.7" _orig_width="0.6"/>
<text x="818.1503759398496" y="1711.5" _orig_x="698.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.07%)</title><rect x="254.2011695906433" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(211,211,5)" rx="2" ry="2" _orig_x="263.2" _orig_width="0.8"/>
<text x="257.2011695906433" y="2015.5" _orig_x="266.22"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (18 samples, 0.02%)</title><rect x="901.1612364243944" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(246,151,22)" rx="2" ry="2" _orig_x="730.6" _orig_width="0.2"/>
<text x="904.1612364243944" y="1839.5" _orig_x="733.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="121.53274853801176" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(210,33,25)" rx="2" ry="2" _orig_x="135.8" _orig_width="0.2"/>
<text x="124.53274853801176" y="1791.5" _orig_x="138.84"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (11 samples, 0.01%)</title><rect x="421.81704260651634" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(213,93,42)" rx="2" ry="2" _orig_x="536.1" _orig_width="0.1"/>
<text x="424.81704260651634" y="1727.5" _orig_x="539.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="280.5474101921471" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(238,64,1)" rx="2" ry="2" _orig_x="288.5" _orig_width="0.2"/>
<text x="283.5474101921471" y="1871.5" _orig_x="291.47"/>
</g>
<g class="hide">
<title>content::ContentMain (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1973" width="5.102631578947369" height="15.0" fill="rgb(215,10,53)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1983.5" _orig_x="178.24"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (20 samples, 0.02%)</title><rect x="123.85964912280699" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(246,91,33)" rx="2" ry="2" _orig_x="415.2" _orig_width="0.2"/>
<text x="126.85964912280699" y="1743.5" _orig_x="418.18"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (19 samples, 0.02%)</title><rect x="100.6934001670844" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(221,67,32)" rx="2" ry="2" _orig_x="405.8" _orig_width="0.2"/>
<text x="103.6934001670844" y="1711.5" _orig_x="408.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="42.07748538011701" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(211,125,48)" rx="2" ry="2" _orig_x="59.5" _orig_width="0.1"/>
<text x="45.07748538011701" y="1871.5" _orig_x="62.46"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="645" width="2.2909774436090227" height="15.0" fill="rgb(213,156,1)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="655.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.10%)</title><rect x="902.9643274853802" y="2005" width="1.2496240601503759" height="15.0" fill="rgb(207,114,12)" rx="2" ry="2" _orig_x="886.2" _orig_width="1.2"/>
<text x="905.9643274853802" y="2015.5" _orig_x="889.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (556 samples, 0.47%)</title><rect x="892.6549289891395" y="1989" width="5.727443609022556" height="15.0" fill="rgb(253,220,21)" rx="2" ry="2" _orig_x="876.3" _orig_width="5.5"/>
<text x="895.6549289891395" y="1999.5" _orig_x="879.32"/>
</g>
<g class="hide">
<title>[unknown] (36 samples, 0.03%)</title><rect x="1188.6" y="2053" width="0.4" height="15.0" fill="rgb(240,54,47)" rx="2" ry="2"/>
<text x="1191.60" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-58157.map] (166 samples, 0.14%)</title><rect x="122.88650793650798" y="1701" width="1.7703007518796992" height="15.0" fill="rgb(215,189,20)" rx="2" ry="2" _orig_x="137.1" _orig_width="1.7"/>
<text x="125.88650793650798" y="1711.5" _orig_x="140.13"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (21 samples, 0.02%)</title><rect x="172.3507936507937" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(237,50,29)" rx="2" ry="2" _orig_x="184.6" _orig_width="0.2"/>
<text x="175.3507936507937" y="1807.5" _orig_x="187.57"/>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (11 samples, 0.01%)</title><rect x="288.8782372598163" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(219,213,41)" rx="2" ry="2" _orig_x="296.5" _orig_width="0.1"/>
<text x="291.8782372598163" y="2015.5" _orig_x="299.50"/>
</g>
<g class="hide">
<title>[perf-58145.map] (52 samples, 0.04%)</title><rect x="130.59252297410197" y="1781" width="0.5206766917293233" height="15.0" fill="rgb(228,187,16)" rx="2" ry="2" _orig_x="144.5" _orig_width="0.5"/>
<text x="133.59252297410197" y="1791.5" _orig_x="147.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="97.16507936507942" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(210,101,16)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="1999.5" _orig_x="115.37"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (72 samples, 0.06%)</title><rect x="510.29239766081866" y="1781" width="1.7251461988304093" height="15.0" fill="rgb(245,113,40)" rx="2" ry="2" _orig_x="572.0" _orig_width="0.7"/>
<text x="513.2923976608187" y="1791.5" _orig_x="574.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(251,62,0)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="2015.5" _orig_x="101.63"/>
</g>
<g>
<title>operator delete (13 samples, 0.01%)</title><rect x="624.891395154553" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(219,205,25)" rx="2" ry="2" _orig_x="618.5" _orig_width="0.1"/>
<text x="627.891395154553" y="1839.5" _orig_x="621.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (50 samples, 0.04%)</title><rect x="221.70008354218874" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(226,23,42)" rx="2" ry="2" _orig_x="454.9" _orig_width="0.5"/>
<text x="224.70008354218874" y="1807.5" _orig_x="457.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (325 samples, 0.27%)</title><rect x="340.1128237259816" y="2021" width="3.4364661654135333" height="15.0" fill="rgb(210,106,12)" rx="2" ry="2" _orig_x="345.7" _orig_width="3.3"/>
<text x="343.1128237259816" y="2031.5" _orig_x="348.74"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void*&gt;, true&gt;::_S_cget (15 samples, 0.01%)</title><rect x="604.1896407685881" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(221,135,8)" rx="2" ry="2" _orig_x="610.1" _orig_width="0.1"/>
<text x="607.1896407685881" y="1759.5" _orig_x="613.07"/>
</g>
<g class="hide">
<title>[perf-58119.map] (285 samples, 0.24%)</title><rect x="114.86808688387642" y="1429" width="3.019924812030075" height="15.0" fill="rgb(237,125,33)" rx="2" ry="2" _orig_x="129.4" _orig_width="2.9"/>
<text x="117.86808688387642" y="1439.5" _orig_x="132.44"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (12 samples, 0.01%)</title><rect x="857.2932330827066" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(213,181,12)" rx="2" ry="2" _orig_x="712.8" _orig_width="0.2"/>
<text x="860.2932330827066" y="1759.5" _orig_x="715.83"/>
</g>
<g class="hide">
<title>[chrome] (53 samples, 0.04%)</title><rect x="11.4" y="1909" width="0.6" height="15.0" fill="rgb(223,72,4)" rx="2" ry="2"/>
<text x="14.44" y="1919.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(240,145,29)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1903.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="10.5" y="1957" width="0.2" height="15.0" fill="rgb(235,106,16)" rx="2" ry="2"/>
<text x="13.53" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="276.1737259816208" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(237,11,25)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1967.5" _orig_x="287.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.04%)</title><rect x="934.2049289891396" y="1893" width="0.5206766917293233" height="15.0" fill="rgb(208,14,7)" rx="2" ry="2" _orig_x="916.2" _orig_width="0.5"/>
<text x="937.2049289891396" y="1903.5" _orig_x="919.19"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="709" width="0.31240601503759396" height="15.0" fill="rgb(225,157,40)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="719.5" _orig_x="99.72"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (21 samples, 0.02%)</title><rect x="530.9941520467835" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(207,132,47)" rx="2" ry="2" _orig_x="580.4" _orig_width="0.2"/>
<text x="533.9941520467835" y="1775.5" _orig_x="583.36"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (20 samples, 0.02%)</title><rect x="299.3316624895571" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(239,69,49)" rx="2" ry="2" _orig_x="486.4" _orig_width="0.2"/>
<text x="302.3316624895571" y="1807.5" _orig_x="489.38"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (30 samples, 0.03%)</title><rect x="123.61319966583129" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(239,188,25)" rx="2" ry="2" _orig_x="415.1" _orig_width="0.3"/>
<text x="126.61319966583129" y="1759.5" _orig_x="418.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="108.61996658312454" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(205,60,46)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="1999.5" _orig_x="126.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (279 samples, 0.23%)</title><rect x="925.6658312447786" y="1621" width="2.9157894736842103" height="15.0" fill="rgb(207,221,16)" rx="2" ry="2" _orig_x="908.0" _orig_width="2.8"/>
<text x="928.6658312447786" y="1631.5" _orig_x="910.99"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="453" width="0.31240601503759396" height="15.0" fill="rgb(248,81,51)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="463.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (33 samples, 0.03%)</title><rect x="1055.4385964912283" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(233,112,29)" rx="2" ry="2" _orig_x="793.2" _orig_width="0.3"/>
<text x="1058.4385964912283" y="1839.5" _orig_x="796.20"/>
</g>
<g class="hide">
<title>[perf-58145.map] (261 samples, 0.22%)</title><rect x="126.11470342522978" y="1813" width="2.6033834586466167" height="15.0" fill="rgb(207,170,30)" rx="2" ry="2" _orig_x="140.2" _orig_width="2.5"/>
<text x="129.11470342522978" y="1823.5" _orig_x="143.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.11%)</title><rect x="155.37673350041777" y="1909" width="1.3537593984962406" height="15.0" fill="rgb(233,166,22)" rx="2" ry="2" _orig_x="168.3" _orig_width="1.3"/>
<text x="158.37673350041777" y="1919.5" _orig_x="171.32"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="831.169590643275" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(254,98,32)" rx="2" ry="2" _orig_x="702.2" _orig_width="0.1"/>
<text x="834.169590643275" y="1759.5" _orig_x="705.21"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="261" width="0.31240601503759396" height="15.0" fill="rgb(218,117,32)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="271.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="130.8007936507937" y="1509" width="0.20827067669172933" height="15.0" fill="rgb(220,33,50)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1519.5" _orig_x="147.65"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (38 samples, 0.03%)</title><rect x="538.8805346700084" y="1813" width="0.985797827903091" height="15.0" fill="rgb(240,112,13)" rx="2" ry="2" _orig_x="583.6" _orig_width="0.4"/>
<text x="541.8805346700084" y="1823.5" _orig_x="586.63"/>
</g>
<g class="hide">
<title>v8::Function::Call (32 samples, 0.03%)</title><rect x="121.22034252297415" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(222,218,33)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1759.5" _orig_x="138.47"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (20 samples, 0.02%)</title><rect x="208.6382623224729" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(223,60,4)" rx="2" ry="2" _orig_x="449.6" _orig_width="0.2"/>
<text x="211.6382623224729" y="1775.5" _orig_x="452.58"/>
</g>
<g>
<title>__memset_avx2_unaligned (13 samples, 0.01%)</title><rect x="418.3667502088556" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(236,191,14)" rx="2" ry="2" _orig_x="534.7" _orig_width="0.1"/>
<text x="421.3667502088556" y="1791.5" _orig_x="537.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (12 samples, 0.01%)</title><rect x="1115.8187134502923" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(232,168,31)" rx="2" ry="2" _orig_x="817.7" _orig_width="0.1"/>
<text x="1118.8187134502923" y="1791.5" _orig_x="820.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="10.8" y="2005" width="0.4" height="15.0" fill="rgb(212,177,20)" rx="2" ry="2"/>
<text x="13.80" y="2015.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="286.7" y="2053" width="0.2" height="15.0" fill="rgb(212,46,33)" rx="2" ry="2"/>
<text x="289.73" y="2063.5"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadTaskQueue::OnTaskCompleted (34 samples, 0.03%)</title><rect x="165.99853801169596" y="1765" width="0.41654135338345866" height="15.0" fill="rgb(244,124,40)" rx="2" ry="2" _orig_x="178.5" _orig_width="0.4"/>
<text x="168.99853801169596" y="1775.5" _orig_x="181.55"/>
</g>
<g class="hide">
<title>[chrome] (97 samples, 0.08%)</title><rect x="86.0225981620719" y="1861" width="1.0413533834586466" height="15.0" fill="rgb(253,73,11)" rx="2" ry="2" _orig_x="101.7" _orig_width="1.0"/>
<text x="89.0225981620719" y="1871.5" _orig_x="104.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="869" width="0.31240601503759396" height="15.0" fill="rgb(249,71,48)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="879.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="326.78350041771097" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(222,151,26)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1887.5" _orig_x="335.94"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="373" width="0.20827067669172933" height="15.0" fill="rgb(253,107,20)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="383.5" _orig_x="328.48"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="1025.8646616541355" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(248,151,16)" rx="2" ry="2" _orig_x="781.2" _orig_width="0.1"/>
<text x="1028.8646616541355" y="1823.5" _orig_x="784.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.4" y="1989" width="0.2" height="15.0" fill="rgb(212,229,51)" rx="2" ry="2"/>
<text x="18.40" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="517" width="2.2909774436090227" height="15.0" fill="rgb(245,109,30)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="527.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.05%)</title><rect x="934.1007936507937" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(231,79,34)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="2047.5" _orig_x="919.08"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (22 samples, 0.02%)</title><rect x="37.4" y="2053" width="0.3" height="15.0" fill="rgb(207,73,33)" rx="2" ry="2"/>
<text x="40.45" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (12 samples, 0.01%)</title><rect x="16.9" y="1893" width="0.2" height="15.0" fill="rgb(243,175,2)" rx="2" ry="2"/>
<text x="19.94" y="1903.5"/>
</g>
<g class="hide">
<title>[libxul.so] (40 samples, 0.03%)</title><rect x="27.394402673350097" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(238,56,39)" rx="2" ry="2" _orig_x="45.4" _orig_width="0.4"/>
<text x="30.394402673350097" y="2047.5" _orig_x="48.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="119.24177109440272" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(227,2,27)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1807.5" _orig_x="136.65"/>
</g>
<g class="hide">
<title>__GI___writev (158 samples, 0.13%)</title><rect x="70.8" y="2053" width="1.6" height="15.0" fill="rgb(252,166,2)" rx="2" ry="2"/>
<text x="73.79" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="121.53274853801176" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(237,6,23)" rx="2" ry="2" _orig_x="135.8" _orig_width="0.2"/>
<text x="124.53274853801176" y="1775.5" _orig_x="138.84"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (18 samples, 0.02%)</title><rect x="515.46783625731" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(245,217,42)" rx="2" ry="2" _orig_x="574.1" _orig_width="0.2"/>
<text x="518.46783625731" y="1759.5" _orig_x="577.11"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (41 samples, 0.03%)</title><rect x="182.9725981620719" y="1429" width="0.41654135338345866" height="15.0" fill="rgb(239,199,33)" rx="2" ry="2" _orig_x="194.8" _orig_width="0.4"/>
<text x="185.9725981620719" y="1439.5" _orig_x="197.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="29.268838763575662" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(222,22,37)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="1967.5" _orig_x="50.21"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="853" width="2.2909774436090227" height="15.0" fill="rgb(246,62,21)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="863.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="13.1" y="1749" width="0.2" height="15.0" fill="rgb(221,150,54)" rx="2" ry="2"/>
<text x="16.10" y="1759.5"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (25 samples, 0.02%)</title><rect x="183.18086883876362" y="1333" width="0.20827067669172933" height="15.0" fill="rgb(226,209,2)" rx="2" ry="2" _orig_x="195.0" _orig_width="0.2"/>
<text x="186.18086883876362" y="1343.5" _orig_x="197.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (510 samples, 0.43%)</title><rect x="878.492522974102" y="1957" width="5.310902255639097" height="15.0" fill="rgb(251,115,9)" rx="2" ry="2" _orig_x="862.7" _orig_width="5.1"/>
<text x="881.492522974102" y="1967.5" _orig_x="865.70"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (19 samples, 0.02%)</title><rect x="150.7226399331663" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(238,193,47)" rx="2" ry="2" _orig_x="426.1" _orig_width="0.2"/>
<text x="153.7226399331663" y="1807.5" _orig_x="429.12"/>
</g>
<g>
<title>operator new (13 samples, 0.01%)</title><rect x="738.2581453634084" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(218,46,25)" rx="2" ry="2" _orig_x="664.5" _orig_width="0.1"/>
<text x="741.2581453634084" y="1775.5" _orig_x="667.52"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (11 samples, 0.01%)</title><rect x="53.12865497076024" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(230,192,3)" rx="2" ry="2" _orig_x="386.5" _orig_width="0.1"/>
<text x="56.12865497076024" y="1791.5" _orig_x="389.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="13.1" y="1765" width="0.2" height="15.0" fill="rgb(252,198,18)" rx="2" ry="2"/>
<text x="16.08" y="1775.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (114 samples, 0.10%)</title><rect x="419.84544695070997" y="1749" width="2.7109440267335008" height="15.0" fill="rgb(250,229,39)" rx="2" ry="2" _orig_x="535.3" _orig_width="1.1"/>
<text x="422.84544695070997" y="1759.5" _orig_x="538.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="83.21094402673356" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(208,76,1)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1775.5" _orig_x="102.04"/>
</g>
<g class="hide">
<title>[chrome] (60 samples, 0.05%)</title><rect x="86.3350041771095" y="1765" width="0.5206766917293233" height="15.0" fill="rgb(215,132,22)" rx="2" ry="2" _orig_x="102.0" _orig_width="0.5"/>
<text x="89.3350041771095" y="1775.5" _orig_x="104.95"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="2005" width="0.6" height="15.0" fill="rgb(222,93,2)" rx="2" ry="2"/>
<text x="17.02" y="2015.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (13 samples, 0.01%)</title><rect x="99.21470342522971" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(205,202,30)" rx="2" ry="2" _orig_x="405.2" _orig_width="0.2"/>
<text x="102.21470342522971" y="1759.5" _orig_x="408.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176 samples, 0.15%)</title><rect x="345.11131996658315" y="2005" width="1.874436090225564" height="15.0" fill="rgb(229,119,2)" rx="2" ry="2" _orig_x="350.5" _orig_width="1.8"/>
<text x="348.11131996658315" y="2015.5" _orig_x="353.51"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (65 samples, 0.05%)</title><rect x="703.2623224728487" y="1765" width="1.4786967418546364" height="15.0" fill="rgb(249,172,50)" rx="2" ry="2" _orig_x="650.3" _orig_width="0.6"/>
<text x="706.2623224728487" y="1775.5" _orig_x="653.28"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (11 samples, 0.01%)</title><rect x="747.8696741854636" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(248,122,24)" rx="2" ry="2" _orig_x="668.4" _orig_width="0.1"/>
<text x="750.8696741854636" y="1807.5" _orig_x="671.39"/>
</g>
<g class="hide">
<title>blink::ThreadState::IncrementalMarkingScheduler::Dispatch (51 samples, 0.04%)</title><rect x="174.85004177109445" y="1749" width="0.5206766917293233" height="15.0" fill="rgb(220,78,17)" rx="2" ry="2" _orig_x="187.0" _orig_width="0.5"/>
<text x="177.85004177109445" y="1759.5" _orig_x="189.96"/>
</g>
<g class="hide">
<title>[perf-58145.map] (41 samples, 0.03%)</title><rect x="128.30154553049294" y="1461" width="0.41654135338345866" height="15.0" fill="rgb(254,217,0)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.4"/>
<text x="131.30154553049294" y="1471.5" _orig_x="145.29"/>
</g>
<g class="hide">
<title>g_main_context_check (34 samples, 0.03%)</title><rect x="305.8522974101922" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(218,217,14)" rx="2" ry="2" _orig_x="312.8" _orig_width="0.3"/>
<text x="308.8522974101922" y="2047.5" _orig_x="315.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="353.0256056808689" y="1941" width="0.5206766917293233" height="15.0" fill="rgb(223,5,30)" rx="2" ry="2" _orig_x="358.1" _orig_width="0.5"/>
<text x="356.0256056808689" y="1951.5" _orig_x="361.14"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="277" width="0.20827067669172933" height="15.0" fill="rgb(232,62,12)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="287.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (20 samples, 0.02%)</title><rect x="296.2718462823727" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(223,74,43)" rx="2" ry="2" _orig_x="303.6" _orig_width="0.2"/>
<text x="299.2718462823727" y="2015.5" _orig_x="306.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="353.12974101921475" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(212,190,46)" rx="2" ry="2" _orig_x="358.2" _orig_width="0.4"/>
<text x="356.12974101921475" y="1935.5" _orig_x="361.21"/>
</g>
<g class="hide">
<title>[chrome] (26 samples, 0.02%)</title><rect x="30.830868838763635" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(221,186,16)" rx="2" ry="2" _orig_x="48.7" _orig_width="0.3"/>
<text x="33.830868838763635" y="2047.5" _orig_x="51.70"/>
</g>
<g class="hide">
<title>Timer (144 samples, 0.12%)</title><rect x="58.5" y="2069" width="1.4" height="15.0" fill="rgb(243,152,34)" rx="2" ry="2"/>
<text x="61.51" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.10%)</title><rect x="160.2710944026734" y="1893" width="1.2496240601503759" height="15.0" fill="rgb(247,191,20)" rx="2" ry="2" _orig_x="173.0" _orig_width="1.2"/>
<text x="163.2710944026734" y="1903.5" _orig_x="175.96"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="725" width="0.31240601503759396" height="15.0" fill="rgb(235,78,24)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="735.5" _orig_x="99.72"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (642 samples, 0.54%)</title><rect x="752.5522138680032" y="1861" width="15.772765246449456" height="15.0" fill="rgb(232,167,4)" rx="2" ry="2" _orig_x="670.3" _orig_width="6.4"/>
<text x="755.5522138680032" y="1871.5" _orig_x="673.32"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (11 samples, 0.01%)</title><rect x="592.6065162907267" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(215,223,11)" rx="2" ry="2" _orig_x="605.4" _orig_width="0.1"/>
<text x="595.6065162907267" y="1727.5" _orig_x="608.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="108.30756056808693" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(240,197,31)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="2015.5" _orig_x="126.13"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (21 samples, 0.02%)</title><rect x="303.27485380116957" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(243,5,24)" rx="2" ry="2" _orig_x="488.0" _orig_width="0.2"/>
<text x="306.27485380116957" y="1791.5" _orig_x="491.03"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (183 samples, 0.15%)</title><rect x="197.7944862155388" y="1797" width="4.43609022556391" height="15.0" fill="rgb(241,56,21)" rx="2" ry="2" _orig_x="445.2" _orig_width="1.8"/>
<text x="200.7944862155388" y="1807.5" _orig_x="448.19"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="130.69665831244782" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(231,107,16)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1647.5" _orig_x="147.63"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (458 samples, 0.39%)</title><rect x="999.4945697577275" y="1781" width="11.090225563909774" height="15.0" fill="rgb(252,179,23)" rx="2" ry="2" _orig_x="770.5" _orig_width="4.5"/>
<text x="1002.4945697577275" y="1791.5" _orig_x="773.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (82 samples, 0.07%)</title><rect x="1099.5530492898915" y="1861" width="1.971595655806182" height="15.0" fill="rgb(218,31,14)" rx="2" ry="2" _orig_x="811.1" _orig_width="0.8"/>
<text x="1102.5530492898915" y="1871.5" _orig_x="814.10"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (12 samples, 0.01%)</title><rect x="326.88763575605685" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(232,16,48)" rx="2" ry="2" _orig_x="333.0" _orig_width="0.2"/>
<text x="329.88763575605685" y="1999.5" _orig_x="336.05"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="933" width="0.31240601503759396" height="15.0" fill="rgb(253,183,1)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="943.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>service_manager::Main (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1941" width="55.81654135338346" height="15.0" fill="rgb(241,143,2)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1951.5" _orig_x="185.47">service_manager::Main </text>
</g>
<g class="hide">
<title>blink::MemoryUsageMonitor::TimerFired (16 samples, 0.01%)</title><rect x="174.01695906432752" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(247,173,41)" rx="2" ry="2" _orig_x="186.2" _orig_width="0.2"/>
<text x="177.01695906432752" y="1759.5" _orig_x="189.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="11.98237259816213" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(241,38,19)" rx="2" ry="2" _orig_x="30.6" _orig_width="0.2"/>
<text x="14.98237259816213" y="2015.5" _orig_x="33.63"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (29 samples, 0.02%)</title><rect x="649.2898913951545" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(205,212,37)" rx="2" ry="2" _orig_x="628.4" _orig_width="0.3"/>
<text x="652.2898913951545" y="1807.5" _orig_x="631.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.05%)</title><rect x="308.55981620718467" y="1941" width="0.5206766917293233" height="15.0" fill="rgb(249,91,7)" rx="2" ry="2" _orig_x="315.4" _orig_width="0.5"/>
<text x="311.55981620718467" y="1951.5" _orig_x="318.35"/>
</g>
<g class="hide">
<title>[perf-58157.map] (218 samples, 0.18%)</title><rect x="122.36583124477866" y="1797" width="2.2909774436090227" height="15.0" fill="rgb(242,106,35)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1807.5" _orig_x="139.62"/>
</g>
<g class="hide">
<title>std::condition_variable::wait_for&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (52 samples, 0.04%)</title><rect x="17.709816207184684" y="1861" width="0.6248120300751879" height="15.0" fill="rgb(215,46,40)" rx="2" ry="2" _orig_x="36.1" _orig_width="0.6"/>
<text x="20.709816207184684" y="1871.5" _orig_x="39.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="10.6" y="1877" width="0.1" height="15.0" fill="rgb(206,117,48)" rx="2" ry="2"/>
<text x="13.62" y="1887.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (34 samples, 0.03%)</title><rect x="845.9565580618213" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(205,165,20)" rx="2" ry="2" _orig_x="708.2" _orig_width="0.3"/>
<text x="848.9565580618213" y="1791.5" _orig_x="711.20"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (23 samples, 0.02%)</title><rect x="38.34168755221386" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(227,26,53)" rx="2" ry="2" _orig_x="380.5" _orig_width="0.2"/>
<text x="41.34168755221386" y="1759.5" _orig_x="383.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (398 samples, 0.33%)</title><rect x="66.13274853801175" y="2005" width="4.165413533834586" height="15.0" fill="rgb(207,76,27)" rx="2" ry="2" _orig_x="82.6" _orig_width="4.0"/>
<text x="69.13274853801175" y="2015.5" _orig_x="85.63"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="551.4494569757728" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(230,144,34)" rx="2" ry="2" _orig_x="588.7" _orig_width="0.2"/>
<text x="554.4494569757728" y="1711.5" _orig_x="591.75"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (59 samples, 0.05%)</title><rect x="1028.3291562238933" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(237,127,11)" rx="2" ry="2" _orig_x="782.2" _orig_width="0.5"/>
<text x="1031.3291562238933" y="1823.5" _orig_x="785.16"/>
</g>
<g class="hide">
<title>[perf-58145.map] (183 samples, 0.15%)</title><rect x="126.84365079365085" y="1605" width="1.874436090225564" height="15.0" fill="rgb(241,5,32)" rx="2" ry="2" _orig_x="140.9" _orig_width="1.8"/>
<text x="129.84365079365085" y="1615.5" _orig_x="143.93"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (58 samples, 0.05%)</title><rect x="978.299916457811" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(211,61,32)" rx="2" ry="2" _orig_x="761.9" _orig_width="0.6"/>
<text x="981.299916457811" y="1759.5" _orig_x="764.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="932.5387635756057" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(249,104,33)" rx="2" ry="2" _orig_x="914.6" _orig_width="0.2"/>
<text x="935.5387635756057" y="1855.5" _orig_x="917.61"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (186 samples, 0.16%)</title><rect x="617.7443609022557" y="1797" width="4.682539682539682" height="15.0" fill="rgb(228,147,30)" rx="2" ry="2" _orig_x="615.6" _orig_width="1.9"/>
<text x="620.7443609022557" y="1807.5" _orig_x="618.64"/>
</g>
<g class="hide">
<title>v8::Object::Get (123 samples, 0.10%)</title><rect x="191.40756056808695" y="1413" width="1.2496240601503759" height="15.0" fill="rgb(246,84,3)" rx="2" ry="2" _orig_x="202.9" _orig_width="1.2"/>
<text x="194.40756056808695" y="1423.5" _orig_x="205.86"/>
</g>
<g class="hide">
<title>v8::TryCatch::TryCatch (11 samples, 0.01%)</title><rect x="201.09214703425235" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(226,167,8)" rx="2" ry="2" _orig_x="212.2" _orig_width="0.1"/>
<text x="204.09214703425235" y="1711.5" _orig_x="215.20"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="287.5" y="2053" width="0.2" height="15.0" fill="rgb(232,202,18)" rx="2" ry="2"/>
<text x="290.45" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (21 samples, 0.02%)</title><rect x="71.858813700919" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(227,75,40)" rx="2" ry="2" _orig_x="394.1" _orig_width="0.2"/>
<text x="74.858813700919" y="1775.5" _orig_x="397.05"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (20 samples, 0.02%)</title><rect x="626.3700918964078" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(251,130,32)" rx="2" ry="2" _orig_x="619.1" _orig_width="0.2"/>
<text x="629.3700918964078" y="1839.5" _orig_x="622.10"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (41 samples, 0.03%)</title><rect x="413.4377610693401" y="1813" width="0.985797827903091" height="15.0" fill="rgb(242,19,19)" rx="2" ry="2" _orig_x="532.7" _orig_width="0.4"/>
<text x="416.4377610693401" y="1823.5" _orig_x="535.68"/>
</g>
<g class="hide">
<title>[perf-32884.map] (93 samples, 0.08%)</title><rect x="98.7271094402674" y="1685" width="0.937218045112782" height="15.0" fill="rgb(250,219,54)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1695.5" _orig_x="116.85"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (13 samples, 0.01%)</title><rect x="477.76106934001655" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,172,29)" rx="2" ry="2" _orig_x="558.8" _orig_width="0.1"/>
<text x="480.76106934001655" y="1759.5" _orig_x="561.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="349.4850041771095" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(217,140,23)" rx="2" ry="2" _orig_x="354.7" _orig_width="0.3"/>
<text x="352.4850041771095" y="1935.5" _orig_x="357.72"/>
</g>
<g class="hide">
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="1973" width="2.2909774436090227" height="15.0" fill="rgb(223,139,50)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="1983.5" _orig_x="38.23"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (217 samples, 0.18%)</title><rect x="852.8571428571429" y="1813" width="5.4218880534670015" height="15.0" fill="rgb(242,102,46)" rx="2" ry="2" _orig_x="711.0" _orig_width="2.2"/>
<text x="855.8571428571429" y="1823.5" _orig_x="714.04"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="421" width="2.2909774436090227" height="15.0" fill="rgb(220,88,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="431.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="2037" width="0.1" height="15.0" fill="rgb(215,122,36)" rx="2" ry="2"/>
<text x="13.06" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (1,255 samples, 1.06%)</title><rect x="111.3" y="2053" width="12.4" height="15.0" fill="rgb(232,219,48)" rx="2" ry="2"/>
<text x="114.29" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(236,66,22)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1727.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (20 samples, 0.02%)</title><rect x="292.83538011695913" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(248,58,45)" rx="2" ry="2" _orig_x="300.3" _orig_width="0.2"/>
<text x="295.83538011695913" y="2031.5" _orig_x="303.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="931.4974101921471" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(241,147,49)" rx="2" ry="2" _orig_x="913.6" _orig_width="0.2"/>
<text x="934.4974101921471" y="1999.5" _orig_x="916.58"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (34 samples, 0.03%)</title><rect x="318.55680868838766" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(241,12,10)" rx="2" ry="2" _orig_x="325.0" _orig_width="0.3"/>
<text x="321.55680868838766" y="2015.5" _orig_x="328.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.09%)</title><rect x="238.0601921470343" y="1909" width="1.1454887218045113" height="15.0" fill="rgb(243,90,14)" rx="2" ry="2" _orig_x="247.7" _orig_width="1.1"/>
<text x="241.0601921470343" y="1919.5" _orig_x="250.68"/>
</g>
<g>
<title>Field::CompareGreaterThan (51 samples, 0.04%)</title><rect x="788.0409356725147" y="1877" width="1.2322472848788637" height="15.0" fill="rgb(247,212,19)" rx="2" ry="2" _orig_x="684.7" _orig_width="0.5"/>
<text x="791.0409356725147" y="1887.5" _orig_x="687.68"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (14 samples, 0.01%)</title><rect x="1011.5705931495404" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(222,160,49)" rx="2" ry="2" _orig_x="775.4" _orig_width="0.1"/>
<text x="1014.5705931495404" y="1791.5" _orig_x="778.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="53" width="0.20827067669172933" height="15.0" fill="rgb(206,85,3)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="63.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1573" width="0.31240601503759396" height="15.0" fill="rgb(229,96,53)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1583.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="773" width="0.31240601503759396" height="15.0" fill="rgb(210,93,36)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="783.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (24 samples, 0.02%)</title><rect x="316.9947786131997" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(220,180,5)" rx="2" ry="2" _orig_x="323.5" _orig_width="0.2"/>
<text x="319.9947786131997" y="2047.5" _orig_x="326.50"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (14 samples, 0.01%)</title><rect x="917.1804511278195" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(210,184,4)" rx="2" ry="2" _orig_x="737.1" _orig_width="0.1"/>
<text x="920.1804511278195" y="1759.5" _orig_x="740.09"/>
</g>
<g class="hide">
<title>[chrome] (230 samples, 0.19%)</title><rect x="91.12522974101927" y="1925" width="2.3951127819548867" height="15.0" fill="rgb(208,180,3)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.3"/>
<text x="94.12522974101927" y="1935.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (212 samples, 0.18%)</title><rect x="24.374477861320024" y="1893" width="2.186842105263158" height="15.0" fill="rgb(243,217,32)" rx="2" ry="2" _orig_x="42.5" _orig_width="2.1"/>
<text x="27.374477861320024" y="1903.5" _orig_x="45.50"/>
</g>
<g class="hide">
<title>alsa-sink-ALC25 (1,792 samples, 1.51%)</title><rect x="74.7" y="2069" width="17.8" height="15.0" fill="rgb(238,138,4)" rx="2" ry="2"/>
<text x="77.69" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (854 samples, 0.72%)</title><rect x="1153.6180868838765" y="1749" width="8.851503759398495" height="15.0" fill="rgb(206,141,6)" rx="2" ry="2" _orig_x="1126.9" _orig_width="8.5"/>
<text x="1156.6180868838765" y="1759.5" _orig_x="1129.91"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="501" width="0.31240601503759396" height="15.0" fill="rgb(225,104,30)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="511.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="326.36695906432755" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(248,110,1)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="1983.5" _orig_x="335.52"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (79 samples, 0.07%)</title><rect x="289.72013366750207" y="1765" width="1.7251461988304093" height="15.0" fill="rgb(254,172,17)" rx="2" ry="2" _orig_x="482.5" _orig_width="0.7"/>
<text x="292.72013366750207" y="1775.5" _orig_x="485.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (277 samples, 0.23%)</title><rect x="423.295739348371" y="1781" width="6.900584795321637" height="15.0" fill="rgb(251,193,47)" rx="2" ry="2" _orig_x="536.7" _orig_width="2.8"/>
<text x="426.295739348371" y="1791.5" _orig_x="539.74"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="37.60233918128652" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(206,34,25)" rx="2" ry="2" _orig_x="380.2" _orig_width="0.1"/>
<text x="40.60233918128652" y="1743.5" _orig_x="383.21"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (12 samples, 0.01%)</title><rect x="1171.7627401837926" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(236,218,47)" rx="2" ry="2" _orig_x="840.4" _orig_width="0.1"/>
<text x="1174.7627401837926" y="1887.5" _orig_x="843.36"/>
</g>
<g class="hide">
<title>Builtins_JSEntry (19 samples, 0.02%)</title><rect x="184.22222222222229" y="1349" width="0.10413533834586466" height="15.0" fill="rgb(220,167,51)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1359.5" _orig_x="198.95"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (128 samples, 0.11%)</title><rect x="461.74185463659137" y="1701" width="3.2038429406850457" height="15.0" fill="rgb(252,2,5)" rx="2" ry="2" _orig_x="552.3" _orig_width="1.3"/>
<text x="464.74185463659137" y="1711.5" _orig_x="555.33"/>
</g>
<g class="hide">
<title>Event::toJS (44 samples, 0.04%)</title><rect x="124.6568086883877" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(224,196,16)" rx="2" ry="2" _orig_x="138.8" _orig_width="0.5"/>
<text x="127.6568086883877" y="1935.5" _orig_x="141.85"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::emplace_back&lt;Field&gt; (52 samples, 0.04%)</title><rect x="1166.09440267335" y="1925" width="1.2322472848788637" height="15.0" fill="rgb(239,228,24)" rx="2" ry="2" _orig_x="838.1" _orig_width="0.5"/>
<text x="1169.09440267335" y="1935.5" _orig_x="841.10"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (26 samples, 0.02%)</title><rect x="991.3617376775271" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(239,46,0)" rx="2" ry="2" _orig_x="767.2" _orig_width="0.2"/>
<text x="994.3617376775271" y="1759.5" _orig_x="770.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (77 samples, 0.06%)</title><rect x="487.8654970760233" y="1797" width="1.971595655806182" height="15.0" fill="rgb(208,131,47)" rx="2" ry="2" _orig_x="562.9" _orig_width="0.8"/>
<text x="490.8654970760233" y="1807.5" _orig_x="565.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (21 samples, 0.02%)</title><rect x="1111.87552213868" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(221,29,18)" rx="2" ry="2" _orig_x="816.1" _orig_width="0.2"/>
<text x="1114.87552213868" y="1839.5" _orig_x="819.11"/>
</g>
<g class="hide">
<title>[libxul.so] (75 samples, 0.06%)</title><rect x="39.2" y="2053" width="0.8" height="15.0" fill="rgb(209,6,0)" rx="2" ry="2"/>
<text x="42.21" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="2037" width="47.58984962406015" height="15.0" fill="rgb(208,86,26)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="2047.5" _orig_x="1138.90">[unknown] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (390 samples, 0.33%)</title><rect x="104.24628237259822" y="1877" width="4.061278195488722" height="15.0" fill="rgb(205,61,24)" rx="2" ry="2" _orig_x="119.2" _orig_width="3.9"/>
<text x="107.24628237259822" y="1887.5" _orig_x="122.18"/>
</g>
<g class="hide">
<title>clutter_actor_get_parent (14 samples, 0.01%)</title><rect x="297.4173350041771" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(217,112,18)" rx="2" ry="2" _orig_x="304.7" _orig_width="0.1"/>
<text x="300.4173350041771" y="2015.5" _orig_x="307.70"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="885" width="0.31240601503759396" height="15.0" fill="rgb(221,202,0)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="895.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (538 samples, 0.45%)</title><rect x="148.60793650793656" y="1861" width="5.519172932330827" height="15.0" fill="rgb(211,195,27)" rx="2" ry="2" _orig_x="161.8" _orig_width="5.3"/>
<text x="151.60793650793656" y="1871.5" _orig_x="164.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="228.89628237259822" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(205,149,43)" rx="2" ry="2" _orig_x="238.9" _orig_width="0.3"/>
<text x="231.89628237259822" y="1935.5" _orig_x="241.87"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (105 samples, 0.09%)</title><rect x="652.9866332497911" y="1845" width="2.7109440267335008" height="15.0" fill="rgb(237,89,35)" rx="2" ry="2" _orig_x="629.9" _orig_width="1.1"/>
<text x="655.9866332497911" y="1855.5" _orig_x="632.92"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(215,200,46)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1407.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (409 samples, 0.34%)</title><rect x="887.656432748538" y="1829" width="4.269548872180451" height="15.0" fill="rgb(251,51,17)" rx="2" ry="2" _orig_x="871.5" _orig_width="4.1"/>
<text x="890.656432748538" y="1839.5" _orig_x="874.52"/>
</g>
<g>
<title>operator new (19 samples, 0.02%)</title><rect x="1063.8178780284043" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(220,226,7)" rx="2" ry="2" _orig_x="796.6" _orig_width="0.2"/>
<text x="1066.8178780284043" y="1791.5" _orig_x="799.64"/>
</g>
<g class="hide">
<title>[code] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1637" width="0.10413533834586466" height="15.0" fill="rgb(248,31,49)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1647.5" _orig_x="130.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (34 samples, 0.03%)</title><rect x="751.3199665831243" y="1845" width="0.985797827903091" height="15.0" fill="rgb(211,71,31)" rx="2" ry="2" _orig_x="669.8" _orig_width="0.4"/>
<text x="754.3199665831243" y="1855.5" _orig_x="672.85"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (615 samples, 0.52%)</title><rect x="69.8872180451128" y="1829" width="15.033416875522136" height="15.0" fill="rgb(234,148,31)" rx="2" ry="2" _orig_x="393.3" _orig_width="6.1"/>
<text x="72.8872180451128" y="1839.5" _orig_x="396.32"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (12 samples, 0.01%)</title><rect x="420.5847953216375" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(240,136,48)" rx="2" ry="2" _orig_x="535.6" _orig_width="0.1"/>
<text x="423.5847953216375" y="1743.5" _orig_x="538.58"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (78 samples, 0.07%)</title><rect x="272.9615705931495" y="1813" width="1.971595655806182" height="15.0" fill="rgb(217,187,51)" rx="2" ry="2" _orig_x="475.7" _orig_width="0.8"/>
<text x="275.9615705931495" y="1823.5" _orig_x="478.69"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (49 samples, 0.04%)</title><rect x="667.7736006683374" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(254,65,36)" rx="2" ry="2" _orig_x="635.9" _orig_width="0.5"/>
<text x="670.7736006683374" y="1743.5" _orig_x="638.87"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="389" width="0.20827067669172933" height="15.0" fill="rgb(213,125,32)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="399.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (27 samples, 0.02%)</title><rect x="112.16056808688393" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(235,159,29)" rx="2" ry="2" _orig_x="126.8" _orig_width="0.3"/>
<text x="115.16056808688393" y="1679.5" _orig_x="129.84"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (37 samples, 0.03%)</title><rect x="655.9440267335004" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(223,146,2)" rx="2" ry="2" _orig_x="631.1" _orig_width="0.3"/>
<text x="658.9440267335004" y="1823.5" _orig_x="634.07"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (25 samples, 0.02%)</title><rect x="523.3542188805345" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(211,46,34)" rx="2" ry="2" _orig_x="577.3" _orig_width="0.2"/>
<text x="526.3542188805345" y="1791.5" _orig_x="580.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="914.5233500417711" y="1829" width="0.5206766917293233" height="15.0" fill="rgb(219,119,3)" rx="2" ry="2" _orig_x="897.3" _orig_width="0.5"/>
<text x="917.5233500417711" y="1839.5" _orig_x="900.30"/>
</g>
<g class="hide">
<title>[perf-58119.map] (41 samples, 0.03%)</title><rect x="117.47147034252303" y="1301" width="0.41654135338345866" height="15.0" fill="rgb(241,98,36)" rx="2" ry="2" _orig_x="131.9" _orig_width="0.4"/>
<text x="120.47147034252303" y="1311.5" _orig_x="134.86"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="422.80284043441935" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(235,228,50)" rx="2" ry="2" _orig_x="536.5" _orig_width="0.1"/>
<text x="425.80284043441935" y="1759.5" _orig_x="539.48"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="477.02172096908936" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(216,94,8)" rx="2" ry="2" _orig_x="558.5" _orig_width="0.1"/>
<text x="480.02172096908936" y="1727.5" _orig_x="561.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="308.45568086883884" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(248,224,13)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="2047.5" _orig_x="318.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="343.96583124477866" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(222,27,49)" rx="2" ry="2" _orig_x="349.4" _orig_width="0.5"/>
<text x="346.96583124477866" y="1935.5" _orig_x="352.45"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (41 samples, 0.03%)</title><rect x="39.82038429406856" y="1749" width="0.985797827903091" height="15.0" fill="rgb(244,153,22)" rx="2" ry="2" _orig_x="381.1" _orig_width="0.4"/>
<text x="42.82038429406856" y="1759.5" _orig_x="384.12"/>
</g>
<g class="hide">
<title>v8::internal::Builtin_Impl_HandleApiCall (15 samples, 0.01%)</title><rect x="163.70756056808693" y="1557" width="0.10413533834586466" height="15.0" fill="rgb(241,185,18)" rx="2" ry="2" _orig_x="176.3" _orig_width="0.1"/>
<text x="166.70756056808693" y="1567.5" _orig_x="179.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (23 samples, 0.02%)</title><rect x="122.87385129490396" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(231,206,7)" rx="2" ry="2" _orig_x="414.8" _orig_width="0.3"/>
<text x="125.87385129490396" y="1759.5" _orig_x="417.84"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (43 samples, 0.04%)</title><rect x="583.4878863826233" y="1717" width="0.985797827903091" height="15.0" fill="rgb(219,25,21)" rx="2" ry="2" _orig_x="601.7" _orig_width="0.4"/>
<text x="586.4878863826233" y="1727.5" _orig_x="604.67"/>
</g>
<g class="hide">
<title>IPDL_Background (133 samples, 0.11%)</title><rect x="24.0" y="2069" width="1.4" height="15.0" fill="rgb(250,109,39)" rx="2" ry="2"/>
<text x="27.04" y="2079.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (34 samples, 0.03%)</title><rect x="421.32414369256463" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(222,44,53)" rx="2" ry="2" _orig_x="535.9" _orig_width="0.3"/>
<text x="424.32414369256463" y="1743.5" _orig_x="538.88"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="533" width="2.2909774436090227" height="15.0" fill="rgb(235,156,37)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="543.5" _orig_x="69.82"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (43 samples, 0.04%)</title><rect x="1087.4770258980786" y="1829" width="0.985797827903091" height="15.0" fill="rgb(244,86,51)" rx="2" ry="2" _orig_x="806.2" _orig_width="0.4"/>
<text x="1090.4770258980786" y="1839.5" _orig_x="809.16"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (18 samples, 0.02%)</title><rect x="868.8763575605681" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(208,89,48)" rx="2" ry="2" _orig_x="717.5" _orig_width="0.1"/>
<text x="871.8763575605681" y="1823.5" _orig_x="720.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (900 samples, 0.76%)</title><rect x="975.5889724310775" y="1797" width="22.18045112781955" height="15.0" fill="rgb(230,51,30)" rx="2" ry="2" _orig_x="760.8" _orig_width="9.0"/>
<text x="978.5889724310775" y="1807.5" _orig_x="763.84">s..</text>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (30 samples, 0.03%)</title><rect x="867.6441102756892" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(213,15,24)" rx="2" ry="2" _orig_x="717.0" _orig_width="0.3"/>
<text x="870.6441102756892" y="1823.5" _orig_x="719.99"/>
</g>
<g class="hide">
<title>QDateTime::currentMSecsSinceEpoch (49 samples, 0.04%)</title><rect x="228.79214703425237" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(244,78,2)" rx="2" ry="2" _orig_x="238.8" _orig_width="0.4"/>
<text x="231.79214703425237" y="2015.5" _orig_x="241.76"/>
</g>
<g class="hide">
<title>kworker/4:2-eve (146 samples, 0.12%)</title><rect x="355.0" y="2069" width="1.5" height="15.0" fill="rgb(220,191,49)" rx="2" ry="2"/>
<text x="358.01" y="2079.5"/>
</g>
<g>
<title>TypeInt::CompareGreaterThan (18 samples, 0.02%)</title><rect x="567.7151211361736" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(210,131,38)" rx="2" ry="2" _orig_x="595.3" _orig_width="0.2"/>
<text x="570.7151211361736" y="1855.5" _orig_x="598.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="928.4774853801171" y="1477" width="0.10413533834586466" height="15.0" fill="rgb(219,150,34)" rx="2" ry="2" _orig_x="910.7" _orig_width="0.1"/>
<text x="931.4774853801171" y="1487.5" _orig_x="913.65"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="181" width="0.20827067669172933" height="15.0" fill="rgb(215,173,20)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="191.5" _orig_x="32.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (119 samples, 0.10%)</title><rect x="638.6925647451964" y="1765" width="2.957393483709273" height="15.0" fill="rgb(248,41,23)" rx="2" ry="2" _orig_x="624.1" _orig_width="1.2"/>
<text x="641.6925647451964" y="1775.5" _orig_x="627.07"/>
</g>
<g>
<title>Schema::GetColumn (15 samples, 0.01%)</title><rect x="1088.4628237259817" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(241,37,35)" rx="2" ry="2" _orig_x="806.6" _orig_width="0.2"/>
<text x="1091.4628237259817" y="1887.5" _orig_x="809.64"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (16 samples, 0.01%)</title><rect x="820.3258145363407" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(235,29,2)" rx="2" ry="2" _orig_x="697.8" _orig_width="0.2"/>
<text x="823.3258145363407" y="1759.5" _orig_x="700.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="197.9680868838764" y="1525" width="0.10413533834586466" height="15.0" fill="rgb(230,170,35)" rx="2" ry="2" _orig_x="209.2" _orig_width="0.1"/>
<text x="200.9680868838764" y="1535.5" _orig_x="212.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="309.28876357560574" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(219,27,11)" rx="2" ry="2" _orig_x="316.1" _orig_width="0.1"/>
<text x="312.28876357560574" y="1983.5" _orig_x="319.06"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (23 samples, 0.02%)</title><rect x="727.1679197994987" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(228,32,40)" rx="2" ry="2" _orig_x="660.0" _orig_width="0.2"/>
<text x="730.1679197994987" y="1791.5" _orig_x="662.99"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (34 samples, 0.03%)</title><rect x="872.5730994152046" y="1797" width="0.985797827903091" height="15.0" fill="rgb(248,152,22)" rx="2" ry="2" _orig_x="719.0" _orig_width="0.4"/>
<text x="875.5730994152046" y="1807.5" _orig_x="722.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="277.11094402673353" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(219,118,27)" rx="2" ry="2" _orig_x="285.2" _orig_width="0.3"/>
<text x="280.11094402673353" y="1951.5" _orig_x="288.21"/>
</g>
<g class="hide">
<title>[perf-58119.map] (17 samples, 0.01%)</title><rect x="121.32447786132002" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(205,127,52)" rx="2" ry="2" _orig_x="135.6" _orig_width="0.2"/>
<text x="124.32447786132002" y="1647.5" _orig_x="138.62"/>
</g>
<g class="hide">
<title>[ntfs-3g] (48 samples, 0.04%)</title><rect x="876.2015455304929" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(221,225,47)" rx="2" ry="2" _orig_x="860.5" _orig_width="0.5"/>
<text x="879.2015455304929" y="2031.5" _orig_x="863.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (40 samples, 0.03%)</title><rect x="118.43776106934001" y="1781" width="0.985797827903091" height="15.0" fill="rgb(237,10,49)" rx="2" ry="2" _orig_x="413.0" _orig_width="0.4"/>
<text x="121.43776106934001" y="1791.5" _orig_x="416.00"/>
</g>
<g class="hide">
<title>[unknown] (277 samples, 0.23%)</title><rect x="34.7" y="2053" width="2.7" height="15.0" fill="rgb(218,164,16)" rx="2" ry="2"/>
<text x="37.70" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="26.56131996658318" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(225,144,1)" rx="2" ry="2" _orig_x="44.6" _orig_width="0.1"/>
<text x="29.56131996658318" y="1951.5" _orig_x="47.60"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (94 samples, 0.08%)</title><rect x="137.6608187134503" y="1765" width="2.218045112781955" height="15.0" fill="rgb(212,60,52)" rx="2" ry="2" _orig_x="420.8" _orig_width="0.9"/>
<text x="140.6608187134503" y="1775.5" _orig_x="423.77"/>
</g>
<g class="hide">
<title>[code] (150 samples, 0.13%)</title><rect x="31.143274853801223" y="2005" width="1.4578947368421051" height="15.0" fill="rgb(230,76,35)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="2015.5" _orig_x="51.96"/>
</g>
<g class="hide">
<title>snd_pcm_poll_descriptors_revents (21 samples, 0.02%)</title><rect x="92.3" y="2053" width="0.2" height="15.0" fill="rgb(205,164,19)" rx="2" ry="2"/>
<text x="95.26" y="2063.5"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (15 samples, 0.01%)</title><rect x="60.275689223057576" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(216,167,18)" rx="2" ry="2" _orig_x="389.4" _orig_width="0.1"/>
<text x="63.275689223057576" y="1727.5" _orig_x="392.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="931.4974101921471" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(250,164,30)" rx="2" ry="2" _orig_x="913.6" _orig_width="0.2"/>
<text x="934.4974101921471" y="2047.5" _orig_x="916.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="23.4" y="1909" width="0.2" height="15.0" fill="rgb(219,223,11)" rx="2" ry="2"/>
<text x="26.44" y="1919.5"/>
</g>
<g class="hide">
<title>wpa_supplicant (30 samples, 0.03%)</title><rect x="1189.6" y="2069" width="0.3" height="15.0" fill="rgb(210,90,33)" rx="2" ry="2"/>
<text x="1192.59" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,339 samples, 1.13%)</title><rect x="577.326649958229" y="1781" width="32.77777777777778" height="15.0" fill="rgb(254,184,32)" rx="2" ry="2" _orig_x="599.2" _orig_width="13.3"/>
<text x="580.326649958229" y="1791.5" _orig_x="602.18">std..</text>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="549" width="0.31240601503759396" height="15.0" fill="rgb(242,43,35)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="559.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (67 samples, 0.06%)</title><rect x="1105.7142857142858" y="1845" width="1.7251461988304093" height="15.0" fill="rgb(244,112,4)" rx="2" ry="2" _orig_x="813.6" _orig_width="0.7"/>
<text x="1108.7142857142858" y="1855.5" _orig_x="816.64"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (18 samples, 0.02%)</title><rect x="422.06349206349216" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(225,132,33)" rx="2" ry="2" _orig_x="536.2" _orig_width="0.2"/>
<text x="425.06349206349216" y="1743.5" _orig_x="539.22"/>
</g>
<g class="hide">
<title>[perf-58145.map] (236 samples, 0.20%)</title><rect x="126.32297410192153" y="1765" width="2.3951127819548867" height="15.0" fill="rgb(252,117,15)" rx="2" ry="2" _orig_x="140.4" _orig_width="2.3"/>
<text x="129.32297410192155" y="1775.5" _orig_x="143.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="274.9241019214704" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(208,160,45)" rx="2" ry="2" _orig_x="283.1" _orig_width="0.2"/>
<text x="277.9241019214704" y="1967.5" _orig_x="286.09"/>
</g>
<g class="hide">
<title>CefRunMessageLoop (75 samples, 0.06%)</title><rect x="243.0586883876358" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(226,155,27)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="1999.5" _orig_x="255.52"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1237" width="0.31240601503759396" height="15.0" fill="rgb(227,56,25)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1247.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.147786131996714" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(244,153,30)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="1967.5" _orig_x="37.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (13 samples, 0.01%)</title><rect x="856.0609857978277" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(251,228,6)" rx="2" ry="2" _orig_x="712.3" _orig_width="0.2"/>
<text x="859.0609857978277" y="1775.5" _orig_x="715.34"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="837" width="2.2909774436090227" height="15.0" fill="rgb(216,178,11)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="847.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-58157.map] (191 samples, 0.16%)</title><rect x="122.67823725981627" y="1733" width="1.9785714285714284" height="15.0" fill="rgb(212,33,3)" rx="2" ry="2" _orig_x="136.9" _orig_width="1.9"/>
<text x="125.67823725981627" y="1743.5" _orig_x="139.89"/>
</g>
<g class="hide">
<title>[[vdso]] (31 samples, 0.03%)</title><rect x="42.18162071846288" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(233,39,21)" rx="2" ry="2" _orig_x="59.6" _orig_width="0.3"/>
<text x="45.18162071846288" y="2047.5" _orig_x="62.63"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (32 samples, 0.03%)</title><rect x="1073.6758563074352" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(254,32,5)" rx="2" ry="2" _orig_x="800.6" _orig_width="0.3"/>
<text x="1076.6758563074352" y="1775.5" _orig_x="803.60"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1061" width="0.31240601503759396" height="15.0" fill="rgb(215,119,28)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1071.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-58157.map] (156 samples, 0.13%)</title><rect x="122.99064327485384" y="1685" width="1.6661654135338346" height="15.0" fill="rgb(232,121,54)" rx="2" ry="2" _orig_x="137.2" _orig_width="1.6"/>
<text x="125.99064327485384" y="1695.5" _orig_x="140.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="308.45568086883884" y="1989" width="0.6248120300751879" height="15.0" fill="rgb(211,200,44)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="1999.5" _orig_x="318.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="344.38237259816214" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(211,218,38)" rx="2" ry="2" _orig_x="349.8" _orig_width="0.1"/>
<text x="347.38237259816214" y="1887.5" _orig_x="352.78"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (21 samples, 0.02%)</title><rect x="96.12372598162078" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(226,36,26)" rx="2" ry="2" _orig_x="111.4" _orig_width="0.2"/>
<text x="99.12372598162078" y="2047.5" _orig_x="114.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (56 samples, 0.05%)</title><rect x="234.02255639097737" y="1717" width="1.2322472848788637" height="15.0" fill="rgb(224,39,14)" rx="2" ry="2" _orig_x="459.9" _orig_width="0.5"/>
<text x="237.02255639097737" y="1727.5" _orig_x="462.86"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (52 samples, 0.04%)</title><rect x="339.01002506265667" y="1717" width="1.2322472848788637" height="15.0" fill="rgb(237,114,42)" rx="2" ry="2" _orig_x="502.5" _orig_width="0.5"/>
<text x="342.01002506265667" y="1727.5" _orig_x="505.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="131.4256056808689" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(239,56,48)" rx="2" ry="2" _orig_x="145.3" _orig_width="0.1"/>
<text x="134.4256056808689" y="1791.5" _orig_x="148.26"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (29 samples, 0.02%)</title><rect x="524.8329156223892" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(237,11,14)" rx="2" ry="2" _orig_x="577.9" _orig_width="0.2"/>
<text x="527.8329156223892" y="1791.5" _orig_x="580.85"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="123.61545530492906" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(243,162,28)" rx="2" ry="2" _orig_x="137.8" _orig_width="0.2"/>
<text x="126.61545530492906" y="1471.5" _orig_x="140.81"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,844 samples, 1.55%)</title><rect x="799.3776106934" y="1813" width="45.100250626566414" height="15.0" fill="rgb(228,31,21)" rx="2" ry="2" _orig_x="689.3" _orig_width="18.3"/>
<text x="802.3776106934" y="1823.5" _orig_x="692.27">std:..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="303.35304928989143" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(209,103,1)" rx="2" ry="2" _orig_x="310.4" _orig_width="0.1"/>
<text x="306.35304928989143" y="1679.5" _orig_x="313.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (325 samples, 0.27%)</title><rect x="340.1128237259816" y="2037" width="3.4364661654135333" height="15.0" fill="rgb(228,187,22)" rx="2" ry="2" _orig_x="345.7" _orig_width="3.3"/>
<text x="343.1128237259816" y="2047.5" _orig_x="348.74"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (195 samples, 0.16%)</title><rect x="853.3500417710944" y="1797" width="4.928989139515455" height="15.0" fill="rgb(222,35,18)" rx="2" ry="2" _orig_x="711.2" _orig_width="2.0"/>
<text x="856.3500417710944" y="1807.5" _orig_x="714.24"/>
</g>
<g class="hide">
<title>[code] (18 samples, 0.02%)</title><rect x="16.9" y="1909" width="0.2" height="15.0" fill="rgb(231,135,33)" rx="2" ry="2"/>
<text x="19.89" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="1957" width="47.58984962406015" height="15.0" fill="rgb(214,76,20)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="1967.5" _orig_x="1138.90">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (11 samples, 0.01%)</title><rect x="270.9899749373433" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(254,178,22)" rx="2" ry="2" _orig_x="474.9" _orig_width="0.1"/>
<text x="273.9899749373433" y="1775.5" _orig_x="477.88"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (476 samples, 0.40%)</title><rect x="1122.4728487886382" y="1813" width="11.58312447786132" height="15.0" fill="rgb(238,57,38)" rx="2" ry="2" _orig_x="820.4" _orig_width="4.7"/>
<text x="1125.4728487886382" y="1823.5" _orig_x="823.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="16.564327485380172" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(250,25,47)" rx="2" ry="2" _orig_x="35.0" _orig_width="0.2"/>
<text x="19.564327485380172" y="1839.5" _orig_x="38.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(222,126,1)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="2031.5" _orig_x="329.84"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(237,80,0)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1887.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="124.13613199665838" y="1221" width="0.31240601503759396" height="15.0" fill="rgb(237,53,14)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1231.5" _orig_x="141.31"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (14 samples, 0.01%)</title><rect x="260.1461988304093" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(222,25,13)" rx="2" ry="2" _orig_x="470.5" _orig_width="0.1"/>
<text x="263.1461988304093" y="1727.5" _orig_x="473.49"/>
</g>
<g class="hide">
<title>pthread_cond_destroy@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="225.45981620718467" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(251,202,42)" rx="2" ry="2" _orig_x="235.6" _orig_width="0.2"/>
<text x="228.45981620718467" y="1823.5" _orig_x="238.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="1163.2571199358201" y="1925" width="0.7099879663056557" height="15.0" fill="rgb(222,65,7)" rx="2" ry="2" _orig_x="848.4" _orig_width="0.3"/>
<text x="1166.2571199358201" y="1935.5" _orig_x="851.45"/>
</g>
<g class="hide">
<title>[[vdso]] (134 samples, 0.11%)</title><rect x="72.79741019214708" y="2037" width="1.3537593984962406" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" _orig_x="89.0" _orig_width="1.3"/>
<text x="75.79741019214708" y="2047.5" _orig_x="91.99"/>
</g>
<g class="hide">
<title>[code] (23 samples, 0.02%)</title><rect x="130.69665831244782" y="1621" width="0.31240601503759396" height="15.0" fill="rgb(238,219,1)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1631.5" _orig_x="147.63"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1605" width="0.20827067669172933" height="15.0" fill="rgb(207,197,12)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1615.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (642 samples, 0.54%)</title><rect x="64.4" y="2053" width="6.4" height="15.0" fill="rgb(219,34,53)" rx="2" ry="2"/>
<text x="67.42" y="2063.5"/>
</g>
<g class="hide">
<title>base::sequence_manager::TimeDomain::SetNextWakeUpForQueue (29 samples, 0.02%)</title><rect x="217.33725981620725" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(222,86,14)" rx="2" ry="2" _orig_x="227.8" _orig_width="0.3"/>
<text x="220.33725981620725" y="1727.5" _orig_x="230.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="913.1695906432749" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(220,88,6)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="1999.5" _orig_x="898.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="140.9019214703426" y="2005" width="1.5620300751879699" height="15.0" fill="rgb(218,85,1)" rx="2" ry="2" _orig_x="154.4" _orig_width="1.5"/>
<text x="143.9019214703426" y="2015.5" _orig_x="157.41"/>
</g>
<g class="hide">
<title>std::__cxx11::_List_base&lt;std::shared_ptr&lt;wukong::Timer::TimerEvent&gt;, std::allocator&lt;std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt; &gt;::_List_base (12 samples, 0.01%)</title><rect x="18.5428989139516" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(213,77,24)" rx="2" ry="2" _orig_x="36.9" _orig_width="0.2"/>
<text x="21.5428989139516" y="1871.5" _orig_x="39.94"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (23 samples, 0.02%)</title><rect x="747.6232247284877" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(207,197,30)" rx="2" ry="2" _orig_x="668.3" _orig_width="0.2"/>
<text x="750.6232247284877" y="1823.5" _orig_x="671.27"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (18 samples, 0.02%)</title><rect x="967.702589807853" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(230,71,39)" rx="2" ry="2" _orig_x="757.6" _orig_width="0.1"/>
<text x="970.702589807853" y="1823.5" _orig_x="760.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="69.04853801169597" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(241,166,26)" rx="2" ry="2" _orig_x="85.4" _orig_width="0.3"/>
<text x="72.04853801169597" y="1871.5" _orig_x="88.41"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1077" width="0.31240601503759396" height="15.0" fill="rgb(237,13,45)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1087.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (1,780 samples, 1.50%)</title><rect x="180.2650793650794" y="1637" width="18.32781954887218" height="15.0" fill="rgb(233,183,11)" rx="2" ry="2" _orig_x="192.2" _orig_width="17.6"/>
<text x="183.2650793650794" y="1647.5" _orig_x="195.18">v8::internal::Execution::Call </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="355.73312447786134" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(214,65,1)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1967.5" _orig_x="363.69"/>
</g>
<g class="hide">
<title>[code] (70 samples, 0.06%)</title><rect x="143.81771094402677" y="1893" width="0.7289473684210526" height="15.0" fill="rgb(225,130,4)" rx="2" ry="2" _orig_x="157.2" _orig_width="0.7"/>
<text x="146.81771094402677" y="1903.5" _orig_x="160.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="21.6" y="1813" width="0.1" height="15.0" fill="rgb(253,1,38)" rx="2" ry="2"/>
<text x="24.61" y="1823.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (228 samples, 0.19%)</title><rect x="122.2616959064328" y="1861" width="2.3951127819548867" height="15.0" fill="rgb(215,224,53)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1871.5" _orig_x="139.55"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (231 samples, 0.19%)</title><rect x="711.3951545530493" y="1781" width="5.4218880534670015" height="15.0" fill="rgb(220,77,5)" rx="2" ry="2" _orig_x="653.6" _orig_width="2.2"/>
<text x="714.3951545530493" y="1791.5" _orig_x="656.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="41.97335004177115" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(230,93,37)" rx="2" ry="2" _orig_x="59.4" _orig_width="0.2"/>
<text x="44.97335004177115" y="1887.5" _orig_x="62.39"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="965" width="2.2909774436090227" height="15.0" fill="rgb(215,89,17)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="975.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="84.14816207184634" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(214,193,28)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1951.5" _orig_x="102.92"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (29 samples, 0.02%)</title><rect x="13.7" y="2053" width="0.3" height="15.0" fill="rgb(214,25,9)" rx="2" ry="2"/>
<text x="16.73" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (282 samples, 0.24%)</title><rect x="1115.3258145363409" y="1797" width="6.900584795321637" height="15.0" fill="rgb(252,227,30)" rx="2" ry="2" _orig_x="817.5" _orig_width="2.8"/>
<text x="1118.3258145363409" y="1807.5" _orig_x="820.52"/>
</g>
<g class="hide">
<title>blink::V8Function::Invoke (209 samples, 0.18%)</title><rect x="163.18688387635763" y="1701" width="2.186842105263158" height="15.0" fill="rgb(228,89,50)" rx="2" ry="2" _orig_x="175.8" _orig_width="2.1"/>
<text x="166.18688387635763" y="1711.5" _orig_x="178.80"/>
</g>
<g class="hide">
<title>base::internal::TaskTracker::RunAndPopNextTask (754 samples, 0.63%)</title><rect x="32.70530492898919" y="1989" width="7.810150375939849" height="15.0" fill="rgb(231,202,5)" rx="2" ry="2" _orig_x="50.5" _orig_width="7.5"/>
<text x="35.70530492898919" y="1999.5" _orig_x="53.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (12 samples, 0.01%)</title><rect x="372.5271512113618" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(211,33,7)" rx="2" ry="2" _orig_x="516.1" _orig_width="0.1"/>
<text x="375.5271512113618" y="1791.5" _orig_x="519.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="930.1436507936507" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(214,97,40)" rx="2" ry="2" _orig_x="912.3" _orig_width="0.2"/>
<text x="933.1436507936507" y="1567.5" _orig_x="915.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="24.8" y="2021" width="0.2" height="15.0" fill="rgb(224,122,54)" rx="2" ry="2"/>
<text x="27.81" y="2031.5"/>
</g>
<g class="hide">
<title>runtime.selectgo (52 samples, 0.04%)</title><rect x="270.2380116959065" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(214,203,38)" rx="2" ry="2" _orig_x="278.6" _orig_width="0.5"/>
<text x="273.2380116959065" y="2015.5" _orig_x="281.57"/>
</g>
<g class="hide">
<title>atopacctd (28 samples, 0.02%)</title><rect x="99.8" y="2069" width="0.3" height="15.0" fill="rgb(225,113,47)" rx="2" ry="2"/>
<text x="102.78" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (38 samples, 0.03%)</title><rect x="619.9624060150376" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(232,46,51)" rx="2" ry="2" _orig_x="616.5" _orig_width="0.3"/>
<text x="622.9624060150376" y="1775.5" _orig_x="619.46"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (16 samples, 0.01%)</title><rect x="945.5221386800333" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(229,199,33)" rx="2" ry="2" _orig_x="748.6" _orig_width="0.2"/>
<text x="948.5221386800333" y="1903.5" _orig_x="751.61"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (15 samples, 0.01%)</title><rect x="945.5221386800333" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(239,26,3)" rx="2" ry="2" _orig_x="748.6" _orig_width="0.2"/>
<text x="948.5221386800333" y="1887.5" _orig_x="751.61"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (82 samples, 0.07%)</title><rect x="200.25898078529653" y="1781" width="1.971595655806182" height="15.0" fill="rgb(212,102,9)" rx="2" ry="2" _orig_x="446.2" _orig_width="0.8"/>
<text x="203.25898078529653" y="1791.5" _orig_x="449.20"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="565" width="0.31240601503759396" height="15.0" fill="rgb(219,40,16)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="575.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>ntfs_attr_lookup (14 samples, 0.01%)</title><rect x="901.0898913951546" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(238,61,36)" rx="2" ry="2" _orig_x="884.4" _orig_width="0.2"/>
<text x="904.0898913951546" y="2047.5" _orig_x="887.42"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (15 samples, 0.01%)</title><rect x="294.156223893066" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(247,178,37)" rx="2" ry="2" _orig_x="484.3" _orig_width="0.1"/>
<text x="297.156223893066" y="1743.5" _orig_x="487.26"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (30 samples, 0.03%)</title><rect x="727.6608187134503" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(246,48,5)" rx="2" ry="2" _orig_x="660.2" _orig_width="0.3"/>
<text x="730.6608187134503" y="1791.5" _orig_x="663.22"/>
</g>
<g class="hide">
<title>[code] (179 samples, 0.15%)</title><rect x="142.98462823725987" y="1925" width="1.874436090225564" height="15.0" fill="rgb(241,2,14)" rx="2" ry="2" _orig_x="156.4" _orig_width="1.8"/>
<text x="145.98462823725987" y="1935.5" _orig_x="159.42"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(215,39,25)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1775.5" _orig_x="118.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (601 samples, 0.51%)</title><rect x="134.44553049289897" y="2005" width="6.2481203007518795" height="15.0" fill="rgb(244,160,0)" rx="2" ry="2" _orig_x="148.2" _orig_width="6.0"/>
<text x="137.44553049289897" y="2015.5" _orig_x="151.19"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (15 samples, 0.01%)</title><rect x="685.7644110275689" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(227,75,53)" rx="2" ry="2" _orig_x="643.2" _orig_width="0.1"/>
<text x="688.7644110275689" y="1807.5" _orig_x="646.18"/>
</g>
<g class="hide">
<title>base::internal::Invoker&lt;base::internal::BindState&lt;base::DoNothing::Repeatedly&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, extensions::binding::EventListenersChanged, base::DictionaryValue const*, bool, v8::Local&lt;v8::Context&gt; &gt; (21 samples, 0.02%)</title><rect x="214.1090643274854" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(252,121,46)" rx="2" ry="2" _orig_x="224.7" _orig_width="0.2"/>
<text x="217.1090643274854" y="1775.5" _orig_x="227.68"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (17 samples, 0.01%)</title><rect x="1123.4586466165413" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(231,10,53)" rx="2" ry="2" _orig_x="820.8" _orig_width="0.1"/>
<text x="1126.4586466165413" y="1807.5" _orig_x="823.77"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (22 samples, 0.02%)</title><rect x="660.8730158730159" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(212,49,13)" rx="2" ry="2" _orig_x="633.1" _orig_width="0.2"/>
<text x="663.8730158730159" y="1823.5" _orig_x="636.12"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (80 samples, 0.07%)</title><rect x="721.9924812030075" y="1845" width="1.971595655806182" height="15.0" fill="rgb(252,212,0)" rx="2" ry="2" _orig_x="657.9" _orig_width="0.8"/>
<text x="724.9924812030075" y="1855.5" _orig_x="660.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (540 samples, 0.45%)</title><rect x="892.8631996658313" y="1957" width="5.519172932330827" height="15.0" fill="rgb(234,111,21)" rx="2" ry="2" _orig_x="876.5" _orig_width="5.3"/>
<text x="895.8631996658313" y="1967.5" _orig_x="879.48"/>
</g>
<g class="hide">
<title>[perf-3698.map] (12 samples, 0.01%)</title><rect x="287.4203425229742" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(207,212,8)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1791.5" _orig_x="298.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="26.353049289891448" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(212,181,32)" rx="2" ry="2" _orig_x="44.4" _orig_width="0.2"/>
<text x="29.353049289891448" y="1791.5" _orig_x="47.43"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (29 samples, 0.02%)</title><rect x="389.53216374269005" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(243,212,3)" rx="2" ry="2" _orig_x="523.0" _orig_width="0.3"/>
<text x="392.53216374269005" y="1775.5" _orig_x="526.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.12%)</title><rect x="240.87184628237264" y="1893" width="1.4578947368421051" height="15.0" fill="rgb(212,79,52)" rx="2" ry="2" _orig_x="250.4" _orig_width="1.4"/>
<text x="243.87184628237264" y="1903.5" _orig_x="253.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.4" y="1941" width="0.2" height="15.0" fill="rgb(211,50,18)" rx="2" ry="2"/>
<text x="18.43" y="1951.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (548 samples, 0.46%)</title><rect x="51.89640768588137" y="1813" width="13.554720133667502" height="15.0" fill="rgb(213,64,20)" rx="2" ry="2" _orig_x="386.0" _orig_width="5.5"/>
<text x="54.89640768588137" y="1823.5" _orig_x="389.02"/>
</g>
<g class="hide">
<title>os_get_current_tick_hr (20 samples, 0.02%)</title><rect x="338.1342522974102" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(227,48,47)" rx="2" ry="2" _orig_x="343.8" _orig_width="0.2"/>
<text x="341.1342522974102" y="2047.5" _orig_x="346.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,033 samples, 0.87%)</title><rect x="917.8556808688388" y="1797" width="10.72593984962406" height="15.0" fill="rgb(214,141,24)" rx="2" ry="2" _orig_x="900.5" _orig_width="10.3"/>
<text x="920.8556808688388" y="1807.5" _orig_x="903.51"/>
</g>
<g class="hide">
<title>base::MessagePumpDefault::Run (12 samples, 0.01%)</title><rect x="15.1" y="1973" width="0.2" height="15.0" fill="rgb(246,134,29)" rx="2" ry="2"/>
<text x="18.14" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-58119.map] (89 samples, 0.07%)</title><rect x="120.07485380116965" y="1573" width="0.937218045112782" height="15.0" fill="rgb(228,79,6)" rx="2" ry="2" _orig_x="134.4" _orig_width="0.9"/>
<text x="123.07485380116965" y="1583.5" _orig_x="137.38"/>
</g>
<g class="hide">
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues (397 samples, 0.33%)</title><rect x="216.08763575605684" y="1749" width="4.165413533834586" height="15.0" fill="rgb(238,103,19)" rx="2" ry="2" _orig_x="226.6" _orig_width="4.0"/>
<text x="219.08763575605684" y="1759.5" _orig_x="229.64"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (1,102 samples, 0.93%)</title><rect x="186.2007936507937" y="1509" width="11.454887218045112" height="15.0" fill="rgb(228,117,40)" rx="2" ry="2" _orig_x="197.9" _orig_width="11.0"/>
<text x="189.2007936507937" y="1519.5" _orig_x="200.92"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,468 samples, 2.08%)</title><rect x="965.9774436090224" y="1845" width="60.380116959064324" height="15.0" fill="rgb(221,96,3)" rx="2" ry="2" _orig_x="756.9" _orig_width="24.5"/>
<text x="968.9774436090224" y="1855.5" _orig_x="759.92">std::u..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (41 samples, 0.03%)</title><rect x="300.3174603174603" y="1845" width="0.985797827903091" height="15.0" fill="rgb(250,190,42)" rx="2" ry="2" _orig_x="486.8" _orig_width="0.4"/>
<text x="303.3174603174603" y="1855.5" _orig_x="489.83"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (29 samples, 0.02%)</title><rect x="458.7844611528823" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(215,196,35)" rx="2" ry="2" _orig_x="551.1" _orig_width="0.3"/>
<text x="461.7844611528823" y="1727.5" _orig_x="554.08"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (38 samples, 0.03%)</title><rect x="991.8546365914787" y="1749" width="0.985797827903091" height="15.0" fill="rgb(239,66,45)" rx="2" ry="2" _orig_x="767.4" _orig_width="0.4"/>
<text x="994.8546365914787" y="1759.5" _orig_x="770.45"/>
</g>
<g>
<title>std::_Destroy&lt;Field**&gt; (19 samples, 0.02%)</title><rect x="1143.6675020885548" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(238,20,37)" rx="2" ry="2" _orig_x="829.0" _orig_width="0.2"/>
<text x="1146.6675020885548" y="1855.5" _orig_x="831.98"/>
</g>
<g class="hide">
<title>[chrome] (51 samples, 0.04%)</title><rect x="11.5" y="1893" width="0.5" height="15.0" fill="rgb(214,58,23)" rx="2" ry="2"/>
<text x="14.46" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="124.13613199665838" y="1173" width="0.31240601503759396" height="15.0" fill="rgb(212,30,32)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1183.5" _orig_x="141.34"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="821" width="0.31240601503759396" height="15.0" fill="rgb(239,142,44)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="831.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>nv_queue (14 samples, 0.01%)</title><rect x="896.9" y="2069" width="0.1" height="15.0" fill="rgb(236,190,9)" rx="2" ry="2"/>
<text x="899.90" y="2079.5"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="313.3792815371763" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(240,215,46)" rx="2" ry="2" _orig_x="492.1" _orig_width="0.1"/>
<text x="316.3792815371763" y="1711.5" _orig_x="495.09"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="39.0" y="2053" width="0.1" height="15.0" fill="rgb(209,17,48)" rx="2" ry="2"/>
<text x="41.98" y="2063.5"/>
</g>
<g class="hide">
<title>blink::(anonymous namespace)::EndOfTaskRunner::WillProcessTask (20 samples, 0.02%)</title><rect x="221.08613199665837" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(237,86,29)" rx="2" ry="2" _orig_x="231.4" _orig_width="0.2"/>
<text x="224.08613199665837" y="1759.5" _orig_x="234.36"/>
</g>
<g class="hide">
<title>ppoll (394 samples, 0.33%)</title><rect x="61.863199665831296" y="2021" width="4.061278195488722" height="15.0" fill="rgb(206,135,9)" rx="2" ry="2" _orig_x="78.5" _orig_width="3.9"/>
<text x="64.8631996658313" y="2031.5" _orig_x="81.49"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="245" width="0.31240601503759396" height="15.0" fill="rgb(239,4,19)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="255.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>runtime.goexit.abi0 (65 samples, 0.05%)</title><rect x="278.5" y="2053" width="0.7" height="15.0" fill="rgb(216,218,34)" rx="2" ry="2"/>
<text x="281.53" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(217,45,38)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1471.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="132.36282372598166" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(247,71,26)" rx="2" ry="2" _orig_x="146.2" _orig_width="0.3"/>
<text x="135.36282372598166" y="1823.5" _orig_x="149.16"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="661" width="0.31240601503759396" height="15.0" fill="rgb(243,187,22)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="671.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="613" width="0.31240601503759396" height="15.0" fill="rgb(248,118,18)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="623.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>_nv023484rm (11 samples, 0.01%)</title><rect x="1183.4" y="2053" width="0.1" height="15.0" fill="rgb(219,174,29)" rx="2" ry="2"/>
<text x="1186.39" y="2063.5"/>
</g>
<g class="hide">
<title>log_flusher (12 samples, 0.01%)</title><rect x="326.88763575605685" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(248,9,31)" rx="2" ry="2" _orig_x="333.0" _orig_width="0.2"/>
<text x="329.88763575605685" y="1983.5" _orig_x="336.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (581 samples, 0.49%)</title><rect x="148.08725981620725" y="1909" width="6.03984962406015" height="15.0" fill="rgb(217,52,23)" rx="2" ry="2" _orig_x="161.3" _orig_width="5.8"/>
<text x="151.08725981620725" y="1919.5" _orig_x="164.34"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (15 samples, 0.01%)</title><rect x="135.19632414369258" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(212,80,38)" rx="2" ry="2" _orig_x="419.8" _orig_width="0.2"/>
<text x="138.19632414369258" y="1743.5" _orig_x="422.84"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (685 samples, 0.58%)</title><rect x="507.08855472013374" y="1797" width="16.758563074352548" height="15.0" fill="rgb(221,31,15)" rx="2" ry="2" _orig_x="570.7" _orig_width="6.8"/>
<text x="510.08855472013374" y="1807.5" _orig_x="573.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (11 samples, 0.01%)</title><rect x="915.4553049289891" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(239,187,48)" rx="2" ry="2" _orig_x="736.4" _orig_width="0.1"/>
<text x="918.4553049289891" y="1775.5" _orig_x="739.44"/>
</g>
<g class="hide">
<title>__libc_sendmsg (48 samples, 0.04%)</title><rect x="21.7" y="2037" width="0.5" height="15.0" fill="rgb(249,177,25)" rx="2" ry="2"/>
<text x="24.74" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="132.46695906432757" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(243,180,12)" rx="2" ry="2" _orig_x="146.3" _orig_width="0.2"/>
<text x="135.46695906432757" y="1775.5" _orig_x="149.34"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="341" width="0.31240601503759396" height="15.0" fill="rgb(228,114,54)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="351.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>v8::internal::compiler::Reducer::Reduce (28 samples, 0.02%)</title><rect x="31.97635756056814" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(251,118,8)" rx="2" ry="2" _orig_x="49.8" _orig_width="0.3"/>
<text x="34.97635756056814" y="1775.5" _orig_x="52.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.07%)</title><rect x="52.17861319966589" y="1893" width="0.8330827067669173" height="15.0" fill="rgb(217,88,46)" rx="2" ry="2" _orig_x="69.2" _orig_width="0.8"/>
<text x="55.17861319966589" y="1903.5" _orig_x="72.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="238.78913951545536" y="1813" width="0.41654135338345866" height="15.0" fill="rgb(232,29,27)" rx="2" ry="2" _orig_x="248.4" _orig_width="0.4"/>
<text x="241.78913951545536" y="1823.5" _orig_x="251.41"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (15 samples, 0.01%)</title><rect x="927.2848788638263" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(218,216,14)" rx="2" ry="2" _orig_x="741.2" _orig_width="0.1"/>
<text x="930.2848788638263" y="1727.5" _orig_x="744.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="19.7" y="1685" width="0.1" height="15.0" fill="rgb(254,148,6)" rx="2" ry="2"/>
<text x="22.69" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (148 samples, 0.12%)</title><rect x="98.20643274853808" y="1941" width="1.5620300751879699" height="15.0" fill="rgb(224,156,25)" rx="2" ry="2" _orig_x="113.4" _orig_width="1.5"/>
<text x="101.20643274853808" y="1951.5" _orig_x="116.45"/>
</g>
<g class="hide">
<title>[perf-58119.map] (375 samples, 0.32%)</title><rect x="114.03500417710949" y="1541" width="3.8530075187969928" height="15.0" fill="rgb(253,33,47)" rx="2" ry="2" _orig_x="128.6" _orig_width="3.7"/>
<text x="117.03500417710949" y="1551.5" _orig_x="131.56"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (64 samples, 0.05%)</title><rect x="397.91144527986626" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(213,116,3)" rx="2" ry="2" _orig_x="526.4" _orig_width="0.6"/>
<text x="400.91144527986626" y="1759.5" _orig_x="529.38"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (23 samples, 0.02%)</title><rect x="971.6457811194654" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(209,54,43)" rx="2" ry="2" _orig_x="759.2" _orig_width="0.3"/>
<text x="974.6457811194654" y="1775.5" _orig_x="762.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="353.23387635756063" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(244,114,36)" rx="2" ry="2" _orig_x="358.3" _orig_width="0.3"/>
<text x="356.23387635756063" y="1919.5" _orig_x="361.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="29.060568086883933" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(236,73,10)" rx="2" ry="2" _orig_x="47.0" _orig_width="0.1"/>
<text x="32.06056808688393" y="1903.5" _orig_x="49.95"/>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="114.5556808688388" y="1461" width="0.10413533834586466" height="15.0" fill="rgb(206,72,35)" rx="2" ry="2" _orig_x="129.1" _orig_width="0.1"/>
<text x="117.5556808688388" y="1471.5" _orig_x="132.08"/>
</g>
<g class="hide">
<title>runtime.schedule (49 samples, 0.04%)</title><rect x="270.2380116959065" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(213,130,16)" rx="2" ry="2" _orig_x="278.6" _orig_width="0.5"/>
<text x="273.2380116959065" y="1967.5" _orig_x="281.59"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::allocate (17 samples, 0.01%)</title><rect x="828.2121971595654" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(228,61,13)" rx="2" ry="2" _orig_x="701.0" _orig_width="0.2"/>
<text x="831.2121971595654" y="1743.5" _orig_x="704.04"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (145 samples, 0.12%)</title><rect x="898.4502923976607" y="1861" width="3.4502923976608186" height="15.0" fill="rgb(214,60,47)" rx="2" ry="2" _orig_x="729.5" _orig_width="1.4"/>
<text x="901.4502923976607" y="1871.5" _orig_x="732.46"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="292.10643274853805" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(226,149,16)" rx="2" ry="2" _orig_x="299.6" _orig_width="0.1"/>
<text x="295.10643274853805" y="2031.5" _orig_x="302.60"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field const&amp;&gt; (11 samples, 0.01%)</title><rect x="1182.1136173767754" y="1941" width="0.24644945697577275" height="15.0" fill="rgb(244,120,41)" rx="2" ry="2" _orig_x="844.6" _orig_width="0.1"/>
<text x="1185.1136173767754" y="1951.5" _orig_x="847.59"/>
</g>
<g>
<title>Field::Field (20 samples, 0.02%)</title><rect x="326.19465329991647" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(207,185,9)" rx="2" ry="2" _orig_x="497.3" _orig_width="0.2"/>
<text x="329.19465329991647" y="1855.5" _orig_x="500.32"/>
</g>
<g class="hide">
<title>[code] (39 samples, 0.03%)</title><rect x="99.14365079365085" y="1445" width="0.41654135338345866" height="15.0" fill="rgb(230,45,15)" rx="2" ry="2" _orig_x="114.3" _orig_width="0.4"/>
<text x="102.14365079365085" y="1455.5" _orig_x="117.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="53" width="0.20827067669172933" height="15.0" fill="rgb(250,187,35)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="63.5" _orig_x="71.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (20 samples, 0.02%)</title><rect x="67.9156223893066" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(239,187,23)" rx="2" ry="2" _orig_x="392.5" _orig_width="0.2"/>
<text x="70.9156223893066" y="1791.5" _orig_x="395.46"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (26 samples, 0.02%)</title><rect x="148.50459482038426" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(253,37,12)" rx="2" ry="2" _orig_x="425.2" _orig_width="0.3"/>
<text x="151.50459482038426" y="1807.5" _orig_x="428.23"/>
</g>
<g class="hide">
<title>[perf-32996.map] (72 samples, 0.06%)</title><rect x="17.7" y="1493" width="0.7" height="15.0" fill="rgb(246,0,40)" rx="2" ry="2"/>
<text x="20.71" y="1503.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="153.91883876357565" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(231,135,5)" rx="2" ry="2" _orig_x="166.9" _orig_width="0.2"/>
<text x="156.91883876357565" y="1647.5" _orig_x="169.95"/>
</g>
<g class="hide">
<title>[chrome] (13 samples, 0.01%)</title><rect x="14.2" y="1813" width="0.2" height="15.0" fill="rgb(211,210,42)" rx="2" ry="2"/>
<text x="17.23" y="1823.5"/>
</g>
<g>
<title>Row::GetField (14 samples, 0.01%)</title><rect x="749.1019214703424" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(249,147,0)" rx="2" ry="2" _orig_x="668.9" _orig_width="0.1"/>
<text x="752.1019214703424" y="1887.5" _orig_x="671.85"/>
</g>
<g>
<title>CatalogManager::GetTable (45 samples, 0.04%)</title><rect x="1159.193817878028" y="1957" width="1.2322472848788637" height="15.0" fill="rgb(231,206,37)" rx="2" ry="2" _orig_x="835.3" _orig_width="0.5"/>
<text x="1162.193817878028" y="1967.5" _orig_x="838.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="117" width="0.20827067669172933" height="15.0" fill="rgb(211,82,15)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="127.5" _orig_x="71.64"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (14 samples, 0.01%)</title><rect x="1009.5989974937344" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(223,99,22)" rx="2" ry="2" _orig_x="774.6" _orig_width="0.2"/>
<text x="1012.5989974937344" y="1759.5" _orig_x="777.63"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="469" width="0.31240601503759396" height="15.0" fill="rgb(219,37,17)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="479.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[perf-58119.map] (15 samples, 0.01%)</title><rect x="112.36883876357565" y="1509" width="0.10413533834586466" height="15.0" fill="rgb(215,70,42)" rx="2" ry="2" _orig_x="127.0" _orig_width="0.1"/>
<text x="115.36883876357565" y="1519.5" _orig_x="129.95"/>
</g>
<g class="hide">
<title>epoll_wait (38 samples, 0.03%)</title><rect x="145.17147034252304" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(212,75,17)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="2031.5" _orig_x="161.46"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="832.155388471178" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(205,163,33)" rx="2" ry="2" _orig_x="702.6" _orig_width="0.1"/>
<text x="835.155388471178" y="1775.5" _orig_x="705.56"/>
</g>
<g class="hide">
<title>v8::Function::Call (88 samples, 0.07%)</title><rect x="18.4" y="1781" width="0.9" height="15.0" fill="rgb(245,221,28)" rx="2" ry="2"/>
<text x="21.42" y="1791.5"/>
</g>
<g>
<title>std::forward&lt;void*&amp;&gt; (18 samples, 0.02%)</title><rect x="997.2765246449457" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(230,156,23)" rx="2" ry="2" _orig_x="769.6" _orig_width="0.2"/>
<text x="1000.2765246449457" y="1791.5" _orig_x="772.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (342 samples, 0.29%)</title><rect x="702.7694235588973" y="1781" width="8.379281537176274" height="15.0" fill="rgb(217,164,45)" rx="2" ry="2" _orig_x="650.1" _orig_width="3.4"/>
<text x="705.7694235588973" y="1791.5" _orig_x="653.15"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (12 samples, 0.01%)</title><rect x="304.26065162907264" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(251,89,43)" rx="2" ry="2" _orig_x="488.4" _orig_width="0.1"/>
<text x="307.26065162907264" y="1823.5" _orig_x="491.43"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (33 samples, 0.03%)</title><rect x="158.3625730994152" y="1701" width="0.7393483709273182" height="15.0" fill="rgb(251,91,25)" rx="2" ry="2" _orig_x="429.2" _orig_width="0.3"/>
<text x="161.3625730994152" y="1711.5" _orig_x="432.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="15.106432748538069" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(222,126,12)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1951.5" _orig_x="36.58"/>
</g>
<g class="hide">
<title>[perf-58119.map] (81 samples, 0.07%)</title><rect x="120.17898913951551" y="1541" width="0.8330827067669173" height="15.0" fill="rgb(229,47,3)" rx="2" ry="2" _orig_x="134.5" _orig_width="0.8"/>
<text x="123.17898913951551" y="1551.5" _orig_x="137.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="28.956432748538067" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(225,72,41)" rx="2" ry="2" _orig_x="46.9" _orig_width="0.2"/>
<text x="31.956432748538067" y="1919.5" _orig_x="49.93"/>
</g>
<g class="hide">
<title>[code] (1,213 samples, 1.02%)</title><rect x="109.34891395154558" y="1877" width="12.496240601503759" height="15.0" fill="rgb(208,111,14)" rx="2" ry="2" _orig_x="124.1" _orig_width="12.0"/>
<text x="112.34891395154558" y="1887.5" _orig_x="127.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="322.930492898914" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(236,146,21)" rx="2" ry="2" _orig_x="329.2" _orig_width="0.2"/>
<text x="325.930492898914" y="1935.5" _orig_x="332.20"/>
</g>
<g class="hide">
<title>[code] (95 samples, 0.08%)</title><rect x="98.62297410192151" y="1733" width="1.0413533834586466" height="15.0" fill="rgb(241,109,11)" rx="2" ry="2" _orig_x="113.8" _orig_width="1.0"/>
<text x="101.62297410192151" y="1743.5" _orig_x="116.83"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (59 samples, 0.05%)</title><rect x="606.1612364243942" y="1765" width="1.4786967418546364" height="15.0" fill="rgb(216,38,18)" rx="2" ry="2" _orig_x="610.9" _orig_width="0.6"/>
<text x="609.1612364243942" y="1775.5" _orig_x="613.91"/>
</g>
<g class="hide">
<title>[libxul.so] (100 samples, 0.08%)</title><rect x="25.6" y="2053" width="1.0" height="15.0" fill="rgb(244,85,49)" rx="2" ry="2"/>
<text x="28.61" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (113 samples, 0.10%)</title><rect x="12.2" y="1925" width="1.1" height="15.0" fill="rgb(217,32,37)" rx="2" ry="2"/>
<text x="15.19" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="28.459687123946942" y="1877" width="0.2366626554352186" height="15.0" fill="rgb(220,153,46)" rx="2" ry="2" _orig_x="368.9" _orig_width="0.1"/>
<text x="31.459687123946942" y="1887.5" _orig_x="371.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="327.09590643274856" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(248,165,24)" rx="2" ry="2" _orig_x="333.2" _orig_width="0.2"/>
<text x="330.09590643274856" y="2015.5" _orig_x="336.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="1180.7" y="1637" width="0.9" height="15.0" fill="rgb(208,132,2)" rx="2" ry="2"/>
<text x="1183.74" y="1647.5"/>
</g>
<g class="hide">
<title>[perf-9366.map] (14 samples, 0.01%)</title><rect x="10.628613199665887" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(217,179,40)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1887.5" _orig_x="32.32"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::operator[] (22 samples, 0.02%)</title><rect x="1092.406015037594" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(234,101,8)" rx="2" ry="2" _orig_x="808.2" _orig_width="0.2"/>
<text x="1095.406015037594" y="1887.5" _orig_x="811.23"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (30 samples, 0.03%)</title><rect x="103.89724310776948" y="1669" width="0.7393483709273182" height="15.0" fill="rgb(230,122,11)" rx="2" ry="2" _orig_x="407.1" _orig_width="0.3"/>
<text x="106.89724310776948" y="1679.5" _orig_x="410.12"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="501" width="0.31240601503759396" height="15.0" fill="rgb(210,190,22)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="511.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="321.4725981620719" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(241,39,38)" rx="2" ry="2" _orig_x="327.8" _orig_width="0.3"/>
<text x="324.4725981620719" y="1903.5" _orig_x="330.82"/>
</g>
<g>
<title>Field::IsNull (17 samples, 0.01%)</title><rect x="953.1620718462824" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(235,59,30)" rx="2" ry="2" _orig_x="751.7" _orig_width="0.2"/>
<text x="956.1620718462824" y="1871.5" _orig_x="754.71"/>
</g>
<g class="hide">
<title>[[vdso]] (14 samples, 0.01%)</title><rect x="30.622598162071903" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(215,89,38)" rx="2" ry="2" _orig_x="48.5" _orig_width="0.2"/>
<text x="33.6225981620719" y="2047.5" _orig_x="51.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.10%)</title><rect x="897.2368838763576" y="1797" width="1.1454887218045113" height="15.0" fill="rgb(216,13,50)" rx="2" ry="2" _orig_x="880.7" _orig_width="1.1"/>
<text x="900.2368838763576" y="1807.5" _orig_x="883.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.4" y="1893" width="0.2" height="15.0" fill="rgb(227,129,1)" rx="2" ry="2"/>
<text x="18.43" y="1903.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (830 samples, 0.70%)</title><rect x="411.46616541353376" y="1829" width="20.208855472013365" height="15.0" fill="rgb(220,211,2)" rx="2" ry="2" _orig_x="531.9" _orig_width="8.2"/>
<text x="414.46616541353376" y="1839.5" _orig_x="534.89"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1573" width="0.31240601503759396" height="15.0" fill="rgb(251,85,30)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1583.5" _orig_x="99.72"/>
</g>
<g>
<title>Field::CheckComparable (14 samples, 0.01%)</title><rect x="955.6265664160402" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(246,50,22)" rx="2" ry="2" _orig_x="752.7" _orig_width="0.2"/>
<text x="958.6265664160402" y="1871.5" _orig_x="755.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="346.36094402673353" y="1893" width="0.6248120300751879" height="15.0" fill="rgb(225,141,32)" rx="2" ry="2" _orig_x="351.7" _orig_width="0.6"/>
<text x="349.36094402673353" y="1903.5" _orig_x="354.67"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (16 samples, 0.01%)</title><rect x="394.4611528822055" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(215,18,11)" rx="2" ry="2" _orig_x="525.0" _orig_width="0.2"/>
<text x="397.4611528822055" y="1743.5" _orig_x="527.99"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="309" width="0.20827067669172933" height="15.0" fill="rgb(209,184,23)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="319.5" _orig_x="328.48"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (22 samples, 0.02%)</title><rect x="882.6775271512114" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(222,32,52)" rx="2" ry="2" _orig_x="723.1" _orig_width="0.2"/>
<text x="885.6775271512114" y="1759.5" _orig_x="726.09"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (13 samples, 0.01%)</title><rect x="480.718462823726" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(247,98,39)" rx="2" ry="2" _orig_x="560.0" _orig_width="0.2"/>
<text x="483.718462823726" y="1775.5" _orig_x="563.04"/>
</g>
<g class="hide">
<title>gaea::base::BlockingQueue&lt;std::shared_ptr&lt;gaea::base::AsyncTask&gt; &gt;::WaitFor&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (17 samples, 0.01%)</title><rect x="245.1413951545531" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(236,26,29)" rx="2" ry="2" _orig_x="254.5" _orig_width="0.2"/>
<text x="248.1413951545531" y="2047.5" _orig_x="257.51"/>
</g>
<g class="hide">
<title>[code] (26 samples, 0.02%)</title><rect x="14.7" y="1877" width="0.2" height="15.0" fill="rgb(248,94,26)" rx="2" ry="2"/>
<text x="17.67" y="1887.5"/>
</g>
<g class="hide">
<title>runtime.mcall (50 samples, 0.04%)</title><rect x="270.2380116959065" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(240,63,43)" rx="2" ry="2" _orig_x="278.6" _orig_width="0.5"/>
<text x="273.2380116959065" y="1999.5" _orig_x="281.58"/>
</g>
<g class="hide">
<title>blink::StringTraits&lt;WTF::AtomicString&gt;::FromV8String&lt;blink::V8StringOneByteTrait&gt; (65 samples, 0.05%)</title><rect x="196.30192147034256" y="1445" width="0.6248120300751879" height="15.0" fill="rgb(205,219,42)" rx="2" ry="2" _orig_x="207.6" _orig_width="0.6"/>
<text x="199.30192147034256" y="1455.5" _orig_x="210.59"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(219,39,21)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1727.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="904.9428989139516" y="1957" width="0.937218045112782" height="15.0" fill="rgb(235,182,49)" rx="2" ry="2" _orig_x="888.1" _orig_width="0.9"/>
<text x="907.9428989139516" y="1967.5" _orig_x="891.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.08%)</title><rect x="904.8387635756058" y="2005" width="1.0413533834586466" height="15.0" fill="rgb(254,43,21)" rx="2" ry="2" _orig_x="888.0" _orig_width="1.0"/>
<text x="907.8387635756058" y="2015.5" _orig_x="890.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (495 samples, 0.42%)</title><rect x="582.2556390977445" y="1765" width="12.076023391812864" height="15.0" fill="rgb(235,133,35)" rx="2" ry="2" _orig_x="601.2" _orig_width="4.9"/>
<text x="585.2556390977445" y="1775.5" _orig_x="604.16"/>
</g>
<g>
<title>operator new (12 samples, 0.01%)</title><rect x="132.48538011695905" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(225,102,48)" rx="2" ry="2" _orig_x="418.7" _orig_width="0.1"/>
<text x="135.48538011695905" y="1743.5" _orig_x="421.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="37" width="0.20827067669172933" height="15.0" fill="rgb(249,176,14)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="47.5" _orig_x="71.25"/>
</g>
<g>
<title>Type::GetTypeSize (11 samples, 0.01%)</title><rect x="449.66583124477853" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(233,178,34)" rx="2" ry="2" _orig_x="547.4" _orig_width="0.1"/>
<text x="452.66583124477853" y="1823.5" _orig_x="550.38"/>
</g>
<g>
<title>yyparse (107 samples, 0.09%)</title><rect x="1186.5497076023391" y="1989" width="2.7109440267335008" height="15.0" fill="rgb(213,86,15)" rx="2" ry="2" _orig_x="846.4" _orig_width="1.1"/>
<text x="1189.5497076023391" y="1999.5" _orig_x="849.42"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (445 samples, 0.37%)</title><rect x="40.4" y="2053" width="4.4" height="15.0" fill="rgb(244,55,6)" rx="2" ry="2"/>
<text x="43.38" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (127 samples, 0.11%)</title><rect x="739.9832915622391" y="1797" width="2.957393483709273" height="15.0" fill="rgb(251,152,46)" rx="2" ry="2" _orig_x="665.2" _orig_width="1.2"/>
<text x="742.9832915622391" y="1807.5" _orig_x="668.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.07%)</title><rect x="352.60906432748544" y="2005" width="0.937218045112782" height="15.0" fill="rgb(206,217,48)" rx="2" ry="2" _orig_x="357.7" _orig_width="0.9"/>
<text x="355.60906432748544" y="2015.5" _orig_x="360.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="327.51244778613204" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(231,39,18)" rx="2" ry="2" _orig_x="333.6" _orig_width="0.1"/>
<text x="330.51244778613204" y="2015.5" _orig_x="336.55"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (724 samples, 0.61%)</title><rect x="629.8203842940685" y="1797" width="17.74436090225564" height="15.0" fill="rgb(210,135,3)" rx="2" ry="2" _orig_x="620.5" _orig_width="7.2"/>
<text x="632.8203842940685" y="1807.5" _orig_x="623.54"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (170 samples, 0.14%)</title><rect x="342.46031746031736" y="1717" width="4.189640768588137" height="15.0" fill="rgb(210,35,2)" rx="2" ry="2" _orig_x="503.9" _orig_width="1.7"/>
<text x="345.46031746031736" y="1727.5" _orig_x="506.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="13.1" y="1829" width="0.2" height="15.0" fill="rgb(217,216,13)" rx="2" ry="2"/>
<text x="16.06" y="1839.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (13 samples, 0.01%)</title><rect x="1053.7134502923975" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(226,120,14)" rx="2" ry="2" _orig_x="792.5" _orig_width="0.1"/>
<text x="1056.7134502923975" y="1839.5" _orig_x="795.46"/>
</g>
<g class="hide">
<title>perf_mmap__push (1,263 samples, 1.06%)</title><rect x="915.5647034252297" y="1973" width="13.016917293233082" height="15.0" fill="rgb(218,166,51)" rx="2" ry="2" _orig_x="898.3" _orig_width="12.5"/>
<text x="918.5647034252297" y="1983.5" _orig_x="901.27"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (24 samples, 0.02%)</title><rect x="826.487050960735" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(239,222,30)" rx="2" ry="2" _orig_x="700.3" _orig_width="0.2"/>
<text x="829.487050960735" y="1759.5" _orig_x="703.30"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="545.78111946533" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(225,0,14)" rx="2" ry="2" _orig_x="586.4" _orig_width="0.2"/>
<text x="548.78111946533" y="1759.5" _orig_x="589.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="25.2" y="2005" width="0.2" height="15.0" fill="rgb(243,26,19)" rx="2" ry="2"/>
<text x="28.22" y="2015.5"/>
</g>
<g class="hide">
<title>QDBusConnection (13 samples, 0.01%)</title><rect x="39.0" y="2069" width="0.1" height="15.0" fill="rgb(250,195,28)" rx="2" ry="2"/>
<text x="41.98" y="2079.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (22 samples, 0.02%)</title><rect x="632.2848788638262" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(243,134,29)" rx="2" ry="2" _orig_x="621.5" _orig_width="0.2"/>
<text x="635.2848788638262" y="1791.5" _orig_x="624.52"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (36 samples, 0.03%)</title><rect x="1001.9590643274853" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(247,21,48)" rx="2" ry="2" _orig_x="771.5" _orig_width="0.3"/>
<text x="1004.9590643274853" y="1775.5" _orig_x="774.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (97 samples, 0.08%)</title><rect x="163.29156223893062" y="1829" width="2.4644945697577274" height="15.0" fill="rgb(222,82,27)" rx="2" ry="2" _orig_x="431.2" _orig_width="1.0"/>
<text x="166.29156223893062" y="1839.5" _orig_x="434.23"/>
</g>
<g class="hide">
<title>Napi::String::Utf8Value (11 samples, 0.01%)</title><rect x="124.76094402673355" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(226,40,9)" rx="2" ry="2" _orig_x="138.9" _orig_width="0.1"/>
<text x="127.76094402673355" y="1903.5" _orig_x="141.89"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (16 samples, 0.01%)</title><rect x="493.78028404344184" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(244,131,51)" rx="2" ry="2" _orig_x="565.3" _orig_width="0.1"/>
<text x="496.78028404344184" y="1775.5" _orig_x="568.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="355.8372598162072" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(250,167,36)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1823.5" _orig_x="363.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (46 samples, 0.04%)</title><rect x="254.97076023391807" y="1749" width="0.985797827903091" height="15.0" fill="rgb(219,26,43)" rx="2" ry="2" _orig_x="468.4" _orig_width="0.4"/>
<text x="257.9707602339181" y="1759.5" _orig_x="471.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="161.4165831244779" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(211,142,24)" rx="2" ry="2" _orig_x="174.1" _orig_width="0.1"/>
<text x="164.4165831244779" y="1775.5" _orig_x="177.05"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (24 samples, 0.02%)</title><rect x="660.3801169590643" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(227,68,50)" rx="2" ry="2" _orig_x="632.9" _orig_width="0.2"/>
<text x="663.3801169590643" y="1791.5" _orig_x="635.85"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::destroy&lt;void*&gt; (15 samples, 0.01%)</title><rect x="553.1746031746031" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(240,98,49)" rx="2" ry="2" _orig_x="589.4" _orig_width="0.2"/>
<text x="556.1746031746031" y="1743.5" _orig_x="592.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="43.74365079365085" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(252,228,5)" rx="2" ry="2" _orig_x="61.1" _orig_width="0.2"/>
<text x="46.74365079365085" y="2015.5" _orig_x="64.07"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (26 samples, 0.02%)</title><rect x="854.3358395989975" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(232,163,38)" rx="2" ry="2" _orig_x="711.6" _orig_width="0.3"/>
<text x="857.3358395989975" y="1775.5" _orig_x="714.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (12 samples, 0.01%)</title><rect x="1181.1278195488721" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(206,110,47)" rx="2" ry="2" _orig_x="844.2" _orig_width="0.1"/>
<text x="1184.1278195488721" y="1903.5" _orig_x="847.23"/>
</g>
<g class="hide">
<title>[perf-58119.map] (14 samples, 0.01%)</title><rect x="112.57710944026739" y="1509" width="0.10413533834586466" height="15.0" fill="rgb(206,220,12)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1519.5" _orig_x="130.19"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (16 samples, 0.01%)</title><rect x="1133.3166248955722" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(234,7,30)" rx="2" ry="2" _orig_x="824.8" _orig_width="0.2"/>
<text x="1136.3166248955722" y="1791.5" _orig_x="827.80"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="933" width="0.31240601503759396" height="15.0" fill="rgb(246,137,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="943.5" _orig_x="48.87"/>
</g>
<g>
<title>Field::CompareGreaterThan (56 samples, 0.05%)</title><rect x="952.4227234753549" y="1893" width="1.4786967418546364" height="15.0" fill="rgb(231,125,41)" rx="2" ry="2" _orig_x="751.4" _orig_width="0.6"/>
<text x="955.4227234753549" y="1903.5" _orig_x="754.41"/>
</g>
<g class="hide">
<title>[unknown] (361 samples, 0.30%)</title><rect x="49.36695906432754" y="2021" width="3.748872180451128" height="15.0" fill="rgb(252,116,0)" rx="2" ry="2" _orig_x="66.5" _orig_width="3.6"/>
<text x="52.36695906432754" y="2031.5" _orig_x="69.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="308.45568086883884" y="1973" width="0.6248120300751879" height="15.0" fill="rgb(224,117,28)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="1983.5" _orig_x="318.31"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (16 samples, 0.01%)</title><rect x="929.9958228905596" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(249,130,44)" rx="2" ry="2" _orig_x="742.3" _orig_width="0.1"/>
<text x="932.9958228905596" y="1775.5" _orig_x="745.27"/>
</g>
<g class="hide">
<title>[code] (49 samples, 0.04%)</title><rect x="12.5" y="1845" width="0.5" height="15.0" fill="rgb(215,128,15)" rx="2" ry="2"/>
<text x="15.50" y="1855.5"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="345.17126148705097" y="1669" width="0.24644945697577275" height="15.0" fill="rgb(234,171,35)" rx="2" ry="2" _orig_x="505.0" _orig_width="0.1"/>
<text x="348.17126148705097" y="1679.5" _orig_x="507.99"/>
</g>
<g class="hide">
<title>WTF::AtomicStringTable::Add (33 samples, 0.03%)</title><rect x="196.40605680868842" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(215,126,14)" rx="2" ry="2" _orig_x="207.7" _orig_width="0.3"/>
<text x="199.40605680868842" y="1423.5" _orig_x="210.68"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="725" width="0.31240601503759396" height="15.0" fill="rgb(206,225,31)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="735.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (38 samples, 0.03%)</title><rect x="1149.0893901420218" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(214,163,49)" rx="2" ry="2" _orig_x="831.2" _orig_width="0.3"/>
<text x="1152.0893901420218" y="1855.5" _orig_x="834.17"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1525" width="0.31240601503759396" height="15.0" fill="rgb(220,216,18)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1535.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-32884.map] (53 samples, 0.04%)</title><rect x="99.03951545530498" y="1477" width="0.6248120300751879" height="15.0" fill="rgb(220,85,43)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1487.5" _orig_x="117.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="97.68575605680874" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(219,150,40)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="1967.5" _orig_x="115.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="16.0" y="1941" width="0.2" height="15.0" fill="rgb(245,18,37)" rx="2" ry="2"/>
<text x="18.98" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(222,44,3)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1711.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="328.34553049289894" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(249,212,24)" rx="2" ry="2" _orig_x="334.4" _orig_width="0.6"/>
<text x="331.34553049289894" y="2015.5" _orig_x="337.44"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="1189.1" y="2053" width="0.2" height="15.0" fill="rgb(251,168,22)" rx="2" ry="2"/>
<text x="1192.11" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="323.5553049289892" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(220,21,15)" rx="2" ry="2" _orig_x="329.8" _orig_width="0.2"/>
<text x="326.5553049289892" y="1967.5" _orig_x="332.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="11.2" y="1989" width="0.2" height="15.0" fill="rgb(242,88,17)" rx="2" ry="2"/>
<text x="14.20" y="1999.5"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="356.7543859649122" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(239,140,19)" rx="2" ry="2" _orig_x="509.7" _orig_width="0.1"/>
<text x="359.7543859649122" y="1759.5" _orig_x="512.65"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (18 samples, 0.02%)</title><rect x="1131.0985797827902" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(216,113,24)" rx="2" ry="2" _orig_x="823.9" _orig_width="0.2"/>
<text x="1134.0985797827902" y="1743.5" _orig_x="826.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="84.5647034252298" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(250,162,12)" rx="2" ry="2" _orig_x="100.3" _orig_width="0.5"/>
<text x="87.5647034252298" y="1999.5" _orig_x="103.33"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (16 samples, 0.01%)</title><rect x="86.39933166248956" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(251,45,53)" rx="2" ry="2" _orig_x="400.0" _orig_width="0.1"/>
<text x="89.39933166248956" y="1823.5" _orig_x="402.98"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; const&amp;&gt; (27 samples, 0.02%)</title><rect x="1162.6441102756894" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(217,11,44)" rx="2" ry="2" _orig_x="836.7" _orig_width="0.2"/>
<text x="1165.6441102756894" y="1887.5" _orig_x="839.68"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (19 samples, 0.02%)</title><rect x="990.8688387635755" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(222,194,11)" rx="2" ry="2" _orig_x="767.0" _orig_width="0.2"/>
<text x="993.8688387635755" y="1743.5" _orig_x="770.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="326.78350041771097" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(225,91,37)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="2031.5" _orig_x="335.88"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (20 samples, 0.02%)</title><rect x="709.1771094402674" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(235,55,46)" rx="2" ry="2" _orig_x="652.7" _orig_width="0.2"/>
<text x="712.1771094402674" y="1743.5" _orig_x="655.75"/>
</g>
<g class="hide">
<title>[perf-58145.map] (160 samples, 0.13%)</title><rect x="127.15605680868843" y="1573" width="1.5620300751879699" height="15.0" fill="rgb(217,34,50)" rx="2" ry="2" _orig_x="141.2" _orig_width="1.5"/>
<text x="130.15605680868845" y="1583.5" _orig_x="144.16"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (26 samples, 0.02%)</title><rect x="291.8" y="2053" width="0.2" height="15.0" fill="rgb(248,229,14)" rx="2" ry="2"/>
<text x="294.77" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (932 samples, 0.78%)</title><rect x="627.3558897243107" y="1813" width="22.67335004177109" height="15.0" fill="rgb(205,10,37)" rx="2" ry="2" _orig_x="619.5" _orig_width="9.2"/>
<text x="630.3558897243107" y="1823.5" _orig_x="622.49">s..</text>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue (301 samples, 0.25%)</title><rect x="216.71244778613203" y="1733" width="3.1240601503759398" height="15.0" fill="rgb(249,62,28)" rx="2" ry="2" _orig_x="227.2" _orig_width="3.0"/>
<text x="219.71244778613203" y="1743.5" _orig_x="230.19"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, DBStorageEngine*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt; &gt;::operator[] (20 samples, 0.02%)</title><rect x="1184.578111946533" y="1973" width="0.4928989139515455" height="15.0" fill="rgb(227,57,24)" rx="2" ry="2" _orig_x="845.6" _orig_width="0.2"/>
<text x="1187.578111946533" y="1983.5" _orig_x="848.64"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (21 samples, 0.02%)</title><rect x="26.019214703425227" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(232,145,10)" rx="2" ry="2" _orig_x="375.5" _orig_width="0.2"/>
<text x="29.019214703425227" y="1711.5" _orig_x="378.51"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (340 samples, 0.29%)</title><rect x="1124.937343358396" y="1781" width="8.379281537176274" height="15.0" fill="rgb(237,204,36)" rx="2" ry="2" _orig_x="821.4" _orig_width="3.4"/>
<text x="1127.937343358396" y="1791.5" _orig_x="824.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="131.321470342523" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(253,229,51)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1871.5" _orig_x="148.19"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (38 samples, 0.03%)</title><rect x="35.13784461152879" y="1717" width="0.985797827903091" height="15.0" fill="rgb(239,116,36)" rx="2" ry="2" _orig_x="379.2" _orig_width="0.4"/>
<text x="38.13784461152879" y="1727.5" _orig_x="382.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="355.1083124477862" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(249,47,10)" rx="2" ry="2" _orig_x="360.1" _orig_width="0.4"/>
<text x="358.1083124477862" y="2031.5" _orig_x="363.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="320.53538011695906" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(219,183,43)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1887.5" _orig_x="329.85"/>
</g>
<g class="hide">
<title>base::RunLoop::Run (12 samples, 0.01%)</title><rect x="15.1" y="2005" width="0.2" height="15.0" fill="rgb(247,30,40)" rx="2" ry="2"/>
<text x="18.14" y="2015.5"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::CopyTracedGlobal (20 samples, 0.02%)</title><rect x="189.22071846282378" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(240,16,28)" rx="2" ry="2" _orig_x="200.8" _orig_width="0.2"/>
<text x="192.22071846282378" y="1439.5" _orig_x="203.79"/>
</g>
<g class="hide">
<title>[libst-1.0.so] (16 samples, 0.01%)</title><rect x="296.4801169590644" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(213,6,26)" rx="2" ry="2" _orig_x="303.8" _orig_width="0.2"/>
<text x="299.4801169590644" y="2015.5" _orig_x="306.81"/>
</g>
<g>
<title>Row::GetField (25 samples, 0.02%)</title><rect x="651.7543859649122" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(245,165,14)" rx="2" ry="2" _orig_x="629.4" _orig_width="0.3"/>
<text x="654.7543859649122" y="1871.5" _orig_x="632.44"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (135 samples, 0.11%)</title><rect x="151.95488721804517" y="1765" width="3.4502923976608186" height="15.0" fill="rgb(210,23,2)" rx="2" ry="2" _orig_x="426.6" _orig_width="1.4"/>
<text x="154.95488721804517" y="1775.5" _orig_x="429.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="108.30756056808693" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(210,181,46)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="1983.5" _orig_x="126.14"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (11 samples, 0.01%)</title><rect x="777.1971595655805" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(244,89,12)" rx="2" ry="2" _orig_x="680.3" _orig_width="0.1"/>
<text x="780.1971595655805" y="1839.5" _orig_x="683.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="55.61507936507942" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(218,175,18)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="2015.5" _orig_x="75.46"/>
</g>
<g>
<title>malloc (14 samples, 0.01%)</title><rect x="1063.5714285714287" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(232,158,33)" rx="2" ry="2" _orig_x="796.5" _orig_width="0.1"/>
<text x="1066.5714285714287" y="1791.5" _orig_x="799.50"/>
</g>
<g class="hide">
<title>QGIFFormat::decode (78 samples, 0.07%)</title><rect x="226.60530492898917" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(215,3,45)" rx="2" ry="2" _orig_x="236.7" _orig_width="0.8"/>
<text x="229.60530492898917" y="2047.5" _orig_x="239.70"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (36 samples, 0.03%)</title><rect x="701.5371762740184" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(224,49,5)" rx="2" ry="2" _orig_x="649.6" _orig_width="0.3"/>
<text x="704.5371762740184" y="1775.5" _orig_x="652.57"/>
</g>
<g>
<title>Row::Row (131 samples, 0.11%)</title><rect x="298.0994152046783" y="1861" width="3.2038429406850457" height="15.0" fill="rgb(228,177,33)" rx="2" ry="2" _orig_x="485.9" _orig_width="1.3"/>
<text x="301.0994152046783" y="1871.5" _orig_x="488.94"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="556.1319966583125" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(226,69,10)" rx="2" ry="2" _orig_x="590.6" _orig_width="0.2"/>
<text x="559.1319966583125" y="1839.5" _orig_x="593.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="73.31808688387642" y="1941" width="0.8330827067669173" height="15.0" fill="rgb(206,48,9)" rx="2" ry="2" _orig_x="89.5" _orig_width="0.8"/>
<text x="76.31808688387642" y="1951.5" _orig_x="92.50"/>
</g>
<g>
<title>std::vector&lt;IndexInfo*, std::allocator&lt;IndexInfo*&gt; &gt;::push_back (19 samples, 0.02%)</title><rect x="1165.3550543024226" y="1941" width="0.4928989139515455" height="15.0" fill="rgb(241,160,25)" rx="2" ry="2" _orig_x="837.8" _orig_width="0.2"/>
<text x="1168.3550543024226" y="1951.5" _orig_x="840.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="271.9041771094403" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(218,201,32)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1807.5" _orig_x="283.23"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (332 samples, 0.28%)</title><rect x="177.83208020050128" y="1749" width="8.132832080200501" height="15.0" fill="rgb(214,94,37)" rx="2" ry="2" _orig_x="437.1" _orig_width="3.3"/>
<text x="180.83208020050128" y="1759.5" _orig_x="440.10"/>
</g>
<g>
<title>_int_free (14 samples, 0.01%)</title><rect x="500.43441938178773" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(249,96,4)" rx="2" ry="2" _orig_x="568.0" _orig_width="0.1"/>
<text x="503.43441938178773" y="1839.5" _orig_x="570.98"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (161 samples, 0.14%)</title><rect x="923.5881370091897" y="1749" width="3.943191311612364" height="15.0" fill="rgb(206,223,42)" rx="2" ry="2" _orig_x="739.7" _orig_width="1.6"/>
<text x="926.5881370091897" y="1759.5" _orig_x="742.71"/>
</g>
<g class="hide">
<title>[unknown] (129 samples, 0.11%)</title><rect x="49.679365079365134" y="133" width="1.3537593984962406" height="15.0" fill="rgb(219,220,27)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.3"/>
<text x="52.679365079365134" y="143.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="197.9680868838764" y="1509" width="0.10413533834586466" height="15.0" fill="rgb(220,62,51)" rx="2" ry="2" _orig_x="209.2" _orig_width="0.1"/>
<text x="200.9680868838764" y="1519.5" _orig_x="212.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="16.2" y="2037" width="0.1" height="15.0" fill="rgb(238,92,36)" rx="2" ry="2"/>
<text x="19.18" y="2047.5"/>
</g>
<g class="hide">
<title>blink::MessageEvent::Create (177 samples, 0.15%)</title><rect x="187.9710944026734" y="1461" width="1.874436090225564" height="15.0" fill="rgb(219,14,5)" rx="2" ry="2" _orig_x="199.6" _orig_width="1.8"/>
<text x="190.9710944026734" y="1471.5" _orig_x="202.60"/>
</g>
<g class="hide">
<title>crashpad::AnnotationList::Register (11 samples, 0.01%)</title><rect x="219.5241019214704" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(243,161,32)" rx="2" ry="2" _orig_x="229.9" _orig_width="0.1"/>
<text x="222.5241019214704" y="1711.5" _orig_x="232.94"/>
</g>
<g class="hide">
<title>base::ThreadLocalStorage::Slot::Get (13 samples, 0.01%)</title><rect x="173.39214703425233" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(250,145,28)" rx="2" ry="2" _orig_x="185.6" _orig_width="0.1"/>
<text x="176.39214703425233" y="1791.5" _orig_x="188.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (548 samples, 0.46%)</title><rect x="247.22410192147038" y="1957" width="5.623308270676692" height="15.0" fill="rgb(213,199,19)" rx="2" ry="2" _orig_x="256.5" _orig_width="5.4"/>
<text x="250.22410192147038" y="1967.5" _orig_x="259.45"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="30.93500417710949" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(254,167,1)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1935.5" _orig_x="51.77"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(239,145,26)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1455.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>azx_get_pos_fifo (67 samples, 0.06%)</title><rect x="68.31959064327492" y="1845" width="0.7289473684210526" height="15.0" fill="rgb(213,205,45)" rx="2" ry="2" _orig_x="84.7" _orig_width="0.7"/>
<text x="71.31959064327492" y="1855.5" _orig_x="87.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="132.5710944026734" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(241,158,17)" rx="2" ry="2" _orig_x="146.4" _orig_width="0.1"/>
<text x="135.5710944026734" y="1759.5" _orig_x="149.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="933.3718462823726" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(212,26,7)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1999.5" _orig_x="918.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="141.4225981620719" y="1909" width="1.0413533834586466" height="15.0" fill="rgb(248,109,14)" rx="2" ry="2" _orig_x="154.9" _orig_width="1.0"/>
<text x="144.4225981620719" y="1919.5" _orig_x="157.93"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="949" width="0.20827067669172933" height="15.0" fill="rgb(235,63,51)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="959.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>blink::scheduler::FrameSchedulerImpl::GetAgentClusterId (15 samples, 0.01%)</title><rect x="221.8150793650794" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(220,15,54)" rx="2" ry="2" _orig_x="232.1" _orig_width="0.2"/>
<text x="224.8150793650794" y="1727.5" _orig_x="235.13"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (38 samples, 0.03%)</title><rect x="282.8383876357561" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(252,131,8)" rx="2" ry="2" _orig_x="290.7" _orig_width="0.4"/>
<text x="285.8383876357561" y="1887.5" _orig_x="293.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="161.2083124477862" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(225,48,3)" rx="2" ry="2" _orig_x="173.9" _orig_width="0.3"/>
<text x="164.2083124477862" y="1807.5" _orig_x="176.91"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (153 samples, 0.13%)</title><rect x="27.497911445279918" y="1717" width="3.6967418546365916" height="15.0" fill="rgb(250,50,12)" rx="2" ry="2" _orig_x="376.1" _orig_width="1.5"/>
<text x="30.497911445279918" y="1727.5" _orig_x="379.06"/>
</g>
<g class="hide">
<title>client_ding::MainContextImpl::GetDownloadPath (75 samples, 0.06%)</title><rect x="243.0586883876358" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(209,193,51)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="2047.5" _orig_x="255.52"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::allocate (20 samples, 0.02%)</title><rect x="1000.9732664995823" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(251,85,1)" rx="2" ry="2" _orig_x="771.1" _orig_width="0.2"/>
<text x="1003.9732664995823" y="1775.5" _orig_x="774.07"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (18 samples, 0.02%)</title><rect x="1149.3358395989972" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(253,40,44)" rx="2" ry="2" _orig_x="831.3" _orig_width="0.1"/>
<text x="1152.3358395989972" y="1839.5" _orig_x="834.25"/>
</g>
<g class="hide">
<title>[code] (372 samples, 0.31%)</title><rect x="125.4898913951546" y="1941" width="3.748872180451128" height="15.0" fill="rgb(231,211,44)" rx="2" ry="2" _orig_x="139.6" _orig_width="3.6"/>
<text x="128.4898913951546" y="1951.5" _orig_x="142.55"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (19 samples, 0.02%)</title><rect x="1145.3926482873853" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(246,202,49)" rx="2" ry="2" _orig_x="829.7" _orig_width="0.2"/>
<text x="1148.3926482873853" y="1871.5" _orig_x="832.67"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (87 samples, 0.07%)</title><rect x="272.7151211361738" y="1829" width="2.218045112781955" height="15.0" fill="rgb(232,44,13)" rx="2" ry="2" _orig_x="475.6" _orig_width="0.9"/>
<text x="275.7151211361738" y="1839.5" _orig_x="478.60"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTask (95 samples, 0.08%)</title><rect x="166.5192147034253" y="1797" width="0.937218045112782" height="15.0" fill="rgb(229,217,16)" rx="2" ry="2" _orig_x="179.0" _orig_width="0.9"/>
<text x="169.5192147034253" y="1807.5" _orig_x="181.96"/>
</g>
<g>
<title>Type::GetTypeSize (12 samples, 0.01%)</title><rect x="329.89139515455304" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(224,95,28)" rx="2" ry="2" _orig_x="498.8" _orig_width="0.1"/>
<text x="332.89139515455304" y="1823.5" _orig_x="501.81"/>
</g>
<g class="hide">
<title>Builtins_JSEntryTrampoline (144 samples, 0.12%)</title><rect x="163.60342522974105" y="1605" width="1.4578947368421051" height="15.0" fill="rgb(235,47,10)" rx="2" ry="2" _orig_x="176.2" _orig_width="1.4"/>
<text x="166.60342522974105" y="1615.5" _orig_x="179.22"/>
</g>
<g>
<title>malloc (21 samples, 0.02%)</title><rect x="1007.3809523809525" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(231,80,19)" rx="2" ry="2" _orig_x="773.7" _orig_width="0.2"/>
<text x="1010.3809523809525" y="1759.5" _orig_x="776.69"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (29 samples, 0.02%)</title><rect x="287.74853801169587" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(222,128,40)" rx="2" ry="2" _orig_x="481.7" _orig_width="0.3"/>
<text x="290.74853801169587" y="1791.5" _orig_x="484.75"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (26 samples, 0.02%)</title><rect x="372.2807017543859" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(236,142,54)" rx="2" ry="2" _orig_x="516.0" _orig_width="0.3"/>
<text x="375.2807017543859" y="1807.5" _orig_x="519.00"/>
</g>
<g class="hide">
<title>[perf-58119.map] (428 samples, 0.36%)</title><rect x="113.41019214703431" y="1589" width="4.47781954887218" height="15.0" fill="rgb(240,45,11)" rx="2" ry="2" _orig_x="128.0" _orig_width="4.3"/>
<text x="116.41019214703431" y="1599.5" _orig_x="131.03"/>
</g>
<g>
<title>Schema::GetColumn (18 samples, 0.02%)</title><rect x="330.63074352548045" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(238,40,24)" rx="2" ry="2" _orig_x="499.1" _orig_width="0.2"/>
<text x="333.63074352548045" y="1839.5" _orig_x="502.08"/>
</g>
<g class="hide">
<title>[perf-33014.map] (49 samples, 0.04%)</title><rect x="129.75944026733504" y="1861" width="0.41654135338345866" height="15.0" fill="rgb(232,2,23)" rx="2" ry="2" _orig_x="143.7" _orig_width="0.4"/>
<text x="132.75944026733504" y="1871.5" _orig_x="146.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(244,35,21)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1983.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>[perf-32884.map] (59 samples, 0.05%)</title><rect x="99.03951545530498" y="1557" width="0.6248120300751879" height="15.0" fill="rgb(223,211,45)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1567.5" _orig_x="117.18"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1957" width="12.912781954887219" height="15.0" fill="rgb(218,0,48)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1967.5" _orig_x="126.94"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1509" width="0.31240601503759396" height="15.0" fill="rgb(253,117,7)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1519.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="271.9041771094403" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(242,23,40)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1903.5" _orig_x="283.16"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Insert (70 samples, 0.06%)</title><rect x="774.4862155388472" y="1909" width="1.7251461988304093" height="15.0" fill="rgb(213,85,25)" rx="2" ry="2" _orig_x="679.2" _orig_width="0.7"/>
<text x="777.4862155388472" y="1919.5" _orig_x="682.24"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="709" width="0.31240601503759396" height="15.0" fill="rgb(207,25,16)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="719.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>base::Histogram::bucket_count (13 samples, 0.01%)</title><rect x="211.60981620718468" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(240,205,12)" rx="2" ry="2" _orig_x="222.3" _orig_width="0.1"/>
<text x="214.60981620718468" y="1679.5" _orig_x="225.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="934.1007936507937" y="1973" width="0.6248120300751879" height="15.0" fill="rgb(238,31,30)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="1983.5" _orig_x="919.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="96.74853801169596" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(247,145,10)" rx="2" ry="2" _orig_x="112.0" _orig_width="0.3"/>
<text x="99.74853801169596" y="1887.5" _orig_x="115.01"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (15 samples, 0.01%)</title><rect x="399.63659147869674" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(219,58,49)" rx="2" ry="2" _orig_x="527.1" _orig_width="0.1"/>
<text x="402.63659147869674" y="1791.5" _orig_x="530.07"/>
</g>
<g class="hide">
<title>nvkms_alloc (13 samples, 0.01%)</title><rect x="302.10342522974105" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(217,96,9)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="2015.5" _orig_x="312.17"/>
</g>
<g>
<title>Schema::GetColumn (22 samples, 0.02%)</title><rect x="964.7451963241435" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(218,11,53)" rx="2" ry="2" _orig_x="756.4" _orig_width="0.2"/>
<text x="967.7451963241435" y="1871.5" _orig_x="759.42"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (16 samples, 0.01%)</title><rect x="144.80785296574766" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(242,121,5)" rx="2" ry="2" _orig_x="423.7" _orig_width="0.2"/>
<text x="147.80785296574766" y="1775.5" _orig_x="426.74"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (11 samples, 0.01%)</title><rect x="656.4369256474517" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(243,92,32)" rx="2" ry="2" _orig_x="631.3" _orig_width="0.1"/>
<text x="659.4369256474517" y="1807.5" _orig_x="634.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (346 samples, 0.29%)</title><rect x="310.0177109440268" y="1989" width="3.5406015037593983" height="15.0" fill="rgb(243,63,34)" rx="2" ry="2" _orig_x="316.8" _orig_width="3.4"/>
<text x="313.0177109440268" y="1999.5" _orig_x="319.80"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (17 samples, 0.01%)</title><rect x="893.7677527151212" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(242,20,40)" rx="2" ry="2" _orig_x="727.6" _orig_width="0.1"/>
<text x="896.7677527151212" y="1807.5" _orig_x="730.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="66.65342522974106" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(225,139,34)" rx="2" ry="2" _orig_x="83.1" _orig_width="0.3"/>
<text x="69.65342522974106" y="1951.5" _orig_x="86.12"/>
</g>
<g class="hide">
<title>[ntfs-3g] (70 samples, 0.06%)</title><rect x="884.8447786131997" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(234,109,14)" rx="2" ry="2" _orig_x="868.8" _orig_width="0.7"/>
<text x="887.8447786131997" y="2031.5" _orig_x="871.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="21.4" y="1877" width="0.3" height="15.0" fill="rgb(216,135,47)" rx="2" ry="2"/>
<text x="24.44" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-58119.map] (43 samples, 0.04%)</title><rect x="117.99214703425235" y="1525" width="0.41654135338345866" height="15.0" fill="rgb(213,29,25)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1535.5" _orig_x="135.41"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1493" width="2.2909774436090227" height="15.0" fill="rgb(229,116,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1503.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (199 samples, 0.17%)</title><rect x="142.98462823725987" y="1957" width="2.082706766917293" height="15.0" fill="rgb(237,22,15)" rx="2" ry="2" _orig_x="156.4" _orig_width="2.0"/>
<text x="145.98462823725987" y="1967.5" _orig_x="159.42"/>
</g>
<g class="hide">
<title>blink::WorldSafeV8Reference&lt;v8::Value&gt;::Set (12 samples, 0.01%)</title><rect x="189.1165831244779" y="1429" width="0.10413533834586466" height="15.0" fill="rgb(232,73,10)" rx="2" ry="2" _orig_x="200.7" _orig_width="0.1"/>
<text x="192.1165831244779" y="1439.5" _orig_x="203.67"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="165" width="0.20827067669172933" height="15.0" fill="rgb(212,118,1)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="175.5" _orig_x="32.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (930 samples, 0.78%)</title><rect x="380.16708437761076" y="1829" width="22.91979949874687" height="15.0" fill="rgb(205,7,42)" rx="2" ry="2" _orig_x="519.2" _orig_width="9.3"/>
<text x="383.16708437761076" y="1839.5" _orig_x="522.25">s..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (71 samples, 0.06%)</title><rect x="743.6800334168756" y="1781" width="1.7251461988304093" height="15.0" fill="rgb(242,88,49)" rx="2" ry="2" _orig_x="666.7" _orig_width="0.7"/>
<text x="746.6800334168756" y="1791.5" _orig_x="669.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.03%)</title><rect x="96.6444026733501" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(222,27,22)" rx="2" ry="2" _orig_x="111.9" _orig_width="0.4"/>
<text x="99.6444026733501" y="1919.5" _orig_x="114.89"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (117 samples, 0.10%)</title><rect x="1155.9899749373433" y="1925" width="2.957393483709273" height="15.0" fill="rgb(245,56,42)" rx="2" ry="2" _orig_x="834.0" _orig_width="1.2"/>
<text x="1158.9899749373433" y="1935.5" _orig_x="837.00"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork (22 samples, 0.02%)</title><rect x="225.25154553049296" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(251,33,34)" rx="2" ry="2" _orig_x="235.4" _orig_width="0.2"/>
<text x="228.25154553049296" y="1807.5" _orig_x="238.37"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::unordered_map (60 samples, 0.05%)</title><rect x="1162.3976608187133" y="1941" width="1.4786967418546364" height="15.0" fill="rgb(217,132,47)" rx="2" ry="2" _orig_x="836.6" _orig_width="0.6"/>
<text x="1165.3976608187133" y="1951.5" _orig_x="839.57"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (59 samples, 0.05%)</title><rect x="520.8897243107767" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(220,90,40)" rx="2" ry="2" _orig_x="576.3" _orig_width="0.6"/>
<text x="523.8897243107767" y="1759.5" _orig_x="579.30"/>
</g>
<g class="hide">
<title>[code] (65 samples, 0.05%)</title><rect x="17.7" y="1429" width="0.7" height="15.0" fill="rgb(221,221,32)" rx="2" ry="2"/>
<text x="20.74" y="1439.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1317" width="0.31240601503759396" height="15.0" fill="rgb(245,67,2)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1327.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="83.1068086883877" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(218,196,8)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1903.5" _orig_x="101.89"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="99.8725981620719" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(225,194,0)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1855.5" _orig_x="118.02"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::KeyIndex (70 samples, 0.06%)</title><rect x="776.2113617376774" y="1909" width="1.7251461988304093" height="15.0" fill="rgb(205,13,21)" rx="2" ry="2" _orig_x="679.9" _orig_width="0.7"/>
<text x="779.2113617376774" y="1919.5" _orig_x="682.94"/>
</g>
<g class="hide">
<title>[perf-58145.map] (13 samples, 0.01%)</title><rect x="125.80229741019221" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(232,131,9)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1663.5" _orig_x="142.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="929.5188387635757" y="1685" width="0.8330827067669173" height="15.0" fill="rgb(219,103,28)" rx="2" ry="2" _orig_x="911.7" _orig_width="0.8"/>
<text x="932.5188387635757" y="1695.5" _orig_x="914.71"/>
</g>
<g>
<title>operator new (12 samples, 0.01%)</title><rect x="297.3600668337511" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(248,225,9)" rx="2" ry="2" _orig_x="485.6" _orig_width="0.1"/>
<text x="300.3600668337511" y="1855.5" _orig_x="488.58"/>
</g>
<g class="hide">
<title>__xstat64 (242 samples, 0.20%)</title><rect x="239.830492898914" y="2037" width="2.4992481203007517" height="15.0" fill="rgb(218,219,43)" rx="2" ry="2" _orig_x="249.4" _orig_width="2.4"/>
<text x="242.830492898914" y="2047.5" _orig_x="252.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (433 samples, 0.36%)</title><rect x="887.4481620718462" y="1861" width="4.47781954887218" height="15.0" fill="rgb(228,107,18)" rx="2" ry="2" _orig_x="871.3" _orig_width="4.3"/>
<text x="890.4481620718462" y="1871.5" _orig_x="874.28"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (15 samples, 0.01%)</title><rect x="118.68421052631582" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(221,56,10)" rx="2" ry="2" _orig_x="413.1" _orig_width="0.2"/>
<text x="121.68421052631582" y="1743.5" _orig_x="416.12"/>
</g>
<g class="hide">
<title>g_socket_receive_message (27 samples, 0.02%)</title><rect x="276.06959064327486" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(238,47,25)" rx="2" ry="2" _orig_x="284.2" _orig_width="0.3"/>
<text x="279.06959064327486" y="2015.5" _orig_x="287.21"/>
</g>
<g class="hide">
<title>malloc (22 samples, 0.02%)</title><rect x="321.8" y="2053" width="0.2" height="15.0" fill="rgb(253,67,31)" rx="2" ry="2"/>
<text x="324.75" y="2063.5"/>
</g>
<g class="hide">
<title>blink::ToExecutionContext (63 samples, 0.05%)</title><rect x="177.86996658312452" y="1637" width="0.6248120300751879" height="15.0" fill="rgb(223,120,30)" rx="2" ry="2" _orig_x="189.9" _orig_width="0.6"/>
<text x="180.86996658312452" y="1647.5" _orig_x="192.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (43 samples, 0.04%)</title><rect x="146.04010025062652" y="1829" width="0.985797827903091" height="15.0" fill="rgb(214,225,10)" rx="2" ry="2" _orig_x="424.2" _orig_width="0.4"/>
<text x="149.04010025062652" y="1839.5" _orig_x="427.17"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (11 samples, 0.01%)</title><rect x="388.0534670008353" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(228,123,39)" rx="2" ry="2" _orig_x="522.4" _orig_width="0.1"/>
<text x="391.0534670008353" y="1759.5" _orig_x="525.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (329 samples, 0.28%)</title><rect x="345.7" y="2053" width="3.3" height="15.0" fill="rgb(207,27,12)" rx="2" ry="2"/>
<text x="348.70" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (44 samples, 0.04%)</title><rect x="223.17878028404343" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(209,123,12)" rx="2" ry="2" _orig_x="455.5" _orig_width="0.5"/>
<text x="226.17878028404343" y="1823.5" _orig_x="458.54"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="167.48120300751873" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(214,193,46)" rx="2" ry="2" _orig_x="432.9" _orig_width="0.1"/>
<text x="170.48120300751873" y="1871.5" _orig_x="435.87"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (160 samples, 0.13%)</title><rect x="844.4778613199666" y="1845" width="3.943191311612364" height="15.0" fill="rgb(251,46,22)" rx="2" ry="2" _orig_x="707.6" _orig_width="1.6"/>
<text x="847.4778613199666" y="1855.5" _orig_x="710.56"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="373" width="2.2909774436090227" height="15.0" fill="rgb(250,172,32)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="383.5" _orig_x="69.82"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (13 samples, 0.01%)</title><rect x="131.25313283208015" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(252,32,23)" rx="2" ry="2" _orig_x="418.2" _orig_width="0.2"/>
<text x="134.25313283208015" y="1775.5" _orig_x="421.23"/>
</g>
<g class="hide">
<title>[perf-58157.map] (129 samples, 0.11%)</title><rect x="123.30304928989145" y="1637" width="1.3537593984962406" height="15.0" fill="rgb(236,192,29)" rx="2" ry="2" _orig_x="137.5" _orig_width="1.3"/>
<text x="126.30304928989145" y="1647.5" _orig_x="140.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (121 samples, 0.10%)</title><rect x="706.219715956558" y="1733" width="2.957393483709273" height="15.0" fill="rgb(241,173,3)" rx="2" ry="2" _orig_x="651.5" _orig_width="1.2"/>
<text x="709.219715956558" y="1743.5" _orig_x="654.47"/>
</g>
<g>
<title>malloc (19 samples, 0.02%)</title><rect x="941.578947368421" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(230,16,36)" rx="2" ry="2" _orig_x="747.0" _orig_width="0.2"/>
<text x="944.578947368421" y="1887.5" _orig_x="750.02"/>
</g>
<g class="hide">
<title>[[vdso]] (49 samples, 0.04%)</title><rect x="94.76996658312453" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(218,191,16)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="2047.5" _orig_x="113.07"/>
</g>
<g>
<title>TypeInt::CompareLessThan (12 samples, 0.01%)</title><rect x="246.59147869674183" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(241,81,30)" rx="2" ry="2" _orig_x="465.0" _orig_width="0.1"/>
<text x="249.59147869674183" y="1855.5" _orig_x="468.03"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="332.0" y="2053" width="0.1" height="15.0" fill="rgb(245,161,52)" rx="2" ry="2"/>
<text x="334.99" y="2063.5"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (11 samples, 0.01%)</title><rect x="293.9097744360902" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(209,219,4)" rx="2" ry="2" _orig_x="484.2" _orig_width="0.1"/>
<text x="296.9097744360902" y="1743.5" _orig_x="487.15"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (11 samples, 0.01%)</title><rect x="638.4461152882205" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(219,102,47)" rx="2" ry="2" _orig_x="624.0" _orig_width="0.1"/>
<text x="641.4461152882205" y="1775.5" _orig_x="626.96"/>
</g>
<g class="hide">
<title>__libc_read (621 samples, 0.52%)</title><rect x="892.0301169590645" y="2021" width="6.352255639097744" height="15.0" fill="rgb(208,36,25)" rx="2" ry="2" _orig_x="875.7" _orig_width="6.1"/>
<text x="895.0301169590645" y="2031.5" _orig_x="878.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.08%)</title><rect x="904.8387635756058" y="1973" width="1.0413533834586466" height="15.0" fill="rgb(222,129,35)" rx="2" ry="2" _orig_x="888.0" _orig_width="1.0"/>
<text x="907.8387635756058" y="1983.5" _orig_x="891.05"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1365" width="2.2909774436090227" height="15.0" fill="rgb(254,125,15)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1375.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>v8::Function::Call (118 samples, 0.10%)</title><rect x="17.3" y="1765" width="1.1" height="15.0" fill="rgb(237,198,50)" rx="2" ry="2"/>
<text x="20.25" y="1775.5"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (14 samples, 0.01%)</title><rect x="308.94319131161234" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(221,158,27)" rx="2" ry="2" _orig_x="490.3" _orig_width="0.1"/>
<text x="311.94319131161234" y="1743.5" _orig_x="493.29"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (60 samples, 0.05%)</title><rect x="891.5497076023393" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(225,115,3)" rx="2" ry="2" _orig_x="726.7" _orig_width="0.6"/>
<text x="894.5497076023393" y="1823.5" _orig_x="729.68"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (29 samples, 0.02%)</title><rect x="1108.9181286549706" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(208,120,32)" rx="2" ry="2" _orig_x="814.9" _orig_width="0.3"/>
<text x="1111.9181286549706" y="1855.5" _orig_x="817.89"/>
</g>
<g class="hide">
<title>[code] (220 samples, 0.19%)</title><rect x="119.45004177109446" y="1829" width="2.2909774436090227" height="15.0" fill="rgb(230,126,26)" rx="2" ry="2" _orig_x="133.8" _orig_width="2.2"/>
<text x="122.45004177109446" y="1839.5" _orig_x="136.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="97.68575605680874" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(241,156,48)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="2031.5" _orig_x="115.89"/>
</g>
<g class="hide">
<title>[unknown] (236 samples, 0.20%)</title><rect x="49.57522974101927" y="1957" width="2.3951127819548867" height="15.0" fill="rgb(246,204,14)" rx="2" ry="2" _orig_x="66.7" _orig_width="2.3"/>
<text x="52.57522974101927" y="1967.5" _orig_x="69.68"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="229" width="0.31240601503759396" height="15.0" fill="rgb(210,38,18)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="239.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>kworker/9:3-eve (33 samples, 0.03%)</title><rect x="360.1" y="2069" width="0.4" height="15.0" fill="rgb(247,26,17)" rx="2" ry="2"/>
<text x="363.13" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="41.34853801169596" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(225,146,48)" rx="2" ry="2" _orig_x="58.8" _orig_width="0.3"/>
<text x="44.34853801169596" y="1999.5" _orig_x="61.84"/>
</g>
<g class="hide">
<title>v8::internal::LookupIterator::Key::Key (25 samples, 0.02%)</title><rect x="195.0522974101922" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(220,173,3)" rx="2" ry="2" _orig_x="206.4" _orig_width="0.3"/>
<text x="198.0522974101922" y="1407.5" _orig_x="209.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="82.79440267335009" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(224,15,11)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="2031.5" _orig_x="101.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="20.1" y="1989" width="0.2" height="15.0" fill="rgb(226,214,38)" rx="2" ry="2"/>
<text x="23.12" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="1957" width="1.5" height="15.0" fill="rgb(210,225,42)" rx="2" ry="2"/>
<text x="15.14" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="613" width="0.31240601503759396" height="15.0" fill="rgb(224,18,34)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="623.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="94.76996658312453" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(223,176,35)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="2015.5" _orig_x="113.08"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(205,130,52)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1471.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[vdso]] (42 samples, 0.04%)</title><rect x="10.8" y="2037" width="0.4" height="15.0" fill="rgb(227,132,15)" rx="2" ry="2"/>
<text x="13.76" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (17 samples, 0.01%)</title><rect x="662.5981620718461" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(254,94,17)" rx="2" ry="2" _orig_x="633.8" _orig_width="0.2"/>
<text x="665.5981620718461" y="1791.5" _orig_x="636.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (13 samples, 0.01%)</title><rect x="73.83040935672508" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(237,35,24)" rx="2" ry="2" _orig_x="394.9" _orig_width="0.2"/>
<text x="76.83040935672508" y="1791.5" _orig_x="397.93"/>
</g>
<g class="hide">
<title>blink::ToBlinkString&lt;WTF::String&gt; (11 samples, 0.01%)</title><rect x="190.99101921470347" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(222,75,3)" rx="2" ry="2" _orig_x="202.5" _orig_width="0.2"/>
<text x="193.99101921470347" y="1439.5" _orig_x="205.54"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,454 samples, 1.22%)</title><rect x="331.12364243943193" y="1829" width="35.48872180451128" height="15.0" fill="rgb(224,193,22)" rx="2" ry="2" _orig_x="499.3" _orig_width="14.4"/>
<text x="334.12364243943193" y="1839.5" _orig_x="502.25">Si..</text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (16 samples, 0.01%)</title><rect x="222.19298245614038" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(253,80,34)" rx="2" ry="2" _orig_x="455.1" _orig_width="0.1"/>
<text x="225.19298245614038" y="1759.5" _orig_x="458.07"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (345 samples, 0.29%)</title><rect x="490.57644110275686" y="1813" width="8.379281537176274" height="15.0" fill="rgb(248,175,25)" rx="2" ry="2" _orig_x="564.0" _orig_width="3.4"/>
<text x="493.57644110275686" y="1823.5" _orig_x="566.98"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (25 samples, 0.02%)</title><rect x="677.8780284043441" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(205,108,51)" rx="2" ry="2" _orig_x="640.0" _orig_width="0.2"/>
<text x="680.8780284043441" y="1775.5" _orig_x="642.96"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (52 samples, 0.04%)</title><rect x="804.5530492898912" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(208,5,43)" rx="2" ry="2" _orig_x="691.4" _orig_width="0.6"/>
<text x="807.5530492898912" y="1759.5" _orig_x="694.45"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="821" width="0.31240601503759396" height="15.0" fill="rgb(247,77,5)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="831.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (14 samples, 0.01%)</title><rect x="831.4160401002505" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(223,116,11)" rx="2" ry="2" _orig_x="702.3" _orig_width="0.2"/>
<text x="834.4160401002505" y="1775.5" _orig_x="705.33"/>
</g>
<g class="hide">
<title>__poll (22 samples, 0.02%)</title><rect x="911.6075605680869" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(243,105,23)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="2047.5" _orig_x="897.47"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="437" width="0.31240601503759396" height="15.0" fill="rgb(242,58,44)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="447.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17,013 samples, 14.31%)</title><rect x="987.2098162071846" y="1941" width="175.78045112781956" height="15.0" fill="rgb(254,122,52)" rx="2" ry="2" _orig_x="967.1" _orig_width="168.8"/>
<text x="990.2098162071846" y="1951.5" _orig_x="970.08">[[kernel.kallsyms]] </text>
</g>
<g>
<title>Row::Row (122 samples, 0.10%)</title><rect x="749.3483709273182" y="1877" width="2.957393483709273" height="15.0" fill="rgb(244,75,14)" rx="2" ry="2" _orig_x="669.0" _orig_width="1.2"/>
<text x="752.3483709273182" y="1887.5" _orig_x="671.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="131.21733500417716" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(241,123,47)" rx="2" ry="2" _orig_x="145.1" _orig_width="0.3"/>
<text x="134.21733500417716" y="1919.5" _orig_x="148.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (346 samples, 0.29%)</title><rect x="894.8417710944027" y="1861" width="3.5406015037593983" height="15.0" fill="rgb(223,86,0)" rx="2" ry="2" _orig_x="878.4" _orig_width="3.4"/>
<text x="897.8417710944027" y="1871.5" _orig_x="881.40"/>
</g>
<g class="hide">
<title>QTimer::timeout (21 samples, 0.02%)</title><rect x="230.56244778613205" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(223,214,16)" rx="2" ry="2" _orig_x="240.5" _orig_width="0.2"/>
<text x="233.56244778613205" y="1999.5" _orig_x="243.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="934.3090643274853" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(243,171,8)" rx="2" ry="2" _orig_x="916.3" _orig_width="0.4"/>
<text x="937.3090643274853" y="1887.5" _orig_x="919.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="354.90004177109444" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(234,140,49)" rx="2" ry="2" _orig_x="359.9" _orig_width="0.2"/>
<text x="357.90004177109444" y="1919.5" _orig_x="362.88"/>
</g>
<g>
<title>Schema::GetColumnCount (14 samples, 0.01%)</title><rect x="686.2573099415204" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(248,159,38)" rx="2" ry="2" _orig_x="643.4" _orig_width="0.2"/>
<text x="689.2573099415204" y="1871.5" _orig_x="646.42"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (82 samples, 0.07%)</title><rect x="143.82205513784461" y="1829" width="1.971595655806182" height="15.0" fill="rgb(251,202,7)" rx="2" ry="2" _orig_x="423.3" _orig_width="0.8"/>
<text x="146.82205513784461" y="1839.5" _orig_x="426.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="130.8007936507937" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(216,78,44)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1439.5" _orig_x="147.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="344.79891395154556" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(223,215,37)" rx="2" ry="2" _orig_x="350.2" _orig_width="0.3"/>
<text x="347.79891395154556" y="1935.5" _orig_x="353.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.05%)</title><rect x="914.4192147034253" y="1877" width="0.6248120300751879" height="15.0" fill="rgb(225,41,5)" rx="2" ry="2" _orig_x="897.2" _orig_width="0.6"/>
<text x="917.4192147034253" y="1887.5" _orig_x="900.22"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (19 samples, 0.02%)</title><rect x="513.0033416875523" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(224,205,31)" rx="2" ry="2" _orig_x="573.1" _orig_width="0.2"/>
<text x="516.0033416875523" y="1775.5" _orig_x="576.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (715 samples, 0.60%)</title><rect x="100.91395154553055" y="2021" width="7.39360902255639" height="15.0" fill="rgb(242,107,18)" rx="2" ry="2" _orig_x="116.0" _orig_width="7.1"/>
<text x="103.91395154553055" y="2031.5" _orig_x="118.98"/>
</g>
<g class="hide">
<title>runtime.notetsleep (12 samples, 0.01%)</title><rect x="269.9256056808689" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(210,13,53)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.1"/>
<text x="272.9256056808689" y="1983.5" _orig_x="281.32"/>
</g>
<g>
<title>Field::IsNull (12 samples, 0.01%)</title><rect x="569.1938178780283" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(245,7,3)" rx="2" ry="2" _orig_x="595.9" _orig_width="0.1"/>
<text x="572.1938178780283" y="1839.5" _orig_x="598.91"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (11 samples, 0.01%)</title><rect x="345.66416040100245" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(233,82,22)" rx="2" ry="2" _orig_x="505.2" _orig_width="0.1"/>
<text x="348.66416040100245" y="1711.5" _orig_x="508.19"/>
</g>
<g class="hide">
<title>[unknown] (92 samples, 0.08%)</title><rect x="20.8" y="2037" width="0.9" height="15.0" fill="rgb(216,26,5)" rx="2" ry="2"/>
<text x="23.83" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="19.0" y="1605" width="0.2" height="15.0" fill="rgb(231,130,43)" rx="2" ry="2"/>
<text x="22.03" y="1615.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="43.11883876357566" y="1941" width="0.5206766917293233" height="15.0" fill="rgb(232,221,38)" rx="2" ry="2" _orig_x="60.5" _orig_width="0.5"/>
<text x="46.11883876357566" y="1951.5" _orig_x="63.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.06%)</title><rect x="254.3053049289892" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(249,208,38)" rx="2" ry="2" _orig_x="263.3" _orig_width="0.7"/>
<text x="257.3053049289892" y="1983.5" _orig_x="266.28"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (53 samples, 0.04%)</title><rect x="917.673350041771" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(234,79,48)" rx="2" ry="2" _orig_x="737.3" _orig_width="0.6"/>
<text x="920.673350041771" y="1759.5" _orig_x="740.33"/>
</g>
<g class="hide">
<title>[perf-58119.map] (397 samples, 0.33%)</title><rect x="113.7225981620719" y="1573" width="4.165413533834586" height="15.0" fill="rgb(214,144,5)" rx="2" ry="2" _orig_x="128.3" _orig_width="4.0"/>
<text x="116.7225981620719" y="1583.5" _orig_x="131.34"/>
</g>
<g>
<title>Column::GetType (29 samples, 0.02%)</title><rect x="791.7376775271513" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(214,171,4)" rx="2" ry="2" _orig_x="686.2" _orig_width="0.3"/>
<text x="794.7376775271513" y="1871.5" _orig_x="689.18"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (24 samples, 0.02%)</title><rect x="435.8646616541352" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(216,87,18)" rx="2" ry="2" _orig_x="541.8" _orig_width="0.3"/>
<text x="438.8646616541352" y="1823.5" _orig_x="544.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (58 samples, 0.05%)</title><rect x="701.0442773600668" y="1781" width="1.4786967418546364" height="15.0" fill="rgb(229,151,47)" rx="2" ry="2" _orig_x="649.4" _orig_width="0.6"/>
<text x="704.0442773600668" y="1791.5" _orig_x="652.40"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (32 samples, 0.03%)</title><rect x="121.22034252297415" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(248,164,21)" rx="2" ry="2" _orig_x="135.5" _orig_width="0.3"/>
<text x="124.22034252297415" y="1743.5" _orig_x="138.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="238.37259816207188" y="1845" width="0.8330827067669173" height="15.0" fill="rgb(214,176,34)" rx="2" ry="2" _orig_x="248.0" _orig_width="0.8"/>
<text x="241.37259816207188" y="1855.5" _orig_x="251.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="108.82823725981625" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(249,198,47)" rx="2" ry="2" _orig_x="123.6" _orig_width="0.1"/>
<text x="111.82823725981625" y="1871.5" _orig_x="126.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.13%)</title><rect x="55.92748538011701" y="2021" width="1.6661654135338346" height="15.0" fill="rgb(243,209,43)" rx="2" ry="2" _orig_x="72.8" _orig_width="1.6"/>
<text x="58.92748538011701" y="2031.5" _orig_x="75.80"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (86 samples, 0.07%)</title><rect x="311.4076858813701" y="1733" width="2.218045112781955" height="15.0" fill="rgb(238,16,10)" rx="2" ry="2" _orig_x="491.3" _orig_width="0.9"/>
<text x="314.4076858813701" y="1743.5" _orig_x="494.35"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (95 samples, 0.08%)</title><rect x="98.62297410192151" y="1749" width="1.0413533834586466" height="15.0" fill="rgb(231,219,17)" rx="2" ry="2" _orig_x="113.8" _orig_width="1.0"/>
<text x="101.62297410192151" y="1759.5" _orig_x="116.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.04%)</title><rect x="929.8312447786133" y="1637" width="0.5206766917293233" height="15.0" fill="rgb(248,136,24)" rx="2" ry="2" _orig_x="912.0" _orig_width="0.5"/>
<text x="932.8312447786133" y="1647.5" _orig_x="914.95"/>
</g>
<g class="hide">
<title>[perf-58157.map] (127 samples, 0.11%)</title><rect x="123.30304928989145" y="1621" width="1.3537593984962406" height="15.0" fill="rgb(245,24,16)" rx="2" ry="2" _orig_x="137.5" _orig_width="1.3"/>
<text x="126.30304928989145" y="1631.5" _orig_x="140.51"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (12 samples, 0.01%)</title><rect x="589.8955722639931" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(214,162,19)" rx="2" ry="2" _orig_x="604.3" _orig_width="0.1"/>
<text x="592.8955722639931" y="1711.5" _orig_x="607.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="107.89101921470348" y="1781" width="0.41654135338345866" height="15.0" fill="rgb(233,124,34)" rx="2" ry="2" _orig_x="122.7" _orig_width="0.4"/>
<text x="110.89101921470348" y="1791.5" _orig_x="125.72"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (14 samples, 0.01%)</title><rect x="371.5413533834587" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(207,36,45)" rx="2" ry="2" _orig_x="515.7" _orig_width="0.1"/>
<text x="374.5413533834587" y="1775.5" _orig_x="518.71"/>
</g>
<g class="hide">
<title>[libgdk-3.so.0.2404.16] (17 samples, 0.01%)</title><rect x="318.14026733500424" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(227,82,15)" rx="2" ry="2" _orig_x="324.6" _orig_width="0.2"/>
<text x="321.14026733500424" y="2015.5" _orig_x="327.62"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="421" width="0.20827067669172933" height="15.0" fill="rgb(214,166,42)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="431.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[perf-32884.map] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(242,83,13)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1759.5" _orig_x="118.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="15.6" y="1957" width="0.1" height="15.0" fill="rgb(227,146,48)" rx="2" ry="2"/>
<text x="18.59" y="1967.5"/>
</g>
<g class="hide">
<title>v8::Object::SetPrivate (11 samples, 0.01%)</title><rect x="184.22222222222229" y="1269" width="0.10413533834586466" height="15.0" fill="rgb(240,73,5)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1279.5" _orig_x="198.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.08%)</title><rect x="357.6" y="2053" width="1.0" height="15.0" fill="rgb(213,74,25)" rx="2" ry="2"/>
<text x="360.63" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1349" width="2.2909774436090227" height="15.0" fill="rgb(208,164,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1359.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1221" width="0.31240601503759396" height="15.0" fill="rgb(237,105,25)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1231.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="15.4" y="1877" width="0.2" height="15.0" fill="rgb(230,112,16)" rx="2" ry="2"/>
<text x="18.44" y="1887.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (26 samples, 0.02%)</title><rect x="776.4578111946532" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(232,144,51)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.3"/>
<text x="779.4578111946532" y="1839.5" _orig_x="683.02"/>
</g>
<g>
<title>Schema::GetColumn (16 samples, 0.01%)</title><rect x="894.2606516290725" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(250,52,34)" rx="2" ry="2" _orig_x="727.8" _orig_width="0.1"/>
<text x="897.2606516290725" y="1871.5" _orig_x="730.79"/>
</g>
<g class="hide">
<title>sogoupinyinServ (186 samples, 0.16%)</title><rect x="914.9" y="2069" width="1.8" height="15.0" fill="rgb(214,121,54)" rx="2" ry="2"/>
<text x="917.86" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1077" width="0.31240601503759396" height="15.0" fill="rgb(209,48,23)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1087.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="24.8" y="2005" width="0.2" height="15.0" fill="rgb(213,131,36)" rx="2" ry="2"/>
<text x="27.82" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="213" width="0.31240601503759396" height="15.0" fill="rgb(209,129,26)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="223.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (18 samples, 0.02%)</title><rect x="304.7535505430243" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(229,53,11)" rx="2" ry="2" _orig_x="488.6" _orig_width="0.2"/>
<text x="307.7535505430243" y="1807.5" _orig_x="491.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (338 samples, 0.28%)</title><rect x="62.27974101921476" y="1957" width="3.5406015037593983" height="15.0" fill="rgb(247,10,15)" rx="2" ry="2" _orig_x="78.9" _orig_width="3.4"/>
<text x="65.27974101921475" y="1967.5" _orig_x="81.90"/>
</g>
<g class="hide">
<title>[perf-32884.map] (49 samples, 0.04%)</title><rect x="99.14365079365085" y="1461" width="0.5206766917293233" height="15.0" fill="rgb(217,147,36)" rx="2" ry="2" _orig_x="114.3" _orig_width="0.5"/>
<text x="102.14365079365085" y="1471.5" _orig_x="117.28"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (42 samples, 0.04%)</title><rect x="1152.7861319966585" y="1909" width="0.985797827903091" height="15.0" fill="rgb(228,47,18)" rx="2" ry="2" _orig_x="832.7" _orig_width="0.4"/>
<text x="1155.7861319966585" y="1919.5" _orig_x="835.70"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (25 samples, 0.02%)</title><rect x="430.4427736006684" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(235,129,13)" rx="2" ry="2" _orig_x="539.6" _orig_width="0.3"/>
<text x="433.4427736006684" y="1775.5" _orig_x="542.63"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (18 samples, 0.02%)</title><rect x="353.3040935672514" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(246,99,27)" rx="2" ry="2" _orig_x="508.3" _orig_width="0.1"/>
<text x="356.3040935672514" y="1727.5" _orig_x="511.25"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (57 samples, 0.05%)</title><rect x="1105.9607351712614" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(211,20,18)" rx="2" ry="2" _orig_x="813.7" _orig_width="0.6"/>
<text x="1108.9607351712614" y="1839.5" _orig_x="816.71"/>
</g>
<g>
<title>MemHeap::MemHeap (14 samples, 0.01%)</title><rect x="574.3692564745195" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(222,67,29)" rx="2" ry="2" _orig_x="598.0" _orig_width="0.2"/>
<text x="577.3692564745195" y="1839.5" _orig_x="601.03"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::RunMicrotasks (27 samples, 0.02%)</title><rect x="199.21771094402678" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(250,22,31)" rx="2" ry="2" _orig_x="210.4" _orig_width="0.3"/>
<text x="202.21771094402678" y="1647.5" _orig_x="213.43"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(240,75,30)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1887.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="114.13913951545534" y="1509" width="0.10413533834586466" height="15.0" fill="rgb(237,39,22)" rx="2" ry="2" _orig_x="128.7" _orig_width="0.1"/>
<text x="117.13913951545534" y="1519.5" _orig_x="131.68"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (414 samples, 0.35%)</title><rect x="1123.9515455304927" y="1797" width="10.104427736006683" height="15.0" fill="rgb(227,22,1)" rx="2" ry="2" _orig_x="821.0" _orig_width="4.1"/>
<text x="1126.9515455304927" y="1807.5" _orig_x="824.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="353.75455304928994" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(251,40,53)" rx="2" ry="2" _orig_x="358.8" _orig_width="0.5"/>
<text x="356.75455304928994" y="1967.5" _orig_x="361.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="51.03312447786137" y="117" width="0.10413533834586466" height="15.0" fill="rgb(215,68,10)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="127.5" _orig_x="71.12"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (22 samples, 0.02%)</title><rect x="817.1219715956557" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(231,160,19)" rx="2" ry="2" _orig_x="696.5" _orig_width="0.2"/>
<text x="820.1219715956557" y="1727.5" _orig_x="699.51"/>
</g>
<g class="hide">
<title>[unknown] (428 samples, 0.36%)</title><rect x="48.95041771094407" y="2037" width="4.373684210526316" height="15.0" fill="rgb(217,55,51)" rx="2" ry="2" _orig_x="66.1" _orig_width="4.2"/>
<text x="51.95041771094407" y="2047.5" _orig_x="69.08"/>
</g>
<g class="hide">
<title>[perf-9366.map] (16 samples, 0.01%)</title><rect x="10.628613199665887" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(252,182,41)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1951.5" _orig_x="32.30"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1333" width="0.31240601503759396" height="15.0" fill="rgb(242,175,38)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1343.5" _orig_x="32.46"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (25 samples, 0.02%)</title><rect x="81.22389306599827" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(241,212,16)" rx="2" ry="2" _orig_x="397.9" _orig_width="0.2"/>
<text x="84.22389306599827" y="1711.5" _orig_x="400.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="326.47109440267343" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(205,119,18)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1903.5" _orig_x="335.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="13.4" y="1829" width="0.2" height="15.0" fill="rgb(221,113,32)" rx="2" ry="2"/>
<text x="16.43" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="343.2368838763576" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(244,127,25)" rx="2" ry="2" _orig_x="348.7" _orig_width="0.3"/>
<text x="346.2368838763576" y="1855.5" _orig_x="351.73"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="389" width="2.2909774436090227" height="15.0" fill="rgb(229,163,3)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="399.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (13 samples, 0.01%)</title><rect x="104.63659147869669" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(206,22,9)" rx="2" ry="2" _orig_x="407.4" _orig_width="0.2"/>
<text x="107.63659147869669" y="1695.5" _orig_x="410.43"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (34 samples, 0.03%)</title><rect x="945.5221386800333" y="1909" width="0.7393483709273182" height="15.0" fill="rgb(207,96,27)" rx="2" ry="2" _orig_x="748.6" _orig_width="0.3"/>
<text x="948.5221386800333" y="1919.5" _orig_x="751.58"/>
</g>
<g class="hide">
<title>[chrome] (34 samples, 0.03%)</title><rect x="14.1" y="1845" width="0.4" height="15.0" fill="rgb(217,87,37)" rx="2" ry="2"/>
<text x="17.15" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="327.51244778613204" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(238,136,26)" rx="2" ry="2" _orig_x="333.6" _orig_width="0.1"/>
<text x="330.51244778613204" y="1951.5" _orig_x="336.59"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1477" width="2.2909774436090227" height="15.0" fill="rgb(212,211,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1487.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="16.66846282372604" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(253,176,35)" rx="2" ry="2" _orig_x="35.1" _orig_width="0.1"/>
<text x="19.66846282372604" y="1807.5" _orig_x="38.07"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (305 samples, 0.26%)</title><rect x="254.47786131996656" y="1765" width="7.393483709273183" height="15.0" fill="rgb(230,142,54)" rx="2" ry="2" _orig_x="468.2" _orig_width="3.0"/>
<text x="257.47786131996656" y="1775.5" _orig_x="471.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (12 samples, 0.01%)</title><rect x="429.7034252297409" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(249,75,21)" rx="2" ry="2" _orig_x="539.3" _orig_width="0.1"/>
<text x="432.7034252297409" y="1759.5" _orig_x="542.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="308.45568086883884" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(223,179,49)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="2015.5" _orig_x="318.31"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (106 samples, 0.09%)</title><rect x="643.8680033416875" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(253,43,42)" rx="2" ry="2" _orig_x="626.2" _orig_width="1.0"/>
<text x="646.8680033416875" y="1775.5" _orig_x="629.17"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (55 samples, 0.05%)</title><rect x="1022.6608187134502" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(242,157,44)" rx="2" ry="2" _orig_x="779.9" _orig_width="0.6"/>
<text x="1025.6608187134502" y="1807.5" _orig_x="782.91"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (42 samples, 0.04%)</title><rect x="909.7331244778615" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(205,162,0)" rx="2" ry="2" _orig_x="892.7" _orig_width="0.4"/>
<text x="912.7331244778615" y="2015.5" _orig_x="895.65"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (15 samples, 0.01%)</title><rect x="480.47201336675016" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(239,79,41)" rx="2" ry="2" _orig_x="559.9" _orig_width="0.1"/>
<text x="483.47201336675016" y="1775.5" _orig_x="562.89"/>
</g>
<g class="hide">
<title>start_thread (34 samples, 0.03%)</title><rect x="61.3" y="2053" width="0.3" height="15.0" fill="rgb(246,31,34)" rx="2" ry="2"/>
<text x="64.28" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void*&gt;, true&gt;::_S_cget (17 samples, 0.01%)</title><rect x="1013.7886382623223" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(248,52,5)" rx="2" ry="2" _orig_x="776.3" _orig_width="0.1"/>
<text x="1016.7886382623223" y="1791.5" _orig_x="779.28"/>
</g>
<g class="hide">
<title>Backgro~ool_#79 (18 samples, 0.02%)</title><rect x="10.3" y="2069" width="0.1" height="15.0" fill="rgb(236,212,7)" rx="2" ry="2"/>
<text x="13.26" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1237" width="0.31240601503759396" height="15.0" fill="rgb(214,35,15)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1247.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(225,176,0)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="2015.5" _orig_x="101.86"/>
</g>
<g>
<title>[libstdc++.so.6.0.28] (12 samples, 0.01%)</title><rect x="934.1854636591479" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(205,70,4)" rx="2" ry="2" _orig_x="744.0" _orig_width="0.2"/>
<text x="937.1854636591479" y="1871.5" _orig_x="747.05"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (30 samples, 0.03%)</title><rect x="273.454469507101" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(208,167,25)" rx="2" ry="2" _orig_x="475.9" _orig_width="0.3"/>
<text x="276.454469507101" y="1791.5" _orig_x="478.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="11.565831244778668" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(209,46,41)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="1967.5" _orig_x="33.20"/>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="113.51432748538016" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(215,106,35)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1503.5" _orig_x="131.13"/>
</g>
<g class="hide">
<title>[code] (142 samples, 0.12%)</title><rect x="31.143274853801223" y="1941" width="1.4578947368421051" height="15.0" fill="rgb(206,37,13)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1951.5" _orig_x="52.00"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (43 samples, 0.04%)</title><rect x="750.0877192982455" y="1829" width="0.985797827903091" height="15.0" fill="rgb(206,60,8)" rx="2" ry="2" _orig_x="669.3" _orig_width="0.4"/>
<text x="753.0877192982455" y="1839.5" _orig_x="672.29"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="118.30455304928994" y="1365" width="0.10413533834586466" height="15.0" fill="rgb(250,178,37)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1375.5" _orig_x="135.68"/>
</g>
<g class="hide">
<title>[code] (22 samples, 0.02%)</title><rect x="130.69665831244782" y="1605" width="0.31240601503759396" height="15.0" fill="rgb(226,168,20)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1615.5" _orig_x="147.63"/>
</g>
<g class="hide">
<title>[perf-58119.map] (22 samples, 0.02%)</title><rect x="112.2647034252298" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(242,30,41)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1535.5" _orig_x="129.88"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="629" width="0.20827067669172933" height="15.0" fill="rgb(220,53,35)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="639.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (196 samples, 0.16%)</title><rect x="290.2319966583125" y="2037" width="2.082706766917293" height="15.0" fill="rgb(251,60,11)" rx="2" ry="2" _orig_x="297.8" _orig_width="2.0"/>
<text x="293.2319966583125" y="2047.5" _orig_x="300.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="94.24928989139521" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(217,61,21)" rx="2" ry="2" _orig_x="109.6" _orig_width="0.3"/>
<text x="97.24928989139521" y="1967.5" _orig_x="112.61"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (29 samples, 0.02%)</title><rect x="526.065162907268" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(231,191,15)" rx="2" ry="2" _orig_x="578.4" _orig_width="0.3"/>
<text x="529.065162907268" y="1807.5" _orig_x="581.39"/>
</g>
<g class="hide">
<title>[perf-32996.map] (88 samples, 0.07%)</title><rect x="17.6" y="1557" width="0.8" height="15.0" fill="rgb(208,115,50)" rx="2" ry="2"/>
<text x="20.55" y="1567.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="2037" width="2.2909774436090227" height="15.0" fill="rgb(224,165,33)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="2047.5" _orig_x="38.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="355.1083124477862" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(251,120,44)" rx="2" ry="2" _orig_x="360.1" _orig_width="0.4"/>
<text x="358.1083124477862" y="2015.5" _orig_x="363.15"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (75 samples, 0.06%)</title><rect x="298.59231411862993" y="1845" width="1.7251461988304093" height="15.0" fill="rgb(217,18,27)" rx="2" ry="2" _orig_x="486.1" _orig_width="0.7"/>
<text x="301.59231411862993" y="1855.5" _orig_x="489.07"/>
</g>
<g>
<title>Row::~Row (22 samples, 0.02%)</title><rect x="688.968253968254" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(207,84,25)" rx="2" ry="2" _orig_x="644.5" _orig_width="0.2"/>
<text x="691.968253968254" y="1887.5" _orig_x="647.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (541 samples, 0.45%)</title><rect x="892.8631996658313" y="1973" width="5.519172932330827" height="15.0" fill="rgb(222,47,45)" rx="2" ry="2" _orig_x="876.5" _orig_width="5.3"/>
<text x="895.8631996658313" y="1983.5" _orig_x="879.47"/>
</g>
<g class="hide">
<title>[perf-58119.map] (23 samples, 0.02%)</title><rect x="112.2647034252298" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(235,7,8)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1551.5" _orig_x="129.87"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="725.6892230576441" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(218,161,23)" rx="2" ry="2" _orig_x="659.4" _orig_width="0.1"/>
<text x="728.6892230576441" y="1791.5" _orig_x="662.39"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (191 samples, 0.16%)</title><rect x="1116.0651629072681" y="1781" width="4.682539682539682" height="15.0" fill="rgb(223,141,48)" rx="2" ry="2" _orig_x="817.8" _orig_width="1.9"/>
<text x="1119.0651629072681" y="1791.5" _orig_x="820.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="23.4" y="2005" width="0.2" height="15.0" fill="rgb(232,88,27)" rx="2" ry="2"/>
<text x="26.41" y="2015.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(252,153,25)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1823.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="26.248913951545582" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(218,188,13)" rx="2" ry="2" _orig_x="44.3" _orig_width="0.3"/>
<text x="29.248913951545582" y="1807.5" _orig_x="47.26"/>
</g>
<g class="hide">
<title>_nv021823rm (11 samples, 0.01%)</title><rect x="1182.7" y="2053" width="0.1" height="15.0" fill="rgb(214,203,52)" rx="2" ry="2"/>
<text x="1185.72" y="2063.5"/>
</g>
<g class="hide">
<title>start_thread (935 samples, 0.79%)</title><rect x="48.7" y="2053" width="9.3" height="15.0" fill="rgb(247,72,10)" rx="2" ry="2"/>
<text x="51.69" y="2063.5"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (14 samples, 0.01%)</title><rect x="154.41938178780288" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(233,67,44)" rx="2" ry="2" _orig_x="427.6" _orig_width="0.1"/>
<text x="157.41938178780288" y="1727.5" _orig_x="430.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.05%)</title><rect x="929.7271094402673" y="1653" width="0.6248120300751879" height="15.0" fill="rgb(225,133,11)" rx="2" ry="2" _orig_x="911.9" _orig_width="0.6"/>
<text x="932.7271094402673" y="1663.5" _orig_x="914.90"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="73.83040935672508" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(239,11,2)" rx="2" ry="2" _orig_x="394.9" _orig_width="0.2"/>
<text x="76.83040935672508" y="1807.5" _orig_x="397.89"/>
</g>
<g class="hide">
<title>[code] (112 samples, 0.09%)</title><rect x="119.8665831244779" y="1685" width="1.1454887218045113" height="15.0" fill="rgb(237,140,23)" rx="2" ry="2" _orig_x="134.2" _orig_width="1.1"/>
<text x="122.8665831244779" y="1695.5" _orig_x="137.16"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (36 samples, 0.03%)</title><rect x="71.36591478696735" y="1797" width="0.985797827903091" height="15.0" fill="rgb(237,171,38)" rx="2" ry="2" _orig_x="393.9" _orig_width="0.4"/>
<text x="74.36591478696735" y="1807.5" _orig_x="396.92"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (20 samples, 0.02%)</title><rect x="226.1361737677527" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(219,176,11)" rx="2" ry="2" _orig_x="456.7" _orig_width="0.2"/>
<text x="229.1361737677527" y="1791.5" _orig_x="459.69"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="293" width="0.20827067669172933" height="15.0" fill="rgb(218,228,51)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="303.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (250 samples, 0.21%)</title><rect x="547.9991645781118" y="1765" width="5.914786967418546" height="15.0" fill="rgb(253,218,54)" rx="2" ry="2" _orig_x="587.3" _orig_width="2.4"/>
<text x="550.9991645781118" y="1775.5" _orig_x="590.26"/>
</g>
<g class="hide">
<title>syscall (18 samples, 0.02%)</title><rect x="23.4" y="2021" width="0.2" height="15.0" fill="rgb(236,44,28)" rx="2" ry="2"/>
<text x="26.41" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1605" width="2.2909774436090227" height="15.0" fill="rgb(252,119,3)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1615.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (158 samples, 0.13%)</title><rect x="262.36424394319124" y="1749" width="3.943191311612364" height="15.0" fill="rgb(251,145,24)" rx="2" ry="2" _orig_x="471.4" _orig_width="1.6"/>
<text x="265.36424394319124" y="1759.5" _orig_x="474.44"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (22 samples, 0.02%)</title><rect x="50.6641604010025" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(253,61,38)" rx="2" ry="2" _orig_x="385.5" _orig_width="0.3"/>
<text x="53.6641604010025" y="1823.5" _orig_x="388.55"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (14 samples, 0.01%)</title><rect x="783.3583959899748" y="1925" width="0.24644945697577275" height="15.0" fill="rgb(251,224,50)" rx="2" ry="2" _orig_x="682.8" _orig_width="0.1"/>
<text x="786.3583959899748" y="1935.5" _orig_x="685.77"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="468.39598997493727" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(249,135,1)" rx="2" ry="2" _orig_x="555.0" _orig_width="0.1"/>
<text x="471.39598997493727" y="1759.5" _orig_x="557.95"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (83 samples, 0.07%)</title><rect x="292.67752715121134" y="1765" width="1.971595655806182" height="15.0" fill="rgb(254,129,51)" rx="2" ry="2" _orig_x="483.7" _orig_width="0.8"/>
<text x="295.67752715121134" y="1775.5" _orig_x="486.67"/>
</g>
<g class="hide">
<title>__libc_recvmsg (104 samples, 0.09%)</title><rect x="51.97034252297416" y="2005" width="1.1454887218045113" height="15.0" fill="rgb(239,31,16)" rx="2" ry="2" _orig_x="69.0" _orig_width="1.1"/>
<text x="54.97034252297416" y="2015.5" _orig_x="72.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (44 samples, 0.04%)</title><rect x="1131.591478696742" y="1765" width="0.985797827903091" height="15.0" fill="rgb(213,40,18)" rx="2" ry="2" _orig_x="824.1" _orig_width="0.4"/>
<text x="1134.591478696742" y="1775.5" _orig_x="827.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="42.91056808688393" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(222,187,18)" rx="2" ry="2" _orig_x="60.3" _orig_width="0.7"/>
<text x="45.91056808688393" y="2031.5" _orig_x="63.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="21.3" y="1941" width="0.4" height="15.0" fill="rgb(225,99,46)" rx="2" ry="2"/>
<text x="24.30" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(218,10,21)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1871.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (497 samples, 0.42%)</title><rect x="893.2797410192147" y="1925" width="5.102631578947369" height="15.0" fill="rgb(217,218,54)" rx="2" ry="2" _orig_x="876.9" _orig_width="4.9"/>
<text x="896.2797410192147" y="1935.5" _orig_x="879.91"/>
</g>
<g>
<title>Row::Row (208 samples, 0.17%)</title><rect x="405.79782790309105" y="1861" width="4.928989139515455" height="15.0" fill="rgb(217,38,31)" rx="2" ry="2" _orig_x="529.6" _orig_width="2.0"/>
<text x="408.79782790309105" y="1871.5" _orig_x="532.58"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (15 samples, 0.01%)</title><rect x="1132.3308270676691" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(227,201,33)" rx="2" ry="2" _orig_x="824.4" _orig_width="0.1"/>
<text x="1135.3308270676691" y="1759.5" _orig_x="827.37"/>
</g>
<g class="hide">
<title>[perf-9366.map] (15 samples, 0.01%)</title><rect x="10.628613199665887" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(250,171,9)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1919.5" _orig_x="32.31"/>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.01%)</title><rect x="23.9" y="2053" width="0.1" height="15.0" fill="rgb(236,182,23)" rx="2" ry="2"/>
<text x="26.93" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (72 samples, 0.06%)</title><rect x="307.4644945697577" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(249,27,21)" rx="2" ry="2" _orig_x="489.7" _orig_width="0.7"/>
<text x="310.4644945697577" y="1759.5" _orig_x="492.72"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (16 samples, 0.01%)</title><rect x="616.7585630743527" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(207,207,13)" rx="2" ry="2" _orig_x="615.2" _orig_width="0.1"/>
<text x="619.7585630743527" y="1775.5" _orig_x="618.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="933.7883876357561" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(210,98,29)" rx="2" ry="2" _orig_x="915.8" _orig_width="0.1"/>
<text x="936.7883876357561" y="1919.5" _orig_x="918.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="303.7695906432749" y="1957" width="0.937218045112782" height="15.0" fill="rgb(240,80,41)" rx="2" ry="2" _orig_x="310.8" _orig_width="0.9"/>
<text x="306.7695906432749" y="1967.5" _orig_x="313.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="153.7105680868839" y="1653" width="0.41654135338345866" height="15.0" fill="rgb(248,105,7)" rx="2" ry="2" _orig_x="166.7" _orig_width="0.4"/>
<text x="156.7105680868839" y="1663.5" _orig_x="169.74"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="130.69665831244782" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(239,152,37)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1663.5" _orig_x="147.63"/>
</g>
<g>
<title>Row::Row (143 samples, 0.12%)</title><rect x="143.57560568086882" y="1845" width="3.4502923976608186" height="15.0" fill="rgb(249,115,36)" rx="2" ry="2" _orig_x="423.2" _orig_width="1.4"/>
<text x="146.57560568086882" y="1855.5" _orig_x="426.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="322.82635756056817" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(207,102,38)" rx="2" ry="2" _orig_x="329.1" _orig_width="0.3"/>
<text x="325.82635756056817" y="1999.5" _orig_x="332.12"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (155 samples, 0.13%)</title><rect x="180.54302422723472" y="1717" width="3.943191311612364" height="15.0" fill="rgb(223,226,46)" rx="2" ry="2" _orig_x="438.2" _orig_width="1.6"/>
<text x="183.54302422723472" y="1727.5" _orig_x="441.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="145.17147034252304" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(225,159,40)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="1967.5" _orig_x="161.49"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="1973" width="0.5" height="15.0" fill="rgb(230,70,37)" rx="2" ry="2"/>
<text x="17.63" y="1983.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (15 samples, 0.01%)</title><rect x="127.06349206349206" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(242,2,15)" rx="2" ry="2" _orig_x="416.5" _orig_width="0.1"/>
<text x="130.06349206349205" y="1823.5" _orig_x="419.46"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="1973" width="0.6" height="15.0" fill="rgb(225,65,23)" rx="2" ry="2"/>
<text x="17.02" y="1983.5"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (12 samples, 0.01%)</title><rect x="1118.0367585630743" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(219,69,30)" rx="2" ry="2" _orig_x="818.6" _orig_width="0.1"/>
<text x="1121.0367585630743" y="1775.5" _orig_x="821.63"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (21 samples, 0.02%)</title><rect x="57.31829573934834" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(237,145,32)" rx="2" ry="2" _orig_x="388.2" _orig_width="0.3"/>
<text x="60.31829573934834" y="1759.5" _orig_x="391.25"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1589" width="2.2909774436090227" height="15.0" fill="rgb(250,37,21)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1599.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="453" width="0.20827067669172933" height="15.0" fill="rgb(253,91,14)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="463.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="108.4116959064328" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(249,144,34)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1935.5" _orig_x="126.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (14 samples, 0.01%)</title><rect x="753.784461152882" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(222,80,41)" rx="2" ry="2" _orig_x="670.8" _orig_width="0.2"/>
<text x="756.784461152882" y="1839.5" _orig_x="673.82"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (11 samples, 0.01%)</title><rect x="1012.3099415204679" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(205,24,37)" rx="2" ry="2" _orig_x="775.7" _orig_width="0.1"/>
<text x="1015.3099415204679" y="1791.5" _orig_x="778.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="42.07748538011701" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(221,13,45)" rx="2" ry="2" _orig_x="59.5" _orig_width="0.1"/>
<text x="45.07748538011701" y="1855.5" _orig_x="62.49"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_addr (13 samples, 0.01%)</title><rect x="1003.43776106934" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(218,19,20)" rx="2" ry="2" _orig_x="772.1" _orig_width="0.2"/>
<text x="1006.43776106934" y="1759.5" _orig_x="775.14"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (81 samples, 0.07%)</title><rect x="282.42184628237266" y="1893" width="0.8330827067669173" height="15.0" fill="rgb(223,171,10)" rx="2" ry="2" _orig_x="290.3" _orig_width="0.8"/>
<text x="285.42184628237266" y="1903.5" _orig_x="293.27"/>
</g>
<g class="hide">
<title>[chrome] (62 samples, 0.05%)</title><rect x="14.0" y="1957" width="0.6" height="15.0" fill="rgb(251,65,53)" rx="2" ry="2"/>
<text x="17.02" y="1967.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (176 samples, 0.15%)</title><rect x="712.1345029239765" y="1765" width="4.189640768588137" height="15.0" fill="rgb(218,217,53)" rx="2" ry="2" _orig_x="653.9" _orig_width="1.7"/>
<text x="715.1345029239765" y="1775.5" _orig_x="656.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,011 samples, 17.67%)</title><rect x="945.8680868838763" y="1973" width="217.1221804511278" height="15.0" fill="rgb(215,198,54)" rx="2" ry="2" _orig_x="927.4" _orig_width="208.5"/>
<text x="948.8680868838763" y="1983.5" _orig_x="930.41">[[kernel.kallsyms]] </text>
</g>
<g>
<title>Field::Field (19 samples, 0.02%)</title><rect x="249.5488721804511" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(244,182,2)" rx="2" ry="2" _orig_x="466.2" _orig_width="0.2"/>
<text x="252.5488721804511" y="1839.5" _orig_x="469.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="142.2556808688388" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(223,113,48)" rx="2" ry="2" _orig_x="155.7" _orig_width="0.2"/>
<text x="145.2556808688388" y="1855.5" _orig_x="158.73"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="967.2096908939012" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(252,190,52)" rx="2" ry="2" _orig_x="757.4" _orig_width="0.2"/>
<text x="970.2096908939012" y="1823.5" _orig_x="760.45"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (18 samples, 0.02%)</title><rect x="30.41432748538017" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(228,227,54)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="2047.5" _orig_x="51.30"/>
</g>
<g class="hide">
<title>[perf-32884.map] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(233,59,5)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1727.5" _orig_x="118.02"/>
</g>
<g class="hide">
<title>[unknown] (19 samples, 0.02%)</title><rect x="296.792522974102" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(219,42,50)" rx="2" ry="2" _orig_x="304.1" _orig_width="0.2"/>
<text x="299.792522974102" y="1999.5" _orig_x="307.07"/>
</g>
<g class="hide">
<title>blink::ThreadDebugger::From (19 samples, 0.02%)</title><rect x="202.23763575605687" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(253,9,19)" rx="2" ry="2" _orig_x="213.3" _orig_width="0.2"/>
<text x="205.23763575605687" y="1727.5" _orig_x="216.31"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (18 samples, 0.02%)</title><rect x="61.75438596491227" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(208,179,53)" rx="2" ry="2" _orig_x="390.0" _orig_width="0.2"/>
<text x="64.75438596491227" y="1743.5" _orig_x="393.04"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (221 samples, 0.19%)</title><rect x="724.2105263157894" y="1829" width="5.4218880534670015" height="15.0" fill="rgb(219,35,54)" rx="2" ry="2" _orig_x="658.8" _orig_width="2.2"/>
<text x="727.2105263157894" y="1839.5" _orig_x="661.79"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="437" width="2.2909774436090227" height="15.0" fill="rgb(246,186,45)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="447.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-58119.map] (25 samples, 0.02%)</title><rect x="112.2647034252298" y="1605" width="0.20827067669172933" height="15.0" fill="rgb(231,179,35)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1615.5" _orig_x="129.86"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1205" width="0.31240601503759396" height="15.0" fill="rgb(240,203,32)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1215.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="2021" width="0.1" height="15.0" fill="rgb(240,196,14)" rx="2" ry="2"/>
<text x="13.06" y="2031.5"/>
</g>
<g class="hide">
<title>Napi::Object::Set&lt;Napi::String&gt; (38 samples, 0.03%)</title><rect x="124.76094402673355" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(242,184,20)" rx="2" ry="2" _orig_x="138.9" _orig_width="0.3"/>
<text x="127.76094402673355" y="1919.5" _orig_x="141.87"/>
</g>
<g class="hide">
<title>[perf-58119.map] (65 samples, 0.05%)</title><rect x="120.28312447786136" y="1525" width="0.7289473684210526" height="15.0" fill="rgb(213,113,53)" rx="2" ry="2" _orig_x="134.6" _orig_width="0.7"/>
<text x="123.28312447786136" y="1535.5" _orig_x="137.62"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="645" width="0.20827067669172933" height="15.0" fill="rgb(213,8,18)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="655.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="96.6444026733501" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(213,52,40)" rx="2" ry="2" _orig_x="111.9" _orig_width="0.4"/>
<text x="99.6444026733501" y="1951.5" _orig_x="114.86"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1093" width="0.31240601503759396" height="15.0" fill="rgb(208,211,7)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1103.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (128 samples, 0.11%)</title><rect x="927.2278613199666" y="1557" width="1.3537593984962406" height="15.0" fill="rgb(227,36,2)" rx="2" ry="2" _orig_x="909.5" _orig_width="1.3"/>
<text x="930.2278613199666" y="1567.5" _orig_x="912.49"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (29 samples, 0.02%)</title><rect x="1028.5756056808686" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(224,3,28)" rx="2" ry="2" _orig_x="782.3" _orig_width="0.3"/>
<text x="1031.5756056808686" y="1791.5" _orig_x="785.32"/>
</g>
<g class="hide">
<title>Watcher::callbackEventsToJS (59 samples, 0.05%)</title><rect x="124.6568086883877" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(229,32,0)" rx="2" ry="2" _orig_x="138.8" _orig_width="0.6"/>
<text x="127.6568086883877" y="1951.5" _orig_x="141.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="20.1" y="1941" width="0.2" height="15.0" fill="rgb(221,221,6)" rx="2" ry="2"/>
<text x="23.13" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="304.18613199665833" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(244,44,2)" rx="2" ry="2" _orig_x="311.2" _orig_width="0.5"/>
<text x="307.18613199665833" y="1935.5" _orig_x="314.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (515 samples, 0.43%)</title><rect x="148.8162071846283" y="1845" width="5.310902255639097" height="15.0" fill="rgb(228,69,24)" rx="2" ry="2" _orig_x="162.0" _orig_width="5.1"/>
<text x="151.8162071846283" y="1855.5" _orig_x="165.00"/>
</g>
<g class="hide">
<title>main (1,556 samples, 1.31%)</title><rect x="914.2109440267335" y="2037" width="16.14097744360902" height="15.0" fill="rgb(253,141,42)" rx="2" ry="2" _orig_x="897.0" _orig_width="15.5"/>
<text x="917.2109440267335" y="2047.5" _orig_x="900.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="277.0068086883877" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(223,205,52)" rx="2" ry="2" _orig_x="285.1" _orig_width="0.4"/>
<text x="280.0068086883877" y="1967.5" _orig_x="288.10"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr (59 samples, 0.05%)</title><rect x="69.46507936507942" y="1909" width="0.6248120300751879" height="15.0" fill="rgb(250,53,10)" rx="2" ry="2" _orig_x="85.8" _orig_width="0.6"/>
<text x="72.46507936507942" y="1919.5" _orig_x="88.82"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="18.0" y="1237" width="0.2" height="15.0" fill="rgb(231,142,6)" rx="2" ry="2"/>
<text x="21.05" y="1247.5"/>
</g>
<g class="hide">
<title>[unknown] (150 samples, 0.13%)</title><rect x="909.5248538011696" y="2021" width="1.5620300751879699" height="15.0" fill="rgb(219,37,25)" rx="2" ry="2" _orig_x="892.5" _orig_width="1.5"/>
<text x="912.5248538011696" y="2031.5" _orig_x="895.50"/>
</g>
<g class="hide">
<title>QGIFFormat::decode (11 samples, 0.01%)</title><rect x="233.47823725981627" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(237,26,26)" rx="2" ry="2" _orig_x="243.3" _orig_width="0.1"/>
<text x="236.47823725981627" y="2031.5" _orig_x="246.32"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (44 samples, 0.04%)</title><rect x="178.5714285714285" y="1717" width="0.985797827903091" height="15.0" fill="rgb(205,44,32)" rx="2" ry="2" _orig_x="437.4" _orig_width="0.4"/>
<text x="181.5714285714285" y="1727.5" _orig_x="440.36"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(226,114,22)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1855.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTask (1,003 samples, 0.84%)</title><rect x="213.9007936507937" y="1781" width="10.413533834586467" height="15.0" fill="rgb(205,21,17)" rx="2" ry="2" _orig_x="224.5" _orig_width="10.0"/>
<text x="216.9007936507937" y="1791.5" _orig_x="227.50"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (24 samples, 0.02%)</title><rect x="398.89724310776927" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" _orig_x="526.8" _orig_width="0.2"/>
<text x="401.89724310776927" y="1743.5" _orig_x="529.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="108.4116959064328" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(232,93,25)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1903.5" _orig_x="126.21"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (14 samples, 0.01%)</title><rect x="1168.065998329156" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(205,188,25)" rx="2" ry="2" _orig_x="838.9" _orig_width="0.1"/>
<text x="1171.065998329156" y="1871.5" _orig_x="841.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="352.4007936507937" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(243,76,12)" rx="2" ry="2" _orig_x="357.5" _orig_width="0.1"/>
<text x="355.4007936507937" y="1887.5" _orig_x="360.50"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (13 samples, 0.01%)</title><rect x="978.0534670008352" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,39,9)" rx="2" ry="2" _orig_x="761.8" _orig_width="0.1"/>
<text x="981.0534670008352" y="1759.5" _orig_x="764.80"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="853" width="0.20827067669172933" height="15.0" fill="rgb(254,137,23)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="863.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="23.9" y="2021" width="0.1" height="15.0" fill="rgb(248,161,6)" rx="2" ry="2"/>
<text x="26.93" y="2031.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (34 samples, 0.03%)</title><rect x="416.641604010025" y="1813" width="0.985797827903091" height="15.0" fill="rgb(241,72,43)" rx="2" ry="2" _orig_x="534.0" _orig_width="0.4"/>
<text x="419.641604010025" y="1823.5" _orig_x="537.03"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::AdvanceConcurrentMarking (91 samples, 0.08%)</title><rect x="32.913575605680926" y="1877" width="0.937218045112782" height="15.0" fill="rgb(235,123,20)" rx="2" ry="2" _orig_x="50.7" _orig_width="0.9"/>
<text x="35.913575605680926" y="1887.5" _orig_x="53.72"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (28 samples, 0.02%)</title><rect x="303.27485380116957" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(218,177,26)" rx="2" ry="2" _orig_x="488.0" _orig_width="0.2"/>
<text x="306.27485380116957" y="1823.5" _orig_x="490.97"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (16 samples, 0.01%)</title><rect x="879.720133667502" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(212,101,33)" rx="2" ry="2" _orig_x="721.9" _orig_width="0.2"/>
<text x="882.720133667502" y="1791.5" _orig_x="724.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.09%)</title><rect x="303.665455304929" y="2005" width="1.0413533834586466" height="15.0" fill="rgb(216,195,44)" rx="2" ry="2" _orig_x="310.7" _orig_width="1.0"/>
<text x="306.665455304929" y="2015.5" _orig_x="313.68"/>
</g>
<g>
<title>Field::CompareGreaterThan (25 samples, 0.02%)</title><rect x="693.6507936507935" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(213,182,32)" rx="2" ry="2" _orig_x="646.4" _orig_width="0.2"/>
<text x="696.6507936507935" y="1887.5" _orig_x="649.40"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (21 samples, 0.02%)</title><rect x="77.03425229741016" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(254,226,1)" rx="2" ry="2" _orig_x="396.2" _orig_width="0.2"/>
<text x="80.03425229741016" y="1727.5" _orig_x="399.17"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="27.915079365079418" y="133" width="0.20827067669172933" height="15.0" fill="rgb(215,218,42)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="143.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.06%)</title><rect x="302.72823725981624" y="1941" width="0.7289473684210526" height="15.0" fill="rgb(215,119,10)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1951.5" _orig_x="312.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="130.8007936507937" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(220,47,48)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1567.5" _orig_x="147.65"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (17 samples, 0.01%)</title><rect x="1142.435254803676" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(221,172,7)" rx="2" ry="2" _orig_x="828.5" _orig_width="0.2"/>
<text x="1145.435254803676" y="1887.5" _orig_x="831.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (173 samples, 0.15%)</title><rect x="494.51963241436926" y="1781" width="4.189640768588137" height="15.0" fill="rgb(209,11,34)" rx="2" ry="2" _orig_x="565.6" _orig_width="1.7"/>
<text x="497.51963241436926" y="1791.5" _orig_x="568.62"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (56 samples, 0.05%)</title><rect x="1048.2915622389305" y="1861" width="1.4786967418546364" height="15.0" fill="rgb(254,212,9)" rx="2" ry="2" _orig_x="790.3" _orig_width="0.6"/>
<text x="1051.2915622389305" y="1871.5" _orig_x="793.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="83.1068086883877" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(232,90,3)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1919.5" _orig_x="101.88"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (45 samples, 0.04%)</title><rect x="463.9598997493735" y="1685" width="0.985797827903091" height="15.0" fill="rgb(218,182,18)" rx="2" ry="2" _orig_x="553.2" _orig_width="0.4"/>
<text x="466.9598997493735" y="1695.5" _orig_x="556.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.14%)</title><rect x="345.31959064327486" y="1973" width="1.6661654135338346" height="15.0" fill="rgb(243,151,52)" rx="2" ry="2" _orig_x="350.7" _orig_width="1.6"/>
<text x="348.31959064327486" y="1983.5" _orig_x="353.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="84.14816207184634" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(208,48,40)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1967.5" _orig_x="102.92"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="261" width="0.20827067669172933" height="15.0" fill="rgb(240,133,5)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="271.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[code] (137 samples, 0.12%)</title><rect x="119.55417710944033" y="1749" width="1.4578947368421051" height="15.0" fill="rgb(240,60,44)" rx="2" ry="2" _orig_x="133.9" _orig_width="1.4"/>
<text x="122.55417710944033" y="1759.5" _orig_x="136.92"/>
</g>
<g class="hide">
<title>[code] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(233,112,19)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1663.5" _orig_x="130.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="30.72673350041777" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(213,186,40)" rx="2" ry="2" _orig_x="48.6" _orig_width="0.1"/>
<text x="33.726733500417765" y="2031.5" _orig_x="51.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="37" width="0.20827067669172933" height="15.0" fill="rgb(210,176,37)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="47.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="1181.3" y="1573" width="0.3" height="15.0" fill="rgb(234,33,5)" rx="2" ry="2"/>
<text x="1184.33" y="1583.5"/>
</g>
<g>
<title>operator new (11 samples, 0.01%)</title><rect x="1048.0451127819551" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(239,229,24)" rx="2" ry="2" _orig_x="790.2" _orig_width="0.1"/>
<text x="1051.0451127819551" y="1871.5" _orig_x="793.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (552 samples, 0.46%)</title><rect x="148.39966583124482" y="1877" width="5.727443609022556" height="15.0" fill="rgb(226,64,48)" rx="2" ry="2" _orig_x="161.6" _orig_width="5.5"/>
<text x="151.39966583124482" y="1887.5" _orig_x="164.63"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (13 samples, 0.01%)</title><rect x="928.5171261487052" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(214,206,44)" rx="2" ry="2" _orig_x="741.7" _orig_width="0.2"/>
<text x="931.5171261487052" y="1775.5" _orig_x="744.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="2021" width="0.2" height="15.0" fill="rgb(218,215,15)" rx="2" ry="2"/>
<text x="18.74" y="2031.5"/>
</g>
<g class="hide">
<title>__GI___writev (16 samples, 0.01%)</title><rect x="320.43124477861323" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(233,85,47)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="2047.5" _orig_x="329.83"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (29 samples, 0.02%)</title><rect x="147.15004177109446" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(215,216,30)" rx="2" ry="2" _orig_x="160.4" _orig_width="0.2"/>
<text x="150.15004177109446" y="1967.5" _orig_x="163.36"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="1151.060985797828" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(224,26,28)" rx="2" ry="2" _orig_x="832.0" _orig_width="0.2"/>
<text x="1154.060985797828" y="1903.5" _orig_x="835.04"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (17 samples, 0.01%)</title><rect x="479.97911445279874" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(246,11,7)" rx="2" ry="2" _orig_x="559.7" _orig_width="0.2"/>
<text x="482.97911445279874" y="1775.5" _orig_x="562.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="124.13613199665838" y="1237" width="0.31240601503759396" height="15.0" fill="rgb(249,122,36)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1247.5" _orig_x="141.31"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::allocate (14 samples, 0.01%)</title><rect x="874.0517961570594" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(206,102,30)" rx="2" ry="2" _orig_x="719.6" _orig_width="0.2"/>
<text x="877.0517961570594" y="1775.5" _orig_x="722.64"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (67 samples, 0.06%)</title><rect x="776.2113617376774" y="1893" width="1.7251461988304093" height="15.0" fill="rgb(211,69,23)" rx="2" ry="2" _orig_x="679.9" _orig_width="0.7"/>
<text x="779.2113617376774" y="1903.5" _orig_x="682.95"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="373" width="0.31240601503759396" height="15.0" fill="rgb(247,68,39)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="383.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="96.54026733500423" y="1989" width="0.5206766917293233" height="15.0" fill="rgb(218,42,22)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="1999.5" _orig_x="114.84"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1045" width="0.31240601503759396" height="15.0" fill="rgb(249,127,15)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1055.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>base::SampleVectorBase::Accumulate (18 samples, 0.02%)</title><rect x="212.130492898914" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(239,188,12)" rx="2" ry="2" _orig_x="222.8" _orig_width="0.2"/>
<text x="215.130492898914" y="1679.5" _orig_x="225.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="322.82635756056817" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(214,110,2)" rx="2" ry="2" _orig_x="329.1" _orig_width="0.3"/>
<text x="325.82635756056817" y="1983.5" _orig_x="332.14"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="517" width="0.20827067669172933" height="15.0" fill="rgb(231,98,35)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="527.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (14 samples, 0.01%)</title><rect x="540.1127819548873" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(209,133,48)" rx="2" ry="2" _orig_x="584.1" _orig_width="0.1"/>
<text x="543.1127819548873" y="1807.5" _orig_x="587.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="2037" width="0.1" height="15.0" fill="rgb(211,66,23)" rx="2" ry="2"/>
<text x="26.70" y="2047.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (33 samples, 0.03%)</title><rect x="1171.516290726817" y="1909" width="0.7393483709273182" height="15.0" fill="rgb(216,148,24)" rx="2" ry="2" _orig_x="840.3" _orig_width="0.3"/>
<text x="1174.516290726817" y="1919.5" _orig_x="843.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="21.9" y="1877" width="0.3" height="15.0" fill="rgb(250,117,45)" rx="2" ry="2"/>
<text x="24.88" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="270.3421470342523" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(253,111,17)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1855.5" _orig_x="281.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="235.87335004177115" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(223,23,3)" rx="2" ry="2" _orig_x="245.6" _orig_width="0.3"/>
<text x="238.87335004177115" y="2015.5" _orig_x="248.63"/>
</g>
<g class="hide">
<title>[perf-15821.map] (33 samples, 0.03%)</title><rect x="92.89553049289897" y="1557" width="0.41654135338345866" height="15.0" fill="rgb(239,33,49)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1567.5" _orig_x="111.33"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (52 samples, 0.04%)</title><rect x="16.25192147034258" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(253,204,37)" rx="2" ry="2" _orig_x="34.7" _orig_width="0.5"/>
<text x="19.25192147034258" y="2047.5" _orig_x="37.72"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (26 samples, 0.02%)</title><rect x="851.378446115288" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(219,34,12)" rx="2" ry="2" _orig_x="710.4" _orig_width="0.3"/>
<text x="854.378446115288" y="1791.5" _orig_x="713.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (25 samples, 0.02%)</title><rect x="144.80785296574766" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(237,57,24)" rx="2" ry="2" _orig_x="423.7" _orig_width="0.2"/>
<text x="147.80785296574766" y="1791.5" _orig_x="426.69"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (76 samples, 0.06%)</title><rect x="102.9114452798663" y="1685" width="1.7251461988304093" height="15.0" fill="rgb(210,127,24)" rx="2" ry="2" _orig_x="406.7" _orig_width="0.7"/>
<text x="105.9114452798663" y="1695.5" _orig_x="409.66"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (11 samples, 0.01%)</title><rect x="613.8011695906432" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(210,87,8)" rx="2" ry="2" _orig_x="614.0" _orig_width="0.1"/>
<text x="616.8011695906432" y="1791.5" _orig_x="616.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="235.87335004177115" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(227,32,35)" rx="2" ry="2" _orig_x="245.6" _orig_width="0.3"/>
<text x="238.87335004177115" y="1999.5" _orig_x="248.63"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (12 samples, 0.01%)</title><rect x="675.4135338345865" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(240,39,30)" rx="2" ry="2" _orig_x="639.0" _orig_width="0.1"/>
<text x="678.4135338345865" y="1711.5" _orig_x="641.97"/>
</g>
<g class="hide">
<title>[code] (137 samples, 0.12%)</title><rect x="119.55417710944033" y="1733" width="1.4578947368421051" height="15.0" fill="rgb(206,220,42)" rx="2" ry="2" _orig_x="133.9" _orig_width="1.4"/>
<text x="122.55417710944033" y="1743.5" _orig_x="136.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="276.9026733500418" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(216,15,31)" rx="2" ry="2" _orig_x="285.0" _orig_width="0.5"/>
<text x="279.9026733500418" y="2031.5" _orig_x="288.02"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (33 samples, 0.03%)</title><rect x="234.2690058479532" y="1701" width="0.7393483709273182" height="15.0" fill="rgb(221,168,12)" rx="2" ry="2" _orig_x="460.0" _orig_width="0.3"/>
<text x="237.2690058479532" y="1711.5" _orig_x="462.99"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (24 samples, 0.02%)</title><rect x="1024.8788638262322" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(227,68,43)" rx="2" ry="2" _orig_x="780.8" _orig_width="0.2"/>
<text x="1027.8788638262322" y="1823.5" _orig_x="783.78"/>
</g>
<g>
<title>[libminisql_shared.so] (16 samples, 0.01%)</title><rect x="431.6750208855472" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(238,57,35)" rx="2" ry="2" _orig_x="540.1" _orig_width="0.2"/>
<text x="434.6750208855472" y="1839.5" _orig_x="543.13"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (26 samples, 0.02%)</title><rect x="888.345864661654" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(230,15,12)" rx="2" ry="2" _orig_x="725.4" _orig_width="0.3"/>
<text x="891.345864661654" y="1759.5" _orig_x="728.39"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (15 samples, 0.01%)</title><rect x="545.0417710944027" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(206,59,16)" rx="2" ry="2" _orig_x="586.1" _orig_width="0.2"/>
<text x="548.0417710944027" y="1727.5" _orig_x="589.13"/>
</g>
<g class="hide">
<title>[unknown] (29 samples, 0.02%)</title><rect x="278.2" y="2053" width="0.3" height="15.0" fill="rgb(242,80,39)" rx="2" ry="2"/>
<text x="281.24" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (28 samples, 0.02%)</title><rect x="47.953216374268955" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(249,38,18)" rx="2" ry="2" _orig_x="384.4" _orig_width="0.2"/>
<text x="50.953216374268955" y="1759.5" _orig_x="387.37"/>
</g>
<g class="hide">
<title>[perf-2510.map] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(246,87,35)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1919.5" _orig_x="297.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.12%)</title><rect x="237.64365079365086" y="1925" width="1.5620300751879699" height="15.0" fill="rgb(236,131,25)" rx="2" ry="2" _orig_x="247.3" _orig_width="1.5"/>
<text x="240.64365079365086" y="1935.5" _orig_x="250.31"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1189" width="0.31240601503759396" height="15.0" fill="rgb(206,108,35)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1199.5" _orig_x="48.87"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (20 samples, 0.02%)</title><rect x="462.48120300751884" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(250,7,39)" rx="2" ry="2" _orig_x="552.6" _orig_width="0.2"/>
<text x="465.48120300751884" y="1695.5" _orig_x="555.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="238.99741019214707" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(243,136,8)" rx="2" ry="2" _orig_x="248.6" _orig_width="0.2"/>
<text x="241.99741019214707" y="1791.5" _orig_x="251.63"/>
</g>
<g class="hide">
<title>Isolated_Web_Co (847 samples, 0.71%)</title><rect x="25.4" y="2069" width="8.4" height="15.0" fill="rgb(220,85,54)" rx="2" ry="2"/>
<text x="28.42" y="2079.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (36 samples, 0.03%)</title><rect x="725.1963241436926" y="1813" width="0.985797827903091" height="15.0" fill="rgb(240,197,35)" rx="2" ry="2" _orig_x="659.2" _orig_width="0.4"/>
<text x="728.1963241436926" y="1823.5" _orig_x="662.23"/>
</g>
<g class="hide">
<title>[perf-15821.map] (81 samples, 0.07%)</title><rect x="92.37485380116964" y="1733" width="0.937218045112782" height="15.0" fill="rgb(231,16,5)" rx="2" ry="2" _orig_x="107.8" _orig_width="0.9"/>
<text x="95.37485380116964" y="1743.5" _orig_x="110.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="355.8372598162072" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(207,32,18)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1759.5" _orig_x="363.78"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (21 samples, 0.02%)</title><rect x="397.41854636591484" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(238,4,13)" rx="2" ry="2" _orig_x="526.2" _orig_width="0.2"/>
<text x="400.41854636591484" y="1759.5" _orig_x="529.17"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (15 samples, 0.01%)</title><rect x="851.1319966583122" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(218,75,33)" rx="2" ry="2" _orig_x="710.3" _orig_width="0.1"/>
<text x="854.1319966583122" y="1791.5" _orig_x="713.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="304.4985380116959" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(240,13,54)" rx="2" ry="2" _orig_x="311.5" _orig_width="0.2"/>
<text x="307.4985380116959" y="1887.5" _orig_x="314.47"/>
</g>
<g class="hide">
<title>__libc_write (164 samples, 0.14%)</title><rect x="928.5816207184628" y="1957" width="1.7703007518796992" height="15.0" fill="rgb(242,225,23)" rx="2" ry="2" _orig_x="910.8" _orig_width="1.7"/>
<text x="931.5816207184628" y="1967.5" _orig_x="913.83"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (295 samples, 0.25%)</title><rect x="369.56975772765236" y="1813" width="7.14703425229741" height="15.0" fill="rgb(210,191,3)" rx="2" ry="2" _orig_x="514.9" _orig_width="2.9"/>
<text x="372.56975772765236" y="1823.5" _orig_x="517.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="353.65041771094405" y="1989" width="0.6248120300751879" height="15.0" fill="rgb(233,209,25)" rx="2" ry="2" _orig_x="358.7" _orig_width="0.6"/>
<text x="356.65041771094405" y="1999.5" _orig_x="361.69"/>
</g>
<g class="hide">
<title>blink::DOMWindow::Wrap (31 samples, 0.03%)</title><rect x="199.84252297410197" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(245,196,6)" rx="2" ry="2" _orig_x="211.0" _orig_width="0.3"/>
<text x="202.84252297410197" y="1663.5" _orig_x="214.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="142.15154553049294" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(212,157,7)" rx="2" ry="2" _orig_x="155.6" _orig_width="0.3"/>
<text x="145.15154553049294" y="1871.5" _orig_x="158.58"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="277" width="0.31240601503759396" height="15.0" fill="rgb(242,184,31)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="287.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (16 samples, 0.01%)</title><rect x="1138.4920634920634" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(227,208,19)" rx="2" ry="2" _orig_x="826.9" _orig_width="0.1"/>
<text x="1141.4920634920634" y="1871.5" _orig_x="829.87"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (70 samples, 0.06%)</title><rect x="387.0676691729323" y="1781" width="1.7251461988304093" height="15.0" fill="rgb(226,60,13)" rx="2" ry="2" _orig_x="522.0" _orig_width="0.7"/>
<text x="390.0676691729323" y="1791.5" _orig_x="525.04"/>
</g>
<g>
<title>Row::DeserializeFrom (1,967 samples, 1.65%)</title><rect x="170.93149540517965" y="1829" width="48.05764411027569" height="15.0" fill="rgb(217,154,26)" rx="2" ry="2" _orig_x="434.3" _orig_width="19.5"/>
<text x="173.93149540517965" y="1839.5" _orig_x="437.33">Row..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (802 samples, 0.67%)</title><rect x="920.2507936507936" y="1749" width="8.330827067669173" height="15.0" fill="rgb(233,171,1)" rx="2" ry="2" _orig_x="902.8" _orig_width="8.0"/>
<text x="923.2507936507936" y="1759.5" _orig_x="905.80"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (44 samples, 0.04%)</title><rect x="1130.6056808688388" y="1749" width="0.985797827903091" height="15.0" fill="rgb(239,204,32)" rx="2" ry="2" _orig_x="823.7" _orig_width="0.4"/>
<text x="1133.6056808688388" y="1759.5" _orig_x="826.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="132.15455304928994" y="1861" width="0.5206766917293233" height="15.0" fill="rgb(228,149,49)" rx="2" ry="2" _orig_x="146.0" _orig_width="0.5"/>
<text x="135.15455304928994" y="1871.5" _orig_x="148.96"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (11 samples, 0.01%)</title><rect x="401.85463659147865" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(216,101,8)" rx="2" ry="2" _orig_x="528.0" _orig_width="0.1"/>
<text x="404.85463659147865" y="1791.5" _orig_x="530.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.09%)</title><rect x="153.08575605680875" y="1717" width="1.0413533834586466" height="15.0" fill="rgb(240,58,16)" rx="2" ry="2" _orig_x="166.1" _orig_width="1.0"/>
<text x="156.08575605680875" y="1727.5" _orig_x="169.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (218 samples, 0.18%)</title><rect x="236.9147034252298" y="1957" width="2.2909774436090227" height="15.0" fill="rgb(208,209,22)" rx="2" ry="2" _orig_x="246.6" _orig_width="2.2"/>
<text x="239.9147034252298" y="1967.5" _orig_x="249.59"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (79 samples, 0.07%)</title><rect x="221.2071846282372" y="1829" width="1.971595655806182" height="15.0" fill="rgb(209,22,31)" rx="2" ry="2" _orig_x="454.7" _orig_width="0.8"/>
<text x="224.2071846282372" y="1839.5" _orig_x="457.71"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (112 samples, 0.09%)</title><rect x="396.92564745196324" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(216,143,35)" rx="2" ry="2" _orig_x="526.0" _orig_width="1.1"/>
<text x="399.92564745196324" y="1775.5" _orig_x="528.96"/>
</g>
<g class="hide">
<title>[[vdso]] (29 samples, 0.02%)</title><rect x="13.7" y="2037" width="0.3" height="15.0" fill="rgb(216,43,14)" rx="2" ry="2"/>
<text x="16.73" y="2047.5"/>
</g>
<g>
<title>MemHeap::MemHeap (11 samples, 0.01%)</title><rect x="366.6123642439433" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(220,37,41)" rx="2" ry="2" _orig_x="513.7" _orig_width="0.1"/>
<text x="369.6123642439433" y="1823.5" _orig_x="516.71"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (27 samples, 0.02%)</title><rect x="1120.0083542188804" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(251,80,54)" rx="2" ry="2" _orig_x="819.4" _orig_width="0.3"/>
<text x="1123.0083542188804" y="1775.5" _orig_x="822.44"/>
</g>
<g class="parent">
<title>__libc_start_main (48,251 samples, 40.58%)</title><rect x="10" y="2053" width="1180" height="15.0" fill="rgb(253,56,32)" rx="2" ry="2" _orig_x="369.0" _orig_width="478.8"/>
<text x="13" y="2063.5" _orig_x="372.05">__libc_start_main </text>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (17 samples, 0.01%)</title><rect x="352.5647451963241" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(230,199,43)" rx="2" ry="2" _orig_x="508.0" _orig_width="0.2"/>
<text x="355.5647451963241" y="1727.5" _orig_x="510.99"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1029" width="0.31240601503759396" height="15.0" fill="rgb(247,157,35)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1039.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="270.3421470342523" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(214,197,39)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1823.5" _orig_x="281.72"/>
</g>
<g class="hide">
<title>__evlist__enable (88 samples, 0.07%)</title><rect x="914.3150793650794" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(245,151,14)" rx="2" ry="2" _orig_x="897.1" _orig_width="0.8"/>
<text x="917.3150793650794" y="1999.5" _orig_x="900.07"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,880 samples, 1.58%)</title><rect x="798.391812865497" y="1829" width="46.086048454469505" height="15.0" fill="rgb(226,198,44)" rx="2" ry="2" _orig_x="688.9" _orig_width="18.7"/>
<text x="801.391812865497" y="1839.5" _orig_x="691.91">std:..</text>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (103 samples, 0.09%)</title><rect x="887.9" y="2053" width="1.1" height="15.0" fill="rgb(235,80,6)" rx="2" ry="2"/>
<text x="890.93" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="581" width="0.31240601503759396" height="15.0" fill="rgb(235,219,12)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="591.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>epoll_wait (24 samples, 0.02%)</title><rect x="50.82485380116965" y="117" width="0.20827067669172933" height="15.0" fill="rgb(241,170,42)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="127.5" _orig_x="70.86"/>
</g>
<g>
<title>MemHeap::MemHeap (12 samples, 0.01%)</title><rect x="406.29072681704247" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(243,201,6)" rx="2" ry="2" _orig_x="529.8" _orig_width="0.2"/>
<text x="409.29072681704247" y="1839.5" _orig_x="532.84"/>
</g>
<g class="hide">
<title>[code] (241 samples, 0.20%)</title><rect x="17.2" y="1861" width="2.4" height="15.0" fill="rgb(218,126,27)" rx="2" ry="2"/>
<text x="20.18" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(219,9,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1983.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="101" width="0.20827067669172933" height="15.0" fill="rgb(253,204,51)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="111.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1397" width="2.2909774436090227" height="15.0" fill="rgb(231,115,31)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1407.5" _orig_x="69.82"/>
</g>
<g>
<title>Field::Field (21 samples, 0.02%)</title><rect x="957.8446115288222" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(234,89,40)" rx="2" ry="2" _orig_x="753.6" _orig_width="0.3"/>
<text x="960.8446115288222" y="1887.5" _orig_x="756.64"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="389" width="0.31240601503759396" height="15.0" fill="rgb(253,42,26)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="399.5" _orig_x="99.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (616 samples, 0.52%)</title><rect x="733.0827067669172" y="1829" width="15.033416875522136" height="15.0" fill="rgb(210,21,30)" rx="2" ry="2" _orig_x="662.4" _orig_width="6.1"/>
<text x="736.0827067669172" y="1839.5" _orig_x="665.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="97.78989139515461" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(248,17,31)" rx="2" ry="2" _orig_x="113.0" _orig_width="0.2"/>
<text x="100.78989139515461" y="1887.5" _orig_x="116.03"/>
</g>
<g class="hide">
<title>[code] (98 samples, 0.08%)</title><rect x="98.62297410192151" y="1781" width="1.0413533834586466" height="15.0" fill="rgb(242,151,10)" rx="2" ry="2" _orig_x="113.8" _orig_width="1.0"/>
<text x="101.62297410192151" y="1791.5" _orig_x="116.80"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_conjure_hashtable (12 samples, 0.01%)</title><rect x="1025.6182121971597" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(218,210,32)" rx="2" ry="2" _orig_x="781.1" _orig_width="0.1"/>
<text x="1028.6182121971597" y="1823.5" _orig_x="784.07"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (50 samples, 0.04%)</title><rect x="910.7727652464494" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(207,173,53)" rx="2" ry="2" _orig_x="734.5" _orig_width="0.5"/>
<text x="913.7727652464494" y="1823.5" _orig_x="737.47"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (280 samples, 0.24%)</title><rect x="878.4878863826231" y="1797" width="6.654135338345864" height="15.0" fill="rgb(222,73,49)" rx="2" ry="2" _orig_x="721.4" _orig_width="2.7"/>
<text x="881.4878863826231" y="1807.5" _orig_x="724.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (951 samples, 0.80%)</title><rect x="626.8629908103591" y="1829" width="23.16624895572264" height="15.0" fill="rgb(246,0,43)" rx="2" ry="2" _orig_x="619.3" _orig_width="9.4"/>
<text x="629.8629908103591" y="1839.5" _orig_x="622.31">s..</text>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (15 samples, 0.01%)</title><rect x="477.2681704260652" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(222,51,54)" rx="2" ry="2" _orig_x="558.6" _orig_width="0.1"/>
<text x="480.2681704260652" y="1743.5" _orig_x="561.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (28 samples, 0.02%)</title><rect x="314.61152882205516" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(238,66,28)" rx="2" ry="2" _orig_x="492.6" _orig_width="0.3"/>
<text x="317.61152882205516" y="1791.5" _orig_x="495.65"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (12 samples, 0.01%)</title><rect x="560.075187969925" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(213,128,22)" rx="2" ry="2" _orig_x="592.2" _orig_width="0.1"/>
<text x="563.075187969925" y="1823.5" _orig_x="595.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (31 samples, 0.03%)</title><rect x="1036.2155388471176" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(232,107,37)" rx="2" ry="2" _orig_x="785.4" _orig_width="0.3"/>
<text x="1039.2155388471176" y="1823.5" _orig_x="788.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (389 samples, 0.33%)</title><rect x="894.4252297410193" y="1877" width="3.957142857142857" height="15.0" fill="rgb(249,186,42)" rx="2" ry="2" _orig_x="878.0" _orig_width="3.8"/>
<text x="897.4252297410193" y="1887.5" _orig_x="880.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,508 samples, 3.79%)</title><rect x="1163.9274853801169" y="1925" width="46.652631578947364" height="15.0" fill="rgb(210,186,6)" rx="2" ry="2" _orig_x="1136.8" _orig_width="44.8"/>
<text x="1166.9274853801169" y="1935.5" _orig_x="1139.84">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>v8::internal::LookupIterator::FetchValue (19 samples, 0.02%)</title><rect x="195.46883876357566" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(235,39,35)" rx="2" ry="2" _orig_x="206.8" _orig_width="0.2"/>
<text x="198.46883876357566" y="1391.5" _orig_x="209.79"/>
</g>
<g class="hide">
<title>[perf-58119.map] (15 samples, 0.01%)</title><rect x="112.57710944026739" y="1525" width="0.10413533834586466" height="15.0" fill="rgb(242,176,39)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1535.5" _orig_x="130.18"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (949 samples, 0.80%)</title><rect x="503.6382623224727" y="1829" width="23.16624895572264" height="15.0" fill="rgb(220,221,10)" rx="2" ry="2" _orig_x="569.3" _orig_width="9.4"/>
<text x="506.6382623224727" y="1839.5" _orig_x="572.29">s..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (12 samples, 0.01%)</title><rect x="552.6817042606516" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(210,221,45)" rx="2" ry="2" _orig_x="589.2" _orig_width="0.1"/>
<text x="555.6817042606516" y="1743.5" _orig_x="592.17"/>
</g>
<g class="hide">
<title>[perf-58119.map] (191 samples, 0.16%)</title><rect x="115.90944026733506" y="1365" width="1.9785714285714284" height="15.0" fill="rgb(225,170,32)" rx="2" ry="2" _orig_x="130.4" _orig_width="1.9"/>
<text x="118.90944026733506" y="1375.5" _orig_x="133.37"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (106 samples, 0.09%)</title><rect x="334.8203842940685" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(218,97,47)" rx="2" ry="2" _orig_x="500.8" _orig_width="1.0"/>
<text x="337.8203842940685" y="1775.5" _orig_x="503.76"/>
</g>
<g class="hide">
<title>[perf-58119.map] (270 samples, 0.23%)</title><rect x="115.07635756056813" y="1413" width="2.811654135338346" height="15.0" fill="rgb(225,29,41)" rx="2" ry="2" _orig_x="129.6" _orig_width="2.7"/>
<text x="118.07635756056813" y="1423.5" _orig_x="132.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="95.60304928989146" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(240,121,30)" rx="2" ry="2" _orig_x="110.9" _orig_width="0.4"/>
<text x="98.60304928989146" y="1999.5" _orig_x="113.90"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (113 samples, 0.10%)</title><rect x="163.91583124477867" y="1525" width="1.1454887218045113" height="15.0" fill="rgb(236,54,42)" rx="2" ry="2" _orig_x="176.5" _orig_width="1.1"/>
<text x="166.91583124477867" y="1535.5" _orig_x="179.50"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,451 samples, 1.22%)</title><rect x="451.6374269005849" y="1797" width="35.48872180451128" height="15.0" fill="rgb(213,223,52)" rx="2" ry="2" _orig_x="548.2" _orig_width="14.4"/>
<text x="454.6374269005849" y="1807.5" _orig_x="551.15">std..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (28 samples, 0.02%)</title><rect x="826.9799498746867" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(211,9,30)" rx="2" ry="2" _orig_x="700.5" _orig_width="0.3"/>
<text x="829.9799498746867" y="1759.5" _orig_x="703.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (424 samples, 0.36%)</title><rect x="22.395906432748596" y="2037" width="4.373684210526316" height="15.0" fill="rgb(215,62,18)" rx="2" ry="2" _orig_x="40.6" _orig_width="4.2"/>
<text x="25.395906432748596" y="2047.5" _orig_x="43.59"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (157 samples, 0.13%)</title><rect x="373.02005012531316" y="1797" width="3.6967418546365916" height="15.0" fill="rgb(244,162,31)" rx="2" ry="2" _orig_x="516.3" _orig_width="1.5"/>
<text x="376.02005012531316" y="1807.5" _orig_x="519.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(239,81,21)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1951.5" _orig_x="101.63"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(213,225,4)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1839.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (40 samples, 0.03%)</title><rect x="68.65497076023394" y="1813" width="0.985797827903091" height="15.0" fill="rgb(252,114,27)" rx="2" ry="2" _orig_x="392.8" _orig_width="0.4"/>
<text x="71.65497076023394" y="1823.5" _orig_x="395.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="276.1737259816208" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(239,120,3)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1951.5" _orig_x="287.28"/>
</g>
<g class="hide">
<title>gnome-terminal- (838 samples, 0.70%)</title><rect x="322.3" y="2069" width="8.3" height="15.0" fill="rgb(225,18,10)" rx="2" ry="2"/>
<text x="325.30" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (17 samples, 0.01%)</title><rect x="1161.904761904762" y="1925" width="0.4928989139515455" height="15.0" fill="rgb(251,20,2)" rx="2" ry="2" _orig_x="836.4" _orig_width="0.2"/>
<text x="1164.904761904762" y="1935.5" _orig_x="839.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="280.65154553049297" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(216,101,3)" rx="2" ry="2" _orig_x="288.6" _orig_width="0.1"/>
<text x="283.65154553049297" y="1823.5" _orig_x="291.59"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="287.0038011695907" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(210,185,48)" rx="2" ry="2" _orig_x="294.7" _orig_width="0.1"/>
<text x="290.0038011695907" y="1919.5" _orig_x="297.70"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (897 samples, 0.75%)</title><rect x="21.3366750208856" y="1797" width="21.934001670843777" height="15.0" fill="rgb(214,129,23)" rx="2" ry="2" _orig_x="373.6" _orig_width="8.9"/>
<text x="24.3366750208856" y="1807.5" _orig_x="376.64">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.10%)</title><rect x="141.1101921470343" y="1957" width="1.3537593984962406" height="15.0" fill="rgb(210,162,47)" rx="2" ry="2" _orig_x="154.6" _orig_width="1.3"/>
<text x="144.1101921470343" y="1967.5" _orig_x="157.62"/>
</g>
<g class="hide">
<title>[code] (12 samples, 0.01%)</title><rect x="127.26019214703432" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(214,201,47)" rx="2" ry="2" _orig_x="141.3" _orig_width="0.2"/>
<text x="130.26019214703433" y="1551.5" _orig_x="144.35"/>
</g>
<g class="hide">
<title>base::MessagePumpGlib::Run (69 samples, 0.06%)</title><rect x="243.0586883876358" y="1941" width="0.7289473684210526" height="15.0" fill="rgb(219,2,46)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.7"/>
<text x="246.0586883876358" y="1951.5" _orig_x="255.52"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (18 samples, 0.02%)</title><rect x="1083.5338345864661" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(221,142,15)" rx="2" ry="2" _orig_x="804.6" _orig_width="0.2"/>
<text x="1086.5338345864661" y="1823.5" _orig_x="807.62"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (18 samples, 0.02%)</title><rect x="647.0718462823726" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(208,39,36)" rx="2" ry="2" _orig_x="627.5" _orig_width="0.2"/>
<text x="650.0718462823726" y="1791.5" _orig_x="630.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (468 samples, 0.39%)</title><rect x="878.9090643274855" y="1909" width="4.894360902255639" height="15.0" fill="rgb(233,132,3)" rx="2" ry="2" _orig_x="863.1" _orig_width="4.7"/>
<text x="881.9090643274855" y="1919.5" _orig_x="866.11"/>
</g>
<g class="hide">
<title>[code] (32 samples, 0.03%)</title><rect x="17.9" y="1301" width="0.4" height="15.0" fill="rgb(213,69,46)" rx="2" ry="2"/>
<text x="20.95" y="1311.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="15.731244778613258" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(206,73,45)" rx="2" ry="2" _orig_x="34.2" _orig_width="0.2"/>
<text x="18.73124477861326" y="1967.5" _orig_x="37.18"/>
</g>
<g class="hide">
<title>[code] (94 samples, 0.08%)</title><rect x="111.84816207184633" y="1717" width="0.937218045112782" height="15.0" fill="rgb(238,0,27)" rx="2" ry="2" _orig_x="126.5" _orig_width="0.9"/>
<text x="114.84816207184633" y="1727.5" _orig_x="129.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.16%)</title><rect x="89.14665831244784" y="1861" width="1.874436090225564" height="15.0" fill="rgb(234,123,7)" rx="2" ry="2" _orig_x="104.7" _orig_width="1.8"/>
<text x="92.14665831244784" y="1871.5" _orig_x="107.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="22.6" y="2021" width="0.2" height="15.0" fill="rgb(208,170,3)" rx="2" ry="2"/>
<text x="25.58" y="2031.5"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask (514 samples, 0.43%)</title><rect x="208.06921470342527" y="1765" width="5.310902255639097" height="15.0" fill="rgb(234,169,30)" rx="2" ry="2" _orig_x="218.9" _orig_width="5.1"/>
<text x="211.06921470342527" y="1775.5" _orig_x="221.94"/>
</g>
<g class="hide">
<title>[unknown] (95 samples, 0.08%)</title><rect x="49.679365079365134" y="117" width="1.0413533834586466" height="15.0" fill="rgb(215,91,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.0"/>
<text x="52.679365079365134" y="127.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="344.79891395154556" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(232,219,50)" rx="2" ry="2" _orig_x="350.2" _orig_width="0.3"/>
<text x="347.79891395154556" y="1951.5" _orig_x="353.19"/>
</g>
<g>
<title>[libminisql_shared.so] (25 samples, 0.02%)</title><rect x="1155.0041771094402" y="1909" width="0.4928989139515455" height="15.0" fill="rgb(236,203,43)" rx="2" ry="2" _orig_x="833.6" _orig_width="0.2"/>
<text x="1158.0041771094402" y="1919.5" _orig_x="836.58"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="934.924812030075" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(240,229,16)" rx="2" ry="2" _orig_x="744.3" _orig_width="0.1"/>
<text x="937.924812030075" y="1871.5" _orig_x="747.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.11%)</title><rect x="89.77147034252303" y="1845" width="1.2496240601503759" height="15.0" fill="rgb(214,83,9)" rx="2" ry="2" _orig_x="105.3" _orig_width="1.2"/>
<text x="92.77147034252303" y="1855.5" _orig_x="108.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="108.4116959064328" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(230,83,22)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1887.5" _orig_x="126.21"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (44 samples, 0.04%)</title><rect x="902.3934837092733" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(230,213,54)" rx="2" ry="2" _orig_x="731.1" _orig_width="0.5"/>
<text x="905.3934837092733" y="1839.5" _orig_x="734.14"/>
</g>
<g class="hide">
<title>[code] (12 samples, 0.01%)</title><rect x="146.62936507936513" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(242,162,45)" rx="2" ry="2" _orig_x="159.9" _orig_width="0.1"/>
<text x="149.62936507936513" y="1967.5" _orig_x="162.88"/>
</g>
<g class="hide">
<title>snd_pcm_status_user64 (64 samples, 0.05%)</title><rect x="69.46507936507942" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(222,163,3)" rx="2" ry="2" _orig_x="85.8" _orig_width="0.6"/>
<text x="72.46507936507942" y="1951.5" _orig_x="88.77"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (19 samples, 0.02%)</title><rect x="283.0466583124478" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(226,69,22)" rx="2" ry="2" _orig_x="290.9" _orig_width="0.2"/>
<text x="286.0466583124478" y="1871.5" _orig_x="293.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (21 samples, 0.02%)</title><rect x="912.2514619883041" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(210,218,11)" rx="2" ry="2" _orig_x="735.1" _orig_width="0.2"/>
<text x="915.2514619883041" y="1823.5" _orig_x="738.11"/>
</g>
<g class="hide">
<title>PostmasterMain (17 samples, 0.01%)</title><rect x="930.9767335004177" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(252,156,13)" rx="2" ry="2" _orig_x="913.1" _orig_width="0.1"/>
<text x="933.9767335004177" y="2031.5" _orig_x="916.07"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (13 samples, 0.01%)</title><rect x="750.3341687552213" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(207,201,40)" rx="2" ry="2" _orig_x="669.4" _orig_width="0.2"/>
<text x="753.3341687552213" y="1791.5" _orig_x="672.45"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="837" width="0.20827067669172933" height="15.0" fill="rgb(231,1,45)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="847.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="932.1222222222223" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(212,212,17)" rx="2" ry="2" _orig_x="914.2" _orig_width="0.6"/>
<text x="935.1222222222223" y="1967.5" _orig_x="917.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (188 samples, 0.16%)</title><rect x="250.86883876357567" y="1829" width="1.9785714285714284" height="15.0" fill="rgb(210,226,7)" rx="2" ry="2" _orig_x="260.0" _orig_width="1.9"/>
<text x="253.86883876357567" y="1839.5" _orig_x="263.02"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (99 samples, 0.08%)</title><rect x="214.55304928989136" y="1765" width="2.218045112781955" height="15.0" fill="rgb(236,156,20)" rx="2" ry="2" _orig_x="452.0" _orig_width="0.9"/>
<text x="217.55304928989136" y="1775.5" _orig_x="454.96"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (17 samples, 0.01%)</title><rect x="537.4018379281537" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(226,173,46)" rx="2" ry="2" _orig_x="583.0" _orig_width="0.2"/>
<text x="540.4018379281537" y="1791.5" _orig_x="586.00"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="14.8" y="1813" width="0.1" height="15.0" fill="rgb(225,186,53)" rx="2" ry="2"/>
<text x="17.77" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="10.6" y="1909" width="0.1" height="15.0" fill="rgb(249,136,26)" rx="2" ry="2"/>
<text x="13.57" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="145.17147034252304" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(250,226,36)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="1999.5" _orig_x="161.48"/>
</g>
<g class="hide">
<title>[[vdso]] (653 samples, 0.55%)</title><rect x="133.92485380116963" y="2037" width="6.768796992481203" height="15.0" fill="rgb(223,209,43)" rx="2" ry="2" _orig_x="147.7" _orig_width="6.5"/>
<text x="136.92485380116963" y="2047.5" _orig_x="150.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="323.4511695906433" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(209,151,3)" rx="2" ry="2" _orig_x="329.7" _orig_width="0.3"/>
<text x="326.4511695906433" y="2015.5" _orig_x="332.74"/>
</g>
<g class="hide">
<title>[perf-58145.map] (23 samples, 0.02%)</title><rect x="125.69816207184634" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(217,92,41)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.2"/>
<text x="128.69816207184635" y="1791.5" _orig_x="142.81"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (11 samples, 0.01%)</title><rect x="542.8237259816208" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(232,182,9)" rx="2" ry="2" _orig_x="585.2" _orig_width="0.1"/>
<text x="545.8237259816208" y="1743.5" _orig_x="588.23"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="981" width="0.31240601503759396" height="15.0" fill="rgb(246,185,38)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="991.5" _orig_x="32.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (66 samples, 0.06%)</title><rect x="59.043441938178724" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(225,38,41)" rx="2" ry="2" _orig_x="388.9" _orig_width="0.6"/>
<text x="62.043441938178724" y="1759.5" _orig_x="391.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="934.5173350041771" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(205,52,23)" rx="2" ry="2" _orig_x="916.5" _orig_width="0.2"/>
<text x="937.5173350041771" y="1855.5" _orig_x="919.50"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="533" width="0.20827067669172933" height="15.0" fill="rgb(229,183,36)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="543.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::GetField (11 samples, 0.01%)</title><rect x="1153.7719298245613" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(245,196,16)" rx="2" ry="2" _orig_x="833.1" _orig_width="0.1"/>
<text x="1156.7719298245613" y="1919.5" _orig_x="836.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="10.5" y="1941" width="0.2" height="15.0" fill="rgb(221,75,21)" rx="2" ry="2"/>
<text x="13.53" y="1951.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (27 samples, 0.02%)</title><rect x="409.74101921470356" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(249,82,12)" rx="2" ry="2" _orig_x="531.2" _orig_width="0.2"/>
<text x="412.74101921470356" y="1823.5" _orig_x="534.18"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (8,241 samples, 6.93%)</title><rect x="951.190476190476" y="1909" width="201.5956558061821" height="15.0" fill="rgb(206,76,53)" rx="2" ry="2" _orig_x="750.9" _orig_width="81.8"/>
<text x="954.190476190476" y="1919.5" _orig_x="753.93">GenericComparator&lt;32ul&gt;::o..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (495 samples, 0.42%)</title><rect x="457.30576441102755" y="1765" width="12.076023391812864" height="15.0" fill="rgb(241,58,54)" rx="2" ry="2" _orig_x="550.5" _orig_width="4.9"/>
<text x="460.30576441102755" y="1775.5" _orig_x="553.46"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (75 samples, 0.06%)</title><rect x="243.0586883876358" y="1957" width="0.8330827067669173" height="15.0" fill="rgb(222,166,35)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="1967.5" _orig_x="255.52"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (13 samples, 0.01%)</title><rect x="825.7477025898078" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(253,94,50)" rx="2" ry="2" _orig_x="700.0" _orig_width="0.2"/>
<text x="828.7477025898078" y="1743.5" _orig_x="703.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.147786131996714" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(224,194,22)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="2031.5" _orig_x="37.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.11%)</title><rect x="56.135756056808745" y="1957" width="1.4578947368421051" height="15.0" fill="rgb(215,223,19)" rx="2" ry="2" _orig_x="73.0" _orig_width="1.4"/>
<text x="59.135756056808745" y="1967.5" _orig_x="76.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="354.37936507936513" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(233,198,47)" rx="2" ry="2" _orig_x="359.4" _orig_width="0.7"/>
<text x="357.37936507936513" y="2047.5" _orig_x="362.36"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (12 samples, 0.01%)</title><rect x="473.0785296574769" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(251,175,49)" rx="2" ry="2" _orig_x="556.9" _orig_width="0.1"/>
<text x="476.0785296574769" y="1727.5" _orig_x="559.93"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (20 samples, 0.02%)</title><rect x="857.7861319966582" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(221,22,28)" rx="2" ry="2" _orig_x="713.0" _orig_width="0.1"/>
<text x="860.7861319966582" y="1775.5" _orig_x="715.95"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (109 samples, 0.09%)</title><rect x="426.0066833751043" y="1733" width="2.7109440267335008" height="15.0" fill="rgb(232,49,8)" rx="2" ry="2" _orig_x="537.8" _orig_width="1.1"/>
<text x="429.0066833751043" y="1743.5" _orig_x="540.79"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (22 samples, 0.02%)</title><rect x="1138.738512949039" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(235,30,27)" rx="2" ry="2" _orig_x="827.0" _orig_width="0.3"/>
<text x="1141.738512949039" y="1871.5" _orig_x="830.03"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (74 samples, 0.06%)</title><rect x="75.8020050125313" y="1733" width="1.7251461988304093" height="15.0" fill="rgb(238,32,2)" rx="2" ry="2" _orig_x="395.7" _orig_width="0.7"/>
<text x="78.8020050125313" y="1743.5" _orig_x="398.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="252.43086883876362" y="1781" width="0.41654135338345866" height="15.0" fill="rgb(219,205,53)" rx="2" ry="2" _orig_x="261.5" _orig_width="0.4"/>
<text x="255.43086883876362" y="1791.5" _orig_x="264.51"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (28 samples, 0.02%)</title><rect x="353.05764411027565" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(246,62,51)" rx="2" ry="2" _orig_x="508.2" _orig_width="0.2"/>
<text x="356.05764411027565" y="1743.5" _orig_x="511.15"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (12 samples, 0.01%)</title><rect x="299.8245614035088" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(251,49,26)" rx="2" ry="2" _orig_x="486.6" _orig_width="0.1"/>
<text x="302.8245614035088" y="1807.5" _orig_x="489.58"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (23 samples, 0.02%)</title><rect x="646.3324979114454" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(245,164,16)" rx="2" ry="2" _orig_x="627.2" _orig_width="0.2"/>
<text x="649.3324979114454" y="1791.5" _orig_x="630.22"/>
</g>
<g class="hide">
<title>[unknown] (137 samples, 0.12%)</title><rect x="233.47823725981627" y="2037" width="1.3537593984962406" height="15.0" fill="rgb(249,158,32)" rx="2" ry="2" _orig_x="243.3" _orig_width="1.3"/>
<text x="236.47823725981627" y="2047.5" _orig_x="246.28"/>
</g>
<g class="hide">
<title>_nv033085rm (411 samples, 0.35%)</title><rect x="339.6" y="2053" width="4.1" height="15.0" fill="rgb(224,71,52)" rx="2" ry="2"/>
<text x="342.65" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.08%)</title><rect x="51.97034252297416" y="1973" width="1.0413533834586466" height="15.0" fill="rgb(241,37,40)" rx="2" ry="2" _orig_x="69.0" _orig_width="1.0"/>
<text x="54.97034252297416" y="1983.5" _orig_x="72.04"/>
</g>
<g class="hide">
<title>[chrome] (40 samples, 0.03%)</title><rect x="11.5" y="1845" width="0.4" height="15.0" fill="rgb(207,65,52)" rx="2" ry="2"/>
<text x="14.50" y="1855.5"/>
</g>
<g>
<title>BPlusTreeInternalPage&lt;GenericKey&lt;32ul&gt;, int, GenericComparator&lt;32ul&gt; &gt;::Lookup (6,507 samples, 5.47%)</title><rect x="786.0693400167083" y="1909" width="159.2063492063492" height="15.0" fill="rgb(245,77,53)" rx="2" ry="2" _orig_x="683.9" _orig_width="64.6"/>
<text x="789.0693400167083" y="1919.5" _orig_x="686.92">BPlusTreeInternalPage..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (15 samples, 0.01%)</title><rect x="581.7627401837929" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(209,157,34)" rx="2" ry="2" _orig_x="601.0" _orig_width="0.1"/>
<text x="584.7627401837929" y="1775.5" _orig_x="603.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="13.4" y="1813" width="0.2" height="15.0" fill="rgb(206,90,42)" rx="2" ry="2"/>
<text x="16.43" y="1823.5"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (64 samples, 0.05%)</title><rect x="749.594820384294" y="1861" width="1.7251461988304093" height="15.0" fill="rgb(213,167,24)" rx="2" ry="2" _orig_x="669.1" _orig_width="0.7"/>
<text x="752.594820384294" y="1871.5" _orig_x="672.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (329 samples, 0.28%)</title><rect x="888.489515455305" y="1765" width="3.4364661654135333" height="15.0" fill="rgb(235,206,34)" rx="2" ry="2" _orig_x="872.3" _orig_width="3.3"/>
<text x="891.489515455305" y="1775.5" _orig_x="875.31"/>
</g>
<g>
<title>Row::~Row (50 samples, 0.04%)</title><rect x="1171.2698412698412" y="1957" width="1.2322472848788637" height="15.0" fill="rgb(218,169,14)" rx="2" ry="2" _orig_x="840.2" _orig_width="0.5"/>
<text x="1174.2698412698412" y="1967.5" _orig_x="843.24"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(232,127,41)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1439.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>Napi::FunctionReference::MakeCallback (237 samples, 0.20%)</title><rect x="122.2616959064328" y="1941" width="2.3951127819548867" height="15.0" fill="rgb(231,161,16)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1951.5" _orig_x="139.48"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (18 samples, 0.02%)</title><rect x="669.0058479532163" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(250,23,43)" rx="2" ry="2" _orig_x="636.4" _orig_width="0.1"/>
<text x="672.0058479532163" y="1743.5" _orig_x="639.36"/>
</g>
<g class="hide">
<title>blink::scheduler::SingleThreadIdleTaskRunner::RunTask (14 samples, 0.01%)</title><rect x="174.53763575605686" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(231,61,26)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1759.5" _orig_x="189.68"/>
</g>
<g class="hide">
<title>IPC_I/O_Parent (104 samples, 0.09%)</title><rect x="23.0" y="2069" width="1.0" height="15.0" fill="rgb(206,189,30)" rx="2" ry="2"/>
<text x="26.01" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="965" width="0.20827067669172933" height="15.0" fill="rgb(208,110,32)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="975.5" _orig_x="328.48"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (97 samples, 0.08%)</title><rect x="406.7836257309941" y="1829" width="2.4644945697577274" height="15.0" fill="rgb(249,174,5)" rx="2" ry="2" _orig_x="530.0" _orig_width="1.0"/>
<text x="409.7836257309941" y="1839.5" _orig_x="532.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (193 samples, 0.16%)</title><rect x="352.3" y="2053" width="1.9" height="15.0" fill="rgb(246,88,17)" rx="2" ry="2"/>
<text x="355.28" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="22.1" y="1797" width="0.1" height="15.0" fill="rgb(244,199,35)" rx="2" ry="2"/>
<text x="25.09" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="15.9" y="2021" width="0.3" height="15.0" fill="rgb(213,141,50)" rx="2" ry="2"/>
<text x="18.94" y="2031.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (59 samples, 0.05%)</title><rect x="164.2773600668338" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(242,149,26)" rx="2" ry="2" _orig_x="431.6" _orig_width="0.6"/>
<text x="167.2773600668338" y="1823.5" _orig_x="434.61"/>
</g>
<g class="hide">
<title>CefCppToCRefCounted&lt;CefAppCppToC, CefApp, _cef_app_t&gt;::Release (492 samples, 0.41%)</title><rect x="175.2" y="2053" width="4.9" height="15.0" fill="rgb(248,146,43)" rx="2" ry="2"/>
<text x="178.24" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="1989" width="0.5" height="15.0" fill="rgb(234,181,29)" rx="2" ry="2"/>
<text x="17.63" y="1999.5"/>
</g>
<g>
<title>[libminisql_shared.so] (14 samples, 0.01%)</title><rect x="340.9816207184628" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(250,186,49)" rx="2" ry="2" _orig_x="503.3" _orig_width="0.1"/>
<text x="343.9816207184628" y="1743.5" _orig_x="506.28"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (14 samples, 0.01%)</title><rect x="286.69139515455305" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(220,120,54)" rx="2" ry="2" _orig_x="294.4" _orig_width="0.1"/>
<text x="289.69139515455305" y="1887.5" _orig_x="297.38"/>
</g>
<g class="hide">
<title>[perf-58119.map] (300 samples, 0.25%)</title><rect x="114.76395154553056" y="1445" width="3.1240601503759398" height="15.0" fill="rgb(208,40,45)" rx="2" ry="2" _orig_x="129.3" _orig_width="3.0"/>
<text x="117.76395154553056" y="1455.5" _orig_x="132.29"/>
</g>
<g class="hide">
<title>wukong::AsyncJob::processFor&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (132 samples, 0.11%)</title><rect x="17.085004177109496" y="1893" width="1.3537593984962406" height="15.0" fill="rgb(213,84,28)" rx="2" ry="2" _orig_x="35.5" _orig_width="1.3"/>
<text x="20.085004177109496" y="1903.5" _orig_x="38.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="911.6075605680869" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(234,100,23)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="1999.5" _orig_x="897.48"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue (21 samples, 0.02%)</title><rect x="166.8316207184629" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(212,168,15)" rx="2" ry="2" _orig_x="179.3" _orig_width="0.2"/>
<text x="169.8316207184629" y="1759.5" _orig_x="182.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.06%)</title><rect x="302.72823725981624" y="1893" width="0.7289473684210526" height="15.0" fill="rgb(254,145,8)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1903.5" _orig_x="312.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="271.9041771094403" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(232,94,53)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1887.5" _orig_x="283.17"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(216,201,34)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1679.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (270 samples, 0.23%)</title><rect x="62.69628237259821" y="1941" width="2.811654135338346" height="15.0" fill="rgb(247,91,45)" rx="2" ry="2" _orig_x="79.3" _orig_width="2.7"/>
<text x="65.6962823725982" y="1951.5" _orig_x="82.28"/>
</g>
<g>
<title>Row::GetField (19 samples, 0.02%)</title><rect x="66.1904761904762" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(229,151,6)" rx="2" ry="2" _orig_x="391.8" _orig_width="0.2"/>
<text x="69.1904761904762" y="1855.5" _orig_x="394.78"/>
</g>
<g class="hide">
<title>[unknown] (202 samples, 0.17%)</title><rect x="318.14026733500424" y="2021" width="2.082706766917293" height="15.0" fill="rgb(212,29,37)" rx="2" ry="2" _orig_x="324.6" _orig_width="2.0"/>
<text x="321.14026733500424" y="2031.5" _orig_x="327.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="1163.0204572803848" y="1973" width="0.9466506217408744" height="15.0" fill="rgb(217,115,24)" rx="2" ry="2" _orig_x="848.3" _orig_width="0.4"/>
<text x="1166.0204572803848" y="1983.5" _orig_x="851.30"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (403 samples, 0.34%)</title><rect x="53.868003341687576" y="1781" width="9.85797827903091" height="15.0" fill="rgb(244,204,44)" rx="2" ry="2" _orig_x="386.8" _orig_width="4.0"/>
<text x="56.868003341687576" y="1791.5" _orig_x="389.85"/>
</g>
<g>
<title>Row::GetFields (11 samples, 0.01%)</title><rect x="797.406015037594" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(209,50,11)" rx="2" ry="2" _orig_x="688.5" _orig_width="0.1"/>
<text x="800.406015037594" y="1855.5" _orig_x="691.45"/>
</g>
<g class="hide">
<title>blink::ScheduledAction::Execute (2,312 samples, 1.94%)</title><rect x="177.34928989139522" y="1717" width="23.951127819548873" height="15.0" fill="rgb(228,26,25)" rx="2" ry="2" _orig_x="189.4" _orig_width="23.0"/>
<text x="180.34928989139522" y="1727.5" _orig_x="192.41">blink::ScheduledAction::Execute </text>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Lookup (5,070 samples, 4.26%)</title><rect x="565.7435254803676" y="1893" width="123.96407685881368" height="15.0" fill="rgb(219,211,2)" rx="2" ry="2" _orig_x="594.5" _orig_width="50.3"/>
<text x="568.7435254803676" y="1903.5" _orig_x="597.51">BPlusTreeLeafPa..</text>
</g>
<g class="hide">
<title>[code] (145 samples, 0.12%)</title><rect x="98.31056808688393" y="1909" width="1.4578947368421051" height="15.0" fill="rgb(248,71,39)" rx="2" ry="2" _orig_x="113.5" _orig_width="1.4"/>
<text x="101.31056808688393" y="1919.5" _orig_x="116.47"/>
</g>
<g class="hide">
<title>blink::message_event_v8_internal::ConstructorCallback (976 samples, 0.82%)</title><rect x="187.45041771094407" y="1477" width="10.101127819548871" height="15.0" fill="rgb(225,110,13)" rx="2" ry="2" _orig_x="199.1" _orig_width="9.7"/>
<text x="190.45041771094407" y="1487.5" _orig_x="202.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,292 samples, 5.29%)</title><rect x="1098.0098162071847" y="1893" width="64.98045112781955" height="15.0" fill="rgb(254,70,38)" rx="2" ry="2" _orig_x="1073.5" _orig_width="62.4"/>
<text x="1101.0098162071847" y="1903.5" _orig_x="1076.47">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[vdso]] (1,119 samples, 0.94%)</title><rect x="256.4921470342523" y="2037" width="11.559022556390977" height="15.0" fill="rgb(221,86,20)" rx="2" ry="2" _orig_x="265.4" _orig_width="11.1"/>
<text x="259.4921470342523" y="2047.5" _orig_x="268.42"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30 samples, 0.03%)</title><rect x="1160.9189640768589" y="1925" width="0.7393483709273182" height="15.0" fill="rgb(215,92,18)" rx="2" ry="2" _orig_x="836.0" _orig_width="0.3"/>
<text x="1163.9189640768589" y="1935.5" _orig_x="839.00"/>
</g>
<g class="hide">
<title>[unknown] (240 samples, 0.20%)</title><rect x="49.4710944026734" y="2005" width="2.4992481203007517" height="15.0" fill="rgb(230,217,12)" rx="2" ry="2" _orig_x="66.6" _orig_width="2.4"/>
<text x="52.4710944026734" y="2015.5" _orig_x="69.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="42.285756056808744" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(221,91,12)" rx="2" ry="2" _orig_x="59.7" _orig_width="0.2"/>
<text x="45.285756056808744" y="1983.5" _orig_x="62.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="21.8" y="1925" width="0.4" height="15.0" fill="rgb(216,70,32)" rx="2" ry="2"/>
<text x="24.79" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (12 samples, 0.01%)</title><rect x="94.5616959064328" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(225,44,40)" rx="2" ry="2" _orig_x="109.9" _orig_width="0.2"/>
<text x="97.5616959064328" y="1967.5" _orig_x="112.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="11.2" y="2005" width="0.2" height="15.0" fill="rgb(209,110,40)" rx="2" ry="2"/>
<text x="14.20" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="83.31507936507941" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(239,216,34)" rx="2" ry="2" _orig_x="99.1" _orig_width="0.1"/>
<text x="86.31507936507941" y="1743.5" _orig_x="102.07"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (395 samples, 0.33%)</title><rect x="848.6675020885546" y="1829" width="9.611528822055138" height="15.0" fill="rgb(240,156,35)" rx="2" ry="2" _orig_x="709.3" _orig_width="3.9"/>
<text x="851.6675020885546" y="1839.5" _orig_x="712.27"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12 samples, 0.01%)</title><rect x="1164.8621553884711" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(250,123,36)" rx="2" ry="2" _orig_x="837.6" _orig_width="0.1"/>
<text x="1167.8621553884711" y="1919.5" _orig_x="840.62"/>
</g>
<g>
<title>TablePage::GetTupleSize (15 samples, 0.01%)</title><rect x="1179.4026733500416" y="1925" width="0.4928989139515455" height="15.0" fill="rgb(222,162,50)" rx="2" ry="2" _orig_x="843.5" _orig_width="0.2"/>
<text x="1182.4026733500416" y="1935.5" _orig_x="846.51"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (13 samples, 0.01%)</title><rect x="55.34670008354213" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(244,64,40)" rx="2" ry="2" _orig_x="387.4" _orig_width="0.1"/>
<text x="58.34670008354213" y="1775.5" _orig_x="390.39"/>
</g>
<g class="hide">
<title>[perf-58157.map] (125 samples, 0.11%)</title><rect x="123.30304928989145" y="1605" width="1.3537593984962406" height="15.0" fill="rgb(226,18,7)" rx="2" ry="2" _orig_x="137.5" _orig_width="1.3"/>
<text x="126.30304928989145" y="1615.5" _orig_x="140.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="339.80041771094403" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(211,117,33)" rx="2" ry="2" _orig_x="345.4" _orig_width="0.2"/>
<text x="342.80041771094403" y="2031.5" _orig_x="348.43"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (17 samples, 0.01%)</title><rect x="1159.9331662489556" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(212,61,24)" rx="2" ry="2" _orig_x="835.6" _orig_width="0.1"/>
<text x="1162.9331662489556" y="1919.5" _orig_x="838.57"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (228 samples, 0.19%)</title><rect x="274.93316624895573" y="1829" width="5.4218880534670015" height="15.0" fill="rgb(205,161,40)" rx="2" ry="2" _orig_x="476.5" _orig_width="2.2"/>
<text x="277.93316624895573" y="1839.5" _orig_x="479.46"/>
</g>
<g class="hide">
<title>[perf-58145.map] (24 samples, 0.02%)</title><rect x="125.69816207184634" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(205,123,16)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.2"/>
<text x="128.69816207184635" y="1823.5" _orig_x="142.80"/>
</g>
<g class="hide">
<title>blink::Document::UpdateStyleAndLayoutTree (13 samples, 0.01%)</title><rect x="182.55605680868845" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(215,54,52)" rx="2" ry="2" _orig_x="194.4" _orig_width="0.1"/>
<text x="185.55605680868845" y="1455.5" _orig_x="197.36"/>
</g>
<g class="hide">
<title>[libxul.so] (21 samples, 0.02%)</title><rect x="20.8" y="2021" width="0.3" height="15.0" fill="rgb(221,82,8)" rx="2" ry="2"/>
<text x="23.85" y="2031.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (22 samples, 0.02%)</title><rect x="845.9565580618213" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(237,4,33)" rx="2" ry="2" _orig_x="708.2" _orig_width="0.3"/>
<text x="848.9565580618213" y="1775.5" _orig_x="711.25"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (13 samples, 0.01%)</title><rect x="826.7335004177108" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(228,35,14)" rx="2" ry="2" _orig_x="700.4" _orig_width="0.1"/>
<text x="829.7335004177108" y="1743.5" _orig_x="703.41"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1557" width="0.31240601503759396" height="15.0" fill="rgb(230,121,46)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1567.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="757" width="0.31240601503759396" height="15.0" fill="rgb(214,175,54)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="767.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (17 samples, 0.01%)</title><rect x="236.4870509607351" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(209,72,42)" rx="2" ry="2" _orig_x="460.9" _orig_width="0.2"/>
<text x="239.4870509607351" y="1759.5" _orig_x="463.89"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="227.61487050960736" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(244,195,42)" rx="2" ry="2" _orig_x="457.3" _orig_width="0.2"/>
<text x="230.61487050960736" y="1807.5" _orig_x="460.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="304.39440267335004" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(235,53,45)" rx="2" ry="2" _orig_x="311.4" _orig_width="0.3"/>
<text x="307.39440267335004" y="1903.5" _orig_x="314.43"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="242.8504177109441" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(216,123,8)" rx="2" ry="2" _orig_x="252.3" _orig_width="0.1"/>
<text x="245.8504177109441" y="2047.5" _orig_x="255.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="329.17861319966585" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(223,88,24)" rx="2" ry="2" _orig_x="335.2" _orig_width="0.6"/>
<text x="332.17861319966585" y="2047.5" _orig_x="338.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (16 samples, 0.01%)</title><rect x="30.701754385964854" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(249,4,51)" rx="2" ry="2" _orig_x="377.4" _orig_width="0.2"/>
<text x="33.701754385964854" y="1711.5" _orig_x="380.41"/>
</g>
<g>
<title>TypeInt::CompareLessThan (18 samples, 0.02%)</title><rect x="694.6365914786967" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(239,173,16)" rx="2" ry="2" _orig_x="646.8" _orig_width="0.2"/>
<text x="697.6365914786967" y="1871.5" _orig_x="649.81"/>
</g>
<g class="hide">
<title>g_main_context_prepare (15 samples, 0.01%)</title><rect x="301.27034252297415" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(231,131,28)" rx="2" ry="2" _orig_x="308.4" _orig_width="0.1"/>
<text x="304.27034252297415" y="2031.5" _orig_x="311.37"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::Allocate&lt;blink::ScriptWrappable&gt; (24 samples, 0.02%)</title><rect x="189.53312447786138" y="1445" width="0.20827067669172933" height="15.0" fill="rgb(210,227,19)" rx="2" ry="2" _orig_x="201.1" _orig_width="0.2"/>
<text x="192.53312447786138" y="1455.5" _orig_x="204.07"/>
</g>
<g class="hide">
<title>[code] (143 samples, 0.12%)</title><rect x="98.31056808688393" y="1893" width="1.4578947368421051" height="15.0" fill="rgb(244,196,17)" rx="2" ry="2" _orig_x="113.5" _orig_width="1.4"/>
<text x="101.31056808688393" y="1903.5" _orig_x="116.49"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (19 samples, 0.02%)</title><rect x="492.79448621553877" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(211,140,46)" rx="2" ry="2" _orig_x="564.9" _orig_width="0.2"/>
<text x="495.79448621553877" y="1775.5" _orig_x="567.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (15 samples, 0.01%)</title><rect x="379.920634920635" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(217,65,33)" rx="2" ry="2" _orig_x="519.1" _orig_width="0.1"/>
<text x="382.920634920635" y="1839.5" _orig_x="522.10"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (64 samples, 0.05%)</title><rect x="353.796992481203" y="1733" width="1.7251461988304093" height="15.0" fill="rgb(243,15,26)" rx="2" ry="2" _orig_x="508.5" _orig_width="0.7"/>
<text x="356.796992481203" y="1743.5" _orig_x="511.53"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (83 samples, 0.07%)</title><rect x="134.94987468671678" y="1749" width="1.971595655806182" height="15.0" fill="rgb(221,147,18)" rx="2" ry="2" _orig_x="419.7" _orig_width="0.8"/>
<text x="137.94987468671678" y="1759.5" _orig_x="422.66"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (344 samples, 0.29%)</title><rect x="349.60735171261484" y="1765" width="8.379281537176274" height="15.0" fill="rgb(220,144,5)" rx="2" ry="2" _orig_x="506.8" _orig_width="3.4"/>
<text x="352.60735171261484" y="1775.5" _orig_x="509.78"/>
</g>
<g class="hide">
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (12 samples, 0.01%)</title><rect x="18.334628237259874" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(208,55,10)" rx="2" ry="2" _orig_x="36.7" _orig_width="0.1"/>
<text x="21.334628237259874" y="1871.5" _orig_x="39.70"/>
</g>
<g class="hide">
<title>[perf-58119.map] (27 samples, 0.02%)</title><rect x="112.16056808688393" y="1621" width="0.31240601503759396" height="15.0" fill="rgb(234,96,23)" rx="2" ry="2" _orig_x="126.8" _orig_width="0.3"/>
<text x="115.16056808688393" y="1631.5" _orig_x="129.84"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="913.3" y="2053" width="0.3" height="15.0" fill="rgb(236,77,19)" rx="2" ry="2"/>
<text x="916.31" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="517.1929824561403" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(234,70,44)" rx="2" ry="2" _orig_x="574.8" _orig_width="0.1"/>
<text x="520.1929824561403" y="1743.5" _orig_x="577.83"/>
</g>
<g class="hide">
<title>[perf-58119.map] (386 samples, 0.32%)</title><rect x="113.82673350041777" y="1557" width="4.061278195488722" height="15.0" fill="rgb(206,100,48)" rx="2" ry="2" _orig_x="128.4" _orig_width="3.9"/>
<text x="116.82673350041777" y="1567.5" _orig_x="131.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="339.80041771094403" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(244,193,48)" rx="2" ry="2" _orig_x="345.4" _orig_width="0.2"/>
<text x="342.80041771094403" y="2015.5" _orig_x="348.44"/>
</g>
<g>
<title>LRUReplacer::Unpin (105 samples, 0.09%)</title><rect x="779.908103592314" y="1893" width="2.7109440267335008" height="15.0" fill="rgb(220,171,31)" rx="2" ry="2" _orig_x="681.4" _orig_width="1.1"/>
<text x="782.908103592314" y="1903.5" _orig_x="684.45"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="33.8" y="2053" width="0.2" height="15.0" fill="rgb(231,208,48)" rx="2" ry="2"/>
<text x="36.82" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(210,77,47)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1951.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (12 samples, 0.01%)</title><rect x="278.3834586466165" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,172,15)" rx="2" ry="2" _orig_x="477.9" _orig_width="0.1"/>
<text x="281.3834586466165" y="1759.5" _orig_x="480.92"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (12 samples, 0.01%)</title><rect x="194.83709273182956" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(243,25,43)" rx="2" ry="2" _orig_x="444.0" _orig_width="0.2"/>
<text x="197.83709273182956" y="1759.5" _orig_x="447.04"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="901" width="0.31240601503759396" height="15.0" fill="rgb(212,189,24)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="911.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>v8::internal::FunctionCallbackArguments::Call (1,012 samples, 0.85%)</title><rect x="187.1380116959065" y="1493" width="10.413533834586467" height="15.0" fill="rgb(218,49,8)" rx="2" ry="2" _orig_x="198.8" _orig_width="10.0"/>
<text x="190.1380116959065" y="1503.5" _orig_x="201.77"/>
</g>
<g class="hide">
<title>blink::message_event_v8_internal::ConstructorCallback (103 samples, 0.09%)</title><rect x="164.01996658312453" y="1493" width="1.0413533834586466" height="15.0" fill="rgb(224,128,47)" rx="2" ry="2" _orig_x="176.6" _orig_width="1.0"/>
<text x="167.01996658312453" y="1503.5" _orig_x="179.60"/>
</g>
<g class="hide">
<title>blink::EventTarget::DispatchEventInternal (97 samples, 0.08%)</title><rect x="183.70154553049295" y="1493" width="1.0413533834586466" height="15.0" fill="rgb(240,135,2)" rx="2" ry="2" _orig_x="195.5" _orig_width="1.0"/>
<text x="186.70154553049295" y="1503.5" _orig_x="198.53"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (122 samples, 0.10%)</title><rect x="762.1637426900586" y="1765" width="2.957393483709273" height="15.0" fill="rgb(249,140,54)" rx="2" ry="2" _orig_x="674.2" _orig_width="1.2"/>
<text x="765.1637426900586" y="1775.5" _orig_x="677.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (12 samples, 0.01%)</title><rect x="800.1169590643275" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(216,147,31)" rx="2" ry="2" _orig_x="689.6" _orig_width="0.1"/>
<text x="803.1169590643275" y="1807.5" _orig_x="692.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="323.5553049289892" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(210,118,43)" rx="2" ry="2" _orig_x="329.8" _orig_width="0.2"/>
<text x="326.5553049289892" y="1999.5" _orig_x="332.75"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (27 samples, 0.02%)</title><rect x="146.83763575605684" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(205,55,43)" rx="2" ry="2" _orig_x="160.1" _orig_width="0.2"/>
<text x="149.83763575605684" y="1967.5" _orig_x="163.06"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (67 samples, 0.06%)</title><rect x="1019.4569757727652" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(232,122,21)" rx="2" ry="2" _orig_x="778.6" _orig_width="0.6"/>
<text x="1022.4569757727652" y="1807.5" _orig_x="781.58"/>
</g>
<g class="hide">
<title>[code] (17 samples, 0.01%)</title><rect x="113.51432748538016" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(250,89,27)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1567.5" _orig_x="131.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="107.26620718462829" y="1813" width="1.0413533834586466" height="15.0" fill="rgb(249,33,2)" rx="2" ry="2" _orig_x="122.1" _orig_width="1.0"/>
<text x="110.26620718462829" y="1823.5" _orig_x="125.13"/>
</g>
<g class="hide">
<title>[perf-58145.map] (205 samples, 0.17%)</title><rect x="126.6353801169591" y="1701" width="2.082706766917293" height="15.0" fill="rgb(207,164,27)" rx="2" ry="2" _orig_x="140.7" _orig_width="2.0"/>
<text x="129.63538011695908" y="1711.5" _orig_x="143.71"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (21 samples, 0.02%)</title><rect x="1042.8696741854637" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(235,134,18)" rx="2" ry="2" _orig_x="788.1" _orig_width="0.2"/>
<text x="1045.8696741854637" y="1791.5" _orig_x="791.13"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (19 samples, 0.02%)</title><rect x="639.4319131161236" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(217,92,23)" rx="2" ry="2" _orig_x="624.4" _orig_width="0.2"/>
<text x="642.4319131161236" y="1759.5" _orig_x="627.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.05%)</title><rect x="170.68462823725986" y="1765" width="0.6248120300751879" height="15.0" fill="rgb(226,67,9)" rx="2" ry="2" _orig_x="183.0" _orig_width="0.6"/>
<text x="173.68462823725986" y="1775.5" _orig_x="185.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="348.9643274853801" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(236,144,10)" rx="2" ry="2" _orig_x="354.2" _orig_width="0.8"/>
<text x="351.9643274853801" y="2047.5" _orig_x="357.19"/>
</g>
<g class="hide">
<title>ntfs_attr_pwrite (33 samples, 0.03%)</title><rect x="901.4022974101922" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(209,99,19)" rx="2" ry="2" _orig_x="884.7" _orig_width="0.3"/>
<text x="904.4022974101922" y="2047.5" _orig_x="887.72"/>
</g>
<g class="hide">
<title>[chrome] (29 samples, 0.02%)</title><rect x="92.16658312447791" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(214,76,14)" rx="2" ry="2" _orig_x="107.6" _orig_width="0.2"/>
<text x="95.16658312447791" y="1711.5" _orig_x="110.55"/>
</g>
<g class="hide">
<title>[unknown] (160 samples, 0.13%)</title><rect x="28.5" y="2037" width="1.6" height="15.0" fill="rgb(244,117,17)" rx="2" ry="2"/>
<text x="31.54" y="2047.5"/>
</g>
<g>
<title>_int_free (13 samples, 0.01%)</title><rect x="623.90559732665" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(254,21,24)" rx="2" ry="2" _orig_x="618.1" _orig_width="0.2"/>
<text x="626.90559732665" y="1839.5" _orig_x="621.15"/>
</g>
<g class="hide">
<title>content::RendererMain (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1877" width="55.81654135338346" height="15.0" fill="rgb(227,163,11)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1887.5" _orig_x="185.47">content::RendererMain </text>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="469" width="0.20827067669172933" height="15.0" fill="rgb(238,44,17)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="479.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (52 samples, 0.04%)</title><rect x="655.6975772765246" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(232,188,37)" rx="2" ry="2" _orig_x="631.0" _orig_width="0.5"/>
<text x="658.6975772765246" y="1839.5" _orig_x="634.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.10%)</title><rect x="72.90154553049294" y="1989" width="1.2496240601503759" height="15.0" fill="rgb(249,98,36)" rx="2" ry="2" _orig_x="89.1" _orig_width="1.2"/>
<text x="75.90154553049294" y="1999.5" _orig_x="92.11"/>
</g>
<g class="hide">
<title>[perf-58119.map] (91 samples, 0.08%)</title><rect x="120.07485380116965" y="1589" width="0.937218045112782" height="15.0" fill="rgb(220,6,4)" rx="2" ry="2" _orig_x="134.4" _orig_width="0.9"/>
<text x="123.07485380116965" y="1599.5" _orig_x="137.36"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(205,123,15)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1695.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="41.45267335004182" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(231,154,23)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1967.5" _orig_x="61.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (233 samples, 0.20%)</title><rect x="424.5279866332499" y="1765" width="5.668337510442773" height="15.0" fill="rgb(238,42,34)" rx="2" ry="2" _orig_x="537.2" _orig_width="2.3"/>
<text x="427.5279866332499" y="1775.5" _orig_x="540.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="344.48650793650796" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(231,131,10)" rx="2" ry="2" _orig_x="349.9" _orig_width="0.6"/>
<text x="347.48650793650796" y="2047.5" _orig_x="352.93"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (39 samples, 0.03%)</title><rect x="603.6967418546365" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(216,218,16)" rx="2" ry="2" _orig_x="609.9" _orig_width="0.3"/>
<text x="606.6967418546365" y="1775.5" _orig_x="612.85"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1541" width="0.31240601503759396" height="15.0" fill="rgb(245,36,11)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1551.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="741" width="0.31240601503759396" height="15.0" fill="rgb(248,175,3)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="751.5" _orig_x="32.46"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (19 samples, 0.02%)</title><rect x="285.7769423558897" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(226,43,42)" rx="2" ry="2" _orig_x="480.9" _orig_width="0.2"/>
<text x="288.7769423558897" y="1791.5" _orig_x="483.89"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (72 samples, 0.06%)</title><rect x="457.7986633249792" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(246,141,4)" rx="2" ry="2" _orig_x="550.7" _orig_width="0.7"/>
<text x="460.7986633249792" y="1759.5" _orig_x="553.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="13.5" y="1781" width="0.1" height="15.0" fill="rgb(226,15,21)" rx="2" ry="2"/>
<text x="16.45" y="1791.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (186 samples, 0.16%)</title><rect x="391.0108604845447" y="1781" width="4.43609022556391" height="15.0" fill="rgb(248,134,3)" rx="2" ry="2" _orig_x="523.6" _orig_width="1.8"/>
<text x="394.0108604845447" y="1791.5" _orig_x="526.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.05%)</title><rect x="348.339515455305" y="1893" width="0.6248120300751879" height="15.0" fill="rgb(218,78,19)" rx="2" ry="2" _orig_x="353.6" _orig_width="0.6"/>
<text x="351.339515455305" y="1903.5" _orig_x="356.64"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (12 samples, 0.01%)</title><rect x="419.3525480367586" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(214,18,7)" rx="2" ry="2" _orig_x="535.1" _orig_width="0.2"/>
<text x="422.3525480367586" y="1759.5" _orig_x="538.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="124.13613199665838" y="1205" width="0.31240601503759396" height="15.0" fill="rgb(248,163,25)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1215.5" _orig_x="141.32"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="27.915079365079418" y="165" width="0.20827067669172933" height="15.0" fill="rgb(225,22,36)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="175.5" _orig_x="48.88"/>
</g>
<g>
<title>Row::DeserializeFrom (3,240 samples, 2.72%)</title><rect x="570.9189640768589" y="1845" width="79.11027568922306" height="15.0" fill="rgb(229,64,28)" rx="2" ry="2" _orig_x="596.6" _orig_width="32.1"/>
<text x="573.9189640768589" y="1855.5" _orig_x="599.60">Row::Dese..</text>
</g>
<g class="hide">
<title>[python3.8] (45 samples, 0.04%)</title><rect x="80.3992898913952" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(251,121,25)" rx="2" ry="2" _orig_x="96.3" _orig_width="0.4"/>
<text x="83.3992898913952" y="2031.5" _orig_x="99.27"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (27 samples, 0.02%)</title><rect x="539.8663324979115" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(246,195,19)" rx="2" ry="2" _orig_x="584.0" _orig_width="0.3"/>
<text x="542.8663324979115" y="1823.5" _orig_x="587.00"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (17 samples, 0.01%)</title><rect x="660.3801169590643" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(251,182,45)" rx="2" ry="2" _orig_x="632.9" _orig_width="0.2"/>
<text x="663.3801169590643" y="1775.5" _orig_x="635.92"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (22 samples, 0.02%)</title><rect x="391.5037593984961" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(241,199,45)" rx="2" ry="2" _orig_x="523.8" _orig_width="0.2"/>
<text x="394.5037593984961" y="1775.5" _orig_x="526.80"/>
</g>
<g class="hide">
<title>[unknown] (76 samples, 0.06%)</title><rect x="80.29515455304934" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(230,151,46)" rx="2" ry="2" _orig_x="96.2" _orig_width="0.8"/>
<text x="83.29515455304934" y="2047.5" _orig_x="99.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="1973" width="47.58984962406015" height="15.0" fill="rgb(220,216,46)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="1983.5" _orig_x="1138.90">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="254.40944026733504" y="1925" width="0.6248120300751879" height="15.0" fill="rgb(225,110,46)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="257.40944026733507" y="1935.5" _orig_x="266.44"/>
</g>
<g class="hide">
<title>[[vdso]] (47 samples, 0.04%)</title><rect x="95.49891395154557" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(246,178,39)" rx="2" ry="2" _orig_x="110.8" _orig_width="0.5"/>
<text x="98.49891395154557" y="2047.5" _orig_x="113.82"/>
</g>
<g class="hide">
<title>[unknown] (177 samples, 0.15%)</title><rect x="49.679365079365134" y="197" width="1.874436090225564" height="15.0" fill="rgb(214,132,54)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.8"/>
<text x="52.679365079365134" y="207.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(218,155,11)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1871.5" _orig_x="297.81"/>
</g>
<g class="hide">
<title>quic::QuicCryptoClientHandshaker::crypto_negotiated_params (19 samples, 0.02%)</title><rect x="222.127485380117" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(217,168,13)" rx="2" ry="2" _orig_x="232.4" _orig_width="0.2"/>
<text x="225.127485380117" y="1711.5" _orig_x="235.44"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (13 samples, 0.01%)</title><rect x="1051.4954051796158" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(247,141,41)" rx="2" ry="2" _orig_x="791.6" _orig_width="0.1"/>
<text x="1054.4954051796158" y="1855.5" _orig_x="794.57"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvent (856 samples, 0.72%)</title><rect x="145.7962823725982" y="1989" width="8.851503759398495" height="15.0" fill="rgb(205,164,3)" rx="2" ry="2" _orig_x="159.1" _orig_width="8.5"/>
<text x="148.7962823725982" y="1999.5" _orig_x="162.14"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr0 (166 samples, 0.14%)</title><rect x="67.69477861319972" y="1893" width="1.6661654135338346" height="15.0" fill="rgb(237,216,14)" rx="2" ry="2" _orig_x="84.1" _orig_width="1.6"/>
<text x="70.69477861319972" y="1903.5" _orig_x="87.06"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (20 samples, 0.02%)</title><rect x="105.62238930659986" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(206,171,41)" rx="2" ry="2" _orig_x="407.8" _orig_width="0.2"/>
<text x="108.62238930659986" y="1711.5" _orig_x="410.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="65.19553049289897" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(214,161,4)" rx="2" ry="2" _orig_x="81.7" _orig_width="0.3"/>
<text x="68.19553049289897" y="1823.5" _orig_x="84.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="69.56921470342529" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(224,223,33)" rx="2" ry="2" _orig_x="85.9" _orig_width="0.2"/>
<text x="72.56921470342529" y="1887.5" _orig_x="88.86"/>
</g>
<g class="hide">
<title>blink::DOMTimer::Fired (2,727 samples, 2.29%)</title><rect x="175.8913951545531" y="1749" width="28.220676691729324" height="15.0" fill="rgb(231,121,36)" rx="2" ry="2" _orig_x="188.0" _orig_width="27.1"/>
<text x="178.8913951545531" y="1759.5" _orig_x="191.03">blink::DOMTimer::Fired </text>
</g>
<g class="hide">
<title>blink::EventTarget::dispatchEventForBindings (105 samples, 0.09%)</title><rect x="183.5974101921471" y="1509" width="1.1454887218045113" height="15.0" fill="rgb(237,125,8)" rx="2" ry="2" _orig_x="195.4" _orig_width="1.1"/>
<text x="186.5974101921471" y="1519.5" _orig_x="198.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="278.6729741019215" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(246,48,50)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="1999.5" _orig_x="289.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="52.17861319966589" y="1877" width="0.8330827067669173" height="15.0" fill="rgb(233,24,10)" rx="2" ry="2" _orig_x="69.2" _orig_width="0.8"/>
<text x="55.17861319966589" y="1887.5" _orig_x="72.22"/>
</g>
<g class="hide">
<title>[code] (31 samples, 0.03%)</title><rect x="142.56808688387642" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(235,88,8)" rx="2" ry="2" _orig_x="156.0" _orig_width="0.3"/>
<text x="145.56808688387642" y="1999.5" _orig_x="159.03"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (13 samples, 0.01%)</title><rect x="875.7769423558896" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(229,118,28)" rx="2" ry="2" _orig_x="720.3" _orig_width="0.1"/>
<text x="878.7769423558896" y="1807.5" _orig_x="723.27"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="127.26019214703432" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(229,183,35)" rx="2" ry="2" _orig_x="141.3" _orig_width="0.2"/>
<text x="130.26019214703433" y="1567.5" _orig_x="144.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(250,209,0)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1967.5" _orig_x="101.86"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (20 samples, 0.02%)</title><rect x="1013.295739348371" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(237,28,34)" rx="2" ry="2" _orig_x="776.1" _orig_width="0.2"/>
<text x="1016.295739348371" y="1791.5" _orig_x="779.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (397 samples, 0.33%)</title><rect x="22.708312447786184" y="2005" width="4.061278195488722" height="15.0" fill="rgb(218,26,48)" rx="2" ry="2" _orig_x="40.9" _orig_width="3.9"/>
<text x="25.708312447786184" y="2015.5" _orig_x="43.86"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetClock (17 samples, 0.01%)</title><rect x="223.3771094402674" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(213,92,16)" rx="2" ry="2" _orig_x="233.6" _orig_width="0.2"/>
<text x="226.3771094402674" y="1775.5" _orig_x="236.59"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (33 samples, 0.03%)</title><rect x="759.452798663325" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(241,209,2)" rx="2" ry="2" _orig_x="673.1" _orig_width="0.3"/>
<text x="762.452798663325" y="1759.5" _orig_x="676.12"/>
</g>
<g class="hide">
<title>[perf-32884.map] (82 samples, 0.07%)</title><rect x="98.83124477861325" y="1621" width="0.8330827067669173" height="15.0" fill="rgb(234,186,4)" rx="2" ry="2" _orig_x="114.0" _orig_width="0.8"/>
<text x="101.83124477861325" y="1631.5" _orig_x="116.96"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (21 samples, 0.02%)</title><rect x="989.8830409356725" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(243,163,37)" rx="2" ry="2" _orig_x="766.6" _orig_width="0.2"/>
<text x="992.8830409356725" y="1743.5" _orig_x="769.62"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(242,50,22)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1807.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (79 samples, 0.07%)</title><rect x="257.18880534670006" y="1701" width="1.971595655806182" height="15.0" fill="rgb(207,208,3)" rx="2" ry="2" _orig_x="469.3" _orig_width="0.8"/>
<text x="260.18880534670006" y="1711.5" _orig_x="472.33"/>
</g>
<g class="hide">
<title>[perf-58119.map] (30 samples, 0.03%)</title><rect x="120.69966583124483" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(229,108,29)" rx="2" ry="2" _orig_x="135.0" _orig_width="0.3"/>
<text x="123.69966583124483" y="1471.5" _orig_x="137.97"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (15 samples, 0.01%)</title><rect x="946.0150375939847" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(215,157,21)" rx="2" ry="2" _orig_x="748.8" _orig_width="0.1"/>
<text x="949.0150375939847" y="1903.5" _orig_x="751.77"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (86 samples, 0.07%)</title><rect x="360.69757727652467" y="1765" width="2.218045112781955" height="15.0" fill="rgb(242,61,4)" rx="2" ry="2" _orig_x="511.3" _orig_width="0.9"/>
<text x="363.69757727652467" y="1775.5" _orig_x="514.34"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (18 samples, 0.02%)</title><rect x="287.1079365079366" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(212,26,28)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1823.5" _orig_x="297.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="931.8098162071847" y="2005" width="0.937218045112782" height="15.0" fill="rgb(231,157,6)" rx="2" ry="2" _orig_x="913.9" _orig_width="0.9"/>
<text x="934.8098162071847" y="2015.5" _orig_x="916.94"/>
</g>
<g class="hide">
<title>[code] (150 samples, 0.13%)</title><rect x="31.143274853801223" y="2021" width="1.4578947368421051" height="15.0" fill="rgb(250,212,18)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="2031.5" _orig_x="51.96"/>
</g>
<g class="hide">
<title>[unknown] (41 samples, 0.03%)</title><rect x="168.8101921470343" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(226,161,14)" rx="2" ry="2" _orig_x="181.2" _orig_width="0.4"/>
<text x="171.8101921470343" y="2047.5" _orig_x="184.16"/>
</g>
<g class="hide">
<title>[code] (2,276 samples, 1.91%)</title><rect x="109.14064327485386" y="2021" width="23.534586466165415" height="15.0" fill="rgb(232,137,24)" rx="2" ry="2" _orig_x="123.9" _orig_width="22.6"/>
<text x="112.14064327485386" y="2031.5" _orig_x="126.94">[code] </text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (11 samples, 0.01%)</title><rect x="204.6950710108605" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(253,130,25)" rx="2" ry="2" _orig_x="448.0" _orig_width="0.1"/>
<text x="207.6950710108605" y="1823.5" _orig_x="450.97"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1733" width="2.2909774436090227" height="15.0" fill="rgb(244,166,10)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1743.5" _orig_x="69.82"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (3,139 samples, 2.64%)</title><rect x="245.359231411863" y="1877" width="76.64578111946533" height="15.0" fill="rgb(246,43,21)" rx="2" ry="2" _orig_x="464.5" _orig_width="31.1"/>
<text x="248.359231411863" y="1887.5" _orig_x="467.45">GenericC..</text>
</g>
<g class="hide">
<title>[unknown] (294 samples, 0.25%)</title><rect x="283.6" y="2053" width="2.9" height="15.0" fill="rgb(209,94,13)" rx="2" ry="2"/>
<text x="286.59" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="55.61507936507942" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(246,101,42)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="1951.5" _orig_x="75.53"/>
</g>
<g class="hide">
<title>[chrome] (36 samples, 0.03%)</title><rect x="92.06244778613205" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(247,174,18)" rx="2" ry="2" _orig_x="107.5" _orig_width="0.3"/>
<text x="95.06244778613205" y="1743.5" _orig_x="110.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (387 samples, 0.33%)</title><rect x="66.23688387635761" y="1989" width="3.957142857142857" height="15.0" fill="rgb(218,184,29)" rx="2" ry="2" _orig_x="82.7" _orig_width="3.8"/>
<text x="69.23688387635761" y="1999.5" _orig_x="85.67"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (33 samples, 0.03%)</title><rect x="884.4026733500416" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(254,117,16)" rx="2" ry="2" _orig_x="723.8" _orig_width="0.3"/>
<text x="887.4026733500416" y="1791.5" _orig_x="726.82"/>
</g>
<g class="hide">
<title>blink::DOMTimer::Fired (245 samples, 0.21%)</title><rect x="163.08274853801174" y="1765" width="2.4992481203007517" height="15.0" fill="rgb(232,54,34)" rx="2" ry="2" _orig_x="175.7" _orig_width="2.4"/>
<text x="166.08274853801174" y="1775.5" _orig_x="178.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.09%)</title><rect x="155.58500417710948" y="1893" width="1.1454887218045113" height="15.0" fill="rgb(247,34,5)" rx="2" ry="2" _orig_x="168.5" _orig_width="1.1"/>
<text x="158.58500417710948" y="1903.5" _orig_x="171.49"/>
</g>
<g class="hide">
<title>[chrome] (138 samples, 0.12%)</title><rect x="91.95831244778618" y="1813" width="1.3537593984962406" height="15.0" fill="rgb(209,175,40)" rx="2" ry="2" _orig_x="107.4" _orig_width="1.3"/>
<text x="94.95831244778618" y="1823.5" _orig_x="110.37"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="405" width="2.2909774436090227" height="15.0" fill="rgb(217,13,31)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="415.5" _orig_x="69.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (248 samples, 0.21%)</title><rect x="461.0025062656641" y="1733" width="6.1612364243943185" height="15.0" fill="rgb(254,69,11)" rx="2" ry="2" _orig_x="552.0" _orig_width="2.5"/>
<text x="464.0025062656641" y="1743.5" _orig_x="555.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.06%)</title><rect x="903.4850041771095" y="1877" width="0.7289473684210526" height="15.0" fill="rgb(244,10,51)" rx="2" ry="2" _orig_x="886.7" _orig_width="0.7"/>
<text x="906.4850041771095" y="1887.5" _orig_x="889.66"/>
</g>
<g class="hide">
<title>[perf-58119.map] (38 samples, 0.03%)</title><rect x="120.59553049289897" y="1493" width="0.41654135338345866" height="15.0" fill="rgb(246,148,23)" rx="2" ry="2" _orig_x="134.9" _orig_width="0.4"/>
<text x="123.59553049289897" y="1503.5" _orig_x="137.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="280.2350041771095" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(252,68,26)" rx="2" ry="2" _orig_x="288.2" _orig_width="0.5"/>
<text x="283.2350041771095" y="2031.5" _orig_x="291.18"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (44 samples, 0.04%)</title><rect x="633.7635756056809" y="1765" width="0.985797827903091" height="15.0" fill="rgb(222,198,31)" rx="2" ry="2" _orig_x="622.1" _orig_width="0.4"/>
<text x="636.7635756056809" y="1775.5" _orig_x="625.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (166 samples, 0.14%)</title><rect x="341.7789891395155" y="1925" width="1.7703007518796992" height="15.0" fill="rgb(222,143,35)" rx="2" ry="2" _orig_x="347.3" _orig_width="1.7"/>
<text x="344.7789891395155" y="1935.5" _orig_x="350.32"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1285" width="0.31240601503759396" height="15.0" fill="rgb(223,52,7)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1295.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[chrome] (12 samples, 0.01%)</title><rect x="92.27071846282378" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(224,68,19)" rx="2" ry="2" _orig_x="107.7" _orig_width="0.1"/>
<text x="95.27071846282378" y="1615.5" _orig_x="110.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.08%)</title><rect x="345.9444026733501" y="1925" width="1.0413533834586466" height="15.0" fill="rgb(235,126,42)" rx="2" ry="2" _orig_x="351.3" _orig_width="1.0"/>
<text x="348.9444026733501" y="1935.5" _orig_x="354.32"/>
</g>
<g class="hide">
<title>[perf-32996.map] (97 samples, 0.08%)</title><rect x="17.5" y="1605" width="0.9" height="15.0" fill="rgb(213,51,25)" rx="2" ry="2"/>
<text x="20.46" y="1615.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (13 samples, 0.01%)</title><rect x="51.64995822890553" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(224,210,48)" rx="2" ry="2" _orig_x="385.9" _orig_width="0.1"/>
<text x="54.64995822890553" y="1823.5" _orig_x="388.90"/>
</g>
<g class="hide">
<title>kworker/u32:32- (23 samples, 0.02%)</title><rect x="360.5" y="2069" width="0.2" height="15.0" fill="rgb(249,100,44)" rx="2" ry="2"/>
<text x="363.45" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="108.61996658312454" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(211,203,35)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="1951.5" _orig_x="126.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="97.16507936507942" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(205,139,1)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="2015.5" _orig_x="115.37"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (24 samples, 0.02%)</title><rect x="1010.0918964076857" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(241,79,44)" rx="2" ry="2" _orig_x="774.8" _orig_width="0.2"/>
<text x="1013.0918964076857" y="1775.5" _orig_x="777.77"/>
</g>
<g class="hide">
<title>[perf-32996.map] (115 samples, 0.10%)</title><rect x="17.3" y="1669" width="1.1" height="15.0" fill="rgb(241,89,26)" rx="2" ry="2"/>
<text x="20.28" y="1679.5"/>
</g>
<g class="hide">
<title>[libxul.so] (19 samples, 0.02%)</title><rect x="28.6" y="2021" width="0.2" height="15.0" fill="rgb(230,205,14)" rx="2" ry="2"/>
<text x="31.61" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="320.9519214703426" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(211,31,54)" rx="2" ry="2" _orig_x="327.3" _orig_width="0.8"/>
<text x="323.9519214703426" y="1999.5" _orig_x="330.25"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="114.03500417710949" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(249,90,11)" rx="2" ry="2" _orig_x="128.6" _orig_width="0.2"/>
<text x="117.03500417710949" y="1535.5" _orig_x="131.63"/>
</g>
<g>
<title>MemHeap::MemHeap (16 samples, 0.01%)</title><rect x="1026.6040100250625" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(216,18,26)" rx="2" ry="2" _orig_x="781.5" _orig_width="0.1"/>
<text x="1029.6040100250625" y="1855.5" _orig_x="784.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="96.54026733500423" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(249,199,33)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="1983.5" _orig_x="114.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (12 samples, 0.01%)</title><rect x="1168.065998329156" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(209,90,14)" rx="2" ry="2" _orig_x="838.9" _orig_width="0.1"/>
<text x="1171.065998329156" y="1855.5" _orig_x="841.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="16.0" y="1989" width="0.2" height="15.0" fill="rgb(219,175,29)" rx="2" ry="2"/>
<text x="18.95" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="321.6808688387636" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(225,56,18)" rx="2" ry="2" _orig_x="328.0" _orig_width="0.1"/>
<text x="324.6808688387636" y="1839.5" _orig_x="330.97"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (900 samples, 0.76%)</title><rect x="380.90643274853795" y="1813" width="22.18045112781955" height="15.0" fill="rgb(238,101,41)" rx="2" ry="2" _orig_x="519.5" _orig_width="9.0"/>
<text x="383.90643274853795" y="1823.5" _orig_x="522.53">s..</text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="997" width="0.31240601503759396" height="15.0" fill="rgb(227,176,27)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1007.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (42 samples, 0.04%)</title><rect x="744.1729323308269" y="1765" width="0.985797827903091" height="15.0" fill="rgb(253,63,19)" rx="2" ry="2" _orig_x="666.9" _orig_width="0.4"/>
<text x="747.1729323308269" y="1775.5" _orig_x="669.93"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (13 samples, 0.01%)</title><rect x="499.4486215538847" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(218,117,31)" rx="2" ry="2" _orig_x="567.6" _orig_width="0.1"/>
<text x="502.4486215538847" y="1823.5" _orig_x="570.61"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="118.30455304928994" y="1349" width="0.10413533834586466" height="15.0" fill="rgb(224,72,24)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1359.5" _orig_x="135.69"/>
</g>
<g class="hide">
<title>[perf-58157.map] (124 samples, 0.10%)</title><rect x="123.30304928989145" y="1573" width="1.3537593984962406" height="15.0" fill="rgb(223,54,23)" rx="2" ry="2" _orig_x="137.5" _orig_width="1.3"/>
<text x="126.30304928989145" y="1583.5" _orig_x="140.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="303.1447786131997" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(230,209,29)" rx="2" ry="2" _orig_x="310.2" _orig_width="0.3"/>
<text x="306.1447786131997" y="1759.5" _orig_x="313.24"/>
</g>
<g class="hide">
<title>v8::internal::compiler::Reducer::Reduce (43 samples, 0.04%)</title><rect x="144.0259816207185" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(240,193,41)" rx="2" ry="2" _orig_x="157.4" _orig_width="0.4"/>
<text x="147.0259816207185" y="1887.5" _orig_x="160.40"/>
</g>
<g class="hide">
<title>[perf-58145.map] (11 samples, 0.01%)</title><rect x="125.80229741019221" y="1621" width="0.10413533834586466" height="15.0" fill="rgb(233,19,54)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1631.5" _orig_x="142.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,417 samples, 1.19%)</title><rect x="1167.5" y="1797" width="14.1" height="15.0" fill="rgb(253,54,46)" rx="2" ry="2"/>
<text x="1170.51" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (564 samples, 0.47%)</title><rect x="134.86207184628242" y="1973" width="5.8315789473684205" height="15.0" fill="rgb(236,190,52)" rx="2" ry="2" _orig_x="148.6" _orig_width="5.6"/>
<text x="137.86207184628242" y="1983.5" _orig_x="151.56"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (163 samples, 0.14%)</title><rect x="232.297410192147" y="1765" width="3.943191311612364" height="15.0" fill="rgb(234,186,12)" rx="2" ry="2" _orig_x="459.2" _orig_width="1.6"/>
<text x="235.297410192147" y="1775.5" _orig_x="462.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="21.5" y="1861" width="0.2" height="15.0" fill="rgb(222,117,45)" rx="2" ry="2"/>
<text x="24.45" y="1871.5"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (3,275 samples, 2.75%)</title><rect x="325.2088554720133" y="1861" width="80.09607351712614" height="15.0" fill="rgb(216,34,51)" rx="2" ry="2" _orig_x="496.9" _orig_width="32.5"/>
<text x="328.2088554720133" y="1871.5" _orig_x="499.87">GenericKe..</text>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (15 samples, 0.01%)</title><rect x="1108.4252297410192" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(233,67,10)" rx="2" ry="2" _orig_x="814.7" _orig_width="0.2"/>
<text x="1111.4252297410192" y="1855.5" _orig_x="817.74"/>
</g>
<g>
<title>[libstdc++.so.6.0.28] (11 samples, 0.01%)</title><rect x="680.8354218880536" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(207,146,11)" rx="2" ry="2" _orig_x="641.2" _orig_width="0.2"/>
<text x="683.8354218880536" y="1855.5" _orig_x="644.25"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (14 samples, 0.01%)</title><rect x="399.88304093567257" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(240,20,17)" rx="2" ry="2" _orig_x="527.2" _orig_width="0.2"/>
<text x="402.88304093567257" y="1791.5" _orig_x="530.22"/>
</g>
<g class="hide">
<title>blink::LayoutBox::AbsoluteQuads (66 samples, 0.06%)</title><rect x="182.76432748538016" y="1493" width="0.6248120300751879" height="15.0" fill="rgb(253,179,50)" rx="2" ry="2" _orig_x="194.6" _orig_width="0.6"/>
<text x="185.76432748538016" y="1503.5" _orig_x="197.58"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(210,115,9)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1935.5" _orig_x="99.72"/>
</g>
<g>
<title>Schema::GetColumn (12 samples, 0.01%)</title><rect x="526.8045112781956" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(226,155,14)" rx="2" ry="2" _orig_x="578.7" _orig_width="0.1"/>
<text x="529.8045112781956" y="1855.5" _orig_x="581.71"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (15 samples, 0.01%)</title><rect x="112.7694235588972" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(243,27,2)" rx="2" ry="2" _orig_x="410.7" _orig_width="0.1"/>
<text x="115.7694235588972" y="1759.5" _orig_x="413.68"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (13 samples, 0.01%)</title><rect x="149.49039264828744" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(214,180,3)" rx="2" ry="2" _orig_x="425.6" _orig_width="0.2"/>
<text x="152.49039264828744" y="1807.5" _orig_x="428.65"/>
</g>
<g class="hide">
<title>blink::bindings::V8ValueOrScriptWrappableAdapter::V8Value (43 samples, 0.04%)</title><rect x="199.7383876357561" y="1669" width="0.5206766917293233" height="15.0" fill="rgb(244,153,41)" rx="2" ry="2" _orig_x="210.9" _orig_width="0.5"/>
<text x="202.7383876357561" y="1679.5" _orig_x="213.93"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (30 samples, 0.03%)</title><rect x="45.735171261487054" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(206,27,41)" rx="2" ry="2" _orig_x="383.5" _orig_width="0.3"/>
<text x="48.735171261487054" y="1791.5" _orig_x="386.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (171 samples, 0.14%)</title><rect x="882.0331244778614" y="1797" width="1.7703007518796992" height="15.0" fill="rgb(219,37,52)" rx="2" ry="2" _orig_x="866.1" _orig_width="1.7"/>
<text x="885.0331244778614" y="1807.5" _orig_x="869.06"/>
</g>
<g class="hide">
<title>[unknown] (37 samples, 0.03%)</title><rect x="331.3" y="2053" width="0.3" height="15.0" fill="rgb(226,224,40)" rx="2" ry="2"/>
<text x="334.28" y="2063.5"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="2005" width="0.7" height="15.0" fill="rgb(205,153,27)" rx="2" ry="2"/>
<text x="14.39" y="2015.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (23 samples, 0.02%)</title><rect x="136.92147034252298" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(241,162,28)" rx="2" ry="2" _orig_x="420.5" _orig_width="0.2"/>
<text x="139.92147034252298" y="1759.5" _orig_x="423.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="55.61507936507942" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(225,175,31)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="1967.5" _orig_x="75.50"/>
</g>
<g>
<title>BPlusTreePage::GetSize (14 samples, 0.01%)</title><rect x="1155.4970760233916" y="1925" width="0.4928989139515455" height="15.0" fill="rgb(216,61,26)" rx="2" ry="2" _orig_x="833.8" _orig_width="0.2"/>
<text x="1158.4970760233916" y="1935.5" _orig_x="836.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="932.4346282372599" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(219,52,38)" rx="2" ry="2" _orig_x="914.5" _orig_width="0.3"/>
<text x="935.4346282372599" y="1871.5" _orig_x="917.52"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (164 samples, 0.14%)</title><rect x="186.70426065162903" y="1733" width="3.943191311612364" height="15.0" fill="rgb(217,3,2)" rx="2" ry="2" _orig_x="440.7" _orig_width="1.6"/>
<text x="189.70426065162903" y="1743.5" _orig_x="443.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="23.7" y="1909" width="0.1" height="15.0" fill="rgb(226,117,44)" rx="2" ry="2"/>
<text x="26.72" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.07%)</title><rect x="93.83274853801176" y="2037" width="0.937218045112782" height="15.0" fill="rgb(215,207,1)" rx="2" ry="2" _orig_x="109.2" _orig_width="0.9"/>
<text x="96.83274853801176" y="2047.5" _orig_x="112.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="277.2150793650794" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(206,92,9)" rx="2" ry="2" _orig_x="285.3" _orig_width="0.2"/>
<text x="280.2150793650794" y="1871.5" _orig_x="288.30"/>
</g>
<g class="hide">
<title>[unknown] (97 samples, 0.08%)</title><rect x="10.107936507936564" y="2021" width="1.0413533834586466" height="15.0" fill="rgb(229,94,50)" rx="2" ry="2" _orig_x="28.8" _orig_width="1.0"/>
<text x="13.107936507936564" y="2031.5" _orig_x="31.80"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="917" width="2.2909774436090227" height="15.0" fill="rgb(208,59,54)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="927.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="352.50492898913956" y="2037" width="1.0413533834586466" height="15.0" fill="rgb(222,122,33)" rx="2" ry="2" _orig_x="357.6" _orig_width="1.0"/>
<text x="355.50492898913956" y="2047.5" _orig_x="360.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="28.8522974101922" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(252,43,24)" rx="2" ry="2" _orig_x="46.8" _orig_width="0.3"/>
<text x="31.8522974101922" y="2015.5" _orig_x="49.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.06%)</title><rect x="304.0819966583125" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(222,224,25)" rx="2" ry="2" _orig_x="311.1" _orig_width="0.6"/>
<text x="307.0819966583125" y="1951.5" _orig_x="314.08"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(216,221,50)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1471.5" _orig_x="111.34"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (14 samples, 0.01%)</title><rect x="596.796157059315" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(209,105,53)" rx="2" ry="2" _orig_x="607.1" _orig_width="0.1"/>
<text x="599.796157059315" y="1727.5" _orig_x="610.08"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (96 samples, 0.08%)</title><rect x="1062.092731829574" y="1813" width="2.218045112781955" height="15.0" fill="rgb(209,89,12)" rx="2" ry="2" _orig_x="795.9" _orig_width="0.9"/>
<text x="1065.092731829574" y="1823.5" _orig_x="798.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="326.47109440267343" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(235,221,32)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1951.5" _orig_x="335.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.06%)</title><rect x="302.72823725981624" y="1909" width="0.7289473684210526" height="15.0" fill="rgb(233,206,42)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1919.5" _orig_x="312.81"/>
</g>
<g class="hide">
<title>[code] (154 samples, 0.13%)</title><rect x="119.55417710944033" y="1781" width="1.5620300751879699" height="15.0" fill="rgb(229,32,30)" rx="2" ry="2" _orig_x="133.9" _orig_width="1.5"/>
<text x="122.55417710944033" y="1791.5" _orig_x="136.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="131.321470342523" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(217,76,1)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1887.5" _orig_x="148.18"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1157" width="0.31240601503759396" height="15.0" fill="rgb(242,99,52)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1167.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="124.34440267335009" y="997" width="0.10413533834586466" height="15.0" fill="rgb(220,185,45)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1007.5" _orig_x="141.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="1941" width="0.4733253108704372" height="15.0" fill="rgb(239,68,18)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1951.5" _orig_x="371.76"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (17 samples, 0.01%)</title><rect x="142.09690893901427" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(236,18,47)" rx="2" ry="2" _orig_x="422.6" _orig_width="0.1"/>
<text x="145.09690893901427" y="1791.5" _orig_x="425.56"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1125" width="0.31240601503759396" height="15.0" fill="rgb(205,6,36)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1135.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>operator new[] (13 samples, 0.01%)</title><rect x="154.43951545530498" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(246,0,17)" rx="2" ry="2" _orig_x="167.4" _orig_width="0.2"/>
<text x="157.43951545530498" y="1967.5" _orig_x="170.44"/>
</g>
<g>
<title>operator delete (20 samples, 0.02%)</title><rect x="1047.5522138680033" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(249,54,41)" rx="2" ry="2" _orig_x="790.0" _orig_width="0.2"/>
<text x="1050.5522138680033" y="1871.5" _orig_x="793.03"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(217,57,7)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1567.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (14 samples, 0.01%)</title><rect x="359.46532999164583" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(244,12,1)" rx="2" ry="2" _orig_x="510.8" _orig_width="0.1"/>
<text x="362.46532999164583" y="1775.5" _orig_x="513.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="22.1" y="1781" width="0.1" height="15.0" fill="rgb(213,120,37)" rx="2" ry="2"/>
<text x="25.09" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.07%)</title><rect x="254.2011695906433" y="2021" width="0.8330827067669173" height="15.0" fill="rgb(254,95,45)" rx="2" ry="2" _orig_x="263.2" _orig_width="0.8"/>
<text x="257.2011695906433" y="2031.5" _orig_x="266.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (61 samples, 0.05%)</title><rect x="230.3258145363408" y="1733" width="1.4786967418546364" height="15.0" fill="rgb(249,125,20)" rx="2" ry="2" _orig_x="458.4" _orig_width="0.6"/>
<text x="233.3258145363408" y="1743.5" _orig_x="461.36"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (13 samples, 0.01%)</title><rect x="293.1477861319967" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(207,88,29)" rx="2" ry="2" _orig_x="300.6" _orig_width="0.1"/>
<text x="296.1477861319967" y="2031.5" _orig_x="303.56"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (23 samples, 0.02%)</title><rect x="1086.7376775271512" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(238,124,0)" rx="2" ry="2" _orig_x="805.9" _orig_width="0.2"/>
<text x="1089.7376775271512" y="1823.5" _orig_x="808.87"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (84 samples, 0.07%)</title><rect x="170.37222222222226" y="1813" width="0.937218045112782" height="15.0" fill="rgb(230,127,26)" rx="2" ry="2" _orig_x="182.7" _orig_width="0.9"/>
<text x="173.37222222222226" y="1823.5" _orig_x="185.74"/>
</g>
<g class="hide">
<title>__libc_start_main (2,276 samples, 1.91%)</title><rect x="123.9" y="2053" width="22.6" height="15.0" fill="rgb(222,188,17)" rx="2" ry="2"/>
<text x="126.94" y="2063.5">_..</text>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (28 samples, 0.02%)</title><rect x="178.81787802840435" y="1701" width="0.7393483709273182" height="15.0" fill="rgb(251,132,10)" rx="2" ry="2" _orig_x="437.5" _orig_width="0.3"/>
<text x="181.81787802840435" y="1711.5" _orig_x="440.51"/>
</g>
<g class="hide">
<title>[perf-58145.map] (127 samples, 0.11%)</title><rect x="127.46846282372603" y="1557" width="1.2496240601503759" height="15.0" fill="rgb(251,140,32)" rx="2" ry="2" _orig_x="141.5" _orig_width="1.2"/>
<text x="130.46846282372604" y="1567.5" _orig_x="144.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (15 samples, 0.01%)</title><rect x="774.7326649958228" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(213,128,42)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.1"/>
<text x="777.7326649958228" y="1807.5" _orig_x="682.27"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1781" width="2.2909774436090227" height="15.0" fill="rgb(236,21,21)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1791.5" _orig_x="69.82"/>
</g>
<g>
<title>[libminisql_shared.so] (13 samples, 0.01%)</title><rect x="689.4611528822056" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(211,119,25)" rx="2" ry="2" _orig_x="644.7" _orig_width="0.1"/>
<text x="692.4611528822056" y="1887.5" _orig_x="647.69"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (12 samples, 0.01%)</title><rect x="864.4402673350043" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(218,205,37)" rx="2" ry="2" _orig_x="715.7" _orig_width="0.1"/>
<text x="867.4402673350043" y="1839.5" _orig_x="718.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,098 samples, 0.92%)</title><rect x="917.2308688387636" y="1813" width="11.350751879699247" height="15.0" fill="rgb(220,33,24)" rx="2" ry="2" _orig_x="899.9" _orig_width="10.9"/>
<text x="920.2308688387636" y="1823.5" _orig_x="902.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="341" width="0.31240601503759396" height="15.0" fill="rgb(232,39,37)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="351.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[perf-9366.map] (21 samples, 0.02%)</title><rect x="10.316207184628293" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(213,193,26)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1871.5" _orig_x="31.98"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (110 samples, 0.09%)</title><rect x="58.30409356725152" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(229,58,48)" rx="2" ry="2" _orig_x="388.6" _orig_width="1.1"/>
<text x="61.30409356725152" y="1775.5" _orig_x="391.60"/>
</g>
<g class="hide">
<title>do_futex_wait.constprop.0 (20 samples, 0.02%)</title><rect x="15.4" y="2037" width="0.2" height="15.0" fill="rgb(226,32,50)" rx="2" ry="2"/>
<text x="18.36" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="277.0068086883877" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(231,214,45)" rx="2" ry="2" _orig_x="285.1" _orig_width="0.4"/>
<text x="280.0068086883877" y="1983.5" _orig_x="288.05"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (196 samples, 0.16%)</title><rect x="494.27318295739343" y="1797" width="4.682539682539682" height="15.0" fill="rgb(248,106,26)" rx="2" ry="2" _orig_x="565.5" _orig_width="1.9"/>
<text x="497.27318295739343" y="1807.5" _orig_x="568.46"/>
</g>
<g class="hide">
<title>_nv033137rm (20 samples, 0.02%)</title><rect x="343.8" y="2053" width="0.2" height="15.0" fill="rgb(225,117,45)" rx="2" ry="2"/>
<text x="346.77" y="2063.5"/>
</g>
<g>
<title>Row::DeserializeFrom (3,293 samples, 2.77%)</title><rect x="446.2155388471178" y="1845" width="80.58897243107769" height="15.0" fill="rgb(234,117,54)" rx="2" ry="2" _orig_x="546.0" _orig_width="32.7"/>
<text x="449.2155388471178" y="1855.5" _orig_x="549.03">Row::Dese..</text>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::FireMicrotasksCompletedCallback (18 samples, 0.02%)</title><rect x="199.32184628237266" y="1621" width="0.20827067669172933" height="15.0" fill="rgb(206,12,1)" rx="2" ry="2" _orig_x="210.5" _orig_width="0.2"/>
<text x="202.32184628237266" y="1631.5" _orig_x="213.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.09%)</title><rect x="903.1725981620718" y="1941" width="1.0413533834586466" height="15.0" fill="rgb(226,182,9)" rx="2" ry="2" _orig_x="886.4" _orig_width="1.0"/>
<text x="906.1725981620718" y="1951.5" _orig_x="889.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="339.9045530492899" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(228,178,34)" rx="2" ry="2" _orig_x="345.5" _orig_width="0.1"/>
<text x="342.9045530492899" y="1951.5" _orig_x="348.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="313.6624477861321" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(244,96,21)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1983.5" _orig_x="323.28"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::RealTimeDomain::CreateLazyNow (11 samples, 0.01%)</title><rect x="214.42147034252304" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(248,65,5)" rx="2" ry="2" _orig_x="225.0" _orig_width="0.1"/>
<text x="217.42147034252304" y="1775.5" _orig_x="228.00"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (17 samples, 0.01%)</title><rect x="325.3256056808689" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(252,216,23)" rx="2" ry="2" _orig_x="331.5" _orig_width="0.1"/>
<text x="328.3256056808689" y="1999.5" _orig_x="334.48"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="629" width="0.31240601503759396" height="15.0" fill="rgb(208,154,43)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="639.5" _orig_x="32.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (11 samples, 0.01%)</title><rect x="402.1010860484545" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(235,153,39)" rx="2" ry="2" _orig_x="528.1" _orig_width="0.1"/>
<text x="405.1010860484545" y="1807.5" _orig_x="531.08"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (21 samples, 0.02%)</title><rect x="164.77025898078531" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(249,208,26)" rx="2" ry="2" _orig_x="431.8" _orig_width="0.2"/>
<text x="167.77025898078531" y="1791.5" _orig_x="434.76"/>
</g>
<g class="hide">
<title>[perf-15821.map] (81 samples, 0.07%)</title><rect x="92.37485380116964" y="1701" width="0.937218045112782" height="15.0" fill="rgb(212,137,38)" rx="2" ry="2" _orig_x="107.8" _orig_width="0.9"/>
<text x="95.37485380116964" y="1711.5" _orig_x="110.85"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="245" width="0.31240601503759396" height="15.0" fill="rgb(214,163,28)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="255.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="325.11733500417716" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(232,23,46)" rx="2" ry="2" _orig_x="331.3" _orig_width="0.2"/>
<text x="328.11733500417716" y="1999.5" _orig_x="334.34"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (688 samples, 0.58%)</title><rect x="245.76620718462829" y="2037" width="7.081203007518797" height="15.0" fill="rgb(237,70,21)" rx="2" ry="2" _orig_x="255.1" _orig_width="6.8"/>
<text x="248.76620718462829" y="2047.5" _orig_x="258.06"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (113 samples, 0.10%)</title><rect x="277.15121136173764" y="1781" width="2.7109440267335008" height="15.0" fill="rgb(221,80,13)" rx="2" ry="2" _orig_x="477.4" _orig_width="1.1"/>
<text x="280.15121136173764" y="1791.5" _orig_x="480.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (65 samples, 0.05%)</title><rect x="409.24812030075185" y="1845" width="1.4786967418546364" height="15.0" fill="rgb(224,98,15)" rx="2" ry="2" _orig_x="531.0" _orig_width="0.6"/>
<text x="412.24812030075185" y="1855.5" _orig_x="534.00"/>
</g>
<g class="hide">
<title>[chrome] (18 samples, 0.02%)</title><rect x="92.27071846282378" y="1637" width="0.10413533834586466" height="15.0" fill="rgb(238,140,6)" rx="2" ry="2" _orig_x="107.7" _orig_width="0.1"/>
<text x="95.27071846282378" y="1647.5" _orig_x="110.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="323.5553049289892" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(223,28,8)" rx="2" ry="2" _orig_x="329.8" _orig_width="0.2"/>
<text x="326.5553049289892" y="1951.5" _orig_x="332.81"/>
</g>
<g class="hide">
<title>std::__1::chrono::steady_clock::now (16 samples, 0.01%)</title><rect x="162.0413951545531" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(245,94,18)" rx="2" ry="2" _orig_x="174.7" _orig_width="0.1"/>
<text x="165.0413951545531" y="2015.5" _orig_x="177.67"/>
</g>
<g class="hide">
<title>[chrome] (14 samples, 0.01%)</title><rect x="30.93500417710949" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(248,120,39)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1903.5" _orig_x="51.77"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="1957" width="2.4992481203007517" height="15.0" fill="rgb(228,160,29)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="1967.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.04%)</title><rect x="29.268838763575662" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(252,23,30)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="2031.5" _orig_x="50.15"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(242,108,44)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1839.5" _orig_x="297.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (355 samples, 0.30%)</title><rect x="87.480492898914" y="2021" width="3.644736842105263" height="15.0" fill="rgb(205,100,44)" rx="2" ry="2" _orig_x="103.1" _orig_width="3.5"/>
<text x="90.480492898914" y="2031.5" _orig_x="106.07"/>
</g>
<g class="hide">
<title>[[vdso]] (18 samples, 0.02%)</title><rect x="110.6" y="2053" width="0.2" height="15.0" fill="rgb(250,70,24)" rx="2" ry="2"/>
<text x="113.59" y="2063.5"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (40 samples, 0.03%)</title><rect x="293.4168755221387" y="1749" width="0.985797827903091" height="15.0" fill="rgb(252,61,12)" rx="2" ry="2" _orig_x="484.0" _orig_width="0.4"/>
<text x="296.4168755221387" y="1759.5" _orig_x="487.01"/>
</g>
<g class="hide">
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (14 samples, 0.01%)</title><rect x="245.1413951545531" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(251,50,23)" rx="2" ry="2" _orig_x="254.5" _orig_width="0.2"/>
<text x="248.1413951545531" y="2031.5" _orig_x="257.54"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (21 samples, 0.02%)</title><rect x="232.95756056808693" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(238,51,51)" rx="2" ry="2" _orig_x="242.8" _orig_width="0.3"/>
<text x="235.95756056808693" y="2047.5" _orig_x="245.85"/>
</g>
<g>
<title>operator new (13 samples, 0.01%)</title><rect x="56.578947368421005" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(217,21,41)" rx="2" ry="2" _orig_x="387.9" _orig_width="0.1"/>
<text x="59.578947368421005" y="1743.5" _orig_x="390.89"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (531 samples, 0.45%)</title><rect x="52.389306599832885" y="1797" width="13.061821219715956" height="15.0" fill="rgb(212,128,14)" rx="2" ry="2" _orig_x="386.2" _orig_width="5.3"/>
<text x="55.389306599832885" y="1807.5" _orig_x="389.19"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="27.915079365079418" y="197" width="0.20827067669172933" height="15.0" fill="rgb(229,135,54)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="207.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="165" width="0.20827067669172933" height="15.0" fill="rgb(233,118,5)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="175.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="118.7210944026734" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(240,78,45)" rx="2" ry="2" _orig_x="133.1" _orig_width="0.1"/>
<text x="121.7210944026734" y="1679.5" _orig_x="136.06"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="1973" width="2.4992481203007517" height="15.0" fill="rgb(220,188,11)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="1983.5" _orig_x="109.64"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (35 samples, 0.03%)</title><rect x="1046.3199665831244" y="1861" width="0.985797827903091" height="15.0" fill="rgb(251,213,13)" rx="2" ry="2" _orig_x="789.5" _orig_width="0.4"/>
<text x="1049.3199665831244" y="1871.5" _orig_x="792.54"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="469" width="0.31240601503759396" height="15.0" fill="rgb(241,104,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="479.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Identity::operator (20 samples, 0.02%)</title><rect x="360.20467836257313" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(225,12,16)" rx="2" ry="2" _orig_x="511.1" _orig_width="0.2"/>
<text x="363.20467836257313" y="1775.5" _orig_x="514.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.09%)</title><rect x="238.0601921470343" y="1893" width="1.1454887218045113" height="15.0" fill="rgb(223,111,51)" rx="2" ry="2" _orig_x="247.7" _orig_width="1.1"/>
<text x="241.0601921470343" y="1903.5" _orig_x="250.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="325" width="0.31240601503759396" height="15.0" fill="rgb(226,132,42)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="335.5" _orig_x="32.46"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (20 samples, 0.02%)</title><rect x="987.6649958228905" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(212,111,30)" rx="2" ry="2" _orig_x="765.7" _orig_width="0.1"/>
<text x="990.6649958228905" y="1727.5" _orig_x="768.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="914.4192147034253" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(224,211,39)" rx="2" ry="2" _orig_x="897.2" _orig_width="0.6"/>
<text x="917.4192147034253" y="1951.5" _orig_x="900.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,891 samples, 2.43%)</title><rect x="1132.5827485380119" y="1813" width="29.886842105263156" height="15.0" fill="rgb(236,197,20)" rx="2" ry="2" _orig_x="1106.7" _orig_width="28.7"/>
<text x="1135.5827485380119" y="1823.5" _orig_x="1109.72">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (303 samples, 0.25%)</title><rect x="1142.9281537176275" y="1877" width="7.393483709273183" height="15.0" fill="rgb(219,54,48)" rx="2" ry="2" _orig_x="828.7" _orig_width="3.0"/>
<text x="1145.9281537176275" y="1887.5" _orig_x="831.65"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(212,225,36)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1663.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::WorkQueue::TaskPusher::Push (19 samples, 0.02%)</title><rect x="218.17034252297415" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(235,84,21)" rx="2" ry="2" _orig_x="228.6" _orig_width="0.2"/>
<text x="221.17034252297415" y="1727.5" _orig_x="231.65"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (17 samples, 0.01%)</title><rect x="294.64912280701753" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(245,145,8)" rx="2" ry="2" _orig_x="484.5" _orig_width="0.2"/>
<text x="297.64912280701753" y="1791.5" _orig_x="487.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="188.17936507936514" y="1365" width="0.20827067669172933" height="15.0" fill="rgb(242,151,37)" rx="2" ry="2" _orig_x="199.8" _orig_width="0.2"/>
<text x="191.17936507936514" y="1375.5" _orig_x="202.84"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (15 samples, 0.01%)</title><rect x="139.38596491228068" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(208,45,34)" rx="2" ry="2" _orig_x="421.5" _orig_width="0.1"/>
<text x="142.38596491228068" y="1727.5" _orig_x="424.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="304.60267335004187" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(206,188,9)" rx="2" ry="2" _orig_x="311.6" _orig_width="0.1"/>
<text x="307.60267335004187" y="1855.5" _orig_x="314.59"/>
</g>
<g class="hide">
<title>[perf-58119.map] (15 samples, 0.01%)</title><rect x="119.65831244778619" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(219,181,8)" rx="2" ry="2" _orig_x="134.0" _orig_width="0.1"/>
<text x="122.65831244778619" y="1615.5" _orig_x="137.00"/>
</g>
<g class="hide">
<title>v8::internal::Sweeper::SweeperTask::RunInternal (100 samples, 0.08%)</title><rect x="39.47410192147039" y="1909" width="1.0413533834586466" height="15.0" fill="rgb(215,227,43)" rx="2" ry="2" _orig_x="57.0" _orig_width="1.0"/>
<text x="42.47410192147039" y="1919.5" _orig_x="59.96"/>
</g>
<g class="hide">
<title>blink::V8PerIsolateData::HasInstance (94 samples, 0.08%)</title><rect x="192.6571846282373" y="1413" width="1.0413533834586466" height="15.0" fill="rgb(246,29,22)" rx="2" ry="2" _orig_x="204.1" _orig_width="1.0"/>
<text x="195.6571846282373" y="1423.5" _orig_x="207.13"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_state (13 samples, 0.01%)</title><rect x="468.88888888888897" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(252,128,52)" rx="2" ry="2" _orig_x="555.2" _orig_width="0.1"/>
<text x="471.88888888888897" y="1759.5" _orig_x="558.17"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::GetObjectProperty (102 samples, 0.09%)</title><rect x="191.61583124477866" y="1397" width="1.0413533834586466" height="15.0" fill="rgb(249,142,23)" rx="2" ry="2" _orig_x="203.1" _orig_width="1.0"/>
<text x="194.61583124477866" y="1407.5" _orig_x="206.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.12%)</title><rect x="140.9019214703426" y="1989" width="1.5620300751879699" height="15.0" fill="rgb(245,228,47)" rx="2" ry="2" _orig_x="154.4" _orig_width="1.5"/>
<text x="143.9019214703426" y="1999.5" _orig_x="157.43"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (13 samples, 0.01%)</title><rect x="109.0" y="2053" width="0.2" height="15.0" fill="rgb(243,141,49)" rx="2" ry="2"/>
<text x="112.03" y="2063.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.4203425229742" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(228,99,29)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1839.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>containerd (94 samples, 0.08%)</title><rect x="278.2" y="2069" width="1.0" height="15.0" fill="rgb(244,147,24)" rx="2" ry="2"/>
<text x="281.24" y="2079.5"/>
</g>
<g class="hide">
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork (12 samples, 0.01%)</title><rect x="225.87635756056812" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(211,122,17)" rx="2" ry="2" _orig_x="236.0" _orig_width="0.1"/>
<text x="228.87635756056812" y="1839.5" _orig_x="239.00"/>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::FindLeafPage (6,712 samples, 5.64%)</title><rect x="786.0693400167083" y="1925" width="164.13533834586465" height="15.0" fill="rgb(207,61,24)" rx="2" ry="2" _orig_x="683.9" _orig_width="66.6"/>
<text x="789.0693400167083" y="1935.5" _orig_x="686.88">BPlusTree&lt;GenericKey&lt;..</text>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (13 samples, 0.01%)</title><rect x="110.05847953216379" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(219,28,0)" rx="2" ry="2" _orig_x="409.6" _orig_width="0.1"/>
<text x="113.05847953216379" y="1711.5" _orig_x="412.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="353.5462823725982" y="2005" width="0.7289473684210526" height="15.0" fill="rgb(223,124,5)" rx="2" ry="2" _orig_x="358.6" _orig_width="0.7"/>
<text x="356.5462823725982" y="2015.5" _orig_x="361.64"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (31 samples, 0.03%)</title><rect x="59.6" y="2053" width="0.3" height="15.0" fill="rgb(211,145,30)" rx="2" ry="2"/>
<text x="62.63" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1221" width="0.20827067669172933" height="15.0" fill="rgb(247,69,48)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1231.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="308.87222222222226" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(213,198,49)" rx="2" ry="2" _orig_x="315.7" _orig_width="0.2"/>
<text x="311.87222222222226" y="1855.5" _orig_x="318.73"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Lookup (3,127 samples, 2.63%)</title><rect x="167.72765246449455" y="1877" width="76.39933166248956" height="15.0" fill="rgb(223,184,15)" rx="2" ry="2" _orig_x="433.0" _orig_width="31.0"/>
<text x="170.72765246449455" y="1887.5" _orig_x="435.98">BPlusTree..</text>
</g>
<g class="hide">
<title>Chrome_ChildIOT (319 samples, 0.27%)</title><rect x="10.5" y="2069" width="3.1" height="15.0" fill="rgb(244,53,6)" rx="2" ry="2"/>
<text x="13.46" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (603 samples, 0.51%)</title><rect x="127.55639097744356" y="1797" width="14.786967418546366" height="15.0" fill="rgb(248,7,10)" rx="2" ry="2" _orig_x="416.7" _orig_width="6.0"/>
<text x="130.55639097744356" y="1807.5" _orig_x="419.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="161.7289891395155" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(210,28,40)" rx="2" ry="2" _orig_x="174.4" _orig_width="0.1"/>
<text x="164.7289891395155" y="1871.5" _orig_x="177.36"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="296.792522974102" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(236,42,52)" rx="2" ry="2" _orig_x="304.1" _orig_width="0.1"/>
<text x="299.792522974102" y="1967.5" _orig_x="307.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.04%)</title><rect x="132.15455304928994" y="1845" width="0.5206766917293233" height="15.0" fill="rgb(215,105,7)" rx="2" ry="2" _orig_x="146.0" _orig_width="0.5"/>
<text x="135.15455304928994" y="1855.5" _orig_x="148.98"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (80 samples, 0.07%)</title><rect x="181.28237259816206" y="1685" width="1.971595655806182" height="15.0" fill="rgb(239,181,7)" rx="2" ry="2" _orig_x="438.5" _orig_width="0.8"/>
<text x="184.28237259816206" y="1695.5" _orig_x="441.47"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_Node_iterator_base (16 samples, 0.01%)</title><rect x="996.0442773600669" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(243,122,27)" rx="2" ry="2" _orig_x="769.1" _orig_width="0.2"/>
<text x="999.0442773600669" y="1775.5" _orig_x="772.13"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1333" width="0.20827067669172933" height="15.0" fill="rgb(217,64,31)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1343.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="43.11883876357566" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(243,99,40)" rx="2" ry="2" _orig_x="60.5" _orig_width="0.5"/>
<text x="46.11883876357566" y="1935.5" _orig_x="63.52"/>
</g>
<g class="hide">
<title>ntfs_names_full_collate (13 samples, 0.01%)</title><rect x="890.3" y="2053" width="0.1" height="15.0" fill="rgb(235,4,6)" rx="2" ry="2"/>
<text x="893.25" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.10%)</title><rect x="903.068462823726" y="1957" width="1.1454887218045113" height="15.0" fill="rgb(235,63,40)" rx="2" ry="2" _orig_x="886.3" _orig_width="1.1"/>
<text x="906.068462823726" y="1967.5" _orig_x="889.29"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1141" width="2.2909774436090227" height="15.0" fill="rgb(251,58,24)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1151.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.10%)</title><rect x="345.6319966583125" y="1941" width="1.3537593984962406" height="15.0" fill="rgb(243,113,3)" rx="2" ry="2" _orig_x="351.0" _orig_width="1.3"/>
<text x="348.6319966583125" y="1951.5" _orig_x="354.04"/>
</g>
<g class="hide">
<title>[code] (34 samples, 0.03%)</title><rect x="17.9" y="1317" width="0.4" height="15.0" fill="rgb(239,7,53)" rx="2" ry="2"/>
<text x="20.94" y="1327.5"/>
</g>
<g>
<title>Column::GetType (11 samples, 0.01%)</title><rect x="695.8688387635755" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(215,110,7)" rx="2" ry="2" _orig_x="647.3" _orig_width="0.1"/>
<text x="698.8688387635755" y="1871.5" _orig_x="650.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.04%)</title><rect x="84.5647034252298" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(214,117,47)" rx="2" ry="2" _orig_x="100.3" _orig_width="0.5"/>
<text x="87.5647034252298" y="2015.5" _orig_x="103.29"/>
</g>
<g>
<title>operator new (31 samples, 0.03%)</title><rect x="1090.4344193817876" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(206,93,13)" rx="2" ry="2" _orig_x="807.4" _orig_width="0.3"/>
<text x="1093.4344193817876" y="1887.5" _orig_x="810.37"/>
</g>
<g class="hide">
<title>[unknown] (29 samples, 0.02%)</title><rect x="319.077485380117" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(249,52,7)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1983.5" _orig_x="328.46"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (23 samples, 0.02%)</title><rect x="561.5538847117793" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(252,64,47)" rx="2" ry="2" _orig_x="592.8" _orig_width="0.3"/>
<text x="564.5538847117793" y="1807.5" _orig_x="595.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="914.5233500417711" y="1845" width="0.5206766917293233" height="15.0" fill="rgb(220,189,10)" rx="2" ry="2" _orig_x="897.3" _orig_width="0.5"/>
<text x="917.5233500417711" y="1855.5" _orig_x="900.30"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (36 samples, 0.03%)</title><rect x="435.61821219715966" y="1829" width="0.985797827903091" height="15.0" fill="rgb(209,79,7)" rx="2" ry="2" _orig_x="541.7" _orig_width="0.4"/>
<text x="438.61821219715966" y="1839.5" _orig_x="544.72"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="2037" width="0.5" height="15.0" fill="rgb(233,107,39)" rx="2" ry="2"/>
<text x="17.63" y="2047.5"/>
</g>
<g>
<title>[libminisql_shared.so] (22 samples, 0.02%)</title><rect x="944.7827903091058" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(207,5,15)" rx="2" ry="2" _orig_x="748.3" _orig_width="0.2"/>
<text x="947.7827903091058" y="1903.5" _orig_x="751.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="108.82823725981625" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(207,151,40)" rx="2" ry="2" _orig_x="123.6" _orig_width="0.1"/>
<text x="111.82823725981625" y="1903.5" _orig_x="126.56"/>
</g>
<g>
<title>[libminisql_shared.so] (27 samples, 0.02%)</title><rect x="1089.202172096909" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(234,55,11)" rx="2" ry="2" _orig_x="806.9" _orig_width="0.3"/>
<text x="1092.202172096909" y="1887.5" _orig_x="809.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="24.8" y="1909" width="0.2" height="15.0" fill="rgb(254,204,15)" rx="2" ry="2"/>
<text x="27.84" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(241,91,30)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1391.5" _orig_x="99.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (34 samples, 0.03%)</title><rect x="889.8245614035087" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(208,77,52)" rx="2" ry="2" _orig_x="726.0" _orig_width="0.3"/>
<text x="892.8245614035087" y="1807.5" _orig_x="729.01"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.01%)</title><rect x="286.69139515455305" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(229,224,40)" rx="2" ry="2" _orig_x="294.4" _orig_width="0.1"/>
<text x="289.69139515455305" y="1855.5" _orig_x="297.38"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="597" width="2.2909774436090227" height="15.0" fill="rgb(219,6,43)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="607.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-58145.map] (84 samples, 0.07%)</title><rect x="130.17598162071852" y="1893" width="0.937218045112782" height="15.0" fill="rgb(211,20,13)" rx="2" ry="2" _orig_x="144.1" _orig_width="0.9"/>
<text x="133.17598162071852" y="1903.5" _orig_x="147.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (402 samples, 0.34%)</title><rect x="248.68199665831247" y="1877" width="4.165413533834586" height="15.0" fill="rgb(246,22,2)" rx="2" ry="2" _orig_x="257.9" _orig_width="4.0"/>
<text x="251.68199665831247" y="1887.5" _orig_x="260.90"/>
</g>
<g class="hide">
<title>non-virtual thunk to content::WebContentsImpl::GetDelegateView (11 samples, 0.01%)</title><rect x="222.02335004177115" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(226,87,20)" rx="2" ry="2" _orig_x="232.3" _orig_width="0.1"/>
<text x="225.02335004177115" y="1711.5" _orig_x="235.33"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (52 samples, 0.04%)</title><rect x="387.56056808688396" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(229,229,48)" rx="2" ry="2" _orig_x="522.2" _orig_width="0.5"/>
<text x="390.56056808688396" y="1775.5" _orig_x="525.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.16%)</title><rect x="346.9857560568087" y="2021" width="1.9785714285714284" height="15.0" fill="rgb(219,209,2)" rx="2" ry="2" _orig_x="352.3" _orig_width="1.9"/>
<text x="349.9857560568087" y="2031.5" _orig_x="355.31"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (14 samples, 0.01%)</title><rect x="138.40016708437764" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(235,11,53)" rx="2" ry="2" _orig_x="421.1" _orig_width="0.2"/>
<text x="141.40016708437764" y="1743.5" _orig_x="424.12"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (76 samples, 0.06%)</title><rect x="516.2071846282372" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(237,150,37)" rx="2" ry="2" _orig_x="574.4" _orig_width="0.7"/>
<text x="519.2071846282372" y="1759.5" _orig_x="577.39"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1621" width="2.2909774436090227" height="15.0" fill="rgb(253,14,26)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1631.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="357" width="0.31240601503759396" height="15.0" fill="rgb(234,194,3)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="367.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (35 samples, 0.03%)</title><rect x="375.4845446950709" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(231,31,4)" rx="2" ry="2" _orig_x="517.3" _orig_width="0.3"/>
<text x="378.4845446950709" y="1759.5" _orig_x="520.27"/>
</g>
<g class="hide">
<title>std::unique_lock&lt;std::mutex&gt;::unlock (12 samples, 0.01%)</title><rect x="245.24553049289895" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(208,96,47)" rx="2" ry="2" _orig_x="254.6" _orig_width="0.1"/>
<text x="248.24553049289895" y="2015.5" _orig_x="257.56"/>
</g>
<g class="hide">
<title>v8::Object::Get (94 samples, 0.08%)</title><rect x="194.7398913951546" y="1429" width="1.0413533834586466" height="15.0" fill="rgb(220,93,5)" rx="2" ry="2" _orig_x="206.1" _orig_width="1.0"/>
<text x="197.7398913951546" y="1439.5" _orig_x="209.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (446 samples, 0.38%)</title><rect x="156.93876357560575" y="2005" width="4.581954887218045" height="15.0" fill="rgb(245,47,8)" rx="2" ry="2" _orig_x="169.8" _orig_width="4.4"/>
<text x="159.93876357560575" y="2015.5" _orig_x="172.77"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (18 samples, 0.02%)</title><rect x="473.3249791144528" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(247,145,13)" rx="2" ry="2" _orig_x="557.0" _orig_width="0.2"/>
<text x="476.3249791144528" y="1743.5" _orig_x="560.04"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (898 samples, 0.76%)</title><rect x="250.78111946533" y="1813" width="21.934001670843777" height="15.0" fill="rgb(247,201,7)" rx="2" ry="2" _orig_x="466.7" _orig_width="8.9"/>
<text x="253.78111946533" y="1823.5" _orig_x="469.69">s..</text>
</g>
<g class="hide">
<title>ib_io_rd-4 (12 samples, 0.01%)</title><rect x="332.0" y="2069" width="0.1" height="15.0" fill="rgb(239,27,0)" rx="2" ry="2"/>
<text x="334.99" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="261" width="0.31240601503759396" height="15.0" fill="rgb(241,23,54)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="271.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="22.6" y="1941" width="0.2" height="15.0" fill="rgb(213,155,22)" rx="2" ry="2"/>
<text x="25.62" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="11.565831244778668" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(221,197,44)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="2031.5" _orig_x="33.19"/>
</g>
<g class="hide">
<title>[perf-58119.map] (44 samples, 0.04%)</title><rect x="117.99214703425235" y="1557" width="0.41654135338345866" height="15.0" fill="rgb(242,52,54)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1567.5" _orig_x="135.40"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (12 samples, 0.01%)</title><rect x="908.3082706766917" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(225,198,36)" rx="2" ry="2" _orig_x="733.5" _orig_width="0.1"/>
<text x="911.3082706766917" y="1791.5" _orig_x="736.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.04%)</title><rect x="928.0609440267335" y="1525" width="0.5206766917293233" height="15.0" fill="rgb(223,179,21)" rx="2" ry="2" _orig_x="910.3" _orig_width="0.5"/>
<text x="931.0609440267335" y="1535.5" _orig_x="913.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="344.79891395154556" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(209,12,5)" rx="2" ry="2" _orig_x="350.2" _orig_width="0.3"/>
<text x="347.79891395154556" y="1919.5" _orig_x="353.23"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::CopyTracedGlobal (20 samples, 0.02%)</title><rect x="194.11507936507942" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(244,52,8)" rx="2" ry="2" _orig_x="205.5" _orig_width="0.2"/>
<text x="197.11507936507942" y="1423.5" _orig_x="208.55"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="1989" width="2.2909774436090227" height="15.0" fill="rgb(211,206,28)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="1999.5" _orig_x="38.23"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (15 samples, 0.01%)</title><rect x="687.9824561403508" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(229,121,42)" rx="2" ry="2" _orig_x="644.1" _orig_width="0.2"/>
<text x="690.9824561403508" y="1887.5" _orig_x="647.14"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (48 samples, 0.04%)</title><rect x="23.554720133667505" y="1749" width="1.2322472848788637" height="15.0" fill="rgb(249,210,25)" rx="2" ry="2" _orig_x="374.5" _orig_width="0.5"/>
<text x="26.554720133667505" y="1759.5" _orig_x="377.49"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (16 samples, 0.01%)</title><rect x="275.44477861319973" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(215,7,21)" rx="2" ry="2" _orig_x="283.6" _orig_width="0.2"/>
<text x="278.44477861319973" y="2047.5" _orig_x="286.60"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (56 samples, 0.05%)</title><rect x="458.04511278195474" y="1733" width="1.4786967418546364" height="15.0" fill="rgb(236,21,46)" rx="2" ry="2" _orig_x="550.8" _orig_width="0.6"/>
<text x="461.04511278195474" y="1743.5" _orig_x="553.81"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (574 samples, 0.48%)</title><rect x="752.798663324979" y="1845" width="14.047619047619047" height="15.0" fill="rgb(223,75,12)" rx="2" ry="2" _orig_x="670.4" _orig_width="5.7"/>
<text x="755.798663324979" y="1855.5" _orig_x="673.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="1188.8" y="1973" width="0.1" height="15.0" fill="rgb(244,67,32)" rx="2" ry="2"/>
<text x="1191.79" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (492 samples, 0.41%)</title><rect x="162.5620718462824" y="2037" width="5.102631578947369" height="15.0" fill="rgb(215,152,28)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="2047.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>pthread_cond_wait@@GLIBC_2.3.2 (32 samples, 0.03%)</title><rect x="108.30756056808693" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(209,153,49)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="2047.5" _orig_x="126.08"/>
</g>
<g class="hide">
<title>[perf-32996.map] (116 samples, 0.10%)</title><rect x="17.3" y="1685" width="1.1" height="15.0" fill="rgb(225,78,54)" rx="2" ry="2"/>
<text x="20.27" y="1695.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(216,4,26)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1743.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (57 samples, 0.05%)</title><rect x="1143.4210526315787" y="1861" width="1.2322472848788637" height="15.0" fill="rgb(223,88,11)" rx="2" ry="2" _orig_x="828.9" _orig_width="0.5"/>
<text x="1146.4210526315787" y="1871.5" _orig_x="831.86"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (14 samples, 0.01%)</title><rect x="435.125313283208" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(251,130,13)" rx="2" ry="2" _orig_x="541.5" _orig_width="0.1"/>
<text x="438.125313283208" y="1855.5" _orig_x="544.48"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (11 samples, 0.01%)</title><rect x="111.53717627401835" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(218,29,8)" rx="2" ry="2" _orig_x="410.2" _orig_width="0.1"/>
<text x="114.53717627401835" y="1711.5" _orig_x="413.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="356.04553049289893" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(222,205,41)" rx="2" ry="2" _orig_x="361.0" _orig_width="0.1"/>
<text x="359.04553049289893" y="1679.5" _orig_x="363.97"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (18 samples, 0.02%)</title><rect x="1064.5572263993315" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(205,224,47)" rx="2" ry="2" _orig_x="796.9" _orig_width="0.2"/>
<text x="1067.5572263993315" y="1823.5" _orig_x="799.95"/>
</g>
<g class="hide">
<title>[chrome] (14 samples, 0.01%)</title><rect x="11.7" y="1669" width="0.1" height="15.0" fill="rgb(238,53,43)" rx="2" ry="2"/>
<text x="14.68" y="1679.5"/>
</g>
<g>
<title>_int_free (11 samples, 0.01%)</title><rect x="1140.4636591478697" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(235,202,29)" rx="2" ry="2" _orig_x="827.7" _orig_width="0.1"/>
<text x="1143.4636591478697" y="1887.5" _orig_x="830.73"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (13 samples, 0.01%)</title><rect x="1084.766081871345" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(250,97,49)" rx="2" ry="2" _orig_x="805.1" _orig_width="0.1"/>
<text x="1087.766081871345" y="1839.5" _orig_x="808.08"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (168 samples, 0.14%)</title><rect x="289.4" y="2053" width="1.7" height="15.0" fill="rgb(233,31,47)" rx="2" ry="2"/>
<text x="292.41" y="2063.5"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (16 samples, 0.01%)</title><rect x="600.985797827903" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(210,100,31)" rx="2" ry="2" _orig_x="608.8" _orig_width="0.2"/>
<text x="603.985797827903" y="1743.5" _orig_x="611.80"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (19 samples, 0.02%)</title><rect x="1110.6432748538011" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(214,45,50)" rx="2" ry="2" _orig_x="815.6" _orig_width="0.2"/>
<text x="1113.6432748538011" y="1823.5" _orig_x="818.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.06%)</title><rect x="351.88011695906437" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(238,49,39)" rx="2" ry="2" _orig_x="357.0" _orig_width="0.6"/>
<text x="354.88011695906437" y="1967.5" _orig_x="359.95"/>
</g>
<g>
<title>Field::CompareLessThan (31 samples, 0.03%)</title><rect x="169.20634920634924" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(231,119,46)" rx="2" ry="2" _orig_x="433.6" _orig_width="0.3"/>
<text x="172.20634920634924" y="1855.5" _orig_x="436.57"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTaskImpl (21 samples, 0.02%)</title><rect x="243.3710944026734" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(211,159,9)" rx="2" ry="2" _orig_x="252.8" _orig_width="0.2"/>
<text x="246.3710944026734" y="1887.5" _orig_x="255.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.147786131996714" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(240,63,45)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="2015.5" _orig_x="37.57"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1173" width="0.31240601503759396" height="15.0" fill="rgb(237,85,46)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1183.5" _orig_x="99.72"/>
</g>
<g>
<title>CatalogManager::GetTableIndexes (225 samples, 0.19%)</title><rect x="1160.426065162907" y="1957" width="5.4218880534670015" height="15.0" fill="rgb(232,70,3)" rx="2" ry="2" _orig_x="835.8" _orig_width="2.2"/>
<text x="1163.426065162907" y="1967.5" _orig_x="838.78"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (13 samples, 0.01%)</title><rect x="1023.6466165413532" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(248,20,12)" rx="2" ry="2" _orig_x="780.3" _orig_width="0.1"/>
<text x="1026.646616541353" y="1791.5" _orig_x="783.28"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="543.563074352548" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(223,71,8)" rx="2" ry="2" _orig_x="585.5" _orig_width="0.1"/>
<text x="546.563074352548" y="1743.5" _orig_x="588.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="271.80004177109447" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(253,79,42)" rx="2" ry="2" _orig_x="280.1" _orig_width="0.2"/>
<text x="274.80004177109447" y="1983.5" _orig_x="283.15"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (15 samples, 0.01%)</title><rect x="745.4051796157058" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(249,201,48)" rx="2" ry="2" _orig_x="667.4" _orig_width="0.2"/>
<text x="748.4051796157058" y="1807.5" _orig_x="670.41"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (49 samples, 0.04%)</title><rect x="690.6934001670844" y="1893" width="1.2322472848788637" height="15.0" fill="rgb(247,55,27)" rx="2" ry="2" _orig_x="645.2" _orig_width="0.5"/>
<text x="693.6934001670844" y="1903.5" _orig_x="648.25"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(206,102,51)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1823.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="162.24966583124484" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(218,114,15)" rx="2" ry="2" _orig_x="174.9" _orig_width="0.2"/>
<text x="165.24966583124484" y="1983.5" _orig_x="177.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="83.1068086883877" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(238,45,27)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1951.5" _orig_x="101.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (231 samples, 0.19%)</title><rect x="341.1541771094403" y="1957" width="2.3951127819548867" height="15.0" fill="rgb(207,185,53)" rx="2" ry="2" _orig_x="346.7" _orig_width="2.3"/>
<text x="344.1541771094403" y="1967.5" _orig_x="349.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="320.53538011695906" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(211,207,48)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1919.5" _orig_x="329.85"/>
</g>
<g>
<title>malloc (12 samples, 0.01%)</title><rect x="650.7685881370091" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(237,79,38)" rx="2" ry="2" _orig_x="629.0" _orig_width="0.1"/>
<text x="653.7685881370091" y="1855.5" _orig_x="632.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="309.18462823725986" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(242,13,16)" rx="2" ry="2" _orig_x="316.0" _orig_width="0.2"/>
<text x="312.18462823725986" y="2047.5" _orig_x="319.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="355.73312447786134" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(234,109,32)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1983.5" _orig_x="363.69"/>
</g>
<g class="hide">
<title>[unknown] (63 samples, 0.05%)</title><rect x="915.0" y="2053" width="0.7" height="15.0" fill="rgb(214,61,9)" rx="2" ry="2"/>
<text x="918.03" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (418 samples, 0.35%)</title><rect x="887.5522974101922" y="1845" width="4.373684210526316" height="15.0" fill="rgb(244,109,29)" rx="2" ry="2" _orig_x="871.4" _orig_width="4.2"/>
<text x="890.5522974101922" y="1855.5" _orig_x="874.43"/>
</g>
<g class="hide">
<title>CefExecuteProcess (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1989" width="5.102631578947369" height="15.0" fill="rgb(243,47,18)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1999.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>QWidget::window (16 samples, 0.01%)</title><rect x="231.8120718462824" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(241,60,3)" rx="2" ry="2" _orig_x="241.7" _orig_width="0.1"/>
<text x="234.8120718462824" y="2047.5" _orig_x="244.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="19.6" y="1749" width="0.2" height="15.0" fill="rgb(214,155,7)" rx="2" ry="2"/>
<text x="22.62" y="1759.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (101 samples, 0.08%)</title><rect x="807.7568922305765" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(214,44,15)" rx="2" ry="2" _orig_x="692.7" _orig_width="1.0"/>
<text x="810.7568922305765" y="1775.5" _orig_x="695.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="1989" width="0.4733253108704372" height="15.0" fill="rgb(219,179,52)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1999.5" _orig_x="371.76"/>
</g>
<g class="hide">
<title>[perf-58119.map] (19 samples, 0.02%)</title><rect x="119.65831244778619" y="1637" width="0.10413533834586466" height="15.0" fill="rgb(225,200,2)" rx="2" ry="2" _orig_x="134.0" _orig_width="0.1"/>
<text x="122.65831244778619" y="1647.5" _orig_x="136.96"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1013" width="0.31240601503759396" height="15.0" fill="rgb(234,116,33)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1023.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (19 samples, 0.02%)</title><rect x="1125.923141186299" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(237,192,12)" rx="2" ry="2" _orig_x="821.8" _orig_width="0.2"/>
<text x="1128.923141186299" y="1775.5" _orig_x="824.80"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="453" width="0.31240601503759396" height="15.0" fill="rgb(219,169,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="463.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="113.51432748538016" y="1573" width="0.20827067669172933" height="15.0" fill="rgb(226,57,27)" rx="2" ry="2" _orig_x="128.1" _orig_width="0.2"/>
<text x="116.51432748538016" y="1583.5" _orig_x="131.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (201 samples, 0.17%)</title><rect x="341.4665831244779" y="1941" width="2.082706766917293" height="15.0" fill="rgb(231,138,20)" rx="2" ry="2" _orig_x="347.0" _orig_width="2.0"/>
<text x="344.4665831244779" y="1951.5" _orig_x="349.97"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::GetObjectProperty (12 samples, 0.01%)</title><rect x="164.43650793650798" y="1413" width="0.10413533834586466" height="15.0" fill="rgb(225,52,42)" rx="2" ry="2" _orig_x="177.0" _orig_width="0.1"/>
<text x="167.43650793650798" y="1423.5" _orig_x="180.02"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (78 samples, 0.07%)</title><rect x="850.3926482873851" y="1813" width="1.971595655806182" height="15.0" fill="rgb(227,181,48)" rx="2" ry="2" _orig_x="710.0" _orig_width="0.8"/>
<text x="853.3926482873851" y="1823.5" _orig_x="712.99"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (15 samples, 0.01%)</title><rect x="587.4310776942355" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(211,116,23)" rx="2" ry="2" _orig_x="603.3" _orig_width="0.2"/>
<text x="590.4310776942355" y="1695.5" _orig_x="606.31"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(250,121,8)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1935.5" _orig_x="297.81"/>
</g>
<g class="hide">
<title>[libxul.so] (23 samples, 0.02%)</title><rect x="20.4" y="2053" width="0.2" height="15.0" fill="rgb(219,91,54)" rx="2" ry="2"/>
<text x="23.40" y="2063.5"/>
</g>
<g class="hide">
<title>pa_thread_mq_get (12 samples, 0.01%)</title><rect x="71.8601921470343" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(216,119,30)" rx="2" ry="2" _orig_x="88.1" _orig_width="0.1"/>
<text x="74.8601921470343" y="2047.5" _orig_x="91.05"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (2,082 samples, 1.75%)</title><rect x="246.83792815371763" y="1861" width="51.015037593984964" height="15.0" fill="rgb(251,182,42)" rx="2" ry="2" _orig_x="465.1" _orig_width="20.7"/>
<text x="249.83792815371763" y="1871.5" _orig_x="468.15">Gener..</text>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (15 samples, 0.01%)</title><rect x="15.835380116959117" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(241,53,2)" rx="2" ry="2" _orig_x="34.3" _orig_width="0.1"/>
<text x="18.835380116959115" y="1935.5" _orig_x="37.26"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (95 samples, 0.08%)</title><rect x="239.44444444444449" y="1829" width="2.4644945697577274" height="15.0" fill="rgb(229,189,31)" rx="2" ry="2" _orig_x="462.1" _orig_width="1.0"/>
<text x="242.44444444444449" y="1839.5" _orig_x="465.12"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="789" width="0.31240601503759396" height="15.0" fill="rgb(232,185,44)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="799.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (11 samples, 0.01%)</title><rect x="1133.8095238095236" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(209,4,15)" rx="2" ry="2" _orig_x="825.0" _orig_width="0.1"/>
<text x="1136.8095238095236" y="1791.5" _orig_x="827.96"/>
</g>
<g class="hide">
<title>content::RunZygote (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1893" width="55.81654135338346" height="15.0" fill="rgb(214,207,25)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1903.5" _orig_x="185.47">content::RunZygote </text>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (41 samples, 0.03%)</title><rect x="1081.0693400167083" y="1765" width="0.985797827903091" height="15.0" fill="rgb(234,50,42)" rx="2" ry="2" _orig_x="803.6" _orig_width="0.4"/>
<text x="1084.0693400167083" y="1775.5" _orig_x="806.63"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (121 samples, 0.10%)</title><rect x="75.30910609857978" y="1765" width="2.957393483709273" height="15.0" fill="rgb(244,200,12)" rx="2" ry="2" _orig_x="395.5" _orig_width="1.2"/>
<text x="78.30910609857978" y="1775.5" _orig_x="398.45"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(238,54,14)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1999.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.09%)</title><rect x="351.46357560568094" y="1989" width="1.0413533834586466" height="15.0" fill="rgb(211,64,40)" rx="2" ry="2" _orig_x="356.6" _orig_width="1.0"/>
<text x="354.46357560568094" y="1999.5" _orig_x="359.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="931.601545530493" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(244,207,33)" rx="2" ry="2" _orig_x="913.7" _orig_width="0.1"/>
<text x="934.601545530493" y="1967.5" _orig_x="916.71"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (12 samples, 0.01%)</title><rect x="106.3617376775272" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(214,110,7)" rx="2" ry="2" _orig_x="408.1" _orig_width="0.1"/>
<text x="109.3617376775272" y="1743.5" _orig_x="411.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.11%)</title><rect x="152.877485380117" y="1733" width="1.2496240601503759" height="15.0" fill="rgb(234,84,3)" rx="2" ry="2" _orig_x="165.9" _orig_width="1.2"/>
<text x="155.877485380117" y="1743.5" _orig_x="168.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (233 samples, 0.20%)</title><rect x="105.8083124477862" y="1845" width="2.4992481203007517" height="15.0" fill="rgb(216,173,23)" rx="2" ry="2" _orig_x="120.7" _orig_width="2.4"/>
<text x="108.8083124477862" y="1855.5" _orig_x="123.74"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (11 samples, 0.01%)</title><rect x="291.6" y="2053" width="0.1" height="15.0" fill="rgb(210,7,2)" rx="2" ry="2"/>
<text x="294.61" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(231,136,8)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1647.5" _orig_x="99.72"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (207 samples, 0.17%)</title><rect x="274.93316624895573" y="1813" width="4.928989139515455" height="15.0" fill="rgb(245,112,3)" rx="2" ry="2" _orig_x="476.5" _orig_width="2.0"/>
<text x="277.93316624895573" y="1823.5" _orig_x="479.49"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (47 samples, 0.04%)</title><rect x="293.25192147034255" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(214,48,26)" rx="2" ry="2" _orig_x="300.7" _orig_width="0.5"/>
<text x="296.25192147034255" y="2031.5" _orig_x="303.70"/>
</g>
<g class="hide">
<title>[code] (21 samples, 0.02%)</title><rect x="119.55417710944033" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(211,112,9)" rx="2" ry="2" _orig_x="133.9" _orig_width="0.2"/>
<text x="122.55417710944033" y="1679.5" _orig_x="136.94"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (60 samples, 0.05%)</title><rect x="67.17627401837925" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(252,140,39)" rx="2" ry="2" _orig_x="392.2" _orig_width="0.6"/>
<text x="70.17627401837925" y="1823.5" _orig_x="395.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="41.34853801169596" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(209,145,42)" rx="2" ry="2" _orig_x="58.8" _orig_width="0.3"/>
<text x="44.34853801169596" y="2031.5" _orig_x="61.84"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (20 samples, 0.02%)</title><rect x="287.9410192147035" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(219,103,30)" rx="2" ry="2" _orig_x="295.6" _orig_width="0.2"/>
<text x="290.9410192147035" y="2047.5" _orig_x="298.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="156.00154553049296" y="1877" width="0.7289473684210526" height="15.0" fill="rgb(229,180,49)" rx="2" ry="2" _orig_x="168.9" _orig_width="0.7"/>
<text x="159.00154553049296" y="1887.5" _orig_x="171.87"/>
</g>
<g class="hide">
<title>[unknown] (221 samples, 0.19%)</title><rect x="49.679365079365134" y="1893" width="2.2909774436090227" height="15.0" fill="rgb(238,91,19)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1903.5" _orig_x="69.81"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (24 samples, 0.02%)</title><rect x="719.2815371762739" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(217,13,21)" rx="2" ry="2" _orig_x="656.8" _orig_width="0.3"/>
<text x="722.2815371762739" y="1791.5" _orig_x="659.84"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(244,117,30)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1967.5" _orig_x="48.87"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (14 samples, 0.01%)</title><rect x="841.5204678362572" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(246,172,27)" rx="2" ry="2" _orig_x="706.4" _orig_width="0.2"/>
<text x="844.5204678362572" y="1791.5" _orig_x="709.44"/>
</g>
<g class="hide">
<title>[perf-32884.map] (62 samples, 0.05%)</title><rect x="98.93538011695911" y="1605" width="0.7289473684210526" height="15.0" fill="rgb(247,194,22)" rx="2" ry="2" _orig_x="114.1" _orig_width="0.7"/>
<text x="101.93538011695911" y="1615.5" _orig_x="117.15"/>
</g>
<g class="hide">
<title>[unknown] (41 samples, 0.03%)</title><rect x="19.68838763575611" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(216,160,0)" rx="2" ry="2" _orig_x="38.0" _orig_width="0.4"/>
<text x="22.68838763575611" y="2047.5" _orig_x="40.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="355.73312447786134" y="1861" width="0.41654135338345866" height="15.0" fill="rgb(205,162,46)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1871.5" _orig_x="363.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (11 samples, 0.01%)</title><rect x="429.4569757727653" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,146,4)" rx="2" ry="2" _orig_x="539.2" _orig_width="0.1"/>
<text x="432.4569757727653" y="1759.5" _orig_x="542.20"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (81 samples, 0.07%)</title><rect x="79.74519632414372" y="1717" width="1.971595655806182" height="15.0" fill="rgb(226,72,48)" rx="2" ry="2" _orig_x="397.3" _orig_width="0.8"/>
<text x="82.74519632414372" y="1727.5" _orig_x="400.30"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(237,11,15)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1791.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="1162.3104693140792" y="1989" width="0.2366626554352186" height="15.0" fill="rgb(231,122,6)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="1999.5" _orig_x="850.98"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (13 samples, 0.01%)</title><rect x="287.8368838763576" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(229,209,26)" rx="2" ry="2" _orig_x="295.5" _orig_width="0.1"/>
<text x="290.8368838763576" y="2047.5" _orig_x="298.46"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="231.06516290726813" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(211,23,16)" rx="2" ry="2" _orig_x="458.7" _orig_width="0.2"/>
<text x="234.06516290726813" y="1727.5" _orig_x="461.69"/>
</g>
<g class="hide">
<title>graphene_vec3_dot (29 samples, 0.02%)</title><rect x="307.6225981620719" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(244,43,47)" rx="2" ry="2" _orig_x="314.5" _orig_width="0.3"/>
<text x="310.6225981620719" y="2047.5" _orig_x="317.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="235.977485380117" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(226,130,34)" rx="2" ry="2" _orig_x="245.7" _orig_width="0.2"/>
<text x="238.977485380117" y="1903.5" _orig_x="248.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="355.5248538011696" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(234,167,18)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1983.5" _orig_x="363.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="914.3150793650794" y="1957" width="0.7289473684210526" height="15.0" fill="rgb(226,186,8)" rx="2" ry="2" _orig_x="897.1" _orig_width="0.7"/>
<text x="917.3150793650794" y="1967.5" _orig_x="900.07"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (87 samples, 0.07%)</title><rect x="157.13032581453632" y="1717" width="1.971595655806182" height="15.0" fill="rgb(252,145,32)" rx="2" ry="2" _orig_x="428.7" _orig_width="0.8"/>
<text x="160.13032581453632" y="1727.5" _orig_x="431.68"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1317" width="0.20827067669172933" height="15.0" fill="rgb(207,144,51)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1327.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (233 samples, 0.20%)</title><rect x="49.57522974101927" y="1941" width="2.3951127819548867" height="15.0" fill="rgb(216,60,11)" rx="2" ry="2" _orig_x="66.7" _orig_width="2.3"/>
<text x="52.57522974101927" y="1951.5" _orig_x="69.70"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (19 samples, 0.02%)</title><rect x="182.76106934001675" y="1669" width="0.4928989139515455" height="15.0" fill="rgb(246,42,26)" rx="2" ry="2" _orig_x="439.1" _orig_width="0.2"/>
<text x="185.76106934001675" y="1679.5" _orig_x="442.07"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (64 samples, 0.05%)</title><rect x="196.06934001670845" y="1813" width="1.7251461988304093" height="15.0" fill="rgb(212,153,24)" rx="2" ry="2" _orig_x="444.5" _orig_width="0.7"/>
<text x="199.06934001670845" y="1823.5" _orig_x="447.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.08%)</title><rect x="52.07447786132001" y="1941" width="0.937218045112782" height="15.0" fill="rgb(223,193,40)" rx="2" ry="2" _orig_x="69.1" _orig_width="0.9"/>
<text x="55.07447786132001" y="1951.5" _orig_x="72.07"/>
</g>
<g class="hide">
<title>run_builtin (1,556 samples, 1.31%)</title><rect x="914.2109440267335" y="2021" width="16.14097744360902" height="15.0" fill="rgb(213,53,15)" rx="2" ry="2" _orig_x="897.0" _orig_width="15.5"/>
<text x="917.2109440267335" y="2031.5" _orig_x="900.05"/>
</g>
<g>
<title>malloc (15 samples, 0.01%)</title><rect x="895.2464494569758" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(207,26,50)" rx="2" ry="2" _orig_x="728.2" _orig_width="0.2"/>
<text x="898.2464494569758" y="1871.5" _orig_x="731.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="13.1" y="1813" width="0.2" height="15.0" fill="rgb(240,229,42)" rx="2" ry="2"/>
<text x="16.06" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="355.8372598162072" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(213,42,13)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1807.5" _orig_x="363.75"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (226 samples, 0.19%)</title><rect x="122.36583124477866" y="1845" width="2.2909774436090227" height="15.0" fill="rgb(215,169,39)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1855.5" _orig_x="139.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="238.99741019214707" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(237,35,40)" rx="2" ry="2" _orig_x="248.6" _orig_width="0.2"/>
<text x="241.99741019214707" y="1807.5" _orig_x="251.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="1181.4" y="1557" width="0.2" height="15.0" fill="rgb(219,120,27)" rx="2" ry="2"/>
<text x="1184.37" y="1567.5"/>
</g>
<g class="hide">
<title>[unknown] (17 samples, 0.01%)</title><rect x="58.3" y="2053" width="0.1" height="15.0" fill="rgb(228,189,1)" rx="2" ry="2"/>
<text x="61.26" y="2063.5"/>
</g>
<g>
<title>BufferPoolManager::NewPage (16 samples, 0.01%)</title><rect x="690.4469507101086" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(249,143,37)" rx="2" ry="2" _orig_x="645.1" _orig_width="0.1"/>
<text x="693.4469507101086" y="1903.5" _orig_x="648.09"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask (50 samples, 0.04%)</title><rect x="165.99853801169596" y="1797" width="0.5206766917293233" height="15.0" fill="rgb(239,169,1)" rx="2" ry="2" _orig_x="178.5" _orig_width="0.5"/>
<text x="168.99853801169596" y="1807.5" _orig_x="181.46"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Lookup (68 samples, 0.06%)</title><rect x="777.936507936508" y="1909" width="1.7251461988304093" height="15.0" fill="rgb(227,16,29)" rx="2" ry="2" _orig_x="680.6" _orig_width="0.7"/>
<text x="780.936507936508" y="1919.5" _orig_x="683.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (308 samples, 0.26%)</title><rect x="888.6977861319967" y="1749" width="3.2281954887218047" height="15.0" fill="rgb(214,102,35)" rx="2" ry="2" _orig_x="872.5" _orig_width="3.1"/>
<text x="891.6977861319967" y="1759.5" _orig_x="875.52"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (18 samples, 0.02%)</title><rect x="987.1720969089389" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(224,193,15)" rx="2" ry="2" _orig_x="765.5" _orig_width="0.2"/>
<text x="990.1720969089389" y="1727.5" _orig_x="768.47"/>
</g>
<g class="hide">
<title>[perf-58119.map] (27 samples, 0.02%)</title><rect x="120.69966583124483" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(250,133,13)" rx="2" ry="2" _orig_x="135.0" _orig_width="0.3"/>
<text x="123.69966583124483" y="1455.5" _orig_x="138.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (120 samples, 0.10%)</title><rect x="902.9643274853802" y="1973" width="1.2496240601503759" height="15.0" fill="rgb(220,113,31)" rx="2" ry="2" _orig_x="886.2" _orig_width="1.2"/>
<text x="905.9643274853802" y="1983.5" _orig_x="889.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="13.1" y="1717" width="0.2" height="15.0" fill="rgb(250,165,44)" rx="2" ry="2"/>
<text x="16.15" y="1727.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (12 samples, 0.01%)</title><rect x="669.7451963241438" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,162,11)" rx="2" ry="2" _orig_x="636.7" _orig_width="0.1"/>
<text x="672.7451963241438" y="1759.5" _orig_x="639.71"/>
</g>
<g class="hide">
<title>Debounce::loop (67 samples, 0.06%)</title><rect x="161.52071846282377" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(216,10,25)" rx="2" ry="2" _orig_x="174.2" _orig_width="0.7"/>
<text x="164.52071846282377" y="2031.5" _orig_x="177.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="95.49891395154557" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(227,171,44)" rx="2" ry="2" _orig_x="110.8" _orig_width="0.5"/>
<text x="98.49891395154557" y="2015.5" _orig_x="113.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="270.3421470342523" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(209,213,39)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1919.5" _orig_x="281.68"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (280 samples, 0.24%)</title><rect x="470.6140350877192" y="1749" width="6.900584795321637" height="15.0" fill="rgb(223,113,8)" rx="2" ry="2" _orig_x="555.9" _orig_width="2.8"/>
<text x="473.6140350877192" y="1759.5" _orig_x="558.94"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (11 samples, 0.01%)</title><rect x="896.2322472848789" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(229,225,20)" rx="2" ry="2" _orig_x="728.6" _orig_width="0.1"/>
<text x="899.2322472848789" y="1871.5" _orig_x="731.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="891.1970342522974" y="1685" width="0.7289473684210526" height="15.0" fill="rgb(219,59,24)" rx="2" ry="2" _orig_x="874.9" _orig_width="0.7"/>
<text x="894.1970342522974" y="1695.5" _orig_x="877.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(239,57,31)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1775.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[perf-58145.map] (179 samples, 0.15%)</title><rect x="126.94778613199671" y="1589" width="1.7703007518796992" height="15.0" fill="rgb(217,194,29)" rx="2" ry="2" _orig_x="141.0" _orig_width="1.7"/>
<text x="129.9477861319967" y="1599.5" _orig_x="143.97"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (26 samples, 0.02%)</title><rect x="1059.874686716792" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(252,137,22)" rx="2" ry="2" _orig_x="795.0" _orig_width="0.3"/>
<text x="1062.874686716792" y="1823.5" _orig_x="798.00"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (35 samples, 0.03%)</title><rect x="217.75689223057645" y="1781" width="0.985797827903091" height="15.0" fill="rgb(246,118,8)" rx="2" ry="2" _orig_x="453.3" _orig_width="0.4"/>
<text x="220.75689223057645" y="1791.5" _orig_x="456.32"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (35 samples, 0.03%)</title><rect x="600.2464494569757" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(253,1,52)" rx="2" ry="2" _orig_x="608.5" _orig_width="0.3"/>
<text x="603.2464494569757" y="1743.5" _orig_x="611.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1317" width="0.31240601503759396" height="15.0" fill="rgb(219,207,13)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1327.5" _orig_x="141.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="83.21094402673356" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(235,109,49)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1839.5" _orig_x="102.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="161.62485380116965" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(249,196,9)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1887.5" _orig_x="177.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="235.87335004177115" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(244,52,1)" rx="2" ry="2" _orig_x="245.6" _orig_width="0.3"/>
<text x="238.87335004177115" y="2031.5" _orig_x="248.62"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="112.57710944026739" y="1477" width="0.10413533834586466" height="15.0" fill="rgb(212,178,31)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1487.5" _orig_x="130.22"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (31 samples, 0.03%)</title><rect x="80.23809523809523" y="1701" width="0.985797827903091" height="15.0" fill="rgb(205,182,4)" rx="2" ry="2" _orig_x="397.5" _orig_width="0.4"/>
<text x="83.23809523809523" y="1711.5" _orig_x="400.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (491 samples, 0.41%)</title><rect x="878.7007936507937" y="1925" width="5.102631578947369" height="15.0" fill="rgb(244,201,34)" rx="2" ry="2" _orig_x="862.9" _orig_width="4.9"/>
<text x="881.7007936507937" y="1935.5" _orig_x="865.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="41.869214703425286" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(242,185,49)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1967.5" _orig_x="62.28"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="116.4661654135338" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(223,227,47)" rx="2" ry="2" _orig_x="412.2" _orig_width="0.1"/>
<text x="119.4661654135338" y="1759.5" _orig_x="415.18"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (12 samples, 0.01%)</title><rect x="558.8429406850461" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(239,46,8)" rx="2" ry="2" _orig_x="591.7" _orig_width="0.1"/>
<text x="561.8429406850461" y="1855.5" _orig_x="594.67"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (15 samples, 0.01%)</title><rect x="1181.1278195488721" y="1925" width="0.24644945697577275" height="15.0" fill="rgb(251,51,14)" rx="2" ry="2" _orig_x="844.2" _orig_width="0.1"/>
<text x="1184.1278195488721" y="1935.5" _orig_x="847.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="321.368462823726" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(211,120,52)" rx="2" ry="2" _orig_x="327.7" _orig_width="0.4"/>
<text x="324.368462823726" y="1935.5" _orig_x="330.68"/>
</g>
<g class="hide">
<title>[[vdso]] (18 samples, 0.02%)</title><rect x="913.1695906432749" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(235,204,19)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="2047.5" _orig_x="898.97"/>
</g>
<g class="hide">
<title>[unknown] (18 samples, 0.02%)</title><rect x="10.316207184628293" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(220,129,24)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1791.5" _orig_x="32.01"/>
</g>
<g class="hide">
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (125 samples, 0.11%)</title><rect x="31.351545530492956" y="1877" width="1.2496240601503759" height="15.0" fill="rgb(233,218,54)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.2"/>
<text x="34.351545530492956" y="1887.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="108.4116959064328" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(236,29,39)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1919.5" _orig_x="126.19"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (18 samples, 0.02%)</title><rect x="602.4644945697576" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(208,193,23)" rx="2" ry="2" _orig_x="609.4" _orig_width="0.2"/>
<text x="605.4644945697576" y="1759.5" _orig_x="612.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (50 samples, 0.04%)</title><rect x="400.86883876357564" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(243,176,10)" rx="2" ry="2" _orig_x="527.6" _orig_width="0.5"/>
<text x="403.86883876357564" y="1807.5" _orig_x="530.58"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1253" width="2.2909774436090227" height="15.0" fill="rgb(242,68,27)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1263.5" _orig_x="69.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (16 samples, 0.01%)</title><rect x="452.13032581453626" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(254,204,48)" rx="2" ry="2" _orig_x="548.4" _orig_width="0.1"/>
<text x="455.13032581453626" y="1791.5" _orig_x="551.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="280.2350041771095" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(222,28,43)" rx="2" ry="2" _orig_x="288.2" _orig_width="0.5"/>
<text x="283.2350041771095" y="2015.5" _orig_x="291.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.106432748538069" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(210,199,35)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1967.5" _orig_x="36.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="22.6" y="2005" width="0.2" height="15.0" fill="rgb(237,13,30)" rx="2" ry="2"/>
<text x="25.58" y="2015.5"/>
</g>
<g class="hide">
<title>blink::TimerBase::RunInternal (275 samples, 0.23%)</title><rect x="163.08274853801174" y="1781" width="2.811654135338346" height="15.0" fill="rgb(207,82,27)" rx="2" ry="2" _orig_x="175.7" _orig_width="2.7"/>
<text x="166.08274853801174" y="1791.5" _orig_x="178.65"/>
</g>
<g class="hide">
<title>client::MainMessageLoopStd::Run (75 samples, 0.06%)</title><rect x="243.0586883876358" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(209,76,35)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="2015.5" _orig_x="255.52"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="949" width="0.31240601503759396" height="15.0" fill="rgb(244,188,21)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="959.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (112 samples, 0.09%)</title><rect x="119.8665831244779" y="1701" width="1.1454887218045113" height="15.0" fill="rgb(253,157,21)" rx="2" ry="2" _orig_x="134.2" _orig_width="1.1"/>
<text x="122.8665831244779" y="1711.5" _orig_x="137.16"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (453 samples, 0.38%)</title><rect x="848.4210526315791" y="1845" width="10.843776106934003" height="15.0" fill="rgb(239,114,21)" rx="2" ry="2" _orig_x="709.2" _orig_width="4.4"/>
<text x="851.4210526315791" y="1855.5" _orig_x="712.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="16.2" y="1973" width="0.1" height="15.0" fill="rgb(230,123,15)" rx="2" ry="2"/>
<text x="19.18" y="1983.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (31 samples, 0.03%)</title><rect x="326.36695906432755" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(211,8,20)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="2047.5" _orig_x="335.47"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (579 samples, 0.49%)</title><rect x="541.0985797827902" y="1797" width="14.047619047619047" height="15.0" fill="rgb(206,38,5)" rx="2" ry="2" _orig_x="584.5" _orig_width="5.7"/>
<text x="544.0985797827902" y="1807.5" _orig_x="587.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.06%)</title><rect x="320.9519214703426" y="1957" width="0.8330827067669173" height="15.0" fill="rgb(239,121,37)" rx="2" ry="2" _orig_x="327.3" _orig_width="0.8"/>
<text x="323.9519214703426" y="1967.5" _orig_x="330.34"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (21 samples, 0.02%)</title><rect x="146.28654970760235" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(206,167,50)" rx="2" ry="2" _orig_x="424.3" _orig_width="0.2"/>
<text x="149.28654970760235" y="1807.5" _orig_x="427.34"/>
</g>
<g class="hide">
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="24.8" y="2037" width="0.2" height="15.0" fill="rgb(219,178,5)" rx="2" ry="2"/>
<text x="27.79" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="11.253425229741072" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(232,221,1)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1887.5" _orig_x="32.93"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (16 samples, 0.01%)</title><rect x="879.4736842105261" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(232,165,0)" rx="2" ry="2" _orig_x="721.8" _orig_width="0.1"/>
<text x="882.4736842105261" y="1791.5" _orig_x="724.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="915.1481620718463" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(215,97,12)" rx="2" ry="2" _orig_x="897.9" _orig_width="0.2"/>
<text x="918.1481620718463" y="1983.5" _orig_x="900.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="326.36695906432755" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(213,69,3)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="1967.5" _orig_x="335.54"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (19 samples, 0.02%)</title><rect x="326.78350041771097" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(217,66,13)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="2047.5" _orig_x="335.86"/>
</g>
<g class="hide">
<title>v8::Function::Call (25 samples, 0.02%)</title><rect x="184.1180868838764" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(223,131,13)" rx="2" ry="2" _orig_x="195.9" _orig_width="0.3"/>
<text x="187.1180868838764" y="1407.5" _orig_x="198.92"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, DBStorageEngine*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt; &gt;::operator[] (28 samples, 0.02%)</title><rect x="1180.8813700918963" y="1957" width="0.7393483709273182" height="15.0" fill="rgb(233,0,34)" rx="2" ry="2" _orig_x="844.1" _orig_width="0.3"/>
<text x="1183.8813700918963" y="1967.5" _orig_x="847.14"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (19 samples, 0.02%)</title><rect x="1014.281537176274" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(207,130,53)" rx="2" ry="2" _orig_x="776.5" _orig_width="0.2"/>
<text x="1017.281537176274" y="1807.5" _orig_x="779.53"/>
</g>
<g class="hide">
<title>[dbus-daemon] (39 samples, 0.03%)</title><rect x="270.96695906432757" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(220,49,53)" rx="2" ry="2" _orig_x="279.3" _orig_width="0.4"/>
<text x="273.96695906432757" y="2047.5" _orig_x="282.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.13%)</title><rect x="928.7898913951545" y="1845" width="1.5620300751879699" height="15.0" fill="rgb(210,147,23)" rx="2" ry="2" _orig_x="911.0" _orig_width="1.5"/>
<text x="931.7898913951545" y="1855.5" _orig_x="913.96"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(207,33,53)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1439.5" _orig_x="328.48"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (112 samples, 0.09%)</title><rect x="519.6574770258978" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(222,61,29)" rx="2" ry="2" _orig_x="575.8" _orig_width="1.1"/>
<text x="522.6574770258978" y="1775.5" _orig_x="578.83"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="965" width="0.31240601503759396" height="15.0" fill="rgb(217,227,15)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="975.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[code] (754 samples, 0.63%)</title><rect x="111.22335004177116" y="1781" width="7.810150375939849" height="15.0" fill="rgb(229,209,11)" rx="2" ry="2" _orig_x="125.9" _orig_width="7.5"/>
<text x="114.22335004177116" y="1791.5" _orig_x="128.87"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1925" width="12.912781954887219" height="15.0" fill="rgb(221,162,37)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1935.5" _orig_x="126.94"/>
</g>
<g class="hide">
<title>runtime.park_m (50 samples, 0.04%)</title><rect x="270.2380116959065" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(251,152,31)" rx="2" ry="2" _orig_x="278.6" _orig_width="0.5"/>
<text x="273.2380116959065" y="1983.5" _orig_x="281.58"/>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::GetValue (15,250 samples, 12.82%)</title><rect x="786.0693400167083" y="1941" width="372.8780284043442" height="15.0" fill="rgb(226,56,0)" rx="2" ry="2" _orig_x="683.9" _orig_width="151.3"/>
<text x="789.0693400167083" y="1951.5" _orig_x="686.88">BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparato..</text>
</g>
<g class="hide">
<title>QTimerInfoList::timerInsert (15 samples, 0.01%)</title><rect x="181.9" y="2053" width="0.2" height="15.0" fill="rgb(245,106,52)" rx="2" ry="2"/>
<text x="184.94" y="2063.5"/>
</g>
<g class="hide">
<title>kworker/0:1-eve (329 samples, 0.28%)</title><rect x="345.7" y="2069" width="3.3" height="15.0" fill="rgb(208,5,35)" rx="2" ry="2"/>
<text x="348.70" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (46 samples, 0.04%)</title><rect x="212.82790309106102" y="1733" width="0.985797827903091" height="15.0" fill="rgb(250,140,5)" rx="2" ry="2" _orig_x="451.3" _orig_width="0.4"/>
<text x="215.82790309106102" y="1743.5" _orig_x="454.26"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="19.68838763575611" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(248,69,30)" rx="2" ry="2" _orig_x="38.0" _orig_width="0.2"/>
<text x="22.68838763575611" y="2031.5" _orig_x="41.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="351.15116959064335" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(240,204,3)" rx="2" ry="2" _orig_x="356.3" _orig_width="0.2"/>
<text x="354.15116959064335" y="1871.5" _orig_x="359.34"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="677" width="0.31240601503759396" height="15.0" fill="rgb(216,159,50)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="687.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (40 samples, 0.03%)</title><rect x="1080.0835421888055" y="1765" width="0.985797827903091" height="15.0" fill="rgb(250,85,46)" rx="2" ry="2" _orig_x="803.2" _orig_width="0.4"/>
<text x="1083.0835421888055" y="1775.5" _orig_x="806.23"/>
</g>
<g class="hide">
<title>base::SampleVectorBase::Accumulate (76 samples, 0.06%)</title><rect x="210.04778613199673" y="1685" width="0.8330827067669173" height="15.0" fill="rgb(238,135,23)" rx="2" ry="2" _orig_x="220.8" _orig_width="0.8"/>
<text x="213.04778613199673" y="1695.5" _orig_x="223.81"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (16 samples, 0.01%)</title><rect x="401.36173767752706" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(227,62,42)" rx="2" ry="2" _orig_x="527.8" _orig_width="0.2"/>
<text x="404.36173767752706" y="1791.5" _orig_x="530.81"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,466 samples, 1.23%)</title><rect x="575.3550543024227" y="1829" width="35.735171261487054" height="15.0" fill="rgb(206,123,27)" rx="2" ry="2" _orig_x="598.4" _orig_width="14.5"/>
<text x="578.3550543024227" y="1839.5" _orig_x="601.38">Si..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="82.89853801169596" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(214,198,31)" rx="2" ry="2" _orig_x="98.7" _orig_width="0.1"/>
<text x="85.89853801169596" y="1903.5" _orig_x="101.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="15.002297410192202" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(245,92,30)" rx="2" ry="2" _orig_x="33.5" _orig_width="0.2"/>
<text x="18.002297410192202" y="2015.5" _orig_x="36.55"/>
</g>
<g class="hide">
<title>[perf-9366.map] (19 samples, 0.02%)</title><rect x="10.316207184628293" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(237,80,3)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1839.5" _orig_x="32.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(236,105,37)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1903.5" _orig_x="41.17"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (14 samples, 0.01%)</title><rect x="383.37092731829574" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(230,44,48)" rx="2" ry="2" _orig_x="520.5" _orig_width="0.2"/>
<text x="386.37092731829574" y="1807.5" _orig_x="523.54"/>
</g>
<g class="hide">
<title>clutter_actor_paint (64 samples, 0.05%)</title><rect x="298.04214703425237" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(228,41,37)" rx="2" ry="2" _orig_x="305.3" _orig_width="0.6"/>
<text x="301.04214703425237" y="2015.5" _orig_x="308.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (590 samples, 0.50%)</title><rect x="148.08725981620725" y="1941" width="6.03984962406015" height="15.0" fill="rgb(245,38,32)" rx="2" ry="2" _orig_x="161.3" _orig_width="5.8"/>
<text x="151.08725981620725" y="1951.5" _orig_x="164.25"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (20 samples, 0.02%)</title><rect x="742.4477861319967" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(248,110,25)" rx="2" ry="2" _orig_x="666.2" _orig_width="0.2"/>
<text x="745.4477861319967" y="1791.5" _orig_x="669.24"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(239,199,23)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1759.5" _orig_x="99.72"/>
</g>
<g>
<title>__memset_avx2_unaligned_erms (11 samples, 0.01%)</title><rect x="853.8429406850458" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(220,79,17)" rx="2" ry="2" _orig_x="711.4" _orig_width="0.1"/>
<text x="856.8429406850458" y="1791.5" _orig_x="714.38"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="272.0083124477862" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(206,207,43)" rx="2" ry="2" _orig_x="280.3" _orig_width="0.3"/>
<text x="275.0083124477862" y="2047.5" _orig_x="283.35"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="114.5556808688388" y="1429" width="0.10413533834586466" height="15.0" fill="rgb(232,181,10)" rx="2" ry="2" _orig_x="129.1" _orig_width="0.1"/>
<text x="117.5556808688388" y="1439.5" _orig_x="132.10"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (18 samples, 0.02%)</title><rect x="857.0467836257311" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(233,209,17)" rx="2" ry="2" _orig_x="712.7" _orig_width="0.1"/>
<text x="860.0467836257311" y="1759.5" _orig_x="715.65"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (33 samples, 0.03%)</title><rect x="269.2648287385129" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(251,223,42)" rx="2" ry="2" _orig_x="474.2" _orig_width="0.3"/>
<text x="272.2648287385129" y="1775.5" _orig_x="477.21"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (18 samples, 0.02%)</title><rect x="592.3600668337508" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(252,180,5)" rx="2" ry="2" _orig_x="605.3" _orig_width="0.2"/>
<text x="595.3600668337508" y="1743.5" _orig_x="608.29"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (27 samples, 0.02%)</title><rect x="926.5455304928988" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(213,60,26)" rx="2" ry="2" _orig_x="740.9" _orig_width="0.3"/>
<text x="929.5455304928988" y="1727.5" _orig_x="743.89"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="912.6" y="2053" width="0.2" height="15.0" fill="rgb(214,53,21)" rx="2" ry="2"/>
<text x="915.58" y="2063.5"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (32 samples, 0.03%)</title><rect x="316.4741019214704" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(254,76,7)" rx="2" ry="2" _orig_x="323.0" _orig_width="0.4"/>
<text x="319.4741019214704" y="2047.5" _orig_x="326.04"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="99.24778613199672" y="1365" width="0.20827067669172933" height="15.0" fill="rgb(248,158,34)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.2"/>
<text x="102.24778613199672" y="1375.5" _orig_x="117.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (11 samples, 0.01%)</title><rect x="43.763575605680835" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(237,65,45)" rx="2" ry="2" _orig_x="382.7" _orig_width="0.1"/>
<text x="46.763575605680835" y="1759.5" _orig_x="385.73"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="837" width="0.31240601503759396" height="15.0" fill="rgb(220,209,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="847.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (13 samples, 0.01%)</title><rect x="425.76023391812873" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(223,164,31)" rx="2" ry="2" _orig_x="537.7" _orig_width="0.1"/>
<text x="428.76023391812873" y="1743.5" _orig_x="540.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="133" width="0.20827067669172933" height="15.0" fill="rgb(218,81,25)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="143.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="280.3391395154554" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(246,61,4)" rx="2" ry="2" _orig_x="288.3" _orig_width="0.4"/>
<text x="283.3391395154554" y="1967.5" _orig_x="291.28"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (52 samples, 0.04%)</title><rect x="550.7101086048455" y="1717" width="1.2322472848788637" height="15.0" fill="rgb(253,20,29)" rx="2" ry="2" _orig_x="588.4" _orig_width="0.5"/>
<text x="553.7101086048455" y="1727.5" _orig_x="591.36"/>
</g>
<g>
<title>std::__detail::_Identity::operator (26 samples, 0.02%)</title><rect x="836.5914786967418" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(252,162,14)" rx="2" ry="2" _orig_x="704.4" _orig_width="0.2"/>
<text x="839.5914786967418" y="1791.5" _orig_x="707.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111 samples, 0.09%)</title><rect x="351.35944026733506" y="2005" width="1.1454887218045113" height="15.0" fill="rgb(238,111,50)" rx="2" ry="2" _orig_x="356.5" _orig_width="1.1"/>
<text x="354.35944026733506" y="2015.5" _orig_x="359.52"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1061" width="2.2909774436090227" height="15.0" fill="rgb(229,168,1)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1071.5" _orig_x="69.82"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (59 samples, 0.05%)</title><rect x="647.8111946532997" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(206,122,43)" rx="2" ry="2" _orig_x="627.8" _orig_width="0.6"/>
<text x="650.8111946532997" y="1807.5" _orig_x="630.79"/>
</g>
<g>
<title>TypeInt::CompareGreaterThan (24 samples, 0.02%)</title><rect x="788.533834586466" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(235,72,25)" rx="2" ry="2" _orig_x="684.9" _orig_width="0.3"/>
<text x="791.533834586466" y="1871.5" _orig_x="687.95"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="549" width="2.2909774436090227" height="15.0" fill="rgb(234,45,42)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="559.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>base::RunLoop::Run (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1877" width="5.102631578947369" height="15.0" fill="rgb(218,39,10)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1887.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (14 samples, 0.01%)</title><rect x="75.4" y="2053" width="0.2" height="15.0" fill="rgb(240,63,48)" rx="2" ry="2"/>
<text x="78.42" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (82 samples, 0.07%)</title><rect x="49.679365079365134" y="101" width="0.8330827067669173" height="15.0" fill="rgb(226,17,27)" rx="2" ry="2" _orig_x="66.8" _orig_width="0.8"/>
<text x="52.679365079365134" y="111.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (11 samples, 0.01%)</title><rect x="999.2481203007518" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(240,218,50)" rx="2" ry="2" _orig_x="770.4" _orig_width="0.1"/>
<text x="1002.2481203007518" y="1791.5" _orig_x="773.35"/>
</g>
<g class="hide">
<title>[code] (104 samples, 0.09%)</title><rect x="12.3" y="1909" width="1.0" height="15.0" fill="rgb(207,136,50)" rx="2" ry="2"/>
<text x="15.27" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.05%)</title><rect x="343.96583124477866" y="1941" width="0.5206766917293233" height="15.0" fill="rgb(211,25,30)" rx="2" ry="2" _orig_x="349.4" _orig_width="0.5"/>
<text x="346.96583124477866" y="1951.5" _orig_x="352.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.13%)</title><rect x="155.06432748538018" y="1989" width="1.6661654135338346" height="15.0" fill="rgb(210,32,20)" rx="2" ry="2" _orig_x="168.0" _orig_width="1.6"/>
<text x="158.06432748538018" y="1999.5" _orig_x="171.00"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="981" width="0.20827067669172933" height="15.0" fill="rgb(213,86,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="991.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (108 samples, 0.09%)</title><rect x="287.9" y="2053" width="1.1" height="15.0" fill="rgb(253,73,48)" rx="2" ry="2"/>
<text x="290.89" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="805" width="0.31240601503759396" height="15.0" fill="rgb(237,82,38)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="815.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="533" width="0.31240601503759396" height="15.0" fill="rgb(209,143,48)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="543.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (119 samples, 0.10%)</title><rect x="286.3789891395155" y="1989" width="1.2496240601503759" height="15.0" fill="rgb(223,110,0)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.2"/>
<text x="289.3789891395155" y="1999.5" _orig_x="297.14"/>
</g>
<g class="hide">
<title>[code] (113 samples, 0.10%)</title><rect x="31.351545530492956" y="1813" width="1.1454887218045113" height="15.0" fill="rgb(208,154,23)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.1"/>
<text x="34.351545530492956" y="1823.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="23.7" y="1925" width="0.1" height="15.0" fill="rgb(205,209,40)" rx="2" ry="2"/>
<text x="26.71" y="1935.5"/>
</g>
<g>
<title>Field::CompareLessThan (56 samples, 0.05%)</title><rect x="568.2080200501252" y="1861" width="1.4786967418546364" height="15.0" fill="rgb(220,171,43)" rx="2" ry="2" _orig_x="595.5" _orig_width="0.6"/>
<text x="571.2080200501252" y="1871.5" _orig_x="598.50"/>
</g>
<g class="hide">
<title>DedicatedWorker (501 samples, 0.42%)</title><rect x="15.3" y="2069" width="5.0" height="15.0" fill="rgb(210,157,13)" rx="2" ry="2"/>
<text x="18.31" y="2079.5"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (30 samples, 0.03%)</title><rect x="609.3650793650794" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(247,146,22)" rx="2" ry="2" _orig_x="612.2" _orig_width="0.3"/>
<text x="612.3650793650794" y="1775.5" _orig_x="615.17"/>
</g>
<g class="hide">
<title>start_thread (399 samples, 0.34%)</title><rect x="16.3" y="2053" width="4.0" height="15.0" fill="rgb(254,192,35)" rx="2" ry="2"/>
<text x="19.32" y="2063.5"/>
</g>
<g class="hide">
<title>QCoreApplicationPrivate::sendThroughApplicationEventFilters (44 samples, 0.04%)</title><rect x="230.77071846282377" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(218,160,50)" rx="2" ry="2" _orig_x="240.7" _orig_width="0.5"/>
<text x="233.77071846282377" y="2015.5" _orig_x="243.74"/>
</g>
<g class="hide">
<title>[perf-15821.map] (80 samples, 0.07%)</title><rect x="92.47898913951552" y="1685" width="0.8330827067669173" height="15.0" fill="rgb(222,202,12)" rx="2" ry="2" _orig_x="107.9" _orig_width="0.8"/>
<text x="95.47898913951552" y="1695.5" _orig_x="110.86"/>
</g>
<g class="hide">
<title>kworker/3:2-eve (82 samples, 0.07%)</title><rect x="354.2" y="2069" width="0.8" height="15.0" fill="rgb(219,202,47)" rx="2" ry="2"/>
<text x="357.19" y="2079.5"/>
</g>
<g class="hide">
<title>_nv009678rm (59 samples, 0.05%)</title><rect x="335.2" y="2053" width="0.6" height="15.0" fill="rgb(226,42,26)" rx="2" ry="2"/>
<text x="338.23" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="97.16507936507942" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(219,72,7)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="1983.5" _orig_x="115.37"/>
</g>
<g class="hide">
<title>__libc_sendmsg (14 samples, 0.01%)</title><rect x="19.896658312447844" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(230,136,29)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="2031.5" _orig_x="41.17"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (14 samples, 0.01%)</title><rect x="218.74269005847947" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(244,60,9)" rx="2" ry="2" _orig_x="453.7" _orig_width="0.1"/>
<text x="221.74269005847947" y="1791.5" _orig_x="456.70"/>
</g>
<g class="hide">
<title>[chrome] (99 samples, 0.08%)</title><rect x="86.0225981620719" y="1877" width="1.0413533834586466" height="15.0" fill="rgb(222,76,50)" rx="2" ry="2" _orig_x="101.7" _orig_width="1.0"/>
<text x="89.0225981620719" y="1887.5" _orig_x="104.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="124.24026733500423" y="1141" width="0.20827067669172933" height="15.0" fill="rgb(230,126,47)" rx="2" ry="2" _orig_x="138.4" _orig_width="0.2"/>
<text x="127.24026733500423" y="1151.5" _orig_x="141.37"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (23 samples, 0.02%)</title><rect x="68.90142021720962" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(247,59,6)" rx="2" ry="2" _orig_x="392.9" _orig_width="0.2"/>
<text x="71.90142021720962" y="1807.5" _orig_x="395.91"/>
</g>
<g class="hide">
<title>[perf-58145.map] (22 samples, 0.02%)</title><rect x="125.69816207184634" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(217,21,4)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.2"/>
<text x="128.69816207184635" y="1775.5" _orig_x="142.82"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (11 samples, 0.01%)</title><rect x="28.237259816207125" y="1669" width="0.24644945697577275" height="15.0" fill="rgb(226,71,4)" rx="2" ry="2" _orig_x="376.4" _orig_width="0.1"/>
<text x="31.237259816207125" y="1679.5" _orig_x="379.39"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (17 samples, 0.01%)</title><rect x="40.80618212197159" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(211,71,36)" rx="2" ry="2" _orig_x="381.5" _orig_width="0.2"/>
<text x="43.80618212197159" y="1759.5" _orig_x="384.53"/>
</g>
<g class="hide">
<title>blink::V8DOMWrapper::AssociateObjectWithWrapper (25 samples, 0.02%)</title><rect x="187.6586883876358" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(253,221,16)" rx="2" ry="2" _orig_x="199.3" _orig_width="0.3"/>
<text x="190.6586883876358" y="1455.5" _orig_x="202.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (29 samples, 0.02%)</title><rect x="1084.0267335004175" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(241,188,54)" rx="2" ry="2" _orig_x="804.8" _orig_width="0.3"/>
<text x="1087.0267335004175" y="1823.5" _orig_x="807.80"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (11 samples, 0.01%)</title><rect x="593.3458646616542" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(231,174,1)" rx="2" ry="2" _orig_x="605.7" _orig_width="0.1"/>
<text x="596.3458646616542" y="1759.5" _orig_x="608.69"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (16 samples, 0.01%)</title><rect x="810.2213868003341" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(253,206,2)" rx="2" ry="2" _orig_x="693.7" _orig_width="0.2"/>
<text x="813.2213868003341" y="1775.5" _orig_x="696.72"/>
</g>
<g class="hide">
<title>v8::internal::Heap::MarkCompact (15 samples, 0.01%)</title><rect x="206.92372598162078" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(221,37,13)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.2"/>
<text x="209.92372598162078" y="1711.5" _orig_x="220.84"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (11 samples, 0.01%)</title><rect x="239.41395154553055" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(236,115,54)" rx="2" ry="2" _orig_x="249.0" _orig_width="0.1"/>
<text x="242.41395154553055" y="2047.5" _orig_x="251.95"/>
</g>
<g class="hide">
<title>service_manager::MainRun (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1941" width="5.102631578947369" height="15.0" fill="rgb(237,56,16)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1951.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>start_thread (1,946 samples, 1.64%)</title><rect x="155.9" y="2053" width="19.3" height="15.0" fill="rgb(232,109,3)" rx="2" ry="2"/>
<text x="158.91" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (31 samples, 0.03%)</title><rect x="728.6466165413534" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(242,114,40)" rx="2" ry="2" _orig_x="660.6" _orig_width="0.3"/>
<text x="731.6466165413534" y="1791.5" _orig_x="663.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,897 samples, 1.60%)</title><rect x="1162.8" y="1845" width="18.8" height="15.0" fill="rgb(215,101,48)" rx="2" ry="2"/>
<text x="1165.75" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="293" width="0.31240601503759396" height="15.0" fill="rgb(211,14,50)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="303.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (52 samples, 0.04%)</title><rect x="375.23809523809535" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(237,188,18)" rx="2" ry="2" _orig_x="517.2" _orig_width="0.5"/>
<text x="378.23809523809535" y="1775.5" _orig_x="520.22"/>
</g>
<g>
<title>std::__detail::_Identity::operator (13 samples, 0.01%)</title><rect x="39.573934837092736" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(241,167,11)" rx="2" ry="2" _orig_x="381.0" _orig_width="0.1"/>
<text x="42.573934837092736" y="1759.5" _orig_x="383.99"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (15 samples, 0.01%)</title><rect x="1042.6232247284877" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(238,80,46)" rx="2" ry="2" _orig_x="788.0" _orig_width="0.1"/>
<text x="1045.6232247284877" y="1775.5" _orig_x="790.98"/>
</g>
<g>
<title>[libminisql_shared.so] (20 samples, 0.02%)</title><rect x="981.2573099415205" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(222,75,24)" rx="2" ry="2" _orig_x="763.1" _orig_width="0.2"/>
<text x="984.2573099415205" y="1775.5" _orig_x="766.13"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (29 samples, 0.02%)</title><rect x="278.8763575605681" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(228,99,45)" rx="2" ry="2" _orig_x="478.1" _orig_width="0.3"/>
<text x="281.8763575605681" y="1775.5" _orig_x="481.15"/>
</g>
<g class="hide">
<title>[chrome] (23 samples, 0.02%)</title><rect x="30.830868838763635" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(213,160,26)" rx="2" ry="2" _orig_x="48.7" _orig_width="0.2"/>
<text x="33.830868838763635" y="1999.5" _orig_x="51.71"/>
</g>
<g>
<title>Row::GetField (13 samples, 0.01%)</title><rect x="297.85296574770257" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(237,187,40)" rx="2" ry="2" _orig_x="485.8" _orig_width="0.1"/>
<text x="300.85296574770257" y="1871.5" _orig_x="488.81"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="10.836883876357616" y="261" width="0.31240601503759396" height="15.0" fill="rgb(252,118,7)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="271.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="353.96282372598165" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(249,29,4)" rx="2" ry="2" _orig_x="359.0" _orig_width="0.3"/>
<text x="356.96282372598165" y="1935.5" _orig_x="361.99"/>
</g>
<g>
<title>[libminisql_shared.so] (15 samples, 0.01%)</title><rect x="1150.8145363408519" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(253,213,50)" rx="2" ry="2" _orig_x="831.9" _orig_width="0.1"/>
<text x="1153.8145363408519" y="1903.5" _orig_x="834.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="19.167710944026787" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(240,174,11)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="2031.5" _orig_x="40.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="911.6075605680869" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(222,14,0)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="1983.5" _orig_x="897.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.06%)</title><rect x="25.832372598162124" y="1829" width="0.7289473684210526" height="15.0" fill="rgb(232,186,37)" rx="2" ry="2" _orig_x="43.9" _orig_width="0.7"/>
<text x="28.832372598162124" y="1839.5" _orig_x="46.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (28 samples, 0.02%)</title><rect x="236.24060150375942" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(221,229,27)" rx="2" ry="2" _orig_x="460.8" _orig_width="0.3"/>
<text x="239.24060150375942" y="1775.5" _orig_x="463.84"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="2021" width="0.7" height="15.0" fill="rgb(220,34,45)" rx="2" ry="2"/>
<text x="14.39" y="2031.5"/>
</g>
<g class="hide">
<title>base::TaskAnnotator::RunTask (290 samples, 0.24%)</title><rect x="162.87447786132003" y="1797" width="3.019924812030075" height="15.0" fill="rgb(212,67,38)" rx="2" ry="2" _orig_x="175.5" _orig_width="2.9"/>
<text x="165.87447786132003" y="1807.5" _orig_x="178.54"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (12 samples, 0.01%)</title><rect x="827.4728487886383" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(226,51,13)" rx="2" ry="2" _orig_x="700.7" _orig_width="0.1"/>
<text x="830.4728487886383" y="1743.5" _orig_x="703.70"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="741" width="0.20827067669172933" height="15.0" fill="rgb(242,133,53)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="751.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (11 samples, 0.01%)</title><rect x="199.02673350041766" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(243,66,46)" rx="2" ry="2" _orig_x="445.7" _orig_width="0.1"/>
<text x="202.02673350041766" y="1759.5" _orig_x="448.74"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="185.2255639097745" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(237,88,27)" rx="2" ry="2" _orig_x="440.1" _orig_width="0.2"/>
<text x="188.2255639097745" y="1743.5" _orig_x="443.14"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (42 samples, 0.04%)</title><rect x="15.522974101921527" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(239,196,9)" rx="2" ry="2" _orig_x="34.0" _orig_width="0.4"/>
<text x="18.522974101921527" y="2015.5" _orig_x="37.02"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (83 samples, 0.07%)</title><rect x="1007.8738512949038" y="1765" width="2.218045112781955" height="15.0" fill="rgb(250,62,36)" rx="2" ry="2" _orig_x="773.9" _orig_width="0.9"/>
<text x="1010.8738512949038" y="1775.5" _orig_x="776.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="132.15455304928994" y="1829" width="0.5206766917293233" height="15.0" fill="rgb(228,136,45)" rx="2" ry="2" _orig_x="146.0" _orig_width="0.5"/>
<text x="135.15455304928994" y="1839.5" _orig_x="149.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (114 samples, 0.10%)</title><rect x="317.81537176274014" y="1845" width="2.957393483709273" height="15.0" fill="rgb(232,176,5)" rx="2" ry="2" _orig_x="493.9" _orig_width="1.2"/>
<text x="320.81537176274014" y="1855.5" _orig_x="496.94"/>
</g>
<g>
<title>malloc (14 samples, 0.01%)</title><rect x="1089.9415204678364" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(251,229,33)" rx="2" ry="2" _orig_x="807.2" _orig_width="0.2"/>
<text x="1092.9415204678364" y="1887.5" _orig_x="810.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="13.7" y="2021" width="0.3" height="15.0" fill="rgb(244,122,33)" rx="2" ry="2"/>
<text x="16.74" y="2031.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (669 samples, 0.56%)</title><rect x="147.5" y="2053" width="6.7" height="15.0" fill="rgb(214,37,6)" rx="2" ry="2"/>
<text x="150.52" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="661" width="2.2909774436090227" height="15.0" fill="rgb(254,171,48)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="671.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="10.5" y="1973" width="0.2" height="15.0" fill="rgb(249,2,40)" rx="2" ry="2"/>
<text x="13.53" y="1983.5"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (15 samples, 0.01%)</title><rect x="773.2539682539683" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(210,81,25)" rx="2" ry="2" _orig_x="678.7" _orig_width="0.1"/>
<text x="776.2539682539683" y="1903.5" _orig_x="681.68"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (13 samples, 0.01%)</title><rect x="877.9949874686718" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(219,144,44)" rx="2" ry="2" _orig_x="721.2" _orig_width="0.2"/>
<text x="880.9949874686718" y="1807.5" _orig_x="724.24"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (36 samples, 0.03%)</title><rect x="254.97076023391807" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(219,152,37)" rx="2" ry="2" _orig_x="468.4" _orig_width="0.3"/>
<text x="257.9707602339181" y="1743.5" _orig_x="471.38"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (32 samples, 0.03%)</title><rect x="765.8604845446952" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(237,16,30)" rx="2" ry="2" _orig_x="675.7" _orig_width="0.3"/>
<text x="768.8604845446952" y="1807.5" _orig_x="678.67"/>
</g>
<g>
<title>malloc (20 samples, 0.02%)</title><rect x="874.7911445279865" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(224,215,13)" rx="2" ry="2" _orig_x="719.9" _orig_width="0.2"/>
<text x="877.7911445279865" y="1775.5" _orig_x="722.87"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (17 samples, 0.01%)</title><rect x="286.69139515455305" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(251,94,3)" rx="2" ry="2" _orig_x="294.4" _orig_width="0.1"/>
<text x="289.69139515455305" y="1919.5" _orig_x="297.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (54 samples, 0.05%)</title><rect x="1169.7911445279865" y="1941" width="1.2322472848788637" height="15.0" fill="rgb(248,106,51)" rx="2" ry="2" _orig_x="839.6" _orig_width="0.5"/>
<text x="1172.7911445279865" y="1951.5" _orig_x="842.60"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (40 samples, 0.03%)</title><rect x="15.522974101921527" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(230,3,30)" rx="2" ry="2" _orig_x="34.0" _orig_width="0.4"/>
<text x="18.522974101921527" y="1999.5" _orig_x="37.04"/>
</g>
<g class="hide">
<title>[perf-58145.map] (27 samples, 0.02%)</title><rect x="128.40568086883883" y="1445" width="0.31240601503759396" height="15.0" fill="rgb(236,141,6)" rx="2" ry="2" _orig_x="142.4" _orig_width="0.3"/>
<text x="131.40568086883883" y="1455.5" _orig_x="145.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="43.11883876357566" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(207,13,47)" rx="2" ry="2" _orig_x="60.5" _orig_width="0.5"/>
<text x="46.11883876357566" y="1919.5" _orig_x="63.52"/>
</g>
<g class="hide">
<title>snd_pcm_hwsync (175 samples, 0.15%)</title><rect x="67.59064327485385" y="1941" width="1.7703007518796992" height="15.0" fill="rgb(252,87,7)" rx="2" ry="2" _orig_x="84.0" _orig_width="1.7"/>
<text x="70.59064327485385" y="1951.5" _orig_x="87.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="30.41432748538017" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(243,56,21)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1935.5" _orig_x="51.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (429 samples, 0.36%)</title><rect x="982.4895572263994" y="1765" width="10.597326649958228" height="15.0" fill="rgb(207,194,1)" rx="2" ry="2" _orig_x="763.6" _orig_width="4.3"/>
<text x="985.4895572263994" y="1775.5" _orig_x="766.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (549 samples, 0.46%)</title><rect x="418.12030075187977" y="1797" width="13.308270676691729" height="15.0" fill="rgb(254,213,35)" rx="2" ry="2" _orig_x="534.6" _orig_width="5.4"/>
<text x="421.12030075187977" y="1807.5" _orig_x="537.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (310 samples, 0.26%)</title><rect x="25.033416875522192" y="1749" width="7.393483709273183" height="15.0" fill="rgb(234,161,23)" rx="2" ry="2" _orig_x="375.1" _orig_width="3.0"/>
<text x="28.033416875522192" y="1759.5" _orig_x="378.07"/>
</g>
<g class="hide">
<title>[chrome] (121 samples, 0.10%)</title><rect x="85.81432748538018" y="1941" width="1.2496240601503759" height="15.0" fill="rgb(219,117,32)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.2"/>
<text x="88.81432748538018" y="1951.5" _orig_x="104.53"/>
</g>
<g class="hide">
<title>[unknown] (4,603 samples, 3.87%)</title><rect x="1162.9902673350043" y="2021" width="47.58984962406015" height="15.0" fill="rgb(225,135,7)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="2031.5" _orig_x="1138.90">[unknown] </text>
</g>
<g class="hide">
<title>g_private_get (11 samples, 0.01%)</title><rect x="244.93312447786138" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(209,175,7)" rx="2" ry="2" _orig_x="254.3" _orig_width="0.1"/>
<text x="247.93312447786138" y="2047.5" _orig_x="257.30"/>
</g>
<g class="hide">
<title>[chrome] (131 samples, 0.11%)</title><rect x="91.95831244778618" y="1797" width="1.3537593984962406" height="15.0" fill="rgb(244,107,50)" rx="2" ry="2" _orig_x="107.4" _orig_width="1.3"/>
<text x="94.95831244778618" y="1807.5" _orig_x="110.43"/>
</g>
<g class="hide">
<title>blink::RejectedPromises::ProcessQueue (14 samples, 0.01%)</title><rect x="208.5898913951546" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(241,155,48)" rx="2" ry="2" _orig_x="219.4" _orig_width="0.1"/>
<text x="211.5898913951546" y="1759.5" _orig_x="222.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.4" y="1973" width="0.2" height="15.0" fill="rgb(205,137,37)" rx="2" ry="2"/>
<text x="18.40" y="1983.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (15 samples, 0.01%)</title><rect x="505.6098579782791" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(211,57,12)" rx="2" ry="2" _orig_x="570.1" _orig_width="0.1"/>
<text x="508.6098579782791" y="1807.5" _orig_x="573.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.09%)</title><rect x="303.665455304929" y="1989" width="1.0413533834586466" height="15.0" fill="rgb(252,182,30)" rx="2" ry="2" _orig_x="310.7" _orig_width="1.0"/>
<text x="306.665455304929" y="1999.5" _orig_x="313.68"/>
</g>
<g>
<title>Field::IsNull (13 samples, 0.01%)</title><rect x="954.1478696741854" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(252,20,6)" rx="2" ry="2" _orig_x="752.1" _orig_width="0.2"/>
<text x="957.1478696741854" y="1887.5" _orig_x="755.14"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (34 samples, 0.03%)</title><rect x="861.9757727652465" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(244,208,47)" rx="2" ry="2" _orig_x="714.7" _orig_width="0.3"/>
<text x="864.9757727652465" y="1855.5" _orig_x="717.67"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="114.5556808688388" y="1413" width="0.10413533834586466" height="15.0" fill="rgb(236,152,26)" rx="2" ry="2" _orig_x="129.1" _orig_width="0.1"/>
<text x="117.5556808688388" y="1423.5" _orig_x="132.10"/>
</g>
<g class="hide">
<title>[libxul.so] (16 samples, 0.01%)</title><rect x="20.7" y="2037" width="0.1" height="15.0" fill="rgb(243,153,33)" rx="2" ry="2"/>
<text x="23.67" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (15 samples, 0.01%)</title><rect x="702.5229741019215" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(207,176,22)" rx="2" ry="2" _orig_x="650.0" _orig_width="0.1"/>
<text x="705.5229741019215" y="1791.5" _orig_x="652.97"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (15 samples, 0.01%)</title><rect x="305.4928989139515" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(241,96,11)" rx="2" ry="2" _orig_x="488.9" _orig_width="0.1"/>
<text x="308.4928989139515" y="1791.5" _orig_x="491.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.07%)</title><rect x="929.5188387635757" y="1701" width="0.8330827067669173" height="15.0" fill="rgb(249,219,33)" rx="2" ry="2" _orig_x="911.7" _orig_width="0.8"/>
<text x="932.5188387635757" y="1711.5" _orig_x="914.68"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (30 samples, 0.03%)</title><rect x="329.7" y="2053" width="0.3" height="15.0" fill="rgb(210,180,17)" rx="2" ry="2"/>
<text x="332.69" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (16 samples, 0.01%)</title><rect x="892.0426065162906" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(245,44,13)" rx="2" ry="2" _orig_x="726.9" _orig_width="0.2"/>
<text x="895.0426065162906" y="1807.5" _orig_x="729.94"/>
</g>
<g class="hide">
<title>swapper (27,373 samples, 23.02%)</title><rect x="916.8" y="2069" width="271.6" height="15.0" fill="rgb(215,67,29)" rx="2" ry="2"/>
<text x="919.78" y="2079.5">swapper</text>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::InsertDown (9,354 samples, 7.87%)</title><rect x="16.161236424394318" y="1893" width="228.70509607351713" height="15.0" fill="rgb(232,134,50)" rx="2" ry="2" _orig_x="371.5" _orig_width="92.8"/>
<text x="19.161236424394318" y="1903.5" _orig_x="374.49">BPlusTree&lt;GenericKey&lt;32ul&gt;, Ro..</text>
</g>
<g class="hide">
<title>[code] (337 samples, 0.28%)</title><rect x="16.6" y="1941" width="3.4" height="15.0" fill="rgb(217,205,44)" rx="2" ry="2"/>
<text x="19.65" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="565" width="2.2909774436090227" height="15.0" fill="rgb(221,93,54)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="575.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (15 samples, 0.01%)</title><rect x="196.80868838763578" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(232,135,37)" rx="2" ry="2" _orig_x="444.8" _orig_width="0.2"/>
<text x="199.80868838763578" y="1759.5" _orig_x="447.84"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (27 samples, 0.02%)</title><rect x="402.3475355054303" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(223,200,39)" rx="2" ry="2" _orig_x="528.2" _orig_width="0.3"/>
<text x="405.3475355054303" y="1807.5" _orig_x="531.19"/>
</g>
<g>
<title>[libminisql_shared.so] (18 samples, 0.02%)</title><rect x="381.39933166248966" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(234,109,12)" rx="2" ry="2" _orig_x="519.7" _orig_width="0.2"/>
<text x="384.39933166248966" y="1807.5" _orig_x="522.68"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (14 samples, 0.01%)</title><rect x="988.4043441938178" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(242,24,28)" rx="2" ry="2" _orig_x="766.0" _orig_width="0.2"/>
<text x="991.4043441938178" y="1711.5" _orig_x="769.02"/>
</g>
<g>
<title>std::__detail::_Identity::operator (16 samples, 0.01%)</title><rect x="592.8529657477026" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(235,82,5)" rx="2" ry="2" _orig_x="605.5" _orig_width="0.2"/>
<text x="595.8529657477026" y="1759.5" _orig_x="608.53"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.16658312447791" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(215,78,50)" rx="2" ry="2" _orig_x="107.6" _orig_width="0.2"/>
<text x="95.16658312447791" y="1695.5" _orig_x="110.63"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (28 samples, 0.02%)</title><rect x="654.2188805346699" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(215,212,1)" rx="2" ry="2" _orig_x="630.4" _orig_width="0.3"/>
<text x="657.2188805346699" y="1807.5" _orig_x="633.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="339.9045530492899" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(242,126,9)" rx="2" ry="2" _orig_x="345.5" _orig_width="0.1"/>
<text x="342.9045530492899" y="1967.5" _orig_x="348.47"/>
</g>
<g class="hide">
<title>[perf-58119.map] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1589" width="0.41654135338345866" height="15.0" fill="rgb(251,68,24)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1599.5" _orig_x="135.37"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (845 samples, 0.71%)</title><rect x="534.937343358396" y="1829" width="20.45530492898914" height="15.0" fill="rgb(209,203,13)" rx="2" ry="2" _orig_x="582.0" _orig_width="8.3"/>
<text x="537.937343358396" y="1839.5" _orig_x="584.95"/>
</g>
<g class="hide">
<title>__poll (92 samples, 0.08%)</title><rect x="320.8477861319967" y="2037" width="0.937218045112782" height="15.0" fill="rgb(250,164,30)" rx="2" ry="2" _orig_x="327.2" _orig_width="0.9"/>
<text x="323.8477861319967" y="2047.5" _orig_x="330.16"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (14 samples, 0.01%)</title><rect x="73.33751044277358" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(251,144,17)" rx="2" ry="2" _orig_x="394.7" _orig_width="0.1"/>
<text x="76.33751044277358" y="1775.5" _orig_x="397.68"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (25 samples, 0.02%)</title><rect x="221.94653299916456" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(249,47,11)" rx="2" ry="2" _orig_x="455.0" _orig_width="0.3"/>
<text x="224.94653299916456" y="1775.5" _orig_x="458.05"/>
</g>
<g class="hide">
<title>[perf-58157.map] (174 samples, 0.15%)</title><rect x="122.88650793650798" y="1717" width="1.7703007518796992" height="15.0" fill="rgb(235,205,29)" rx="2" ry="2" _orig_x="137.1" _orig_width="1.7"/>
<text x="125.88650793650798" y="1727.5" _orig_x="140.06"/>
</g>
<g class="hide">
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (125 samples, 0.11%)</title><rect x="31.351545530492956" y="1893" width="1.2496240601503759" height="15.0" fill="rgb(241,217,8)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.2"/>
<text x="34.351545530492956" y="1903.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[perf-32884.map] (84 samples, 0.07%)</title><rect x="98.7271094402674" y="1637" width="0.937218045112782" height="15.0" fill="rgb(219,167,13)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1647.5" _orig_x="116.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="50.82485380116965" y="69" width="0.20827067669172933" height="15.0" fill="rgb(228,164,2)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="79.5" _orig_x="70.86"/>
</g>
<g class="hide">
<title>blink::ExecutionContext::From (75 samples, 0.06%)</title><rect x="177.76583124477867" y="1653" width="0.8330827067669173" height="15.0" fill="rgb(254,162,12)" rx="2" ry="2" _orig_x="189.8" _orig_width="0.8"/>
<text x="180.76583124477867" y="1663.5" _orig_x="192.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="271.80004177109447" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(252,62,9)" rx="2" ry="2" _orig_x="280.1" _orig_width="0.2"/>
<text x="274.80004177109447" y="2015.5" _orig_x="283.14"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(252,213,4)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1423.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (13 samples, 0.01%)</title><rect x="47.46031746031743" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(224,93,51)" rx="2" ry="2" _orig_x="384.2" _orig_width="0.1"/>
<text x="50.46031746031743" y="1743.5" _orig_x="387.22"/>
</g>
<g>
<title>MemHeap::MemHeap (11 samples, 0.01%)</title><rect x="1094.3776106934001" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(228,178,4)" rx="2" ry="2" _orig_x="809.0" _orig_width="0.1"/>
<text x="1097.3776106934001" y="1871.5" _orig_x="812.03"/>
</g>
<g>
<title>Field::CompareLessThan (34 samples, 0.03%)</title><rect x="694.1436925647452" y="1877" width="0.985797827903091" height="15.0" fill="rgb(250,126,29)" rx="2" ry="2" _orig_x="646.6" _orig_width="0.4"/>
<text x="697.1436925647452" y="1887.5" _orig_x="649.65"/>
</g>
<g>
<title>BufferPoolManager::AllocatePage (12 samples, 0.01%)</title><rect x="690.4469507101086" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(211,104,49)" rx="2" ry="2" _orig_x="645.1" _orig_width="0.1"/>
<text x="693.4469507101086" y="1887.5" _orig_x="648.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="161.62485380116965" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(245,94,50)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1935.5" _orig_x="177.33"/>
</g>
<g class="hide">
<title>[python3.8] (85 samples, 0.07%)</title><rect x="92.8" y="2053" width="0.8" height="15.0" fill="rgb(231,23,48)" rx="2" ry="2"/>
<text x="95.78" y="2063.5"/>
</g>
<g>
<title>ExecuteEngine::ExecuteInsert (47,779 samples, 40.18%)</title><rect x="15.421888053466972" y="1973" width="1168.4168755221388" height="15.0" fill="rgb(211,29,54)" rx="2" ry="2" _orig_x="371.2" _orig_width="474.1"/>
<text x="18.421888053466972" y="1983.5" _orig_x="374.23">ExecuteEngine::ExecuteInsert </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="25.2" y="2021" width="0.2" height="15.0" fill="rgb(251,58,12)" rx="2" ry="2"/>
<text x="28.22" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="22.6" y="1925" width="0.2" height="15.0" fill="rgb(210,221,17)" rx="2" ry="2"/>
<text x="25.63" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="421" width="0.31240601503759396" height="15.0" fill="rgb(220,162,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="431.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr0 (57 samples, 0.05%)</title><rect x="69.46507936507942" y="1893" width="0.6248120300751879" height="15.0" fill="rgb(248,89,38)" rx="2" ry="2" _orig_x="85.8" _orig_width="0.6"/>
<text x="72.46507936507942" y="1903.5" _orig_x="88.84"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (15 samples, 0.01%)</title><rect x="320.03341687552216" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(209,191,45)" rx="2" ry="2" _orig_x="494.8" _orig_width="0.2"/>
<text x="323.03341687552216" y="1823.5" _orig_x="497.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="355.73312447786134" y="1941" width="0.41654135338345866" height="15.0" fill="rgb(246,71,51)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1951.5" _orig_x="363.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="302.83237259816207" y="1845" width="0.6248120300751879" height="15.0" fill="rgb(234,39,46)" rx="2" ry="2" _orig_x="309.9" _orig_width="0.6"/>
<text x="305.83237259816207" y="1855.5" _orig_x="312.93"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="853" width="0.31240601503759396" height="15.0" fill="rgb(224,14,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="863.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (132 samples, 0.11%)</title><rect x="13.544402673350099" y="1957" width="1.3537593984962406" height="15.0" fill="rgb(213,7,43)" rx="2" ry="2" _orig_x="32.1" _orig_width="1.3"/>
<text x="16.5444026733501" y="1967.5" _orig_x="35.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="22.0" y="1829" width="0.2" height="15.0" fill="rgb(215,0,42)" rx="2" ry="2"/>
<text x="25.01" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(208,53,51)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1791.5" _orig_x="118.02"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (69 samples, 0.06%)</title><rect x="178.07852965747696" y="1733" width="1.7251461988304093" height="15.0" fill="rgb(225,64,32)" rx="2" ry="2" _orig_x="437.2" _orig_width="0.7"/>
<text x="181.07852965747696" y="1743.5" _orig_x="440.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,600 samples, 3.87%)</title><rect x="1162.9902673350043" y="1941" width="47.58984962406015" height="15.0" fill="rgb(206,47,12)" rx="2" ry="2" _orig_x="1135.9" _orig_width="45.7"/>
<text x="1165.9902673350043" y="1951.5" _orig_x="1138.93">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="1181.2" y="1605" width="0.4" height="15.0" fill="rgb(238,160,28)" rx="2" ry="2"/>
<text x="1184.24" y="1615.5"/>
</g>
<g class="hide">
<title>[unknown] (17 samples, 0.01%)</title><rect x="234.20718462823731" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(212,142,50)" rx="2" ry="2" _orig_x="244.0" _orig_width="0.2"/>
<text x="237.20718462823731" y="2015.5" _orig_x="246.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="1163.0204572803848" y="1957" width="0.9466506217408744" height="15.0" fill="rgb(210,194,47)" rx="2" ry="2" _orig_x="848.3" _orig_width="0.4"/>
<text x="1166.0204572803848" y="1967.5" _orig_x="851.32"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (24 samples, 0.02%)</title><rect x="890.5" y="2053" width="0.2" height="15.0" fill="rgb(235,12,50)" rx="2" ry="2"/>
<text x="893.50" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="156.52222222222227" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(251,196,39)" rx="2" ry="2" _orig_x="169.4" _orig_width="0.2"/>
<text x="159.52222222222227" y="1839.5" _orig_x="172.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="84.14816207184634" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(243,80,13)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1983.5" _orig_x="102.92"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Insert (3,024 samples, 2.54%)</title><rect x="16.161236424394318" y="1877" width="73.93483709273183" height="15.0" fill="rgb(248,106,13)" rx="2" ry="2" _orig_x="371.5" _orig_width="30.0"/>
<text x="19.161236424394318" y="1887.5" _orig_x="374.53">BPlusTre..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="145.37974101921475" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(211,190,16)" rx="2" ry="2" _orig_x="158.7" _orig_width="0.1"/>
<text x="148.37974101921475" y="1903.5" _orig_x="161.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="67.79891395154559" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(217,95,47)" rx="2" ry="2" _orig_x="84.2" _orig_width="0.3"/>
<text x="70.79891395154559" y="1871.5" _orig_x="87.15"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (11 samples, 0.01%)</title><rect x="259.1604010025063" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(211,162,46)" rx="2" ry="2" _orig_x="470.1" _orig_width="0.1"/>
<text x="262.1604010025063" y="1711.5" _orig_x="473.12"/>
</g>
<g class="hide">
<title>[unknown] (29 samples, 0.02%)</title><rect x="333.5" y="2053" width="0.3" height="15.0" fill="rgb(241,157,14)" rx="2" ry="2"/>
<text x="336.52" y="2063.5"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (13 samples, 0.01%)</title><rect x="215.78529657477023" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(221,57,3)" rx="2" ry="2" _orig_x="452.5" _orig_width="0.2"/>
<text x="218.78529657477023" y="1727.5" _orig_x="455.55"/>
</g>
<g class="hide">
<title>[perf-58119.map] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1605" width="0.41654135338345866" height="15.0" fill="rgb(225,189,54)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1615.5" _orig_x="135.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.09%)</title><rect x="303.665455304929" y="2021" width="1.0413533834586466" height="15.0" fill="rgb(222,99,17)" rx="2" ry="2" _orig_x="310.7" _orig_width="1.0"/>
<text x="306.665455304929" y="2031.5" _orig_x="313.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="339.80041771094403" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(220,78,40)" rx="2" ry="2" _orig_x="345.4" _orig_width="0.2"/>
<text x="342.80041771094403" y="2047.5" _orig_x="348.43"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (156 samples, 0.13%)</title><rect x="78.75939849624054" y="1749" width="3.6967418546365916" height="15.0" fill="rgb(252,11,29)" rx="2" ry="2" _orig_x="396.9" _orig_width="1.5"/>
<text x="81.75939849624054" y="1759.5" _orig_x="399.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="309.18462823725986" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(234,117,51)" rx="2" ry="2" _orig_x="316.0" _orig_width="0.2"/>
<text x="312.18462823725986" y="2031.5" _orig_x="319.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (61 samples, 0.05%)</title><rect x="1041.390977443609" y="1781" width="1.4786967418546364" height="15.0" fill="rgb(240,56,0)" rx="2" ry="2" _orig_x="787.5" _orig_width="0.6"/>
<text x="1044.390977443609" y="1791.5" _orig_x="790.52"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (11 samples, 0.01%)</title><rect x="286.2698412698413" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(217,59,40)" rx="2" ry="2" _orig_x="481.1" _orig_width="0.1"/>
<text x="289.2698412698413" y="1791.5" _orig_x="484.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="108.30756056808693" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(221,122,29)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="1999.5" _orig_x="126.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="928.2692147034253" y="1509" width="0.31240601503759396" height="15.0" fill="rgb(231,135,27)" rx="2" ry="2" _orig_x="910.5" _orig_width="0.3"/>
<text x="931.2692147034253" y="1519.5" _orig_x="913.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="915.2522974101922" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(243,74,8)" rx="2" ry="2" _orig_x="898.0" _orig_width="0.1"/>
<text x="918.2522974101922" y="1967.5" _orig_x="900.95"/>
</g>
<g class="hide">
<title>base::ScaledLinearHistogram::AddScaledCount (16 samples, 0.01%)</title><rect x="211.71395154553053" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(217,55,12)" rx="2" ry="2" _orig_x="222.4" _orig_width="0.2"/>
<text x="214.71395154553053" y="1679.5" _orig_x="225.43"/>
</g>
<g>
<title>[libminisql_shared.so] (17 samples, 0.01%)</title><rect x="527.0509607351712" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(210,134,1)" rx="2" ry="2" _orig_x="578.8" _orig_width="0.2"/>
<text x="530.0509607351712" y="1855.5" _orig_x="581.84"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (25 samples, 0.02%)</title><rect x="644.1144527986631" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(226,228,52)" rx="2" ry="2" _orig_x="626.3" _orig_width="0.3"/>
<text x="647.1144527986631" y="1759.5" _orig_x="629.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (327 samples, 0.27%)</title><rect x="87.68876357560573" y="1957" width="3.4364661654135333" height="15.0" fill="rgb(221,44,45)" rx="2" ry="2" _orig_x="103.3" _orig_width="3.3"/>
<text x="90.68876357560573" y="1967.5" _orig_x="106.34"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (16 samples, 0.01%)</title><rect x="89.1102756892231" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(226,19,39)" rx="2" ry="2" _orig_x="401.1" _orig_width="0.2"/>
<text x="92.1102756892231" y="1871.5" _orig_x="404.10"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (11 samples, 0.01%)</title><rect x="364.1478696741856" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(213,11,17)" rx="2" ry="2" _orig_x="512.7" _orig_width="0.1"/>
<text x="367.1478696741856" y="1775.5" _orig_x="515.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="13.8" y="1957" width="0.2" height="15.0" fill="rgb(237,146,54)" rx="2" ry="2"/>
<text x="16.77" y="1967.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (20 samples, 0.02%)</title><rect x="1072.6900584795324" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(206,59,26)" rx="2" ry="2" _orig_x="800.2" _orig_width="0.2"/>
<text x="1075.6900584795324" y="1775.5" _orig_x="803.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="23.4" y="1989" width="0.2" height="15.0" fill="rgb(242,126,31)" rx="2" ry="2"/>
<text x="26.41" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (702 samples, 0.59%)</title><rect x="111.32748538011701" y="1765" width="7.289473684210526" height="15.0" fill="rgb(238,204,48)" rx="2" ry="2" _orig_x="126.0" _orig_width="7.0"/>
<text x="114.32748538011701" y="1775.5" _orig_x="129.05"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (15 samples, 0.01%)</title><rect x="1067.2681704260651" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(242,200,17)" rx="2" ry="2" _orig_x="798.0" _orig_width="0.1"/>
<text x="1070.2681704260651" y="1823.5" _orig_x="800.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="29.268838763575662" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(224,130,6)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="1983.5" _orig_x="50.20"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (18 samples, 0.02%)</title><rect x="239.69089390142017" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(233,200,20)" rx="2" ry="2" _orig_x="462.2" _orig_width="0.2"/>
<text x="242.69089390142017" y="1823.5" _orig_x="465.18"/>
</g>
<g class="hide">
<title>[unknown] (80 samples, 0.07%)</title><rect x="60.2" y="2053" width="0.8" height="15.0" fill="rgb(218,34,47)" rx="2" ry="2"/>
<text x="63.19" y="2063.5"/>
</g>
<g class="hide">
<title>v8::internal::Heap::PerformGarbageCollection (20 samples, 0.02%)</title><rect x="206.92372598162078" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(232,64,25)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.2"/>
<text x="209.92372598162078" y="1727.5" _orig_x="220.83"/>
</g>
<g class="hide">
<title>[python3.8] (180 samples, 0.15%)</title><rect x="78.52485380116964" y="2037" width="1.7703007518796992" height="15.0" fill="rgb(215,74,24)" rx="2" ry="2" _orig_x="94.5" _orig_width="1.7"/>
<text x="81.52485380116964" y="2047.5" _orig_x="97.46"/>
</g>
<g class="hide">
<title>__libc_pread64 (136 samples, 0.11%)</title><rect x="886.1" y="2053" width="1.3" height="15.0" fill="rgb(224,188,6)" rx="2" ry="2"/>
<text x="889.07" y="2063.5"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (19 samples, 0.02%)</title><rect x="281.58730158730157" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(231,153,19)" rx="2" ry="2" _orig_x="479.2" _orig_width="0.2"/>
<text x="284.58730158730157" y="1839.5" _orig_x="482.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="302.72823725981624" y="1989" width="0.7289473684210526" height="15.0" fill="rgb(227,7,35)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1999.5" _orig_x="312.76"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (30 samples, 0.03%)</title><rect x="763.3959899749374" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(240,218,33)" rx="2" ry="2" _orig_x="674.7" _orig_width="0.3"/>
<text x="766.3959899749374" y="1743.5" _orig_x="677.71"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (115 samples, 0.10%)</title><rect x="938.1286549707602" y="1845" width="2.957393483709273" height="15.0" fill="rgb(206,31,41)" rx="2" ry="2" _orig_x="745.6" _orig_width="1.2"/>
<text x="941.1286549707602" y="1855.5" _orig_x="748.63"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="517" width="0.31240601503759396" height="15.0" fill="rgb(253,218,49)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="527.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (12 samples, 0.01%)</title><rect x="663.830409356725" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(247,17,21)" rx="2" ry="2" _orig_x="634.3" _orig_width="0.1"/>
<text x="666.830409356725" y="1791.5" _orig_x="637.25"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(208,58,50)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1903.5" _orig_x="328.48"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (355 samples, 0.30%)</title><rect x="228.6006683375104" y="1797" width="8.625730994152045" height="15.0" fill="rgb(240,159,28)" rx="2" ry="2" _orig_x="457.7" _orig_width="3.5"/>
<text x="231.6006683375104" y="1807.5" _orig_x="460.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="51.03312447786137" y="101" width="0.10413533834586466" height="15.0" fill="rgb(208,214,24)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="111.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="16.2" y="2005" width="0.1" height="15.0" fill="rgb(230,145,33)" rx="2" ry="2"/>
<text x="19.18" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (365 samples, 0.31%)</title><rect x="62.17560568086889" y="1989" width="3.748872180451128" height="15.0" fill="rgb(230,128,46)" rx="2" ry="2" _orig_x="78.8" _orig_width="3.6"/>
<text x="65.1756056808689" y="1999.5" _orig_x="81.77"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="869" width="2.2909774436090227" height="15.0" fill="rgb(219,103,11)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="879.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>AWT-XAWT (22 samples, 0.02%)</title><rect x="10.0" y="2069" width="0.2" height="15.0" fill="rgb(252,119,43)" rx="2" ry="2"/>
<text x="13.03" y="2079.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="726.1821219715957" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(228,53,3)" rx="2" ry="2" _orig_x="659.6" _orig_width="0.2"/>
<text x="729.1821219715957" y="1823.5" _orig_x="662.59"/>
</g>
<g>
<title>BPlusTreeIndex&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::ScanKey (15,264 samples, 12.84%)</title><rect x="786.0693400167083" y="1957" width="373.1244778613199" height="15.0" fill="rgb(221,8,34)" rx="2" ry="2" _orig_x="683.9" _orig_width="151.4"/>
<text x="789.0693400167083" y="1967.5" _orig_x="686.87">BPlusTreeIndex&lt;GenericKey&lt;32ul&gt;, RowId, GenericComp..</text>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (20 samples, 0.02%)</title><rect x="216.27819548872176" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(220,168,16)" rx="2" ry="2" _orig_x="452.7" _orig_width="0.2"/>
<text x="219.27819548872176" y="1727.5" _orig_x="455.68"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,239 samples, 1.04%)</title><rect x="863.9473684210526" y="1845" width="30.06683375104427" height="15.0" fill="rgb(250,1,30)" rx="2" ry="2" _orig_x="715.5" _orig_width="12.2"/>
<text x="866.9473684210526" y="1855.5" _orig_x="718.45">st..</text>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (30 samples, 0.03%)</title><rect x="660.1336675020884" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(241,131,37)" rx="2" ry="2" _orig_x="632.8" _orig_width="0.3"/>
<text x="663.1336675020884" y="1807.5" _orig_x="635.79"/>
</g>
<g>
<title>operator delete (17 samples, 0.01%)</title><rect x="1141.2030075187968" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" _orig_x="828.0" _orig_width="0.2"/>
<text x="1144.2030075187968" y="1887.5" _orig_x="831.01"/>
</g>
<g>
<title>std::allocator&lt;Field*&gt;::allocator (16 samples, 0.01%)</title><rect x="1101.2781954887216" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(230,109,51)" rx="2" ry="2" _orig_x="811.8" _orig_width="0.1"/>
<text x="1104.2781954887216" y="1855.5" _orig_x="814.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.06%)</title><rect x="302.72823725981624" y="1957" width="0.7289473684210526" height="15.0" fill="rgb(240,26,51)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1967.5" _orig_x="312.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="338.1342522974102" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(212,137,13)" rx="2" ry="2" _orig_x="343.8" _orig_width="0.2"/>
<text x="341.1342522974102" y="2031.5" _orig_x="346.77"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (15 samples, 0.01%)</title><rect x="617.4979114452798" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(253,38,16)" rx="2" ry="2" _orig_x="615.5" _orig_width="0.1"/>
<text x="620.4979114452798" y="1791.5" _orig_x="618.47"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::max_size (23 samples, 0.02%)</title><rect x="988.8972431077694" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(234,156,52)" rx="2" ry="2" _orig_x="766.2" _orig_width="0.2"/>
<text x="991.8972431077694" y="1711.5" _orig_x="769.16"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (28 samples, 0.02%)</title><rect x="200.50543024227235" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(231,24,35)" rx="2" ry="2" _orig_x="446.3" _orig_width="0.3"/>
<text x="203.50543024227235" y="1759.5" _orig_x="449.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="41.45267335004182" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(236,165,44)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1919.5" _orig_x="61.93"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (116 samples, 0.10%)</title><rect x="342.70676691729324" y="1701" width="2.957393483709273" height="15.0" fill="rgb(217,199,2)" rx="2" ry="2" _orig_x="504.0" _orig_width="1.2"/>
<text x="345.70676691729324" y="1711.5" _orig_x="507.04"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="309" width="0.31240601503759396" height="15.0" fill="rgb(250,60,26)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="319.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="15.6" y="1973" width="0.1" height="15.0" fill="rgb(233,216,36)" rx="2" ry="2"/>
<text x="18.59" y="1983.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (22 samples, 0.02%)</title><rect x="739.2439431913116" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(222,57,21)" rx="2" ry="2" _orig_x="664.9" _orig_width="0.2"/>
<text x="742.2439431913116" y="1807.5" _orig_x="667.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(228,130,45)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1919.5" _orig_x="41.17"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (16 samples, 0.01%)</title><rect x="385.8354218880535" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(225,66,4)" rx="2" ry="2" _orig_x="521.5" _orig_width="0.2"/>
<text x="388.8354218880535" y="1791.5" _orig_x="524.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="24.8" y="1941" width="0.2" height="15.0" fill="rgb(234,44,2)" rx="2" ry="2"/>
<text x="27.82" y="1951.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (229 samples, 0.19%)</title><rect x="119.67000835421888" y="1813" width="5.4218880534670015" height="15.0" fill="rgb(250,219,49)" rx="2" ry="2" _orig_x="413.5" _orig_width="2.2"/>
<text x="122.67000835421888" y="1823.5" _orig_x="416.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (475 samples, 0.40%)</title><rect x="149.23274853801175" y="1829" width="4.894360902255639" height="15.0" fill="rgb(223,77,48)" rx="2" ry="2" _orig_x="162.4" _orig_width="4.7"/>
<text x="152.23274853801175" y="1839.5" _orig_x="165.39"/>
</g>
<g class="hide">
<title>icu_65::SimpleFilteredSentenceBreakIterator::operator== (11 samples, 0.01%)</title><rect x="225.0432748538012" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(249,37,53)" rx="2" ry="2" _orig_x="235.2" _orig_width="0.1"/>
<text x="228.0432748538012" y="1823.5" _orig_x="238.22"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="485" width="0.31240601503759396" height="15.0" fill="rgb(215,74,2)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="495.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::CreateTraced (24 samples, 0.02%)</title><rect x="193.90680868838768" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(234,92,29)" rx="2" ry="2" _orig_x="205.3" _orig_width="0.2"/>
<text x="196.90680868838768" y="1407.5" _orig_x="208.27"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::pop (12 samples, 0.01%)</title><rect x="217.85793650793656" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(218,8,35)" rx="2" ry="2" _orig_x="228.3" _orig_width="0.2"/>
<text x="220.85793650793656" y="1727.5" _orig_x="231.33"/>
</g>
<g class="hide">
<title>[perf-9366.map] (17 samples, 0.01%)</title><rect x="10.316207184628293" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(251,61,32)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1743.5" _orig_x="32.02"/>
</g>
<g class="hide">
<title>[perf-15821.map] (57 samples, 0.05%)</title><rect x="92.68725981620723" y="1669" width="0.6248120300751879" height="15.0" fill="rgb(254,181,28)" rx="2" ry="2" _orig_x="108.1" _orig_width="0.6"/>
<text x="95.68725981620723" y="1679.5" _orig_x="111.09"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (22 samples, 0.02%)</title><rect x="863.2080200501254" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(221,193,35)" rx="2" ry="2" _orig_x="715.2" _orig_width="0.2"/>
<text x="866.2080200501254" y="1855.5" _orig_x="718.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="43.0147034252298" y="1973" width="0.6248120300751879" height="15.0" fill="rgb(249,17,42)" rx="2" ry="2" _orig_x="60.4" _orig_width="0.6"/>
<text x="46.0147034252298" y="1983.5" _orig_x="63.41"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (119 samples, 0.10%)</title><rect x="898.9431913116124" y="1845" width="2.957393483709273" height="15.0" fill="rgb(247,88,14)" rx="2" ry="2" _orig_x="729.7" _orig_width="1.2"/>
<text x="901.9431913116124" y="1855.5" _orig_x="732.72"/>
</g>
<g class="hide">
<title>blink::scheduler::QueueingTimeEstimator::AdvanceTime (13 samples, 0.01%)</title><rect x="222.64816207184634" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(250,32,28)" rx="2" ry="2" _orig_x="232.9" _orig_width="0.1"/>
<text x="225.64816207184634" y="1727.5" _orig_x="235.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (11 samples, 0.01%)</title><rect x="1127.4018379281538" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(230,110,42)" rx="2" ry="2" _orig_x="822.4" _orig_width="0.1"/>
<text x="1130.4018379281538" y="1743.5" _orig_x="825.36"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="181" width="0.31240601503759396" height="15.0" fill="rgb(243,142,21)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="191.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (74 samples, 0.06%)</title><rect x="530.0083542188805" y="1813" width="1.971595655806182" height="15.0" fill="rgb(247,172,52)" rx="2" ry="2" _orig_x="580.0" _orig_width="0.8"/>
<text x="533.0083542188805" y="1823.5" _orig_x="583.03"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="763.6424394319129" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(247,133,19)" rx="2" ry="2" _orig_x="674.8" _orig_width="0.2"/>
<text x="766.6424394319129" y="1727.5" _orig_x="677.83"/>
</g>
<g class="hide">
<title>[code] (19 samples, 0.02%)</title><rect x="18.8" y="1637" width="0.2" height="15.0" fill="rgb(231,225,11)" rx="2" ry="2"/>
<text x="21.78" y="1647.5"/>
</g>
<g class="hide">
<title>JS_CallFunction (119 samples, 0.10%)</title><rect x="286.3789891395155" y="2021" width="1.2496240601503759" height="15.0" fill="rgb(249,221,39)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.2"/>
<text x="289.3789891395155" y="2031.5" _orig_x="297.14"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (356 samples, 0.30%)</title><rect x="810.7142857142857" y="1765" width="8.625730994152045" height="15.0" fill="rgb(227,27,14)" rx="2" ry="2" _orig_x="693.9" _orig_width="3.5"/>
<text x="813.7142857142857" y="1775.5" _orig_x="696.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="338.7590643274854" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(250,169,9)" rx="2" ry="2" _orig_x="344.4" _orig_width="0.3"/>
<text x="341.7590643274854" y="2031.5" _orig_x="347.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.04%)</title><rect x="21.2" y="2005" width="0.5" height="15.0" fill="rgb(233,121,3)" rx="2" ry="2"/>
<text x="24.23" y="2015.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (100 samples, 0.08%)</title><rect x="229.83291562238927" y="1749" width="2.218045112781955" height="15.0" fill="rgb(247,137,3)" rx="2" ry="2" _orig_x="458.2" _orig_width="0.9"/>
<text x="232.83291562238927" y="1759.5" _orig_x="461.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (21 samples, 0.02%)</title><rect x="227.61487050960736" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(252,104,30)" rx="2" ry="2" _orig_x="457.3" _orig_width="0.2"/>
<text x="230.61487050960736" y="1791.5" _orig_x="460.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="254.09703425229748" y="2037" width="0.937218045112782" height="15.0" fill="rgb(227,135,0)" rx="2" ry="2" _orig_x="263.1" _orig_width="0.9"/>
<text x="257.0970342522975" y="2047.5" _orig_x="266.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="330.5323725981621" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(218,105,10)" rx="2" ry="2" _orig_x="336.5" _orig_width="0.2"/>
<text x="333.5323725981621" y="2047.5" _orig_x="339.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="30.41432748538017" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(213,122,3)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1967.5" _orig_x="51.31"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (198 samples, 0.17%)</title><rect x="155.40517961570592" y="1765" width="4.682539682539682" height="15.0" fill="rgb(219,22,42)" rx="2" ry="2" _orig_x="428.0" _orig_width="1.9"/>
<text x="158.40517961570592" y="1775.5" _orig_x="430.98"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="405" width="0.31240601503759396" height="15.0" fill="rgb(225,70,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="415.5" _orig_x="99.72"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (12 samples, 0.01%)</title><rect x="862.7151211361737" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(239,17,9)" rx="2" ry="2" _orig_x="715.0" _orig_width="0.1"/>
<text x="865.7151211361737" y="1855.5" _orig_x="718.01"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1093" width="0.20827067669172933" height="15.0" fill="rgb(206,194,44)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1103.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="1941" width="0.7" height="15.0" fill="rgb(205,106,26)" rx="2" ry="2"/>
<text x="14.39" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="693" width="0.31240601503759396" height="15.0" fill="rgb(245,125,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="703.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="645" width="0.31240601503759396" height="15.0" fill="rgb(228,152,43)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="655.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-15821.map] (40 samples, 0.03%)</title><rect x="92.89553049289897" y="1605" width="0.41654135338345866" height="15.0" fill="rgb(205,50,42)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1615.5" _orig_x="111.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="22.6" y="2037" width="0.2" height="15.0" fill="rgb(223,133,13)" rx="2" ry="2"/>
<text x="25.58" y="2047.5"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (2,496 samples, 2.10%)</title><rect x="965.2380952380953" y="1861" width="61.11946532999164" height="15.0" fill="rgb(242,61,45)" rx="2" ry="2" _orig_x="756.6" _orig_width="24.8"/>
<text x="968.2380952380953" y="1871.5" _orig_x="759.64">Simple..</text>
</g>
<g class="hide">
<title>snd_pcm_poll (18 samples, 0.02%)</title><rect x="65.50793650793656" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(239,100,47)" rx="2" ry="2" _orig_x="82.0" _orig_width="0.2"/>
<text x="68.50793650793656" y="1951.5" _orig_x="85.05"/>
</g>
<g class="hide">
<title>__libc_read (164 samples, 0.14%)</title><rect x="154.96019214703432" y="2005" width="1.7703007518796992" height="15.0" fill="rgb(220,216,27)" rx="2" ry="2" _orig_x="167.9" _orig_width="1.7"/>
<text x="157.96019214703432" y="2015.5" _orig_x="170.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="15.7" y="1941" width="0.2" height="15.0" fill="rgb(236,173,3)" rx="2" ry="2"/>
<text x="18.75" y="1951.5"/>
</g>
<g class="hide">
<title>QXcbGlibEventDispatcher::qt_metacast (11 samples, 0.01%)</title><rect x="232.02034252297415" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(252,66,13)" rx="2" ry="2" _orig_x="241.9" _orig_width="0.1"/>
<text x="235.02034252297415" y="2047.5" _orig_x="244.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="1941" width="0.4" height="15.0" fill="rgb(219,207,36)" rx="2" ry="2"/>
<text x="24.77" y="1951.5"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::CreateTraced (20 samples, 0.02%)</title><rect x="194.11507936507942" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(236,123,3)" rx="2" ry="2" _orig_x="205.5" _orig_width="0.2"/>
<text x="197.11507936507942" y="1407.5" _orig_x="208.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (588 samples, 0.49%)</title><rect x="246.80756056808696" y="1989" width="6.03984962406015" height="15.0" fill="rgb(211,175,48)" rx="2" ry="2" _orig_x="256.1" _orig_width="5.8"/>
<text x="249.80756056808696" y="1999.5" _orig_x="259.06"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (1,152 samples, 0.97%)</title><rect x="265.1" y="2053" width="11.4" height="15.0" fill="rgb(210,163,16)" rx="2" ry="2"/>
<text x="268.10" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (20 samples, 0.02%)</title><rect x="750.3341687552213" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(210,35,40)" rx="2" ry="2" _orig_x="669.4" _orig_width="0.2"/>
<text x="753.3341687552213" y="1823.5" _orig_x="672.44"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="885" width="2.2909774436090227" height="15.0" fill="rgb(242,210,34)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="895.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (593 samples, 0.50%)</title><rect x="1175.7" y="1717" width="5.9" height="15.0" fill="rgb(251,100,12)" rx="2" ry="2"/>
<text x="1178.69" y="1727.5"/>
</g>
<g class="hide">
<title>fcitx (50 samples, 0.04%)</title><rect x="281.8" y="2069" width="0.5" height="15.0" fill="rgb(229,141,36)" rx="2" ry="2"/>
<text x="284.83" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (224 samples, 0.19%)</title><rect x="926.186507936508" y="1605" width="2.3951127819548867" height="15.0" fill="rgb(241,170,32)" rx="2" ry="2" _orig_x="908.5" _orig_width="2.3"/>
<text x="929.186507936508" y="1615.5" _orig_x="911.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.4" y="1909" width="0.2" height="15.0" fill="rgb(210,103,12)" rx="2" ry="2"/>
<text x="18.43" y="1919.5"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::SetObjectProperty (13 samples, 0.01%)</title><rect x="128.82222222222228" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(230,11,27)" rx="2" ry="2" _orig_x="142.8" _orig_width="0.1"/>
<text x="131.82222222222228" y="1903.5" _orig_x="145.78"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (22 samples, 0.02%)</title><rect x="270.00417710944026" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(247,95,28)" rx="2" ry="2" _orig_x="474.5" _orig_width="0.3"/>
<text x="273.00417710944026" y="1775.5" _orig_x="477.54"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1109" width="0.31240601503759396" height="15.0" fill="rgb(247,185,21)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1119.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[chrome] (12 samples, 0.01%)</title><rect x="92.58312447786138" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(237,165,24)" rx="2" ry="2" _orig_x="108.0" _orig_width="0.1"/>
<text x="95.58312447786138" y="1615.5" _orig_x="110.97"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (17 samples, 0.01%)</title><rect x="488.6048454469508" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(229,226,11)" rx="2" ry="2" _orig_x="563.2" _orig_width="0.2"/>
<text x="491.6048454469508" y="1759.5" _orig_x="566.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.06%)</title><rect x="254.3053049289892" y="1957" width="0.7289473684210526" height="15.0" fill="rgb(240,31,48)" rx="2" ry="2" _orig_x="263.3" _orig_width="0.7"/>
<text x="257.3053049289892" y="1967.5" _orig_x="266.35"/>
</g>
<g>
<title>TypeInt::CompareLessThan (32 samples, 0.03%)</title><rect x="568.700918964077" y="1845" width="0.985797827903091" height="15.0" fill="rgb(235,195,13)" rx="2" ry="2" _orig_x="595.7" _orig_width="0.4"/>
<text x="571.700918964077" y="1855.5" _orig_x="598.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="96.6444026733501" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(223,214,31)" rx="2" ry="2" _orig_x="111.9" _orig_width="0.4"/>
<text x="99.6444026733501" y="1903.5" _orig_x="114.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.13%)</title><rect x="56.03162071846288" y="2005" width="1.5620300751879699" height="15.0" fill="rgb(252,174,41)" rx="2" ry="2" _orig_x="72.9" _orig_width="1.5"/>
<text x="59.03162071846288" y="2015.5" _orig_x="75.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="309.18462823725986" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(222,138,25)" rx="2" ry="2" _orig_x="316.0" _orig_width="0.2"/>
<text x="312.18462823725986" y="1999.5" _orig_x="319.03"/>
</g>
<g class="hide">
<title>[code] (34 samples, 0.03%)</title><rect x="116.74252297410196" y="1317" width="0.41654135338345866" height="15.0" fill="rgb(240,195,33)" rx="2" ry="2" _orig_x="131.2" _orig_width="0.4"/>
<text x="119.74252297410196" y="1327.5" _orig_x="134.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="11.774101921470397" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(209,51,10)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="1967.5" _orig_x="33.42"/>
</g>
<g class="hide">
<title>_nv009834rm (14 samples, 0.01%)</title><rect x="335.9" y="2053" width="0.1" height="15.0" fill="rgb(210,0,40)" rx="2" ry="2"/>
<text x="338.86" y="2063.5"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork (451 samples, 0.38%)</title><rect x="162.87447786132003" y="1829" width="4.581954887218045" height="15.0" fill="rgb(249,78,5)" rx="2" ry="2" _orig_x="175.5" _orig_width="4.4"/>
<text x="165.87447786132003" y="1839.5" _orig_x="178.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,165 samples, 0.98%)</title><rect x="916.5019214703426" y="1861" width="12.0796992481203" height="15.0" fill="rgb(228,60,15)" rx="2" ry="2" _orig_x="899.2" _orig_width="11.6"/>
<text x="919.5019214703426" y="1871.5" _orig_x="902.20"/>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="116.95079365079371" y="1237" width="0.10413533834586466" height="15.0" fill="rgb(226,220,49)" rx="2" ry="2" _orig_x="131.4" _orig_width="0.1"/>
<text x="119.95079365079371" y="1247.5" _orig_x="134.36"/>
</g>
<g>
<title>Row::DeserializeFrom (2,008 samples, 1.69%)</title><rect x="247.8237259816207" y="1845" width="49.04344193817877" height="15.0" fill="rgb(250,104,40)" rx="2" ry="2" _orig_x="465.5" _orig_width="19.9"/>
<text x="250.8237259816207" y="1855.5" _orig_x="468.47">Row:..</text>
</g>
<g class="hide">
<title>[perf-32884.map] (62 samples, 0.05%)</title><rect x="98.93538011695911" y="1589" width="0.7289473684210526" height="15.0" fill="rgb(217,193,8)" rx="2" ry="2" _orig_x="114.1" _orig_width="0.7"/>
<text x="101.93538011695911" y="1599.5" _orig_x="117.15"/>
</g>
<g class="hide">
<title>v8::internal::MarkCompactCollector::CollectGarbage (15 samples, 0.01%)</title><rect x="206.92372598162078" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(254,77,24)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.2"/>
<text x="209.92372598162078" y="1695.5" _orig_x="220.84"/>
</g>
<g class="hide">
<title>[perf-58119.map] (51 samples, 0.04%)</title><rect x="120.49139515455312" y="1509" width="0.5206766917293233" height="15.0" fill="rgb(253,90,36)" rx="2" ry="2" _orig_x="134.8" _orig_width="0.5"/>
<text x="123.49139515455312" y="1519.5" _orig_x="137.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="10.9" y="1941" width="0.3" height="15.0" fill="rgb(254,60,44)" rx="2" ry="2"/>
<text x="13.94" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.05%)</title><rect x="17.8" y="1381" width="0.6" height="15.0" fill="rgb(217,12,6)" rx="2" ry="2"/>
<text x="20.82" y="1391.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.07%)</title><rect x="254.2011695906433" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(206,144,1)" rx="2" ry="2" _orig_x="263.2" _orig_width="0.8"/>
<text x="257.2011695906433" y="1999.5" _orig_x="266.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.10%)</title><rect x="54.26131996658318" y="1845" width="1.2496240601503759" height="15.0" fill="rgb(208,96,43)" rx="2" ry="2" _orig_x="71.2" _orig_width="1.2"/>
<text x="57.26131996658318" y="1855.5" _orig_x="74.22"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(230,91,42)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1919.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>crashpad::Annotation::SetSize (11 samples, 0.01%)</title><rect x="219.5241019214704" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(225,21,25)" rx="2" ry="2" _orig_x="229.9" _orig_width="0.1"/>
<text x="222.5241019214704" y="1727.5" _orig_x="232.94"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (22 samples, 0.02%)</title><rect x="1022.1679197994988" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(238,104,26)" rx="2" ry="2" _orig_x="779.7" _orig_width="0.2"/>
<text x="1025.1679197994988" y="1807.5" _orig_x="782.67"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="773" width="2.2909774436090227" height="15.0" fill="rgb(209,79,36)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="783.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>blink::scheduler::AgentInterferenceRecorder::OnTaskCompleted (17 samples, 0.01%)</title><rect x="209.5271094402674" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(236,105,20)" rx="2" ry="2" _orig_x="220.3" _orig_width="0.1"/>
<text x="212.5271094402674" y="1727.5" _orig_x="223.25"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (11 samples, 0.01%)</title><rect x="327.61658312447787" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(252,11,51)" rx="2" ry="2" _orig_x="333.7" _orig_width="0.1"/>
<text x="330.61658312447787" y="2015.5" _orig_x="336.70"/>
</g>
<g>
<title>_int_free (18 samples, 0.02%)</title><rect x="925.3132832080199" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(251,171,23)" rx="2" ry="2" _orig_x="740.4" _orig_width="0.2"/>
<text x="928.3132832080199" y="1727.5" _orig_x="743.39"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (20 samples, 0.02%)</title><rect x="1015.267335004177" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(250,12,47)" rx="2" ry="2" _orig_x="776.9" _orig_width="0.2"/>
<text x="1018.267335004177" y="1807.5" _orig_x="779.89"/>
</g>
<g>
<title>Field::CompareLessThan (35 samples, 0.03%)</title><rect x="16.900584795321663" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(251,124,44)" rx="2" ry="2" _orig_x="371.8" _orig_width="0.3"/>
<text x="19.900584795321663" y="1855.5" _orig_x="374.76"/>
</g>
<g>
<title>operator new (13 samples, 0.01%)</title><rect x="209.62406015037593" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(249,36,41)" rx="2" ry="2" _orig_x="450.0" _orig_width="0.2"/>
<text x="212.62406015037593" y="1743.5" _orig_x="453.05"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="52.389306599832885" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(213,181,16)" rx="2" ry="2" _orig_x="386.2" _orig_width="0.1"/>
<text x="55.389306599832885" y="1791.5" _orig_x="389.21"/>
</g>
<g class="hide">
<title>[perf-58119.map] (19 samples, 0.02%)</title><rect x="119.65831244778619" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(248,56,13)" rx="2" ry="2" _orig_x="134.0" _orig_width="0.1"/>
<text x="122.65831244778619" y="1663.5" _orig_x="136.96"/>
</g>
<g class="hide">
<title>[perf-9366.map] (18 samples, 0.02%)</title><rect x="10.316207184628293" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(232,78,21)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1775.5" _orig_x="32.01"/>
</g>
<g class="hide">
<title>[unknown] (107 samples, 0.09%)</title><rect x="230.35417710944031" y="2021" width="1.1454887218045113" height="15.0" fill="rgb(245,127,6)" rx="2" ry="2" _orig_x="240.3" _orig_width="1.1"/>
<text x="233.35417710944031" y="2031.5" _orig_x="243.34"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1269" width="0.31240601503759396" height="15.0" fill="rgb(208,1,47)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1279.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="10.5" y="1989" width="0.2" height="15.0" fill="rgb(231,41,9)" rx="2" ry="2"/>
<text x="13.52" y="1999.5"/>
</g>
<g class="hide">
<title>[chrome] (191 samples, 0.16%)</title><rect x="91.54177109440273" y="1877" width="1.9785714285714284" height="15.0" fill="rgb(219,188,21)" rx="2" ry="2" _orig_x="107.0" _orig_width="1.9"/>
<text x="94.54177109440273" y="1887.5" _orig_x="109.99"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (12 samples, 0.01%)</title><rect x="192.61904761904768" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(233,57,44)" rx="2" ry="2" _orig_x="443.1" _orig_width="0.1"/>
<text x="195.61904761904768" y="1759.5" _orig_x="446.07"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (45 samples, 0.04%)</title><rect x="43.517126148705145" y="1797" width="0.985797827903091" height="15.0" fill="rgb(237,207,9)" rx="2" ry="2" _orig_x="382.6" _orig_width="0.4"/>
<text x="46.517126148705145" y="1807.5" _orig_x="385.58"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (22 samples, 0.02%)</title><rect x="15.731244778613258" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(221,141,25)" rx="2" ry="2" _orig_x="34.2" _orig_width="0.2"/>
<text x="18.73124477861326" y="1951.5" _orig_x="37.19"/>
</g>
<g class="hide">
<title>v8::Function::Call (22 samples, 0.02%)</title><rect x="119.55417710944033" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(239,202,33)" rx="2" ry="2" _orig_x="133.9" _orig_width="0.2"/>
<text x="122.55417710944033" y="1711.5" _orig_x="136.93"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (30 samples, 0.03%)</title><rect x="551.9423558897242" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(238,206,41)" rx="2" ry="2" _orig_x="588.9" _orig_width="0.3"/>
<text x="554.9423558897242" y="1727.5" _orig_x="591.88"/>
</g>
<g class="hide">
<title>[perf-32996.map] (116 samples, 0.10%)</title><rect x="17.3" y="1701" width="1.1" height="15.0" fill="rgb(232,201,39)" rx="2" ry="2"/>
<text x="20.27" y="1711.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (143 samples, 0.12%)</title><rect x="813.1787802840433" y="1717" width="3.4502923976608186" height="15.0" fill="rgb(238,36,42)" rx="2" ry="2" _orig_x="694.9" _orig_width="1.4"/>
<text x="816.1787802840433" y="1727.5" _orig_x="697.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,537 samples, 6.34%)</title><rect x="1085.0970342522974" y="1909" width="77.89323308270676" height="15.0" fill="rgb(229,157,45)" rx="2" ry="2" _orig_x="1061.1" _orig_width="74.8"/>
<text x="1088.0970342522974" y="1919.5" _orig_x="1064.11">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="232.2286131996659" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(221,140,40)" rx="2" ry="2" _orig_x="242.1" _orig_width="0.3"/>
<text x="235.2286131996659" y="2031.5" _orig_x="245.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="355.8372598162072" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(228,125,37)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1775.5" _orig_x="363.78"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(242,36,26)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1887.5" _orig_x="297.81"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (17 samples, 0.01%)</title><rect x="867.1512113617375" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(222,117,1)" rx="2" ry="2" _orig_x="716.8" _orig_width="0.2"/>
<text x="870.1512113617375" y="1823.5" _orig_x="719.82"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="525.3258145363409" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(211,84,38)" rx="2" ry="2" _orig_x="578.1" _orig_width="0.2"/>
<text x="528.3258145363409" y="1791.5" _orig_x="581.14"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1845" width="55.81654135338346" height="15.0" fill="rgb(215,111,4)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1855.5" _orig_x="185.47">base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run </text>
</g>
<g class="hide">
<title>_nv013719rm (11 samples, 0.01%)</title><rect x="336.8" y="2053" width="0.1" height="15.0" fill="rgb(217,124,23)" rx="2" ry="2"/>
<text x="339.76" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (14 samples, 0.01%)</title><rect x="1172.0091896407685" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(237,79,31)" rx="2" ry="2" _orig_x="840.5" _orig_width="0.1"/>
<text x="1175.0091896407685" y="1887.5" _orig_x="843.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="156.31395154553053" y="1861" width="0.41654135338345866" height="15.0" fill="rgb(214,137,53)" rx="2" ry="2" _orig_x="169.2" _orig_width="0.4"/>
<text x="159.31395154553053" y="1871.5" _orig_x="172.20"/>
</g>
<g>
<title>Field::Field (13 samples, 0.01%)</title><rect x="445.96908939014196" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(237,27,3)" rx="2" ry="2" _orig_x="545.9" _orig_width="0.1"/>
<text x="448.96908939014196" y="1855.5" _orig_x="548.90"/>
</g>
<g class="hide">
<title>blink::V8MessageEventInit::ToImpl (515 samples, 0.43%)</title><rect x="190.57447786132002" y="1445" width="5.310902255639097" height="15.0" fill="rgb(226,97,8)" rx="2" ry="2" _orig_x="202.1" _orig_width="5.1"/>
<text x="193.57447786132002" y="1455.5" _orig_x="205.14"/>
</g>
<g class="hide">
<title>blink::Element::ClientQuads (48 samples, 0.04%)</title><rect x="182.24365079365083" y="1493" width="0.5206766917293233" height="15.0" fill="rgb(206,124,1)" rx="2" ry="2" _orig_x="194.1" _orig_width="0.5"/>
<text x="185.24365079365083" y="1503.5" _orig_x="197.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="25.0" y="1909" width="0.2" height="15.0" fill="rgb(209,209,11)" rx="2" ry="2"/>
<text x="28.04" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(208,149,10)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1935.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1861" width="5.102631578947369" height="15.0" fill="rgb(252,86,0)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1871.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="96.54026733500423" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(220,138,34)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="1967.5" _orig_x="114.84"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(215,139,30)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="2015.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>code (6,514 samples, 5.48%)</title><rect x="110.6" y="2069" width="64.6" height="15.0" fill="rgb(241,101,33)" rx="2" ry="2"/>
<text x="113.59" y="2079.5">code</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="355.21244778613203" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(221,98,32)" rx="2" ry="2" _orig_x="360.2" _orig_width="0.3"/>
<text x="358.21244778613203" y="1999.5" _orig_x="363.17"/>
</g>
<g>
<title>Row::GetField (65 samples, 0.05%)</title><rect x="1091.6666666666665" y="1893" width="1.7251461988304093" height="15.0" fill="rgb(234,154,20)" rx="2" ry="2" _orig_x="807.9" _orig_width="0.7"/>
<text x="1094.6666666666665" y="1903.5" _orig_x="810.91"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (104 samples, 0.09%)</title><rect x="233.28320802005018" y="1733" width="2.7109440267335008" height="15.0" fill="rgb(236,12,39)" rx="2" ry="2" _orig_x="459.6" _orig_width="1.1"/>
<text x="236.28320802005018" y="1743.5" _orig_x="462.62"/>
</g>
<g>
<title>main (48,251 samples, 40.58%)</title><rect x="10" y="2037" width="1180" height="15.0" fill="rgb(241,46,27)" rx="2" ry="2" _orig_x="369.0" _orig_width="478.8"/>
<text x="13" y="2047.5" _orig_x="372.05">main </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (24 samples, 0.02%)</title><rect x="82.70258980785296" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(221,196,9)" rx="2" ry="2" _orig_x="398.5" _orig_width="0.2"/>
<text x="85.70258980785296" y="1775.5" _orig_x="401.49"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (905 samples, 0.76%)</title><rect x="250.53467000835428" y="1829" width="22.18045112781955" height="15.0" fill="rgb(218,174,42)" rx="2" ry="2" _orig_x="466.6" _orig_width="9.0"/>
<text x="253.53467000835428" y="1839.5" _orig_x="469.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (268 samples, 0.23%)</title><rect x="88.31357560568092" y="1925" width="2.707518796992481" height="15.0" fill="rgb(247,179,33)" rx="2" ry="2" _orig_x="103.9" _orig_width="2.6"/>
<text x="91.31357560568092" y="1935.5" _orig_x="106.88"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (24 samples, 0.02%)</title><rect x="1159.68671679198" y="1925" width="0.7393483709273182" height="15.0" fill="rgb(214,227,28)" rx="2" ry="2" _orig_x="835.5" _orig_width="0.3"/>
<text x="1162.68671679198" y="1935.5" _orig_x="838.52"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (13 samples, 0.01%)</title><rect x="347.6357560568087" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(223,37,23)" rx="2" ry="2" _orig_x="506.0" _orig_width="0.1"/>
<text x="350.6357560568087" y="1759.5" _orig_x="508.96"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1301" width="0.31240601503759396" height="15.0" fill="rgb(245,123,4)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1311.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="341" width="2.2909774436090227" height="15.0" fill="rgb(224,188,32)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="351.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-33014.map] (55 samples, 0.05%)</title><rect x="129.65530492898918" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(244,104,54)" rx="2" ry="2" _orig_x="143.6" _orig_width="0.5"/>
<text x="132.65530492898918" y="1919.5" _orig_x="146.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="108.09928989139522" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(212,41,5)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.2"/>
<text x="111.09928989139522" y="1775.5" _orig_x="125.87"/>
</g>
<g class="hide">
<title>Builtins_CallApiCallback (13 samples, 0.01%)</title><rect x="184.22222222222229" y="1301" width="0.10413533834586466" height="15.0" fill="rgb(234,173,25)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1311.5" _orig_x="198.97"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (15 samples, 0.01%)</title><rect x="213.0743525480367" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(222,88,29)" rx="2" ry="2" _orig_x="451.4" _orig_width="0.1"/>
<text x="216.0743525480367" y="1727.5" _orig_x="454.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="50.82485380116965" y="37" width="0.20827067669172933" height="15.0" fill="rgb(247,147,44)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="47.5" _orig_x="70.86"/>
</g>
<g class="hide">
<title>__GI___writev (78 samples, 0.07%)</title><rect x="302.62410192147036" y="2037" width="0.8330827067669173" height="15.0" fill="rgb(205,17,8)" rx="2" ry="2" _orig_x="309.7" _orig_width="0.8"/>
<text x="305.62410192147036" y="2047.5" _orig_x="312.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="121.53274853801176" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(247,72,5)" rx="2" ry="2" _orig_x="135.8" _orig_width="0.2"/>
<text x="124.53274853801176" y="1807.5" _orig_x="138.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (100 samples, 0.08%)</title><rect x="307.21804511278197" y="1765" width="2.4644945697577274" height="15.0" fill="rgb(216,40,17)" rx="2" ry="2" _orig_x="489.6" _orig_width="1.0"/>
<text x="310.21804511278197" y="1775.5" _orig_x="492.61"/>
</g>
<g class="hide">
<title>[unknown] (901 samples, 0.76%)</title><rect x="292.41883876357565" y="2037" width="9.37218045112782" height="15.0" fill="rgb(236,229,38)" rx="2" ry="2" _orig_x="299.9" _orig_width="9.0"/>
<text x="295.41883876357565" y="2047.5" _orig_x="302.91"/>
</g>
<g>
<title>operator new (19 samples, 0.02%)</title><rect x="404.3191311612364" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(208,180,45)" rx="2" ry="2" _orig_x="529.0" _orig_width="0.2"/>
<text x="407.3191311612364" y="1855.5" _orig_x="531.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (413 samples, 0.35%)</title><rect x="149.85756056808694" y="1813" width="4.269548872180451" height="15.0" fill="rgb(224,119,51)" rx="2" ry="2" _orig_x="163.0" _orig_width="4.1"/>
<text x="152.85756056808694" y="1823.5" _orig_x="166.01"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (72 samples, 0.06%)</title><rect x="579.5446950710109" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(234,13,40)" rx="2" ry="2" _orig_x="600.1" _orig_width="0.7"/>
<text x="582.5446950710109" y="1759.5" _orig_x="603.13"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (51 samples, 0.04%)</title><rect x="223.17878028404343" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(223,228,30)" rx="2" ry="2" _orig_x="455.5" _orig_width="0.5"/>
<text x="226.17878028404343" y="1839.5" _orig_x="458.52"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (14 samples, 0.01%)</title><rect x="526.311612364244" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(243,195,30)" rx="2" ry="2" _orig_x="578.5" _orig_width="0.2"/>
<text x="529.311612364244" y="1791.5" _orig_x="581.54"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (40 samples, 0.03%)</title><rect x="209.1311612364244" y="1765" width="0.985797827903091" height="15.0" fill="rgb(243,149,33)" rx="2" ry="2" _orig_x="449.8" _orig_width="0.4"/>
<text x="212.1311612364244" y="1775.5" _orig_x="452.78"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (3,411 samples, 2.87%)</title><rect x="444.9832915622389" y="1861" width="83.29991645781118" height="15.0" fill="rgb(244,218,54)" rx="2" ry="2" _orig_x="545.5" _orig_width="33.8"/>
<text x="447.9832915622389" y="1871.5" _orig_x="548.49">GenericKe..</text>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (71 samples, 0.06%)</title><rect x="335.31328320802" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(211,112,4)" rx="2" ry="2" _orig_x="501.0" _orig_width="0.7"/>
<text x="338.31328320802" y="1759.5" _orig_x="504.04"/>
</g>
<g class="hide">
<title>QApplicationPrivate::notify_helper (36 samples, 0.03%)</title><rect x="230.4583124477862" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(250,50,28)" rx="2" ry="2" _orig_x="240.4" _orig_width="0.3"/>
<text x="233.4583124477862" y="2015.5" _orig_x="243.38"/>
</g>
<g class="hide">
<title>[perf-32996.map] (70 samples, 0.06%)</title><rect x="18.6" y="1685" width="0.7" height="15.0" fill="rgb(219,73,24)" rx="2" ry="2"/>
<text x="21.57" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.09%)</title><rect x="73.10981620718468" y="1973" width="1.0413533834586466" height="15.0" fill="rgb(248,43,7)" rx="2" ry="2" _orig_x="89.3" _orig_width="1.0"/>
<text x="76.10981620718468" y="1983.5" _orig_x="92.28"/>
</g>
<g class="hide">
<title>[perf-15821.map] (11 samples, 0.01%)</title><rect x="93.1038011695907" y="1477" width="0.20827067669172933" height="15.0" fill="rgb(236,182,52)" rx="2" ry="2" _orig_x="108.5" _orig_width="0.2"/>
<text x="96.1038011695907" y="1487.5" _orig_x="111.54"/>
</g>
<g>
<title>std::forward&lt;void*&amp;&gt; (12 samples, 0.01%)</title><rect x="822.297410192147" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(240,99,33)" rx="2" ry="2" _orig_x="698.6" _orig_width="0.1"/>
<text x="825.297410192147" y="1775.5" _orig_x="701.61"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (161 samples, 0.14%)</title><rect x="761.670843776107" y="1781" width="3.943191311612364" height="15.0" fill="rgb(234,106,41)" rx="2" ry="2" _orig_x="674.0" _orig_width="1.6"/>
<text x="764.670843776107" y="1791.5" _orig_x="677.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (404 samples, 0.34%)</title><rect x="1177.6" y="1701" width="4.0" height="15.0" fill="rgb(242,163,10)" rx="2" ry="2"/>
<text x="1180.57" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (172 samples, 0.14%)</title><rect x="896.6120718462824" y="1813" width="1.7703007518796992" height="15.0" fill="rgb(245,54,52)" rx="2" ry="2" _orig_x="880.1" _orig_width="1.7"/>
<text x="899.6120718462824" y="1823.5" _orig_x="883.13"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (13 samples, 0.01%)</title><rect x="313.1328320802005" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(250,142,26)" rx="2" ry="2" _orig_x="492.0" _orig_width="0.1"/>
<text x="316.1328320802005" y="1711.5" _orig_x="494.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(220,200,29)" rx="2" ry="2"/>
<text x="14.19" y="2047.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (255 samples, 0.21%)</title><rect x="1076.140350877193" y="1813" width="6.1612364243943185" height="15.0" fill="rgb(250,196,37)" rx="2" ry="2" _orig_x="801.6" _orig_width="2.5"/>
<text x="1079.140350877193" y="1823.5" _orig_x="804.57"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (13 samples, 0.01%)</title><rect x="150.969089390142" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(207,158,4)" rx="2" ry="2" _orig_x="426.2" _orig_width="0.1"/>
<text x="153.969089390142" y="1791.5" _orig_x="429.17"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1423.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[chrome] (70 samples, 0.06%)</title><rect x="86.23086883876364" y="1781" width="0.7289473684210526" height="15.0" fill="rgb(207,109,15)" rx="2" ry="2" _orig_x="101.9" _orig_width="0.7"/>
<text x="89.23086883876364" y="1791.5" _orig_x="104.89"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (17 samples, 0.01%)</title><rect x="818.8471177944862" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(246,115,52)" rx="2" ry="2" _orig_x="697.2" _orig_width="0.1"/>
<text x="821.8471177944862" y="1727.5" _orig_x="700.15"/>
</g>
<g class="hide">
<title>[perf-58145.map] (24 samples, 0.02%)</title><rect x="125.69816207184634" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(214,119,48)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.2"/>
<text x="128.69816207184635" y="1807.5" _orig_x="142.80"/>
</g>
<g class="hide">
<title>QMovie::qt_metacast (102 samples, 0.09%)</title><rect x="228.68801169590648" y="2037" width="1.1454887218045113" height="15.0" fill="rgb(234,82,23)" rx="2" ry="2" _orig_x="238.7" _orig_width="1.1"/>
<text x="231.68801169590648" y="2047.5" _orig_x="241.74"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::destroy&lt;void*&gt; (13 samples, 0.01%)</title><rect x="1133.0701754385966" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(254,16,10)" rx="2" ry="2" _orig_x="824.7" _orig_width="0.1"/>
<text x="1136.0701754385966" y="1775.5" _orig_x="827.65"/>
</g>
<g class="hide">
<title>[postgres] (12 samples, 0.01%)</title><rect x="930.9767335004177" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(242,169,51)" rx="2" ry="2" _orig_x="913.1" _orig_width="0.1"/>
<text x="933.9767335004177" y="1983.5" _orig_x="916.08"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="315.59732664995823" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(251,178,17)" rx="2" ry="2" _orig_x="493.0" _orig_width="0.1"/>
<text x="318.59732664995823" y="1839.5" _orig_x="496.03"/>
</g>
<g class="hide">
<title>QArrayData::shared_null (20 samples, 0.02%)</title><rect x="226.08462823725986" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(230,0,230)" rx="2" ry="2" _orig_fill="rgb(239,223,34)" _orig_x="236.2" _orig_width="0.2"/>
<text x="229.08462823725986" y="2047.5" _orig_x="239.20"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (24 samples, 0.02%)</title><rect x="319.54051796157063" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(206,213,30)" rx="2" ry="2" _orig_x="494.6" _orig_width="0.2"/>
<text x="322.54051796157063" y="1807.5" _orig_x="497.59"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void*&gt;, true&gt;::_S_cget (11 samples, 0.01%)</title><rect x="1013.5421888053468" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(229,197,22)" rx="2" ry="2" _orig_x="776.2" _orig_width="0.1"/>
<text x="1016.5421888053468" y="1775.5" _orig_x="779.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="302.10342522974105" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(223,100,3)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="1951.5" _orig_x="312.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="271.9041771094403" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(238,102,10)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1951.5" _orig_x="283.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (13 samples, 0.01%)</title><rect x="558.3500417710943" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(211,72,3)" rx="2" ry="2" _orig_x="591.5" _orig_width="0.2"/>
<text x="561.3500417710943" y="1855.5" _orig_x="594.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="121.63688387635762" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(251,144,3)" rx="2" ry="2" _orig_x="135.9" _orig_width="0.1"/>
<text x="124.63688387635762" y="1759.5" _orig_x="138.85"/>
</g>
<g>
<title>std::__to_address&lt;std::__detail::_Hash_node_base*&gt; (11 samples, 0.01%)</title><rect x="816.6290726817041" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(250,148,44)" rx="2" ry="2" _orig_x="696.3" _orig_width="0.1"/>
<text x="819.6290726817041" y="1727.5" _orig_x="699.32"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (28 samples, 0.02%)</title><rect x="71.61236424394318" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(216,146,46)" rx="2" ry="2" _orig_x="394.0" _orig_width="0.3"/>
<text x="74.61236424394318" y="1791.5" _orig_x="396.98"/>
</g>
<g class="hide">
<title>blink::WorldSafeV8Reference&lt;v8::Value&gt;::WorldSafeV8Reference (34 samples, 0.03%)</title><rect x="193.8026733500418" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(239,87,41)" rx="2" ry="2" _orig_x="205.2" _orig_width="0.3"/>
<text x="196.8026733500418" y="1439.5" _orig_x="208.20"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="1973" width="0.7" height="15.0" fill="rgb(253,200,36)" rx="2" ry="2"/>
<text x="14.39" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(254,205,44)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1711.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="1957" width="0.4" height="15.0" fill="rgb(247,106,46)" rx="2" ry="2"/>
<text x="24.77" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (261 samples, 0.22%)</title><rect x="126.11470342522978" y="1829" width="2.6033834586466167" height="15.0" fill="rgb(205,133,44)" rx="2" ry="2" _orig_x="140.2" _orig_width="2.5"/>
<text x="129.11470342522978" y="1839.5" _orig_x="143.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (424 samples, 0.36%)</title><rect x="1158.0959064327485" y="1717" width="4.373684210526316" height="15.0" fill="rgb(205,209,16)" rx="2" ry="2" _orig_x="1131.2" _orig_width="4.2"/>
<text x="1161.0959064327485" y="1727.5" _orig_x="1134.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="913.8" y="2053" width="1.0" height="15.0" fill="rgb(207,167,38)" rx="2" ry="2"/>
<text x="916.83" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="933.6842522974102" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(213,150,44)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="1935.5" _orig_x="918.73"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (26 samples, 0.02%)</title><rect x="40.1" y="2053" width="0.3" height="15.0" fill="rgb(205,71,39)" rx="2" ry="2"/>
<text x="43.10" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.05%)</title><rect x="342.92447786132" y="1877" width="0.6248120300751879" height="15.0" fill="rgb(214,93,21)" rx="2" ry="2" _orig_x="348.4" _orig_width="0.6"/>
<text x="345.92447786132" y="1887.5" _orig_x="351.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="1957" width="0.1" height="15.0" fill="rgb(244,188,53)" rx="2" ry="2"/>
<text x="26.70" y="1967.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (40 samples, 0.03%)</title><rect x="41.76507936507942" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(214,37,44)" rx="2" ry="2" _orig_x="59.2" _orig_width="0.4"/>
<text x="44.76507936507942" y="2047.5" _orig_x="62.24"/>
</g>
<g>
<title>[libminisql_shared.so] (15 samples, 0.01%)</title><rect x="504.37761069340024" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(227,221,17)" rx="2" ry="2" _orig_x="569.6" _orig_width="0.1"/>
<text x="507.37761069340024" y="1807.5" _orig_x="572.57"/>
</g>
<g class="hide">
<title>google::protobuf::internal::MapEntryImpl&lt;content::devtools::proto::BackgroundServiceEvent_EventMetadataEntry_DoNotUse, google::protobuf::MessageLite, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;,  (14 samples, 0.01%)</title><rect x="223.0647034252298" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(250,158,41)" rx="2" ry="2" _orig_x="233.3" _orig_width="0.1"/>
<text x="226.0647034252298" y="1759.5" _orig_x="236.30"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (90 samples, 0.08%)</title><rect x="803.8137009189642" y="1765" width="2.218045112781955" height="15.0" fill="rgb(231,122,31)" rx="2" ry="2" _orig_x="691.1" _orig_width="0.9"/>
<text x="806.8137009189642" y="1775.5" _orig_x="694.07"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (18 samples, 0.02%)</title><rect x="1004.9164578111947" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(240,63,15)" rx="2" ry="2" _orig_x="772.7" _orig_width="0.2"/>
<text x="1007.9164578111947" y="1759.5" _orig_x="775.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="22.4" y="1989" width="0.2" height="15.0" fill="rgb(243,186,7)" rx="2" ry="2"/>
<text x="25.40" y="1999.5"/>
</g>
<g class="hide">
<title>blink::LayoutObject::LocalToAncestorQuad (56 samples, 0.05%)</title><rect x="182.86846282372602" y="1477" width="0.5206766917293233" height="15.0" fill="rgb(207,229,13)" rx="2" ry="2" _orig_x="194.7" _orig_width="0.5"/>
<text x="185.86846282372602" y="1487.5" _orig_x="197.68"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (11 samples, 0.01%)</title><rect x="759.9456975772763" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(225,62,9)" rx="2" ry="2" _orig_x="673.3" _orig_width="0.1"/>
<text x="762.9456975772763" y="1743.5" _orig_x="676.28"/>
</g>
<g>
<title>GetCmpBool (12 samples, 0.01%)</title><rect x="444.2439431913117" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(238,114,52)" rx="2" ry="2" _orig_x="545.2" _orig_width="0.1"/>
<text x="447.2439431913117" y="1855.5" _orig_x="548.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="66.23688387635761" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(214,106,0)" rx="2" ry="2" _orig_x="82.7" _orig_width="0.3"/>
<text x="69.23688387635761" y="1983.5" _orig_x="85.74"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (69 samples, 0.06%)</title><rect x="924.5739348370927" y="1733" width="1.7251461988304093" height="15.0" fill="rgb(205,203,5)" rx="2" ry="2" _orig_x="740.1" _orig_width="0.7"/>
<text x="927.5739348370927" y="1743.5" _orig_x="743.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="354.7959064327486" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(214,49,9)" rx="2" ry="2" _orig_x="359.8" _orig_width="0.3"/>
<text x="357.7959064327486" y="1935.5" _orig_x="362.83"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="1957" width="0.7" height="15.0" fill="rgb(249,60,5)" rx="2" ry="2"/>
<text x="14.39" y="1967.5"/>
</g>
<g class="hide">
<title>_PyDict_LoadGlobal (13 samples, 0.01%)</title><rect x="81.12823725981626" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(228,153,24)" rx="2" ry="2" _orig_x="97.0" _orig_width="0.2"/>
<text x="84.12823725981626" y="2047.5" _orig_x="100.03"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (108 samples, 0.09%)</title><rect x="121.88805346700077" y="1781" width="2.7109440267335008" height="15.0" fill="rgb(242,57,18)" rx="2" ry="2" _orig_x="414.4" _orig_width="1.1"/>
<text x="124.88805346700077" y="1791.5" _orig_x="417.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (415 samples, 0.35%)</title><rect x="157.25116959064331" y="1957" width="4.269548872180451" height="15.0" fill="rgb(219,67,54)" rx="2" ry="2" _orig_x="170.1" _orig_width="4.1"/>
<text x="160.25116959064331" y="1967.5" _orig_x="173.07"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (59 samples, 0.05%)</title><rect x="856.8003341687552" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(243,161,8)" rx="2" ry="2" _orig_x="712.6" _orig_width="0.5"/>
<text x="859.8003341687552" y="1791.5" _orig_x="715.56"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (11 samples, 0.01%)</title><rect x="605.1754385964912" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(208,166,6)" rx="2" ry="2" _orig_x="610.5" _orig_width="0.2"/>
<text x="608.1754385964912" y="1775.5" _orig_x="613.55"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (12 samples, 0.01%)</title><rect x="326.88763575605685" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(206,178,36)" rx="2" ry="2" _orig_x="333.0" _orig_width="0.2"/>
<text x="329.88763575605685" y="2047.5" _orig_x="336.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="42.285756056808744" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(233,90,28)" rx="2" ry="2" _orig_x="59.7" _orig_width="0.2"/>
<text x="45.285756056808744" y="1999.5" _orig_x="62.66"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(239,184,34)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1375.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="917" width="0.20827067669172933" height="15.0" fill="rgb(205,4,53)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="927.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="43.74365079365085" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(238,170,22)" rx="2" ry="2" _orig_x="61.1" _orig_width="0.2"/>
<text x="46.74365079365085" y="1967.5" _orig_x="64.13"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,438 samples, 1.21%)</title><rect x="331.3700918964076" y="1813" width="35.242272347535504" height="15.0" fill="rgb(218,118,50)" rx="2" ry="2" _orig_x="499.4" _orig_width="14.3"/>
<text x="334.3700918964076" y="1823.5" _orig_x="502.41">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36 samples, 0.03%)</title><rect x="145.17147034252304" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(224,2,41)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="1983.5" _orig_x="161.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="69" width="0.20827067669172933" height="15.0" fill="rgb(243,163,7)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="79.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>[chrome] (19 samples, 0.02%)</title><rect x="92.16658312447791" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(242,43,25)" rx="2" ry="2" _orig_x="107.6" _orig_width="0.2"/>
<text x="95.16658312447791" y="1679.5" _orig_x="110.64"/>
</g>
<g class="hide">
<title>[chrome] (205 samples, 0.17%)</title><rect x="91.43763575605686" y="1893" width="2.082706766917293" height="15.0" fill="rgb(236,152,14)" rx="2" ry="2" _orig_x="106.9" _orig_width="2.0"/>
<text x="94.43763575605686" y="1903.5" _orig_x="109.87"/>
</g>
<g class="hide">
<title>[perf-58119.map] (444 samples, 0.37%)</title><rect x="113.30605680868845" y="1605" width="4.581954887218045" height="15.0" fill="rgb(247,109,3)" rx="2" ry="2" _orig_x="127.9" _orig_width="4.4"/>
<text x="116.30605680868845" y="1615.5" _orig_x="130.87"/>
</g>
<g class="hide">
<title>dbus-daemon (229 samples, 0.19%)</title><rect x="279.2" y="2069" width="2.2" height="15.0" fill="rgb(235,179,23)" rx="2" ry="2"/>
<text x="282.18" y="2079.5"/>
</g>
<g class="hide">
<title>epoll_wait (11 samples, 0.01%)</title><rect x="51.55380116959069" y="213" width="0.20827067669172933" height="15.0" fill="rgb(222,188,38)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="223.5" _orig_x="71.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (265 samples, 0.22%)</title><rect x="23.853801169590696" y="1909" width="2.707518796992481" height="15.0" fill="rgb(239,118,5)" rx="2" ry="2" _orig_x="42.0" _orig_width="2.6"/>
<text x="26.853801169590696" y="1919.5" _orig_x="44.97"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (36 samples, 0.03%)</title><rect x="182.9725981620719" y="1413" width="0.41654135338345866" height="15.0" fill="rgb(209,5,13)" rx="2" ry="2" _orig_x="194.8" _orig_width="0.4"/>
<text x="185.9725981620719" y="1423.5" _orig_x="197.84"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (20 samples, 0.02%)</title><rect x="612.8153717627403" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(212,67,53)" rx="2" ry="2" _orig_x="613.6" _orig_width="0.2"/>
<text x="615.8153717627403" y="1759.5" _orig_x="616.64"/>
</g>
<g class="hide">
<title>blink::ExecutionContext::From (11 samples, 0.01%)</title><rect x="178.9113199665832" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(218,115,51)" rx="2" ry="2" _orig_x="190.9" _orig_width="0.1"/>
<text x="181.9113199665832" y="1679.5" _orig_x="193.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="20.1" y="2005" width="0.2" height="15.0" fill="rgb(228,83,35)" rx="2" ry="2"/>
<text x="23.12" y="2015.5"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (11 samples, 0.01%)</title><rect x="678.3709273182958" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(211,185,13)" rx="2" ry="2" _orig_x="640.2" _orig_width="0.1"/>
<text x="681.3709273182958" y="1775.5" _orig_x="643.21"/>
</g>
<g class="hide">
<title>v8::Function::Call (173 samples, 0.15%)</title><rect x="163.39515455304934" y="1669" width="1.874436090225564" height="15.0" fill="rgb(239,55,0)" rx="2" ry="2" _orig_x="176.0" _orig_width="1.8"/>
<text x="166.39515455304934" y="1679.5" _orig_x="179.04"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (19 samples, 0.02%)</title><rect x="521.87552213868" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(245,192,43)" rx="2" ry="2" _orig_x="576.7" _orig_width="0.2"/>
<text x="524.87552213868" y="1743.5" _orig_x="579.70"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskCompleted (31 samples, 0.03%)</title><rect x="166.1026733500418" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(251,155,2)" rx="2" ry="2" _orig_x="178.6" _orig_width="0.3"/>
<text x="169.1026733500418" y="1759.5" _orig_x="181.56"/>
</g>
<g class="hide">
<title>v8::internal::compiler::Scheduler::ComputeSchedule (12 samples, 0.01%)</title><rect x="144.9631996658313" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(229,14,39)" rx="2" ry="2" _orig_x="158.3" _orig_width="0.1"/>
<text x="147.9631996658313" y="1935.5" _orig_x="161.26"/>
</g>
<g class="hide">
<title>[chrome] (166 samples, 0.14%)</title><rect x="91.75004177109446" y="1845" width="1.7703007518796992" height="15.0" fill="rgb(247,63,6)" rx="2" ry="2" _orig_x="107.2" _orig_width="1.7"/>
<text x="94.75004177109446" y="1855.5" _orig_x="110.21"/>
</g>
<g>
<title>Field::Field (15 samples, 0.01%)</title><rect x="570.4260651629072" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(215,86,0)" rx="2" ry="2" _orig_x="596.4" _orig_width="0.2"/>
<text x="573.4260651629072" y="1855.5" _orig_x="599.45"/>
</g>
<g>
<title>Field::CompareGreaterThan (43 samples, 0.04%)</title><rect x="567.2222222222223" y="1861" width="0.985797827903091" height="15.0" fill="rgb(211,112,10)" rx="2" ry="2" _orig_x="595.1" _orig_width="0.4"/>
<text x="570.2222222222223" y="1871.5" _orig_x="598.07"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (13 samples, 0.01%)</title><rect x="945.5221386800333" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(252,164,37)" rx="2" ry="2" _orig_x="748.6" _orig_width="0.1"/>
<text x="948.5221386800333" y="1871.5" _orig_x="751.61"/>
</g>
<g class="hide">
<title>[perf-58145.map] (185 samples, 0.16%)</title><rect x="126.84365079365085" y="1637" width="1.874436090225564" height="15.0" fill="rgb(213,87,40)" rx="2" ry="2" _orig_x="140.9" _orig_width="1.8"/>
<text x="129.84365079365085" y="1647.5" _orig_x="143.91"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="617.251461988304" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(246,103,8)" rx="2" ry="2" _orig_x="615.4" _orig_width="0.2"/>
<text x="620.251461988304" y="1807.5" _orig_x="618.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="355.3165831244779" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(229,7,18)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="358.3165831244779" y="1935.5" _orig_x="363.29"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="755.7560568086884" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(229,148,50)" rx="2" ry="2" _orig_x="671.6" _orig_width="0.2"/>
<text x="758.7560568086884" y="1839.5" _orig_x="674.55"/>
</g>
<g class="hide">
<title>read (35 samples, 0.03%)</title><rect x="108.61996658312454" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(253,110,4)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="2047.5" _orig_x="126.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="156.4180868838764" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(233,0,40)" rx="2" ry="2" _orig_x="169.3" _orig_width="0.3"/>
<text x="159.4180868838764" y="1855.5" _orig_x="172.25"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (19 samples, 0.02%)</title><rect x="675.9064327485381" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(237,79,20)" rx="2" ry="2" _orig_x="639.2" _orig_width="0.2"/>
<text x="678.9064327485381" y="1743.5" _orig_x="642.19"/>
</g>
<g class="hide">
<title>[code] (34 samples, 0.03%)</title><rect x="17.9" y="1333" width="0.4" height="15.0" fill="rgb(245,19,23)" rx="2" ry="2"/>
<text x="20.94" y="1343.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="1957" width="0.5" height="15.0" fill="rgb(243,192,11)" rx="2" ry="2"/>
<text x="17.63" y="1967.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (18 samples, 0.02%)</title><rect x="47.46031746031743" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(251,2,28)" rx="2" ry="2" _orig_x="384.2" _orig_width="0.2"/>
<text x="50.46031746031743" y="1759.5" _orig_x="387.19"/>
</g>
<g class="hide">
<title>[unknown] (584 samples, 0.49%)</title><rect x="100.8" y="2053" width="5.8" height="15.0" fill="rgb(219,17,53)" rx="2" ry="2"/>
<text x="103.80" y="2063.5"/>
</g>
<g class="hide">
<title>blink::probe::UserCallback::UserCallback (88 samples, 0.07%)</title><rect x="202.86244778613207" y="1733" width="0.937218045112782" height="15.0" fill="rgb(209,33,16)" rx="2" ry="2" _orig_x="213.9" _orig_width="0.9"/>
<text x="205.86244778613207" y="1743.5" _orig_x="216.91"/>
</g>
<g class="hide">
<title>[[vdso]] (53 samples, 0.04%)</title><rect x="84.5647034252298" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(239,99,53)" rx="2" ry="2" _orig_x="100.3" _orig_width="0.5"/>
<text x="87.5647034252298" y="2047.5" _orig_x="103.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (573 samples, 0.48%)</title><rect x="148.1913951545531" y="1893" width="5.935714285714286" height="15.0" fill="rgb(208,68,6)" rx="2" ry="2" _orig_x="161.4" _orig_width="5.7"/>
<text x="151.1913951545531" y="1903.5" _orig_x="164.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="1161.6365079365078" y="1653" width="0.8330827067669173" height="15.0" fill="rgb(216,121,14)" rx="2" ry="2" _orig_x="1134.6" _orig_width="0.8"/>
<text x="1164.6365079365078" y="1663.5" _orig_x="1137.61"/>
</g>
<g class="hide">
<title>blink::TimerBase::RunInternal (13 samples, 0.01%)</title><rect x="224.31432748538018" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(222,213,24)" rx="2" ry="2" _orig_x="234.5" _orig_width="0.1"/>
<text x="227.31432748538018" y="1791.5" _orig_x="237.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="277.2150793650794" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(247,194,15)" rx="2" ry="2" _orig_x="285.3" _orig_width="0.2"/>
<text x="280.2150793650794" y="1855.5" _orig_x="288.35"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (13 samples, 0.01%)</title><rect x="590.3884711779449" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(224,215,35)" rx="2" ry="2" _orig_x="604.5" _orig_width="0.2"/>
<text x="593.3884711779449" y="1711.5" _orig_x="607.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.12%)</title><rect x="13.440267335004233" y="1989" width="1.4578947368421051" height="15.0" fill="rgb(208,157,29)" rx="2" ry="2" _orig_x="32.0" _orig_width="1.4"/>
<text x="16.440267335004233" y="1999.5" _orig_x="34.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="22.1" y="1749" width="0.1" height="15.0" fill="rgb(242,183,8)" rx="2" ry="2"/>
<text x="25.11" y="1759.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (13 samples, 0.01%)</title><rect x="937.8822055137845" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(213,62,3)" rx="2" ry="2" _orig_x="745.5" _orig_width="0.1"/>
<text x="940.8822055137845" y="1855.5" _orig_x="748.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (220 samples, 0.19%)</title><rect x="240.0387635756057" y="1957" width="2.2909774436090227" height="15.0" fill="rgb(237,86,45)" rx="2" ry="2" _orig_x="249.6" _orig_width="2.2"/>
<text x="243.0387635756057" y="1967.5" _orig_x="252.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="69.04853801169597" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(251,91,22)" rx="2" ry="2" _orig_x="85.4" _orig_width="0.3"/>
<text x="72.04853801169597" y="1855.5" _orig_x="88.42"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (13 samples, 0.01%)</title><rect x="188.42940685045943" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(224,179,19)" rx="2" ry="2" _orig_x="441.4" _orig_width="0.1"/>
<text x="191.42940685045943" y="1727.5" _orig_x="444.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="119.34590643274858" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(222,229,0)" rx="2" ry="2" _orig_x="133.7" _orig_width="0.1"/>
<text x="122.34590643274858" y="1743.5" _orig_x="136.66"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="165" width="0.31240601503759396" height="15.0" fill="rgb(237,36,48)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="175.5" _orig_x="99.72"/>
</g>
<g>
<title>Field::CompareGreaterThan (21 samples, 0.02%)</title><rect x="245.6056808688388" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(220,200,51)" rx="2" ry="2" _orig_x="464.6" _orig_width="0.2"/>
<text x="248.6056808688388" y="1871.5" _orig_x="467.60"/>
</g>
<g class="hide">
<title>[libxul.so] (157 samples, 0.13%)</title><rect x="26.9" y="2037" width="1.6" height="15.0" fill="rgb(243,149,43)" rx="2" ry="2"/>
<text x="29.92" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (11 samples, 0.01%)</title><rect x="491.56223893065993" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(243,143,18)" rx="2" ry="2" _orig_x="564.4" _orig_width="0.1"/>
<text x="494.56223893065993" y="1807.5" _orig_x="567.41"/>
</g>
<g class="hide">
<title>base::ScaledLinearHistogram::AddScaledCount (19 samples, 0.02%)</title><rect x="211.40154553049294" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(218,35,33)" rx="2" ry="2" _orig_x="222.1" _orig_width="0.2"/>
<text x="214.40154553049294" y="1695.5" _orig_x="225.09"/>
</g>
<g class="hide">
<title>std::__cxx11::list&lt;std::shared_ptr&lt;wukong::Timer::TimerEvent&gt;, std::allocator&lt;std::shared_ptr&lt;wukong::Timer::TimerEvent&gt; &gt; &gt;::list (12 samples, 0.01%)</title><rect x="18.5428989139516" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(251,145,53)" rx="2" ry="2" _orig_x="36.9" _orig_width="0.2"/>
<text x="21.5428989139516" y="1887.5" _orig_x="39.94"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1861" width="2.2909774436090227" height="15.0" fill="rgb(228,207,42)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1871.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1605" width="0.31240601503759396" height="15.0" fill="rgb(221,45,13)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1615.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="805" width="0.31240601503759396" height="15.0" fill="rgb(209,203,34)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="815.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="130.8007936507937" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(215,150,51)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1503.5" _orig_x="147.66"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (29 samples, 0.02%)</title><rect x="476.03592314118634" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(250,116,34)" rx="2" ry="2" _orig_x="558.1" _orig_width="0.3"/>
<text x="479.03592314118634" y="1727.5" _orig_x="561.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="933.3718462823726" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(238,158,28)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1919.5" _orig_x="918.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="83.1068086883877" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(223,172,31)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1887.5" _orig_x="101.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.04%)</title><rect x="1161.9489139515456" y="1605" width="0.5206766917293233" height="15.0" fill="rgb(233,201,43)" rx="2" ry="2" _orig_x="1134.9" _orig_width="0.5"/>
<text x="1164.9489139515456" y="1615.5" _orig_x="1137.87"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (68 samples, 0.06%)</title><rect x="902.1470342522973" y="1845" width="1.7251461988304093" height="15.0" fill="rgb(246,60,13)" rx="2" ry="2" _orig_x="731.0" _orig_width="0.7"/>
<text x="905.1470342522973" y="1855.5" _orig_x="734.04"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (13 samples, 0.01%)</title><rect x="538.6340852130326" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(241,4,40)" rx="2" ry="2" _orig_x="583.5" _orig_width="0.1"/>
<text x="541.6340852130326" y="1823.5" _orig_x="586.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="302.72823725981624" y="1925" width="0.7289473684210526" height="15.0" fill="rgb(242,169,22)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1935.5" _orig_x="312.80"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (34 samples, 0.03%)</title><rect x="367.35171261487045" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(206,136,11)" rx="2" ry="2" _orig_x="514.0" _orig_width="0.3"/>
<text x="370.35171261487045" y="1791.5" _orig_x="517.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="328.7620718462824" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(233,216,35)" rx="2" ry="2" _orig_x="334.8" _orig_width="0.2"/>
<text x="331.7620718462824" y="1951.5" _orig_x="337.76"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (61 samples, 0.05%)</title><rect x="653.7259816207186" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(223,177,43)" rx="2" ry="2" _orig_x="630.2" _orig_width="0.6"/>
<text x="656.7259816207186" y="1823.5" _orig_x="633.16"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="341" width="0.20827067669172933" height="15.0" fill="rgb(223,198,9)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="351.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="15.6" y="2005" width="0.1" height="15.0" fill="rgb(240,145,11)" rx="2" ry="2"/>
<text x="18.58" y="2015.5"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (22 samples, 0.02%)</title><rect x="183.18086883876362" y="1317" width="0.20827067669172933" height="15.0" fill="rgb(213,178,20)" rx="2" ry="2" _orig_x="195.0" _orig_width="0.2"/>
<text x="186.18086883876362" y="1327.5" _orig_x="197.98"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (15 samples, 0.01%)</title><rect x="392.73600668337497" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(213,84,18)" rx="2" ry="2" _orig_x="524.3" _orig_width="0.2"/>
<text x="395.73600668337497" y="1759.5" _orig_x="527.32"/>
</g>
<g class="hide">
<title>__isoc99_sscanf (55 samples, 0.05%)</title><rect x="235.3526733500418" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(239,124,40)" rx="2" ry="2" _orig_x="245.1" _orig_width="0.5"/>
<text x="238.3526733500418" y="2047.5" _orig_x="248.05"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (484 samples, 0.41%)</title><rect x="112.88951545530499" y="1701" width="4.998496240601503" height="15.0" fill="rgb(216,0,7)" rx="2" ry="2" _orig_x="127.5" _orig_width="4.8"/>
<text x="115.88951545530499" y="1711.5" _orig_x="130.51"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="245" width="0.20827067669172933" height="15.0" fill="rgb(228,39,26)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="255.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="2005" width="2.4992481203007517" height="15.0" fill="rgb(219,90,43)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="2015.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="353.33801169590646" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(218,18,0)" rx="2" ry="2" _orig_x="358.4" _orig_width="0.2"/>
<text x="356.33801169590646" y="1887.5" _orig_x="361.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="280.2350041771095" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(224,120,9)" rx="2" ry="2" _orig_x="288.2" _orig_width="0.5"/>
<text x="283.2350041771095" y="1983.5" _orig_x="291.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.2" y="1957" width="0.1" height="15.0" fill="rgb(227,12,39)" rx="2" ry="2"/>
<text x="19.19" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(251,44,26)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1759.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="16.35605680868844" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(243,188,12)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="2015.5" _orig_x="37.76"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (44 samples, 0.04%)</title><rect x="1008.6131996658313" y="1749" width="0.985797827903091" height="15.0" fill="rgb(210,132,47)" rx="2" ry="2" _orig_x="774.2" _orig_width="0.4"/>
<text x="1011.6131996658313" y="1759.5" _orig_x="777.16"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (21 samples, 0.02%)</title><rect x="648.3040935672514" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(245,34,46)" rx="2" ry="2" _orig_x="628.0" _orig_width="0.2"/>
<text x="651.3040935672514" y="1791.5" _orig_x="631.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (481 samples, 0.40%)</title><rect x="135.69515455304935" y="1941" width="4.998496240601503" height="15.0" fill="rgb(250,64,19)" rx="2" ry="2" _orig_x="149.4" _orig_width="4.8"/>
<text x="138.69515455304935" y="1951.5" _orig_x="152.39"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1333" width="2.2909774436090227" height="15.0" fill="rgb(236,88,49)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1343.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (138 samples, 0.12%)</title><rect x="119.55417710944033" y="1765" width="1.4578947368421051" height="15.0" fill="rgb(244,229,0)" rx="2" ry="2" _orig_x="133.9" _orig_width="1.4"/>
<text x="122.55417710944033" y="1775.5" _orig_x="136.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (297 samples, 0.25%)</title><rect x="310.5383876357561" y="1941" width="3.019924812030075" height="15.0" fill="rgb(241,185,28)" rx="2" ry="2" _orig_x="317.3" _orig_width="2.9"/>
<text x="313.5383876357561" y="1951.5" _orig_x="320.29"/>
</g>
<g class="hide">
<title>[unknown] (755 samples, 0.63%)</title><rect x="10.236662655435138" y="2053" width="17.749699157641395" height="15.0" fill="rgb(233,30,26)" rx="2" ry="2" _orig_x="361.2" _orig_width="7.5"/>
<text x="13.236662655435138" y="2063.5" _orig_x="364.21"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1141" width="0.20827067669172933" height="15.0" fill="rgb(241,38,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1151.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>__poll (16 samples, 0.01%)</title><rect x="11.98237259816213" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(237,112,40)" rx="2" ry="2" _orig_x="30.6" _orig_width="0.2"/>
<text x="14.98237259816213" y="2047.5" _orig_x="33.62"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (19 samples, 0.02%)</title><rect x="277.3976608187134" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(215,96,32)" rx="2" ry="2" _orig_x="477.5" _orig_width="0.2"/>
<text x="280.3976608187134" y="1775.5" _orig_x="480.54"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::allocate (15 samples, 0.01%)</title><rect x="1006.3951545530491" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(213,107,47)" rx="2" ry="2" _orig_x="773.3" _orig_width="0.1"/>
<text x="1009.3951545530491" y="1759.5" _orig_x="776.27"/>
</g>
<g class="hide">
<title>__tls_get_addr (19 samples, 0.02%)</title><rect x="204.94515455304935" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(243,3,14)" rx="2" ry="2" _orig_x="215.9" _orig_width="0.2"/>
<text x="207.94515455304935" y="1727.5" _orig_x="218.95"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (13 samples, 0.01%)</title><rect x="732.34335839599" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(229,27,31)" rx="2" ry="2" _orig_x="662.1" _orig_width="0.1"/>
<text x="735.34335839599" y="1855.5" _orig_x="665.09"/>
</g>
<g class="hide">
<title>record__pushfn (1,233 samples, 1.04%)</title><rect x="915.8771094402674" y="1957" width="12.704511278195488" height="15.0" fill="rgb(238,105,33)" rx="2" ry="2" _orig_x="898.6" _orig_width="12.2"/>
<text x="918.8771094402674" y="1967.5" _orig_x="901.57"/>
</g>
<g class="hide">
<title>blink::ToBlinkString&lt;WTF::AtomicString&gt; (92 samples, 0.08%)</title><rect x="196.1977861319967" y="1461" width="0.937218045112782" height="15.0" fill="rgb(223,194,3)" rx="2" ry="2" _orig_x="207.5" _orig_width="0.9"/>
<text x="199.1977861319967" y="1471.5" _orig_x="210.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="677" width="0.31240601503759396" height="15.0" fill="rgb(246,88,53)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="687.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1477" width="0.31240601503759396" height="15.0" fill="rgb(217,63,13)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1487.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (16 samples, 0.01%)</title><rect x="756.2489557226397" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(252,26,50)" rx="2" ry="2" _orig_x="671.8" _orig_width="0.2"/>
<text x="759.2489557226397" y="1823.5" _orig_x="674.82"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (26 samples, 0.02%)</title><rect x="932.7067669172932" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(234,61,15)" rx="2" ry="2" _orig_x="743.4" _orig_width="0.3"/>
<text x="935.7067669172932" y="1855.5" _orig_x="746.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.06%)</title><rect x="897.757560568087" y="1781" width="0.6248120300751879" height="15.0" fill="rgb(212,226,43)" rx="2" ry="2" _orig_x="881.2" _orig_width="0.6"/>
<text x="900.757560568087" y="1791.5" _orig_x="884.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="83.21094402673356" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(220,194,53)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1823.5" _orig_x="102.03"/>
</g>
<g>
<title>operator new (15 samples, 0.01%)</title><rect x="469.87468671679204" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(212,130,45)" rx="2" ry="2" _orig_x="555.6" _orig_width="0.2"/>
<text x="472.87468671679204" y="1759.5" _orig_x="558.64"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (28 samples, 0.02%)</title><rect x="592.1136173767753" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(243,34,27)" rx="2" ry="2" _orig_x="605.2" _orig_width="0.3"/>
<text x="595.1136173767753" y="1759.5" _orig_x="608.19"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="10.316207184628293" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(252,65,0)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1951.5" _orig_x="31.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (12 samples, 0.01%)</title><rect x="1159.9331662489556" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(208,225,22)" rx="2" ry="2" _orig_x="835.6" _orig_width="0.1"/>
<text x="1162.9331662489556" y="1887.5" _orig_x="838.62"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (11 samples, 0.01%)</title><rect x="775.2255639097745" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(237,77,18)" rx="2" ry="2" _orig_x="679.5" _orig_width="0.1"/>
<text x="778.2255639097745" y="1855.5" _orig_x="682.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="19.167710944026787" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(254,220,16)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="2015.5" _orig_x="40.48"/>
</g>
<g class="hide">
<title>blink::DOMTimer::DOMTimer (13 samples, 0.01%)</title><rect x="185.15944026733507" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(216,87,18)" rx="2" ry="2" _orig_x="196.9" _orig_width="0.2"/>
<text x="188.15944026733507" y="1503.5" _orig_x="199.95"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (18 samples, 0.02%)</title><rect x="720.5137844611527" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(249,76,54)" rx="2" ry="2" _orig_x="657.3" _orig_width="0.2"/>
<text x="723.5137844611527" y="1791.5" _orig_x="660.28"/>
</g>
<g class="hide">
<title>UserAgent (21 samples, 0.02%)</title><rect x="59.9" y="2069" width="0.2" height="15.0" fill="rgb(245,172,33)" rx="2" ry="2"/>
<text x="62.94" y="2079.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="2005" width="0.1" height="15.0" fill="rgb(248,30,52)" rx="2" ry="2"/>
<text x="13.06" y="2015.5"/>
</g>
<g class="hide">
<title>[libgobject-2.0.so.0.6400.6] (40 samples, 0.03%)</title><rect x="291.2" y="2053" width="0.4" height="15.0" fill="rgb(220,192,21)" rx="2" ry="2"/>
<text x="294.17" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1221" width="2.2909774436090227" height="15.0" fill="rgb(242,196,20)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1231.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="30.518462823726036" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(222,47,46)" rx="2" ry="2" _orig_x="48.4" _orig_width="0.1"/>
<text x="33.51846282372604" y="1887.5" _orig_x="51.36"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (19 samples, 0.02%)</title><rect x="292.92397660818716" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(249,147,51)" rx="2" ry="2" _orig_x="483.8" _orig_width="0.2"/>
<text x="295.92397660818716" y="1759.5" _orig_x="486.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1349" width="0.31240601503759396" height="15.0" fill="rgb(243,159,46)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1359.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.01%)</title><rect x="1164.8621553884711" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(234,49,24)" rx="2" ry="2" _orig_x="837.6" _orig_width="0.1"/>
<text x="1167.8621553884711" y="1903.5" _orig_x="840.63"/>
</g>
<g class="hide">
<title>v8::internal::LookupIterator::NextInternal&lt;false&gt; (39 samples, 0.03%)</title><rect x="192.13650793650797" y="1365" width="0.41654135338345866" height="15.0" fill="rgb(218,33,51)" rx="2" ry="2" _orig_x="203.6" _orig_width="0.4"/>
<text x="195.13650793650797" y="1375.5" _orig_x="206.62"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (15 samples, 0.01%)</title><rect x="357.98663324979105" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(235,225,54)" rx="2" ry="2" _orig_x="510.2" _orig_width="0.1"/>
<text x="360.98663324979105" y="1775.5" _orig_x="513.19"/>
</g>
<g class="hide">
<title>[perf-58119.map] (93 samples, 0.08%)</title><rect x="119.9707184628238" y="1605" width="1.0413533834586466" height="15.0" fill="rgb(225,45,21)" rx="2" ry="2" _orig_x="134.3" _orig_width="1.0"/>
<text x="122.9707184628238" y="1615.5" _orig_x="137.34"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1525" width="2.2909774436090227" height="15.0" fill="rgb(224,193,22)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1535.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (133 samples, 0.11%)</title><rect x="79.00584795321636" y="1733" width="3.2038429406850457" height="15.0" fill="rgb(227,77,50)" rx="2" ry="2" _orig_x="397.0" _orig_width="1.3"/>
<text x="82.00584795321636" y="1743.5" _orig_x="400.02"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1701" width="2.2909774436090227" height="15.0" fill="rgb(225,16,25)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1711.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (67 samples, 0.06%)</title><rect x="318.8692147034253" y="2005" width="0.7289473684210526" height="15.0" fill="rgb(244,45,0)" rx="2" ry="2" _orig_x="325.3" _orig_width="0.7"/>
<text x="321.8692147034253" y="2015.5" _orig_x="328.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (11 samples, 0.01%)</title><rect x="140.61821219715955" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(211,206,5)" rx="2" ry="2" _orig_x="422.0" _orig_width="0.1"/>
<text x="143.61821219715955" y="1775.5" _orig_x="424.97"/>
</g>
<g class="hide">
<title>[perf-58157.map] (148 samples, 0.12%)</title><rect x="123.09477861319974" y="1669" width="1.5620300751879699" height="15.0" fill="rgb(254,9,30)" rx="2" ry="2" _orig_x="137.3" _orig_width="1.5"/>
<text x="126.09477861319974" y="1679.5" _orig_x="140.30"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (39 samples, 0.03%)</title><rect x="512.7568922305765" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(230,116,54)" rx="2" ry="2" _orig_x="573.0" _orig_width="0.3"/>
<text x="515.7568922305765" y="1791.5" _orig_x="575.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (463 samples, 0.39%)</title><rect x="248.0571846282373" y="1909" width="4.7902255639097735" height="15.0" fill="rgb(224,187,27)" rx="2" ry="2" _orig_x="257.3" _orig_width="4.6"/>
<text x="251.0571846282373" y="1919.5" _orig_x="260.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.09%)</title><rect x="342.4038011695907" y="1893" width="1.1454887218045113" height="15.0" fill="rgb(231,128,4)" rx="2" ry="2" _orig_x="347.9" _orig_width="1.1"/>
<text x="345.4038011695907" y="1903.5" _orig_x="350.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,943 samples, 3.32%)</title><rect x="1122.1692147034253" y="1845" width="40.71691729323308" height="15.0" fill="rgb(210,206,49)" rx="2" ry="2" _orig_x="1096.7" _orig_width="39.1"/>
<text x="1125.1692147034253" y="1855.5" _orig_x="1099.72">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="270.3421470342523" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(209,30,24)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1791.5" _orig_x="281.73"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (47 samples, 0.04%)</title><rect x="371.0484544695071" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(218,88,10)" rx="2" ry="2" _orig_x="515.5" _orig_width="0.5"/>
<text x="374.0484544695071" y="1807.5" _orig_x="518.54"/>
</g>
<g class="hide">
<title>[perf-32996.map] (66 samples, 0.06%)</title><rect x="18.6" y="1669" width="0.7" height="15.0" fill="rgb(248,153,36)" rx="2" ry="2"/>
<text x="21.61" y="1679.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1301" width="0.31240601503759396" height="15.0" fill="rgb(242,11,48)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1311.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>nvidia_isr (15 samples, 0.01%)</title><rect x="1162.5737259816208" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(228,16,53)" rx="2" ry="2" _orig_x="1135.5" _orig_width="0.1"/>
<text x="1165.5737259816208" y="1839.5" _orig_x="1138.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.07%)</title><rect x="890.9887635756057" y="1701" width="0.937218045112782" height="15.0" fill="rgb(210,167,26)" rx="2" ry="2" _orig_x="874.7" _orig_width="0.9"/>
<text x="893.9887635756057" y="1711.5" _orig_x="877.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="303.1447786131997" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(215,7,38)" rx="2" ry="2" _orig_x="310.2" _orig_width="0.3"/>
<text x="306.1447786131997" y="1791.5" _orig_x="313.16"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (30 samples, 0.03%)</title><rect x="120.6558061821219" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(234,63,47)" rx="2" ry="2" _orig_x="413.9" _orig_width="0.3"/>
<text x="123.6558061821219" y="1791.5" _orig_x="416.95"/>
</g>
<g class="hide">
<title>[perf-58157.map] (214 samples, 0.18%)</title><rect x="122.46996658312452" y="1749" width="2.186842105263158" height="15.0" fill="rgb(252,6,31)" rx="2" ry="2" _orig_x="136.7" _orig_width="2.1"/>
<text x="125.46996658312452" y="1759.5" _orig_x="139.66"/>
</g>
<g class="hide">
<title>virtual thunk to std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (18 samples, 0.02%)</title><rect x="12.711319966583181" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(230,58,31)" rx="2" ry="2" _orig_x="31.3" _orig_width="0.2"/>
<text x="15.711319966583181" y="2047.5" _orig_x="34.32"/>
</g>
<g class="hide">
<title>__errno_location (12 samples, 0.01%)</title><rect x="235.1444026733501" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(218,76,20)" rx="2" ry="2" _orig_x="244.9" _orig_width="0.1"/>
<text x="238.1444026733501" y="2047.5" _orig_x="247.89"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (35 samples, 0.03%)</title><rect x="939.8538011695904" y="1829" width="0.985797827903091" height="15.0" fill="rgb(238,52,5)" rx="2" ry="2" _orig_x="746.3" _orig_width="0.4"/>
<text x="942.8538011695904" y="1839.5" _orig_x="749.32"/>
</g>
<g class="hide">
<title>[perf-58145.map] (107 samples, 0.09%)</title><rect x="127.67673350041775" y="1541" width="1.0413533834586466" height="15.0" fill="rgb(246,15,21)" rx="2" ry="2" _orig_x="141.7" _orig_width="1.0"/>
<text x="130.67673350041775" y="1551.5" _orig_x="144.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(239,175,44)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="2015.5" _orig_x="329.84"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (41 samples, 0.03%)</title><rect x="131.7460317460317" y="1749" width="0.985797827903091" height="15.0" fill="rgb(253,179,28)" rx="2" ry="2" _orig_x="418.4" _orig_width="0.4"/>
<text x="134.7460317460317" y="1759.5" _orig_x="421.44"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="373" width="0.31240601503759396" height="15.0" fill="rgb(253,81,7)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="383.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="22.1" y="1813" width="0.1" height="15.0" fill="rgb(236,89,33)" rx="2" ry="2"/>
<text x="25.06" y="1823.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="157.86967418546365" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(213,39,19)" rx="2" ry="2" _orig_x="429.0" _orig_width="0.2"/>
<text x="160.86967418546365" y="1711.5" _orig_x="431.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (226 samples, 0.19%)</title><rect x="1160.0744778613198" y="1701" width="2.3951127819548867" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" _orig_x="1133.1" _orig_width="2.3"/>
<text x="1163.0744778613198" y="1711.5" _orig_x="1136.14"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (67 samples, 0.06%)</title><rect x="1147.3642439431912" y="1829" width="1.7251461988304093" height="15.0" fill="rgb(237,187,20)" rx="2" ry="2" _orig_x="830.5" _orig_width="0.7"/>
<text x="1150.3642439431912" y="1839.5" _orig_x="833.51"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="597" width="0.20827067669172933" height="15.0" fill="rgb(235,9,39)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="607.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>node::CallbackScope::~CallbackScope (36 samples, 0.03%)</title><rect x="121.1162071846283" y="1781" width="0.41654135338345866" height="15.0" fill="rgb(235,8,47)" rx="2" ry="2" _orig_x="135.4" _orig_width="0.4"/>
<text x="124.1162071846283" y="1791.5" _orig_x="138.43"/>
</g>
<g class="hide">
<title>base::(anonymous namespace)::ThreadFunc (758 samples, 0.64%)</title><rect x="32.60116959064332" y="2037" width="7.914285714285714" height="15.0" fill="rgb(227,200,6)" rx="2" ry="2" _orig_x="50.4" _orig_width="7.6"/>
<text x="35.60116959064332" y="2047.5" _orig_x="53.45"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::~vector (21 samples, 0.02%)</title><rect x="1182.6065162907266" y="1957" width="0.4928989139515455" height="15.0" fill="rgb(207,130,51)" rx="2" ry="2" _orig_x="844.8" _orig_width="0.2"/>
<text x="1185.6065162907266" y="1967.5" _orig_x="847.84"/>
</g>
<g class="hide">
<title>[chrome] (85 samples, 0.07%)</title><rect x="86.12673350041776" y="1813" width="0.937218045112782" height="15.0" fill="rgb(243,15,12)" rx="2" ry="2" _orig_x="101.8" _orig_width="0.9"/>
<text x="89.12673350041776" y="1823.5" _orig_x="104.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="322.930492898914" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(236,141,22)" rx="2" ry="2" _orig_x="329.2" _orig_width="0.2"/>
<text x="325.930492898914" y="1967.5" _orig_x="332.16"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (19 samples, 0.02%)</title><rect x="1135.0417710944025" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(210,148,35)" rx="2" ry="2" _orig_x="825.5" _orig_width="0.2"/>
<text x="1138.0417710944025" y="1791.5" _orig_x="828.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (373 samples, 0.31%)</title><rect x="22.916583124477917" y="1989" width="3.8530075187969928" height="15.0" fill="rgb(225,131,14)" rx="2" ry="2" _orig_x="41.1" _orig_width="3.7"/>
<text x="25.916583124477917" y="1999.5" _orig_x="44.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="28.223024468511806" y="1893" width="0.4733253108704372" height="15.0" fill="rgb(213,35,34)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1903.5" _orig_x="371.84"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (23 samples, 0.02%)</title><rect x="675.4135338345865" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(238,205,4)" rx="2" ry="2" _orig_x="639.0" _orig_width="0.2"/>
<text x="678.4135338345865" y="1727.5" _orig_x="641.96"/>
</g>
<g>
<title>malloc (16 samples, 0.01%)</title><rect x="860.9899749373433" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(235,184,11)" rx="2" ry="2" _orig_x="714.3" _orig_width="0.1"/>
<text x="863.9899749373433" y="1855.5" _orig_x="717.27"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (46 samples, 0.04%)</title><rect x="808.9891395154553" y="1733" width="0.985797827903091" height="15.0" fill="rgb(210,85,53)" rx="2" ry="2" _orig_x="693.2" _orig_width="0.4"/>
<text x="811.9891395154553" y="1743.5" _orig_x="696.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="19.6" y="1765" width="0.2" height="15.0" fill="rgb(220,169,48)" rx="2" ry="2"/>
<text x="22.61" y="1775.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (21 samples, 0.02%)</title><rect x="184.1180868838764" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(222,40,44)" rx="2" ry="2" _orig_x="195.9" _orig_width="0.3"/>
<text x="187.1180868838764" y="1391.5" _orig_x="198.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (737 samples, 0.62%)</title><rect x="920.8756056808688" y="1733" width="7.7060150375939855" height="15.0" fill="rgb(241,134,24)" rx="2" ry="2" _orig_x="903.4" _orig_width="7.4"/>
<text x="923.8756056808688" y="1743.5" _orig_x="906.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(227,129,8)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="1983.5" _orig_x="918.65"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (15 samples, 0.01%)</title><rect x="731.6040100250625" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(246,178,18)" rx="2" ry="2" _orig_x="661.8" _orig_width="0.2"/>
<text x="734.6040100250625" y="1855.5" _orig_x="664.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="274.9241019214704" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(211,212,25)" rx="2" ry="2" _orig_x="283.1" _orig_width="0.2"/>
<text x="277.9241019214704" y="1951.5" _orig_x="286.09"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (16 samples, 0.01%)</title><rect x="819.5864661654134" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(239,138,18)" rx="2" ry="2" _orig_x="697.5" _orig_width="0.1"/>
<text x="822.5864661654134" y="1775.5" _orig_x="700.46"/>
</g>
<g class="hide">
<title>blink::V8EventInit::ToImpl (18 samples, 0.02%)</title><rect x="164.43650793650798" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(220,92,42)" rx="2" ry="2" _orig_x="177.0" _orig_width="0.1"/>
<text x="167.43650793650798" y="1455.5" _orig_x="179.97"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (35 samples, 0.03%)</title><rect x="856.8003341687552" y="1765" width="0.985797827903091" height="15.0" fill="rgb(235,26,30)" rx="2" ry="2" _orig_x="712.6" _orig_width="0.4"/>
<text x="859.8003341687552" y="1775.5" _orig_x="715.60"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (254 samples, 0.21%)</title><rect x="1037.2013366750207" y="1813" width="6.407685881370091" height="15.0" fill="rgb(239,142,42)" rx="2" ry="2" _orig_x="785.8" _orig_width="2.6"/>
<text x="1040.2013366750207" y="1823.5" _orig_x="788.83"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (21 samples, 0.02%)</title><rect x="765.8604845446952" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(236,216,53)" rx="2" ry="2" _orig_x="675.7" _orig_width="0.2"/>
<text x="768.8604845446952" y="1791.5" _orig_x="678.74"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (14 samples, 0.01%)</title><rect x="286.51629072681703" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(214,199,0)" rx="2" ry="2" _orig_x="481.2" _orig_width="0.1"/>
<text x="289.51629072681703" y="1791.5" _orig_x="484.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="354.37936507936513" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(236,205,45)" rx="2" ry="2" _orig_x="359.4" _orig_width="0.7"/>
<text x="357.37936507936513" y="2031.5" _orig_x="362.36"/>
</g>
<g class="hide">
<title>v8::internal::ConcurrentMarkingVisitor::VisitPointersInSnapshot (50 samples, 0.04%)</title><rect x="38.64101921470348" y="1893" width="0.5206766917293233" height="15.0" fill="rgb(215,97,41)" rx="2" ry="2" _orig_x="56.2" _orig_width="0.5"/>
<text x="41.64101921470348" y="1903.5" _orig_x="59.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="883.07447786132" y="1749" width="0.7289473684210526" height="15.0" fill="rgb(228,132,51)" rx="2" ry="2" _orig_x="867.1" _orig_width="0.7"/>
<text x="886.07447786132" y="1759.5" _orig_x="870.07"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (22 samples, 0.02%)</title><rect x="1091.173767752715" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" _orig_x="807.7" _orig_width="0.2"/>
<text x="1094.173767752715" y="1887.5" _orig_x="810.68"/>
</g>
<g class="hide">
<title>Builtins_CallFunction_ReceiverIsAny (29 samples, 0.02%)</title><rect x="180.88989139515462" y="1589" width="0.20827067669172933" height="15.0" fill="rgb(227,51,32)" rx="2" ry="2" _orig_x="192.8" _orig_width="0.2"/>
<text x="183.88989139515462" y="1599.5" _orig_x="195.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="11.565831244778668" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(205,171,7)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="1999.5" _orig_x="33.20"/>
</g>
<g class="hide">
<title>v8::internal::Builtin_Impl_HandleApiCall (116 samples, 0.10%)</title><rect x="163.91583124477867" y="1541" width="1.1454887218045113" height="15.0" fill="rgb(205,77,27)" rx="2" ry="2" _orig_x="176.5" _orig_width="1.1"/>
<text x="166.91583124477867" y="1551.5" _orig_x="179.48"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1269" width="0.31240601503759396" height="15.0" fill="rgb(225,9,15)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1279.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="326.47109440267343" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(235,35,50)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1871.5" _orig_x="335.65"/>
</g>
<g class="hide">
<title>[perf-58119.map] (23 samples, 0.02%)</title><rect x="112.2647034252298" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(223,16,9)" rx="2" ry="2" _orig_x="126.9" _orig_width="0.2"/>
<text x="115.2647034252298" y="1567.5" _orig_x="129.87"/>
</g>
<g class="hide">
<title>base::TaskAnnotator::RunTask (635 samples, 0.53%)</title><rect x="33.954928989139574" y="1925" width="6.560526315789473" height="15.0" fill="rgb(206,68,40)" rx="2" ry="2" _orig_x="51.7" _orig_width="6.3"/>
<text x="36.954928989139574" y="1935.5" _orig_x="54.66"/>
</g>
<g class="hide">
<title>[unknown] (231 samples, 0.19%)</title><rect x="49.57522974101927" y="1925" width="2.3951127819548867" height="15.0" fill="rgb(251,87,54)" rx="2" ry="2" _orig_x="66.7" _orig_width="2.3"/>
<text x="52.57522974101927" y="1935.5" _orig_x="69.72"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.01%)</title><rect x="15.835380116959117" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(211,221,3)" rx="2" ry="2" _orig_x="34.3" _orig_width="0.1"/>
<text x="18.835380116959115" y="1919.5" _orig_x="37.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.09%)</title><rect x="54.36545530492904" y="1829" width="1.1454887218045113" height="15.0" fill="rgb(241,59,19)" rx="2" ry="2" _orig_x="71.3" _orig_width="1.1"/>
<text x="57.36545530492904" y="1839.5" _orig_x="74.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="313.6624477861321" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(241,178,5)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1935.5" _orig_x="323.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (384 samples, 0.32%)</title><rect x="61.96733500417716" y="2005" width="3.957142857142857" height="15.0" fill="rgb(242,61,39)" rx="2" ry="2" _orig_x="78.6" _orig_width="3.8"/>
<text x="64.96733500417716" y="2015.5" _orig_x="81.59"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (21 samples, 0.02%)</title><rect x="896.2" y="2053" width="0.2" height="15.0" fill="rgb(241,140,47)" rx="2" ry="2"/>
<text x="899.23" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (69 samples, 0.06%)</title><rect x="127.98913951545536" y="1493" width="0.7289473684210526" height="15.0" fill="rgb(240,62,33)" rx="2" ry="2" _orig_x="142.0" _orig_width="0.7"/>
<text x="130.98913951545535" y="1503.5" _orig_x="145.01"/>
</g>
<g class="hide">
<title>[chrome] (130 samples, 0.11%)</title><rect x="85.81432748538018" y="2005" width="1.3537593984962406" height="15.0" fill="rgb(231,38,7)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.3"/>
<text x="88.81432748538018" y="2015.5" _orig_x="104.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="10.9" y="1957" width="0.3" height="15.0" fill="rgb(224,185,33)" rx="2" ry="2"/>
<text x="13.86" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (62 samples, 0.05%)</title><rect x="275.75718462823727" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(221,1,51)" rx="2" ry="2" _orig_x="283.9" _orig_width="0.7"/>
<text x="278.75718462823727" y="2031.5" _orig_x="286.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="96.85267335004181" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(245,165,29)" rx="2" ry="2" _orig_x="112.1" _orig_width="0.2"/>
<text x="99.85267335004181" y="1871.5" _orig_x="115.13"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (31 samples, 0.03%)</title><rect x="718.5421888053467" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(227,78,39)" rx="2" ry="2" _orig_x="656.5" _orig_width="0.3"/>
<text x="721.5421888053467" y="1791.5" _orig_x="659.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="343.65342522974106" y="1973" width="0.8330827067669173" height="15.0" fill="rgb(252,189,37)" rx="2" ry="2" _orig_x="349.1" _orig_width="0.8"/>
<text x="346.65342522974106" y="1983.5" _orig_x="352.14"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (57 samples, 0.05%)</title><rect x="938.6215538847116" y="1829" width="1.2322472848788637" height="15.0" fill="rgb(225,97,54)" rx="2" ry="2" _orig_x="745.8" _orig_width="0.5"/>
<text x="941.6215538847116" y="1839.5" _orig_x="748.76"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (33 samples, 0.03%)</title><rect x="912.0050125313282" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(232,3,48)" rx="2" ry="2" _orig_x="735.0" _orig_width="0.3"/>
<text x="915.0050125313282" y="1839.5" _orig_x="738.01"/>
</g>
<g class="hide">
<title>start_thread (105 samples, 0.09%)</title><rect x="14.0" y="2053" width="1.1" height="15.0" fill="rgb(254,175,0)" rx="2" ry="2"/>
<text x="17.02" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(253,13,37)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1919.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (831 samples, 0.70%)</title><rect x="174.8746867167919" y="1765" width="20.45530492898914" height="15.0" fill="rgb(222,38,47)" rx="2" ry="2" _orig_x="435.9" _orig_width="8.3"/>
<text x="177.8746867167919" y="1775.5" _orig_x="438.92"/>
</g>
<g>
<title>BPlusTreeInternalPage&lt;GenericKey&lt;32ul&gt;, int, GenericComparator&lt;32ul&gt; &gt;::Lookup (3,350 samples, 2.82%)</title><rect x="692.6649958228905" y="1909" width="81.82121971595656" height="15.0" fill="rgb(217,224,6)" rx="2" ry="2" _orig_x="646.0" _orig_width="33.2"/>
<text x="695.6649958228905" y="1919.5" _orig_x="648.98">BPlusTreeI..</text>
</g>
<g>
<title>BPlusTreeInternalPage&lt;GenericKey&lt;32ul&gt;, int, GenericComparator&lt;32ul&gt; &gt;::Lookup (3,184 samples, 2.68%)</title><rect x="244.86633249791146" y="1893" width="77.87802840434419" height="15.0" fill="rgb(252,150,14)" rx="2" ry="2" _orig_x="464.3" _orig_width="31.6"/>
<text x="247.86633249791146" y="1903.5" _orig_x="467.32">BPlusTree..</text>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (14 samples, 0.01%)</title><rect x="16.2" y="2053" width="0.1" height="15.0" fill="rgb(227,30,32)" rx="2" ry="2"/>
<text x="19.18" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="41.97335004177115" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(224,60,21)" rx="2" ry="2" _orig_x="59.4" _orig_width="0.2"/>
<text x="44.97335004177115" y="1903.5" _orig_x="62.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="11.2" y="2021" width="0.2" height="15.0" fill="rgb(240,134,44)" rx="2" ry="2"/>
<text x="14.20" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="2037" width="1.7703007518796992" height="15.0" fill="rgb(248,133,36)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="2047.5" _orig_x="292.42"/>
</g>
<g class="hide">
<title>[perf-3698.map] (21 samples, 0.02%)</title><rect x="286.8996658312449" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(241,172,25)" rx="2" ry="2" _orig_x="294.6" _orig_width="0.2"/>
<text x="289.8996658312449" y="1935.5" _orig_x="297.61"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (61 samples, 0.05%)</title><rect x="221.70008354218874" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(211,62,0)" rx="2" ry="2" _orig_x="454.9" _orig_width="0.6"/>
<text x="224.70008354218874" y="1823.5" _orig_x="457.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="328.65793650793654" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(220,85,28)" rx="2" ry="2" _orig_x="334.7" _orig_width="0.3"/>
<text x="331.65793650793654" y="1967.5" _orig_x="337.69"/>
</g>
<g class="hide">
<title>blink::TimerBase::SetNextFireTime (154 samples, 0.13%)</title><rect x="204.63274853801175" y="1749" width="1.5620300751879699" height="15.0" fill="rgb(239,138,34)" rx="2" ry="2" _orig_x="215.6" _orig_width="1.5"/>
<text x="207.63274853801175" y="1759.5" _orig_x="218.62"/>
</g>
<g class="hide">
<title>[code] (306 samples, 0.26%)</title><rect x="125.59402673350046" y="1893" width="3.1240601503759398" height="15.0" fill="rgb(219,167,30)" rx="2" ry="2" _orig_x="139.7" _orig_width="3.0"/>
<text x="128.59402673350047" y="1903.5" _orig_x="142.71"/>
</g>
<g class="hide">
<title>gmain (145 samples, 0.12%)</title><rect x="287.8" y="2069" width="1.4" height="15.0" fill="rgb(246,126,46)" rx="2" ry="2"/>
<text x="290.77" y="2079.5"/>
</g>
<g class="hide">
<title>[perf-4309.map] (19 samples, 0.02%)</title><rect x="10.1" y="1925" width="0.1" height="15.0" fill="rgb(246,211,6)" rx="2" ry="2"/>
<text x="13.06" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="320.53538011695906" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(214,78,21)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1871.5" _orig_x="329.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (368 samples, 0.31%)</title><rect x="888.0729741019214" y="1797" width="3.8530075187969928" height="15.0" fill="rgb(210,67,5)" rx="2" ry="2" _orig_x="871.9" _orig_width="3.7"/>
<text x="891.0729741019214" y="1807.5" _orig_x="874.92"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (24 samples, 0.02%)</title><rect x="769.3107769423559" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(238,200,44)" rx="2" ry="2" _orig_x="677.1" _orig_width="0.2"/>
<text x="772.3107769423559" y="1855.5" _orig_x="680.09"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (930 samples, 0.78%)</title><rect x="411.21971595655793" y="1845" width="22.67335004177109" height="15.0" fill="rgb(213,56,2)" rx="2" ry="2" _orig_x="531.8" _orig_width="9.2"/>
<text x="414.21971595655793" y="1855.5" _orig_x="534.76"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(243,17,38)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1967.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="877.8677109440268" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(223,131,44)" rx="2" ry="2" _orig_x="862.1" _orig_width="0.2"/>
<text x="880.8677109440268" y="2015.5" _orig_x="865.13"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (12 samples, 0.01%)</title><rect x="921.123642439432" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(227,70,27)" rx="2" ry="2" _orig_x="738.7" _orig_width="0.1"/>
<text x="924.123642439432" y="1791.5" _orig_x="741.70"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1109" width="0.31240601503759396" height="15.0" fill="rgb(238,181,3)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1119.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(207,31,43)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1999.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (49 samples, 0.04%)</title><rect x="67.17627401837925" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(225,112,17)" rx="2" ry="2" _orig_x="392.2" _orig_width="0.5"/>
<text x="70.17627401837925" y="1807.5" _orig_x="395.23"/>
</g>
<g>
<title>std::forward&lt;void*&amp;&gt; (14 samples, 0.01%)</title><rect x="593.8387635756055" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(230,42,8)" rx="2" ry="2" _orig_x="605.9" _orig_width="0.2"/>
<text x="596.8387635756055" y="1759.5" _orig_x="608.93"/>
</g>
<g class="hide">
<title>blink::TimerBase::SetNextFireTime (14 samples, 0.01%)</title><rect x="165.68613199665836" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(251,6,9)" rx="2" ry="2" _orig_x="178.2" _orig_width="0.1"/>
<text x="168.68613199665836" y="1775.5" _orig_x="181.18"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (17 samples, 0.01%)</title><rect x="455.33416875522147" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(217,119,8)" rx="2" ry="2" _orig_x="549.7" _orig_width="0.2"/>
<text x="458.33416875522147" y="1743.5" _orig_x="552.71"/>
</g>
<g class="hide">
<title>__libc_read (13 samples, 0.01%)</title><rect x="121.53274853801176" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(228,153,36)" rx="2" ry="2" _orig_x="135.8" _orig_width="0.2"/>
<text x="124.53274853801176" y="1823.5" _orig_x="138.84"/>
</g>
<g class="hide">
<title>QMovie::updated (26 samples, 0.02%)</title><rect x="229.31282372598167" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(230,5,16)" rx="2" ry="2" _orig_x="239.3" _orig_width="0.2"/>
<text x="232.31282372598167" y="2015.5" _orig_x="242.28"/>
</g>
<g>
<title>MemHeap::MemHeap (12 samples, 0.01%)</title><rect x="796.9131161236423" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(245,80,12)" rx="2" ry="2" _orig_x="688.3" _orig_width="0.2"/>
<text x="799.9131161236423" y="1855.5" _orig_x="691.33"/>
</g>
<g class="hide">
<title>[perf-4309.map] (19 samples, 0.02%)</title><rect x="10.1" y="1893" width="0.1" height="15.0" fill="rgb(236,212,0)" rx="2" ry="2"/>
<text x="13.06" y="1903.5"/>
</g>
<g class="hide">
<title>blink::Document::CanExecuteScripts (46 samples, 0.04%)</title><rect x="176.72447786132003" y="1717" width="0.5206766917293233" height="15.0" fill="rgb(231,89,23)" rx="2" ry="2" _orig_x="188.8" _orig_width="0.5"/>
<text x="179.72447786132003" y="1727.5" _orig_x="191.81"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1493" width="0.31240601503759396" height="15.0" fill="rgb(208,66,42)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1503.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="693" width="0.31240601503759396" height="15.0" fill="rgb(208,121,21)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="703.5" _orig_x="48.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (50 samples, 0.04%)</title><rect x="135.6892230576441" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(233,222,16)" rx="2" ry="2" _orig_x="420.0" _orig_width="0.5"/>
<text x="138.6892230576441" y="1743.5" _orig_x="422.99"/>
</g>
<g class="hide">
<title>[perf-58145.map] (191 samples, 0.16%)</title><rect x="126.84365079365085" y="1669" width="1.874436090225564" height="15.0" fill="rgb(221,107,27)" rx="2" ry="2" _orig_x="140.9" _orig_width="1.8"/>
<text x="129.84365079365085" y="1679.5" _orig_x="143.85"/>
</g>
<g class="hide">
<title>base::MessagePumpDefault::Run (490 samples, 0.41%)</title><rect x="162.5620718462824" y="1845" width="5.102631578947369" height="15.0" fill="rgb(228,158,36)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1855.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[chrome] (122 samples, 0.10%)</title><rect x="85.81432748538018" y="1957" width="1.2496240601503759" height="15.0" fill="rgb(233,228,23)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.2"/>
<text x="88.81432748538018" y="1967.5" _orig_x="104.52"/>
</g>
<g class="hide">
<title>[perf-3698.map] (11 samples, 0.01%)</title><rect x="287.0038011695907" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(207,156,2)" rx="2" ry="2" _orig_x="294.7" _orig_width="0.1"/>
<text x="290.0038011695907" y="1903.5" _orig_x="297.71"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="389" width="0.31240601503759396" height="15.0" fill="rgb(253,93,21)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="399.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="270.3421470342523" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(244,136,19)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1887.5" _orig_x="281.71"/>
</g>
<g>
<title>Schema::GetColumn (18 samples, 0.02%)</title><rect x="574.8621553884713" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(253,130,8)" rx="2" ry="2" _orig_x="598.2" _orig_width="0.2"/>
<text x="577.8621553884713" y="1839.5" _orig_x="601.20"/>
</g>
<g class="hide">
<title>[perf-15821.map] (48 samples, 0.04%)</title><rect x="92.7913951545531" y="1621" width="0.5206766917293233" height="15.0" fill="rgb(225,226,8)" rx="2" ry="2" _orig_x="108.2" _orig_width="0.5"/>
<text x="95.7913951545531" y="1631.5" _orig_x="111.18"/>
</g>
<g class="hide">
<title>pa_rtpoll_run (31 samples, 0.03%)</title><rect x="61.342522974101975" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(233,100,10)" rx="2" ry="2" _orig_x="78.0" _orig_width="0.3"/>
<text x="64.34252297410197" y="2031.5" _orig_x="80.96"/>
</g>
<g class="hide">
<title>[unknown] (8,113 samples, 6.82%)</title><rect x="182.5" y="2053" width="80.5" height="15.0" fill="rgb(218,3,8)" rx="2" ry="2"/>
<text x="185.47" y="2063.5">[unknown]</text>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1317" width="2.2909774436090227" height="15.0" fill="rgb(205,147,39)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1327.5" _orig_x="69.82"/>
</g>
<g>
<title>operator delete (16 samples, 0.01%)</title><rect x="501.66666666666663" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(245,113,17)" rx="2" ry="2" _orig_x="568.5" _orig_width="0.1"/>
<text x="504.66666666666663" y="1839.5" _orig_x="571.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (325 samples, 0.27%)</title><rect x="880.3669590643275" y="1845" width="3.4364661654135333" height="15.0" fill="rgb(217,90,48)" rx="2" ry="2" _orig_x="864.5" _orig_width="3.3"/>
<text x="883.3669590643275" y="1855.5" _orig_x="867.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="108.72410192147039" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(220,149,4)" rx="2" ry="2" _orig_x="123.5" _orig_width="0.2"/>
<text x="111.72410192147039" y="1919.5" _orig_x="126.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="321.4725981620719" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(247,103,28)" rx="2" ry="2" _orig_x="327.8" _orig_width="0.3"/>
<text x="324.4725981620719" y="1887.5" _orig_x="330.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.06%)</title><rect x="160.79177109440272" y="1845" width="0.7289473684210526" height="15.0" fill="rgb(217,114,22)" rx="2" ry="2" _orig_x="173.5" _orig_width="0.7"/>
<text x="163.79177109440272" y="1855.5" _orig_x="176.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="303.2489139515456" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(234,50,29)" rx="2" ry="2" _orig_x="310.3" _orig_width="0.2"/>
<text x="306.2489139515456" y="1727.5" _orig_x="313.30"/>
</g>
<g>
<title>[libminisql_shared.so] (22 samples, 0.02%)</title><rect x="1137.0133667502087" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(229,199,54)" rx="2" ry="2" _orig_x="826.3" _orig_width="0.2"/>
<text x="1140.0133667502087" y="1871.5" _orig_x="829.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(225,3,31)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="1983.5" _orig_x="329.84"/>
</g>
<g class="hide">
<title>[unknown] (16 samples, 0.01%)</title><rect x="234.20718462823731" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(252,45,23)" rx="2" ry="2" _orig_x="244.0" _orig_width="0.2"/>
<text x="237.20718462823731" y="1999.5" _orig_x="247.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="1957" width="0.2" height="15.0" fill="rgb(244,122,10)" rx="2" ry="2"/>
<text x="18.74" y="1967.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (13 samples, 0.01%)</title><rect x="393.9682539682538" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(236,108,27)" rx="2" ry="2" _orig_x="524.8" _orig_width="0.1"/>
<text x="396.9682539682538" y="1743.5" _orig_x="527.80"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (67 samples, 0.06%)</title><rect x="532.4728487886382" y="1845" width="1.7251461988304093" height="15.0" fill="rgb(236,63,7)" rx="2" ry="2" _orig_x="581.0" _orig_width="0.7"/>
<text x="535.4728487886382" y="1855.5" _orig_x="584.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="320.53538011695906" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(216,220,12)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1839.5" _orig_x="329.86"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (11 samples, 0.01%)</title><rect x="327.61658312447787" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(244,41,42)" rx="2" ry="2" _orig_x="333.7" _orig_width="0.1"/>
<text x="330.61658312447787" y="2047.5" _orig_x="336.70"/>
</g>
<g class="hide">
<title>sem_post@@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="119.24177109440272" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1855.5" _orig_x="136.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (250 samples, 0.21%)</title><rect x="158.91733500417715" y="1909" width="2.6033834586466167" height="15.0" fill="rgb(226,141,37)" rx="2" ry="2" _orig_x="171.7" _orig_width="2.5"/>
<text x="161.91733500417715" y="1919.5" _orig_x="174.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(206,5,48)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="1967.5" _orig_x="329.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="130.8007936507937" y="1477" width="0.20827067669172933" height="15.0" fill="rgb(207,15,9)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1487.5" _orig_x="147.66"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Insert (4,900 samples, 4.12%)</title><rect x="322.74436090225555" y="1893" width="120.02088554720135" height="15.0" fill="rgb(209,159,45)" rx="2" ry="2" _orig_x="495.9" _orig_width="48.7"/>
<text x="325.74436090225555" y="1903.5" _orig_x="498.94">BPlusTreeLeafPa..</text>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1509" width="2.2909774436090227" height="15.0" fill="rgb(207,58,47)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1519.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (11 samples, 0.01%)</title><rect x="228.3542188805347" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(219,112,24)" rx="2" ry="2" _orig_x="457.6" _orig_width="0.1"/>
<text x="231.3542188805347" y="1775.5" _orig_x="460.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.06%)</title><rect x="352.81733500417715" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(207,103,35)" rx="2" ry="2" _orig_x="357.9" _orig_width="0.7"/>
<text x="355.81733500417715" y="1983.5" _orig_x="360.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.12%)</title><rect x="54.05304928989145" y="1909" width="1.4578947368421051" height="15.0" fill="rgb(208,6,20)" rx="2" ry="2" _orig_x="71.0" _orig_width="1.4"/>
<text x="57.05304928989145" y="1919.5" _orig_x="73.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (943 samples, 0.79%)</title><rect x="918.7928989139516" y="1781" width="9.788721804511278" height="15.0" fill="rgb(241,69,45)" rx="2" ry="2" _orig_x="901.4" _orig_width="9.4"/>
<text x="921.7928989139516" y="1791.5" _orig_x="904.41"/>
</g>
<g class="hide">
<title>base::RunLoop::Run (75 samples, 0.06%)</title><rect x="243.0586883876358" y="1973" width="0.8330827067669173" height="15.0" fill="rgb(245,151,35)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="1983.5" _orig_x="255.52"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (632 samples, 0.53%)</title><rect x="147.0258980785297" y="1829" width="15.526315789473683" height="15.0" fill="rgb(250,108,47)" rx="2" ry="2" _orig_x="424.6" _orig_width="6.3"/>
<text x="150.0258980785297" y="1839.5" _orig_x="427.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(224,75,29)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1999.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>CefExecuteProcess (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1973" width="55.81654135338346" height="15.0" fill="rgb(205,175,43)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1983.5" _orig_x="185.47">CefExecuteProcess </text>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (41 samples, 0.03%)</title><rect x="1111.6290726817042" y="1845" width="0.985797827903091" height="15.0" fill="rgb(227,199,30)" rx="2" ry="2" _orig_x="816.0" _orig_width="0.4"/>
<text x="1114.6290726817042" y="1855.5" _orig_x="818.97"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (72 samples, 0.06%)</title><rect x="827.9657477025897" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(241,127,15)" rx="2" ry="2" _orig_x="700.9" _orig_width="0.7"/>
<text x="830.9657477025897" y="1759.5" _orig_x="703.90"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="1925" width="0.5" height="15.0" fill="rgb(239,205,14)" rx="2" ry="2"/>
<text x="17.63" y="1935.5"/>
</g>
<g>
<title>MemHeap::~MemHeap (11 samples, 0.01%)</title><rect x="490.8228905597327" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(225,153,44)" rx="2" ry="2" _orig_x="564.1" _orig_width="0.2"/>
<text x="493.8228905597327" y="1807.5" _orig_x="567.15"/>
</g>
<g class="hide">
<title>[code] (229 samples, 0.19%)</title><rect x="17.2" y="1845" width="2.3" height="15.0" fill="rgb(235,129,53)" rx="2" ry="2"/>
<text x="20.18" y="1855.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (16 samples, 0.01%)</title><rect x="902.8863826232246" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(233,79,25)" rx="2" ry="2" _orig_x="731.3" _orig_width="0.2"/>
<text x="905.8863826232246" y="1823.5" _orig_x="734.33"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Backend::run (1,538 samples, 1.29%)</title><rect x="145.5880116959065" y="2037" width="15.932706766917294" height="15.0" fill="rgb(239,22,29)" rx="2" ry="2" _orig_x="158.9" _orig_width="15.3"/>
<text x="148.5880116959065" y="2047.5" _orig_x="161.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="97.78989139515461" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(244,209,9)" rx="2" ry="2" _orig_x="113.0" _orig_width="0.2"/>
<text x="100.78989139515461" y="1919.5" _orig_x="115.99"/>
</g>
<g class="hide">
<title>blink::probe::AsyncTask::AsyncTask (63 samples, 0.05%)</title><rect x="202.133500417711" y="1733" width="0.7289473684210526" height="15.0" fill="rgb(251,1,7)" rx="2" ry="2" _orig_x="213.2" _orig_width="0.7"/>
<text x="205.133500417711" y="1743.5" _orig_x="216.23"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="98.31056808688393" y="1925" width="1.4578947368421051" height="15.0" fill="rgb(219,91,42)" rx="2" ry="2" _orig_x="113.5" _orig_width="1.4"/>
<text x="101.31056808688393" y="1935.5" _orig_x="116.47"/>
</g>
<g>
<title>Type::GetTypeSize (21 samples, 0.02%)</title><rect x="963.7593984962406" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(254,211,41)" rx="2" ry="2" _orig_x="756.0" _orig_width="0.2"/>
<text x="966.7593984962406" y="1855.5" _orig_x="759.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="161.62485380116965" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(242,109,41)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1903.5" _orig_x="177.34"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1253" width="0.20827067669172933" height="15.0" fill="rgb(238,44,35)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1263.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="121.63688387635762" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(250,40,33)" rx="2" ry="2" _orig_x="135.9" _orig_width="0.1"/>
<text x="124.63688387635762" y="1743.5" _orig_x="138.85"/>
</g>
<g class="hide">
<title>[chrome] (12 samples, 0.01%)</title><rect x="11.7" y="1637" width="0.1" height="15.0" fill="rgb(234,11,0)" rx="2" ry="2"/>
<text x="14.70" y="1647.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (18 samples, 0.02%)</title><rect x="654.4653299916457" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(220,206,16)" rx="2" ry="2" _orig_x="630.5" _orig_width="0.2"/>
<text x="657.4653299916457" y="1791.5" _orig_x="633.47"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (4,334 samples, 3.64%)</title><rect x="790.751879699248" y="1877" width="105.97326649958228" height="15.0" fill="rgb(217,128,32)" rx="2" ry="2" _orig_x="685.8" _orig_width="43.0"/>
<text x="793.751879699248" y="1887.5" _orig_x="688.81">GenericKey&lt;32..</text>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (115 samples, 0.10%)</title><rect x="529.5154553049289" y="1845" width="2.957393483709273" height="15.0" fill="rgb(236,180,4)" rx="2" ry="2" _orig_x="579.8" _orig_width="1.2"/>
<text x="532.5154553049289" y="1855.5" _orig_x="582.84"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1445" width="2.2909774436090227" height="15.0" fill="rgb(215,47,7)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1455.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="84.14816207184634" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(248,115,45)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1935.5" _orig_x="102.93"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="424.0350877192982" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(254,182,40)" rx="2" ry="2" _orig_x="537.0" _orig_width="0.1"/>
<text x="427.0350877192982" y="1775.5" _orig_x="540.02"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="112.05643274853807" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(207,88,13)" rx="2" ry="2" _orig_x="126.7" _orig_width="0.1"/>
<text x="115.05643274853807" y="1695.5" _orig_x="129.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (42 samples, 0.04%)</title><rect x="616.265664160401" y="1781" width="0.985797827903091" height="15.0" fill="rgb(228,103,31)" rx="2" ry="2" _orig_x="615.0" _orig_width="0.4"/>
<text x="619.265664160401" y="1791.5" _orig_x="617.97"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (11 samples, 0.01%)</title><rect x="226.87552213868003" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(205,102,5)" rx="2" ry="2" _orig_x="457.0" _orig_width="0.1"/>
<text x="229.87552213868003" y="1791.5" _orig_x="459.97"/>
</g>
<g class="hide">
<title>[unknown] (37 samples, 0.03%)</title><rect x="288.5658312447786" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(207,187,7)" rx="2" ry="2" _orig_x="296.2" _orig_width="0.4"/>
<text x="291.5658312447786" y="2031.5" _orig_x="299.24"/>
</g>
<g class="hide">
<title>[perf-58157.map] (125 samples, 0.11%)</title><rect x="123.30304928989145" y="1589" width="1.3537593984962406" height="15.0" fill="rgb(246,183,10)" rx="2" ry="2" _orig_x="137.5" _orig_width="1.3"/>
<text x="126.30304928989145" y="1599.5" _orig_x="140.53"/>
</g>
<g class="hide">
<title>[unknown] (18 samples, 0.02%)</title><rect x="12.711319966583181" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(216,221,30)" rx="2" ry="2" _orig_x="31.3" _orig_width="0.2"/>
<text x="15.711319966583181" y="2031.5" _orig_x="34.32"/>
</g>
<g>
<title>std::__detail::_Identity::operator (15 samples, 0.01%)</title><rect x="192.86549707602336" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,94,1)" rx="2" ry="2" _orig_x="443.2" _orig_width="0.1"/>
<text x="195.86549707602336" y="1759.5" _orig_x="446.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="349.5891395154554" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(238,206,47)" rx="2" ry="2" _orig_x="354.8" _orig_width="0.2"/>
<text x="352.5891395154554" y="1919.5" _orig_x="357.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="10.5" y="2037" width="0.2" height="15.0" fill="rgb(223,71,48)" rx="2" ry="2"/>
<text x="13.52" y="2047.5"/>
</g>
<g class="hide">
<title>blink::(anonymous namespace)::IsCallbackFunctionRunnableInternal (13 samples, 0.01%)</title><rect x="163.18688387635763" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(213,220,38)" rx="2" ry="2" _orig_x="175.8" _orig_width="0.2"/>
<text x="166.18688387635763" y="1695.5" _orig_x="178.83"/>
</g>
<g class="hide">
<title>base::RunLoop::Run (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1861" width="55.81654135338346" height="15.0" fill="rgb(251,229,47)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1871.5" _orig_x="185.47">base::RunLoop::Run </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="130.8007936507937" y="1573" width="0.20827067669172933" height="15.0" fill="rgb(242,127,54)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1583.5" _orig_x="147.65"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (12 samples, 0.01%)</title><rect x="755.2631578947368" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(214,39,38)" rx="2" ry="2" _orig_x="671.4" _orig_width="0.2"/>
<text x="758.2631578947368" y="1839.5" _orig_x="674.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="124.34440267335009" y="965" width="0.10413533834586466" height="15.0" fill="rgb(216,82,53)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="975.5" _orig_x="141.49"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="277" width="0.31240601503759396" height="15.0" fill="rgb(253,13,12)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="287.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,152 samples, 0.97%)</title><rect x="916.6060568086883" y="1845" width="11.975563909774436" height="15.0" fill="rgb(237,110,37)" rx="2" ry="2" _orig_x="899.3" _orig_width="11.5"/>
<text x="919.6060568086883" y="1855.5" _orig_x="902.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (11 samples, 0.01%)</title><rect x="727.4143692564745" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(235,103,34)" rx="2" ry="2" _orig_x="660.1" _orig_width="0.1"/>
<text x="730.4143692564745" y="1775.5" _orig_x="663.11"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (140 samples, 0.12%)</title><rect x="310.9147869674186" y="1749" width="3.2038429406850457" height="15.0" fill="rgb(211,134,3)" rx="2" ry="2" _orig_x="491.1" _orig_width="1.3"/>
<text x="313.9147869674186" y="1759.5" _orig_x="494.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="84.14816207184634" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(219,81,2)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="1999.5" _orig_x="102.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (375 samples, 0.32%)</title><rect x="879.8462823725982" y="1877" width="3.957142857142857" height="15.0" fill="rgb(241,188,38)" rx="2" ry="2" _orig_x="864.0" _orig_width="3.8"/>
<text x="882.8462823725982" y="1887.5" _orig_x="867.04"/>
</g>
<g class="hide">
<title>[unknown] (44 samples, 0.04%)</title><rect x="281.8" y="2053" width="0.5" height="15.0" fill="rgb(222,97,2)" rx="2" ry="2"/>
<text x="284.83" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (119 samples, 0.10%)</title><rect x="881.4452798663325" y="1765" width="2.957393483709273" height="15.0" fill="rgb(248,134,9)" rx="2" ry="2" _orig_x="722.6" _orig_width="1.2"/>
<text x="884.4452798663325" y="1775.5" _orig_x="725.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="1162.0530492898913" y="1589" width="0.41654135338345866" height="15.0" fill="rgb(244,219,39)" rx="2" ry="2" _orig_x="1135.0" _orig_width="0.4"/>
<text x="1165.0530492898913" y="1599.5" _orig_x="1138.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.03%)</title><rect x="344.06996658312454" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(234,188,28)" rx="2" ry="2" _orig_x="349.5" _orig_width="0.4"/>
<text x="347.06996658312454" y="1919.5" _orig_x="352.51"/>
</g>
<g class="hide">
<title>blink::scheduler::FindInPageBudgetPoolController::OnTaskCompleted (11 samples, 0.01%)</title><rect x="209.7353801169591" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(219,15,44)" rx="2" ry="2" _orig_x="220.5" _orig_width="0.1"/>
<text x="212.7353801169591" y="1727.5" _orig_x="223.47"/>
</g>
<g class="hide">
<title>[perf-9366.map] (18 samples, 0.02%)</title><rect x="10.316207184628293" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(233,225,52)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1807.5" _orig_x="32.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="188.4917710944027" y="1413" width="0.10413533834586466" height="15.0" fill="rgb(217,168,51)" rx="2" ry="2" _orig_x="200.1" _orig_width="0.1"/>
<text x="191.4917710944027" y="1423.5" _orig_x="203.09"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (13 samples, 0.01%)</title><rect x="359.7117794486215" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(244,207,41)" rx="2" ry="2" _orig_x="510.9" _orig_width="0.1"/>
<text x="362.7117794486215" y="1775.5" _orig_x="513.91"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="2021" width="2.4992481203007517" height="15.0" fill="rgb(229,170,38)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="2031.5" _orig_x="109.64"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (31 samples, 0.03%)</title><rect x="559.5822890559732" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(234,195,37)" rx="2" ry="2" _orig_x="592.0" _orig_width="0.3"/>
<text x="562.5822890559732" y="1839.5" _orig_x="594.96"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="437" width="0.31240601503759396" height="15.0" fill="rgb(226,87,29)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="447.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>service_manager::Main (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1957" width="5.102631578947369" height="15.0" fill="rgb(231,116,4)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1967.5" _orig_x="178.24"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (22 samples, 0.02%)</title><rect x="357.4937343358396" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(233,52,5)" rx="2" ry="2" _orig_x="510.0" _orig_width="0.2"/>
<text x="360.4937343358396" y="1759.5" _orig_x="512.97"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (57 samples, 0.05%)</title><rect x="1065.2965747702592" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(250,102,8)" rx="2" ry="2" _orig_x="797.2" _orig_width="0.6"/>
<text x="1068.2965747702592" y="1823.5" _orig_x="800.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="19.896658312447844" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(249,39,44)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1855.5" _orig_x="41.18"/>
</g>
<g class="hide">
<title>base::SampleVectorBase::GetBucketIndex (40 samples, 0.03%)</title><rect x="210.46432748538015" y="1669" width="0.41654135338345866" height="15.0" fill="rgb(213,136,35)" rx="2" ry="2" _orig_x="221.2" _orig_width="0.4"/>
<text x="213.46432748538015" y="1679.5" _orig_x="224.17"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (14 samples, 0.01%)</title><rect x="130.76023391812862" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(254,144,22)" rx="2" ry="2" _orig_x="418.0" _orig_width="0.2"/>
<text x="133.76023391812862" y="1775.5" _orig_x="421.05"/>
</g>
<g class="hide">
<title>[code] (822 samples, 0.69%)</title><rect x="110.70267335004183" y="1813" width="8.434962406015037" height="15.0" fill="rgb(234,205,52)" rx="2" ry="2" _orig_x="125.4" _orig_width="8.1"/>
<text x="113.70267335004183" y="1823.5" _orig_x="128.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="21.3" y="1973" width="0.4" height="15.0" fill="rgb(217,162,21)" rx="2" ry="2"/>
<text x="24.26" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111 samples, 0.09%)</title><rect x="13.752673350041825" y="1941" width="1.1454887218045113" height="15.0" fill="rgb(219,9,51)" rx="2" ry="2" _orig_x="32.3" _orig_width="1.1"/>
<text x="16.752673350041825" y="1951.5" _orig_x="35.26"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (19 samples, 0.02%)</title><rect x="1121.733500417711" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(222,157,16)" rx="2" ry="2" _orig_x="820.1" _orig_width="0.2"/>
<text x="1124.733500417711" y="1791.5" _orig_x="823.13"/>
</g>
<g class="hide">
<title>__libc_start_main (1,556 samples, 1.31%)</title><rect x="897.0" y="2053" width="15.5" height="15.0" fill="rgb(245,54,54)" rx="2" ry="2"/>
<text x="900.05" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (184 samples, 0.15%)</title><rect x="418.85964912280696" y="1781" width="4.43609022556391" height="15.0" fill="rgb(211,100,1)" rx="2" ry="2" _orig_x="534.9" _orig_width="1.8"/>
<text x="421.85964912280696" y="1791.5" _orig_x="537.92"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (13 samples, 0.01%)</title><rect x="176.84628237259813" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(225,200,39)" rx="2" ry="2" _orig_x="436.7" _orig_width="0.1"/>
<text x="179.84628237259813" y="1727.5" _orig_x="439.70"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (18 samples, 0.02%)</title><rect x="1108.1787802840433" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(226,19,41)" rx="2" ry="2" _orig_x="814.6" _orig_width="0.1"/>
<text x="1111.1787802840433" y="1823.5" _orig_x="817.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="355.6289891395155" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(229,131,24)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="358.6289891395155" y="1871.5" _orig_x="363.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="302.10342522974105" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(240,110,42)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="1935.5" _orig_x="312.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="132.5710944026734" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(234,98,18)" rx="2" ry="2" _orig_x="146.4" _orig_width="0.1"/>
<text x="135.5710944026734" y="1743.5" _orig_x="149.38"/>
</g>
<g class="hide">
<title>_int_malloc (15 samples, 0.01%)</title><rect x="316.4" y="2053" width="0.2" height="15.0" fill="rgb(227,87,45)" rx="2" ry="2"/>
<text x="319.42" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (92 samples, 0.08%)</title><rect x="845.2172096908938" y="1813" width="2.218045112781955" height="15.0" fill="rgb(246,171,21)" rx="2" ry="2" _orig_x="707.9" _orig_width="0.9"/>
<text x="848.2172096908938" y="1823.5" _orig_x="710.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="52.69928989139521" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(215,117,53)" rx="2" ry="2" _orig_x="69.7" _orig_width="0.3"/>
<text x="55.69928989139521" y="1791.5" _orig_x="72.75"/>
</g>
<g class="hide">
<title>[perf-58119.map] (15 samples, 0.01%)</title><rect x="112.57710944026739" y="1541" width="0.10413533834586466" height="15.0" fill="rgb(215,158,29)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1551.5" _orig_x="130.18"/>
</g>
<g class="hide">
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork (27 samples, 0.02%)</title><rect x="225.1474101921471" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(229,114,42)" rx="2" ry="2" _orig_x="235.3" _orig_width="0.3"/>
<text x="228.1474101921471" y="1823.5" _orig_x="238.33"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="1989" width="1.5" height="15.0" fill="rgb(230,37,10)" rx="2" ry="2"/>
<text x="15.14" y="1999.5"/>
</g>
<g class="hide">
<title>[chrome] (13 samples, 0.01%)</title><rect x="92.99966583124484" y="1333" width="0.10413533834586466" height="15.0" fill="rgb(212,121,26)" rx="2" ry="2" _orig_x="108.4" _orig_width="0.1"/>
<text x="95.99966583124484" y="1343.5" _orig_x="111.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.12%)</title><rect x="155.2725981620719" y="1957" width="1.4578947368421051" height="15.0" fill="rgb(249,182,2)" rx="2" ry="2" _orig_x="168.2" _orig_width="1.4"/>
<text x="158.2725981620719" y="1967.5" _orig_x="171.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.09%)</title><rect x="350.2139515455305" y="1973" width="1.1454887218045113" height="15.0" fill="rgb(207,11,32)" rx="2" ry="2" _orig_x="355.4" _orig_width="1.1"/>
<text x="353.2139515455305" y="1983.5" _orig_x="358.37"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (98 samples, 0.08%)</title><rect x="1016.9924812030075" y="1797" width="2.4644945697577274" height="15.0" fill="rgb(248,112,35)" rx="2" ry="2" _orig_x="777.6" _orig_width="1.0"/>
<text x="1019.9924812030075" y="1807.5" _orig_x="780.61"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1429" width="2.2909774436090227" height="15.0" fill="rgb(219,187,9)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1439.5" _orig_x="69.82"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (17 samples, 0.01%)</title><rect x="868.3834586466164" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(214,53,46)" rx="2" ry="2" _orig_x="717.3" _orig_width="0.2"/>
<text x="871.3834586466164" y="1823.5" _orig_x="720.29"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(249,131,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1871.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="21.4" y="1925" width="0.3" height="15.0" fill="rgb(239,42,21)" rx="2" ry="2"/>
<text x="24.35" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(238,109,25)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1663.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (12 samples, 0.01%)</title><rect x="109.56558061821214" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(212,187,19)" rx="2" ry="2" _orig_x="409.4" _orig_width="0.1"/>
<text x="112.56558061821214" y="1727.5" _orig_x="412.38"/>
</g>
<g class="hide">
<title>non-virtual thunk to blink::LocalFrame::GetAgentClusterId (35 samples, 0.03%)</title><rect x="222.02335004177115" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(225,86,43)" rx="2" ry="2" _orig_x="232.3" _orig_width="0.3"/>
<text x="225.02335004177115" y="1727.5" _orig_x="235.28"/>
</g>
<g class="hide">
<title>[code] (263 samples, 0.22%)</title><rect x="126.01056808688392" y="1845" width="2.707518796992481" height="15.0" fill="rgb(242,30,45)" rx="2" ry="2" _orig_x="140.1" _orig_width="2.6"/>
<text x="129.01056808688392" y="1855.5" _orig_x="143.14"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (11 samples, 0.01%)</title><rect x="771.2823725981619" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(212,57,42)" rx="2" ry="2" _orig_x="677.9" _orig_width="0.2"/>
<text x="774.2823725981619" y="1823.5" _orig_x="680.94"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="981" width="2.2909774436090227" height="15.0" fill="rgb(224,75,50)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="991.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="355.5248538011696" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(221,125,44)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1999.5" _orig_x="363.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.07%)</title><rect x="348.0271094402674" y="1925" width="0.937218045112782" height="15.0" fill="rgb(238,177,47)" rx="2" ry="2" _orig_x="353.3" _orig_width="0.9"/>
<text x="351.0271094402674" y="1935.5" _orig_x="356.34"/>
</g>
<g class="hide">
<title>v8::internal::Builtin_Impl_HandleApiCall (1,122 samples, 0.94%)</title><rect x="186.09665831244786" y="1525" width="11.663157894736841" height="15.0" fill="rgb(235,153,4)" rx="2" ry="2" _orig_x="197.8" _orig_width="11.2"/>
<text x="189.09665831244786" y="1535.5" _orig_x="200.82"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (42 samples, 0.04%)</title><rect x="430.4427736006684" y="1781" width="0.985797827903091" height="15.0" fill="rgb(248,14,20)" rx="2" ry="2" _orig_x="539.6" _orig_width="0.4"/>
<text x="433.4427736006684" y="1791.5" _orig_x="542.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="323.5553049289892" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(252,21,12)" rx="2" ry="2" _orig_x="329.8" _orig_width="0.2"/>
<text x="326.5553049289892" y="1983.5" _orig_x="332.76"/>
</g>
<g class="hide">
<title>snd_ctl_elem_read (33 samples, 0.03%)</title><rect x="66.96583124477867" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(222,44,54)" rx="2" ry="2" _orig_x="83.4" _orig_width="0.4"/>
<text x="69.96583124477867" y="1967.5" _orig_x="86.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (11 samples, 0.01%)</title><rect x="775.7184628237261" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(230,55,43)" rx="2" ry="2" _orig_x="679.7" _orig_width="0.1"/>
<text x="778.7184628237261" y="1823.5" _orig_x="682.74"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (958 samples, 0.81%)</title><rect x="657.4227234753552" y="1845" width="23.41269841269841" height="15.0" fill="rgb(214,209,50)" rx="2" ry="2" _orig_x="631.7" _orig_width="9.5"/>
<text x="660.4227234753552" y="1855.5" _orig_x="634.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="29.37297410192152" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(208,117,42)" rx="2" ry="2" _orig_x="47.3" _orig_width="0.3"/>
<text x="32.37297410192152" y="1951.5" _orig_x="50.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="52.07447786132001" y="1909" width="0.937218045112782" height="15.0" fill="rgb(250,18,16)" rx="2" ry="2" _orig_x="69.1" _orig_width="0.9"/>
<text x="55.07447786132001" y="1919.5" _orig_x="72.15"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (11 samples, 0.01%)</title><rect x="621.1946532999165" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(246,110,33)" rx="2" ry="2" _orig_x="617.0" _orig_width="0.1"/>
<text x="624.1946532999165" y="1743.5" _orig_x="620.03"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (14 samples, 0.01%)</title><rect x="739.2439431913116" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(235,166,39)" rx="2" ry="2" _orig_x="664.9" _orig_width="0.2"/>
<text x="742.2439431913116" y="1791.5" _orig_x="667.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.12%)</title><rect x="345.42372598162075" y="1957" width="1.5620300751879699" height="15.0" fill="rgb(243,219,31)" rx="2" ry="2" _orig_x="350.8" _orig_width="1.5"/>
<text x="348.42372598162075" y="1967.5" _orig_x="353.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="16.147786131996714" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(207,145,35)" rx="2" ry="2" _orig_x="34.6" _orig_width="0.1"/>
<text x="19.147786131996714" y="1999.5" _orig_x="37.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="10.5" y="2021" width="0.2" height="15.0" fill="rgb(211,133,22)" rx="2" ry="2"/>
<text x="13.52" y="2031.5"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskStarted (163 samples, 0.14%)</title><rect x="221.29440267335008" y="1749" width="1.6661654135338346" height="15.0" fill="rgb(230,138,11)" rx="2" ry="2" _orig_x="231.6" _orig_width="1.6"/>
<text x="224.29440267335008" y="1759.5" _orig_x="234.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="10.5" y="1925" width="0.2" height="15.0" fill="rgb(248,227,36)" rx="2" ry="2"/>
<text x="13.55" y="1935.5"/>
</g>
<g class="hide">
<title>v8::internal::Heap::FinalizeIncrementalMarkingIfComplete (20 samples, 0.02%)</title><rect x="206.92372598162078" y="1749" width="0.20827067669172933" height="15.0" fill="rgb(220,114,20)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.2"/>
<text x="209.92372598162078" y="1759.5" _orig_x="220.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (209 samples, 0.18%)</title><rect x="896.2996658312447" y="1829" width="2.082706766917293" height="15.0" fill="rgb(208,150,49)" rx="2" ry="2" _orig_x="879.8" _orig_width="2.0"/>
<text x="899.2996658312447" y="1839.5" _orig_x="882.76"/>
</g>
<g class="hide">
<title>content::RunZygote (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1909" width="5.102631578947369" height="15.0" fill="rgb(206,41,47)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1919.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="94.04101921470348" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(226,211,42)" rx="2" ry="2" _orig_x="109.4" _orig_width="0.7"/>
<text x="97.04101921470348" y="1983.5" _orig_x="112.43"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (30 samples, 0.03%)</title><rect x="1041.8838763575607" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(207,28,45)" rx="2" ry="2" _orig_x="787.7" _orig_width="0.3"/>
<text x="1044.8838763575607" y="1775.5" _orig_x="790.68"/>
</g>
<g>
<title>operator new (21 samples, 0.02%)</title><rect x="875.2840434419383" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(251,36,8)" rx="2" ry="2" _orig_x="720.1" _orig_width="0.2"/>
<text x="878.2840434419383" y="1775.5" _orig_x="723.07"/>
</g>
<g class="hide">
<title>blink::ThreadScheduler::Current (30 samples, 0.03%)</title><rect x="204.32034252297416" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(210,64,31)" rx="2" ry="2" _orig_x="215.3" _orig_width="0.3"/>
<text x="207.32034252297416" y="1759.5" _orig_x="218.32"/>
</g>
<g class="hide">
<title>[code] (214 samples, 0.18%)</title><rect x="17.2" y="1829" width="2.1" height="15.0" fill="rgb(217,211,17)" rx="2" ry="2"/>
<text x="20.19" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="280.4432748538012" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(207,21,13)" rx="2" ry="2" _orig_x="288.4" _orig_width="0.3"/>
<text x="283.4432748538012" y="1935.5" _orig_x="291.37"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (24 samples, 0.02%)</title><rect x="407.52297410192136" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(248,25,31)" rx="2" ry="2" _orig_x="530.3" _orig_width="0.3"/>
<text x="410.52297410192136" y="1791.5" _orig_x="533.33"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (19 samples, 0.02%)</title><rect x="279.12280701754383" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(233,22,46)" rx="2" ry="2" _orig_x="478.2" _orig_width="0.2"/>
<text x="282.12280701754383" y="1759.5" _orig_x="481.19"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (15 samples, 0.01%)</title><rect x="296.3742690058479" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(254,160,31)" rx="2" ry="2" _orig_x="485.2" _orig_width="0.2"/>
<text x="299.3742690058479" y="1807.5" _orig_x="488.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="84.66883876357566" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(241,118,18)" rx="2" ry="2" _orig_x="100.4" _orig_width="0.4"/>
<text x="87.66883876357566" y="1983.5" _orig_x="103.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (110 samples, 0.09%)</title><rect x="726.675020885547" y="1797" width="2.7109440267335008" height="15.0" fill="rgb(226,30,1)" rx="2" ry="2" _orig_x="659.8" _orig_width="1.1"/>
<text x="729.675020885547" y="1807.5" _orig_x="662.84"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadSchedulerImpl::RecordTaskUkm (16 samples, 0.01%)</title><rect x="212.65116959064335" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(226,90,21)" rx="2" ry="2" _orig_x="223.3" _orig_width="0.2"/>
<text x="215.65116959064335" y="1727.5" _orig_x="226.31"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="229" width="0.31240601503759396" height="15.0" fill="rgb(254,7,6)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="239.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (44 samples, 0.04%)</title><rect x="15.522974101921527" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(245,88,15)" rx="2" ry="2" _orig_x="34.0" _orig_width="0.4"/>
<text x="18.522974101921527" y="2031.5" _orig_x="37.00"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.03%)</title><rect x="124.13613199665838" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(233,87,4)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1391.5" _orig_x="141.27"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (26 samples, 0.02%)</title><rect x="906.5831244778611" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(217,51,47)" rx="2" ry="2" _orig_x="732.8" _orig_width="0.3"/>
<text x="909.5831244778611" y="1839.5" _orig_x="735.84"/>
</g>
<g>
<title>[libminisql_shared.so] (20 samples, 0.02%)</title><rect x="810.7142857142857" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(207,190,44)" rx="2" ry="2" _orig_x="693.9" _orig_width="0.2"/>
<text x="813.7142857142857" y="1759.5" _orig_x="696.90"/>
</g>
<g class="hide">
<title>_nv032673rm (14 samples, 0.01%)</title><rect x="1184.7" y="2053" width="0.1" height="15.0" fill="rgb(253,187,1)" rx="2" ry="2"/>
<text x="1187.70" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (115 samples, 0.10%)</title><rect x="256.94235588972424" y="1717" width="2.957393483709273" height="15.0" fill="rgb(211,52,44)" rx="2" ry="2" _orig_x="469.2" _orig_width="1.2"/>
<text x="259.94235588972424" y="1727.5" _orig_x="472.25"/>
</g>
<g class="hide">
<title>blink::V8EventInit::ToImpl (149 samples, 0.13%)</title><rect x="191.19928989139518" y="1429" width="1.4578947368421051" height="15.0" fill="rgb(210,73,42)" rx="2" ry="2" _orig_x="202.7" _orig_width="1.4"/>
<text x="194.19928989139518" y="1439.5" _orig_x="205.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="130.8007936507937" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(228,222,29)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1551.5" _orig_x="147.65"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1061" width="0.20827067669172933" height="15.0" fill="rgb(246,20,54)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1071.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="42.18162071846288" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(226,122,25)" rx="2" ry="2" _orig_x="59.6" _orig_width="0.3"/>
<text x="45.18162071846288" y="2031.5" _orig_x="62.64"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (11 samples, 0.01%)</title><rect x="145.05430242272348" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(214,229,47)" rx="2" ry="2" _orig_x="423.8" _orig_width="0.1"/>
<text x="148.05430242272348" y="1759.5" _orig_x="426.77"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (14 samples, 0.01%)</title><rect x="148.7510442773601" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(223,140,39)" rx="2" ry="2" _orig_x="425.3" _orig_width="0.2"/>
<text x="151.7510442773601" y="1775.5" _orig_x="428.35"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="10.836883876357616" y="277" width="0.31240601503759396" height="15.0" fill="rgb(244,211,19)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="287.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (21 samples, 0.02%)</title><rect x="438.3291562238929" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(232,97,15)" rx="2" ry="2" _orig_x="542.8" _orig_width="0.2"/>
<text x="441.3291562238929" y="1823.5" _orig_x="545.79"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="549" width="0.20827067669172933" height="15.0" fill="rgb(240,114,38)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="559.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>v8::internal::Sweeper::RawSweep (97 samples, 0.08%)</title><rect x="39.47410192147039" y="1877" width="1.0413533834586466" height="15.0" fill="rgb(209,178,30)" rx="2" ry="2" _orig_x="57.0" _orig_width="1.0"/>
<text x="42.47410192147039" y="1887.5" _orig_x="59.99"/>
</g>
<g>
<title>Row::GetField (16 samples, 0.01%)</title><rect x="220.2213868003342" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(209,123,50)" rx="2" ry="2" _orig_x="454.3" _orig_width="0.2"/>
<text x="223.2213868003342" y="1855.5" _orig_x="457.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="51.13725981620724" y="85" width="0.20827067669172933" height="15.0" fill="rgb(227,225,6)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="95.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="271.9041771094403" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(234,86,48)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1935.5" _orig_x="283.16"/>
</g>
<g class="hide">
<title>blink::MessageEvent::Create (14 samples, 0.01%)</title><rect x="164.01996658312453" y="1477" width="0.20827067669172933" height="15.0" fill="rgb(216,157,46)" rx="2" ry="2" _orig_x="176.6" _orig_width="0.2"/>
<text x="167.01996658312453" y="1487.5" _orig_x="179.64"/>
</g>
<g class="hide">
<title>[unknown] (16 samples, 0.01%)</title><rect x="34.5" y="2053" width="0.2" height="15.0" fill="rgb(249,66,21)" rx="2" ry="2"/>
<text x="37.54" y="2063.5"/>
</g>
<g>
<title>malloc (24 samples, 0.02%)</title><rect x="475.0501253132833" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(237,51,47)" rx="2" ry="2" _orig_x="557.7" _orig_width="0.3"/>
<text x="478.0501253132833" y="1727.5" _orig_x="560.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(221,100,12)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1999.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>[dbus-daemon] (11 samples, 0.01%)</title><rect x="279.2" y="2053" width="0.1" height="15.0" fill="rgb(206,71,48)" rx="2" ry="2"/>
<text x="282.18" y="2063.5"/>
</g>
<g>
<title>__memset_avx2_unaligned (20 samples, 0.02%)</title><rect x="983.4753550543023" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(251,35,25)" rx="2" ry="2" _orig_x="764.0" _orig_width="0.2"/>
<text x="986.4753550543023" y="1743.5" _orig_x="767.01"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="31.143274853801223" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(206,97,30)" rx="2" ry="2" _orig_x="49.0" _orig_width="0.2"/>
<text x="34.14327485380122" y="1887.5" _orig_x="52.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,044 samples, 0.88%)</title><rect x="257.32522974101926" y="2005" width="10.72593984962406" height="15.0" fill="rgb(249,193,24)" rx="2" ry="2" _orig_x="266.2" _orig_width="10.3"/>
<text x="260.32522974101926" y="2015.5" _orig_x="269.17"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (24 samples, 0.02%)</title><rect x="500.68086883876356" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(216,159,10)" rx="2" ry="2" _orig_x="568.1" _orig_width="0.3"/>
<text x="503.68086883876356" y="1839.5" _orig_x="571.12"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="617.4979114452798" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(246,202,21)" rx="2" ry="2" _orig_x="615.5" _orig_width="0.1"/>
<text x="620.4979114452798" y="1775.5" _orig_x="618.49"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="661" width="0.20827067669172933" height="15.0" fill="rgb(219,61,38)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="671.5" _orig_x="328.48"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (20 samples, 0.02%)</title><rect x="858.7719298245613" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(213,183,44)" rx="2" ry="2" _orig_x="713.4" _orig_width="0.2"/>
<text x="861.7719298245613" y="1839.5" _orig_x="716.38"/>
</g>
<g class="hide">
<title>[libxcb.so.1.1.0] (12 samples, 0.01%)</title><rect x="293.5" y="2053" width="0.1" height="15.0" fill="rgb(218,139,21)" rx="2" ry="2"/>
<text x="296.50" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (12 samples, 0.01%)</title><rect x="141.35756056808688" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(235,133,27)" rx="2" ry="2" _orig_x="422.3" _orig_width="0.1"/>
<text x="144.35756056808688" y="1775.5" _orig_x="425.26"/>
</g>
<g class="hide">
<title>[chrome] (14 samples, 0.01%)</title><rect x="92.47898913951552" y="1621" width="0.20827067669172933" height="15.0" fill="rgb(226,108,11)" rx="2" ry="2" _orig_x="107.9" _orig_width="0.2"/>
<text x="95.47898913951552" y="1631.5" _orig_x="110.95"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1125" width="0.31240601503759396" height="15.0" fill="rgb(248,103,40)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1135.5" _orig_x="99.72"/>
</g>
<g class="parent">
<title>all (118,918 samples, 100%)</title><rect x="10" y="2085" width="1180" height="15.0" fill="rgb(243,68,12)" rx="2" ry="2" _orig_x="10.0" _orig_width="1180.0"/>
<text x="13" y="2095.5" _orig_x="13.00">all </text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (13 samples, 0.01%)</title><rect x="210.36340852130326" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(228,187,13)" rx="2" ry="2" _orig_x="450.3" _orig_width="0.2"/>
<text x="213.36340852130326" y="1759.5" _orig_x="453.33"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (37 samples, 0.03%)</title><rect x="312.14703425229743" y="1717" width="0.985797827903091" height="15.0" fill="rgb(205,211,28)" rx="2" ry="2" _orig_x="491.6" _orig_width="0.4"/>
<text x="315.14703425229743" y="1727.5" _orig_x="494.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="93.83274853801176" y="2021" width="0.937218045112782" height="15.0" fill="rgb(252,164,12)" rx="2" ry="2" _orig_x="109.2" _orig_width="0.9"/>
<text x="96.83274853801176" y="2031.5" _orig_x="112.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="302.936507936508" y="1813" width="0.5206766917293233" height="15.0" fill="rgb(211,187,38)" rx="2" ry="2" _orig_x="310.0" _orig_width="0.5"/>
<text x="305.936507936508" y="1823.5" _orig_x="312.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="119.24177109440272" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(249,4,28)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1791.5" _orig_x="136.65"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1157" width="0.31240601503759396" height="15.0" fill="rgb(241,74,12)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1167.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.05%)</title><rect x="350.7346282372598" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(214,38,4)" rx="2" ry="2" _orig_x="355.9" _orig_width="0.6"/>
<text x="353.7346282372598" y="1951.5" _orig_x="358.86"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (120 samples, 0.10%)</title><rect x="406.29072681704247" y="1845" width="2.957393483709273" height="15.0" fill="rgb(228,206,48)" rx="2" ry="2" _orig_x="529.8" _orig_width="1.2"/>
<text x="409.29072681704247" y="1855.5" _orig_x="532.77"/>
</g>
<g class="hide">
<title>[code] (199 samples, 0.17%)</title><rect x="142.98462823725987" y="1973" width="2.082706766917293" height="15.0" fill="rgb(218,127,13)" rx="2" ry="2" _orig_x="156.4" _orig_width="2.0"/>
<text x="145.98462823725987" y="1983.5" _orig_x="159.42"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (20 samples, 0.02%)</title><rect x="308.45029239766086" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(208,223,25)" rx="2" ry="2" _orig_x="490.1" _orig_width="0.2"/>
<text x="311.45029239766086" y="1743.5" _orig_x="493.10"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (14 samples, 0.01%)</title><rect x="683.2999164578113" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(229,95,21)" rx="2" ry="2" _orig_x="642.2" _orig_width="0.1"/>
<text x="686.2999164578113" y="1823.5" _orig_x="645.16"/>
</g>
<g class="hide">
<title>blink::RemoteFrameClientImpl::Parent (13 samples, 0.01%)</title><rect x="203.69553049289894" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(252,38,20)" rx="2" ry="2" _orig_x="214.7" _orig_width="0.1"/>
<text x="206.69553049289894" y="1711.5" _orig_x="217.66"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (18 samples, 0.02%)</title><rect x="778.1829573934838" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(219,140,46)" rx="2" ry="2" _orig_x="680.7" _orig_width="0.2"/>
<text x="781.1829573934838" y="1823.5" _orig_x="683.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="348.7560568086884" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(251,56,31)" rx="2" ry="2" _orig_x="354.0" _orig_width="0.2"/>
<text x="351.7560568086884" y="1887.5" _orig_x="357.02"/>
</g>
<g class="hide">
<title>blink::MessageEvent::MessageEvent (11 samples, 0.01%)</title><rect x="164.01996658312453" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(253,60,29)" rx="2" ry="2" _orig_x="176.6" _orig_width="0.2"/>
<text x="167.01996658312453" y="1471.5" _orig_x="179.64"/>
</g>
<g class="hide">
<title>[unknown] (230 samples, 0.19%)</title><rect x="49.57522974101927" y="1909" width="2.3951127819548867" height="15.0" fill="rgb(224,182,21)" rx="2" ry="2" _orig_x="66.7" _orig_width="2.3"/>
<text x="52.57522974101927" y="1919.5" _orig_x="69.73"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="1044.5948203842938" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(236,152,54)" rx="2" ry="2" _orig_x="788.8" _orig_width="0.2"/>
<text x="1047.5948203842938" y="1855.5" _orig_x="791.80"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (14 samples, 0.01%)</title><rect x="275.91896407685874" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(245,85,45)" rx="2" ry="2" _orig_x="476.9" _orig_width="0.2"/>
<text x="278.91896407685874" y="1775.5" _orig_x="479.93"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (43 samples, 0.04%)</title><rect x="855.3216374269006" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(230,180,1)" rx="2" ry="2" _orig_x="712.0" _orig_width="0.5"/>
<text x="858.3216374269006" y="1791.5" _orig_x="715.04"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="638.9390142021721" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(227,90,44)" rx="2" ry="2" _orig_x="624.2" _orig_width="0.1"/>
<text x="641.9390142021721" y="1759.5" _orig_x="627.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (553 samples, 0.47%)</title><rect x="886.198538011696" y="1941" width="5.727443609022556" height="15.0" fill="rgb(220,206,47)" rx="2" ry="2" _orig_x="870.1" _orig_width="5.5"/>
<text x="889.198538011696" y="1951.5" _orig_x="873.09"/>
</g>
<g class="hide">
<title>blink::V8Function::InvokeAndReportException (2,284 samples, 1.92%)</title><rect x="177.45342522974107" y="1701" width="23.534586466165415" height="15.0" fill="rgb(206,29,0)" rx="2" ry="2" _orig_x="189.5" _orig_width="22.6"/>
<text x="180.45342522974107" y="1711.5" _orig_x="192.46">blink::V8Function::InvokeAndReportException </text>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (39 samples, 0.03%)</title><rect x="659.887218045113" y="1813" width="0.985797827903091" height="15.0" fill="rgb(217,127,37)" rx="2" ry="2" _orig_x="632.7" _orig_width="0.4"/>
<text x="662.887218045113" y="1823.5" _orig_x="635.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="280.5474101921471" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(222,208,4)" rx="2" ry="2" _orig_x="288.5" _orig_width="0.2"/>
<text x="283.5474101921471" y="1855.5" _orig_x="291.52"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (15 samples, 0.01%)</title><rect x="667.2807017543861" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(246,185,50)" rx="2" ry="2" _orig_x="635.7" _orig_width="0.1"/>
<text x="670.2807017543861" y="1743.5" _orig_x="638.69"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(232,93,21)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1935.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(227,31,4)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1439.5" _orig_x="111.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="322.82635756056817" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(220,78,4)" rx="2" ry="2" _orig_x="329.1" _orig_width="0.3"/>
<text x="325.82635756056817" y="2031.5" _orig_x="332.12"/>
</g>
<g>
<title>TypeInt::CompareGreaterThan (29 samples, 0.02%)</title><rect x="953.1620718462824" y="1877" width="0.7393483709273182" height="15.0" fill="rgb(208,214,52)" rx="2" ry="2" _orig_x="751.7" _orig_width="0.3"/>
<text x="956.1620718462824" y="1887.5" _orig_x="754.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="41.869214703425286" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(210,202,36)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="2015.5" _orig_x="62.27"/>
</g>
<g class="hide">
<title>[unknown] (169 samples, 0.14%)</title><rect x="49.679365079365134" y="165" width="1.7703007518796992" height="15.0" fill="rgb(228,142,32)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.7"/>
<text x="52.679365079365134" y="175.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1973" width="12.912781954887219" height="15.0" fill="rgb(236,15,45)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1983.5" _orig_x="126.94"/>
</g>
<g>
<title>std::__detail::_Identity::operator (20 samples, 0.02%)</title><rect x="821.0651629072681" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(236,18,26)" rx="2" ry="2" _orig_x="698.1" _orig_width="0.2"/>
<text x="824.0651629072681" y="1775.5" _orig_x="701.07"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (3,115 samples, 2.62%)</title><rect x="90.58897243107766" y="1861" width="76.15288220551378" height="15.0" fill="rgb(206,85,10)" rx="2" ry="2" _orig_x="401.7" _orig_width="30.9"/>
<text x="93.58897243107766" y="1871.5" _orig_x="404.71">GenericC..</text>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="98.83124477861325" y="1589" width="0.10413533834586466" height="15.0" fill="rgb(240,160,40)" rx="2" ry="2" _orig_x="114.0" _orig_width="0.1"/>
<text x="101.83124477861325" y="1599.5" _orig_x="116.96"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="741" width="2.2909774436090227" height="15.0" fill="rgb(245,1,6)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="751.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="124.34440267335009" y="1013" width="0.10413533834586466" height="15.0" fill="rgb(254,207,5)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1023.5" _orig_x="141.48"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="565" width="0.20827067669172933" height="15.0" fill="rgb(251,195,32)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="575.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="997" width="0.31240601503759396" height="15.0" fill="rgb(209,157,53)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1007.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="213" width="0.31240601503759396" height="15.0" fill="rgb(233,155,2)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="223.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="41.869214703425286" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(247,107,38)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1935.5" _orig_x="62.35"/>
</g>
<g class="hide">
<title>clutter_actor_get_type (18 samples, 0.02%)</title><rect x="297.6256056808689" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(236,72,11)" rx="2" ry="2" _orig_x="304.9" _orig_width="0.2"/>
<text x="300.6256056808689" y="2015.5" _orig_x="307.94"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (14 samples, 0.01%)</title><rect x="417.1345029239767" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(220,148,52)" rx="2" ry="2" _orig_x="534.2" _orig_width="0.1"/>
<text x="420.1345029239767" y="1791.5" _orig_x="537.20"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (18 samples, 0.02%)</title><rect x="713.6131996658312" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(233,187,27)" rx="2" ry="2" _orig_x="654.5" _orig_width="0.2"/>
<text x="716.6131996658312" y="1759.5" _orig_x="657.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="355.73312447786134" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(208,196,11)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="2031.5" _orig_x="363.68"/>
</g>
<g class="hide">
<title>[libxul.so] (25 samples, 0.02%)</title><rect x="24.1" y="2053" width="0.3" height="15.0" fill="rgb(239,195,19)" rx="2" ry="2"/>
<text x="27.12" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-58157.map] (121 samples, 0.10%)</title><rect x="123.4071846282373" y="1557" width="1.2496240601503759" height="15.0" fill="rgb(223,229,47)" rx="2" ry="2" _orig_x="137.6" _orig_width="1.2"/>
<text x="126.4071846282373" y="1567.5" _orig_x="140.57"/>
</g>
<g class="hide">
<title>_int_malloc (32 samples, 0.03%)</title><rect x="887.5" y="2053" width="0.3" height="15.0" fill="rgb(230,202,35)" rx="2" ry="2"/>
<text x="890.51" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (63 samples, 0.05%)</title><rect x="1039.4193817878029" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(253,229,45)" rx="2" ry="2" _orig_x="786.7" _orig_width="0.6"/>
<text x="1042.4193817878029" y="1807.5" _orig_x="789.67"/>
</g>
<g class="hide">
<title>[code] (155 samples, 0.13%)</title><rect x="129.55116959064333" y="1925" width="1.5620300751879699" height="15.0" fill="rgb(242,223,8)" rx="2" ry="2" _orig_x="143.5" _orig_width="1.5"/>
<text x="132.55116959064333" y="1935.5" _orig_x="146.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="188.4917710944027" y="1365" width="0.10413533834586466" height="15.0" fill="rgb(241,102,16)" rx="2" ry="2" _orig_x="200.1" _orig_width="0.1"/>
<text x="191.4917710944027" y="1375.5" _orig_x="203.09"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (89 samples, 0.07%)</title><rect x="1085.0125313283208" y="1829" width="2.218045112781955" height="15.0" fill="rgb(231,5,12)" rx="2" ry="2" _orig_x="805.2" _orig_width="0.9"/>
<text x="1088.0125313283208" y="1839.5" _orig_x="808.21"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (13 samples, 0.01%)</title><rect x="183.28500417710947" y="1253" width="0.10413533834586466" height="15.0" fill="rgb(220,157,45)" rx="2" ry="2" _orig_x="195.1" _orig_width="0.1"/>
<text x="186.28500417710947" y="1263.5" _orig_x="198.07"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (48 samples, 0.04%)</title><rect x="616.265664160401" y="1797" width="0.985797827903091" height="15.0" fill="rgb(214,179,32)" rx="2" ry="2" _orig_x="615.0" _orig_width="0.4"/>
<text x="619.265664160401" y="1807.5" _orig_x="617.95"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (19 samples, 0.02%)</title><rect x="63.233082706766965" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(245,169,37)" rx="2" ry="2" _orig_x="390.6" _orig_width="0.1"/>
<text x="66.23308270676696" y="1775.5" _orig_x="393.56"/>
</g>
<g class="hide">
<title>epoll_wait (26 samples, 0.02%)</title><rect x="13.3" y="1925" width="0.3" height="15.0" fill="rgb(230,160,20)" rx="2" ry="2"/>
<text x="16.33" y="1935.5"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (12 samples, 0.01%)</title><rect x="1135.5346700083544" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(252,208,15)" rx="2" ry="2" _orig_x="825.7" _orig_width="0.1"/>
<text x="1138.5346700083544" y="1791.5" _orig_x="828.68"/>
</g>
<g class="hide">
<title>[[vdso]] (155 samples, 0.13%)</title><rect x="13.336131996658366" y="2037" width="1.5620300751879699" height="15.0" fill="rgb(224,89,13)" rx="2" ry="2" _orig_x="31.9" _orig_width="1.5"/>
<text x="16.336131996658366" y="2047.5" _orig_x="34.86"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.05%)</title><rect x="17.8" y="1413" width="0.6" height="15.0" fill="rgb(238,64,12)" rx="2" ry="2"/>
<text x="20.78" y="1423.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (28 samples, 0.02%)</title><rect x="505.8563074352549" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(233,26,14)" rx="2" ry="2" _orig_x="570.2" _orig_width="0.3"/>
<text x="508.8563074352549" y="1807.5" _orig_x="573.23"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (3,364 samples, 2.83%)</title><rect x="569.68671679198" y="1861" width="82.06766917293233" height="15.0" fill="rgb(218,78,33)" rx="2" ry="2" _orig_x="596.1" _orig_width="33.3"/>
<text x="572.68671679198" y="1871.5" _orig_x="599.05">GenericKe..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="276.1737259816208" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(242,21,26)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1871.5" _orig_x="287.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (27 samples, 0.02%)</title><rect x="1032.765246449457" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(246,61,45)" rx="2" ry="2" _orig_x="784.0" _orig_width="0.3"/>
<text x="1035.765246449457" y="1839.5" _orig_x="786.99"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field&gt; (37 samples, 0.03%)</title><rect x="1166.3408521303259" y="1909" width="0.7393483709273182" height="15.0" fill="rgb(238,35,31)" rx="2" ry="2" _orig_x="838.2" _orig_width="0.3"/>
<text x="1169.3408521303259" y="1919.5" _orig_x="841.18"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (29 samples, 0.02%)</title><rect x="43.517126148705145" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(215,41,0)" rx="2" ry="2" _orig_x="382.6" _orig_width="0.3"/>
<text x="46.517126148705145" y="1791.5" _orig_x="385.62"/>
</g>
<g>
<title>BPlusTreeLeafPage&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Lookup (8,399 samples, 7.06%)</title><rect x="950.2046783625731" y="1925" width="205.2923976608187" height="15.0" fill="rgb(253,84,26)" rx="2" ry="2" _orig_x="750.5" _orig_width="83.3"/>
<text x="953.2046783625731" y="1935.5" _orig_x="753.49">BPlusTreeLeafPage&lt;GenericKe..</text>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (21 samples, 0.02%)</title><rect x="272.0083124477862" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(220,219,48)" rx="2" ry="2" _orig_x="280.3" _orig_width="0.3"/>
<text x="275.0083124477862" y="2031.5" _orig_x="283.35"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (12 samples, 0.01%)</title><rect x="1177.9239766081869" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(222,108,51)" rx="2" ry="2" _orig_x="842.9" _orig_width="0.1"/>
<text x="1180.9239766081869" y="1919.5" _orig_x="845.92"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (16 samples, 0.01%)</title><rect x="817.6148705096075" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(236,13,28)" rx="2" ry="2" _orig_x="696.7" _orig_width="0.2"/>
<text x="820.6148705096075" y="1727.5" _orig_x="699.73"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (37 samples, 0.03%)</title><rect x="291.6898913951546" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(224,172,42)" rx="2" ry="2" _orig_x="299.2" _orig_width="0.4"/>
<text x="294.6898913951546" y="2031.5" _orig_x="302.23"/>
</g>
<g>
<title>[libminisql_shared.so] (13 samples, 0.01%)</title><rect x="766.8462823725981" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(233,130,2)" rx="2" ry="2" _orig_x="676.1" _orig_width="0.1"/>
<text x="769.8462823725981" y="1855.5" _orig_x="679.11"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (17 samples, 0.01%)</title><rect x="495.5054302422723" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(210,81,10)" rx="2" ry="2" _orig_x="566.0" _orig_width="0.2"/>
<text x="498.5054302422723" y="1759.5" _orig_x="569.00"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1285" width="0.31240601503759396" height="15.0" fill="rgb(246,170,48)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1295.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[chrome] (18 samples, 0.02%)</title><rect x="92.99966583124484" y="1365" width="0.10413533834586466" height="15.0" fill="rgb(230,9,16)" rx="2" ry="2" _orig_x="108.4" _orig_width="0.1"/>
<text x="95.99966583124484" y="1375.5" _orig_x="111.36"/>
</g>
<g class="hide">
<title>[perf-58119.map] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(243,80,46)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1615.5" _orig_x="130.16"/>
</g>
<g class="hide">
<title>[perf-58145.map] (77 samples, 0.06%)</title><rect x="130.28011695906437" y="1845" width="0.8330827067669173" height="15.0" fill="rgb(226,53,15)" rx="2" ry="2" _orig_x="144.2" _orig_width="0.8"/>
<text x="133.28011695906437" y="1855.5" _orig_x="147.21"/>
</g>
<g class="hide">
<title>[perf-32996.map] (99 samples, 0.08%)</title><rect x="17.4" y="1621" width="1.0" height="15.0" fill="rgb(218,82,33)" rx="2" ry="2"/>
<text x="20.44" y="1631.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (24 samples, 0.02%)</title><rect x="199.76608187134502" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(222,131,15)" rx="2" ry="2" _orig_x="446.0" _orig_width="0.2"/>
<text x="202.76608187134502" y="1791.5" _orig_x="448.96"/>
</g>
<g>
<title>_int_free (20 samples, 0.02%)</title><rect x="1045.8270676691727" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(234,229,2)" rx="2" ry="2" _orig_x="789.3" _orig_width="0.2"/>
<text x="1048.8270676691727" y="1871.5" _orig_x="792.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (294 samples, 0.25%)</title><rect x="88.1053049289892" y="1941" width="3.019924812030075" height="15.0" fill="rgb(222,111,51)" rx="2" ry="2" _orig_x="103.7" _orig_width="2.9"/>
<text x="91.1053049289892" y="1951.5" _orig_x="106.67"/>
</g>
<g>
<title>Row::~Row (1,508 samples, 1.27%)</title><rect x="904.1186299081035" y="1877" width="36.96741854636591" height="15.0" fill="rgb(221,180,20)" rx="2" ry="2" _orig_x="731.8" _orig_width="15.0"/>
<text x="907.1186299081035" y="1887.5" _orig_x="734.80">Ro..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (15 samples, 0.01%)</title><rect x="1038.9264828738512" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(221,125,38)" rx="2" ry="2" _orig_x="786.5" _orig_width="0.2"/>
<text x="1041.9264828738512" y="1791.5" _orig_x="789.52"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (942 samples, 0.79%)</title><rect x="534.69089390142" y="1845" width="22.91979949874687" height="15.0" fill="rgb(237,186,8)" rx="2" ry="2" _orig_x="581.9" _orig_width="9.3"/>
<text x="537.69089390142" y="1855.5" _orig_x="584.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="1188.8" y="1941" width="0.1" height="15.0" fill="rgb(246,199,54)" rx="2" ry="2"/>
<text x="1191.81" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1557" width="2.2909774436090227" height="15.0" fill="rgb(241,140,36)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1567.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="162.24966583124484" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(253,18,5)" rx="2" ry="2" _orig_x="174.9" _orig_width="0.2"/>
<text x="165.24966583124484" y="2015.5" _orig_x="177.91"/>
</g>
<g class="hide">
<title>[perf-32996.map] (77 samples, 0.06%)</title><rect x="18.5" y="1701" width="0.8" height="15.0" fill="rgb(219,83,19)" rx="2" ry="2"/>
<text x="21.50" y="1711.5"/>
</g>
<g class="hide">
<title>[code] (116 samples, 0.10%)</title><rect x="98.51883876357566" y="1813" width="1.2496240601503759" height="15.0" fill="rgb(220,203,43)" rx="2" ry="2" _orig_x="113.7" _orig_width="1.2"/>
<text x="101.51883876357566" y="1823.5" _orig_x="116.72"/>
</g>
<g class="hide">
<title>[code] (194 samples, 0.16%)</title><rect x="98.20643274853808" y="1973" width="1.9785714285714284" height="15.0" fill="rgb(219,190,20)" rx="2" ry="2" _orig_x="113.4" _orig_width="1.9"/>
<text x="101.20643274853808" y="1983.5" _orig_x="116.38"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (20 samples, 0.02%)</title><rect x="36.37009189640766" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(213,199,17)" rx="2" ry="2" _orig_x="379.7" _orig_width="0.2"/>
<text x="39.37009189640766" y="1711.5" _orig_x="382.65"/>
</g>
<g>
<title>malloc (14 samples, 0.01%)</title><rect x="599.5071010860486" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(240,67,11)" rx="2" ry="2" _orig_x="608.2" _orig_width="0.2"/>
<text x="602.5071010860486" y="1727.5" _orig_x="611.25"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (41 samples, 0.03%)</title><rect x="1061.1069340016709" y="1813" width="0.985797827903091" height="15.0" fill="rgb(212,48,38)" rx="2" ry="2" _orig_x="795.5" _orig_width="0.4"/>
<text x="1064.1069340016709" y="1823.5" _orig_x="798.47"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (15 samples, 0.01%)</title><rect x="754.7702589807853" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(237,20,21)" rx="2" ry="2" _orig_x="671.2" _orig_width="0.2"/>
<text x="757.7702589807853" y="1839.5" _orig_x="674.24"/>
</g>
<g>
<title>Row::~Row (11 samples, 0.01%)</title><rect x="773.9933166248956" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(254,49,35)" rx="2" ry="2" _orig_x="679.0" _orig_width="0.1"/>
<text x="776.9933166248956" y="1903.5" _orig_x="682.01"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (169 samples, 0.14%)</title><rect x="618.237259816207" y="1781" width="3.943191311612364" height="15.0" fill="rgb(205,45,11)" rx="2" ry="2" _orig_x="615.8" _orig_width="1.6"/>
<text x="621.237259816207" y="1791.5" _orig_x="618.77"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(206,8,40)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1807.5" _orig_x="48.87"/>
</g>
<g>
<title>[libminisql_shared.so] (19 samples, 0.02%)</title><rect x="802.3350041771093" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(253,134,52)" rx="2" ry="2" _orig_x="690.5" _orig_width="0.2"/>
<text x="805.3350041771093" y="1791.5" _orig_x="693.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,721 samples, 1.45%)</title><rect x="1164.5" y="1829" width="17.1" height="15.0" fill="rgb(236,99,26)" rx="2" ry="2"/>
<text x="1167.50" y="1839.5"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (108 samples, 0.09%)</title><rect x="366.6123642439433" y="1829" width="2.7109440267335008" height="15.0" fill="rgb(254,220,49)" rx="2" ry="2" _orig_x="513.7" _orig_width="1.1"/>
<text x="369.6123642439433" y="1839.5" _orig_x="516.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="321.4725981620719" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(208,164,45)" rx="2" ry="2" _orig_x="327.8" _orig_width="0.3"/>
<text x="324.4725981620719" y="1919.5" _orig_x="330.79"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (90 samples, 0.08%)</title><rect x="611.8295739348372" y="1797" width="2.218045112781955" height="15.0" fill="rgb(244,148,11)" rx="2" ry="2" _orig_x="613.2" _orig_width="0.9"/>
<text x="614.8295739348372" y="1807.5" _orig_x="616.21"/>
</g>
<g class="hide">
<title>[libjvm.so] (19 samples, 0.02%)</title><rect x="10.1" y="1941" width="0.1" height="15.0" fill="rgb(240,99,17)" rx="2" ry="2"/>
<text x="13.06" y="1951.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (52 samples, 0.04%)</title><rect x="750.0877192982455" y="1845" width="1.2322472848788637" height="15.0" fill="rgb(206,167,26)" rx="2" ry="2" _orig_x="669.3" _orig_width="0.5"/>
<text x="753.0877192982455" y="1855.5" _orig_x="672.26"/>
</g>
<g class="hide">
<title>blink::V8ScriptRunner::CallFunction (182 samples, 0.15%)</title><rect x="163.39515455304934" y="1685" width="1.874436090225564" height="15.0" fill="rgb(227,181,53)" rx="2" ry="2" _orig_x="176.0" _orig_width="1.8"/>
<text x="166.39515455304934" y="1695.5" _orig_x="178.97"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (181 samples, 0.15%)</title><rect x="1145.8855472013365" y="1861" width="4.43609022556391" height="15.0" fill="rgb(245,190,27)" rx="2" ry="2" _orig_x="829.9" _orig_width="1.8"/>
<text x="1148.8855472013365" y="1871.5" _orig_x="832.86"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="147.56658312447792" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(237,52,4)" rx="2" ry="2" _orig_x="160.8" _orig_width="0.1"/>
<text x="150.56658312447792" y="1983.5" _orig_x="163.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="13.4" y="1909" width="0.2" height="15.0" fill="rgb(230,31,41)" rx="2" ry="2"/>
<text x="16.35" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (226 samples, 0.19%)</title><rect x="122.36583124477866" y="1829" width="2.2909774436090227" height="15.0" fill="rgb(233,75,6)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1839.5" _orig_x="139.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.05%)</title><rect x="133.09177109440273" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(210,114,29)" rx="2" ry="2" _orig_x="146.9" _orig_width="0.6"/>
<text x="136.09177109440273" y="2015.5" _orig_x="149.90"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (11 samples, 0.01%)</title><rect x="268.5254803675856" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(242,210,13)" rx="2" ry="2" _orig_x="473.9" _orig_width="0.1"/>
<text x="271.5254803675856" y="1775.5" _orig_x="476.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="327.09590643274856" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(213,127,2)" rx="2" ry="2" _orig_x="333.2" _orig_width="0.2"/>
<text x="330.09590643274856" y="1999.5" _orig_x="336.24"/>
</g>
<g>
<title>__memset_avx2_unaligned (16 samples, 0.01%)</title><rect x="1113.8471177944862" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(234,53,7)" rx="2" ry="2" _orig_x="816.9" _orig_width="0.2"/>
<text x="1116.8471177944862" y="1823.5" _orig_x="819.90"/>
</g>
<g class="hide">
<title>blink::Document::EnsurePaintLocationDataValidForNode (42 samples, 0.04%)</title><rect x="182.34778613199668" y="1477" width="0.41654135338345866" height="15.0" fill="rgb(254,74,13)" rx="2" ry="2" _orig_x="194.2" _orig_width="0.4"/>
<text x="185.34778613199668" y="1487.5" _orig_x="197.16"/>
</g>
<g>
<title>Row::~Row (11 samples, 0.01%)</title><rect x="89.60317460317462" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(240,120,27)" rx="2" ry="2" _orig_x="401.3" _orig_width="0.1"/>
<text x="92.60317460317462" y="1871.5" _orig_x="404.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.08%)</title><rect x="52.07447786132001" y="1957" width="0.937218045112782" height="15.0" fill="rgb(231,27,1)" rx="2" ry="2" _orig_x="69.1" _orig_width="0.9"/>
<text x="55.07447786132001" y="1967.5" _orig_x="72.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="350.94289891395164" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(222,193,52)" rx="2" ry="2" _orig_x="356.1" _orig_width="0.4"/>
<text x="353.94289891395164" y="1903.5" _orig_x="359.11"/>
</g>
<g>
<title>[libminisql_shared.so] (22 samples, 0.02%)</title><rect x="627.6023391812867" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(247,229,27)" rx="2" ry="2" _orig_x="619.6" _orig_width="0.2"/>
<text x="630.6023391812867" y="1807.5" _orig_x="622.57"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (12 samples, 0.01%)</title><rect x="213.56725146198835" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(215,155,12)" rx="2" ry="2" _orig_x="451.6" _orig_width="0.1"/>
<text x="216.56725146198835" y="1727.5" _orig_x="454.59"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (23 samples, 0.02%)</title><rect x="382.87802840434404" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(249,92,29)" rx="2" ry="2" _orig_x="520.3" _orig_width="0.2"/>
<text x="385.87802840434404" y="1807.5" _orig_x="523.31"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (11 samples, 0.01%)</title><rect x="436.8504594820385" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(220,168,21)" rx="2" ry="2" _orig_x="542.2" _orig_width="0.1"/>
<text x="439.8504594820385" y="1839.5" _orig_x="545.23"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (35 samples, 0.03%)</title><rect x="149.98329156223895" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(219,6,45)" rx="2" ry="2" _orig_x="425.8" _orig_width="0.3"/>
<text x="152.98329156223895" y="1807.5" _orig_x="428.78"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (15 samples, 0.01%)</title><rect x="977.8070175438596" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(208,110,48)" rx="2" ry="2" _orig_x="761.7" _orig_width="0.1"/>
<text x="980.8070175438596" y="1743.5" _orig_x="764.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (55 samples, 0.05%)</title><rect x="854.0893901420217" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(244,17,45)" rx="2" ry="2" _orig_x="711.5" _orig_width="0.5"/>
<text x="857.0893901420217" y="1791.5" _orig_x="714.49"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="869" width="0.20827067669172933" height="15.0" fill="rgb(249,161,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="879.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.05%)</title><rect x="914.4192147034253" y="1893" width="0.6248120300751879" height="15.0" fill="rgb(252,187,24)" rx="2" ry="2" _orig_x="897.2" _orig_width="0.6"/>
<text x="917.4192147034253" y="1903.5" _orig_x="900.22"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(241,106,0)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1423.5" _orig_x="111.34"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(237,112,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1775.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(237,215,34)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="2015.5" _orig_x="99.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (41 samples, 0.03%)</title><rect x="751.3199665831243" y="1861" width="0.985797827903091" height="15.0" fill="rgb(212,215,36)" rx="2" ry="2" _orig_x="669.8" _orig_width="0.4"/>
<text x="754.3199665831243" y="1871.5" _orig_x="672.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(206,40,52)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="2047.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>[perf-58119.map] (102 samples, 0.09%)</title><rect x="119.9707184628238" y="1621" width="1.0413533834586466" height="15.0" fill="rgb(254,177,2)" rx="2" ry="2" _orig_x="134.3" _orig_width="1.0"/>
<text x="122.9707184628238" y="1631.5" _orig_x="137.25"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (25 samples, 0.02%)</title><rect x="133.22472848788635" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(211,16,52)" rx="2" ry="2" _orig_x="419.0" _orig_width="0.3"/>
<text x="136.22472848788635" y="1775.5" _orig_x="422.05"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (121 samples, 0.10%)</title><rect x="757.9741019214704" y="1797" width="2.957393483709273" height="15.0" fill="rgb(218,106,0)" rx="2" ry="2" _orig_x="672.5" _orig_width="1.2"/>
<text x="760.9741019214704" y="1807.5" _orig_x="675.54"/>
</g>
<g>
<title>operator new (16 samples, 0.01%)</title><rect x="511.5246449456975" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(208,101,18)" rx="2" ry="2" _orig_x="572.5" _orig_width="0.2"/>
<text x="514.5246449456974" y="1759.5" _orig_x="575.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,867 samples, 8.30%)</title><rect x="1061.0417710944027" y="1925" width="101.9484962406015" height="15.0" fill="rgb(231,14,21)" rx="2" ry="2" _orig_x="1038.0" _orig_width="97.9"/>
<text x="1064.0417710944027" y="1935.5" _orig_x="1040.99">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="353.96282372598165" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(248,59,37)" rx="2" ry="2" _orig_x="359.0" _orig_width="0.3"/>
<text x="356.96282372598165" y="1919.5" _orig_x="362.00"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (13 samples, 0.01%)</title><rect x="659.1478696741854" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(240,50,16)" rx="2" ry="2" _orig_x="632.4" _orig_width="0.1"/>
<text x="662.1478696741854" y="1823.5" _orig_x="635.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="197.9680868838764" y="1557" width="0.10413533834586466" height="15.0" fill="rgb(238,159,13)" rx="2" ry="2" _orig_x="209.2" _orig_width="0.1"/>
<text x="200.9680868838764" y="1567.5" _orig_x="212.17"/>
</g>
<g class="hide">
<title>non-virtual thunk to blink::MediaControlLoadingPanelElement::OnAnimationIteration (20 samples, 0.02%)</title><rect x="224.10605680868844" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(226,29,31)" rx="2" ry="2" _orig_x="234.3" _orig_width="0.2"/>
<text x="227.10605680868844" y="1775.5" _orig_x="237.26"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (15 samples, 0.01%)</title><rect x="64.95822890559734" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(242,118,20)" rx="2" ry="2" _orig_x="391.3" _orig_width="0.2"/>
<text x="67.95822890559734" y="1791.5" _orig_x="394.31"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (19 samples, 0.02%)</title><rect x="1071.2113617376776" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(249,219,8)" rx="2" ry="2" _orig_x="799.6" _orig_width="0.2"/>
<text x="1074.2113617376776" y="1791.5" _orig_x="802.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="1162.3104693140792" y="1973" width="0.2366626554352186" height="15.0" fill="rgb(236,139,16)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="1983.5" _orig_x="850.98"/>
</g>
<g class="hide">
<title>start_thread (13 samples, 0.01%)</title><rect x="15.1" y="2053" width="0.2" height="15.0" fill="rgb(221,142,26)" rx="2" ry="2"/>
<text x="18.13" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="119.24177109440272" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(213,14,54)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1775.5" _orig_x="136.65"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (11 samples, 0.01%)</title><rect x="866.9047619047619" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(228,145,0)" rx="2" ry="2" _orig_x="716.7" _orig_width="0.1"/>
<text x="869.9047619047619" y="1823.5" _orig_x="719.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="348.9643274853801" y="2021" width="0.8330827067669173" height="15.0" fill="rgb(244,15,14)" rx="2" ry="2" _orig_x="354.2" _orig_width="0.8"/>
<text x="351.9643274853801" y="2031.5" _orig_x="357.19"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (69 samples, 0.06%)</title><rect x="393.2289055973266" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(253,191,28)" rx="2" ry="2" _orig_x="524.5" _orig_width="0.7"/>
<text x="396.2289055973266" y="1759.5" _orig_x="527.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.10%)</title><rect x="351.35944026733506" y="2037" width="1.1454887218045113" height="15.0" fill="rgb(213,11,47)" rx="2" ry="2" _orig_x="356.5" _orig_width="1.1"/>
<text x="354.35944026733506" y="2047.5" _orig_x="359.46"/>
</g>
<g class="hide">
<title>__poll (454 samples, 0.38%)</title><rect x="156.83462823725986" y="2021" width="4.68609022556391" height="15.0" fill="rgb(225,220,38)" rx="2" ry="2" _orig_x="169.7" _orig_width="4.5"/>
<text x="159.83462823725986" y="2031.5" _orig_x="172.69"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (36 samples, 0.03%)</title><rect x="641.6499582289055" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(224,229,25)" rx="2" ry="2" _orig_x="625.3" _orig_width="0.3"/>
<text x="644.6499582289055" y="1775.5" _orig_x="628.25"/>
</g>
<g class="hide">
<title>[code] (27 samples, 0.02%)</title><rect x="112.16056808688393" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(239,204,17)" rx="2" ry="2" _orig_x="126.8" _orig_width="0.3"/>
<text x="115.16056808688393" y="1663.5" _orig_x="129.84"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (18 samples, 0.02%)</title><rect x="287.1079365079366" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(222,191,7)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1807.5" _orig_x="297.83"/>
</g>
<g class="hide">
<title>[perf-32884.map] (60 samples, 0.05%)</title><rect x="99.03951545530498" y="1573" width="0.6248120300751879" height="15.0" fill="rgb(247,174,48)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1583.5" _orig_x="117.17"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (52 samples, 0.04%)</title><rect x="415.40935672514615" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(217,3,49)" rx="2" ry="2" _orig_x="533.5" _orig_width="0.5"/>
<text x="418.40935672514615" y="1823.5" _orig_x="536.52"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::max_size (14 samples, 0.01%)</title><rect x="464.20634920634905" y="1669" width="0.24644945697577275" height="15.0" fill="rgb(239,47,43)" rx="2" ry="2" _orig_x="553.3" _orig_width="0.1"/>
<text x="467.20634920634905" y="1679.5" _orig_x="556.27"/>
</g>
<g class="hide">
<title>Builtins_LoadIC (13 samples, 0.01%)</title><rect x="197.75981620718468" y="1557" width="0.20827067669172933" height="15.0" fill="rgb(225,32,39)" rx="2" ry="2" _orig_x="209.0" _orig_width="0.2"/>
<text x="200.75981620718468" y="1567.5" _orig_x="212.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (52 samples, 0.04%)</title><rect x="1082.3015873015872" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(232,219,13)" rx="2" ry="2" _orig_x="804.1" _orig_width="0.5"/>
<text x="1085.3015873015872" y="1823.5" _orig_x="807.10"/>
</g>
<g class="hide">
<title>blink::Thread::Current (22 samples, 0.02%)</title><rect x="204.42447786132" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(252,129,51)" rx="2" ry="2" _orig_x="215.4" _orig_width="0.2"/>
<text x="207.42447786132" y="1743.5" _orig_x="218.40"/>
</g>
<g class="hide">
<title>[unknown] (215 samples, 0.18%)</title><rect x="49.679365079365134" y="293" width="2.2909774436090227" height="15.0" fill="rgb(253,99,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="303.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[chrome] (12 samples, 0.01%)</title><rect x="30.93500417710949" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(225,185,43)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1887.5" _orig_x="51.78"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (54 samples, 0.05%)</title><rect x="633.5171261487051" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(210,1,37)" rx="2" ry="2" _orig_x="622.0" _orig_width="0.5"/>
<text x="636.5171261487051" y="1791.5" _orig_x="625.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="15.106432748538069" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(248,110,21)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1919.5" _orig_x="36.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="25.0" y="1973" width="0.2" height="15.0" fill="rgb(251,101,53)" rx="2" ry="2"/>
<text x="27.96" y="1983.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (12 samples, 0.01%)</title><rect x="865.9189640768587" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(219,29,50)" rx="2" ry="2" _orig_x="716.3" _orig_width="0.1"/>
<text x="868.9189640768587" y="1823.5" _orig_x="719.32"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="181" width="0.20827067669172933" height="15.0" fill="rgb(232,143,48)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="191.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (15 samples, 0.01%)</title><rect x="806.031746031746" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(217,144,20)" rx="2" ry="2" _orig_x="692.0" _orig_width="0.1"/>
<text x="809.031746031746" y="1775.5" _orig_x="694.99"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::new_allocator (11 samples, 0.01%)</title><rect x="655.9440267335004" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(240,200,11)" rx="2" ry="2" _orig_x="631.1" _orig_width="0.2"/>
<text x="658.9440267335004" y="1807.5" _orig_x="634.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,022 samples, 0.86%)</title><rect x="257.53350041771097" y="1989" width="10.51766917293233" height="15.0" fill="rgb(251,21,1)" rx="2" ry="2" _orig_x="266.4" _orig_width="10.1"/>
<text x="260.53350041771097" y="1999.5" _orig_x="269.39"/>
</g>
<g class="hide">
<title>[code] (370 samples, 0.31%)</title><rect x="16.4" y="2005" width="3.6" height="15.0" fill="rgb(224,37,13)" rx="2" ry="2"/>
<text x="19.37" y="2015.5"/>
</g>
<g class="hide">
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (31 samples, 0.03%)</title><rect x="99.24778613199672" y="1429" width="0.31240601503759396" height="15.0" fill="rgb(206,209,30)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.3"/>
<text x="102.24778613199672" y="1439.5" _orig_x="117.36"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (35 samples, 0.03%)</title><rect x="63.97243107769418" y="1781" width="0.985797827903091" height="15.0" fill="rgb(219,228,23)" rx="2" ry="2" _orig_x="390.9" _orig_width="0.4"/>
<text x="66.97243107769418" y="1791.5" _orig_x="393.93"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (35 samples, 0.03%)</title><rect x="936.4035087719298" y="1845" width="0.985797827903091" height="15.0" fill="rgb(250,198,3)" rx="2" ry="2" _orig_x="744.9" _orig_width="0.4"/>
<text x="939.4035087719298" y="1855.5" _orig_x="747.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="1110.3968253968253" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" _orig_x="815.5" _orig_width="0.1"/>
<text x="1113.3968253968253" y="1823.5" _orig_x="818.50"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1093" width="2.2909774436090227" height="15.0" fill="rgb(213,172,0)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1103.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="1973" width="1.5" height="15.0" fill="rgb(213,60,36)" rx="2" ry="2"/>
<text x="15.14" y="1983.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (12 samples, 0.01%)</title><rect x="1064.3107769423557" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(211,204,37)" rx="2" ry="2" _orig_x="796.8" _orig_width="0.1"/>
<text x="1067.3107769423557" y="1823.5" _orig_x="799.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (17 samples, 0.01%)</title><rect x="854.5822890559733" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(234,179,13)" rx="2" ry="2" _orig_x="711.7" _orig_width="0.2"/>
<text x="857.5822890559733" y="1759.5" _orig_x="714.73"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="405" width="0.20827067669172933" height="15.0" fill="rgb(232,106,13)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="415.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>os_acquire_spinlock (21 samples, 0.02%)</title><rect x="338.7590643274854" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(223,100,17)" rx="2" ry="2" _orig_x="344.4" _orig_width="0.3"/>
<text x="341.7590643274854" y="2047.5" _orig_x="347.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.07%)</title><rect x="238.26846282372603" y="1861" width="0.937218045112782" height="15.0" fill="rgb(219,140,1)" rx="2" ry="2" _orig_x="247.9" _orig_width="0.9"/>
<text x="241.26846282372603" y="1871.5" _orig_x="250.94"/>
</g>
<g class="hide">
<title>geoclue (28 samples, 0.02%)</title><rect x="287.4" y="2069" width="0.3" height="15.0" fill="rgb(248,115,40)" rx="2" ry="2"/>
<text x="290.44" y="2079.5"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::GetObjectProperty (72 samples, 0.06%)</title><rect x="194.94816207184635" y="1413" width="0.7289473684210526" height="15.0" fill="rgb(230,142,32)" rx="2" ry="2" _orig_x="206.3" _orig_width="0.7"/>
<text x="197.94816207184635" y="1423.5" _orig_x="209.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="16.35605680868844" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(226,4,14)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="1887.5" _orig_x="37.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="131.321470342523" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(241,72,12)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1855.5" _orig_x="148.23"/>
</g>
<g class="hide">
<title>[code] (36 samples, 0.03%)</title><rect x="121.1162071846283" y="1765" width="0.41654135338345866" height="15.0" fill="rgb(245,194,21)" rx="2" ry="2" _orig_x="135.4" _orig_width="0.4"/>
<text x="124.1162071846283" y="1775.5" _orig_x="138.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="327.20004177109445" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(213,228,22)" rx="2" ry="2" _orig_x="333.3" _orig_width="0.1"/>
<text x="330.20004177109445" y="1967.5" _orig_x="336.26"/>
</g>
<g class="hide">
<title>[perf-32884.map] (93 samples, 0.08%)</title><rect x="98.7271094402674" y="1717" width="0.937218045112782" height="15.0" fill="rgb(249,123,29)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1727.5" _orig_x="116.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="16.0" y="1973" width="0.2" height="15.0" fill="rgb(249,8,46)" rx="2" ry="2"/>
<text x="18.95" y="1983.5"/>
</g>
<g class="hide">
<title>[Xorg] (39 samples, 0.03%)</title><rect x="47.49252297410198" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(243,26,28)" rx="2" ry="2" _orig_x="64.7" _orig_width="0.4"/>
<text x="50.49252297410198" y="2047.5" _orig_x="67.74"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (46 samples, 0.04%)</title><rect x="59.53634085213037" y="1733" width="0.985797827903091" height="15.0" fill="rgb(241,117,43)" rx="2" ry="2" _orig_x="389.1" _orig_width="0.4"/>
<text x="62.53634085213037" y="1743.5" _orig_x="392.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="271.9041771094403" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(241,200,43)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1919.5" _orig_x="283.16"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(223,131,13)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1647.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="914.4192147034253" y="1909" width="0.6248120300751879" height="15.0" fill="rgb(226,171,44)" rx="2" ry="2" _orig_x="897.2" _orig_width="0.6"/>
<text x="917.4192147034253" y="1919.5" _orig_x="900.21"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (11 samples, 0.01%)</title><rect x="312.63993316624897" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(249,228,11)" rx="2" ry="2" _orig_x="491.8" _orig_width="0.2"/>
<text x="315.63993316624897" y="1711.5" _orig_x="494.84"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (35 samples, 0.03%)</title><rect x="621.1946532999165" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(234,115,46)" rx="2" ry="2" _orig_x="617.0" _orig_width="0.3"/>
<text x="624.1946532999165" y="1759.5" _orig_x="619.97"/>
</g>
<g class="hide">
<title>[perf-32884.map] (93 samples, 0.08%)</title><rect x="98.7271094402674" y="1653" width="0.937218045112782" height="15.0" fill="rgb(239,194,32)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1663.5" _orig_x="116.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.14%)</title><rect x="237.4353801169591" y="1941" width="1.7703007518796992" height="15.0" fill="rgb(250,114,54)" rx="2" ry="2" _orig_x="247.1" _orig_width="1.7"/>
<text x="240.4353801169591" y="1951.5" _orig_x="250.13"/>
</g>
<g class="hide">
<title>cef_execute_process (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1989" width="55.81654135338346" height="15.0" fill="rgb(212,130,49)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1999.5" _orig_x="185.47">cef_execute_process </text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="789" width="0.31240601503759396" height="15.0" fill="rgb(214,229,37)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="799.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.09%)</title><rect x="89.97974101921476" y="1829" width="1.0413533834586466" height="15.0" fill="rgb(241,89,17)" rx="2" ry="2" _orig_x="105.5" _orig_width="1.0"/>
<text x="92.97974101921476" y="1839.5" _orig_x="108.53"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1589" width="0.31240601503759396" height="15.0" fill="rgb(213,197,18)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1599.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (33 samples, 0.03%)</title><rect x="198.78028404344198" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(211,38,9)" rx="2" ry="2" _orig_x="445.6" _orig_width="0.3"/>
<text x="201.78028404344198" y="1775.5" _orig_x="448.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="23.7" y="1941" width="0.1" height="15.0" fill="rgb(238,101,14)" rx="2" ry="2"/>
<text x="26.71" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1621" width="0.20827067669172933" height="15.0" fill="rgb(229,180,25)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1631.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[perf-58157.map] (108 samples, 0.09%)</title><rect x="123.51131996658316" y="1477" width="1.1454887218045113" height="15.0" fill="rgb(224,10,21)" rx="2" ry="2" _orig_x="137.7" _orig_width="1.1"/>
<text x="126.51131996658316" y="1487.5" _orig_x="140.69"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="10.628613199665887" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(238,22,31)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1935.5" _orig_x="32.31"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (13 samples, 0.01%)</title><rect x="368.3375104427735" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(247,60,51)" rx="2" ry="2" _orig_x="514.4" _orig_width="0.1"/>
<text x="371.3375104427735" y="1791.5" _orig_x="517.38"/>
</g>
<g class="hide">
<title>[chrome] (130 samples, 0.11%)</title><rect x="85.81432748538018" y="2021" width="1.3537593984962406" height="15.0" fill="rgb(212,63,51)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.3"/>
<text x="88.81432748538018" y="2031.5" _orig_x="104.49"/>
</g>
<g class="hide">
<title>v8::Function::Call (27 samples, 0.02%)</title><rect x="125.69816207184634" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(205,13,17)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.3"/>
<text x="128.69816207184635" y="1871.5" _orig_x="142.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="10.8" y="2021" width="0.4" height="15.0" fill="rgb(219,147,3)" rx="2" ry="2"/>
<text x="13.79" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (45 samples, 0.04%)</title><rect x="114.74101921470341" y="1749" width="0.985797827903091" height="15.0" fill="rgb(217,3,15)" rx="2" ry="2" _orig_x="411.5" _orig_width="0.4"/>
<text x="117.74101921470341" y="1759.5" _orig_x="414.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="327.40831244778616" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(210,207,22)" rx="2" ry="2" _orig_x="333.5" _orig_width="0.2"/>
<text x="330.40831244778616" y="2031.5" _orig_x="336.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="326.47109440267343" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(246,166,24)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1919.5" _orig_x="335.58"/>
</g>
<g class="hide">
<title>[perf-58145.map] (34 samples, 0.03%)</title><rect x="130.69665831244782" y="1685" width="0.41654135338345866" height="15.0" fill="rgb(251,141,20)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.4"/>
<text x="133.69665831244782" y="1695.5" _orig_x="147.61"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (20 samples, 0.02%)</title><rect x="517.439431913116" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(245,176,4)" rx="2" ry="2" _orig_x="574.9" _orig_width="0.2"/>
<text x="520.439431913116" y="1743.5" _orig_x="577.94"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (12 samples, 0.01%)</title><rect x="775.7184628237261" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(223,216,30)" rx="2" ry="2" _orig_x="679.7" _orig_width="0.2"/>
<text x="778.7184628237261" y="1839.5" _orig_x="682.74"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1013" width="0.31240601503759396" height="15.0" fill="rgb(242,164,33)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1023.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[code] (73 samples, 0.06%)</title><rect x="12.3" y="1893" width="0.7" height="15.0" fill="rgb(209,56,12)" rx="2" ry="2"/>
<text x="15.30" y="1903.5"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (166 samples, 0.14%)</title><rect x="154.2" y="2053" width="1.7" height="15.0" fill="rgb(254,228,15)" rx="2" ry="2"/>
<text x="157.21" y="2063.5"/>
</g>
<g class="hide">
<title>blink::Document::UpdateStyleAndLayout (30 samples, 0.03%)</title><rect x="182.4519214703426" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(240,149,50)" rx="2" ry="2" _orig_x="194.3" _orig_width="0.3"/>
<text x="185.4519214703426" y="1471.5" _orig_x="197.27"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="773" width="0.20827067669172933" height="15.0" fill="rgb(224,201,9)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="783.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>malloc (12 samples, 0.01%)</title><rect x="900.777485380117" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(226,57,52)" rx="2" ry="2" _orig_x="884.1" _orig_width="0.2"/>
<text x="903.777485380117" y="2047.5" _orig_x="887.15"/>
</g>
<g class="hide">
<title>getenv (26 samples, 0.02%)</title><rect x="276.6" y="2053" width="0.2" height="15.0" fill="rgb(239,103,33)" rx="2" ry="2"/>
<text x="279.58" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (227 samples, 0.19%)</title><rect x="63.11282372598168" y="1925" width="2.3951127819548867" height="15.0" fill="rgb(224,25,5)" rx="2" ry="2" _orig_x="79.7" _orig_width="2.3"/>
<text x="66.11282372598168" y="1935.5" _orig_x="82.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (514 samples, 0.43%)</title><rect x="923.2707184628238" y="1685" width="5.310902255639097" height="15.0" fill="rgb(252,224,32)" rx="2" ry="2" _orig_x="905.7" _orig_width="5.1"/>
<text x="926.2707184628238" y="1695.5" _orig_x="908.66"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::AdvanceMarking (50 samples, 0.04%)</title><rect x="174.85004177109445" y="1717" width="0.5206766917293233" height="15.0" fill="rgb(234,113,27)" rx="2" ry="2" _orig_x="187.0" _orig_width="0.5"/>
<text x="177.85004177109445" y="1727.5" _orig_x="189.97"/>
</g>
<g class="hide">
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues (36 samples, 0.03%)</title><rect x="166.727485380117" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(219,14,28)" rx="2" ry="2" _orig_x="179.2" _orig_width="0.3"/>
<text x="169.727485380117" y="1775.5" _orig_x="182.18"/>
</g>
<g class="hide">
<title>[code] (197 samples, 0.17%)</title><rect x="98.1022974101922" y="1989" width="2.082706766917293" height="15.0" fill="rgb(210,192,49)" rx="2" ry="2" _orig_x="113.3" _orig_width="2.0"/>
<text x="101.1022974101922" y="1999.5" _orig_x="116.35"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="11.7" y="1685" width="0.1" height="15.0" fill="rgb(225,117,0)" rx="2" ry="2"/>
<text x="14.67" y="1695.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (624 samples, 0.52%)</title><rect x="301.79615705931485" y="1845" width="15.27986633249791" height="15.0" fill="rgb(253,174,33)" rx="2" ry="2" _orig_x="487.4" _orig_width="6.2"/>
<text x="304.79615705931485" y="1855.5" _orig_x="490.37"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::max_size (17 samples, 0.01%)</title><rect x="354.53634085213037" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(244,73,46)" rx="2" ry="2" _orig_x="508.8" _orig_width="0.1"/>
<text x="357.53634085213037" y="1727.5" _orig_x="511.78"/>
</g>
<g class="hide">
<title>[chrome] (22 samples, 0.02%)</title><rect x="14.2" y="1829" width="0.2" height="15.0" fill="rgb(229,74,25)" rx="2" ry="2"/>
<text x="17.17" y="1839.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (34 samples, 0.03%)</title><rect x="221.94653299916456" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(237,157,1)" rx="2" ry="2" _orig_x="455.0" _orig_width="0.3"/>
<text x="224.94653299916456" y="1791.5" _orig_x="458.01"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(226,89,4)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1407.5" _orig_x="32.46"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (24 samples, 0.02%)</title><rect x="386.57477025898066" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(223,163,16)" rx="2" ry="2" _orig_x="521.8" _orig_width="0.2"/>
<text x="389.57477025898066" y="1791.5" _orig_x="524.80"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (11 samples, 0.01%)</title><rect x="201.73767752715122" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(253,181,10)" rx="2" ry="2" _orig_x="446.8" _orig_width="0.1"/>
<text x="204.73767752715122" y="1743.5" _orig_x="449.80"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="885" width="0.20827067669172933" height="15.0" fill="rgb(227,101,19)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="895.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="327.09590643274856" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(250,1,6)" rx="2" ry="2" _orig_x="333.2" _orig_width="0.2"/>
<text x="330.09590643274856" y="2047.5" _orig_x="336.20"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (172 samples, 0.14%)</title><rect x="101.92564745196326" y="1717" width="4.189640768588137" height="15.0" fill="rgb(247,88,4)" rx="2" ry="2" _orig_x="406.3" _orig_width="1.7"/>
<text x="104.92564745196326" y="1727.5" _orig_x="409.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="883.2827485380117" y="1717" width="0.5206766917293233" height="15.0" fill="rgb(216,139,32)" rx="2" ry="2" _orig_x="867.3" _orig_width="0.5"/>
<text x="886.2827485380117" y="1727.5" _orig_x="870.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,089 samples, 0.92%)</title><rect x="256.8045530492899" y="2021" width="11.246616541353385" height="15.0" fill="rgb(223,132,35)" rx="2" ry="2" _orig_x="265.7" _orig_width="10.8"/>
<text x="259.8045530492899" y="2031.5" _orig_x="268.72"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (11 samples, 0.01%)</title><rect x="842.752715121136" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(241,50,0)" rx="2" ry="2" _orig_x="706.9" _orig_width="0.1"/>
<text x="845.752715121136" y="1807.5" _orig_x="709.88"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(213,51,37)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1823.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="188.17936507936514" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(220,177,37)" rx="2" ry="2" _orig_x="199.8" _orig_width="0.2"/>
<text x="191.17936507936514" y="1439.5" _orig_x="202.78"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (860 samples, 0.72%)</title><rect x="699.8120300751879" y="1797" width="21.194653299916457" height="15.0" fill="rgb(242,132,1)" rx="2" ry="2" _orig_x="648.9" _orig_width="8.6"/>
<text x="702.8120300751879" y="1807.5" _orig_x="651.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="19.7" y="1701" width="0.1" height="15.0" fill="rgb(244,104,46)" rx="2" ry="2"/>
<text x="22.67" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="16.66846282372604" y="1813" width="0.10413533834586466" height="15.0" fill="rgb(212,131,52)" rx="2" ry="2" _orig_x="35.1" _orig_width="0.1"/>
<text x="19.66846282372604" y="1823.5" _orig_x="38.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (504 samples, 0.42%)</title><rect x="247.64064327485383" y="1941" width="5.206766917293233" height="15.0" fill="rgb(250,131,34)" rx="2" ry="2" _orig_x="256.9" _orig_width="5.0"/>
<text x="250.64064327485383" y="1951.5" _orig_x="259.89"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="118.30455304928994" y="1317" width="0.10413533834586466" height="15.0" fill="rgb(221,35,1)" rx="2" ry="2" _orig_x="132.7" _orig_width="0.1"/>
<text x="121.30455304928994" y="1327.5" _orig_x="135.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.07%)</title><rect x="320.8477861319967" y="2005" width="0.937218045112782" height="15.0" fill="rgb(246,206,21)" rx="2" ry="2" _orig_x="327.2" _orig_width="0.9"/>
<text x="323.8477861319967" y="2015.5" _orig_x="330.23"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (11 samples, 0.01%)</title><rect x="351.08604845446945" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(214,20,53)" rx="2" ry="2" _orig_x="507.4" _orig_width="0.1"/>
<text x="354.08604845446945" y="1743.5" _orig_x="510.38"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_Node_iterator_base (12 samples, 0.01%)</title><rect x="371.78780284043427" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(250,133,28)" rx="2" ry="2" _orig_x="515.8" _orig_width="0.2"/>
<text x="374.78780284043427" y="1775.5" _orig_x="518.84"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="28.3" y="2005" width="0.1" height="15.0" fill="rgb(253,127,51)" rx="2" ry="2"/>
<text x="31.30" y="2015.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (12 samples, 0.01%)</title><rect x="815.6432748538011" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(209,171,50)" rx="2" ry="2" _orig_x="695.9" _orig_width="0.1"/>
<text x="818.6432748538011" y="1695.5" _orig_x="698.87"/>
</g>
<g class="hide">
<title>[code] (27 samples, 0.02%)</title><rect x="99.24778613199672" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(218,59,45)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.2"/>
<text x="102.24778613199672" y="1391.5" _orig_x="117.38"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1173" width="0.31240601503759396" height="15.0" fill="rgb(252,108,9)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1183.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[perf-58119.map] (329 samples, 0.28%)</title><rect x="114.45154553049295" y="1477" width="3.4364661654135333" height="15.0" fill="rgb(235,50,54)" rx="2" ry="2" _orig_x="129.0" _orig_width="3.3"/>
<text x="117.45154553049295" y="1487.5" _orig_x="132.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (574 samples, 0.48%)</title><rect x="246.91169590643278" y="1973" width="5.935714285714286" height="15.0" fill="rgb(243,127,9)" rx="2" ry="2" _orig_x="256.2" _orig_width="5.7"/>
<text x="249.91169590643278" y="1983.5" _orig_x="259.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (12 samples, 0.01%)</title><rect x="105.86883876357554" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(231,0,22)" rx="2" ry="2" _orig_x="407.9" _orig_width="0.1"/>
<text x="108.86883876357554" y="1695.5" _orig_x="410.85"/>
</g>
<g class="hide">
<title>[unknown] (627 samples, 0.53%)</title><rect x="59.57222222222227" y="2037" width="6.4563909774436095" height="15.0" fill="rgb(254,76,24)" rx="2" ry="2" _orig_x="76.3" _orig_width="6.2"/>
<text x="62.57222222222227" y="2047.5" _orig_x="79.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.12%)</title><rect x="928.7898913951545" y="1829" width="1.5620300751879699" height="15.0" fill="rgb(249,55,33)" rx="2" ry="2" _orig_x="911.0" _orig_width="1.5"/>
<text x="931.7898913951545" y="1839.5" _orig_x="913.99"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (487 samples, 0.41%)</title><rect x="337.5313283208019" y="1765" width="12.076023391812864" height="15.0" fill="rgb(239,15,53)" rx="2" ry="2" _orig_x="501.9" _orig_width="4.9"/>
<text x="340.5313283208019" y="1775.5" _orig_x="504.93"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (18 samples, 0.02%)</title><rect x="1098.5672514619882" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(222,226,39)" rx="2" ry="2" _orig_x="810.7" _orig_width="0.2"/>
<text x="1101.5672514619882" y="1855.5" _orig_x="813.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="360.1" y="2053" width="0.4" height="15.0" fill="rgb(210,147,17)" rx="2" ry="2"/>
<text x="363.13" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="1163.4937825912555" y="1893" width="0.4733253108704372" height="15.0" fill="rgb(232,204,29)" rx="2" ry="2" _orig_x="848.5" _orig_width="0.2"/>
<text x="1166.4937825912555" y="1903.5" _orig_x="851.50"/>
</g>
<g class="hide">
<title>g_main_context_prepare (12 samples, 0.01%)</title><rect x="234.5195906432749" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(230,53,0)" rx="2" ry="2" _orig_x="244.3" _orig_width="0.1"/>
<text x="237.5195906432749" y="2031.5" _orig_x="247.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="22.1" y="1733" width="0.1" height="15.0" fill="rgb(210,119,8)" rx="2" ry="2"/>
<text x="25.11" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="125.80229741019221" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(224,182,28)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1727.5" _orig_x="142.90"/>
</g>
<g class="hide">
<title>__GI___libc_open (15 samples, 0.01%)</title><rect x="933.3718462823726" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(219,131,43)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="2047.5" _orig_x="918.41"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (169 samples, 0.14%)</title><rect x="310.42188805346694" y="1765" width="4.189640768588137" height="15.0" fill="rgb(235,112,48)" rx="2" ry="2" _orig_x="490.9" _orig_width="1.7"/>
<text x="313.42188805346694" y="1775.5" _orig_x="493.92"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (940 samples, 0.79%)</title><rect x="699.0726817042607" y="1829" width="22.91979949874687" height="15.0" fill="rgb(218,185,6)" rx="2" ry="2" _orig_x="648.6" _orig_width="9.3"/>
<text x="702.0726817042607" y="1839.5" _orig_x="651.57">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="354.483500417711" y="1973" width="0.6248120300751879" height="15.0" fill="rgb(220,48,39)" rx="2" ry="2" _orig_x="359.5" _orig_width="0.6"/>
<text x="357.483500417711" y="1983.5" _orig_x="362.49"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::Allocate&lt;blink::HeapVector&lt;blink::Member&lt;blink::MessagePort&gt;, 0u&gt; &gt; (45 samples, 0.04%)</title><rect x="188.59590643274856" y="1429" width="0.5206766917293233" height="15.0" fill="rgb(247,153,31)" rx="2" ry="2" _orig_x="200.2" _orig_width="0.5"/>
<text x="191.59590643274856" y="1439.5" _orig_x="203.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="911.6075605680869" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(248,152,13)" rx="2" ry="2" _orig_x="894.5" _orig_width="0.2"/>
<text x="914.6075605680869" y="2015.5" _orig_x="897.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="97.16507936507942" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(231,19,32)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="1967.5" _orig_x="115.38"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (40 samples, 0.03%)</title><rect x="415.65580618212203" y="1797" width="0.985797827903091" height="15.0" fill="rgb(214,28,34)" rx="2" ry="2" _orig_x="533.6" _orig_width="0.4"/>
<text x="418.65580618212203" y="1807.5" _orig_x="536.62"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1989" width="12.912781954887219" height="15.0" fill="rgb(245,149,13)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1999.5" _orig_x="126.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.4" y="2005" width="0.2" height="15.0" fill="rgb(232,211,34)" rx="2" ry="2"/>
<text x="18.40" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="10.8" y="1989" width="0.4" height="15.0" fill="rgb(233,120,11)" rx="2" ry="2"/>
<text x="13.81" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (16 samples, 0.01%)</title><rect x="833.3876357560569" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(228,106,37)" rx="2" ry="2" _orig_x="703.1" _orig_width="0.1"/>
<text x="836.3876357560569" y="1775.5" _orig_x="706.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="11.253425229741072" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(205,77,2)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1903.5" _orig_x="32.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (597 samples, 0.50%)</title><rect x="922.333500417711" y="1701" width="6.2481203007518795" height="15.0" fill="rgb(248,84,0)" rx="2" ry="2" _orig_x="904.8" _orig_width="6.0"/>
<text x="925.333500417711" y="1711.5" _orig_x="907.84"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (42 samples, 0.04%)</title><rect x="282.0053049289892" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(246,159,21)" rx="2" ry="2" _orig_x="289.9" _orig_width="0.4"/>
<text x="285.0053049289892" y="1887.5" _orig_x="292.85"/>
</g>
<g class="hide">
<title>[chrome] (17 samples, 0.01%)</title><rect x="11.7" y="1733" width="0.1" height="15.0" fill="rgb(230,150,46)" rx="2" ry="2"/>
<text x="14.66" y="1743.5"/>
</g>
<g class="hide">
<title>[chrome] (16 samples, 0.01%)</title><rect x="92.47898913951552" y="1653" width="0.20827067669172933" height="15.0" fill="rgb(242,87,50)" rx="2" ry="2" _orig_x="107.9" _orig_width="0.2"/>
<text x="95.47898913951552" y="1663.5" _orig_x="110.93"/>
</g>
<g class="hide">
<title>crash_reporter::(anonymous namespace)::CrashKeyBaseSupport::Set (68 samples, 0.06%)</title><rect x="218.89928989139523" y="1717" width="0.6248120300751879" height="15.0" fill="rgb(253,217,41)" rx="2" ry="2" _orig_x="229.3" _orig_width="0.6"/>
<text x="221.89928989139523" y="1727.5" _orig_x="232.25"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="1941" width="2.4992481203007517" height="15.0" fill="rgb(244,99,51)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="1951.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (46 samples, 0.04%)</title><rect x="320.6" y="2053" width="0.5" height="15.0" fill="rgb(225,190,4)" rx="2" ry="2"/>
<text x="323.59" y="2063.5"/>
</g>
<g class="hide">
<title>CefExecuteProcess (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="2005" width="55.81654135338346" height="15.0" fill="rgb(207,32,32)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="2015.5" _orig_x="185.47">CefExecuteProcess </text>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (13 samples, 0.01%)</title><rect x="935.9106098579783" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(229,12,39)" rx="2" ry="2" _orig_x="744.7" _orig_width="0.1"/>
<text x="938.9106098579783" y="1871.5" _orig_x="747.66"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (37 samples, 0.03%)</title><rect x="899.9289891395155" y="1797" width="0.985797827903091" height="15.0" fill="rgb(232,173,28)" rx="2" ry="2" _orig_x="730.1" _orig_width="0.4"/>
<text x="902.9289891395155" y="1807.5" _orig_x="733.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (975 samples, 0.82%)</title><rect x="258.0541771094403" y="1973" width="9.996992481203007" height="15.0" fill="rgb(215,71,9)" rx="2" ry="2" _orig_x="266.9" _orig_width="9.6"/>
<text x="261.0541771094403" y="1983.5" _orig_x="269.85"/>
</g>
<g class="hide">
<title>v8::internal::Builtin_Impl_HandleApiCall (360 samples, 0.30%)</title><rect x="181.93124477861326" y="1541" width="3.644736842105263" height="15.0" fill="rgb(247,75,13)" rx="2" ry="2" _orig_x="193.8" _orig_width="3.5"/>
<text x="184.93124477861326" y="1551.5" _orig_x="196.77"/>
</g>
<g class="hide">
<title>blink::V8MessageEventInit::ToImpl (55 samples, 0.05%)</title><rect x="164.33237259816212" y="1461" width="0.5206766917293233" height="15.0" fill="rgb(229,227,46)" rx="2" ry="2" _orig_x="176.9" _orig_width="0.5"/>
<text x="167.33237259816212" y="1471.5" _orig_x="179.89"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,290 samples, 1.93%)</title><rect x="967.9490392648288" y="1813" width="56.19047619047619" height="15.0" fill="rgb(219,216,54)" rx="2" ry="2" _orig_x="757.7" _orig_width="22.8"/>
<text x="970.9490392648288" y="1823.5" _orig_x="760.73">std::_..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.10%)</title><rect x="54.26131996658318" y="1861" width="1.2496240601503759" height="15.0" fill="rgb(211,153,49)" rx="2" ry="2" _orig_x="71.2" _orig_width="1.2"/>
<text x="57.26131996658318" y="1871.5" _orig_x="74.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (173 samples, 0.15%)</title><rect x="27.005012531328262" y="1733" width="4.189640768588137" height="15.0" fill="rgb(249,70,32)" rx="2" ry="2" _orig_x="375.9" _orig_width="1.7"/>
<text x="30.005012531328262" y="1743.5" _orig_x="378.86"/>
</g>
<g class="hide">
<title>_nv035114rm (12 samples, 0.01%)</title><rect x="344.2" y="2053" width="0.1" height="15.0" fill="rgb(214,183,29)" rx="2" ry="2"/>
<text x="347.17" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,452 samples, 1.22%)</title><rect x="575.6015037593984" y="1813" width="35.48872180451128" height="15.0" fill="rgb(237,224,52)" rx="2" ry="2" _orig_x="598.5" _orig_width="14.4"/>
<text x="578.6015037593984" y="1823.5" _orig_x="601.52">std..</text>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (47 samples, 0.04%)</title><rect x="599.0142021720969" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(210,107,53)" rx="2" ry="2" _orig_x="608.0" _orig_width="0.5"/>
<text x="602.0142021720969" y="1743.5" _orig_x="610.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="355.5248538011696" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(230,37,53)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1903.5" _orig_x="363.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="133.1959064327486" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(239,217,30)" rx="2" ry="2" _orig_x="147.0" _orig_width="0.5"/>
<text x="136.1959064327486" y="1983.5" _orig_x="150.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="188.17936507936514" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(220,48,4)" rx="2" ry="2" _orig_x="199.8" _orig_width="0.2"/>
<text x="191.17936507936514" y="1391.5" _orig_x="202.81"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="624.3984962406014" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(209,6,54)" rx="2" ry="2" _orig_x="618.3" _orig_width="0.1"/>
<text x="627.3984962406014" y="1839.5" _orig_x="621.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="15.4" y="1957" width="0.2" height="15.0" fill="rgb(228,175,36)" rx="2" ry="2"/>
<text x="18.42" y="1967.5"/>
</g>
<g class="hide">
<title>base::TaskAnnotator::RunTask (3,244 samples, 2.73%)</title><rect x="173.91282372598167" y="1781" width="33.53157894736842" height="15.0" fill="rgb(251,9,24)" rx="2" ry="2" _orig_x="186.1" _orig_width="32.2"/>
<text x="176.91282372598167" y="1791.5" _orig_x="189.15">base::TaskAnnotator::RunTask </text>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="48.5" y="2053" width="0.2" height="15.0" fill="rgb(208,33,15)" rx="2" ry="2"/>
<text x="51.53" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(222,109,27)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1391.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.10%)</title><rect x="54.26131996658318" y="1877" width="1.2496240601503759" height="15.0" fill="rgb(209,139,20)" rx="2" ry="2" _orig_x="71.2" _orig_width="1.2"/>
<text x="57.26131996658318" y="1887.5" _orig_x="74.15"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1077" width="0.20827067669172933" height="15.0" fill="rgb(254,121,3)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1087.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="341.2280701754385" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(233,138,0)" rx="2" ry="2" _orig_x="503.4" _orig_width="0.2"/>
<text x="344.2280701754385" y="1743.5" _orig_x="506.44"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (12 samples, 0.01%)</title><rect x="626.6165413533835" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(235,220,20)" rx="2" ry="2" _orig_x="619.2" _orig_width="0.1"/>
<text x="629.6165413533835" y="1823.5" _orig_x="622.18"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (17 samples, 0.01%)</title><rect x="1127.1553884711777" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(254,142,34)" rx="2" ry="2" _orig_x="822.3" _orig_width="0.2"/>
<text x="1130.1553884711777" y="1759.5" _orig_x="825.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.08%)</title><rect x="352.50492898913956" y="2021" width="1.0413533834586466" height="15.0" fill="rgb(229,178,49)" rx="2" ry="2" _orig_x="357.6" _orig_width="1.0"/>
<text x="355.50492898913956" y="2031.5" _orig_x="360.65"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="304.50710108604846" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(216,113,2)" rx="2" ry="2" _orig_x="488.5" _orig_width="0.3"/>
<text x="307.50710108604846" y="1823.5" _orig_x="491.55"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,392 samples, 1.17%)</title><rect x="1103.0033416875522" y="1861" width="34.01002506265664" height="15.0" fill="rgb(241,142,4)" rx="2" ry="2" _orig_x="812.5" _orig_width="13.8"/>
<text x="1106.0033416875522" y="1871.5" _orig_x="815.48">Si..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.07%)</title><rect x="320.8477861319967" y="2021" width="0.937218045112782" height="15.0" fill="rgb(211,153,3)" rx="2" ry="2" _orig_x="327.2" _orig_width="0.9"/>
<text x="323.8477861319967" y="2031.5" _orig_x="330.21"/>
</g>
<g class="hide">
<title>[chrome] (19 samples, 0.02%)</title><rect x="92.16658312447791" y="1653" width="0.20827067669172933" height="15.0" fill="rgb(215,28,43)" rx="2" ry="2" _orig_x="107.6" _orig_width="0.2"/>
<text x="95.16658312447791" y="1663.5" _orig_x="110.64"/>
</g>
<g>
<title>Schema::GetColumn (14 samples, 0.01%)</title><rect x="403.08688387635755" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(235,25,49)" rx="2" ry="2" _orig_x="528.5" _orig_width="0.1"/>
<text x="406.08688387635755" y="1855.5" _orig_x="531.49"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (43 samples, 0.04%)</title><rect x="839.795321637427" y="1781" width="0.985797827903091" height="15.0" fill="rgb(211,151,19)" rx="2" ry="2" _orig_x="705.7" _orig_width="0.4"/>
<text x="842.795321637427" y="1791.5" _orig_x="708.70"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (67 samples, 0.06%)</title><rect x="770.050125313283" y="1845" width="1.7251461988304093" height="15.0" fill="rgb(248,31,39)" rx="2" ry="2" _orig_x="677.4" _orig_width="0.7"/>
<text x="773.050125313283" y="1855.5" _orig_x="680.44"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskCompleted (397 samples, 0.33%)</title><rect x="209.2147034252298" y="1733" width="4.061278195488722" height="15.0" fill="rgb(249,0,4)" rx="2" ry="2" _orig_x="220.0" _orig_width="3.9"/>
<text x="212.2147034252298" y="1743.5" _orig_x="222.98"/>
</g>
<g class="hide">
<title>azx_get_position (21 samples, 0.02%)</title><rect x="69.77748538011701" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(252,45,6)" rx="2" ry="2" _orig_x="86.1" _orig_width="0.2"/>
<text x="72.77748538011701" y="1871.5" _orig_x="89.12"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1653" width="0.31240601503759396" height="15.0" fill="rgb(234,72,36)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1663.5" _orig_x="32.46"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (38 samples, 0.03%)</title><rect x="355.5221386800333" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(229,164,8)" rx="2" ry="2" _orig_x="509.2" _orig_width="0.3"/>
<text x="358.5221386800333" y="1743.5" _orig_x="512.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (13 samples, 0.01%)</title><rect x="1172.0091896407685" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(220,28,21)" rx="2" ry="2" _orig_x="840.5" _orig_width="0.1"/>
<text x="1175.0091896407685" y="1855.5" _orig_x="843.49"/>
</g>
<g class="hide">
<title>base::MessagePumpDefault::Run (5,390 samples, 4.53%)</title><rect x="170.16395154553055" y="1829" width="55.712406015037594" height="15.0" fill="rgb(246,57,17)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.5"/>
<text x="173.16395154553055" y="1839.5" _orig_x="185.47">base::MessagePumpDefault::Run </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="348.2353801169591" y="1909" width="0.7289473684210526" height="15.0" fill="rgb(229,121,49)" rx="2" ry="2" _orig_x="353.5" _orig_width="0.7"/>
<text x="351.2353801169591" y="1919.5" _orig_x="356.51"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (59 samples, 0.05%)</title><rect x="118.19131161236417" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(210,139,2)" rx="2" ry="2" _orig_x="412.9" _orig_width="0.6"/>
<text x="121.19131161236417" y="1823.5" _orig_x="415.89"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.11%)</title><rect x="31.351545530492956" y="1829" width="1.2496240601503759" height="15.0" fill="rgb(230,148,30)" rx="2" ry="2" _orig_x="49.2" _orig_width="1.2"/>
<text x="34.351545530492956" y="1839.5" _orig_x="52.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="145.2756056808689" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(222,228,47)" rx="2" ry="2" _orig_x="158.6" _orig_width="0.2"/>
<text x="148.2756056808689" y="1919.5" _orig_x="161.64"/>
</g>
<g class="hide">
<title>InotifyBackend::handleSubscription (143 samples, 0.12%)</title><rect x="146.00455304928997" y="1973" width="1.4578947368421051" height="15.0" fill="rgb(227,31,9)" rx="2" ry="2" _orig_x="159.3" _orig_width="1.4"/>
<text x="149.00455304928997" y="1983.5" _orig_x="162.26"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (12 samples, 0.01%)</title><rect x="579.7911445279867" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(220,207,50)" rx="2" ry="2" _orig_x="600.2" _orig_width="0.1"/>
<text x="582.7911445279867" y="1727.5" _orig_x="603.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="934.1007936507937" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(232,10,17)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="2015.5" _orig_x="919.10"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (17 samples, 0.01%)</title><rect x="746.8838763575604" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(235,3,13)" rx="2" ry="2" _orig_x="668.0" _orig_width="0.2"/>
<text x="749.8838763575604" y="1807.5" _orig_x="671.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="354.5876357560569" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(235,48,47)" rx="2" ry="2" _orig_x="359.6" _orig_width="0.5"/>
<text x="357.5876357560569" y="1967.5" _orig_x="362.65"/>
</g>
<g class="hide">
<title>[code] (21 samples, 0.02%)</title><rect x="12.7" y="1781" width="0.2" height="15.0" fill="rgb(236,13,40)" rx="2" ry="2"/>
<text x="15.72" y="1791.5"/>
</g>
<g class="hide">
<title>[perf-8415.map] (14 samples, 0.01%)</title><rect x="233.26996658312453" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(247,187,21)" rx="2" ry="2" _orig_x="243.1" _orig_width="0.2"/>
<text x="236.26996658312453" y="2047.5" _orig_x="246.14"/>
</g>
<g class="hide">
<title>__libc_write (22 samples, 0.02%)</title><rect x="130.69665831244782" y="1589" width="0.31240601503759396" height="15.0" fill="rgb(213,106,4)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1599.5" _orig_x="147.63"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1669" width="2.2909774436090227" height="15.0" fill="rgb(212,206,44)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1679.5" _orig_x="69.82"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="740.969089390142" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(246,135,17)" rx="2" ry="2" _orig_x="665.6" _orig_width="0.1"/>
<text x="743.969089390142" y="1775.5" _orig_x="668.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="2037" width="0.4733253108704372" height="15.0" fill="rgb(220,225,19)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="2047.5" _orig_x="371.76"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="125.80229741019221" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(254,105,9)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1743.5" _orig_x="142.89"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (12 samples, 0.01%)</title><rect x="428.471177944862" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(251,6,28)" rx="2" ry="2" _orig_x="538.8" _orig_width="0.1"/>
<text x="431.471177944862" y="1711.5" _orig_x="541.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="10.6" y="1893" width="0.1" height="15.0" fill="rgb(251,129,43)" rx="2" ry="2"/>
<text x="13.57" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (546 samples, 0.46%)</title><rect x="134.96620718462827" y="1957" width="5.727443609022556" height="15.0" fill="rgb(226,80,25)" rx="2" ry="2" _orig_x="148.7" _orig_width="5.5"/>
<text x="137.96620718462827" y="1967.5" _orig_x="151.74"/>
</g>
<g>
<title>GetCmpBool (20 samples, 0.02%)</title><rect x="954.6407685881369" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(231,157,23)" rx="2" ry="2" _orig_x="752.3" _orig_width="0.2"/>
<text x="957.6407685881369" y="1887.5" _orig_x="755.27"/>
</g>
<g class="hide">
<title>[perf-58119.map] (12 samples, 0.01%)</title><rect x="112.57710944026739" y="1493" width="0.10413533834586466" height="15.0" fill="rgb(243,30,51)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1503.5" _orig_x="130.21"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (12 samples, 0.01%)</title><rect x="414.4235588972431" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(237,83,25)" rx="2" ry="2" _orig_x="533.1" _orig_width="0.2"/>
<text x="417.4235588972431" y="1807.5" _orig_x="536.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="124.34440267335009" y="1045" width="0.10413533834586466" height="15.0" fill="rgb(245,34,29)" rx="2" ry="2" _orig_x="138.5" _orig_width="0.1"/>
<text x="127.34440267335009" y="1055.5" _orig_x="141.46"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (49 samples, 0.04%)</title><rect x="117.8880116959065" y="1717" width="0.5206766917293233" height="15.0" fill="rgb(252,75,23)" rx="2" ry="2" _orig_x="132.3" _orig_width="0.5"/>
<text x="120.8880116959065" y="1727.5" _orig_x="135.35"/>
</g>
<g class="hide">
<title>[unknown] (88 samples, 0.07%)</title><rect x="37.8" y="2053" width="0.9" height="15.0" fill="rgb(229,160,50)" rx="2" ry="2"/>
<text x="40.84" y="2063.5"/>
</g>
<g class="hide">
<title>log_writer (11 samples, 0.01%)</title><rect x="327.61658312447787" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(252,121,15)" rx="2" ry="2" _orig_x="333.7" _orig_width="0.1"/>
<text x="330.61658312447787" y="1983.5" _orig_x="336.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="108.82823725981625" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(219,56,18)" rx="2" ry="2" _orig_x="123.6" _orig_width="0.1"/>
<text x="111.82823725981625" y="1887.5" _orig_x="126.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,140 samples, 0.96%)</title><rect x="916.8143274853801" y="1829" width="11.767293233082707" height="15.0" fill="rgb(212,31,24)" rx="2" ry="2" _orig_x="899.5" _orig_width="11.3"/>
<text x="919.8143274853801" y="1839.5" _orig_x="902.45"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (133 samples, 0.11%)</title><rect x="134.2105263157894" y="1765" width="3.2038429406850457" height="15.0" fill="rgb(251,101,44)" rx="2" ry="2" _orig_x="419.4" _orig_width="1.3"/>
<text x="137.2105263157894" y="1775.5" _orig_x="422.40"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (26 samples, 0.02%)</title><rect x="1087.723475355054" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(228,155,31)" rx="2" ry="2" _orig_x="806.3" _orig_width="0.3"/>
<text x="1090.723475355054" y="1823.5" _orig_x="809.32"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="287.4203425229742" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(217,105,44)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1935.5" _orig_x="298.05"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (383 samples, 0.32%)</title><rect x="87.16808688387641" y="2037" width="3.957142857142857" height="15.0" fill="rgb(206,161,36)" rx="2" ry="2" _orig_x="102.8" _orig_width="3.8"/>
<text x="90.16808688387641" y="2047.5" _orig_x="105.79"/>
</g>
<g class="hide">
<title>[code] (19 samples, 0.02%)</title><rect x="31.351545530492956" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(245,207,8)" rx="2" ry="2" _orig_x="49.2" _orig_width="0.2"/>
<text x="34.351545530492956" y="1791.5" _orig_x="52.19"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (71 samples, 0.06%)</title><rect x="144.06850459482033" y="1813" width="1.7251461988304093" height="15.0" fill="rgb(235,111,53)" rx="2" ry="2" _orig_x="423.4" _orig_width="0.7"/>
<text x="147.06850459482033" y="1823.5" _orig_x="426.44"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (12 samples, 0.01%)</title><rect x="634.7493734335839" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(250,103,6)" rx="2" ry="2" _orig_x="622.5" _orig_width="0.2"/>
<text x="637.7493734335839" y="1791.5" _orig_x="625.53"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="629" width="0.31240601503759396" height="15.0" fill="rgb(250,145,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="639.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (28 samples, 0.02%)</title><rect x="25.772765246449396" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(233,171,5)" rx="2" ry="2" _orig_x="375.4" _orig_width="0.3"/>
<text x="28.772765246449396" y="1727.5" _orig_x="378.44"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(206,67,37)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1887.5" _orig_x="328.48"/>
</g>
<g>
<title>std::forward&lt;void* const&amp;&gt; (12 samples, 0.01%)</title><rect x="608.8721804511277" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(218,48,19)" rx="2" ry="2" _orig_x="612.0" _orig_width="0.1"/>
<text x="611.8721804511277" y="1775.5" _orig_x="615.02"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (28 samples, 0.02%)</title><rect x="183.07673350041776" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(250,68,19)" rx="2" ry="2" _orig_x="194.9" _orig_width="0.3"/>
<text x="186.07673350041776" y="1375.5" _orig_x="197.92"/>
</g>
<g class="hide">
<title>[perf-58145.map] (66 samples, 0.06%)</title><rect x="130.38425229741026" y="1829" width="0.7289473684210526" height="15.0" fill="rgb(211,54,50)" rx="2" ry="2" _orig_x="144.3" _orig_width="0.7"/>
<text x="133.38425229741026" y="1839.5" _orig_x="147.32"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (30 samples, 0.03%)</title><rect x="488.6048454469508" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(229,143,13)" rx="2" ry="2" _orig_x="563.2" _orig_width="0.3"/>
<text x="491.6048454469508" y="1775.5" _orig_x="566.20"/>
</g>
<g>
<title>Field::Field (20 samples, 0.02%)</title><rect x="792.4770258980785" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(205,58,4)" rx="2" ry="2" _orig_x="686.5" _orig_width="0.2"/>
<text x="795.4770258980785" y="1871.5" _orig_x="689.47"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(243,220,0)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1951.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (1,187 samples, 1.00%)</title><rect x="109.55718462823731" y="1861" width="12.28796992481203" height="15.0" fill="rgb(213,213,48)" rx="2" ry="2" _orig_x="124.3" _orig_width="11.8"/>
<text x="112.55718462823731" y="1871.5" _orig_x="127.33"/>
</g>
<g class="hide">
<title>[firefox] (15 samples, 0.01%)</title><rect x="25.4" y="2053" width="0.2" height="15.0" fill="rgb(207,62,36)" rx="2" ry="2"/>
<text x="28.44" y="2063.5"/>
</g>
<g class="hide">
<title>QTimerEvent::~QTimerEvent (107 samples, 0.09%)</title><rect x="230.35417710944031" y="2037" width="1.1454887218045113" height="15.0" fill="rgb(243,31,17)" rx="2" ry="2" _orig_x="240.3" _orig_width="1.1"/>
<text x="233.35417710944031" y="2047.5" _orig_x="243.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="133.30004177109444" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(236,50,47)" rx="2" ry="2" _orig_x="147.1" _orig_width="0.3"/>
<text x="136.30004177109444" y="1967.5" _orig_x="150.11"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (122 samples, 0.10%)</title><rect x="514.9749373433583" y="1765" width="2.957393483709273" height="15.0" fill="rgb(242,40,32)" rx="2" ry="2" _orig_x="573.9" _orig_width="1.2"/>
<text x="517.9749373433583" y="1775.5" _orig_x="576.93"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="319.077485380117" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(239,165,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1967.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (11 samples, 0.01%)</title><rect x="543.3166248955721" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(225,56,27)" rx="2" ry="2" _orig_x="585.4" _orig_width="0.1"/>
<text x="546.3166248955721" y="1743.5" _orig_x="588.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.08%)</title><rect x="238.16432748538017" y="1877" width="1.0413533834586466" height="15.0" fill="rgb(237,90,48)" rx="2" ry="2" _orig_x="247.8" _orig_width="1.0"/>
<text x="241.16432748538017" y="1887.5" _orig_x="250.81"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (119 samples, 0.10%)</title><rect x="286.3789891395155" y="1957" width="1.2496240601503759" height="15.0" fill="rgb(246,124,6)" rx="2" ry="2" _orig_x="294.1" _orig_width="1.2"/>
<text x="289.3789891395155" y="1967.5" _orig_x="297.14"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (251 samples, 0.21%)</title><rect x="671.2238930659981" y="1765" width="6.1612364243943185" height="15.0" fill="rgb(246,132,22)" rx="2" ry="2" _orig_x="637.3" _orig_width="2.5"/>
<text x="674.2238930659981" y="1775.5" _orig_x="640.31"/>
</g>
<g class="hide">
<title>base::PlatformThread::CurrentId (13 samples, 0.01%)</title><rect x="205.15342522974106" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(238,28,47)" rx="2" ry="2" _orig_x="216.1" _orig_width="0.2"/>
<text x="208.15342522974106" y="1727.5" _orig_x="219.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="308.87222222222226" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(247,73,0)" rx="2" ry="2" _orig_x="315.7" _orig_width="0.2"/>
<text x="311.87222222222226" y="1871.5" _orig_x="318.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,720 samples, 18.26%)</title><rect x="938.5786131996658" y="2021" width="224.41165413533835" height="15.0" fill="rgb(227,20,39)" rx="2" ry="2" _orig_x="920.4" _orig_width="215.5"/>
<text x="941.5786131996658" y="2031.5" _orig_x="923.38">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (73 samples, 0.06%)</title><rect x="762.6566416040099" y="1749" width="1.971595655806182" height="15.0" fill="rgb(218,208,31)" rx="2" ry="2" _orig_x="674.4" _orig_width="0.8"/>
<text x="765.6566416040099" y="1759.5" _orig_x="677.44"/>
</g>
<g class="hide">
<title>[perf-58119.map] (11 samples, 0.01%)</title><rect x="112.36883876357565" y="1493" width="0.10413533834586466" height="15.0" fill="rgb(219,96,27)" rx="2" ry="2" _orig_x="127.0" _orig_width="0.1"/>
<text x="115.36883876357565" y="1503.5" _orig_x="129.99"/>
</g>
<g class="hide">
<title>blink::scheduler::TaskQueueThrottler::OnTaskRunTimeReported (23 samples, 0.02%)</title><rect x="212.96357560568092" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(210,203,13)" rx="2" ry="2" _orig_x="223.6" _orig_width="0.2"/>
<text x="215.96357560568092" y="1727.5" _orig_x="226.61"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (18 samples, 0.02%)</title><rect x="1120.2548036758562" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(205,229,47)" rx="2" ry="2" _orig_x="819.5" _orig_width="0.2"/>
<text x="1123.2548036758562" y="1759.5" _orig_x="822.53"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (24 samples, 0.02%)</title><rect x="877.0091896407685" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(249,47,17)" rx="2" ry="2" _orig_x="720.8" _orig_width="0.2"/>
<text x="880.0091896407685" y="1791.5" _orig_x="723.77"/>
</g>
<g class="hide">
<title>[unknown] (16 samples, 0.01%)</title><rect x="10.628613199665887" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(224,211,30)" rx="2" ry="2" _orig_x="29.3" _orig_width="0.2"/>
<text x="13.628613199665887" y="1967.5" _orig_x="32.30"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (11 samples, 0.01%)</title><rect x="463.46700083542186" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(216,42,14)" rx="2" ry="2" _orig_x="553.0" _orig_width="0.2"/>
<text x="466.46700083542186" y="1695.5" _orig_x="556.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.05%)</title><rect x="254.40944026733504" y="1941" width="0.6248120300751879" height="15.0" fill="rgb(225,216,16)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="257.40944026733507" y="1951.5" _orig_x="266.39"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (24 samples, 0.02%)</title><rect x="398.1578947368421" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(214,91,36)" rx="2" ry="2" _orig_x="526.5" _orig_width="0.3"/>
<text x="401.1578947368421" y="1743.5" _orig_x="529.54"/>
</g>
<g class="hide">
<title>base::TimeTicks::Now (12 samples, 0.01%)</title><rect x="216.40004177109446" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(208,200,26)" rx="2" ry="2" _orig_x="226.9" _orig_width="0.1"/>
<text x="219.40004177109446" y="1743.5" _orig_x="229.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="11.774101921470397" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(245,222,33)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="2015.5" _orig_x="33.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (28 samples, 0.02%)</title><rect x="522.3684210526314" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(224,78,24)" rx="2" ry="2" _orig_x="576.9" _orig_width="0.3"/>
<text x="525.3684210526314" y="1791.5" _orig_x="579.94"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (14 samples, 0.01%)</title><rect x="489.344193817878" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(233,48,1)" rx="2" ry="2" _orig_x="563.5" _orig_width="0.2"/>
<text x="492.344193817878" y="1791.5" _orig_x="566.54"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTaskImpl (78 samples, 0.07%)</title><rect x="166.5192147034253" y="1781" width="0.8330827067669173" height="15.0" fill="rgb(237,66,46)" rx="2" ry="2" _orig_x="179.0" _orig_width="0.8"/>
<text x="169.5192147034253" y="1791.5" _orig_x="182.04"/>
</g>
<g class="hide">
<title>[unknown] (19 samples, 0.02%)</title><rect x="10.316207184628293" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(230,195,10)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1855.5" _orig_x="32.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="271.80004177109447" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(240,6,46)" rx="2" ry="2" _orig_x="280.1" _orig_width="0.2"/>
<text x="274.80004177109447" y="1967.5" _orig_x="283.15"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (17 samples, 0.01%)</title><rect x="1073.1829573934835" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(237,81,24)" rx="2" ry="2" _orig_x="800.4" _orig_width="0.2"/>
<text x="1076.1829573934835" y="1775.5" _orig_x="803.43"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (139 samples, 0.12%)</title><rect x="232.7903091060985" y="1749" width="3.4502923976608186" height="15.0" fill="rgb(228,211,33)" rx="2" ry="2" _orig_x="459.4" _orig_width="1.4"/>
<text x="235.7903091060985" y="1759.5" _orig_x="462.43"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (42 samples, 0.04%)</title><rect x="389.53216374269005" y="1781" width="0.985797827903091" height="15.0" fill="rgb(218,141,45)" rx="2" ry="2" _orig_x="523.0" _orig_width="0.4"/>
<text x="392.53216374269005" y="1791.5" _orig_x="525.97"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (159 samples, 0.13%)</title><rect x="129.55116959064333" y="1941" width="1.5620300751879699" height="15.0" fill="rgb(234,201,4)" rx="2" ry="2" _orig_x="143.5" _orig_width="1.5"/>
<text x="132.55116959064333" y="1951.5" _orig_x="146.45"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (35 samples, 0.03%)</title><rect x="561.3074352548037" y="1813" width="0.985797827903091" height="15.0" fill="rgb(221,212,39)" rx="2" ry="2" _orig_x="592.7" _orig_width="0.4"/>
<text x="564.3074352548037" y="1823.5" _orig_x="595.72"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="601.9715956558063" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(220,228,18)" rx="2" ry="2" _orig_x="609.2" _orig_width="0.1"/>
<text x="604.9715956558063" y="1759.5" _orig_x="612.18"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (229 samples, 0.19%)</title><rect x="984.2147034252296" y="1733" width="5.668337510442773" height="15.0" fill="rgb(251,186,41)" rx="2" ry="2" _orig_x="764.3" _orig_width="2.3"/>
<text x="987.2147034252296" y="1743.5" _orig_x="767.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="891.5094402673351" y="1669" width="0.41654135338345866" height="15.0" fill="rgb(231,47,3)" rx="2" ry="2" _orig_x="875.2" _orig_width="0.4"/>
<text x="894.5094402673351" y="1679.5" _orig_x="878.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,243 samples, 1.89%)</title><rect x="1139.247410192147" y="1797" width="23.22218045112782" height="15.0" fill="rgb(245,158,20)" rx="2" ry="2" _orig_x="1113.1" _orig_width="22.3"/>
<text x="1142.247410192147" y="1807.5" _orig_x="1116.15">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.08%)</title><rect x="51.97034252297416" y="1989" width="1.0413533834586466" height="15.0" fill="rgb(221,83,16)" rx="2" ry="2" _orig_x="69.0" _orig_width="1.0"/>
<text x="54.97034252297416" y="1999.5" _orig_x="72.04"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1541" width="2.2909774436090227" height="15.0" fill="rgb(231,71,46)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1551.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (49 samples, 0.04%)</title><rect x="47.2" y="2053" width="0.4" height="15.0" fill="rgb(231,0,46)" rx="2" ry="2"/>
<text x="50.15" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (480 samples, 0.40%)</title><rect x="893.4880116959065" y="1893" width="4.894360902255639" height="15.0" fill="rgb(218,124,32)" rx="2" ry="2" _orig_x="877.1" _orig_width="4.7"/>
<text x="896.4880116959065" y="1903.5" _orig_x="880.07"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (11 samples, 0.01%)</title><rect x="243.14118629908108" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(243,209,24)" rx="2" ry="2" _orig_x="463.6" _orig_width="0.1"/>
<text x="246.14118629908108" y="1871.5" _orig_x="466.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="928.3733500417711" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(230,166,54)" rx="2" ry="2" _orig_x="910.6" _orig_width="0.2"/>
<text x="931.3733500417711" y="1503.5" _orig_x="913.60"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (12 samples, 0.01%)</title><rect x="203.21637426900577" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(211,69,30)" rx="2" ry="2" _orig_x="447.4" _orig_width="0.1"/>
<text x="206.21637426900577" y="1823.5" _orig_x="450.42"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1685" width="2.2909774436090227" height="15.0" fill="rgb(241,21,35)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1695.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="55.30267335004183" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(212,192,2)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="58.30267335004183" y="1727.5" _orig_x="75.22"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(244,103,14)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1839.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::DeserializeFrom (4,140 samples, 3.48%)</title><rect x="792.9699248120302" y="1861" width="101.04427736006683" height="15.0" fill="rgb(209,80,44)" rx="2" ry="2" _orig_x="686.7" _orig_width="41.0"/>
<text x="795.9699248120302" y="1871.5" _orig_x="689.67">Row::Deserial..</text>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(205,43,18)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1935.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.10%)</title><rect x="356.5" y="2053" width="1.1" height="15.0" fill="rgb(213,149,21)" rx="2" ry="2"/>
<text x="359.45" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="27.915079365079418" y="85" width="0.20827067669172933" height="15.0" fill="rgb(234,85,39)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.2"/>
<text x="30.915079365079418" y="95.5" _orig_x="48.88"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (15 samples, 0.01%)</title><rect x="322.3" y="2053" width="0.2" height="15.0" fill="rgb(251,179,23)" rx="2" ry="2"/>
<text x="325.34" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="28.956432748538067" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(247,73,6)" rx="2" ry="2" _orig_x="46.9" _orig_width="0.2"/>
<text x="31.956432748538067" y="1967.5" _orig_x="49.88"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (24 samples, 0.02%)</title><rect x="313.1328320802005" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(215,39,29)" rx="2" ry="2" _orig_x="492.0" _orig_width="0.2"/>
<text x="316.1328320802005" y="1727.5" _orig_x="494.96"/>
</g>
<g class="hide">
<title>__poll (114 samples, 0.10%)</title><rect x="303.5613199665832" y="2037" width="1.1454887218045113" height="15.0" fill="rgb(243,204,0)" rx="2" ry="2" _orig_x="310.6" _orig_width="1.1"/>
<text x="306.5613199665832" y="2047.5" _orig_x="313.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="303.1447786131997" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(229,150,24)" rx="2" ry="2" _orig_x="310.2" _orig_width="0.3"/>
<text x="306.1447786131997" y="1775.5" _orig_x="313.20"/>
</g>
<g class="hide">
<title>__xstat64 (17 samples, 0.01%)</title><rect x="82.79440267335009" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(240,146,45)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="2047.5" _orig_x="101.62"/>
</g>
<g class="hide">
<title>[perf-58119.map] (344 samples, 0.29%)</title><rect x="114.3474101921471" y="1509" width="3.5406015037593983" height="15.0" fill="rgb(217,197,24)" rx="2" ry="2" _orig_x="128.9" _orig_width="3.4"/>
<text x="117.3474101921471" y="1519.5" _orig_x="131.86"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (40 samples, 0.03%)</title><rect x="100.20050125313288" y="1717" width="0.985797827903091" height="15.0" fill="rgb(209,212,15)" rx="2" ry="2" _orig_x="405.6" _orig_width="0.4"/>
<text x="103.20050125313288" y="1727.5" _orig_x="408.58"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (4,979 samples, 4.19%)</title><rect x="566.2364243943192" y="1877" width="121.74603174603173" height="15.0" fill="rgb(213,120,45)" rx="2" ry="2" _orig_x="594.7" _orig_width="49.4"/>
<text x="569.2364243943192" y="1887.5" _orig_x="597.73">GenericComparat..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26,686 samples, 22.44%)</title><rect x="916.8" y="2053" width="264.8" height="15.0" fill="rgb(230,74,44)" rx="2" ry="2"/>
<text x="919.78" y="2063.5">[[kernel.kallsyms]]</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (43 samples, 0.04%)</title><rect x="722.7318295739349" y="1813" width="0.985797827903091" height="15.0" fill="rgb(221,165,34)" rx="2" ry="2" _orig_x="658.2" _orig_width="0.4"/>
<text x="725.7318295739349" y="1823.5" _orig_x="661.17"/>
</g>
<g class="hide">
<title>[code] (873 samples, 0.73%)</title><rect x="122.15756056808694" y="1973" width="9.059774436090224" height="15.0" fill="rgb(250,2,4)" rx="2" ry="2" _orig_x="136.4" _orig_width="8.7"/>
<text x="125.15756056808694" y="1983.5" _orig_x="139.45"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (12 samples, 0.01%)</title><rect x="1152.5396825396824" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(237,10,35)" rx="2" ry="2" _orig_x="832.6" _orig_width="0.1"/>
<text x="1155.5396825396824" y="1903.5" _orig_x="835.58"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (23 samples, 0.02%)</title><rect x="1036.2155388471176" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(247,16,27)" rx="2" ry="2" _orig_x="785.4" _orig_width="0.3"/>
<text x="1039.2155388471176" y="1807.5" _orig_x="788.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.13%)</title><rect x="928.6857560568087" y="1909" width="1.6661654135338346" height="15.0" fill="rgb(251,47,51)" rx="2" ry="2" _orig_x="910.9" _orig_width="1.6"/>
<text x="931.6857560568087" y="1919.5" _orig_x="913.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="326.78350041771097" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(233,83,45)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1903.5" _orig_x="335.92"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (18 samples, 0.02%)</title><rect x="99.9" y="2053" width="0.2" height="15.0" fill="rgb(221,85,31)" rx="2" ry="2"/>
<text x="102.88" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="934.2049289891396" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(209,207,18)" rx="2" ry="2" _orig_x="916.2" _orig_width="0.5"/>
<text x="937.2049289891396" y="1919.5" _orig_x="919.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (11 samples, 0.01%)</title><rect x="704.7410192147033" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(217,134,25)" rx="2" ry="2" _orig_x="650.9" _orig_width="0.1"/>
<text x="707.7410192147033" y="1775.5" _orig_x="653.92"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (52 samples, 0.04%)</title><rect x="290.2130325814536" y="1749" width="1.2322472848788637" height="15.0" fill="rgb(216,15,47)" rx="2" ry="2" _orig_x="482.7" _orig_width="0.5"/>
<text x="293.2130325814536" y="1759.5" _orig_x="485.73"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (83 samples, 0.07%)</title><rect x="899.189640768588" y="1829" width="1.971595655806182" height="15.0" fill="rgb(233,79,24)" rx="2" ry="2" _orig_x="729.8" _orig_width="0.8"/>
<text x="902.189640768588" y="1839.5" _orig_x="732.81"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (11 samples, 0.01%)</title><rect x="993.5797827903091" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(234,118,41)" rx="2" ry="2" _orig_x="768.1" _orig_width="0.1"/>
<text x="996.5797827903091" y="1775.5" _orig_x="771.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (474 samples, 0.40%)</title><rect x="103.30906432748543" y="1909" width="4.998496240601503" height="15.0" fill="rgb(241,19,23)" rx="2" ry="2" _orig_x="118.3" _orig_width="4.8"/>
<text x="106.30906432748543" y="1919.5" _orig_x="121.35"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (20 samples, 0.02%)</title><rect x="160.33416875522138" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(248,49,33)" rx="2" ry="2" _orig_x="430.0" _orig_width="0.2"/>
<text x="163.33416875522138" y="1759.5" _orig_x="433.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.09%)</title><rect x="904.7346282372598" y="2021" width="1.1454887218045113" height="15.0" fill="rgb(250,62,8)" rx="2" ry="2" _orig_x="887.9" _orig_width="1.1"/>
<text x="907.7346282372598" y="2031.5" _orig_x="890.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="21.4" y="1893" width="0.3" height="15.0" fill="rgb(231,57,40)" rx="2" ry="2"/>
<text x="24.43" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-58119.map] (27 samples, 0.02%)</title><rect x="118.20041771094407" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(253,142,32)" rx="2" ry="2" _orig_x="132.6" _orig_width="0.2"/>
<text x="121.20041771094407" y="1439.5" _orig_x="135.57"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1157" width="0.31240601503759396" height="15.0" fill="rgb(250,184,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1167.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[perf-32884.map] (58 samples, 0.05%)</title><rect x="99.03951545530498" y="1541" width="0.6248120300751879" height="15.0" fill="rgb(216,100,22)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1551.5" _orig_x="117.19"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (32 samples, 0.03%)</title><rect x="1162.3976608187133" y="1893" width="0.985797827903091" height="15.0" fill="rgb(215,203,46)" rx="2" ry="2" _orig_x="836.6" _orig_width="0.4"/>
<text x="1165.3976608187133" y="1903.5" _orig_x="839.65"/>
</g>
<g>
<title>[libminisql_shared.so] (16 samples, 0.01%)</title><rect x="799.6240601503758" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(225,145,42)" rx="2" ry="2" _orig_x="689.4" _orig_width="0.2"/>
<text x="802.6240601503758" y="1807.5" _orig_x="692.40"/>
</g>
<g class="hide">
<title>[perf-58145.map] (84 samples, 0.07%)</title><rect x="130.17598162071852" y="1909" width="0.937218045112782" height="15.0" fill="rgb(247,40,29)" rx="2" ry="2" _orig_x="144.1" _orig_width="0.9"/>
<text x="133.17598162071852" y="1919.5" _orig_x="147.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.11%)</title><rect x="349.90154553049297" y="2005" width="1.4578947368421051" height="15.0" fill="rgb(237,35,54)" rx="2" ry="2" _orig_x="355.1" _orig_width="1.4"/>
<text x="352.90154553049297" y="2015.5" _orig_x="358.12"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (18 samples, 0.02%)</title><rect x="927.5313283208018" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(237,217,15)" rx="2" ry="2" _orig_x="741.3" _orig_width="0.2"/>
<text x="930.5313283208018" y="1759.5" _orig_x="744.31"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (200 samples, 0.17%)</title><rect x="98.1022974101922" y="2037" width="2.082706766917293" height="15.0" fill="rgb(248,228,33)" rx="2" ry="2" _orig_x="113.3" _orig_width="2.0"/>
<text x="101.1022974101922" y="2047.5" _orig_x="116.32"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="757" width="2.2909774436090227" height="15.0" fill="rgb(249,86,32)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="767.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (99 samples, 0.08%)</title><rect x="289.19064327485387" y="2037" width="1.0413533834586466" height="15.0" fill="rgb(220,41,43)" rx="2" ry="2" _orig_x="296.8" _orig_width="1.0"/>
<text x="292.19064327485387" y="2047.5" _orig_x="299.82"/>
</g>
<g class="hide">
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="1957" width="2.2909774436090227" height="15.0" fill="rgb(207,24,4)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="1967.5" _orig_x="38.23"/>
</g>
<g>
<title>TypeInt::CompareLessThan (17 samples, 0.01%)</title><rect x="324.7159565580618" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(224,148,19)" rx="2" ry="2" _orig_x="496.7" _orig_width="0.2"/>
<text x="327.7159565580618" y="1855.5" _orig_x="499.70"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(216,23,48)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1807.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (37 samples, 0.03%)</title><rect x="437.3433583959899" y="1813" width="0.985797827903091" height="15.0" fill="rgb(241,59,26)" rx="2" ry="2" _orig_x="542.4" _orig_width="0.4"/>
<text x="440.3433583959899" y="1823.5" _orig_x="545.42"/>
</g>
<g class="hide">
<title>[code] (363 samples, 0.31%)</title><rect x="16.4" y="1973" width="3.6" height="15.0" fill="rgb(207,225,17)" rx="2" ry="2"/>
<text x="19.44" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="13.1" y="1797" width="0.2" height="15.0" fill="rgb(243,15,42)" rx="2" ry="2"/>
<text x="16.06" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1493" width="0.20827067669172933" height="15.0" fill="rgb(214,160,21)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1503.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="1188.8" y="2005" width="0.1" height="15.0" fill="rgb(243,98,12)" rx="2" ry="2"/>
<text x="1191.79" y="2015.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (110 samples, 0.09%)</title><rect x="46.72096908939008" y="1781" width="2.7109440267335008" height="15.0" fill="rgb(232,49,42)" rx="2" ry="2" _orig_x="383.9" _orig_width="1.1"/>
<text x="49.72096908939008" y="1791.5" _orig_x="386.91"/>
</g>
<g>
<title>[libminisql_shared.so] (13 samples, 0.01%)</title><rect x="622.4269005847952" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(248,138,22)" rx="2" ry="2" _orig_x="617.5" _orig_width="0.1"/>
<text x="625.4269005847952" y="1823.5" _orig_x="620.48"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="2005" width="1.5" height="15.0" fill="rgb(207,23,33)" rx="2" ry="2"/>
<text x="15.14" y="2015.5"/>
</g>
<g>
<title>Row::~Row (1,178 samples, 0.99%)</title><rect x="534.1979949874687" y="1861" width="28.834586466165412" height="15.0" fill="rgb(207,80,4)" rx="2" ry="2" _orig_x="581.7" _orig_width="11.7"/>
<text x="537.1979949874687" y="1871.5" _orig_x="584.66"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (16 samples, 0.01%)</title><rect x="291.44527986633244" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(251,155,28)" rx="2" ry="2" _orig_x="483.2" _orig_width="0.2"/>
<text x="294.44527986633244" y="1775.5" _orig_x="486.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="108.4116959064328" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(209,3,9)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="111.4116959064328" y="1951.5" _orig_x="126.17"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;base::subtle::TimeTicksNowIgnoringOverride&gt;::push_back (17 samples, 0.01%)</title><rect x="218.27447786132" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(229,185,45)" rx="2" ry="2" _orig_x="228.7" _orig_width="0.1"/>
<text x="221.27447786132" y="1711.5" _orig_x="231.67"/>
</g>
<g class="hide">
<title>blink::scheduler::TaskQueueThrottler::IsThrottled (19 samples, 0.02%)</title><rect x="212.96357560568092" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(250,67,52)" rx="2" ry="2" _orig_x="223.6" _orig_width="0.2"/>
<text x="215.96357560568092" y="1711.5" _orig_x="226.65"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (11 samples, 0.01%)</title><rect x="287.8" y="2053" width="0.1" height="15.0" fill="rgb(251,29,36)" rx="2" ry="2"/>
<text x="290.77" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Identity::operator (45 samples, 0.04%)</title><rect x="1015.7602339181286" y="1797" width="0.985797827903091" height="15.0" fill="rgb(219,176,25)" rx="2" ry="2" _orig_x="777.1" _orig_width="0.4"/>
<text x="1018.7602339181286" y="1807.5" _orig_x="780.09"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (11 samples, 0.01%)</title><rect x="33.905597326649925" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(235,6,53)" rx="2" ry="2" _orig_x="378.7" _orig_width="0.1"/>
<text x="36.905597326649925" y="1727.5" _orig_x="381.71"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (80 samples, 0.07%)</title><rect x="524.0935672514621" y="1797" width="1.7251461988304093" height="15.0" fill="rgb(230,67,33)" rx="2" ry="2" _orig_x="577.6" _orig_width="0.7"/>
<text x="527.0935672514621" y="1807.5" _orig_x="580.55"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.01%)</title><rect x="945.5221386800333" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(238,132,13)" rx="2" ry="2" _orig_x="748.6" _orig_width="0.1"/>
<text x="948.5221386800333" y="1855.5" _orig_x="751.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.05%)</title><rect x="132.0504177109441" y="1893" width="0.6248120300751879" height="15.0" fill="rgb(224,163,18)" rx="2" ry="2" _orig_x="145.9" _orig_width="0.6"/>
<text x="135.0504177109441" y="1903.5" _orig_x="148.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="302.72823725981624" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(218,172,47)" rx="2" ry="2" _orig_x="309.8" _orig_width="0.7"/>
<text x="305.72823725981624" y="1983.5" _orig_x="312.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="19.896658312447844" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(215,102,16)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1871.5" _orig_x="41.18"/>
</g>
<g class="hide">
<title>[unknown] (689 samples, 0.58%)</title><rect x="293.77259816207186" y="2021" width="7.185338345864662" height="15.0" fill="rgb(236,61,18)" rx="2" ry="2" _orig_x="301.2" _orig_width="6.9"/>
<text x="296.77259816207186" y="2031.5" _orig_x="304.22"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1285" width="0.31240601503759396" height="15.0" fill="rgb(241,2,12)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1295.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="277.2150793650794" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(217,111,48)" rx="2" ry="2" _orig_x="285.3" _orig_width="0.2"/>
<text x="280.2150793650794" y="1887.5" _orig_x="288.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="95.60304928989146" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(219,151,33)" rx="2" ry="2" _orig_x="110.9" _orig_width="0.4"/>
<text x="98.60304928989146" y="1983.5" _orig_x="113.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.08%)</title><rect x="904.8387635756058" y="1989" width="1.0413533834586466" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" _orig_x="888.0" _orig_width="1.0"/>
<text x="907.8387635756058" y="1999.5" _orig_x="890.99"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (31 samples, 0.03%)</title><rect x="703.7552213868003" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(206,201,21)" rx="2" ry="2" _orig_x="650.5" _orig_width="0.3"/>
<text x="706.7552213868003" y="1743.5" _orig_x="653.51"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (14 samples, 0.01%)</title><rect x="191.3868003341688" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(251,179,16)" rx="2" ry="2" _orig_x="442.6" _orig_width="0.1"/>
<text x="194.3868003341688" y="1759.5" _orig_x="445.55"/>
</g>
<g class="hide">
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (200 samples, 0.17%)</title><rect x="142.98462823725987" y="2005" width="2.082706766917293" height="15.0" fill="rgb(213,81,4)" rx="2" ry="2" _orig_x="156.4" _orig_width="2.0"/>
<text x="145.98462823725987" y="2015.5" _orig_x="159.42"/>
</g>
<g class="hide">
<title>start_thread (19 samples, 0.02%)</title><rect x="10.1" y="2053" width="0.1" height="15.0" fill="rgb(212,74,31)" rx="2" ry="2"/>
<text x="13.06" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (20 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(251,148,38)" rx="2" ry="2"/>
<text x="14.19" y="2063.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (346 samples, 0.29%)</title><rect x="369.3233082706766" y="1829" width="8.379281537176274" height="15.0" fill="rgb(228,195,54)" rx="2" ry="2" _orig_x="514.8" _orig_width="3.4"/>
<text x="372.3233082706766" y="1839.5" _orig_x="517.75"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (30 samples, 0.03%)</title><rect x="183.07673350041776" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(252,101,8)" rx="2" ry="2" _orig_x="194.9" _orig_width="0.3"/>
<text x="186.07673350041776" y="1391.5" _orig_x="197.90"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (20 samples, 0.02%)</title><rect x="370.3091060985799" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(221,181,0)" rx="2" ry="2" _orig_x="515.2" _orig_width="0.2"/>
<text x="373.3091060985799" y="1807.5" _orig_x="518.22"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (31 samples, 0.03%)</title><rect x="317.51545530492905" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(213,134,20)" rx="2" ry="2" _orig_x="324.0" _orig_width="0.3"/>
<text x="320.51545530492905" y="2031.5" _orig_x="327.04"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="30.93500417710949" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(245,221,40)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1951.5" _orig_x="51.77"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (12 samples, 0.01%)</title><rect x="295.14202172096907" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(212,63,2)" rx="2" ry="2" _orig_x="484.7" _orig_width="0.2"/>
<text x="298.14202172096907" y="1791.5" _orig_x="487.74"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (11 samples, 0.01%)</title><rect x="849.6532999164579" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(240,26,4)" rx="2" ry="2" _orig_x="709.7" _orig_width="0.1"/>
<text x="852.6532999164579" y="1823.5" _orig_x="712.70"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="117" width="0.20827067669172933" height="15.0" fill="rgb(226,54,8)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="127.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1845" width="2.2909774436090227" height="15.0" fill="rgb(209,72,15)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1855.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[code] (49 samples, 0.04%)</title><rect x="117.8880116959065" y="1701" width="0.5206766917293233" height="15.0" fill="rgb(237,139,34)" rx="2" ry="2" _orig_x="132.3" _orig_width="0.5"/>
<text x="120.8880116959065" y="1711.5" _orig_x="135.35"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (26 samples, 0.02%)</title><rect x="48.69256474519629" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(237,3,12)" rx="2" ry="2" _orig_x="384.7" _orig_width="0.3"/>
<text x="51.69256474519629" y="1759.5" _orig_x="387.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="24.8" y="1989" width="0.2" height="15.0" fill="rgb(208,142,10)" rx="2" ry="2"/>
<text x="27.82" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (14 samples, 0.01%)</title><rect x="1105.46783625731" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(210,111,3)" rx="2" ry="2" _orig_x="813.5" _orig_width="0.1"/>
<text x="1108.46783625731" y="1855.5" _orig_x="816.46"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1765" width="0.31240601503759396" height="15.0" fill="rgb(253,98,42)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1775.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,292 samples, 1.09%)</title><rect x="1149.1402673350042" y="1765" width="13.329323308270677" height="15.0" fill="rgb(250,152,28)" rx="2" ry="2" _orig_x="1122.6" _orig_width="12.8"/>
<text x="1152.1402673350042" y="1775.5" _orig_x="1125.58"/>
</g>
<g>
<title>__memset_avx2_unaligned (11 samples, 0.01%)</title><rect x="757.7276524644944" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(213,190,42)" rx="2" ry="2" _orig_x="672.4" _orig_width="0.1"/>
<text x="760.7276524644944" y="1807.5" _orig_x="675.36"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(223,206,51)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1679.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="16.564327485380172" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(241,27,39)" rx="2" ry="2" _orig_x="35.0" _orig_width="0.2"/>
<text x="19.564327485380172" y="1855.5" _orig_x="38.01"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (73 samples, 0.06%)</title><rect x="987.9114452798661" y="1717" width="1.971595655806182" height="15.0" fill="rgb(245,42,39)" rx="2" ry="2" _orig_x="765.8" _orig_width="0.8"/>
<text x="990.9114452798661" y="1727.5" _orig_x="768.85"/>
</g>
<g class="hide">
<title>v8::V8::GlobalizeTracedReference (25 samples, 0.02%)</title><rect x="193.90680868838768" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(209,46,32)" rx="2" ry="2" _orig_x="205.3" _orig_width="0.2"/>
<text x="196.90680868838768" y="1423.5" _orig_x="208.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="339.9045530492899" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(238,212,29)" rx="2" ry="2" _orig_x="345.5" _orig_width="0.1"/>
<text x="342.9045530492899" y="1983.5" _orig_x="348.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (12 samples, 0.01%)</title><rect x="1075.8939014202172" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(224,46,48)" rx="2" ry="2" _orig_x="801.5" _orig_width="0.1"/>
<text x="1078.8939014202172" y="1823.5" _orig_x="804.45"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (26 samples, 0.02%)</title><rect x="508.5672514619882" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(205,145,11)" rx="2" ry="2" _orig_x="571.3" _orig_width="0.3"/>
<text x="511.5672514619882" y="1791.5" _orig_x="574.32"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (15 samples, 0.01%)</title><rect x="467.65664160401013" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(237,162,52)" rx="2" ry="2" _orig_x="554.7" _orig_width="0.1"/>
<text x="470.65664160401013" y="1743.5" _orig_x="557.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="23.4" y="1925" width="0.2" height="15.0" fill="rgb(244,159,45)" rx="2" ry="2"/>
<text x="26.43" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(242,18,11)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1983.5" _orig_x="41.17"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (21 samples, 0.02%)</title><rect x="276.4118629908104" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(234,168,25)" rx="2" ry="2" _orig_x="477.1" _orig_width="0.2"/>
<text x="279.4118629908104" y="1807.5" _orig_x="480.10"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (28 samples, 0.02%)</title><rect x="682.8070175438596" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(207,220,26)" rx="2" ry="2" _orig_x="642.0" _orig_width="0.3"/>
<text x="685.8070175438596" y="1839.5" _orig_x="645.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="55.094402673350096" y="1733" width="0.41654135338345866" height="15.0" fill="rgb(213,125,43)" rx="2" ry="2" _orig_x="72.0" _orig_width="0.4"/>
<text x="58.094402673350096" y="1743.5" _orig_x="75.03"/>
</g>
<g class="hide">
<title>__libc_recvmsg (68 samples, 0.06%)</title><rect x="315.3" y="2053" width="0.6" height="15.0" fill="rgb(234,60,16)" rx="2" ry="2"/>
<text x="318.28" y="2063.5"/>
</g>
<g class="hide">
<title>[chrome] (55 samples, 0.05%)</title><rect x="86.3350041771095" y="1749" width="0.5206766917293233" height="15.0" fill="rgb(214,114,51)" rx="2" ry="2" _orig_x="102.0" _orig_width="0.5"/>
<text x="89.3350041771095" y="1759.5" _orig_x="105.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="162.24966583124484" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(214,77,40)" rx="2" ry="2" _orig_x="174.9" _orig_width="0.2"/>
<text x="165.24966583124484" y="1967.5" _orig_x="177.94"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="949" width="0.31240601503759396" height="15.0" fill="rgb(249,54,49)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="959.5" _orig_x="99.72"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (18 samples, 0.02%)</title><rect x="880.9523809523808" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(228,226,44)" rx="2" ry="2" _orig_x="722.4" _orig_width="0.2"/>
<text x="883.9523809523808" y="1775.5" _orig_x="725.39"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (23 samples, 0.02%)</title><rect x="87.38512949039259" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(217,152,22)" rx="2" ry="2" _orig_x="400.4" _orig_width="0.2"/>
<text x="90.38512949039259" y="1791.5" _orig_x="403.36"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (22 samples, 0.02%)</title><rect x="1130.6056808688388" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(243,218,11)" rx="2" ry="2" _orig_x="823.7" _orig_width="0.2"/>
<text x="1133.6056808688388" y="1743.5" _orig_x="826.69"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.05%)</title><rect x="17.8" y="1397" width="0.6" height="15.0" fill="rgb(230,91,7)" rx="2" ry="2"/>
<text x="20.80" y="1407.5"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(237,29,40)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1983.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[perf-8551.map] (15 samples, 0.01%)</title><rect x="198.07222222222228" y="1589" width="0.20827067669172933" height="15.0" fill="rgb(229,30,37)" rx="2" ry="2" _orig_x="209.3" _orig_width="0.2"/>
<text x="201.07222222222228" y="1599.5" _orig_x="212.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (322 samples, 0.27%)</title><rect x="1114.5864661654136" y="1813" width="7.886382623224728" height="15.0" fill="rgb(253,105,8)" rx="2" ry="2" _orig_x="817.2" _orig_width="3.2"/>
<text x="1117.5864661654136" y="1823.5" _orig_x="820.23"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="2005" width="12.912781954887219" height="15.0" fill="rgb(213,187,53)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="2015.5" _orig_x="126.94"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (156 samples, 0.13%)</title><rect x="88.9" y="2053" width="1.5" height="15.0" fill="rgb(211,145,11)" rx="2" ry="2"/>
<text x="91.87" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="22.6" y="1989" width="0.2" height="15.0" fill="rgb(241,155,28)" rx="2" ry="2"/>
<text x="25.58" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="338.1342522974102" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(245,203,11)" rx="2" ry="2" _orig_x="343.8" _orig_width="0.2"/>
<text x="341.1342522974102" y="2015.5" _orig_x="346.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.08%)</title><rect x="241.28838763575612" y="1877" width="1.0413533834586466" height="15.0" fill="rgb(239,97,27)" rx="2" ry="2" _orig_x="250.8" _orig_width="1.0"/>
<text x="244.28838763575612" y="1887.5" _orig_x="253.81"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (13 samples, 0.01%)</title><rect x="933.939014202172" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(228,118,15)" rx="2" ry="2" _orig_x="743.9" _orig_width="0.1"/>
<text x="936.939014202172" y="1855.5" _orig_x="746.88"/>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (54 samples, 0.05%)</title><rect x="299.60417710944034" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(224,181,32)" rx="2" ry="2" _orig_x="306.8" _orig_width="0.6"/>
<text x="302.60417710944034" y="2015.5" _orig_x="309.84"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (40 samples, 0.03%)</title><rect x="1171.516290726817" y="1925" width="0.7393483709273182" height="15.0" fill="rgb(251,1,41)" rx="2" ry="2" _orig_x="840.3" _orig_width="0.3"/>
<text x="1174.516290726817" y="1935.5" _orig_x="843.25"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (13 samples, 0.01%)</title><rect x="286.9" y="2053" width="0.2" height="15.0" fill="rgb(225,208,6)" rx="2" ry="2"/>
<text x="289.93" y="2063.5"/>
</g>
<g class="hide">
<title>std::__invoke&lt;void  (223 samples, 0.19%)</title><rect x="16.772598162071905" y="1941" width="2.2909774436090227" height="15.0" fill="rgb(251,196,48)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="1951.5" _orig_x="38.23"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="332.2" y="2053" width="0.1" height="15.0" fill="rgb(222,130,26)" rx="2" ry="2"/>
<text x="335.21" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (113 samples, 0.10%)</title><rect x="229.58646616541358" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(230,116,7)" rx="2" ry="2" _orig_x="458.1" _orig_width="1.1"/>
<text x="232.58646616541358" y="1775.5" _orig_x="461.07"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1637" width="0.31240601503759396" height="15.0" fill="rgb(217,75,43)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1647.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,318 samples, 17.93%)</title><rect x="942.7440267335004" y="1989" width="220.24624060150376" height="15.0" fill="rgb(249,163,11)" rx="2" ry="2" _orig_x="924.4" _orig_width="211.5"/>
<text x="945.7440267335004" y="1999.5" _orig_x="927.37">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>_int_malloc (50 samples, 0.04%)</title><rect x="264.5" y="2053" width="0.5" height="15.0" fill="rgb(224,11,12)" rx="2" ry="2"/>
<text x="267.55" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::max_size (21 samples, 0.02%)</title><rect x="828.7050960735172" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(216,191,24)" rx="2" ry="2" _orig_x="701.2" _orig_width="0.2"/>
<text x="831.7050960735172" y="1743.5" _orig_x="704.21"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="1989" width="0.7" height="15.0" fill="rgb(225,118,40)" rx="2" ry="2"/>
<text x="14.39" y="1999.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (17 samples, 0.01%)</title><rect x="133.4711779448622" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(210,86,52)" rx="2" ry="2" _orig_x="419.1" _orig_width="0.2"/>
<text x="136.4711779448622" y="1759.5" _orig_x="422.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (634 samples, 0.53%)</title><rect x="101.74703425229745" y="1989" width="6.560526315789473" height="15.0" fill="rgb(218,34,37)" rx="2" ry="2" _orig_x="116.8" _orig_width="6.3"/>
<text x="104.74703425229745" y="1999.5" _orig_x="119.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.12%)</title><rect x="56.03162071846288" y="1989" width="1.5620300751879699" height="15.0" fill="rgb(242,91,48)" rx="2" ry="2" _orig_x="72.9" _orig_width="1.5"/>
<text x="59.03162071846288" y="1999.5" _orig_x="75.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (120 samples, 0.10%)</title><rect x="160.2710944026734" y="1877" width="1.2496240601503759" height="15.0" fill="rgb(231,208,30)" rx="2" ry="2" _orig_x="173.0" _orig_width="1.2"/>
<text x="163.2710944026734" y="1887.5" _orig_x="176.00"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (44 samples, 0.04%)</title><rect x="635.4887218045111" y="1781" width="0.985797827903091" height="15.0" fill="rgb(236,86,43)" rx="2" ry="2" _orig_x="622.8" _orig_width="0.4"/>
<text x="638.4887218045111" y="1791.5" _orig_x="625.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="2021" width="0.1" height="15.0" fill="rgb(239,192,41)" rx="2" ry="2"/>
<text x="26.70" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="355.1083124477862" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(230,129,10)" rx="2" ry="2" _orig_x="360.1" _orig_width="0.4"/>
<text x="358.1083124477862" y="2047.5" _orig_x="363.13"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="789" width="0.31240601503759396" height="15.0" fill="rgb(217,63,30)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="799.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1589" width="0.31240601503759396" height="15.0" fill="rgb(249,18,14)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1599.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(213,199,2)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1695.5" _orig_x="130.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="90.81282372598167" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(234,58,43)" rx="2" ry="2" _orig_x="106.3" _orig_width="0.2"/>
<text x="93.81282372598167" y="1791.5" _orig_x="109.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="16.35605680868844" y="2021" width="0.41654135338345866" height="15.0" fill="rgb(232,188,7)" rx="2" ry="2" _orig_x="34.8" _orig_width="0.4"/>
<text x="19.35605680868844" y="2031.5" _orig_x="37.76"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork (51 samples, 0.04%)</title><rect x="243.16282372598167" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(219,172,46)" rx="2" ry="2" _orig_x="252.6" _orig_width="0.5"/>
<text x="246.16282372598167" y="1935.5" _orig_x="255.61"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (27 samples, 0.02%)</title><rect x="319.54051796157063" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(251,36,28)" rx="2" ry="2" _orig_x="494.6" _orig_width="0.2"/>
<text x="322.54051796157063" y="1823.5" _orig_x="497.56"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (368 samples, 0.31%)</title><rect x="316.6" y="2053" width="3.6" height="15.0" fill="rgb(219,111,51)" rx="2" ry="2"/>
<text x="319.58" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="23.9" y="2037" width="0.1" height="15.0" fill="rgb(240,107,6)" rx="2" ry="2"/>
<text x="26.93" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (118 samples, 0.10%)</title><rect x="98.51883876357566" y="1845" width="1.2496240601503759" height="15.0" fill="rgb(236,117,15)" rx="2" ry="2" _orig_x="113.7" _orig_width="1.2"/>
<text x="101.51883876357566" y="1855.5" _orig_x="116.70"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (14 samples, 0.01%)</title><rect x="434.6324143692563" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(253,224,25)" rx="2" ry="2" _orig_x="541.3" _orig_width="0.2"/>
<text x="437.6324143692563" y="1855.5" _orig_x="544.34"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (28 samples, 0.02%)</title><rect x="362.9156223893067" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(225,201,1)" rx="2" ry="2" _orig_x="512.2" _orig_width="0.3"/>
<text x="365.9156223893067" y="1775.5" _orig_x="515.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="16.460192147034306" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(222,126,47)" rx="2" ry="2" _orig_x="34.9" _orig_width="0.3"/>
<text x="19.460192147034306" y="1871.5" _orig_x="37.91"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (18 samples, 0.02%)</title><rect x="756.2489557226397" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(226,134,36)" rx="2" ry="2" _orig_x="671.8" _orig_width="0.2"/>
<text x="759.2489557226397" y="1839.5" _orig_x="674.81"/>
</g>
<g class="hide">
<title>[chrome] (91 samples, 0.08%)</title><rect x="86.12673350041776" y="1829" width="0.937218045112782" height="15.0" fill="rgb(237,49,22)" rx="2" ry="2" _orig_x="101.8" _orig_width="0.9"/>
<text x="89.12673350041776" y="1839.5" _orig_x="104.77"/>
</g>
<g class="hide">
<title>[code] (15 samples, 0.01%)</title><rect x="31.143274853801223" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(215,104,28)" rx="2" ry="2" _orig_x="49.0" _orig_width="0.2"/>
<text x="34.14327485380122" y="1903.5" _orig_x="52.01"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (12 samples, 0.01%)</title><rect x="73.83040935672508" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(223,173,32)" rx="2" ry="2" _orig_x="394.9" _orig_width="0.2"/>
<text x="76.83040935672508" y="1775.5" _orig_x="397.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.05%)</title><rect x="308.55981620718467" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(226,7,1)" rx="2" ry="2" _orig_x="315.4" _orig_width="0.5"/>
<text x="311.55981620718467" y="1935.5" _orig_x="318.35"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (15 samples, 0.01%)</title><rect x="295.9594402673351" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(250,48,13)" rx="2" ry="2" _orig_x="303.3" _orig_width="0.1"/>
<text x="298.9594402673351" y="1999.5" _orig_x="306.26"/>
</g>
<g class="hide">
<title>wukong::AsyncJob::process (22 samples, 0.02%)</title><rect x="17.29327485380123" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(238,194,34)" rx="2" ry="2" _orig_x="35.7" _orig_width="0.2"/>
<text x="20.29327485380123" y="1887.5" _orig_x="38.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.4" y="1925" width="0.2" height="15.0" fill="rgb(217,6,27)" rx="2" ry="2"/>
<text x="18.43" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1205" width="2.2909774436090227" height="15.0" fill="rgb(250,79,42)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1215.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="389" width="0.31240601503759396" height="15.0" fill="rgb(247,32,36)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="399.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>base::internal::WorkerThread::RunWorker (757 samples, 0.64%)</title><rect x="32.70530492898919" y="2005" width="7.810150375939849" height="15.0" fill="rgb(210,73,23)" rx="2" ry="2" _orig_x="50.5" _orig_width="7.5"/>
<text x="35.70530492898919" y="2015.5" _orig_x="53.46"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (21 samples, 0.02%)</title><rect x="503.14536340852135" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(234,134,11)" rx="2" ry="2" _orig_x="569.1" _orig_width="0.2"/>
<text x="506.14536340852135" y="1839.5" _orig_x="572.06"/>
</g>
<g class="hide">
<title>[code] (200 samples, 0.17%)</title><rect x="98.1022974101922" y="2005" width="2.082706766917293" height="15.0" fill="rgb(240,176,35)" rx="2" ry="2" _orig_x="113.3" _orig_width="2.0"/>
<text x="101.1022974101922" y="2015.5" _orig_x="116.32"/>
</g>
<g>
<title>Row::Row (11 samples, 0.01%)</title><rect x="943.7969924812029" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(211,177,16)" rx="2" ry="2" _orig_x="747.9" _orig_width="0.1"/>
<text x="946.7969924812029" y="1903.5" _orig_x="750.87"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (17 samples, 0.01%)</title><rect x="1027.8362573099416" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(216,0,8)" rx="2" ry="2" _orig_x="782.0" _orig_width="0.2"/>
<text x="1030.8362573099416" y="1823.5" _orig_x="784.99"/>
</g>
<g>
<title>Row::DeserializeFrom (45 samples, 0.04%)</title><rect x="776.4578111946532" y="1861" width="0.985797827903091" height="15.0" fill="rgb(209,14,43)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.4"/>
<text x="779.4578111946532" y="1871.5" _orig_x="683.00"/>
</g>
<g>
<title>__memset_avx2_unaligned (13 samples, 0.01%)</title><rect x="913.9766081871343" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(212,204,17)" rx="2" ry="2" _orig_x="735.8" _orig_width="0.2"/>
<text x="916.9766081871343" y="1807.5" _orig_x="738.83"/>
</g>
<g class="hide">
<title>[code] (267 samples, 0.22%)</title><rect x="17.2" y="1877" width="2.6" height="15.0" fill="rgb(251,172,40)" rx="2" ry="2"/>
<text x="20.17" y="1887.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (119 samples, 0.10%)</title><rect x="1027.3433583959898" y="1829" width="2.7109440267335008" height="15.0" fill="rgb(211,127,21)" rx="2" ry="2" _orig_x="781.8" _orig_width="1.1"/>
<text x="1030.3433583959898" y="1839.5" _orig_x="784.76"/>
</g>
<g class="hide">
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="15.6" y="2037" width="0.1" height="15.0" fill="rgb(247,113,24)" rx="2" ry="2"/>
<text x="18.56" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="43.74365079365085" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(239,159,3)" rx="2" ry="2" _orig_x="61.1" _orig_width="0.2"/>
<text x="46.74365079365085" y="1951.5" _orig_x="64.13"/>
</g>
<g class="hide">
<title>[unknown] (68 samples, 0.06%)</title><rect x="49.679365079365134" y="53" width="0.7289473684210526" height="15.0" fill="rgb(241,165,4)" rx="2" ry="2" _orig_x="66.8" _orig_width="0.7"/>
<text x="52.679365079365134" y="63.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.09%)</title><rect x="1161.4282372598163" y="1669" width="1.0413533834586466" height="15.0" fill="rgb(244,113,20)" rx="2" ry="2" _orig_x="1134.4" _orig_width="1.0"/>
<text x="1164.4282372598163" y="1679.5" _orig_x="1137.35"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1813" width="0.31240601503759396" height="15.0" fill="rgb(209,16,46)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1823.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="934.4131996658313" y="1861" width="0.31240601503759396" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" _orig_x="916.4" _orig_width="0.3"/>
<text x="937.4131996658313" y="1871.5" _orig_x="919.42"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="319.077485380117" y="1477" width="0.20827067669172933" height="15.0" fill="rgb(206,135,14)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1487.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="228.79214703425237" y="1973" width="0.41654135338345866" height="15.0" fill="rgb(209,6,48)" rx="2" ry="2" _orig_x="238.8" _orig_width="0.4"/>
<text x="231.79214703425237" y="1983.5" _orig_x="241.80"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(236,56,44)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1407.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (146 samples, 0.12%)</title><rect x="976.5747702589808" y="1781" width="3.6967418546365916" height="15.0" fill="rgb(213,89,12)" rx="2" ry="2" _orig_x="761.2" _orig_width="1.5"/>
<text x="979.5747702589808" y="1791.5" _orig_x="764.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.16%)</title><rect x="346.9857560568087" y="2037" width="1.9785714285714284" height="15.0" fill="rgb(224,197,50)" rx="2" ry="2" _orig_x="352.3" _orig_width="1.9"/>
<text x="349.9857560568087" y="2047.5" _orig_x="355.31"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (20 samples, 0.02%)</title><rect x="833.1411862990809" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(249,66,51)" rx="2" ry="2" _orig_x="703.0" _orig_width="0.2"/>
<text x="836.1411862990809" y="1791.5" _orig_x="706.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="22.5" y="1941" width="0.1" height="15.0" fill="rgb(239,198,53)" rx="2" ry="2"/>
<text x="25.45" y="1951.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (34 samples, 0.03%)</title><rect x="43.951921470342576" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(232,76,27)" rx="2" ry="2" _orig_x="61.3" _orig_width="0.3"/>
<text x="46.951921470342576" y="2031.5" _orig_x="64.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="355.73312447786134" y="1909" width="0.41654135338345866" height="15.0" fill="rgb(219,187,4)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1919.5" _orig_x="363.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (78 samples, 0.07%)</title><rect x="1167.8195488721803" y="1893" width="1.7251461988304093" height="15.0" fill="rgb(249,23,1)" rx="2" ry="2" _orig_x="838.8" _orig_width="0.7"/>
<text x="1170.8195488721803" y="1903.5" _orig_x="841.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="130.8007936507937" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(238,211,46)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1391.5" _orig_x="147.72"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (91 samples, 0.08%)</title><rect x="109.2" y="2053" width="0.9" height="15.0" fill="rgb(227,104,45)" rx="2" ry="2"/>
<text x="112.16" y="2063.5"/>
</g>
<g class="hide">
<title>blink::ScheduledAction::ScheduledAction (11 samples, 0.01%)</title><rect x="185.36771094402678" y="1493" width="0.10413533834586466" height="15.0" fill="rgb(249,193,13)" rx="2" ry="2" _orig_x="197.1" _orig_width="0.1"/>
<text x="188.36771094402678" y="1503.5" _orig_x="200.10"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (53 samples, 0.04%)</title><rect x="240.43024227234753" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(215,132,40)" rx="2" ry="2" _orig_x="462.5" _orig_width="0.6"/>
<text x="243.43024227234753" y="1823.5" _orig_x="465.54"/>
</g>
<g class="hide">
<title>blink::BeforeCallEnteredCallback (16 samples, 0.01%)</title><rect x="179.84853801169598" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(230,91,5)" rx="2" ry="2" _orig_x="191.8" _orig_width="0.2"/>
<text x="182.84853801169598" y="1647.5" _orig_x="194.85"/>
</g>
<g class="hide">
<title>[perf-58145.map] (225 samples, 0.19%)</title><rect x="126.42710944026739" y="1749" width="2.2909774436090227" height="15.0" fill="rgb(224,63,7)" rx="2" ry="2" _orig_x="140.5" _orig_width="2.2"/>
<text x="129.42710944026737" y="1759.5" _orig_x="143.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.07%)</title><rect x="359.3" y="2053" width="0.8" height="15.0" fill="rgb(210,146,13)" rx="2" ry="2"/>
<text x="362.34" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="90.91695906432754" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(221,85,36)" rx="2" ry="2" _orig_x="106.4" _orig_width="0.1"/>
<text x="93.91695906432754" y="1775.5" _orig_x="109.38"/>
</g>
<g class="hide">
<title>do_pcm_hwsync (172 samples, 0.14%)</title><rect x="67.59064327485385" y="1925" width="1.7703007518796992" height="15.0" fill="rgb(208,77,6)" rx="2" ry="2" _orig_x="84.0" _orig_width="1.7"/>
<text x="70.59064327485385" y="1935.5" _orig_x="87.00"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (114 samples, 0.10%)</title><rect x="769.0643274853801" y="1861" width="2.7109440267335008" height="15.0" fill="rgb(225,92,48)" rx="2" ry="2" _orig_x="677.0" _orig_width="1.1"/>
<text x="772.0643274853801" y="1871.5" _orig_x="679.97"/>
</g>
<g>
<title>[libminisql_shared.so] (21 samples, 0.02%)</title><rect x="334.327485380117" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(220,37,5)" rx="2" ry="2" _orig_x="500.6" _orig_width="0.2"/>
<text x="337.327485380117" y="1775.5" _orig_x="503.55"/>
</g>
<g class="hide">
<title>blink::V8ScriptRunner::CallFunction (1,980 samples, 1.67%)</title><rect x="179.1195906432749" y="1669" width="20.410526315789475" height="15.0" fill="rgb(252,127,34)" rx="2" ry="2" _orig_x="191.1" _orig_width="19.6"/>
<text x="182.1195906432749" y="1679.5" _orig_x="194.10">blink::V8ScriptRunner::CallFunction </text>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (37 samples, 0.03%)</title><rect x="15.627109440267391" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(253,80,8)" rx="2" ry="2" _orig_x="34.1" _orig_width="0.3"/>
<text x="18.62710944026739" y="1983.5" _orig_x="37.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.05%)</title><rect x="934.1007936507937" y="2021" width="0.6248120300751879" height="15.0" fill="rgb(227,11,34)" rx="2" ry="2" _orig_x="916.1" _orig_width="0.6"/>
<text x="937.1007936507937" y="2031.5" _orig_x="919.08"/>
</g>
<g class="hide">
<title>[perf-32884.map] (93 samples, 0.08%)</title><rect x="98.7271094402674" y="1669" width="0.937218045112782" height="15.0" fill="rgb(224,58,0)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1679.5" _orig_x="116.85"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (95 samples, 0.08%)</title><rect x="1041.1445279866332" y="1797" width="2.218045112781955" height="15.0" fill="rgb(231,136,41)" rx="2" ry="2" _orig_x="787.4" _orig_width="0.9"/>
<text x="1044.1445279866332" y="1807.5" _orig_x="790.39"/>
</g>
<g class="hide">
<title>blink::scheduler::NonMainThreadSchedulerImpl::MonotonicallyIncreasingVirtualTime (18 samples, 0.02%)</title><rect x="219.94064327485387" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(239,18,27)" rx="2" ry="2" _orig_x="230.3" _orig_width="0.2"/>
<text x="222.94064327485387" y="1743.5" _orig_x="233.35"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1477" width="0.20827067669172933" height="15.0" fill="rgb(207,141,32)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1487.5" _orig_x="111.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (583 samples, 0.49%)</title><rect x="885.8861319966583" y="2005" width="6.03984962406015" height="15.0" fill="rgb(228,165,50)" rx="2" ry="2" _orig_x="869.8" _orig_width="5.8"/>
<text x="888.8861319966583" y="2015.5" _orig_x="872.79"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (66 samples, 0.06%)</title><rect x="1012.8028404344193" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(222,143,34)" rx="2" ry="2" _orig_x="775.9" _orig_width="0.6"/>
<text x="1015.8028404344193" y="1807.5" _orig_x="778.87"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (51 samples, 0.04%)</title><rect x="476.03592314118634" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(211,32,35)" rx="2" ry="2" _orig_x="558.1" _orig_width="0.5"/>
<text x="479.03592314118634" y="1743.5" _orig_x="561.07"/>
</g>
<g class="hide">
<title>_nv023368rm (15 samples, 0.01%)</title><rect x="1183.2" y="2053" width="0.2" height="15.0" fill="rgb(249,145,42)" rx="2" ry="2"/>
<text x="1186.20" y="2063.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (85 samples, 0.07%)</title><rect x="18.4" y="1765" width="0.9" height="15.0" fill="rgb(211,202,11)" rx="2" ry="2"/>
<text x="21.44" y="1775.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (26 samples, 0.02%)</title><rect x="43.951921470342576" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(207,91,0)" rx="2" ry="2" _orig_x="61.3" _orig_width="0.3"/>
<text x="46.951921470342576" y="1999.5" _orig_x="64.32"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork (4,984 samples, 4.19%)</title><rect x="173.07974101921477" y="1813" width="51.546992481203006" height="15.0" fill="rgb(222,71,21)" rx="2" ry="2" _orig_x="185.3" _orig_width="49.5"/>
<text x="176.07974101921477" y="1823.5" _orig_x="188.33">base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="24.8" y="1925" width="0.2" height="15.0" fill="rgb(230,60,37)" rx="2" ry="2"/>
<text x="27.83" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (482 samples, 0.41%)</title><rect x="112.88951545530499" y="1685" width="4.998496240601503" height="15.0" fill="rgb(225,164,30)" rx="2" ry="2" _orig_x="127.5" _orig_width="4.8"/>
<text x="115.88951545530499" y="1695.5" _orig_x="130.51"/>
</g>
<g class="hide">
<title>[perf-33014.map] (52 samples, 0.04%)</title><rect x="129.65530492898918" y="1877" width="0.5206766917293233" height="15.0" fill="rgb(243,218,7)" rx="2" ry="2" _orig_x="143.6" _orig_width="0.5"/>
<text x="132.65530492898918" y="1887.5" _orig_x="146.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="15.002297410192202" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(239,150,45)" rx="2" ry="2" _orig_x="33.5" _orig_width="0.2"/>
<text x="18.002297410192202" y="2031.5" _orig_x="36.55"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(250,72,39)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1695.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[code] (370 samples, 0.31%)</title><rect x="16.4" y="1989" width="3.6" height="15.0" fill="rgb(239,156,14)" rx="2" ry="2"/>
<text x="19.37" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="94.8741019214704" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(241,111,10)" rx="2" ry="2" _orig_x="110.2" _orig_width="0.3"/>
<text x="97.8741019214704" y="1951.5" _orig_x="113.17"/>
</g>
<g class="hide">
<title>vnstatd (16 samples, 0.01%)</title><rect x="1189.4" y="2069" width="0.2" height="15.0" fill="rgb(245,56,20)" rx="2" ry="2"/>
<text x="1192.43" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (17 samples, 0.01%)</title><rect x="835.6056808688387" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(211,62,3)" rx="2" ry="2" _orig_x="704.0" _orig_width="0.2"/>
<text x="838.6056808688387" y="1791.5" _orig_x="707.03"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (43 samples, 0.04%)</title><rect x="938.8680033416874" y="1813" width="0.985797827903091" height="15.0" fill="rgb(234,178,28)" rx="2" ry="2" _orig_x="745.9" _orig_width="0.4"/>
<text x="941.8680033416874" y="1823.5" _orig_x="748.89"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1829" width="2.2909774436090227" height="15.0" fill="rgb(221,196,33)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1839.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="373" width="0.31240601503759396" height="15.0" fill="rgb(216,114,13)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="383.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (159 samples, 0.13%)</title><rect x="347.2981620718464" y="1973" width="1.6661654135338346" height="15.0" fill="rgb(238,121,28)" rx="2" ry="2" _orig_x="352.6" _orig_width="1.6"/>
<text x="350.2981620718464" y="1983.5" _orig_x="355.61"/>
</g>
<g class="hide">
<title>[[vdso]] (57 samples, 0.05%)</title><rect x="1162.78379462495" y="2037" width="1.183313277176093" height="15.0" fill="rgb(219,64,34)" rx="2" ry="2" _orig_x="848.2" _orig_width="0.5"/>
<text x="1165.78379462495" y="2047.5" _orig_x="851.18"/>
</g>
<g class="hide">
<title>[unknown] (189 samples, 0.16%)</title><rect x="909.4207184628237" y="2037" width="1.874436090225564" height="15.0" fill="rgb(230,33,9)" rx="2" ry="2" _orig_x="892.4" _orig_width="1.8"/>
<text x="912.4207184628237" y="2047.5" _orig_x="895.36"/>
</g>
<g>
<title>Column::GetType (15 samples, 0.01%)</title><rect x="573.6299081035925" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(240,155,11)" rx="2" ry="2" _orig_x="597.7" _orig_width="0.1"/>
<text x="576.6299081035925" y="1839.5" _orig_x="600.68"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (12 samples, 0.01%)</title><rect x="852.610693400167" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(252,42,29)" rx="2" ry="2" _orig_x="710.9" _orig_width="0.1"/>
<text x="855.610693400167" y="1791.5" _orig_x="713.88"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (25 samples, 0.02%)</title><rect x="379.18128654970747" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(239,137,29)" rx="2" ry="2" _orig_x="518.8" _orig_width="0.2"/>
<text x="382.18128654970747" y="1839.5" _orig_x="521.77"/>
</g>
<g class="hide">
<title>Debounce::notify (25 samples, 0.02%)</title><rect x="161.62485380116965" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(237,83,8)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="2015.5" _orig_x="177.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (159 samples, 0.13%)</title><rect x="256.6959064327486" y="1733" width="3.943191311612364" height="15.0" fill="rgb(241,193,2)" rx="2" ry="2" _orig_x="469.1" _orig_width="1.6"/>
<text x="259.6959064327486" y="1743.5" _orig_x="472.11"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (36 samples, 0.03%)</title><rect x="413.4377610693401" y="1797" width="0.985797827903091" height="15.0" fill="rgb(240,24,4)" rx="2" ry="2" _orig_x="532.7" _orig_width="0.4"/>
<text x="416.4377610693401" y="1807.5" _orig_x="535.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (547 samples, 0.46%)</title><rect x="878.0759816207185" y="1989" width="5.727443609022556" height="15.0" fill="rgb(245,8,35)" rx="2" ry="2" _orig_x="862.3" _orig_width="5.5"/>
<text x="881.0759816207185" y="1999.5" _orig_x="865.33"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="101" width="0.31240601503759396" height="15.0" fill="rgb(209,193,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="111.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>blink::InspectorTraceEvents::Did (11 samples, 0.01%)</title><rect x="179.22372598162076" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(231,59,20)" rx="2" ry="2" _orig_x="191.2" _orig_width="0.1"/>
<text x="182.22372598162076" y="1663.5" _orig_x="194.23"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1189" width="2.2909774436090227" height="15.0" fill="rgb(245,103,51)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1199.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-32884.map] (93 samples, 0.08%)</title><rect x="98.7271094402674" y="1701" width="0.937218045112782" height="15.0" fill="rgb(247,126,50)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.9"/>
<text x="101.7271094402674" y="1711.5" _orig_x="116.85"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1381" width="0.31240601503759396" height="15.0" fill="rgb(210,160,1)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1391.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="274.81996658312454" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(227,27,31)" rx="2" ry="2" _orig_x="283.0" _orig_width="0.3"/>
<text x="277.81996658312454" y="2015.5" _orig_x="286.05"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (32 samples, 0.03%)</title><rect x="819.8329156223894" y="1765" width="0.985797827903091" height="15.0" fill="rgb(210,0,1)" rx="2" ry="2" _orig_x="697.6" _orig_width="0.4"/>
<text x="822.8329156223894" y="1775.5" _orig_x="700.64"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (27 samples, 0.02%)</title><rect x="427.97827903091064" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(228,36,13)" rx="2" ry="2" _orig_x="538.6" _orig_width="0.3"/>
<text x="430.97827903091064" y="1727.5" _orig_x="541.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="328.2413951545531" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(254,151,48)" rx="2" ry="2" _orig_x="334.3" _orig_width="0.7"/>
<text x="331.2413951545531" y="2047.5" _orig_x="337.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.13%)</title><rect x="53.844778613199715" y="2037" width="1.6661654135338346" height="15.0" fill="rgb(213,149,0)" rx="2" ry="2" _orig_x="70.8" _orig_width="1.6"/>
<text x="56.844778613199715" y="2047.5" _orig_x="73.81"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (20 samples, 0.02%)</title><rect x="305.4928989139515" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(240,156,34)" rx="2" ry="2" _orig_x="488.9" _orig_width="0.2"/>
<text x="308.4928989139515" y="1807.5" _orig_x="491.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (376 samples, 0.32%)</title><rect x="157.6677109440268" y="1941" width="3.8530075187969928" height="15.0" fill="rgb(228,103,27)" rx="2" ry="2" _orig_x="170.5" _orig_width="3.7"/>
<text x="160.6677109440268" y="1951.5" _orig_x="173.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="11.149289891395211" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(207,63,13)" rx="2" ry="2" _orig_x="29.8" _orig_width="0.3"/>
<text x="14.149289891395211" y="1999.5" _orig_x="32.83"/>
</g>
<g class="hide">
<title>[perf-32996.map] (106 samples, 0.09%)</title><rect x="17.4" y="1637" width="1.0" height="15.0" fill="rgb(211,207,0)" rx="2" ry="2"/>
<text x="20.37" y="1647.5"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (24 samples, 0.02%)</title><rect x="674.6741854636592" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(207,103,14)" rx="2" ry="2" _orig_x="638.7" _orig_width="0.2"/>
<text x="677.6741854636592" y="1711.5" _orig_x="641.68"/>
</g>
<g class="hide">
<title>base::subtle::TimeTicksNowIgnoringOverride (13 samples, 0.01%)</title><rect x="172.14252297410198" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(253,134,9)" rx="2" ry="2" _orig_x="184.4" _orig_width="0.2"/>
<text x="175.14252297410198" y="1807.5" _orig_x="187.44"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (17 samples, 0.01%)</title><rect x="216.77109440267327" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(248,99,22)" rx="2" ry="2" _orig_x="452.9" _orig_width="0.2"/>
<text x="219.77109440267327" y="1775.5" _orig_x="455.94"/>
</g>
<g class="hide">
<title>[code] (13 samples, 0.01%)</title><rect x="18.8" y="1605" width="0.2" height="15.0" fill="rgb(230,102,31)" rx="2" ry="2"/>
<text x="21.82" y="1615.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (25 samples, 0.02%)</title><rect x="162.24966583124484" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(250,181,22)" rx="2" ry="2" _orig_x="174.9" _orig_width="0.2"/>
<text x="165.24966583124484" y="2031.5" _orig_x="177.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="130.8007936507937" y="1461" width="0.20827067669172933" height="15.0" fill="rgb(224,217,36)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1471.5" _orig_x="147.66"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (162 samples, 0.14%)</title><rect x="163.4992898913952" y="1653" width="1.6661654135338346" height="15.0" fill="rgb(206,28,44)" rx="2" ry="2" _orig_x="176.1" _orig_width="1.6"/>
<text x="166.4992898913952" y="1663.5" _orig_x="179.10"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="10.42034252297416" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(224,5,27)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1695.5" _orig_x="32.06"/>
</g>
<g class="hide">
<title>[unknown] (34 samples, 0.03%)</title><rect x="296.6883876357561" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(234,50,21)" rx="2" ry="2" _orig_x="304.0" _orig_width="0.3"/>
<text x="299.6883876357561" y="2015.5" _orig_x="306.97"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (176 samples, 0.15%)</title><rect x="665.8020050125314" y="1765" width="4.43609022556391" height="15.0" fill="rgb(222,125,2)" rx="2" ry="2" _orig_x="635.1" _orig_width="1.8"/>
<text x="668.8020050125314" y="1775.5" _orig_x="638.12"/>
</g>
<g class="hide">
<title>[unknown] (16 samples, 0.01%)</title><rect x="234.20718462823731" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(243,53,14)" rx="2" ry="2" _orig_x="244.0" _orig_width="0.2"/>
<text x="237.20718462823731" y="1983.5" _orig_x="247.00"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (13 samples, 0.01%)</title><rect x="744.9122807017545" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(238,213,43)" rx="2" ry="2" _orig_x="667.2" _orig_width="0.1"/>
<text x="747.9122807017545" y="1759.5" _orig_x="670.22"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1173" width="0.31240601503759396" height="15.0" fill="rgb(232,43,9)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1183.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="355.8372598162072" y="1733" width="0.31240601503759396" height="15.0" fill="rgb(251,199,26)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1743.5" _orig_x="363.80"/>
</g>
<g class="hide">
<title>[code] (298 samples, 0.25%)</title><rect x="142.46395154553056" y="2037" width="3.1240601503759398" height="15.0" fill="rgb(216,112,50)" rx="2" ry="2" _orig_x="155.9" _orig_width="3.0"/>
<text x="145.46395154553056" y="2047.5" _orig_x="158.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.06%)</title><rect x="132.98763575605687" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(246,216,52)" rx="2" ry="2" _orig_x="146.8" _orig_width="0.7"/>
<text x="135.98763575605687" y="2031.5" _orig_x="149.85"/>
</g>
<g class="hide">
<title>[perf-58157.map] (118 samples, 0.10%)</title><rect x="123.4071846282373" y="1525" width="1.2496240601503759" height="15.0" fill="rgb(242,53,44)" rx="2" ry="2" _orig_x="137.6" _orig_width="1.2"/>
<text x="126.4071846282373" y="1535.5" _orig_x="140.60"/>
</g>
<g>
<title>TypeInt::CompareLessThan (15 samples, 0.01%)</title><rect x="91.57477025898083" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(223,172,2)" rx="2" ry="2" _orig_x="402.1" _orig_width="0.1"/>
<text x="94.57477025898083" y="1839.5" _orig_x="405.06"/>
</g>
<g class="hide">
<title>[chrome] (36 samples, 0.03%)</title><rect x="14.1" y="1861" width="0.4" height="15.0" fill="rgb(229,177,43)" rx="2" ry="2"/>
<text x="17.13" y="1871.5"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::PushOntoDelayedIncomingQueueFromMainThread (11 samples, 0.01%)</title><rect x="205.986507936508" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(209,66,36)" rx="2" ry="2" _orig_x="216.9" _orig_width="0.1"/>
<text x="208.986507936508" y="1711.5" _orig_x="219.88"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (11 samples, 0.01%)</title><rect x="993.0868838763574" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(224,23,0)" rx="2" ry="2" _orig_x="767.9" _orig_width="0.1"/>
<text x="996.0868838763574" y="1791.5" _orig_x="770.90"/>
</g>
<g class="hide">
<title>blink::scheduler::NonMainThreadSchedulerImpl::RunIdleTask (14 samples, 0.01%)</title><rect x="174.53763575605686" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(249,102,8)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1727.5" _orig_x="189.68"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (50 samples, 0.04%)</title><rect x="110.1" y="2053" width="0.5" height="15.0" fill="rgb(214,134,53)" rx="2" ry="2"/>
<text x="113.06" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (33 samples, 0.03%)</title><rect x="110.55137844611531" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(254,127,16)" rx="2" ry="2" _orig_x="409.8" _orig_width="0.3"/>
<text x="113.55137844611531" y="1727.5" _orig_x="412.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="15.6" y="1941" width="0.1" height="15.0" fill="rgb(210,169,11)" rx="2" ry="2"/>
<text x="18.62" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.01%)</title><rect x="1159.9331662489556" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(253,95,38)" rx="2" ry="2" _orig_x="835.6" _orig_width="0.1"/>
<text x="1162.9331662489556" y="1903.5" _orig_x="838.59"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="821" width="2.2909774436090227" height="15.0" fill="rgb(222,67,14)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="831.5" _orig_x="69.82"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (16 samples, 0.01%)</title><rect x="1184.8245614035088" y="1957" width="0.24644945697577275" height="15.0" fill="rgb(218,165,14)" rx="2" ry="2" _orig_x="845.7" _orig_width="0.1"/>
<text x="1187.8245614035088" y="1967.5" _orig_x="848.68"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="10.42034252297416" y="1717" width="0.10413533834586466" height="15.0" fill="rgb(242,175,20)" rx="2" ry="2" _orig_x="29.1" _orig_width="0.1"/>
<text x="13.42034252297416" y="1727.5" _orig_x="32.05"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="92.99966583124484" y="1349" width="0.10413533834586466" height="15.0" fill="rgb(254,75,17)" rx="2" ry="2" _orig_x="108.4" _orig_width="0.1"/>
<text x="95.99966583124484" y="1359.5" _orig_x="111.38"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (619 samples, 0.52%)</title><rect x="127.3099415204679" y="1813" width="15.033416875522136" height="15.0" fill="rgb(216,40,43)" rx="2" ry="2" _orig_x="416.6" _orig_width="6.1"/>
<text x="130.3099415204679" y="1823.5" _orig_x="419.61"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (21 samples, 0.02%)</title><rect x="183.18086883876362" y="1301" width="0.20827067669172933" height="15.0" fill="rgb(233,100,43)" rx="2" ry="2" _orig_x="195.0" _orig_width="0.2"/>
<text x="186.18086883876362" y="1311.5" _orig_x="197.99"/>
</g>
<g class="hide">
<title>_int_free (725 samples, 0.61%)</title><rect x="10.709987966305548" y="2037" width="17.03971119133574" height="15.0" fill="rgb(219,72,2)" rx="2" ry="2" _orig_x="361.4" _orig_width="7.2"/>
<text x="13.709987966305548" y="2047.5" _orig_x="364.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="2021" width="0.4733253108704372" height="15.0" fill="rgb(242,105,13)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="2031.5" _orig_x="371.76"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (120 samples, 0.10%)</title><rect x="971.6457811194654" y="1781" width="2.957393483709273" height="15.0" fill="rgb(245,37,10)" rx="2" ry="2" _orig_x="759.2" _orig_width="1.2"/>
<text x="974.6457811194654" y="1791.5" _orig_x="762.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="67.69477861319972" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(230,225,16)" rx="2" ry="2" _orig_x="84.1" _orig_width="0.4"/>
<text x="70.69477861319972" y="1887.5" _orig_x="87.12"/>
</g>
<g class="hide">
<title>[perf-10139.map] (140 samples, 0.12%)</title><rect x="163.70756056808693" y="1589" width="1.3537593984962406" height="15.0" fill="rgb(212,123,6)" rx="2" ry="2" _orig_x="176.3" _orig_width="1.3"/>
<text x="166.70756056808693" y="1599.5" _orig_x="179.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.05%)</title><rect x="349.1725981620719" y="1973" width="0.6248120300751879" height="15.0" fill="rgb(220,226,37)" rx="2" ry="2" _orig_x="354.4" _orig_width="0.6"/>
<text x="352.1725981620719" y="1983.5" _orig_x="357.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (173 samples, 0.15%)</title><rect x="152.3568086883877" y="1765" width="1.7703007518796992" height="15.0" fill="rgb(222,217,32)" rx="2" ry="2" _orig_x="165.4" _orig_width="1.7"/>
<text x="155.3568086883877" y="1775.5" _orig_x="168.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="911.7116959064329" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(234,87,40)" rx="2" ry="2" _orig_x="894.6" _orig_width="0.1"/>
<text x="914.7116959064329" y="1935.5" _orig_x="897.57"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (24 samples, 0.02%)</title><rect x="1070.47201336675" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(232,113,39)" rx="2" ry="2" _orig_x="799.3" _orig_width="0.3"/>
<text x="1073.47201336675" y="1791.5" _orig_x="802.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (14 samples, 0.01%)</title><rect x="1104.974937343358" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(252,151,5)" rx="2" ry="2" _orig_x="813.3" _orig_width="0.1"/>
<text x="1107.974937343358" y="1855.5" _orig_x="816.26"/>
</g>
<g>
<title>Type::GetTypeSize (11 samples, 0.01%)</title><rect x="796.6666666666667" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(250,84,6)" rx="2" ry="2" _orig_x="688.2" _orig_width="0.1"/>
<text x="799.6666666666667" y="1839.5" _orig_x="691.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(235,133,54)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1983.5" _orig_x="101.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (475 samples, 0.40%)</title><rect x="247.95304928989142" y="1925" width="4.894360902255639" height="15.0" fill="rgb(231,45,42)" rx="2" ry="2" _orig_x="257.2" _orig_width="4.7"/>
<text x="250.95304928989142" y="1935.5" _orig_x="260.18"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (189 samples, 0.16%)</title><rect x="760.9314954051797" y="1797" width="4.682539682539682" height="15.0" fill="rgb(226,116,53)" rx="2" ry="2" _orig_x="673.7" _orig_width="1.9"/>
<text x="763.9314954051797" y="1807.5" _orig_x="676.74"/>
</g>
<g class="hide">
<title>[chrome] (125 samples, 0.11%)</title><rect x="92.06244778613205" y="1749" width="1.2496240601503759" height="15.0" fill="rgb(240,52,46)" rx="2" ry="2" _orig_x="107.5" _orig_width="1.2"/>
<text x="95.06244778613205" y="1759.5" _orig_x="110.49"/>
</g>
<g class="hide">
<title>Builtins_JSEntryTrampoline (14 samples, 0.01%)</title><rect x="184.22222222222229" y="1333" width="0.10413533834586466" height="15.0" fill="rgb(249,108,15)" rx="2" ry="2" _orig_x="196.0" _orig_width="0.1"/>
<text x="187.22222222222229" y="1343.5" _orig_x="198.97"/>
</g>
<g class="hide">
<title>[perf-32884.map] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(235,15,45)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1743.5" _orig_x="118.02"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (12 samples, 0.01%)</title><rect x="676.1528822055136" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(225,222,43)" rx="2" ry="2" _orig_x="639.3" _orig_width="0.1"/>
<text x="679.1528822055136" y="1727.5" _orig_x="642.25"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (22 samples, 0.02%)</title><rect x="158.3625730994152" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(205,180,33)" rx="2" ry="2" _orig_x="429.2" _orig_width="0.2"/>
<text x="161.3625730994152" y="1695.5" _orig_x="432.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="271.9041771094403" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(221,147,38)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1791.5" _orig_x="283.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (677 samples, 0.57%)</title><rect x="384.11027568922293" y="1797" width="16.512113617376773" height="15.0" fill="rgb(242,66,10)" rx="2" ry="2" _orig_x="520.8" _orig_width="6.7"/>
<text x="387.11027568922293" y="1807.5" _orig_x="523.83"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (40 samples, 0.03%)</title><rect x="714.5989974937341" y="1749" width="0.985797827903091" height="15.0" fill="rgb(213,101,6)" rx="2" ry="2" _orig_x="654.9" _orig_width="0.4"/>
<text x="717.5989974937341" y="1759.5" _orig_x="657.85"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::deallocate (25 samples, 0.02%)</title><rect x="1147.857142857143" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(247,175,27)" rx="2" ry="2" _orig_x="830.7" _orig_width="0.3"/>
<text x="1150.857142857143" y="1823.5" _orig_x="833.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.06%)</title><rect x="131.84214703425232" y="1925" width="0.8330827067669173" height="15.0" fill="rgb(223,136,40)" rx="2" ry="2" _orig_x="145.7" _orig_width="0.8"/>
<text x="134.84214703425232" y="1935.5" _orig_x="148.74"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (81 samples, 0.07%)</title><rect x="1167.5730994152048" y="1925" width="1.971595655806182" height="15.0" fill="rgb(226,63,2)" rx="2" ry="2" _orig_x="838.7" _orig_width="0.8"/>
<text x="1170.5730994152048" y="1935.5" _orig_x="841.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="355.3165831244779" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(216,171,23)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="358.3165831244779" y="1951.5" _orig_x="363.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="326.78350041771097" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(208,204,42)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1919.5" _orig_x="335.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="41.34853801169596" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(249,148,0)" rx="2" ry="2" _orig_x="58.8" _orig_width="0.3"/>
<text x="44.34853801169596" y="2015.5" _orig_x="61.84"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (14 samples, 0.01%)</title><rect x="709.9164578111946" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(251,26,22)" rx="2" ry="2" _orig_x="653.0" _orig_width="0.1"/>
<text x="712.9164578111946" y="1775.5" _orig_x="656.01"/>
</g>
<g>
<title>Row::Row (208 samples, 0.17%)</title><rect x="529.0225563909776" y="1861" width="5.175438596491228" height="15.0" fill="rgb(251,6,21)" rx="2" ry="2" _orig_x="579.6" _orig_width="2.1"/>
<text x="532.0225563909776" y="1871.5" _orig_x="582.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="188.4917710944027" y="1381" width="0.10413533834586466" height="15.0" fill="rgb(241,211,49)" rx="2" ry="2" _orig_x="200.1" _orig_width="0.1"/>
<text x="191.4917710944027" y="1391.5" _orig_x="203.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="42.285756056808744" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(206,68,35)" rx="2" ry="2" _orig_x="59.7" _orig_width="0.2"/>
<text x="45.285756056808744" y="1951.5" _orig_x="62.74"/>
</g>
<g class="hide">
<title>[perf-58119.map] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1621" width="0.41654135338345866" height="15.0" fill="rgb(228,172,43)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1631.5" _orig_x="135.37"/>
</g>
<g>
<title>Column::GetType (12 samples, 0.01%)</title><rect x="92.56056808688388" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(221,53,53)" rx="2" ry="2" _orig_x="402.5" _orig_width="0.1"/>
<text x="95.56056808688388" y="1839.5" _orig_x="405.49"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (24 samples, 0.02%)</title><rect x="770.7894736842106" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(217,61,16)" rx="2" ry="2" _orig_x="677.7" _orig_width="0.2"/>
<text x="773.7894736842106" y="1823.5" _orig_x="680.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="235.977485380117" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(227,201,29)" rx="2" ry="2" _orig_x="245.7" _orig_width="0.2"/>
<text x="238.977485380117" y="1919.5" _orig_x="248.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (823 samples, 0.69%)</title><rect x="251.52046783625732" y="1781" width="20.208855472013365" height="15.0" fill="rgb(207,7,15)" rx="2" ry="2" _orig_x="467.0" _orig_width="8.2"/>
<text x="254.52046783625732" y="1791.5" _orig_x="470.00"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (21 samples, 0.02%)</title><rect x="184.48621553884712" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(244,5,17)" rx="2" ry="2" _orig_x="439.8" _orig_width="0.2"/>
<text x="187.48621553884712" y="1743.5" _orig_x="442.82"/>
</g>
<g>
<title>[libminisql_shared.so] (15 samples, 0.01%)</title><rect x="895" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(248,149,47)" rx="2" ry="2" _orig_x="728.1" _orig_width="0.1"/>
<text x="898" y="1871.5" _orig_x="731.05"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (18 samples, 0.02%)</title><rect x="203.95572263993313" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(226,73,40)" rx="2" ry="2" _orig_x="447.7" _orig_width="0.2"/>
<text x="206.95572263993313" y="1823.5" _orig_x="450.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="52.69928989139521" y="1797" width="0.31240601503759396" height="15.0" fill="rgb(209,140,23)" rx="2" ry="2" _orig_x="69.7" _orig_width="0.3"/>
<text x="55.69928989139521" y="1807.5" _orig_x="72.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="911.0192147034253" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(239,103,50)" rx="2" ry="2" _orig_x="734.6" _orig_width="0.2"/>
<text x="914.0192147034253" y="1807.5" _orig_x="737.64"/>
</g>
<g class="hide">
<title>[code] (145 samples, 0.12%)</title><rect x="31.143274853801223" y="1957" width="1.4578947368421051" height="15.0" fill="rgb(229,223,52)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1967.5" _orig_x="51.97"/>
</g>
<g class="hide">
<title>wukong::lwp::Session::run (221 samples, 0.19%)</title><rect x="16.876733500417764" y="1909" width="2.186842105263158" height="15.0" fill="rgb(215,70,9)" rx="2" ry="2" _orig_x="35.3" _orig_width="2.1"/>
<text x="19.876733500417764" y="1919.5" _orig_x="38.25"/>
</g>
<g class="hide">
<title>[code] (399 samples, 0.34%)</title><rect x="16.3" y="2037" width="4.0" height="15.0" fill="rgb(212,192,14)" rx="2" ry="2"/>
<text x="19.32" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="53" width="0.20827067669172933" height="15.0" fill="rgb(251,21,27)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="63.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="11.98237259816213" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(216,54,3)" rx="2" ry="2" _orig_x="30.6" _orig_width="0.2"/>
<text x="14.98237259816213" y="1983.5" _orig_x="33.65"/>
</g>
<g class="hide">
<title>v8::internal::compiler::GraphReducer::ReduceGraph (98 samples, 0.08%)</title><rect x="143.5053049289892" y="1909" width="1.0413533834586466" height="15.0" fill="rgb(254,157,12)" rx="2" ry="2" _orig_x="156.9" _orig_width="1.0"/>
<text x="146.5053049289892" y="1919.5" _orig_x="159.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.8" y="1909" width="0.1" height="15.0" fill="rgb(231,60,46)" rx="2" ry="2"/>
<text x="18.77" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="901" width="0.20827067669172933" height="15.0" fill="rgb(222,80,12)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="911.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (91 samples, 0.08%)</title><rect x="684.0392648287385" y="1829" width="2.218045112781955" height="15.0" fill="rgb(247,101,20)" rx="2" ry="2" _orig_x="642.5" _orig_width="0.9"/>
<text x="687.0392648287385" y="1839.5" _orig_x="645.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.07%)</title><rect x="348.9643274853801" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(243,188,6)" rx="2" ry="2" _orig_x="354.2" _orig_width="0.8"/>
<text x="351.9643274853801" y="2015.5" _orig_x="357.22"/>
</g>
<g class="hide">
<title>gnome-shell (3,334 samples, 2.80%)</title><rect x="289.2" y="2069" width="33.1" height="15.0" fill="rgb(221,112,29)" rx="2" ry="2"/>
<text x="292.22" y="2079.5">gn..</text>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (14 samples, 0.01%)</title><rect x="441.0401002506265" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(238,0,37)" rx="2" ry="2" _orig_x="543.9" _orig_width="0.2"/>
<text x="444.0401002506265" y="1887.5" _orig_x="546.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="51.03312447786137" y="37" width="0.10413533834586466" height="15.0" fill="rgb(225,166,42)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="47.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[perf-58145.map] (251 samples, 0.21%)</title><rect x="126.21883876357568" y="1781" width="2.4992481203007517" height="15.0" fill="rgb(240,116,24)" rx="2" ry="2" _orig_x="140.3" _orig_width="2.4"/>
<text x="129.21883876357566" y="1791.5" _orig_x="143.26"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (20 samples, 0.02%)</title><rect x="551.9423558897242" y="1701" width="0.4928989139515455" height="15.0" fill="rgb(254,91,3)" rx="2" ry="2" _orig_x="588.9" _orig_width="0.2"/>
<text x="554.9423558897242" y="1711.5" _orig_x="591.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="97.16507936507942" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(248,36,27)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="2031.5" _orig_x="115.36"/>
</g>
<g class="hide">
<title>blink::ScheduledAction::Execute (2,493 samples, 2.10%)</title><rect x="176.30793650793657" y="1733" width="25.72142857142857" height="15.0" fill="rgb(238,74,14)" rx="2" ry="2" _orig_x="188.4" _orig_width="24.7"/>
<text x="179.30793650793657" y="1743.5" _orig_x="191.37">blink::ScheduledAction::Execute </text>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="281.5" y="2053" width="0.3" height="15.0" fill="rgb(214,103,6)" rx="2" ry="2"/>
<text x="284.53" y="2063.5"/>
</g>
<g class="hide">
<title>service_manager::MainRun (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1925" width="55.81654135338346" height="15.0" fill="rgb(215,19,4)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1935.5" _orig_x="185.47">service_manager::MainRun </text>
</g>
<g class="hide">
<title>[code] (42 samples, 0.04%)</title><rect x="31.87222222222228" y="1781" width="0.41654135338345866" height="15.0" fill="rgb(227,117,42)" rx="2" ry="2" _orig_x="49.7" _orig_width="0.4"/>
<text x="34.87222222222228" y="1791.5" _orig_x="52.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.11%)</title><rect x="902.8601921470344" y="2037" width="1.3537593984962406" height="15.0" fill="rgb(224,110,46)" rx="2" ry="2" _orig_x="886.1" _orig_width="1.3"/>
<text x="905.8601921470344" y="2047.5" _orig_x="889.11"/>
</g>
<g class="hide">
<title>v8::Object::Get (15 samples, 0.01%)</title><rect x="164.7489139515456" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(223,188,16)" rx="2" ry="2" _orig_x="177.3" _orig_width="0.1"/>
<text x="167.7489139515456" y="1455.5" _orig_x="180.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.12%)</title><rect x="1180.2" y="1653" width="1.4" height="15.0" fill="rgb(251,59,52)" rx="2" ry="2"/>
<text x="1183.20" y="1663.5"/>
</g>
<g>
<title>[libminisql_shared.so] (11 samples, 0.01%)</title><rect x="705.233918128655" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(233,153,11)" rx="2" ry="2" _orig_x="651.1" _orig_width="0.1"/>
<text x="708.233918128655" y="1759.5" _orig_x="654.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="328.44966583124483" y="1973" width="0.5206766917293233" height="15.0" fill="rgb(227,18,44)" rx="2" ry="2" _orig_x="334.5" _orig_width="0.5"/>
<text x="331.44966583124483" y="1983.5" _orig_x="337.54"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="319.077485380117" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(219,222,0)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1727.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (81 samples, 0.07%)</title><rect x="146.7" y="2053" width="0.8" height="15.0" fill="rgb(243,192,54)" rx="2" ry="2"/>
<text x="149.71" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (2,276 samples, 1.91%)</title><rect x="109.14064327485386" y="2037" width="23.534586466165415" height="15.0" fill="rgb(253,124,28)" rx="2" ry="2" _orig_x="123.9" _orig_width="22.6"/>
<text x="112.14064327485386" y="2047.5" _orig_x="126.94">[code] </text>
</g>
<g class="hide">
<title>[code] (927 samples, 0.78%)</title><rect x="122.05342522974108" y="1989" width="9.580451127819547" height="15.0" fill="rgb(208,73,12)" rx="2" ry="2" _orig_x="136.3" _orig_width="9.2"/>
<text x="125.05342522974108" y="1999.5" _orig_x="139.29"/>
</g>
<g class="hide">
<title>[unknown] (29 samples, 0.02%)</title><rect x="10.836883876357616" y="229" width="0.20827067669172933" height="15.0" fill="rgb(225,162,13)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="239.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="133" width="0.31240601503759396" height="15.0" fill="rgb(217,165,30)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="143.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[code] (150 samples, 0.13%)</title><rect x="31.143274853801223" y="2037" width="1.4578947368421051" height="15.0" fill="rgb(254,116,27)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="2047.5" _orig_x="51.96"/>
</g>
<g class="hide">
<title>[perf-58119.map] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1653" width="0.41654135338345866" height="15.0" fill="rgb(212,206,48)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1663.5" _orig_x="135.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="12.919590643274908" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(248,177,43)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1935.5" _orig_x="34.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (636 samples, 0.53%)</title><rect x="134.02898913951552" y="2021" width="6.6646616541353385" height="15.0" fill="rgb(235,194,28)" rx="2" ry="2" _orig_x="147.8" _orig_width="6.4"/>
<text x="137.02898913951552" y="2031.5" _orig_x="150.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="85" width="0.20827067669172933" height="15.0" fill="rgb(243,5,1)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="95.5" _orig_x="71.64"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_Node_iterator_base (15 samples, 0.01%)</title><rect x="996.5371762740182" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(241,216,50)" rx="2" ry="2" _orig_x="769.3" _orig_width="0.1"/>
<text x="999.5371762740182" y="1791.5" _orig_x="772.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="930.039515455305" y="1573" width="0.31240601503759396" height="15.0" fill="rgb(230,184,8)" rx="2" ry="2" _orig_x="912.2" _orig_width="0.3"/>
<text x="933.039515455305" y="1583.5" _orig_x="915.24"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (68 samples, 0.06%)</title><rect x="66.92982456140356" y="1829" width="1.7251461988304093" height="15.0" fill="rgb(238,139,54)" rx="2" ry="2" _orig_x="392.1" _orig_width="0.7"/>
<text x="69.92982456140356" y="1839.5" _orig_x="395.11"/>
</g>
<g class="hide">
<title>blink::WorldSafeV8ReferenceInternal::MaybeCheckCreationContextWorld (32 samples, 0.03%)</title><rect x="194.32335004177114" y="1429" width="0.41654135338345866" height="15.0" fill="rgb(209,112,26)" rx="2" ry="2" _orig_x="205.7" _orig_width="0.4"/>
<text x="197.32335004177114" y="1439.5" _orig_x="208.75"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(224,201,32)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1375.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="341.98725981620726" y="1909" width="1.5620300751879699" height="15.0" fill="rgb(248,82,6)" rx="2" ry="2" _orig_x="347.5" _orig_width="1.5"/>
<text x="344.98725981620726" y="1919.5" _orig_x="350.51"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (34 samples, 0.03%)</title><rect x="829.9373433583961" y="1733" width="0.985797827903091" height="15.0" fill="rgb(208,208,19)" rx="2" ry="2" _orig_x="701.7" _orig_width="0.4"/>
<text x="832.9373433583961" y="1743.5" _orig_x="704.73"/>
</g>
<g class="hide">
<title>blink::JSBasedEventListener::Invoke (60 samples, 0.05%)</title><rect x="183.90981620718466" y="1445" width="0.6248120300751879" height="15.0" fill="rgb(245,126,48)" rx="2" ry="2" _orig_x="195.7" _orig_width="0.6"/>
<text x="186.90981620718466" y="1455.5" _orig_x="198.74"/>
</g>
<g>
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (11 samples, 0.01%)</title><rect x="1185.810359231412" y="1989" width="0.24644945697577275" height="15.0" fill="rgb(208,97,13)" rx="2" ry="2" _orig_x="846.1" _orig_width="0.1"/>
<text x="1188.810359231412" y="1999.5" _orig_x="849.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="21.8" y="2005" width="0.4" height="15.0" fill="rgb(241,14,24)" rx="2" ry="2"/>
<text x="24.77" y="2015.5"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (17 samples, 0.01%)</title><rect x="774.7326649958228" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(245,143,35)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.1"/>
<text x="777.7326649958228" y="1855.5" _orig_x="682.26"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (11 samples, 0.01%)</title><rect x="183.28500417710947" y="1237" width="0.10413533834586466" height="15.0" fill="rgb(246,109,20)" rx="2" ry="2" _orig_x="195.1" _orig_width="0.1"/>
<text x="186.28500417710947" y="1247.5" _orig_x="198.09"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (3,268 samples, 2.75%)</title><rect x="693.4043441938178" y="1893" width="79.84962406015038" height="15.0" fill="rgb(241,2,15)" rx="2" ry="2" _orig_x="646.3" _orig_width="32.4"/>
<text x="696.4043441938178" y="1903.5" _orig_x="649.25">GenericC..</text>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (4,960 samples, 4.17%)</title><rect x="443.25814536340835" y="1877" width="121.2531328320802" height="15.0" fill="rgb(226,187,29)" rx="2" ry="2" _orig_x="544.8" _orig_width="49.2"/>
<text x="446.25814536340835" y="1887.5" _orig_x="547.79">GenericComparat..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (20 samples, 0.02%)</title><rect x="139.87886382623222" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(227,208,8)" rx="2" ry="2" _orig_x="421.7" _orig_width="0.2"/>
<text x="142.87886382623222" y="1775.5" _orig_x="424.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.07%)</title><rect x="350.5263575605681" y="1957" width="0.8330827067669173" height="15.0" fill="rgb(221,17,27)" rx="2" ry="2" _orig_x="355.7" _orig_width="0.8"/>
<text x="353.5263575605681" y="1967.5" _orig_x="358.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="11.774101921470397" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(228,184,54)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="1935.5" _orig_x="33.44"/>
</g>
<g class="hide">
<title>[chrome] (16 samples, 0.01%)</title><rect x="11.7" y="1717" width="0.1" height="15.0" fill="rgb(208,219,15)" rx="2" ry="2"/>
<text x="14.67" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="322.82635756056817" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(206,162,37)" rx="2" ry="2" _orig_x="329.1" _orig_width="0.3"/>
<text x="325.82635756056817" y="2015.5" _orig_x="332.12"/>
</g>
<g class="hide">
<title>blink::WorldSafeV8Reference&lt;v8::Value&gt;::operator= (21 samples, 0.02%)</title><rect x="194.11507936507942" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(216,138,39)" rx="2" ry="2" _orig_x="205.5" _orig_width="0.2"/>
<text x="197.11507936507942" y="1439.5" _orig_x="208.54"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="613" width="2.2909774436090227" height="15.0" fill="rgb(226,223,40)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="623.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[perf-58157.map] (74 samples, 0.06%)</title><rect x="123.82372598162077" y="1445" width="0.7289473684210526" height="15.0" fill="rgb(239,228,37)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.7"/>
<text x="126.82372598162077" y="1455.5" _orig_x="141.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="904.0056808688388" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(252,68,54)" rx="2" ry="2" _orig_x="887.2" _orig_width="0.2"/>
<text x="907.0056808688388" y="1871.5" _orig_x="890.25"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="823.0367585630743" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(247,205,22)" rx="2" ry="2" _orig_x="698.9" _orig_width="0.1"/>
<text x="826.0367585630743" y="1775.5" _orig_x="701.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(209,140,48)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="1951.5" _orig_x="329.84"/>
</g>
<g>
<title>Row::Row (157 samples, 0.13%)</title><rect x="220.71428571428572" y="1845" width="3.6967418546365916" height="15.0" fill="rgb(219,197,20)" rx="2" ry="2" _orig_x="454.5" _orig_width="1.5"/>
<text x="223.71428571428572" y="1855.5" _orig_x="457.47"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (41 samples, 0.03%)</title><rect x="299.08521303258146" y="1813" width="0.985797827903091" height="15.0" fill="rgb(236,187,22)" rx="2" ry="2" _orig_x="486.3" _orig_width="0.4"/>
<text x="302.08521303258146" y="1823.5" _orig_x="489.29"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="837" width="0.31240601503759396" height="15.0" fill="rgb(217,35,12)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="847.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.11%)</title><rect x="72.79741019214708" y="2021" width="1.3537593984962406" height="15.0" fill="rgb(243,228,23)" rx="2" ry="2" _orig_x="89.0" _orig_width="1.3"/>
<text x="75.79741019214708" y="2031.5" _orig_x="92.02"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (20 samples, 0.02%)</title><rect x="778.1829573934838" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(229,168,29)" rx="2" ry="2" _orig_x="680.7" _orig_width="0.2"/>
<text x="781.1829573934838" y="1839.5" _orig_x="683.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="313.6624477861321" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(211,218,53)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1999.5" _orig_x="323.26"/>
</g>
<g class="hide">
<title>[perf-58145.map] (13 samples, 0.01%)</title><rect x="125.80229741019221" y="1637" width="0.10413533834586466" height="15.0" fill="rgb(239,62,30)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1647.5" _orig_x="142.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="28.459687123946942" y="1845" width="0.2366626554352186" height="15.0" fill="rgb(208,129,4)" rx="2" ry="2" _orig_x="368.9" _orig_width="0.1"/>
<text x="31.459687123946942" y="1855.5" _orig_x="371.91"/>
</g>
<g class="hide">
<title>[perf-15821.map] (49 samples, 0.04%)</title><rect x="92.7913951545531" y="1637" width="0.5206766917293233" height="15.0" fill="rgb(217,112,1)" rx="2" ry="2" _orig_x="108.2" _orig_width="0.5"/>
<text x="95.7913951545531" y="1647.5" _orig_x="111.17"/>
</g>
<g class="hide">
<title>Builtins_JSEntryTrampoline (1,636 samples, 1.38%)</title><rect x="181.2022974101922" y="1589" width="16.869924812030074" height="15.0" fill="rgb(215,40,0)" rx="2" ry="2" _orig_x="193.1" _orig_width="16.2"/>
<text x="184.2022974101922" y="1599.5" _orig_x="196.10"/>
</g>
<g class="hide">
<title>[code] (23 samples, 0.02%)</title><rect x="147.15004177109446" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(232,217,20)" rx="2" ry="2" _orig_x="160.4" _orig_width="0.2"/>
<text x="150.15004177109446" y="1935.5" _orig_x="163.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.08%)</title><rect x="927.6444026733501" y="1541" width="0.937218045112782" height="15.0" fill="rgb(215,183,25)" rx="2" ry="2" _orig_x="909.9" _orig_width="0.9"/>
<text x="930.6444026733501" y="1551.5" _orig_x="912.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (296 samples, 0.25%)</title><rect x="546.766917293233" y="1781" width="7.14703425229741" height="15.0" fill="rgb(231,105,24)" rx="2" ry="2" _orig_x="586.8" _orig_width="2.9"/>
<text x="549.766917293233" y="1791.5" _orig_x="589.80"/>
</g>
<g class="hide">
<title>[unknown] (18 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(226,212,12)" rx="2" ry="2"/>
<text x="1192.60" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (32 samples, 0.03%)</title><rect x="352.0718462823726" y="1733" width="0.985797827903091" height="15.0" fill="rgb(218,75,54)" rx="2" ry="2" _orig_x="507.8" _orig_width="0.4"/>
<text x="355.0718462823726" y="1743.5" _orig_x="510.84"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1237" width="2.2909774436090227" height="15.0" fill="rgb(230,77,26)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1247.5" _orig_x="69.82"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (32 samples, 0.03%)</title><rect x="663.3375104427736" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(207,53,46)" rx="2" ry="2" _orig_x="634.1" _orig_width="0.3"/>
<text x="666.3375104427736" y="1823.5" _orig_x="637.11"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (382 samples, 0.32%)</title><rect x="306.2322472848788" y="1797" width="9.365079365079364" height="15.0" fill="rgb(208,133,51)" rx="2" ry="2" _orig_x="489.2" _orig_width="3.8"/>
<text x="309.2322472848788" y="1807.5" _orig_x="492.18"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (176 samples, 0.15%)</title><rect x="1026.3575605680867" y="1861" width="4.43609022556391" height="15.0" fill="rgb(215,176,24)" rx="2" ry="2" _orig_x="781.4" _orig_width="1.8"/>
<text x="1029.3575605680867" y="1871.5" _orig_x="784.41"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (23 samples, 0.02%)</title><rect x="375.4845446950709" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(231,144,8)" rx="2" ry="2" _orig_x="517.3" _orig_width="0.2"/>
<text x="378.4845446950709" y="1743.5" _orig_x="520.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.08%)</title><rect x="929.3105680868839" y="1749" width="1.0413533834586466" height="15.0" fill="rgb(237,205,4)" rx="2" ry="2" _orig_x="911.5" _orig_width="1.0"/>
<text x="932.3105680868839" y="1759.5" _orig_x="914.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.10%)</title><rect x="141.21432748538015" y="1941" width="1.2496240601503759" height="15.0" fill="rgb(230,39,3)" rx="2" ry="2" _orig_x="154.7" _orig_width="1.2"/>
<text x="144.21432748538015" y="1951.5" _orig_x="157.70"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="69" width="0.20827067669172933" height="15.0" fill="rgb(232,54,11)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="79.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.05%)</title><rect x="90.39628237259822" y="1813" width="0.6248120300751879" height="15.0" fill="rgb(230,127,21)" rx="2" ry="2" _orig_x="105.9" _orig_width="0.6"/>
<text x="93.39628237259822" y="1823.5" _orig_x="108.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.09%)</title><rect x="347.9229741019215" y="1941" width="1.0413533834586466" height="15.0" fill="rgb(253,65,7)" rx="2" ry="2" _orig_x="353.2" _orig_width="1.0"/>
<text x="350.9229741019215" y="1951.5" _orig_x="356.18"/>
</g>
<g>
<title>std::allocator&lt;Field*&gt;::~allocator (12 samples, 0.01%)</title><rect x="1149.5822890559732" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(235,190,48)" rx="2" ry="2" _orig_x="831.4" _orig_width="0.1"/>
<text x="1152.5822890559732" y="1839.5" _orig_x="834.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.08%)</title><rect x="929.3105680868839" y="1765" width="1.0413533834586466" height="15.0" fill="rgb(215,40,15)" rx="2" ry="2" _orig_x="911.5" _orig_width="1.0"/>
<text x="932.3105680868839" y="1775.5" _orig_x="914.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="108.61996658312454" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(234,229,34)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="2031.5" _orig_x="126.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="52.49101921470348" y="1813" width="0.5206766917293233" height="15.0" fill="rgb(222,41,16)" rx="2" ry="2" _orig_x="69.5" _orig_width="0.5"/>
<text x="55.49101921470348" y="1823.5" _orig_x="72.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="327.09590643274856" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(220,133,21)" rx="2" ry="2" _orig_x="333.2" _orig_width="0.2"/>
<text x="330.09590643274856" y="2031.5" _orig_x="336.22"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (20 samples, 0.02%)</title><rect x="598.0284043441937" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(215,221,19)" rx="2" ry="2" _orig_x="607.6" _orig_width="0.2"/>
<text x="601.0284043441937" y="1727.5" _orig_x="610.64"/>
</g>
<g class="hide">
<title>[code] (32 samples, 0.03%)</title><rect x="12.6" y="1813" width="0.3" height="15.0" fill="rgb(223,211,28)" rx="2" ry="2"/>
<text x="15.63" y="1823.5"/>
</g>
<g class="hide">
<title>_nv039782rm (11 samples, 0.01%)</title><rect x="1187.9" y="2053" width="0.1" height="15.0" fill="rgb(254,3,28)" rx="2" ry="2"/>
<text x="1190.86" y="2063.5"/>
</g>
<g class="hide">
<title>napi_make_callback (236 samples, 0.20%)</title><rect x="122.2616959064328" y="1909" width="2.3951127819548867" height="15.0" fill="rgb(215,82,33)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1919.5" _orig_x="139.48"/>
</g>
<g>
<title>operator delete (12 samples, 0.01%)</title><rect x="681.8212197159565" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(239,172,40)" rx="2" ry="2" _orig_x="641.6" _orig_width="0.1"/>
<text x="684.8212197159565" y="1855.5" _orig_x="644.59"/>
</g>
<g class="hide">
<title>kworker/8:0-eve (79 samples, 0.07%)</title><rect x="359.3" y="2069" width="0.8" height="15.0" fill="rgb(249,208,32)" rx="2" ry="2"/>
<text x="362.34" y="2079.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.04%)</title><rect x="14.6" y="2021" width="0.5" height="15.0" fill="rgb(237,209,42)" rx="2" ry="2"/>
<text x="17.63" y="2031.5"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (2,965 samples, 2.49%)</title><rect x="16.65413533834584" y="1861" width="72.45614035087719" height="15.0" fill="rgb(214,192,48)" rx="2" ry="2" _orig_x="371.7" _orig_width="29.4"/>
<text x="19.65413533834584" y="1871.5" _orig_x="374.68">Generic..</text>
</g>
<g class="hide">
<title>[perf-58119.map] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1589" width="0.10413533834586466" height="15.0" fill="rgb(228,156,34)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1599.5" _orig_x="130.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (24 samples, 0.02%)</title><rect x="240.67669172932335" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(244,103,11)" rx="2" ry="2" _orig_x="462.6" _orig_width="0.2"/>
<text x="243.67669172932335" y="1807.5" _orig_x="465.61"/>
</g>
<g class="hide">
<title>Compositor (19 samples, 0.02%)</title><rect x="15.1" y="2069" width="0.2" height="15.0" fill="rgb(209,183,14)" rx="2" ry="2"/>
<text x="18.07" y="2079.5"/>
</g>
<g class="hide">
<title>runtime.mstart.abi0 (27 samples, 0.02%)</title><rect x="269.9256056808689" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(222,15,39)" rx="2" ry="2" _orig_x="278.3" _orig_width="0.2"/>
<text x="272.9256056808689" y="2047.5" _orig_x="281.26"/>
</g>
<g class="hide">
<title>[code] (11 samples, 0.01%)</title><rect x="99.97673350041775" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(248,227,32)" rx="2" ry="2" _orig_x="115.1" _orig_width="0.1"/>
<text x="102.97673350041775" y="1663.5" _orig_x="118.06"/>
</g>
<g class="hide">
<title>[unknown] (72 samples, 0.06%)</title><rect x="227.85492898913958" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(217,160,12)" rx="2" ry="2" _orig_x="237.9" _orig_width="0.7"/>
<text x="230.85492898913958" y="2031.5" _orig_x="240.92"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (143 samples, 0.12%)</title><rect x="518.9181286549707" y="1781" width="3.4502923976608186" height="15.0" fill="rgb(229,187,0)" rx="2" ry="2" _orig_x="575.5" _orig_width="1.4"/>
<text x="521.9181286549707" y="1791.5" _orig_x="578.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="302.10342522974105" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(221,125,39)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="1999.5" _orig_x="312.17"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="686.9966583124478" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(215,45,17)" rx="2" ry="2" _orig_x="643.7" _orig_width="0.1"/>
<text x="689.9966583124478" y="1871.5" _orig_x="646.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="108.61996658312454" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(217,133,38)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="1967.5" _orig_x="126.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.11%)</title><rect x="64.15417710944033" y="1861" width="1.3537593984962406" height="15.0" fill="rgb(241,173,4)" rx="2" ry="2" _orig_x="80.7" _orig_width="1.3"/>
<text x="67.15417710944033" y="1871.5" _orig_x="83.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,451 samples, 3.74%)</title><rect x="1116.962447786132" y="1861" width="46.02781954887218" height="15.0" fill="rgb(240,177,6)" rx="2" ry="2" _orig_x="1091.7" _orig_width="44.2"/>
<text x="1119.962447786132" y="1871.5" _orig_x="1094.73">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1605" width="0.31240601503759396" height="15.0" fill="rgb(207,201,14)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1615.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="533" width="0.31240601503759396" height="15.0" fill="rgb(212,203,11)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="543.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="805" width="0.31240601503759396" height="15.0" fill="rgb(235,144,39)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="815.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[chrome] (20 samples, 0.02%)</title><rect x="92.89553049289897" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(220,48,18)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.2"/>
<text x="95.89553049289897" y="1407.5" _orig_x="111.34"/>
</g>
<g class="hide">
<title>[code] (210 samples, 0.18%)</title><rect x="17.2" y="1813" width="2.1" height="15.0" fill="rgb(223,180,15)" rx="2" ry="2"/>
<text x="20.21" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.11%)</title><rect x="1161.0116959064328" y="1685" width="1.4578947368421051" height="15.0" fill="rgb(247,186,48)" rx="2" ry="2" _orig_x="1134.0" _orig_width="1.4"/>
<text x="1164.0116959064328" y="1695.5" _orig_x="1137.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (358 samples, 0.30%)</title><rect x="888.1771094402674" y="1781" width="3.748872180451128" height="15.0" fill="rgb(218,71,49)" rx="2" ry="2" _orig_x="872.0" _orig_width="3.6"/>
<text x="891.1771094402674" y="1791.5" _orig_x="875.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="30.41432748538017" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(218,6,2)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="2015.5" _orig_x="51.31"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (117 samples, 0.10%)</title><rect x="549.7243107769423" y="1733" width="2.957393483709273" height="15.0" fill="rgb(250,99,51)" rx="2" ry="2" _orig_x="588.0" _orig_width="1.2"/>
<text x="552.7243107769423" y="1743.5" _orig_x="591.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="1188.8" y="1989" width="0.1" height="15.0" fill="rgb(224,109,41)" rx="2" ry="2"/>
<text x="1191.79" y="1999.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (38 samples, 0.03%)</title><rect x="893.2748538011696" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(239,151,46)" rx="2" ry="2" _orig_x="727.4" _orig_width="0.3"/>
<text x="896.2748538011696" y="1823.5" _orig_x="730.37"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.12%)</title><rect x="12.1" y="1941" width="1.5" height="15.0" fill="rgb(242,86,37)" rx="2" ry="2"/>
<text x="15.14" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (50 samples, 0.04%)</title><rect x="128.19741019214706" y="1477" width="0.5206766917293233" height="15.0" fill="rgb(223,91,27)" rx="2" ry="2" _orig_x="142.2" _orig_width="0.5"/>
<text x="131.19741019214706" y="1487.5" _orig_x="145.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="346.56921470342525" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(234,78,7)" rx="2" ry="2" _orig_x="351.9" _orig_width="0.4"/>
<text x="349.56921470342525" y="1887.5" _orig_x="354.92"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt; &gt;::find (38 samples, 0.03%)</title><rect x="1160.9189640768589" y="1941" width="0.7393483709273182" height="15.0" fill="rgb(252,85,28)" rx="2" ry="2" _orig_x="836.0" _orig_width="0.3"/>
<text x="1163.9189640768589" y="1951.5" _orig_x="838.96"/>
</g>
<g>
<title>Field::Field (12 samples, 0.01%)</title><rect x="92.8070175438597" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(240,15,3)" rx="2" ry="2" _orig_x="402.6" _orig_width="0.1"/>
<text x="95.8070175438597" y="1839.5" _orig_x="405.61"/>
</g>
<g class="hide">
<title>blink::LocalFrame::LocalFrameRoot (14 samples, 0.01%)</title><rect x="203.48725981620723" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(229,183,52)" rx="2" ry="2" _orig_x="214.5" _orig_width="0.2"/>
<text x="206.48725981620723" y="1711.5" _orig_x="217.52"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (59 samples, 0.05%)</title><rect x="1109.9039264828737" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(249,153,30)" rx="2" ry="2" _orig_x="815.3" _orig_width="0.6"/>
<text x="1112.9039264828737" y="1839.5" _orig_x="818.31"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="965" width="0.31240601503759396" height="15.0" fill="rgb(240,37,20)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="975.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>QMoviePrivate::~QMoviePrivate (41 samples, 0.03%)</title><rect x="181.2" y="2053" width="0.4" height="15.0" fill="rgb(207,178,12)" rx="2" ry="2"/>
<text x="184.16" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="326.36695906432755" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(210,59,8)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="2015.5" _orig_x="335.51"/>
</g>
<g class="hide">
<title>[perf-58119.map] (40 samples, 0.03%)</title><rect x="117.99214703425235" y="1477" width="0.41654135338345866" height="15.0" fill="rgb(252,6,34)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1487.5" _orig_x="135.44"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1349" width="0.31240601503759396" height="15.0" fill="rgb(247,28,41)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1359.5" _orig_x="48.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (78 samples, 0.07%)</title><rect x="740.7226399331662" y="1781" width="1.7251461988304093" height="15.0" fill="rgb(226,35,44)" rx="2" ry="2" _orig_x="665.5" _orig_width="0.7"/>
<text x="743.7226399331662" y="1791.5" _orig_x="668.47"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (144 samples, 0.12%)</title><rect x="373.266499582289" y="1781" width="3.4502923976608186" height="15.0" fill="rgb(235,120,46)" rx="2" ry="2" _orig_x="516.4" _orig_width="1.4"/>
<text x="376.266499582289" y="1791.5" _orig_x="519.36"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (18 samples, 0.02%)</title><rect x="24.294068504594843" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(238,152,26)" rx="2" ry="2" _orig_x="374.8" _orig_width="0.1"/>
<text x="27.294068504594843" y="1727.5" _orig_x="377.75"/>
</g>
<g class="hide">
<title>[unknown] (184 samples, 0.15%)</title><rect x="49.679365079365134" y="213" width="1.874436090225564" height="15.0" fill="rgb(210,18,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.8"/>
<text x="52.679365079365134" y="223.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (51 samples, 0.04%)</title><rect x="294.0850041771095" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(223,69,14)" rx="2" ry="2" _orig_x="301.5" _orig_width="0.5"/>
<text x="297.0850041771095" y="2015.5" _orig_x="304.46"/>
</g>
<g class="hide">
<title>snd_pcm_common_ioctl (259 samples, 0.22%)</title><rect x="67.48650793650799" y="1957" width="2.707518796992481" height="15.0" fill="rgb(209,172,26)" rx="2" ry="2" _orig_x="83.9" _orig_width="2.6"/>
<text x="70.48650793650799" y="1967.5" _orig_x="86.90"/>
</g>
<g class="hide">
<title>[unknown] (11 samples, 0.01%)</title><rect x="274.4034252297411" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(216,147,0)" rx="2" ry="2" _orig_x="282.6" _orig_width="0.1"/>
<text x="277.4034252297411" y="2047.5" _orig_x="285.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.13%)</title><rect x="53.94891395154559" y="1941" width="1.5620300751879699" height="15.0" fill="rgb(212,8,41)" rx="2" ry="2" _orig_x="70.9" _orig_width="1.5"/>
<text x="56.94891395154559" y="1951.5" _orig_x="73.88"/>
</g>
<g class="hide">
<title>[unknown] (221 samples, 0.19%)</title><rect x="49.679365079365134" y="1877" width="2.2909774436090227" height="15.0" fill="rgb(225,60,34)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1887.5" _orig_x="69.81"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (163 samples, 0.14%)</title><rect x="72.8" y="2053" width="1.6" height="15.0" fill="rgb(234,110,4)" rx="2" ry="2"/>
<text x="75.75" y="2063.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (44 samples, 0.04%)</title><rect x="15.522974101921527" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(242,182,36)" rx="2" ry="2" _orig_x="34.0" _orig_width="0.4"/>
<text x="18.522974101921527" y="2047.5" _orig_x="37.00"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (31 samples, 0.03%)</title><rect x="265.5680868838763" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(234,26,31)" rx="2" ry="2" _orig_x="472.7" _orig_width="0.3"/>
<text x="268.5680868838763" y="1743.5" _orig_x="475.67"/>
</g>
<g class="hide">
<title>kworker/2:2-eve (193 samples, 0.16%)</title><rect x="352.3" y="2069" width="1.9" height="15.0" fill="rgb(240,179,22)" rx="2" ry="2"/>
<text x="355.28" y="2079.5"/>
</g>
<g>
<title>[libstdc++.so.6.0.28] (13 samples, 0.01%)</title><rect x="1045.5806182121974" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(245,155,21)" rx="2" ry="2" _orig_x="789.2" _orig_width="0.1"/>
<text x="1048.5806182121974" y="1871.5" _orig_x="792.21"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="668.266499582289" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(253,51,43)" rx="2" ry="2" _orig_x="636.1" _orig_width="0.2"/>
<text x="671.266499582289" y="1727.5" _orig_x="639.15"/>
</g>
<g class="hide">
<title>[perf-4309.map] (19 samples, 0.02%)</title><rect x="10.1" y="1909" width="0.1" height="15.0" fill="rgb(229,90,18)" rx="2" ry="2"/>
<text x="13.06" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="12.0" y="1877" width="0.1" height="15.0" fill="rgb(231,226,33)" rx="2" ry="2"/>
<text x="15.02" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(241,217,43)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1759.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.08%)</title><rect x="52.07447786132001" y="1925" width="0.937218045112782" height="15.0" fill="rgb(218,216,7)" rx="2" ry="2" _orig_x="69.1" _orig_width="0.9"/>
<text x="55.07447786132001" y="1935.5" _orig_x="72.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="69.56921470342529" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(205,81,52)" rx="2" ry="2" _orig_x="85.9" _orig_width="0.2"/>
<text x="72.56921470342529" y="1871.5" _orig_x="88.86"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (40 samples, 0.03%)</title><rect x="1129.37343358396" y="1733" width="0.985797827903091" height="15.0" fill="rgb(227,212,44)" rx="2" ry="2" _orig_x="823.2" _orig_width="0.4"/>
<text x="1132.37343358396" y="1743.5" _orig_x="826.23"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="437" width="0.31240601503759396" height="15.0" fill="rgb(236,10,22)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="447.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (26 samples, 0.02%)</title><rect x="597.2890559732663" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(231,1,45)" rx="2" ry="2" _orig_x="607.3" _orig_width="0.2"/>
<text x="600.2890559732663" y="1743.5" _orig_x="610.27"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (142 samples, 0.12%)</title><rect x="292.0" y="2053" width="1.4" height="15.0" fill="rgb(208,48,20)" rx="2" ry="2"/>
<text x="295.04" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (15 samples, 0.01%)</title><rect x="806.2781954887218" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(250,94,42)" rx="2" ry="2" _orig_x="692.1" _orig_width="0.2"/>
<text x="809.2781954887218" y="1791.5" _orig_x="695.14"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="677" width="0.31240601503759396" height="15.0" fill="rgb(226,83,23)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="687.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1477" width="0.31240601503759396" height="15.0" fill="rgb(237,125,3)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1487.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (27 samples, 0.02%)</title><rect x="1181.1278195488721" y="1941" width="0.4928989139515455" height="15.0" fill="rgb(225,97,49)" rx="2" ry="2" _orig_x="844.2" _orig_width="0.2"/>
<text x="1184.1278195488721" y="1951.5" _orig_x="847.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="1163.7304452466908" y="1861" width="0.2366626554352186" height="15.0" fill="rgb(208,72,54)" rx="2" ry="2" _orig_x="848.6" _orig_width="0.1"/>
<text x="1166.7304452466908" y="1871.5" _orig_x="851.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="11.2" y="1973" width="0.2" height="15.0" fill="rgb(240,220,17)" rx="2" ry="2"/>
<text x="14.20" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="30.41432748538017" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(209,3,38)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="2031.5" _orig_x="51.30"/>
</g>
<g class="hide">
<title>v8::internal::Code::OffHeapInstructionStart (14 samples, 0.01%)</title><rect x="198.280492898914" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(239,137,13)" rx="2" ry="2" _orig_x="209.5" _orig_width="0.1"/>
<text x="201.280492898914" y="1615.5" _orig_x="212.50"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (102 samples, 0.09%)</title><rect x="292.18462823725974" y="1781" width="2.4644945697577274" height="15.0" fill="rgb(214,91,39)" rx="2" ry="2" _orig_x="483.5" _orig_width="1.0"/>
<text x="295.18462823725974" y="1791.5" _orig_x="486.48"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (35 samples, 0.03%)</title><rect x="1163.876357560568" y="1925" width="0.7393483709273182" height="15.0" fill="rgb(236,158,15)" rx="2" ry="2" _orig_x="837.2" _orig_width="0.3"/>
<text x="1166.876357560568" y="1935.5" _orig_x="840.19"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::max_size (15 samples, 0.01%)</title><rect x="474.80367585630745" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(253,75,21)" rx="2" ry="2" _orig_x="557.6" _orig_width="0.1"/>
<text x="477.80367585630745" y="1727.5" _orig_x="560.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="254.93011695906435" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(247,109,26)" rx="2" ry="2" _orig_x="263.9" _orig_width="0.1"/>
<text x="257.9301169590643" y="1903.5" _orig_x="266.86"/>
</g>
<g class="hide">
<title>[chrome] (130 samples, 0.11%)</title><rect x="91.95831244778618" y="1781" width="1.3537593984962406" height="15.0" fill="rgb(240,41,41)" rx="2" ry="2" _orig_x="107.4" _orig_width="1.3"/>
<text x="94.95831244778618" y="1791.5" _orig_x="110.44"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (30 samples, 0.03%)</title><rect x="517.9323308270677" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" _orig_x="575.1" _orig_width="0.3"/>
<text x="520.9323308270677" y="1775.5" _orig_x="578.14"/>
</g>
<g class="hide">
<title>[chrome] (40 samples, 0.03%)</title><rect x="11.5" y="1861" width="0.4" height="15.0" fill="rgb(244,33,17)" rx="2" ry="2"/>
<text x="14.50" y="1871.5"/>
</g>
<g class="hide">
<title>__poll (13 samples, 0.01%)</title><rect x="1188.8" y="2037" width="0.1" height="15.0" fill="rgb(208,209,9)" rx="2" ry="2"/>
<text x="1191.79" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="346.777485380117" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(208,192,47)" rx="2" ry="2" _orig_x="352.1" _orig_width="0.2"/>
<text x="349.777485380117" y="1855.5" _orig_x="355.12"/>
</g>
<g class="hide">
<title>[perf-4309.map] (19 samples, 0.02%)</title><rect x="10.1" y="1877" width="0.1" height="15.0" fill="rgb(227,60,53)" rx="2" ry="2"/>
<text x="13.06" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1573" width="0.20827067669172933" height="15.0" fill="rgb(214,226,32)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1583.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (12 samples, 0.01%)</title><rect x="370.80200501253125" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(209,124,17)" rx="2" ry="2" _orig_x="515.4" _orig_width="0.1"/>
<text x="373.80200501253125" y="1807.5" _orig_x="518.42"/>
</g>
<g class="hide">
<title>[code] (199 samples, 0.17%)</title><rect x="142.98462823725987" y="1941" width="2.082706766917293" height="15.0" fill="rgb(220,155,45)" rx="2" ry="2" _orig_x="156.4" _orig_width="2.0"/>
<text x="145.98462823725987" y="1951.5" _orig_x="159.42"/>
</g>
<g class="hide">
<title>base::WaitableEvent::TimedWait (161 samples, 0.14%)</title><rect x="171.30944026733505" y="1813" width="1.6661654135338346" height="15.0" fill="rgb(233,23,29)" rx="2" ry="2" _orig_x="183.6" _orig_width="1.6"/>
<text x="174.30944026733505" y="1823.5" _orig_x="186.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="42.07748538011701" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(226,29,12)" rx="2" ry="2" _orig_x="59.5" _orig_width="0.1"/>
<text x="45.07748538011701" y="1839.5" _orig_x="62.51"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (27 samples, 0.02%)</title><rect x="153.68003341687555" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(247,227,29)" rx="2" ry="2" _orig_x="427.3" _orig_width="0.3"/>
<text x="156.68003341687555" y="1727.5" _orig_x="430.30"/>
</g>
<g class="hide">
<title>[[vdso]] (49 samples, 0.04%)</title><rect x="29.268838763575662" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(240,127,40)" rx="2" ry="2" _orig_x="47.2" _orig_width="0.4"/>
<text x="32.26883876357566" y="2047.5" _orig_x="50.15"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1269" width="0.31240601503759396" height="15.0" fill="rgb(239,185,1)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1279.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="933" width="2.2909774436090227" height="15.0" fill="rgb(238,228,13)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="943.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (326 samples, 0.27%)</title><rect x="310.2259816207185" y="1957" width="3.3323308270676693" height="15.0" fill="rgb(247,168,16)" rx="2" ry="2" _orig_x="317.0" _orig_width="3.2"/>
<text x="313.2259816207185" y="1967.5" _orig_x="320.00"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (15 samples, 0.01%)</title><rect x="368.58395989974935" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(232,160,45)" rx="2" ry="2" _orig_x="514.5" _orig_width="0.2"/>
<text x="371.58395989974935" y="1807.5" _orig_x="517.51"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (602 samples, 0.51%)</title><rect x="1030.7936507936508" y="1861" width="14.540517961570593" height="15.0" fill="rgb(240,219,13)" rx="2" ry="2" _orig_x="783.2" _orig_width="5.9"/>
<text x="1033.7936507936508" y="1871.5" _orig_x="786.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,822 samples, 1.53%)</title><rect x="1143.6210944026734" y="1781" width="18.848496240601506" height="15.0" fill="rgb(219,51,21)" rx="2" ry="2" _orig_x="1117.3" _orig_width="18.1"/>
<text x="1146.6210944026734" y="1791.5" _orig_x="1120.33">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::allocator (17 samples, 0.01%)</title><rect x="1097.3350041771096" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(210,153,6)" rx="2" ry="2" _orig_x="810.2" _orig_width="0.2"/>
<text x="1100.3350041771096" y="1807.5" _orig_x="813.21"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(226,57,41)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1823.5" _orig_x="118.02"/>
</g>
<g class="hide">
<title>[perf-58119.map] (106 samples, 0.09%)</title><rect x="119.8665831244779" y="1669" width="1.1454887218045113" height="15.0" fill="rgb(213,76,42)" rx="2" ry="2" _orig_x="134.2" _orig_width="1.1"/>
<text x="122.8665831244779" y="1679.5" _orig_x="137.21"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="725" width="2.2909774436090227" height="15.0" fill="rgb(244,157,24)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="735.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr (170 samples, 0.14%)</title><rect x="67.59064327485385" y="1909" width="1.7703007518796992" height="15.0" fill="rgb(220,217,52)" rx="2" ry="2" _orig_x="84.0" _orig_width="1.7"/>
<text x="70.59064327485385" y="1919.5" _orig_x="87.02"/>
</g>
<g class="hide">
<title>[code] (1,241 samples, 1.04%)</title><rect x="109.14064327485386" y="1941" width="12.912781954887219" height="15.0" fill="rgb(240,139,18)" rx="2" ry="2" _orig_x="123.9" _orig_width="12.4"/>
<text x="112.14064327485386" y="1951.5" _orig_x="126.94"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20 samples, 0.02%)</title><rect x="1160.9189640768589" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(253,110,39)" rx="2" ry="2" _orig_x="836.0" _orig_width="0.2"/>
<text x="1163.9189640768589" y="1903.5" _orig_x="839.04"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (878 samples, 0.74%)</title><rect x="657.6691729323306" y="1829" width="21.441102756892228" height="15.0" fill="rgb(252,73,5)" rx="2" ry="2" _orig_x="631.8" _orig_width="8.7"/>
<text x="660.6691729323306" y="1839.5" _orig_x="634.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="355.8372598162072" y="1701" width="0.31240601503759396" height="15.0" fill="rgb(236,103,50)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1711.5" _orig_x="363.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (359 samples, 0.30%)</title><rect x="23.020718462823783" y="1973" width="3.748872180451128" height="15.0" fill="rgb(207,55,3)" rx="2" ry="2" _orig_x="41.2" _orig_width="3.6"/>
<text x="26.020718462823783" y="1983.5" _orig_x="44.24"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (16 samples, 0.01%)</title><rect x="821.5580618212196" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(254,158,48)" rx="2" ry="2" _orig_x="698.3" _orig_width="0.1"/>
<text x="824.5580618212196" y="1775.5" _orig_x="701.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="933.3718462823726" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(234,119,8)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="1903.5" _orig_x="918.45"/>
</g>
<g class="hide">
<title>scheduling_metrics::TotalDurationMetricReporter::RecordAdditionalDuration (37 samples, 0.03%)</title><rect x="212.130492898914" y="1701" width="0.41654135338345866" height="15.0" fill="rgb(213,28,8)" rx="2" ry="2" _orig_x="222.8" _orig_width="0.4"/>
<text x="215.130492898914" y="1711.5" _orig_x="225.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="15.6" y="1989" width="0.1" height="15.0" fill="rgb(220,4,24)" rx="2" ry="2"/>
<text x="18.59" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (76 samples, 0.06%)</title><rect x="97.48955722639933" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(234,140,11)" rx="2" ry="2" _orig_x="404.5" _orig_width="0.7"/>
<text x="100.48955722639933" y="1759.5" _orig_x="407.46"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (13 samples, 0.01%)</title><rect x="88.7" y="2053" width="0.1" height="15.0" fill="rgb(250,61,50)" rx="2" ry="2"/>
<text x="91.72" y="2063.5"/>
</g>
<g class="hide">
<title>pool-org.gnome. (31 samples, 0.03%)</title><rect x="912.6" y="2069" width="0.3" height="15.0" fill="rgb(205,172,27)" rx="2" ry="2"/>
<text x="915.58" y="2079.5"/>
</g>
<g class="hide">
<title>[perf-58157.map] (60 samples, 0.05%)</title><rect x="124.0319966583125" y="1429" width="0.5206766917293233" height="15.0" fill="rgb(241,5,37)" rx="2" ry="2" _orig_x="138.2" _orig_width="0.5"/>
<text x="127.0319966583125" y="1439.5" _orig_x="141.15"/>
</g>
<g class="hide">
<title>blink::SecurityContext::IsSandboxed (18 samples, 0.02%)</title><rect x="177.0368838763576" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(226,141,24)" rx="2" ry="2" _orig_x="189.1" _orig_width="0.2"/>
<text x="180.0368838763576" y="1711.5" _orig_x="192.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="343.65342522974106" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(207,119,27)" rx="2" ry="2" _orig_x="349.1" _orig_width="0.8"/>
<text x="346.65342522974106" y="1999.5" _orig_x="352.09"/>
</g>
<g>
<title>operator new (25 samples, 0.02%)</title><rect x="895.7393483709272" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(223,19,17)" rx="2" ry="2" _orig_x="728.4" _orig_width="0.2"/>
<text x="898.7393483709272" y="1871.5" _orig_x="731.36"/>
</g>
<g class="hide">
<title>Chrome_IOThread (145 samples, 0.12%)</title><rect x="13.6" y="2069" width="1.5" height="15.0" fill="rgb(214,151,42)" rx="2" ry="2"/>
<text x="16.62" y="2079.5"/>
</g>
<g class="hide">
<title>__libc_read (23 samples, 0.02%)</title><rect x="11.565831244778668" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(217,85,13)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="2047.5" _orig_x="33.18"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="544.5488721804511" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(245,23,49)" rx="2" ry="2" _orig_x="585.9" _orig_width="0.1"/>
<text x="547.5488721804511" y="1727.5" _orig_x="588.88"/>
</g>
<g>
<title>DiskManager::AllocatePage (11 samples, 0.01%)</title><rect x="690.4469507101086" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(221,128,8)" rx="2" ry="2" _orig_x="645.1" _orig_width="0.1"/>
<text x="693.4469507101086" y="1871.5" _orig_x="648.09"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (11 samples, 0.01%)</title><rect x="628.3416875522137" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(244,110,39)" rx="2" ry="2" _orig_x="619.9" _orig_width="0.1"/>
<text x="631.3416875522137" y="1807.5" _orig_x="622.91"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="581" width="0.20827067669172933" height="15.0" fill="rgb(206,137,22)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="591.5" _orig_x="328.48"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,532 samples, 1.29%)</title><rect x="1051.002506265664" y="1861" width="37.460317460317455" height="15.0" fill="rgb(217,127,31)" rx="2" ry="2" _orig_x="791.4" _orig_width="15.2"/>
<text x="1054.002506265664" y="1871.5" _orig_x="794.41">std..</text>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (42 samples, 0.04%)</title><rect x="1106.453634085213" y="1813" width="0.985797827903091" height="15.0" fill="rgb(235,2,46)" rx="2" ry="2" _orig_x="813.9" _orig_width="0.4"/>
<text x="1109.453634085213" y="1823.5" _orig_x="816.86"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::max_size (27 samples, 0.02%)</title><rect x="1006.6416040100249" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(245,87,16)" rx="2" ry="2" _orig_x="773.4" _orig_width="0.3"/>
<text x="1009.6416040100249" y="1759.5" _orig_x="776.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (359 samples, 0.30%)</title><rect x="74.56975772765243" y="1781" width="8.87218045112782" height="15.0" fill="rgb(235,126,4)" rx="2" ry="2" _orig_x="395.2" _orig_width="3.6"/>
<text x="77.56975772765243" y="1791.5" _orig_x="398.22"/>
</g>
<g class="hide">
<title>[unknown] (15 samples, 0.01%)</title><rect x="910.1496658312449" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(220,218,6)" rx="2" ry="2" _orig_x="893.1" _orig_width="0.2"/>
<text x="913.1496658312449" y="1999.5" _orig_x="896.14"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1029" width="0.20827067669172933" height="15.0" fill="rgb(229,130,24)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1039.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (16 samples, 0.01%)</title><rect x="774.7326649958228" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(225,36,28)" rx="2" ry="2" _orig_x="679.3" _orig_width="0.1"/>
<text x="777.7326649958228" y="1823.5" _orig_x="682.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="276.1737259816208" y="1877" width="0.10413533834586466" height="15.0" fill="rgb(242,222,28)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1887.5" _orig_x="287.29"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (22 samples, 0.02%)</title><rect x="754.2773600668338" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(222,222,10)" rx="2" ry="2" _orig_x="671.0" _orig_width="0.2"/>
<text x="757.2773600668338" y="1839.5" _orig_x="674.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="11.774101921470397" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(245,72,10)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="2031.5" _orig_x="33.41"/>
</g>
<g class="hide">
<title>blink::ScheduledAction::Execute (212 samples, 0.18%)</title><rect x="163.18688387635763" y="1733" width="2.186842105263158" height="15.0" fill="rgb(207,197,5)" rx="2" ry="2" _orig_x="175.8" _orig_width="2.1"/>
<text x="166.18688387635763" y="1743.5" _orig_x="178.78"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="501" width="2.2909774436090227" height="15.0" fill="rgb(229,127,35)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="511.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>WTF::AtomicString::AtomicString (11 samples, 0.01%)</title><rect x="196.1977861319967" y="1445" width="0.10413533834586466" height="15.0" fill="rgb(223,34,43)" rx="2" ry="2" _orig_x="207.5" _orig_width="0.1"/>
<text x="199.1977861319967" y="1455.5" _orig_x="210.48"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="85" width="0.20827067669172933" height="15.0" fill="rgb(247,202,16)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="95.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>InotifyBackend::start (1,075 samples, 0.90%)</title><rect x="145.69214703425234" y="2021" width="11.038345864661654" height="15.0" fill="rgb(228,112,7)" rx="2" ry="2" _orig_x="159.0" _orig_width="10.6"/>
<text x="148.69214703425234" y="2031.5" _orig_x="161.96"/>
</g>
<g class="hide">
<title>pa_sink_input_peek (12 samples, 0.01%)</title><rect x="91.9" y="2053" width="0.1" height="15.0" fill="rgb(230,61,0)" rx="2" ry="2"/>
<text x="94.88" y="2063.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (17 samples, 0.01%)</title><rect x="775.7184628237261" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(245,224,8)" rx="2" ry="2" _orig_x="679.7" _orig_width="0.2"/>
<text x="778.7184628237261" y="1855.5" _orig_x="682.69"/>
</g>
<g class="hide">
<title>[perf-3698.map] (27 samples, 0.02%)</title><rect x="287.4203425229742" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(210,105,45)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1919.5" _orig_x="298.05"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (11 samples, 0.01%)</title><rect x="651.5079365079364" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(250,209,27)" rx="2" ry="2" _orig_x="629.3" _orig_width="0.1"/>
<text x="654.5079365079364" y="1855.5" _orig_x="632.32"/>
</g>
<g class="parent">
<title>main (50,247 samples, 42.25%)</title><rect x="10" y="2069" width="1180" height="15.0" fill="rgb(221,115,1)" rx="2" ry="2" _orig_x="361.1" _orig_width="498.6"/>
<text x="13" y="2079.5" _orig_x="364.08">main </text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::max_size (13 samples, 0.01%)</title><rect x="29.46950710108599" y="1653" width="0.24644945697577275" height="15.0" fill="rgb(254,36,47)" rx="2" ry="2" _orig_x="376.9" _orig_width="0.1"/>
<text x="32.469507101085995" y="1663.5" _orig_x="379.89"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (15 samples, 0.01%)</title><rect x="1069.486215538847" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(242,92,26)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="1072.486215538847" y="1807.5" _orig_x="801.89"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (22 samples, 0.02%)</title><rect x="701.7836257309942" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(207,136,17)" rx="2" ry="2" _orig_x="649.7" _orig_width="0.2"/>
<text x="704.7836257309942" y="1759.5" _orig_x="652.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (26 samples, 0.02%)</title><rect x="150.22974101921463" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(207,96,24)" rx="2" ry="2" _orig_x="425.9" _orig_width="0.2"/>
<text x="153.22974101921463" y="1791.5" _orig_x="428.85"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1717" width="2.2909774436090227" height="15.0" fill="rgb(238,168,8)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1727.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>v8::Object::Get (15 samples, 0.01%)</title><rect x="164.43650793650798" y="1429" width="0.10413533834586466" height="15.0" fill="rgb(221,96,15)" rx="2" ry="2" _orig_x="177.0" _orig_width="0.1"/>
<text x="167.43650793650798" y="1439.5" _orig_x="179.99"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (18 samples, 0.02%)</title><rect x="287.4203425229742" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(229,64,45)" rx="2" ry="2" _orig_x="295.1" _orig_width="0.2"/>
<text x="290.4203425229742" y="1807.5" _orig_x="298.07"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(215,5,36)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1919.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="130.8007936507937" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(207,115,23)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1535.5" _orig_x="147.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (97 samples, 0.08%)</title><rect x="338.0242272347536" y="1749" width="2.4644945697577274" height="15.0" fill="rgb(226,164,2)" rx="2" ry="2" _orig_x="502.1" _orig_width="1.0"/>
<text x="341.0242272347536" y="1759.5" _orig_x="505.14"/>
</g>
<g class="hide">
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void  (14 samples, 0.01%)</title><rect x="174.53763575605686" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(248,90,51)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.1"/>
<text x="177.53763575605686" y="1743.5" _orig_x="189.68"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (21 samples, 0.02%)</title><rect x="1160.9189640768589" y="1909" width="0.4928989139515455" height="15.0" fill="rgb(208,188,54)" rx="2" ry="2" _orig_x="836.0" _orig_width="0.2"/>
<text x="1163.9189640768589" y="1919.5" _orig_x="839.03"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="149" width="0.31240601503759396" height="15.0" fill="rgb(222,227,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="159.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>v8::Context::Global (40 samples, 0.03%)</title><rect x="177.9741019214704" y="1621" width="0.41654135338345866" height="15.0" fill="rgb(237,51,17)" rx="2" ry="2" _orig_x="190.0" _orig_width="0.4"/>
<text x="180.9741019214704" y="1631.5" _orig_x="193.01"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (18 samples, 0.02%)</title><rect x="148.7510442773601" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(239,129,23)" rx="2" ry="2" _orig_x="425.3" _orig_width="0.2"/>
<text x="151.7510442773601" y="1791.5" _orig_x="428.31"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (39 samples, 0.03%)</title><rect x="74.7" y="2053" width="0.4" height="15.0" fill="rgb(237,94,29)" rx="2" ry="2"/>
<text x="77.75" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="339.80041771094403" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(246,26,12)" rx="2" ry="2" _orig_x="345.4" _orig_width="0.2"/>
<text x="342.80041771094403" y="1999.5" _orig_x="348.44"/>
</g>
<g class="hide">
<title>[[vdso]] (25 samples, 0.02%)</title><rect x="15.9" y="2037" width="0.3" height="15.0" fill="rgb(248,192,16)" rx="2" ry="2"/>
<text x="18.92" y="2047.5"/>
</g>
<g>
<title>malloc (13 samples, 0.01%)</title><rect x="464.45279866332487" y="1669" width="0.24644945697577275" height="15.0" fill="rgb(241,219,49)" rx="2" ry="2" _orig_x="553.4" _orig_width="0.1"/>
<text x="467.45279866332487" y="1679.5" _orig_x="556.41"/>
</g>
<g class="hide">
<title>blink::ThreadState::IncrementalMarkingStep (51 samples, 0.04%)</title><rect x="174.85004177109445" y="1733" width="0.5206766917293233" height="15.0" fill="rgb(242,60,4)" rx="2" ry="2" _orig_x="187.0" _orig_width="0.5"/>
<text x="177.85004177109445" y="1743.5" _orig_x="189.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="882.2413951545531" y="1781" width="1.5620300751879699" height="15.0" fill="rgb(213,163,9)" rx="2" ry="2" _orig_x="866.3" _orig_width="1.5"/>
<text x="885.2413951545531" y="1791.5" _orig_x="869.31"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="10.316207184628293" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(253,175,11)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1887.5" _orig_x="31.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="355.5248538011696" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(206,85,11)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="1887.5" _orig_x="363.54"/>
</g>
<g>
<title>malloc (12 samples, 0.01%)</title><rect x="563.5254803675856" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(228,62,31)" rx="2" ry="2" _orig_x="593.6" _orig_width="0.1"/>
<text x="566.5254803675856" y="1871.5" _orig_x="596.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="1989" width="0.1" height="15.0" fill="rgb(211,191,2)" rx="2" ry="2"/>
<text x="26.70" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="709" width="2.2909774436090227" height="15.0" fill="rgb(205,197,16)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="719.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="11.253425229741072" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(230,71,48)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1855.5" _orig_x="32.94"/>
</g>
<g class="hide">
<title>clutter_actor_box_get_width (11 samples, 0.01%)</title><rect x="297.1049289891395" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(228,93,6)" rx="2" ry="2" _orig_x="304.4" _orig_width="0.2"/>
<text x="300.1049289891395" y="2015.5" _orig_x="307.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="19.6" y="1733" width="0.2" height="15.0" fill="rgb(225,180,26)" rx="2" ry="2"/>
<text x="22.64" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="188.4917710944027" y="1397" width="0.10413533834586466" height="15.0" fill="rgb(221,80,13)" rx="2" ry="2" _orig_x="200.1" _orig_width="0.1"/>
<text x="191.4917710944027" y="1407.5" _orig_x="203.09"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="123.61545530492906" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(218,13,42)" rx="2" ry="2" _orig_x="137.8" _orig_width="0.2"/>
<text x="126.61545530492906" y="1439.5" _orig_x="140.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="344.79891395154556" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(237,42,36)" rx="2" ry="2" _orig_x="350.2" _orig_width="0.3"/>
<text x="347.79891395154556" y="1967.5" _orig_x="353.16"/>
</g>
<g>
<title>BPlusTreePage::GetSize (21 samples, 0.02%)</title><rect x="689.7076023391812" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(247,229,47)" rx="2" ry="2" _orig_x="644.8" _orig_width="0.2"/>
<text x="692.7076023391812" y="1903.5" _orig_x="647.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="228.79214703425237" y="1957" width="0.41654135338345866" height="15.0" fill="rgb(219,116,4)" rx="2" ry="2" _orig_x="238.8" _orig_width="0.4"/>
<text x="231.79214703425237" y="1967.5" _orig_x="241.80"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (12 samples, 0.01%)</title><rect x="291.1988304093568" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(252,216,19)" rx="2" ry="2" _orig_x="483.1" _orig_width="0.1"/>
<text x="294.1988304093568" y="1743.5" _orig_x="486.13"/>
</g>
<g>
<title>Field::CompareLessThan (37 samples, 0.03%)</title><rect x="90.83542188805349" y="1845" width="0.985797827903091" height="15.0" fill="rgb(247,89,0)" rx="2" ry="2" _orig_x="401.8" _orig_width="0.4"/>
<text x="93.83542188805349" y="1855.5" _orig_x="404.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (330 samples, 0.28%)</title><rect x="158.08425229741025" y="1925" width="3.4364661654135333" height="15.0" fill="rgb(249,134,48)" rx="2" ry="2" _orig_x="170.9" _orig_width="3.3"/>
<text x="161.08425229741025" y="1935.5" _orig_x="173.92"/>
</g>
<g class="hide">
<title>ThreadPoolServi (21 samples, 0.02%)</title><rect x="58.0" y="2069" width="0.2" height="15.0" fill="rgb(242,46,26)" rx="2" ry="2"/>
<text x="60.97" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (1,131 samples, 0.95%)</title><rect x="1057.1637426900584" y="1829" width="27.60233918128655" height="15.0" fill="rgb(248,6,17)" rx="2" ry="2" _orig_x="793.9" _orig_width="11.2"/>
<text x="1060.1637426900584" y="1839.5" _orig_x="796.86">st..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="326.36695906432755" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(231,154,30)" rx="2" ry="2" _orig_x="332.5" _orig_width="0.3"/>
<text x="329.36695906432755" y="1999.5" _orig_x="335.52"/>
</g>
<g class="hide">
<title>[perf-32884.map] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(247,104,25)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1695.5" _orig_x="118.02"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (14 samples, 0.01%)</title><rect x="215.29239766081875" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(226,20,29)" rx="2" ry="2" _orig_x="452.3" _orig_width="0.1"/>
<text x="218.29239766081875" y="1743.5" _orig_x="455.26"/>
</g>
<g class="hide">
<title>__libc_read (28 samples, 0.02%)</title><rect x="131.21733500417716" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(248,146,14)" rx="2" ry="2" _orig_x="145.1" _orig_width="0.3"/>
<text x="134.21733500417716" y="1983.5" _orig_x="148.11"/>
</g>
<g class="hide">
<title>[chrome] (153 samples, 0.13%)</title><rect x="91.85417710944031" y="1829" width="1.6661654135338346" height="15.0" fill="rgb(254,48,25)" rx="2" ry="2" _orig_x="107.3" _orig_width="1.6"/>
<text x="94.85417710944031" y="1839.5" _orig_x="110.33"/>
</g>
<g class="hide">
<title>kworker/11:1-ev (54 samples, 0.05%)</title><rect x="349.9" y="2069" width="0.6" height="15.0" fill="rgb(235,155,2)" rx="2" ry="2"/>
<text x="352.92" y="2079.5"/>
</g>
<g class="hide">
<title>[perf-58119.map] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1621" width="0.10413533834586466" height="15.0" fill="rgb(233,174,12)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1631.5" _orig_x="130.16"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="645" width="0.31240601503759396" height="15.0" fill="rgb(239,152,47)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="655.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[chrome] (16 samples, 0.01%)</title><rect x="92.47898913951552" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(254,42,43)" rx="2" ry="2" _orig_x="107.9" _orig_width="0.2"/>
<text x="95.47898913951552" y="1679.5" _orig_x="110.93"/>
</g>
<g class="hide">
<title>[unknown] (25 samples, 0.02%)</title><rect x="319.077485380117" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(215,59,27)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1855.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="1493" width="0.31240601503759396" height="15.0" fill="rgb(249,17,14)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="1503.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="693" width="0.31240601503759396" height="15.0" fill="rgb(210,193,19)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="703.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (17 samples, 0.01%)</title><rect x="909.0476190476189" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(245,154,0)" rx="2" ry="2" _orig_x="733.8" _orig_width="0.2"/>
<text x="912.0476190476189" y="1807.5" _orig_x="736.85"/>
</g>
<g class="hide">
<title>blink::BaseArena::ConcurrentSweepOnePage (18 samples, 0.02%)</title><rect x="32.70530492898919" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(243,130,31)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1871.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.10%)</title><rect x="350.1098162071847" y="1989" width="1.2496240601503759" height="15.0" fill="rgb(249,56,14)" rx="2" ry="2" _orig_x="355.3" _orig_width="1.2"/>
<text x="353.1098162071847" y="1999.5" _orig_x="358.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="84.77297410192152" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(225,168,13)" rx="2" ry="2" _orig_x="100.5" _orig_width="0.3"/>
<text x="87.77297410192152" y="1967.5" _orig_x="103.48"/>
</g>
<g class="hide">
<title>g_slice_free1 (16 samples, 0.01%)</title><rect x="306.4771094402674" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(223,197,41)" rx="2" ry="2" _orig_x="313.4" _orig_width="0.1"/>
<text x="309.4771094402674" y="2047.5" _orig_x="316.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="52.90756056808694" y="1749" width="0.10413533834586466" height="15.0" fill="rgb(237,192,50)" rx="2" ry="2" _orig_x="69.9" _orig_width="0.1"/>
<text x="55.90756056808694" y="1759.5" _orig_x="72.93"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::~unordered_map (40 samples, 0.03%)</title><rect x="1163.876357560568" y="1941" width="0.985797827903091" height="15.0" fill="rgb(210,100,43)" rx="2" ry="2" _orig_x="837.2" _orig_width="0.4"/>
<text x="1166.876357560568" y="1951.5" _orig_x="840.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.06%)</title><rect x="141.63086883876363" y="1893" width="0.8330827067669173" height="15.0" fill="rgb(213,170,50)" rx="2" ry="2" _orig_x="155.1" _orig_width="0.8"/>
<text x="144.63086883876363" y="1903.5" _orig_x="158.13"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (75 samples, 0.06%)</title><rect x="200.25898078529653" y="1765" width="1.971595655806182" height="15.0" fill="rgb(239,166,31)" rx="2" ry="2" _orig_x="446.2" _orig_width="0.8"/>
<text x="203.25898078529653" y="1775.5" _orig_x="449.24"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (17 samples, 0.01%)</title><rect x="679.8496240601502" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(219,207,3)" rx="2" ry="2" _orig_x="640.8" _orig_width="0.2"/>
<text x="682.8496240601502" y="1839.5" _orig_x="643.83"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (55 samples, 0.05%)</title><rect x="644.8538011695907" y="1749" width="1.2322472848788637" height="15.0" fill="rgb(251,89,8)" rx="2" ry="2" _orig_x="626.6" _orig_width="0.5"/>
<text x="647.8538011695907" y="1759.5" _orig_x="629.58"/>
</g>
<g class="hide">
<title>[perf-58145.map] (211 samples, 0.18%)</title><rect x="126.6353801169591" y="1717" width="2.082706766917293" height="15.0" fill="rgb(216,149,20)" rx="2" ry="2" _orig_x="140.7" _orig_width="2.0"/>
<text x="129.63538011695908" y="1727.5" _orig_x="143.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.07%)</title><rect x="929.4147034252298" y="1717" width="0.937218045112782" height="15.0" fill="rgb(213,111,7)" rx="2" ry="2" _orig_x="911.6" _orig_width="0.9"/>
<text x="932.4147034252298" y="1727.5" _orig_x="914.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (604 samples, 0.51%)</title><rect x="102.05944026733505" y="1957" width="6.2481203007518795" height="15.0" fill="rgb(211,29,3)" rx="2" ry="2" _orig_x="117.1" _orig_width="6.0"/>
<text x="105.05944026733505" y="1967.5" _orig_x="120.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="22.4" y="1973" width="0.2" height="15.0" fill="rgb(245,141,18)" rx="2" ry="2"/>
<text x="25.42" y="1983.5"/>
</g>
<g class="hide">
<title>base::internal::WorkerThread::RunPooledWorker (757 samples, 0.64%)</title><rect x="32.70530492898919" y="2021" width="7.810150375939849" height="15.0" fill="rgb(213,216,48)" rx="2" ry="2" _orig_x="50.5" _orig_width="7.5"/>
<text x="35.70530492898919" y="2031.5" _orig_x="53.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="13.2" y="1701" width="0.1" height="15.0" fill="rgb(221,112,13)" rx="2" ry="2"/>
<text x="16.16" y="1711.5"/>
</g>
<g class="hide">
<title>base::Histogram::AddCount (28 samples, 0.02%)</title><rect x="212.130492898914" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(241,11,4)" rx="2" ry="2" _orig_x="222.8" _orig_width="0.3"/>
<text x="215.130492898914" y="1695.5" _orig_x="225.78"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (18 samples, 0.02%)</title><rect x="193.85129490392654" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(205,32,31)" rx="2" ry="2" _orig_x="443.6" _orig_width="0.2"/>
<text x="196.85129490392654" y="1759.5" _orig_x="446.64"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (15 samples, 0.01%)</title><rect x="663.5839598997495" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(251,89,41)" rx="2" ry="2" _orig_x="634.2" _orig_width="0.2"/>
<text x="666.5839598997495" y="1807.5" _orig_x="637.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (643 samples, 0.54%)</title><rect x="246.18274853801174" y="2021" width="6.6646616541353385" height="15.0" fill="rgb(238,36,7)" rx="2" ry="2" _orig_x="255.5" _orig_width="6.4"/>
<text x="249.18274853801174" y="2031.5" _orig_x="258.51"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::OnStackTracedNodeSpace::Acquire (14 samples, 0.01%)</title><rect x="189.22071846282378" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(227,177,3)" rx="2" ry="2" _orig_x="200.8" _orig_width="0.2"/>
<text x="192.22071846282378" y="1407.5" _orig_x="203.85"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (16 samples, 0.01%)</title><rect x="460.26315789473693" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(223,101,6)" rx="2" ry="2" _orig_x="551.7" _orig_width="0.2"/>
<text x="463.26315789473693" y="1743.5" _orig_x="554.75"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (16 samples, 0.01%)</title><rect x="836.0985797827904" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(229,78,4)" rx="2" ry="2" _orig_x="704.2" _orig_width="0.2"/>
<text x="839.0985797827904" y="1791.5" _orig_x="707.20"/>
</g>
<g class="hide">
<title>[libpulsecommon-13.99.so] (14 samples, 0.01%)</title><rect x="59.36395154553054" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(249,126,24)" rx="2" ry="2" _orig_x="76.1" _orig_width="0.1"/>
<text x="62.36395154553054" y="2047.5" _orig_x="79.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="23.7" y="1973" width="0.1" height="15.0" fill="rgb(233,92,10)" rx="2" ry="2"/>
<text x="26.70" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-2510.map] (11 samples, 0.01%)</title><rect x="287.2120718462824" y="1781" width="0.10413533834586466" height="15.0" fill="rgb(248,167,15)" rx="2" ry="2" _orig_x="294.9" _orig_width="0.1"/>
<text x="290.2120718462824" y="1791.5" _orig_x="297.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,296 samples, 1.09%)</title><rect x="1168.7" y="1781" width="12.9" height="15.0" fill="rgb(254,143,15)" rx="2" ry="2"/>
<text x="1171.72" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="50.82485380116965" y="101" width="0.20827067669172933" height="15.0" fill="rgb(215,28,44)" rx="2" ry="2" _orig_x="67.9" _orig_width="0.2"/>
<text x="53.82485380116965" y="111.5" _orig_x="70.86"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="439.5614035087718" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(231,2,36)" rx="2" ry="2" _orig_x="543.3" _orig_width="0.1"/>
<text x="442.5614035087718" y="1871.5" _orig_x="546.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="891.7177109440267" y="1653" width="0.20827067669172933" height="15.0" fill="rgb(239,152,2)" rx="2" ry="2" _orig_x="875.4" _orig_width="0.2"/>
<text x="894.7177109440267" y="1663.5" _orig_x="878.39"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (407 samples, 0.34%)</title><rect x="151.2155388471178" y="1797" width="9.85797827903091" height="15.0" fill="rgb(241,183,31)" rx="2" ry="2" _orig_x="426.3" _orig_width="4.0"/>
<text x="154.2155388471178" y="1807.5" _orig_x="429.31"/>
</g>
<g>
<title>operator new (20 samples, 0.02%)</title><rect x="1151.5538847117793" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(244,135,25)" rx="2" ry="2" _orig_x="832.2" _orig_width="0.2"/>
<text x="1154.5538847117793" y="1903.5" _orig_x="835.15"/>
</g>
<g class="hide">
<title>[code] (71 samples, 0.06%)</title><rect x="17.7" y="1477" width="0.7" height="15.0" fill="rgb(240,55,20)" rx="2" ry="2"/>
<text x="20.71" y="1487.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="853" width="0.31240601503759396" height="15.0" fill="rgb(252,192,47)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="863.5" _orig_x="99.72"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (12 samples, 0.01%)</title><rect x="533.2121971595654" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(210,128,6)" rx="2" ry="2" _orig_x="581.3" _orig_width="0.1"/>
<text x="536.2121971595654" y="1807.5" _orig_x="584.31"/>
</g>
<g class="hide">
<title>[[vdso]] (15 samples, 0.01%)</title><rect x="278.6729741019215" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(254,116,8)" rx="2" ry="2" _orig_x="286.7" _orig_width="0.2"/>
<text x="281.6729741019215" y="2047.5" _orig_x="289.73"/>
</g>
<g class="hide">
<title>expressvpnd (33 samples, 0.03%)</title><rect x="281.5" y="2069" width="0.3" height="15.0" fill="rgb(250,114,50)" rx="2" ry="2"/>
<text x="284.50" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (74 samples, 0.06%)</title><rect x="212.08855472013366" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(237,0,8)" rx="2" ry="2" _orig_x="451.0" _orig_width="0.7"/>
<text x="215.08855472013366" y="1759.5" _orig_x="453.98"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::destroy&lt;void*&gt; (14 samples, 0.01%)</title><rect x="923.095238095238" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(221,59,6)" rx="2" ry="2" _orig_x="739.5" _orig_width="0.1"/>
<text x="926.095238095238" y="1759.5" _orig_x="742.46"/>
</g>
<g class="hide">
<title>[chrome] (23 samples, 0.02%)</title><rect x="11.6" y="1765" width="0.2" height="15.0" fill="rgb(206,3,26)" rx="2" ry="2"/>
<text x="14.62" y="1775.5"/>
</g>
<g class="hide">
<title>blink::DOMWindow::Wrap (15 samples, 0.01%)</title><rect x="178.70304928989142" y="1669" width="0.20827067669172933" height="15.0" fill="rgb(253,80,8)" rx="2" ry="2" _orig_x="190.7" _orig_width="0.2"/>
<text x="181.70304928989142" y="1679.5" _orig_x="193.74"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (11 samples, 0.01%)</title><rect x="949.4653299916458" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(229,181,54)" rx="2" ry="2" _orig_x="750.2" _orig_width="0.1"/>
<text x="952.4653299916458" y="1887.5" _orig_x="753.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.05%)</title><rect x="914.5233500417711" y="1861" width="0.5206766917293233" height="15.0" fill="rgb(252,51,19)" rx="2" ry="2" _orig_x="897.3" _orig_width="0.5"/>
<text x="917.5233500417711" y="1871.5" _orig_x="900.30"/>
</g>
<g class="hide">
<title>JS_Watchdog (26 samples, 0.02%)</title><rect x="34.4" y="2069" width="0.3" height="15.0" fill="rgb(206,184,1)" rx="2" ry="2"/>
<text x="37.44" y="2079.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (49 samples, 0.04%)</title><rect x="131.7460317460317" y="1765" width="0.985797827903091" height="15.0" fill="rgb(211,170,16)" rx="2" ry="2" _orig_x="418.4" _orig_width="0.4"/>
<text x="134.7460317460317" y="1775.5" _orig_x="421.36"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (507 samples, 0.43%)</title><rect x="224.90392648287383" y="1813" width="12.322472848788637" height="15.0" fill="rgb(214,165,16)" rx="2" ry="2" _orig_x="456.2" _orig_width="5.0"/>
<text x="227.90392648287383" y="1823.5" _orig_x="459.18"/>
</g>
<g>
<title>[libminisql_shared.so] (12 samples, 0.01%)</title><rect x="469.6282372598162" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(244,156,44)" rx="2" ry="2" _orig_x="555.5" _orig_width="0.1"/>
<text x="472.6282372598162" y="1759.5" _orig_x="558.52"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1045" width="0.20827067669172933" height="15.0" fill="rgb(239,211,51)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1055.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="517" width="0.31240601503759396" height="15.0" fill="rgb(234,1,21)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="527.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.17%)</title><rect x="889.8432748538012" y="1717" width="2.082706766917293" height="15.0" fill="rgb(222,12,4)" rx="2" ry="2" _orig_x="873.6" _orig_width="2.0"/>
<text x="892.8432748538012" y="1727.5" _orig_x="876.57"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (11 samples, 0.01%)</title><rect x="1092.8989139515454" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(230,53,47)" rx="2" ry="2" _orig_x="808.4" _orig_width="0.2"/>
<text x="1095.8989139515454" y="1887.5" _orig_x="811.45"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (13 samples, 0.01%)</title><rect x="710.4093567251463" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(220,90,3)" rx="2" ry="2" _orig_x="653.2" _orig_width="0.2"/>
<text x="713.4093567251463" y="1775.5" _orig_x="656.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="13.8" y="1941" width="0.2" height="15.0" fill="rgb(235,85,51)" rx="2" ry="2"/>
<text x="16.80" y="1951.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (38 samples, 0.03%)</title><rect x="55.83959899749378" y="1749" width="0.985797827903091" height="15.0" fill="rgb(242,104,41)" rx="2" ry="2" _orig_x="387.6" _orig_width="0.4"/>
<text x="58.83959899749378" y="1759.5" _orig_x="390.64"/>
</g>
<g class="hide">
<title>[code] (344 samples, 0.29%)</title><rect x="16.6" y="1957" width="3.4" height="15.0" fill="rgb(234,85,41)" rx="2" ry="2"/>
<text x="19.60" y="1967.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (34 samples, 0.03%)</title><rect x="544.0559732664997" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(245,90,35)" rx="2" ry="2" _orig_x="585.7" _orig_width="0.3"/>
<text x="547.0559732664997" y="1743.5" _orig_x="588.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="108.72410192147039" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(246,48,49)" rx="2" ry="2" _orig_x="123.5" _orig_width="0.2"/>
<text x="111.72410192147039" y="1935.5" _orig_x="126.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (42 samples, 0.04%)</title><rect x="684.5321637426902" y="1813" width="0.985797827903091" height="15.0" fill="rgb(250,192,18)" rx="2" ry="2" _orig_x="642.7" _orig_width="0.4"/>
<text x="687.5321637426902" y="1823.5" _orig_x="645.66"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (13 samples, 0.01%)</title><rect x="932.4603174603172" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(216,182,40)" rx="2" ry="2" _orig_x="743.3" _orig_width="0.1"/>
<text x="935.4603174603172" y="1855.5" _orig_x="746.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.167710944026787" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(223,178,49)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="1983.5" _orig_x="40.53"/>
</g>
<g class="hide">
<title>v8::internal::JSReceiver::GetCreationContext (21 samples, 0.02%)</title><rect x="194.42748538011702" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(212,206,50)" rx="2" ry="2" _orig_x="205.8" _orig_width="0.2"/>
<text x="197.42748538011702" y="1407.5" _orig_x="208.77"/>
</g>
<g class="hide">
<title>[[vdso]] (22 samples, 0.02%)</title><rect x="232.2286131996659" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(244,227,28)" rx="2" ry="2" _orig_x="242.1" _orig_width="0.3"/>
<text x="235.2286131996659" y="2047.5" _orig_x="245.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="30.41432748538017" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(242,134,32)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1999.5" _orig_x="51.31"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; const&amp;&gt; (16 samples, 0.01%)</title><rect x="1162.6441102756894" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(208,42,53)" rx="2" ry="2" _orig_x="836.7" _orig_width="0.2"/>
<text x="1165.6441102756894" y="1855.5" _orig_x="839.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="142.04741019214708" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(235,107,24)" rx="2" ry="2" _orig_x="155.5" _orig_width="0.4"/>
<text x="145.04741019214708" y="1887.5" _orig_x="158.51"/>
</g>
<g class="hide">
<title>[unknown] (75 samples, 0.06%)</title><rect x="243.0586883876358" y="2021" width="0.8330827067669173" height="15.0" fill="rgb(233,198,1)" rx="2" ry="2" _orig_x="252.5" _orig_width="0.8"/>
<text x="246.0586883876358" y="2031.5" _orig_x="255.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.04%)</title><rect x="94.76996658312453" y="1957" width="0.5206766917293233" height="15.0" fill="rgb(235,95,47)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="1967.5" _orig_x="113.12"/>
</g>
<g class="hide">
<title>[perf-58157.map] (217 samples, 0.18%)</title><rect x="122.36583124477866" y="1765" width="2.2909774436090227" height="15.0" fill="rgb(222,158,14)" rx="2" ry="2" _orig_x="136.6" _orig_width="2.2"/>
<text x="125.36583124477866" y="1775.5" _orig_x="139.63"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1477" width="0.31240601503759396" height="15.0" fill="rgb(213,222,11)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1487.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (62 samples, 0.05%)</title><rect x="454.8412698412698" y="1749" width="1.4786967418546364" height="15.0" fill="rgb(223,4,15)" rx="2" ry="2" _orig_x="549.5" _orig_width="0.6"/>
<text x="457.8412698412698" y="1759.5" _orig_x="552.51"/>
</g>
<g class="hide">
<title>[perf-58119.map] (469 samples, 0.39%)</title><rect x="112.99365079365084" y="1637" width="4.894360902255639" height="15.0" fill="rgb(209,210,13)" rx="2" ry="2" _orig_x="127.6" _orig_width="4.7"/>
<text x="115.99365079365084" y="1647.5" _orig_x="130.62"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (34 samples, 0.03%)</title><rect x="188.92230576441108" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(214,124,40)" rx="2" ry="2" _orig_x="441.6" _orig_width="0.3"/>
<text x="191.92230576441108" y="1727.5" _orig_x="444.61"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (19 samples, 0.02%)</title><rect x="1061.5998329156223" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(210,130,28)" rx="2" ry="2" _orig_x="795.7" _orig_width="0.2"/>
<text x="1064.5998329156223" y="1807.5" _orig_x="798.69"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (23 samples, 0.02%)</title><rect x="600.2464494569757" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(208,117,11)" rx="2" ry="2" _orig_x="608.5" _orig_width="0.2"/>
<text x="603.2464494569757" y="1727.5" _orig_x="611.51"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (34 samples, 0.03%)</title><rect x="1050.2631578947367" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(254,0,13)" rx="2" ry="2" _orig_x="791.1" _orig_width="0.3"/>
<text x="1053.2631578947367" y="1871.5" _orig_x="794.06"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (16 samples, 0.01%)</title><rect x="201.73767752715122" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(210,215,45)" rx="2" ry="2" _orig_x="446.8" _orig_width="0.2"/>
<text x="204.73767752715122" y="1759.5" _orig_x="449.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="303.2489139515456" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(248,154,17)" rx="2" ry="2" _orig_x="310.3" _orig_width="0.2"/>
<text x="306.2489139515456" y="1711.5" _orig_x="313.30"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,433 samples, 2.05%)</title><rect x="966.9632414369255" y="1829" width="59.39431913116124" height="15.0" fill="rgb(228,128,12)" rx="2" ry="2" _orig_x="757.3" _orig_width="24.1"/>
<text x="969.9632414369255" y="1839.5" _orig_x="760.27">std::_..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (19 samples, 0.02%)</title><rect x="1136.5204678362572" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(235,151,17)" rx="2" ry="2" _orig_x="826.1" _orig_width="0.2"/>
<text x="1139.5204678362572" y="1839.5" _orig_x="829.10"/>
</g>
<g class="hide">
<title>__poll (14 samples, 0.01%)</title><rect x="97.16507936507942" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(222,34,25)" rx="2" ry="2" _orig_x="112.4" _orig_width="0.1"/>
<text x="100.16507936507942" y="2047.5" _orig_x="115.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="356.04553049289893" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(237,36,50)" rx="2" ry="2" _orig_x="361.0" _orig_width="0.1"/>
<text x="359.04553049289893" y="1695.5" _orig_x="363.97"/>
</g>
<g class="hide">
<title>blink::scheduler::AgentInterferenceRecorder::GetFrameSchedulerForQueue (12 samples, 0.01%)</title><rect x="221.39853801169593" y="1733" width="0.10413533834586466" height="15.0" fill="rgb(223,114,12)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.1"/>
<text x="224.39853801169593" y="1743.5" _orig_x="234.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (11 samples, 0.01%)</title><rect x="337.28487886382624" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(245,18,38)" rx="2" ry="2" _orig_x="501.8" _orig_width="0.1"/>
<text x="340.28487886382624" y="1775.5" _orig_x="504.82"/>
</g>
<g class="hide">
<title>blink::scheduler::AgentInterferenceRecorder::AccumulateCurrentTaskRunningTime (14 samples, 0.01%)</title><rect x="209.5271094402674" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(246,118,2)" rx="2" ry="2" _orig_x="220.3" _orig_width="0.1"/>
<text x="212.5271094402674" y="1711.5" _orig_x="223.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="355.8372598162072" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(250,142,51)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1839.5" _orig_x="363.75"/>
</g>
<g class="hide">
<title>base::Histogram::AddCount (89 samples, 0.07%)</title><rect x="209.94365079365082" y="1701" width="0.937218045112782" height="15.0" fill="rgb(229,179,30)" rx="2" ry="2" _orig_x="220.7" _orig_width="0.9"/>
<text x="212.94365079365082" y="1711.5" _orig_x="223.68"/>
</g>
<g>
<title>Row::~Row (753 samples, 0.63%)</title><rect x="69.64076858813698" y="1845" width="18.483709273182956" height="15.0" fill="rgb(252,116,44)" rx="2" ry="2" _orig_x="393.2" _orig_width="7.5"/>
<text x="72.64076858813698" y="1855.5" _orig_x="396.24"/>
</g>
<g class="hide">
<title>__GI___setitimer (18 samples, 0.02%)</title><rect x="51.13725981620724" y="149" width="0.20827067669172933" height="15.0" fill="rgb(248,52,48)" rx="2" ry="2" _orig_x="68.2" _orig_width="0.2"/>
<text x="54.13725981620724" y="159.5" _orig_x="71.25"/>
</g>
<g class="hide">
<title>[Xorg] (25 samples, 0.02%)</title><rect x="62.1" y="2053" width="0.3" height="15.0" fill="rgb(254,24,29)" rx="2" ry="2"/>
<text x="65.12" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (548 samples, 0.46%)</title><rect x="102.58011695906437" y="1941" width="5.727443609022556" height="15.0" fill="rgb(213,18,41)" rx="2" ry="2" _orig_x="117.6" _orig_width="5.5"/>
<text x="105.58011695906437" y="1951.5" _orig_x="120.63"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1077" width="2.2909774436090227" height="15.0" fill="rgb(239,138,32)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1087.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="913.1695906432749" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(211,62,33)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="2015.5" _orig_x="898.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (425 samples, 0.36%)</title><rect x="157.14703425229746" y="1989" width="4.373684210526316" height="15.0" fill="rgb(233,224,5)" rx="2" ry="2" _orig_x="170.0" _orig_width="4.2"/>
<text x="160.14703425229746" y="1999.5" _orig_x="172.98"/>
</g>
<g class="hide">
<title>[code] (26 samples, 0.02%)</title><rect x="130.69665831244782" y="1669" width="0.31240601503759396" height="15.0" fill="rgb(231,70,4)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.3"/>
<text x="133.69665831244782" y="1679.5" _orig_x="147.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27 samples, 0.02%)</title><rect x="97.68575605680874" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(222,221,14)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="1983.5" _orig_x="115.91"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1349" width="0.31240601503759396" height="15.0" fill="rgb(244,10,20)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1359.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (562 samples, 0.47%)</title><rect x="93.6" y="2053" width="5.6" height="15.0" fill="rgb(236,168,20)" rx="2" ry="2"/>
<text x="96.62" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (46 samples, 0.04%)</title><rect x="142.98462823725987" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(242,85,39)" rx="2" ry="2" _orig_x="156.4" _orig_width="0.5"/>
<text x="145.98462823725987" y="1919.5" _orig_x="159.43"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (13 samples, 0.01%)</title><rect x="889.5781119465329" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(232,72,25)" rx="2" ry="2" _orig_x="725.9" _orig_width="0.1"/>
<text x="892.5781119465329" y="1775.5" _orig_x="728.88"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (82 samples, 0.07%)</title><rect x="86.15288220551372" y="1829" width="1.971595655806182" height="15.0" fill="rgb(212,104,28)" rx="2" ry="2" _orig_x="399.9" _orig_width="0.8"/>
<text x="89.15288220551372" y="1839.5" _orig_x="402.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.06%)</title><rect x="328.2413951545531" y="2021" width="0.7289473684210526" height="15.0" fill="rgb(241,194,46)" rx="2" ry="2" _orig_x="334.3" _orig_width="0.7"/>
<text x="331.2413951545531" y="2031.5" _orig_x="337.34"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (20 samples, 0.02%)</title><rect x="637.9532163742689" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(206,173,44)" rx="2" ry="2" _orig_x="623.8" _orig_width="0.2"/>
<text x="640.9532163742689" y="1775.5" _orig_x="626.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (229 samples, 0.19%)</title><rect x="239.93462823725986" y="2005" width="2.3951127819548867" height="15.0" fill="rgb(251,112,1)" rx="2" ry="2" _orig_x="249.5" _orig_width="2.3"/>
<text x="242.93462823725986" y="2015.5" _orig_x="252.50"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="965" width="0.31240601503759396" height="15.0" fill="rgb(247,107,8)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="975.5" _orig_x="48.87"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::find (21 samples, 0.02%)</title><rect x="1161.904761904762" y="1941" width="0.4928989139515455" height="15.0" fill="rgb(246,82,53)" rx="2" ry="2" _orig_x="836.4" _orig_width="0.2"/>
<text x="1164.904761904762" y="1951.5" _orig_x="839.36"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (16 samples, 0.01%)</title><rect x="750.3341687552213" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(227,226,17)" rx="2" ry="2" _orig_x="669.4" _orig_width="0.2"/>
<text x="753.3341687552213" y="1807.5" _orig_x="672.45"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (376 samples, 0.32%)</title><rect x="614.5405179615705" y="1829" width="9.11862990810359" height="15.0" fill="rgb(238,166,34)" rx="2" ry="2" _orig_x="614.3" _orig_width="3.7"/>
<text x="617.5405179615705" y="1839.5" _orig_x="617.26"/>
</g>
<g class="hide">
<title>g_main_context_check (43 samples, 0.04%)</title><rect x="244.30831244778616" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(222,56,26)" rx="2" ry="2" _orig_x="253.7" _orig_width="0.4"/>
<text x="247.30831244778616" y="2047.5" _orig_x="256.68"/>
</g>
<g class="hide">
<title>blink::dom_window_v8_internal::SetInterval1Method (41 samples, 0.03%)</title><rect x="185.05530492898922" y="1525" width="0.41654135338345866" height="15.0" fill="rgb(237,177,20)" rx="2" ry="2" _orig_x="196.8" _orig_width="0.4"/>
<text x="188.05530492898922" y="1535.5" _orig_x="199.82"/>
</g>
<g>
<title>Field::IsNull (14 samples, 0.01%)</title><rect x="788.780284043442" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(245,76,43)" rx="2" ry="2" _orig_x="685.0" _orig_width="0.2"/>
<text x="791.780284043442" y="1855.5" _orig_x="688.02"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (11 samples, 0.01%)</title><rect x="295.88137009189643" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(243,201,27)" rx="2" ry="2" _orig_x="485.0" _orig_width="0.1"/>
<text x="298.88137009189643" y="1791.5" _orig_x="488.03"/>
</g>
<g class="hide">
<title>[code] (390 samples, 0.33%)</title><rect x="125.38575605680875" y="1957" width="3.957142857142857" height="15.0" fill="rgb(252,124,27)" rx="2" ry="2" _orig_x="139.5" _orig_width="3.8"/>
<text x="128.38575605680876" y="1967.5" _orig_x="142.47"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (78 samples, 0.07%)</title><rect x="294.6056808688388" y="2005" width="0.7289473684210526" height="15.0" fill="rgb(236,111,5)" rx="2" ry="2" _orig_x="302.0" _orig_width="0.7"/>
<text x="297.6056808688388" y="2015.5" _orig_x="304.97"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (52 samples, 0.04%)</title><rect x="859.8" y="2053" width="0.5" height="15.0" fill="rgb(215,97,37)" rx="2" ry="2"/>
<text x="862.83" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.04%)</title><rect x="1163.0204572803848" y="1989" width="0.9466506217408744" height="15.0" fill="rgb(230,165,20)" rx="2" ry="2" _orig_x="848.3" _orig_width="0.4"/>
<text x="1166.0204572803848" y="1999.5" _orig_x="851.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="304.4985380116959" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(249,171,40)" rx="2" ry="2" _orig_x="311.5" _orig_width="0.2"/>
<text x="307.4985380116959" y="1871.5" _orig_x="314.53"/>
</g>
<g class="hide">
<title>[unknown] (14 samples, 0.01%)</title><rect x="296.792522974102" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(253,32,23)" rx="2" ry="2" _orig_x="304.1" _orig_width="0.2"/>
<text x="299.792522974102" y="1983.5" _orig_x="307.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="11.774101921470397" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(210,185,11)" rx="2" ry="2" _orig_x="30.4" _orig_width="0.2"/>
<text x="14.774101921470397" y="1983.5" _orig_x="33.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (355 samples, 0.30%)</title><rect x="880.05455304929" y="1861" width="3.748872180451128" height="15.0" fill="rgb(214,107,18)" rx="2" ry="2" _orig_x="864.2" _orig_width="3.6"/>
<text x="883.05455304929" y="1871.5" _orig_x="867.23"/>
</g>
<g class="hide">
<title>[code] (17 samples, 0.01%)</title><rect x="112.57710944026739" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(236,139,48)" rx="2" ry="2" _orig_x="127.2" _orig_width="0.1"/>
<text x="115.57710944026739" y="1679.5" _orig_x="130.16"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1605" width="0.31240601503759396" height="15.0" fill="rgb(207,41,20)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1615.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="533" width="0.31240601503759396" height="15.0" fill="rgb(247,209,11)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="543.5" _orig_x="48.87"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,469 samples, 1.24%)</title><rect x="451.1445279866332" y="1813" width="35.98162071846282" height="15.0" fill="rgb(237,100,15)" rx="2" ry="2" _orig_x="548.0" _orig_width="14.6"/>
<text x="454.1445279866332" y="1823.5" _orig_x="550.97">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="96.54026733500423" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(226,174,48)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="2031.5" _orig_x="114.83"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (23 samples, 0.02%)</title><rect x="803.8137009189642" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(214,188,10)" rx="2" ry="2" _orig_x="691.1" _orig_width="0.2"/>
<text x="806.8137009189642" y="1759.5" _orig_x="694.11"/>
</g>
<g class="hide">
<title>ib_io_wr-3 (11 samples, 0.01%)</title><rect x="332.2" y="2069" width="0.1" height="15.0" fill="rgb(251,144,27)" rx="2" ry="2"/>
<text x="335.21" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (15 samples, 0.01%)</title><rect x="348.1286549707602" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(238,132,13)" rx="2" ry="2" _orig_x="506.2" _orig_width="0.1"/>
<text x="351.1286549707602" y="1743.5" _orig_x="509.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (494 samples, 0.42%)</title><rect x="103.1007936507937" y="1925" width="5.206766917293233" height="15.0" fill="rgb(209,31,52)" rx="2" ry="2" _orig_x="118.1" _orig_width="5.0"/>
<text x="106.1007936507937" y="1935.5" _orig_x="121.15"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (125 samples, 0.11%)</title><rect x="276.9047619047619" y="1797" width="2.957393483709273" height="15.0" fill="rgb(232,67,41)" rx="2" ry="2" _orig_x="477.3" _orig_width="1.2"/>
<text x="279.9047619047619" y="1807.5" _orig_x="480.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="913.1695906432749" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(219,81,35)" rx="2" ry="2" _orig_x="896.0" _orig_width="0.1"/>
<text x="916.1695906432749" y="1967.5" _orig_x="899.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="1188.8" y="1957" width="0.1" height="15.0" fill="rgb(221,77,47)" rx="2" ry="2"/>
<text x="1191.80" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="469" width="0.31240601503759396" height="15.0" fill="rgb(205,65,20)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="479.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>blink::NativeValueTraits&lt;blink::MessageEventInit, void&gt;::NativeValue (68 samples, 0.06%)</title><rect x="164.22823725981627" y="1477" width="0.7289473684210526" height="15.0" fill="rgb(238,11,34)" rx="2" ry="2" _orig_x="176.8" _orig_width="0.7"/>
<text x="167.22823725981627" y="1487.5" _orig_x="179.78"/>
</g>
<g>
<title>Row::Row (269 samples, 0.23%)</title><rect x="897.4644945697578" y="1877" width="6.654135338345864" height="15.0" fill="rgb(251,99,33)" rx="2" ry="2" _orig_x="729.1" _orig_width="2.7"/>
<text x="900.4644945697578" y="1887.5" _orig_x="732.14"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (11 samples, 0.01%)</title><rect x="511.0317460317459" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(219,50,21)" rx="2" ry="2" _orig_x="572.3" _orig_width="0.1"/>
<text x="514.0317460317459" y="1759.5" _orig_x="575.32"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (62 samples, 0.05%)</title><rect x="722.485380116959" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(213,6,42)" rx="2" ry="2" _orig_x="658.1" _orig_width="0.6"/>
<text x="725.485380116959" y="1839.5" _orig_x="661.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="360.5" y="2053" width="0.2" height="15.0" fill="rgb(211,10,25)" rx="2" ry="2"/>
<text x="363.45" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (167 samples, 0.14%)</title><rect x="970.9064327485379" y="1797" width="4.189640768588137" height="15.0" fill="rgb(212,9,33)" rx="2" ry="2" _orig_x="758.9" _orig_width="1.7"/>
<text x="973.9064327485379" y="1807.5" _orig_x="761.91"/>
</g>
<g>
<title>Row::~Row (14 samples, 0.01%)</title><rect x="777.6900584795321" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(211,106,37)" rx="2" ry="2" _orig_x="680.5" _orig_width="0.1"/>
<text x="780.6900584795321" y="1887.5" _orig_x="683.46"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="325" width="0.31240601503759396" height="15.0" fill="rgb(216,166,41)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="335.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[code] (787 samples, 0.66%)</title><rect x="110.91094402673355" y="1797" width="8.122556390977444" height="15.0" fill="rgb(250,79,45)" rx="2" ry="2" _orig_x="125.6" _orig_width="7.8"/>
<text x="113.91094402673355" y="1807.5" _orig_x="128.62"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (27 samples, 0.02%)</title><rect x="225.88972431077698" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(230,53,33)" rx="2" ry="2" _orig_x="456.6" _orig_width="0.3"/>
<text x="228.88972431077698" y="1807.5" _orig_x="459.65"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (45 samples, 0.04%)</title><rect x="703.5087719298244" y="1749" width="0.985797827903091" height="15.0" fill="rgb(246,89,10)" rx="2" ry="2" _orig_x="650.4" _orig_width="0.4"/>
<text x="706.5087719298244" y="1759.5" _orig_x="653.37"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (29 samples, 0.02%)</title><rect x="871.5873015873017" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(224,2,44)" rx="2" ry="2" _orig_x="718.6" _orig_width="0.3"/>
<text x="874.5873015873017" y="1807.5" _orig_x="721.57"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask (122 samples, 0.10%)</title><rect x="204.94515455304935" y="1733" width="1.2496240601503759" height="15.0" fill="rgb(242,153,42)" rx="2" ry="2" _orig_x="215.9" _orig_width="1.2"/>
<text x="207.94515455304935" y="1743.5" _orig_x="218.91"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (587 samples, 0.49%)</title><rect x="282.5730994152047" y="1829" width="14.29406850459482" height="15.0" fill="rgb(254,78,31)" rx="2" ry="2" _orig_x="479.6" _orig_width="5.8"/>
<text x="285.5730994152047" y="1839.5" _orig_x="482.57"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (13 samples, 0.01%)</title><rect x="288.24143692564735" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(237,163,49)" rx="2" ry="2" _orig_x="481.9" _orig_width="0.1"/>
<text x="291.24143692564735" y="1775.5" _orig_x="484.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (405 samples, 0.34%)</title><rect x="22.60417710944032" y="2021" width="4.165413533834586" height="15.0" fill="rgb(245,127,8)" rx="2" ry="2" _orig_x="40.8" _orig_width="4.0"/>
<text x="25.60417710944032" y="2031.5" _orig_x="43.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (602 samples, 0.51%)</title><rect x="246.59928989139522" y="2005" width="6.2481203007518795" height="15.0" fill="rgb(226,136,53)" rx="2" ry="2" _orig_x="255.9" _orig_width="6.0"/>
<text x="249.59928989139522" y="2015.5" _orig_x="258.92"/>
</g>
<g class="hide">
<title>[unknown] (22 samples, 0.02%)</title><rect x="910.1496658312449" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(248,144,36)" rx="2" ry="2" _orig_x="893.1" _orig_width="0.2"/>
<text x="913.1496658312449" y="2015.5" _orig_x="896.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (264 samples, 0.22%)</title><rect x="88.31357560568092" y="1909" width="2.707518796992481" height="15.0" fill="rgb(213,51,18)" rx="2" ry="2" _orig_x="103.9" _orig_width="2.6"/>
<text x="91.31357560568092" y="1919.5" _orig_x="106.92"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (18 samples, 0.02%)</title><rect x="908.6917710944027" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(221,157,8)" rx="2" ry="2" _orig_x="891.7" _orig_width="0.2"/>
<text x="911.6917710944027" y="2015.5" _orig_x="894.72"/>
</g>
<g class="hide">
<title>[perf-58119.map] (41 samples, 0.03%)</title><rect x="117.99214703425235" y="1493" width="0.41654135338345866" height="15.0" fill="rgb(243,142,14)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1503.5" _orig_x="135.43"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (26 samples, 0.02%)</title><rect x="776.4578111946532" y="1845" width="0.7393483709273182" height="15.0" fill="rgb(245,63,54)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.3"/>
<text x="779.4578111946532" y="1855.5" _orig_x="683.02"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (12 samples, 0.01%)</title><rect x="949.4653299916458" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(211,62,43)" rx="2" ry="2" _orig_x="750.2" _orig_width="0.1"/>
<text x="952.4653299916458" y="1903.5" _orig_x="753.21"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (16 samples, 0.01%)</title><rect x="852.3642439431911" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(214,106,27)" rx="2" ry="2" _orig_x="710.8" _orig_width="0.2"/>
<text x="855.3642439431911" y="1807.5" _orig_x="713.85"/>
</g>
<g class="hide">
<title>blink::MessageEvent::MessageEvent (128 samples, 0.11%)</title><rect x="188.07522974101926" y="1445" width="1.3537593984962406" height="15.0" fill="rgb(225,69,19)" rx="2" ry="2" _orig_x="199.7" _orig_width="1.3"/>
<text x="191.07522974101926" y="1455.5" _orig_x="202.71"/>
</g>
<g class="hide">
<title>v8::Function::Call (27 samples, 0.02%)</title><rect x="112.16056808688393" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(218,59,2)" rx="2" ry="2" _orig_x="126.8" _orig_width="0.3"/>
<text x="115.16056808688393" y="1695.5" _orig_x="129.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="16.2" y="2021" width="0.1" height="15.0" fill="rgb(216,1,6)" rx="2" ry="2"/>
<text x="19.18" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (72 samples, 0.06%)</title><rect x="758.7134502923975" y="1765" width="1.7251461988304093" height="15.0" fill="rgb(216,131,0)" rx="2" ry="2" _orig_x="672.8" _orig_width="0.7"/>
<text x="761.7134502923975" y="1775.5" _orig_x="675.83"/>
</g>
<g class="hide">
<title>blink::MessageEvent::AssociateWithWrapper (33 samples, 0.03%)</title><rect x="187.6586883876358" y="1461" width="0.31240601503759396" height="15.0" fill="rgb(226,221,20)" rx="2" ry="2" _orig_x="199.3" _orig_width="0.3"/>
<text x="190.6586883876358" y="1471.5" _orig_x="202.27"/>
</g>
<g class="hide">
<title>[code] (122 samples, 0.10%)</title><rect x="17.2" y="1781" width="1.2" height="15.0" fill="rgb(243,59,18)" rx="2" ry="2"/>
<text x="20.21" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.05%)</title><rect x="43.0147034252298" y="2005" width="0.6248120300751879" height="15.0" fill="rgb(209,196,52)" rx="2" ry="2" _orig_x="60.4" _orig_width="0.6"/>
<text x="46.0147034252298" y="2015.5" _orig_x="63.37"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (20 samples, 0.02%)</title><rect x="579.5446950710109" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(211,203,6)" rx="2" ry="2" _orig_x="600.1" _orig_width="0.2"/>
<text x="582.5446950710109" y="1743.5" _orig_x="603.15"/>
</g>
<g class="hide">
<title>[perf-58145.map] (37 samples, 0.03%)</title><rect x="130.69665831244782" y="1701" width="0.41654135338345866" height="15.0" fill="rgb(241,82,51)" rx="2" ry="2" _orig_x="144.6" _orig_width="0.4"/>
<text x="133.69665831244782" y="1711.5" _orig_x="147.58"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="837" width="0.31240601503759396" height="15.0" fill="rgb(228,97,27)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="847.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>_nv023368rm (18 samples, 0.02%)</title><rect x="337.8" y="2053" width="0.2" height="15.0" fill="rgb(239,134,6)" rx="2" ry="2"/>
<text x="340.80" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="270.3421470342523" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(236,193,1)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1871.5" _orig_x="281.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (572 samples, 0.48%)</title><rect x="885.9902673350042" y="1989" width="5.935714285714286" height="15.0" fill="rgb(254,51,39)" rx="2" ry="2" _orig_x="869.9" _orig_width="5.7"/>
<text x="888.9902673350042" y="1999.5" _orig_x="872.90"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (22 samples, 0.02%)</title><rect x="602.9573934837092" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(245,109,32)" rx="2" ry="2" _orig_x="609.6" _orig_width="0.2"/>
<text x="605.9573934837092" y="1775.5" _orig_x="612.60"/>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.02%)</title><rect x="33.5" y="2053" width="0.2" height="15.0" fill="rgb(239,216,37)" rx="2" ry="2"/>
<text x="36.54" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1461" width="2.2909774436090227" height="15.0" fill="rgb(206,94,50)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1471.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>blink::scheduler::UkmTaskSampler::ShouldRecordTaskUkm (12 samples, 0.01%)</title><rect x="212.7553049289892" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(223,46,8)" rx="2" ry="2" _orig_x="223.4" _orig_width="0.1"/>
<text x="215.7553049289892" y="1711.5" _orig_x="226.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (13 samples, 0.01%)</title><rect x="141.6040100250626" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(230,74,35)" rx="2" ry="2" _orig_x="422.4" _orig_width="0.1"/>
<text x="144.6040100250626" y="1775.5" _orig_x="425.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.13%)</title><rect x="928.6857560568087" y="1877" width="1.6661654135338346" height="15.0" fill="rgb(226,172,46)" rx="2" ry="2" _orig_x="910.9" _orig_width="1.6"/>
<text x="931.6857560568087" y="1887.5" _orig_x="913.92"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (30 samples, 0.03%)</title><rect x="98.22890559732667" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(218,70,48)" rx="2" ry="2" _orig_x="404.8" _orig_width="0.3"/>
<text x="101.22890559732667" y="1727.5" _orig_x="407.80"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (14 samples, 0.01%)</title><rect x="919.1520467836257" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(214,21,43)" rx="2" ry="2" _orig_x="737.9" _orig_width="0.1"/>
<text x="922.1520467836257" y="1743.5" _orig_x="740.88"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (16 samples, 0.01%)</title><rect x="198.90530492898918" y="1653" width="0.10413533834586466" height="15.0" fill="rgb(244,128,16)" rx="2" ry="2" _orig_x="210.1" _orig_width="0.1"/>
<text x="201.90530492898918" y="1663.5" _orig_x="213.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.11%)</title><rect x="882.4496658312448" y="1765" width="1.3537593984962406" height="15.0" fill="rgb(236,49,32)" rx="2" ry="2" _orig_x="866.5" _orig_width="1.3"/>
<text x="885.4496658312448" y="1775.5" _orig_x="869.52"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (51 samples, 0.04%)</title><rect x="833.8805346700082" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(253,120,22)" rx="2" ry="2" _orig_x="703.3" _orig_width="0.5"/>
<text x="836.8805346700082" y="1791.5" _orig_x="706.28"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (44 samples, 0.04%)</title><rect x="10.7" y="2053" width="0.5" height="15.0" fill="rgb(235,203,46)" rx="2" ry="2"/>
<text x="13.74" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (11 samples, 0.01%)</title><rect x="176.59983291562244" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(213,176,33)" rx="2" ry="2" _orig_x="436.6" _orig_width="0.1"/>
<text x="179.59983291562244" y="1727.5" _orig_x="439.59"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (54 samples, 0.05%)</title><rect x="1096.3492063492063" y="1813" width="1.4786967418546364" height="15.0" fill="rgb(238,22,10)" rx="2" ry="2" _orig_x="809.8" _orig_width="0.6"/>
<text x="1099.3492063492063" y="1823.5" _orig_x="812.85"/>
</g>
<g class="hide">
<title>__libc_write (16 samples, 0.01%)</title><rect x="161.62485380116965" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(227,166,23)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1983.5" _orig_x="177.32"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (12 samples, 0.01%)</title><rect x="274.1938178780283" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(228,24,18)" rx="2" ry="2" _orig_x="476.2" _orig_width="0.2"/>
<text x="277.1938178780283" y="1791.5" _orig_x="479.24"/>
</g>
<g class="hide">
<title>epoll_wait (15 samples, 0.01%)</title><rect x="20.1" y="2021" width="0.2" height="15.0" fill="rgb(241,22,40)" rx="2" ry="2"/>
<text x="23.11" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1365" width="0.31240601503759396" height="15.0" fill="rgb(245,120,45)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1375.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (47 samples, 0.04%)</title><rect x="97.73600668337515" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(232,199,46)" rx="2" ry="2" _orig_x="404.6" _orig_width="0.5"/>
<text x="100.73600668337515" y="1743.5" _orig_x="407.63"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (18 samples, 0.02%)</title><rect x="228.1077694235589" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(236,174,15)" rx="2" ry="2" _orig_x="457.5" _orig_width="0.2"/>
<text x="231.1077694235589" y="1807.5" _orig_x="460.51"/>
</g>
<g>
<title>malloc (14 samples, 0.01%)</title><rect x="403.8262322472848" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(244,98,2)" rx="2" ry="2" _orig_x="528.8" _orig_width="0.2"/>
<text x="406.8262322472848" y="1855.5" _orig_x="531.84"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (15 samples, 0.01%)</title><rect x="604.4360902255639" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(220,115,19)" rx="2" ry="2" _orig_x="610.2" _orig_width="0.2"/>
<text x="607.4360902255639" y="1775.5" _orig_x="613.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="1181.1" y="1621" width="0.5" height="15.0" fill="rgb(244,161,21)" rx="2" ry="2"/>
<text x="1184.10" y="1631.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1685" width="0.41654135338345866" height="15.0" fill="rgb(239,35,35)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1695.5" _orig_x="135.37"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Debounce::Debounce (104 samples, 0.09%)</title><rect x="161.52071846282377" y="2037" width="1.0413533834586466" height="15.0" fill="rgb(253,67,42)" rx="2" ry="2" _orig_x="174.2" _orig_width="1.0"/>
<text x="164.52071846282377" y="2047.5" _orig_x="177.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.06%)</title><rect x="334.3" y="2053" width="0.7" height="15.0" fill="rgb(233,205,45)" rx="2" ry="2"/>
<text x="337.27" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (16 samples, 0.01%)</title><rect x="240.92314118629903" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(252,124,14)" rx="2" ry="2" _orig_x="462.7" _orig_width="0.1"/>
<text x="243.92314118629903" y="1791.5" _orig_x="465.69"/>
</g>
<g class="hide">
<title>[code] (850 samples, 0.71%)</title><rect x="110.39026733500422" y="1829" width="8.747368421052633" height="15.0" fill="rgb(246,39,11)" rx="2" ry="2" _orig_x="125.1" _orig_width="8.4"/>
<text x="113.39026733500422" y="1839.5" _orig_x="128.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="277.11094402673353" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(225,195,22)" rx="2" ry="2" _orig_x="285.2" _orig_width="0.3"/>
<text x="280.11094402673353" y="1935.5" _orig_x="288.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (224 samples, 0.19%)</title><rect x="239.93462823725986" y="1989" width="2.3951127819548867" height="15.0" fill="rgb(241,143,34)" rx="2" ry="2" _orig_x="249.5" _orig_width="2.3"/>
<text x="242.93462823725986" y="1999.5" _orig_x="252.55"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (33 samples, 0.03%)</title><rect x="684.5321637426902" y="1797" width="0.985797827903091" height="15.0" fill="rgb(217,221,26)" rx="2" ry="2" _orig_x="642.7" _orig_width="0.4"/>
<text x="687.5321637426902" y="1807.5" _orig_x="645.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="52.90756056808694" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(239,155,17)" rx="2" ry="2" _orig_x="69.9" _orig_width="0.1"/>
<text x="55.90756056808694" y="1775.5" _orig_x="72.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="41.45267335004182" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(227,178,9)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1903.5" _orig_x="61.94"/>
</g>
<g class="hide">
<title>[perf-58145.map] (58 samples, 0.05%)</title><rect x="130.4883876357561" y="1813" width="0.6248120300751879" height="15.0" fill="rgb(208,186,24)" rx="2" ry="2" _orig_x="144.4" _orig_width="0.6"/>
<text x="133.4883876357561" y="1823.5" _orig_x="147.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="326.78350041771097" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(225,168,14)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="1999.5" _orig_x="335.89"/>
</g>
<g class="hide">
<title>[code] (141 samples, 0.12%)</title><rect x="31.143274853801223" y="1925" width="1.4578947368421051" height="15.0" fill="rgb(243,174,49)" rx="2" ry="2" _orig_x="49.0" _orig_width="1.4"/>
<text x="34.14327485380122" y="1935.5" _orig_x="52.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.05%)</title><rect x="1162.78379462495" y="2021" width="1.183313277176093" height="15.0" fill="rgb(249,62,5)" rx="2" ry="2" _orig_x="848.2" _orig_width="0.5"/>
<text x="1165.78379462495" y="2031.5" _orig_x="851.21"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(220,206,40)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1951.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>azx_get_position (79 samples, 0.07%)</title><rect x="68.21545530492904" y="1861" width="0.8330827067669173" height="15.0" fill="rgb(227,64,48)" rx="2" ry="2" _orig_x="84.6" _orig_width="0.8"/>
<text x="71.21545530492904" y="1871.5" _orig_x="87.62"/>
</g>
<g>
<title>Field::CompareLessThan (101 samples, 0.08%)</title><rect x="953.9014202172096" y="1893" width="2.4644945697577274" height="15.0" fill="rgb(233,195,43)" rx="2" ry="2" _orig_x="752.0" _orig_width="1.0"/>
<text x="956.9014202172096" y="1903.5" _orig_x="754.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="84.14816207184634" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(250,215,45)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="2031.5" _orig_x="102.89"/>
</g>
<g class="hide">
<title>read (62 samples, 0.05%)</title><rect x="916.1" y="2053" width="0.6" height="15.0" fill="rgb(246,168,32)" rx="2" ry="2"/>
<text x="919.07" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (62 samples, 0.05%)</title><rect x="61.50793650793645" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(253,116,1)" rx="2" ry="2" _orig_x="389.9" _orig_width="0.7"/>
<text x="64.50793650793645" y="1759.5" _orig_x="392.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="344.1741019214704" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(251,83,41)" rx="2" ry="2" _orig_x="349.6" _orig_width="0.3"/>
<text x="347.1741019214704" y="1903.5" _orig_x="352.58"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_state (14 samples, 0.01%)</title><rect x="840.78111946533" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(207,18,6)" rx="2" ry="2" _orig_x="706.1" _orig_width="0.2"/>
<text x="843.78111946533" y="1791.5" _orig_x="709.12"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (172 samples, 0.14%)</title><rect x="155.89807852965743" y="1749" width="4.189640768588137" height="15.0" fill="rgb(225,43,2)" rx="2" ry="2" _orig_x="428.2" _orig_width="1.7"/>
<text x="158.89807852965743" y="1759.5" _orig_x="431.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="313.5583124477862" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(215,7,14)" rx="2" ry="2" _orig_x="320.2" _orig_width="0.2"/>
<text x="316.5583124477862" y="2031.5" _orig_x="323.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="276.06959064327486" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(237,23,3)" rx="2" ry="2" _orig_x="284.2" _orig_width="0.2"/>
<text x="279.06959064327486" y="1983.5" _orig_x="287.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (18 samples, 0.02%)</title><rect x="417.1345029239767" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(242,146,35)" rx="2" ry="2" _orig_x="534.2" _orig_width="0.1"/>
<text x="420.1345029239767" y="1807.5" _orig_x="537.16"/>
</g>
<g class="hide">
<title>__libc_send (16 samples, 0.01%)</title><rect x="15.7" y="2053" width="0.2" height="15.0" fill="rgb(214,155,36)" rx="2" ry="2"/>
<text x="18.74" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1333" width="0.31240601503759396" height="15.0" fill="rgb(210,124,2)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1343.5" _orig_x="141.29"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (23 samples, 0.02%)</title><rect x="889.0852130325815" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(231,214,7)" rx="2" ry="2" _orig_x="725.7" _orig_width="0.2"/>
<text x="892.0852130325815" y="1759.5" _orig_x="728.65"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadMetricsHelper::RecordTaskMetrics (18 samples, 0.02%)</title><rect x="166.1026733500418" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(223,113,49)" rx="2" ry="2" _orig_x="178.6" _orig_width="0.2"/>
<text x="169.1026733500418" y="1743.5" _orig_x="181.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (14 samples, 0.01%)</title><rect x="992.3475355054303" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(246,207,10)" rx="2" ry="2" _orig_x="767.6" _orig_width="0.2"/>
<text x="995.3475355054303" y="1743.5" _orig_x="770.62"/>
</g>
<g class="hide">
<title>[unknown] (32 samples, 0.03%)</title><rect x="332.8" y="2053" width="0.4" height="15.0" fill="rgb(244,6,27)" rx="2" ry="2"/>
<text x="335.85" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="55.51094402673356" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(252,158,4)" rx="2" ry="2" _orig_x="72.4" _orig_width="0.3"/>
<text x="58.51094402673356" y="2047.5" _orig_x="75.39"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (28 samples, 0.02%)</title><rect x="520.1503759398496" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(227,3,49)" rx="2" ry="2" _orig_x="576.0" _orig_width="0.3"/>
<text x="523.1503759398496" y="1759.5" _orig_x="579.03"/>
</g>
<g>
<title>operator delete (14 samples, 0.01%)</title><rect x="861.236424394319" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(225,16,50)" rx="2" ry="2" _orig_x="714.4" _orig_width="0.2"/>
<text x="864.236424394319" y="1855.5" _orig_x="717.43"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (38 samples, 0.03%)</title><rect x="1100.0459482038427" y="1845" width="0.985797827903091" height="15.0" fill="rgb(211,99,39)" rx="2" ry="2" _orig_x="811.3" _orig_width="0.4"/>
<text x="1103.0459482038427" y="1855.5" _orig_x="814.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="303.2489139515456" y="1685" width="0.20827067669172933" height="15.0" fill="rgb(205,2,29)" rx="2" ry="2" _orig_x="310.3" _orig_width="0.2"/>
<text x="306.2489139515456" y="1695.5" _orig_x="313.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="43.22297410192153" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(217,48,24)" rx="2" ry="2" _orig_x="60.6" _orig_width="0.4"/>
<text x="46.22297410192153" y="1887.5" _orig_x="63.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (121 samples, 0.10%)</title><rect x="542.577276524645" y="1749" width="2.957393483709273" height="15.0" fill="rgb(214,71,14)" rx="2" ry="2" _orig_x="585.1" _orig_width="1.2"/>
<text x="545.577276524645" y="1759.5" _orig_x="588.08"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (32 samples, 0.03%)</title><rect x="183.07673350041776" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(211,20,7)" rx="2" ry="2" _orig_x="194.9" _orig_width="0.3"/>
<text x="186.07673350041776" y="1407.5" _orig_x="197.88"/>
</g>
<g class="hide">
<title>blink::ThreadState::PerformConcurrentSweep (18 samples, 0.02%)</title><rect x="32.70530492898919" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(244,212,12)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1903.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="11.98237259816213" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(252,118,28)" rx="2" ry="2" _orig_x="30.6" _orig_width="0.2"/>
<text x="14.98237259816213" y="1999.5" _orig_x="33.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="25.0" y="1925" width="0.2" height="15.0" fill="rgb(239,106,49)" rx="2" ry="2"/>
<text x="28.04" y="1935.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::max_size (15 samples, 0.01%)</title><rect x="815.8897243107768" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(240,41,44)" rx="2" ry="2" _orig_x="696.0" _orig_width="0.1"/>
<text x="818.8897243107768" y="1695.5" _orig_x="698.99"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1413" width="0.31240601503759396" height="15.0" fill="rgb(241,169,4)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1423.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>[code] (235 samples, 0.20%)</title><rect x="122.2616959064328" y="1877" width="2.3951127819548867" height="15.0" fill="rgb(245,98,3)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1887.5" _orig_x="139.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (25 samples, 0.02%)</title><rect x="346.64995822890563" y="1717" width="0.7393483709273182" height="15.0" fill="rgb(242,222,8)" rx="2" ry="2" _orig_x="505.6" _orig_width="0.3"/>
<text x="349.64995822890563" y="1727.5" _orig_x="508.64"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (30 samples, 0.03%)</title><rect x="73.09106098579787" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(247,183,6)" rx="2" ry="2" _orig_x="394.6" _orig_width="0.3"/>
<text x="76.09106098579787" y="1807.5" _orig_x="397.59"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (11 samples, 0.01%)</title><rect x="754.5238095238095" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(208,50,35)" rx="2" ry="2" _orig_x="671.1" _orig_width="0.1"/>
<text x="757.5238095238095" y="1823.5" _orig_x="674.11"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (18 samples, 0.02%)</title><rect x="1182.1136173767754" y="1957" width="0.24644945697577275" height="15.0" fill="rgb(251,155,33)" rx="2" ry="2" _orig_x="844.6" _orig_width="0.1"/>
<text x="1185.1136173767754" y="1967.5" _orig_x="847.56"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (43 samples, 0.04%)</title><rect x="1171.2698412698412" y="1941" width="1.2322472848788637" height="15.0" fill="rgb(221,38,53)" rx="2" ry="2" _orig_x="840.2" _orig_width="0.5"/>
<text x="1174.2698412698412" y="1951.5" _orig_x="843.24"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (20 samples, 0.02%)</title><rect x="253.4920634920635" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(247,117,27)" rx="2" ry="2" _orig_x="467.8" _orig_width="0.2"/>
<text x="256.4920634920635" y="1743.5" _orig_x="470.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="309.28876357560574" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(208,104,27)" rx="2" ry="2" _orig_x="316.1" _orig_width="0.1"/>
<text x="312.28876357560574" y="1967.5" _orig_x="319.11"/>
</g>
<g class="hide">
<title>non-virtual thunk to blink::DOMTimer::Fired (17 samples, 0.01%)</title><rect x="206.8195906432749" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(239,101,16)" rx="2" ry="2" _orig_x="217.7" _orig_width="0.1"/>
<text x="209.8195906432749" y="1775.5" _orig_x="220.65"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (13 samples, 0.01%)</title><rect x="713.1203007518795" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(225,134,19)" rx="2" ry="2" _orig_x="654.3" _orig_width="0.1"/>
<text x="716.1203007518795" y="1743.5" _orig_x="657.29"/>
</g>
<g class="hide">
<title>[perf-3698.map] (28 samples, 0.02%)</title><rect x="287.3162071846283" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(215,194,14)" rx="2" ry="2" _orig_x="295.0" _orig_width="0.3"/>
<text x="290.3162071846283" y="1951.5" _orig_x="298.04"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="343.9390142021721" y="1685" width="0.4928989139515455" height="15.0" fill="rgb(213,131,29)" rx="2" ry="2" _orig_x="504.5" _orig_width="0.2"/>
<text x="346.9390142021721" y="1695.5" _orig_x="507.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (154 samples, 0.13%)</title><rect x="63.84177109440273" y="1893" width="1.6661654135338346" height="15.0" fill="rgb(215,64,3)" rx="2" ry="2" _orig_x="80.4" _orig_width="1.6"/>
<text x="66.84177109440273" y="1903.5" _orig_x="83.43"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="757" width="0.20827067669172933" height="15.0" fill="rgb(209,20,50)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="767.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (13 samples, 0.01%)</title><rect x="1189.4" y="2053" width="0.2" height="15.0" fill="rgb(242,19,11)" rx="2" ry="2"/>
<text x="1192.43" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (33 samples, 0.03%)</title><rect x="83.1068086883877" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(221,66,42)" rx="2" ry="2" _orig_x="98.9" _orig_width="0.3"/>
<text x="86.1068086883877" y="1935.5" _orig_x="101.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.12%)</title><rect x="155.2725981620719" y="1925" width="1.4578947368421051" height="15.0" fill="rgb(221,61,23)" rx="2" ry="2" _orig_x="168.2" _orig_width="1.4"/>
<text x="158.2725981620719" y="1935.5" _orig_x="171.19"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (29 samples, 0.02%)</title><rect x="909.7869674185464" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(206,49,23)" rx="2" ry="2" _orig_x="734.1" _orig_width="0.3"/>
<text x="912.7869674185464" y="1839.5" _orig_x="737.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="15.4" y="2021" width="0.2" height="15.0" fill="rgb(244,98,24)" rx="2" ry="2"/>
<text x="18.37" y="2031.5"/>
</g>
<g class="hide">
<title>content::ContentMainRunnerImpl::Run (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="1909" width="55.81654135338346" height="15.0" fill="rgb(213,205,1)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="1919.5" _orig_x="185.47">content::ContentMainRunnerImpl::Run </text>
</g>
<g class="hide">
<title>[perf-15821.map] (32 samples, 0.03%)</title><rect x="92.89553049289897" y="1525" width="0.41654135338345866" height="15.0" fill="rgb(215,161,4)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1535.5" _orig_x="111.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="97.68575605680874" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(216,159,28)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="1999.5" _orig_x="115.90"/>
</g>
<g class="hide">
<title>node::MakeCallback (236 samples, 0.20%)</title><rect x="122.2616959064328" y="1893" width="2.3951127819548867" height="15.0" fill="rgb(228,113,35)" rx="2" ry="2" _orig_x="136.5" _orig_width="2.3"/>
<text x="125.2616959064328" y="1903.5" _orig_x="139.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="161.62485380116965" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(254,40,34)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1951.5" _orig_x="177.33"/>
</g>
<g class="hide">
<title>[perf-32996.map] (30 samples, 0.03%)</title><rect x="19.0" y="1637" width="0.3" height="15.0" fill="rgb(214,100,41)" rx="2" ry="2"/>
<text x="21.97" y="1647.5"/>
</g>
<g class="hide">
<title>ib_src_main (13 samples, 0.01%)</title><rect x="334.0" y="2069" width="0.1" height="15.0" fill="rgb(218,110,30)" rx="2" ry="2"/>
<text x="336.98" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="321.57673350041773" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(221,109,21)" rx="2" ry="2" _orig_x="327.9" _orig_width="0.2"/>
<text x="324.57673350041773" y="1855.5" _orig_x="330.91"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (81 samples, 0.07%)</title><rect x="1167.5730994152048" y="1941" width="1.971595655806182" height="15.0" fill="rgb(216,219,5)" rx="2" ry="2" _orig_x="838.7" _orig_width="0.8"/>
<text x="1170.5730994152048" y="1951.5" _orig_x="841.73"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (124 samples, 0.10%)</title><rect x="288.98078529657477" y="1781" width="2.957393483709273" height="15.0" fill="rgb(221,212,32)" rx="2" ry="2" _orig_x="482.2" _orig_width="1.2"/>
<text x="291.98078529657477" y="1791.5" _orig_x="485.18"/>
</g>
<g class="hide">
<title>napi_set_property (25 samples, 0.02%)</title><rect x="124.86507936507942" y="1893" width="0.20827067669172933" height="15.0" fill="rgb(250,177,18)" rx="2" ry="2" _orig_x="139.0" _orig_width="0.2"/>
<text x="127.86507936507942" y="1903.5" _orig_x="142.00"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (18 samples, 0.02%)</title><rect x="1164.8621553884711" y="1925" width="0.4928989139515455" height="15.0" fill="rgb(237,202,52)" rx="2" ry="2" _orig_x="837.6" _orig_width="0.2"/>
<text x="1167.8621553884711" y="1935.5" _orig_x="840.58"/>
</g>
<g class="hide">
<title>blink::scheduler::WorkerThread::SimpleThreadImpl::Run (12 samples, 0.01%)</title><rect x="15.1" y="2021" width="0.2" height="15.0" fill="rgb(209,216,27)" rx="2" ry="2"/>
<text x="18.14" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (19 samples, 0.02%)</title><rect x="912.2514619883041" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(234,177,38)" rx="2" ry="2" _orig_x="735.1" _orig_width="0.2"/>
<text x="915.2514619883041" y="1807.5" _orig_x="738.12"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadTaskQueue::OnTaskCompleted (446 samples, 0.38%)</title><rect x="208.79816207184632" y="1749" width="4.581954887218045" height="15.0" fill="rgb(239,121,48)" rx="2" ry="2" _orig_x="219.6" _orig_width="4.4"/>
<text x="211.79816207184632" y="1759.5" _orig_x="222.62"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (20 samples, 0.02%)</title><rect x="1033.5045948203842" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(225,153,51)" rx="2" ry="2" _orig_x="784.3" _orig_width="0.2"/>
<text x="1036.5045948203842" y="1839.5" _orig_x="787.26"/>
</g>
<g class="hide">
<title>[code] (339 samples, 0.29%)</title><rect x="125.4898913951546" y="1925" width="3.5406015037593983" height="15.0" fill="rgb(226,55,49)" rx="2" ry="2" _orig_x="139.6" _orig_width="3.4"/>
<text x="128.4898913951546" y="1935.5" _orig_x="142.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="302.62410192147036" y="2005" width="0.8330827067669173" height="15.0" fill="rgb(242,147,51)" rx="2" ry="2" _orig_x="309.7" _orig_width="0.8"/>
<text x="305.62410192147036" y="2015.5" _orig_x="312.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.04%)</title><rect x="308.55981620718467" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(226,178,0)" rx="2" ry="2" _orig_x="315.4" _orig_width="0.5"/>
<text x="311.55981620718467" y="1919.5" _orig_x="318.42"/>
</g>
<g class="hide">
<title>[unknown] (213 samples, 0.18%)</title><rect x="49.679365079365134" y="277" width="2.186842105263158" height="15.0" fill="rgb(210,202,24)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.1"/>
<text x="52.679365079365134" y="287.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="118.7210944026734" y="1685" width="0.10413533834586466" height="15.0" fill="rgb(247,57,51)" rx="2" ry="2" _orig_x="133.1" _orig_width="0.1"/>
<text x="121.7210944026734" y="1695.5" _orig_x="136.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (31 samples, 0.03%)</title><rect x="43.32710944026739" y="1845" width="0.31240601503759396" height="15.0" fill="rgb(223,134,49)" rx="2" ry="2" _orig_x="60.7" _orig_width="0.3"/>
<text x="46.32710944026739" y="1855.5" _orig_x="63.68"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="517" width="0.31240601503759396" height="15.0" fill="rgb(236,199,16)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="527.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="84.14816207184634" y="2005" width="0.20827067669172933" height="15.0" fill="rgb(218,144,18)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="2015.5" _orig_x="102.91"/>
</g>
<g class="hide">
<title>[perf-58119.map] (134 samples, 0.11%)</title><rect x="116.43011695906439" y="1333" width="1.4578947368421051" height="15.0" fill="rgb(218,124,3)" rx="2" ry="2" _orig_x="130.9" _orig_width="1.4"/>
<text x="119.43011695906439" y="1343.5" _orig_x="133.94"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (183 samples, 0.15%)</title><rect x="542.0843776106934" y="1765" width="4.43609022556391" height="15.0" fill="rgb(251,53,38)" rx="2" ry="2" _orig_x="584.9" _orig_width="1.8"/>
<text x="545.0843776106934" y="1775.5" _orig_x="587.87"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (22 samples, 0.02%)</title><rect x="317.20304928989145" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(228,139,36)" rx="2" ry="2" _orig_x="323.7" _orig_width="0.3"/>
<text x="320.20304928989145" y="2047.5" _orig_x="326.75"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (108 samples, 0.09%)</title><rect x="487.6190476190475" y="1813" width="2.7109440267335008" height="15.0" fill="rgb(228,158,13)" rx="2" ry="2" _orig_x="562.8" _orig_width="1.1"/>
<text x="490.6190476190475" y="1823.5" _orig_x="565.82"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (95 samples, 0.08%)</title><rect x="47.90906432748543" y="2037" width="1.0413533834586466" height="15.0" fill="rgb(220,33,32)" rx="2" ry="2" _orig_x="65.1" _orig_width="1.0"/>
<text x="50.90906432748543" y="2047.5" _orig_x="68.14"/>
</g>
<g class="hide">
<title>[chrome] (127 samples, 0.11%)</title><rect x="85.81432748538018" y="1973" width="1.2496240601503759" height="15.0" fill="rgb(249,213,32)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.2"/>
<text x="88.81432748538018" y="1983.5" _orig_x="104.49"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="117" width="0.31240601503759396" height="15.0" fill="rgb(248,86,5)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="127.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.10%)</title><rect x="351.35944026733506" y="2021" width="1.1454887218045113" height="15.0" fill="rgb(250,40,18)" rx="2" ry="2" _orig_x="356.5" _orig_width="1.1"/>
<text x="354.35944026733506" y="2031.5" _orig_x="359.46"/>
</g>
<g class="hide">
<title>ntfs_index_ctx_get (12 samples, 0.01%)</title><rect x="901.9229741019216" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(235,108,19)" rx="2" ry="2" _orig_x="885.2" _orig_width="0.1"/>
<text x="904.9229741019216" y="2047.5" _orig_x="888.16"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (17 samples, 0.01%)</title><rect x="325.3256056808689" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(236,229,13)" rx="2" ry="2" _orig_x="331.5" _orig_width="0.1"/>
<text x="328.3256056808689" y="2047.5" _orig_x="334.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (22 samples, 0.02%)</title><rect x="273.70091896407683" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(218,98,1)" rx="2" ry="2" _orig_x="476.0" _orig_width="0.2"/>
<text x="276.70091896407683" y="1775.5" _orig_x="478.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.06%)</title><rect x="170.47635756056815" y="1797" width="0.8330827067669173" height="15.0" fill="rgb(218,52,40)" rx="2" ry="2" _orig_x="182.8" _orig_width="0.8"/>
<text x="173.47635756056815" y="1807.5" _orig_x="185.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="933.3718462823726" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(252,32,1)" rx="2" ry="2" _orig_x="915.4" _orig_width="0.2"/>
<text x="936.3718462823726" y="2031.5" _orig_x="918.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (103 samples, 0.09%)</title><rect x="758.467000835422" y="1781" width="2.4644945697577274" height="15.0" fill="rgb(215,216,5)" rx="2" ry="2" _orig_x="672.7" _orig_width="1.0"/>
<text x="761.467000835422" y="1791.5" _orig_x="675.67"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (14 samples, 0.01%)</title><rect x="743.9264828738511" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(246,184,8)" rx="2" ry="2" _orig_x="666.8" _orig_width="0.1"/>
<text x="746.9264828738511" y="1775.5" _orig_x="669.79"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (39 samples, 0.03%)</title><rect x="746.6374269005847" y="1813" width="0.985797827903091" height="15.0" fill="rgb(207,9,31)" rx="2" ry="2" _orig_x="667.9" _orig_width="0.4"/>
<text x="749.6374269005847" y="1823.5" _orig_x="670.87"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="853" width="0.31240601503759396" height="15.0" fill="rgb(213,122,34)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="863.5" _orig_x="48.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (903 samples, 0.76%)</title><rect x="869.3692564745197" y="1813" width="21.934001670843777" height="15.0" fill="rgb(228,15,26)" rx="2" ry="2" _orig_x="717.7" _orig_width="8.9"/>
<text x="872.3692564745197" y="1823.5" _orig_x="720.67">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.04%)</title><rect x="21.8" y="1909" width="0.4" height="15.0" fill="rgb(228,87,53)" rx="2" ry="2"/>
<text x="24.80" y="1919.5"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (131 samples, 0.11%)</title><rect x="85.81432748538018" y="2037" width="1.3537593984962406" height="15.0" fill="rgb(241,130,18)" rx="2" ry="2" _orig_x="101.5" _orig_width="1.3"/>
<text x="88.81432748538018" y="2047.5" _orig_x="104.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="82.79440267335009" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(233,145,32)" rx="2" ry="2" _orig_x="98.6" _orig_width="0.2"/>
<text x="85.79440267335009" y="1935.5" _orig_x="101.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="10.8" y="1973" width="0.4" height="15.0" fill="rgb(214,36,14)" rx="2" ry="2"/>
<text x="13.84" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-58157.map] (117 samples, 0.10%)</title><rect x="123.4071846282373" y="1509" width="1.2496240601503759" height="15.0" fill="rgb(250,173,42)" rx="2" ry="2" _orig_x="137.6" _orig_width="1.2"/>
<text x="126.4071846282373" y="1519.5" _orig_x="140.60"/>
</g>
<g class="hide">
<title>[code] (30 samples, 0.03%)</title><rect x="18.0" y="1285" width="0.3" height="15.0" fill="rgb(228,34,15)" rx="2" ry="2"/>
<text x="20.97" y="1295.5"/>
</g>
<g class="hide">
<title>[code] (19 samples, 0.02%)</title><rect x="98.83124477861325" y="1605" width="0.10413533834586466" height="15.0" fill="rgb(241,170,1)" rx="2" ry="2" _orig_x="114.0" _orig_width="0.1"/>
<text x="101.83124477861325" y="1615.5" _orig_x="116.96"/>
</g>
<g class="hide">
<title>[unknown] (27 samples, 0.02%)</title><rect x="10.836883876357616" y="197" width="0.20827067669172933" height="15.0" fill="rgb(225,166,14)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.2"/>
<text x="13.836883876357616" y="207.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>__GI___libc_open (47 samples, 0.04%)</title><rect x="96.54026733500423" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(208,105,49)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="2047.5" _orig_x="114.83"/>
</g>
<g class="hide">
<title>[unknown] (2,480 samples, 2.09%)</title><rect x="861.4" y="2053" width="24.7" height="15.0" fill="rgb(241,38,3)" rx="2" ry="2"/>
<text x="864.45" y="2063.5">[..</text>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (15 samples, 0.01%)</title><rect x="64.46532999164583" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(248,130,37)" rx="2" ry="2" _orig_x="391.1" _orig_width="0.1"/>
<text x="67.46532999164583" y="1775.5" _orig_x="394.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="23.5" y="1861" width="0.1" height="15.0" fill="rgb(208,163,52)" rx="2" ry="2"/>
<text x="26.46" y="1871.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (74 samples, 0.06%)</title><rect x="1062.5856307435254" y="1797" width="1.7251461988304093" height="15.0" fill="rgb(205,102,29)" rx="2" ry="2" _orig_x="796.1" _orig_width="0.7"/>
<text x="1065.5856307435254" y="1807.5" _orig_x="799.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="12.919590643274908" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(212,83,39)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1919.5" _orig_x="34.53"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (31 samples, 0.03%)</title><rect x="497.72347535505423" y="1749" width="0.7393483709273182" height="15.0" fill="rgb(207,21,48)" rx="2" ry="2" _orig_x="566.9" _orig_width="0.3"/>
<text x="500.72347535505423" y="1759.5" _orig_x="569.90"/>
</g>
<g class="hide">
<title>[code] (18 samples, 0.02%)</title><rect x="14.8" y="1829" width="0.1" height="15.0" fill="rgb(235,144,4)" rx="2" ry="2"/>
<text x="17.75" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,697 samples, 18.25%)</title><rect x="938.7868838763576" y="2005" width="224.2033834586466" height="15.0" fill="rgb(223,83,43)" rx="2" ry="2" _orig_x="920.6" _orig_width="215.3"/>
<text x="941.7868838763576" y="2015.5" _orig_x="923.61">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (31 samples, 0.03%)</title><rect x="907.81537176274" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(243,197,36)" rx="2" ry="2" _orig_x="733.3" _orig_width="0.3"/>
<text x="910.81537176274" y="1807.5" _orig_x="736.29"/>
</g>
<g class="hide">
<title>com.alibabainc. (10,382 samples, 8.73%)</title><rect x="175.2" y="2069" width="103.0" height="15.0" fill="rgb(218,27,33)" rx="2" ry="2"/>
<text x="178.22" y="2079.5">com.alibabai..</text>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (13 samples, 0.01%)</title><rect x="1158.454469507101" y="1909" width="0.24644945697577275" height="15.0" fill="rgb(212,5,38)" rx="2" ry="2" _orig_x="835.0" _orig_width="0.1"/>
<text x="1161.454469507101" y="1919.5" _orig_x="838.00"/>
</g>
<g class="hide">
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskStarted (19 samples, 0.02%)</title><rect x="167.14402673350045" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(210,156,6)" rx="2" ry="2" _orig_x="179.6" _orig_width="0.2"/>
<text x="170.14402673350045" y="1775.5" _orig_x="182.62"/>
</g>
<g class="hide">
<title>[perf-32996.map] (84 samples, 0.07%)</title><rect x="17.6" y="1541" width="0.8" height="15.0" fill="rgb(207,76,3)" rx="2" ry="2"/>
<text x="20.59" y="1551.5"/>
</g>
<g class="hide">
<title>__libc_write (14 samples, 0.01%)</title><rect x="31.5" y="2053" width="0.2" height="15.0" fill="rgb(208,137,26)" rx="2" ry="2"/>
<text x="34.51" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (46 samples, 0.04%)</title><rect x="495.998329156224" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(238,85,53)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.5"/>
<text x="498.998329156224" y="1775.5" _orig_x="569.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (147 samples, 0.12%)</title><rect x="435.37176274018384" y="1845" width="3.6967418546365916" height="15.0" fill="rgb(243,21,36)" rx="2" ry="2" _orig_x="541.6" _orig_width="1.5"/>
<text x="438.37176274018384" y="1855.5" _orig_x="544.61"/>
</g>
<g class="hide">
<title>[libxul.so] (13 samples, 0.01%)</title><rect x="23.0" y="2053" width="0.2" height="15.0" fill="rgb(230,15,37)" rx="2" ry="2"/>
<text x="26.04" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1205" width="0.20827067669172933" height="15.0" fill="rgb(213,32,48)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1215.5" _orig_x="328.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (955 samples, 0.80%)</title><rect x="1113.107769423559" y="1829" width="23.41269841269841" height="15.0" fill="rgb(250,36,7)" rx="2" ry="2" _orig_x="816.6" _orig_width="9.5"/>
<text x="1116.107769423559" y="1839.5" _orig_x="819.62">s..</text>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (41 samples, 0.03%)</title><rect x="536.908939014202" y="1813" width="0.985797827903091" height="15.0" fill="rgb(242,72,33)" rx="2" ry="2" _orig_x="582.8" _orig_width="0.4"/>
<text x="539.908939014202" y="1823.5" _orig_x="585.78"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (580 samples, 0.49%)</title><rect x="417.62740183792806" y="1813" width="14.047619047619047" height="15.0" fill="rgb(223,37,8)" rx="2" ry="2" _orig_x="534.4" _orig_width="5.7"/>
<text x="420.62740183792806" y="1823.5" _orig_x="537.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(205,165,51)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="2031.5" _orig_x="918.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1269" width="0.31240601503759396" height="15.0" fill="rgb(232,56,15)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1279.5" _orig_x="141.29"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (214 samples, 0.18%)</title><rect x="1173.2414369256473" y="1941" width="5.175438596491228" height="15.0" fill="rgb(238,215,8)" rx="2" ry="2" _orig_x="841.0" _orig_width="2.1"/>
<text x="1176.2414369256473" y="1951.5" _orig_x="843.97"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (197 samples, 0.17%)</title><rect x="119.67000835421888" y="1797" width="4.928989139515455" height="15.0" fill="rgb(248,88,25)" rx="2" ry="2" _orig_x="413.5" _orig_width="2.0"/>
<text x="122.67000835421888" y="1807.5" _orig_x="416.50"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="645" width="0.31240601503759396" height="15.0" fill="rgb(247,218,4)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="655.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1493" width="0.31240601503759396" height="15.0" fill="rgb(240,106,26)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1503.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[perf-58119.map] (339 samples, 0.29%)</title><rect x="114.3474101921471" y="1493" width="3.5406015037593983" height="15.0" fill="rgb(210,226,28)" rx="2" ry="2" _orig_x="128.9" _orig_width="3.4"/>
<text x="117.3474101921471" y="1503.5" _orig_x="131.90"/>
</g>
<g class="hide">
<title>blink::PerformanceMonitor::Will (44 samples, 0.04%)</title><rect x="203.38312447786137" y="1717" width="0.41654135338345866" height="15.0" fill="rgb(209,125,29)" rx="2" ry="2" _orig_x="214.4" _orig_width="0.4"/>
<text x="206.38312447786137" y="1727.5" _orig_x="217.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.05%)</title><rect x="153.5022974101922" y="1685" width="0.6248120300751879" height="15.0" fill="rgb(206,97,36)" rx="2" ry="2" _orig_x="166.5" _orig_width="0.6"/>
<text x="156.5022974101922" y="1695.5" _orig_x="169.53"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (17 samples, 0.01%)</title><rect x="414.4235588972431" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(216,171,30)" rx="2" ry="2" _orig_x="533.1" _orig_width="0.2"/>
<text x="417.4235588972431" y="1823.5" _orig_x="536.09"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (12 samples, 0.01%)</title><rect x="964.9916457811194" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(214,217,41)" rx="2" ry="2" _orig_x="756.5" _orig_width="0.1"/>
<text x="967.9916457811194" y="1855.5" _orig_x="759.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (339 samples, 0.29%)</title><rect x="87.58462823725988" y="1973" width="3.5406015037593983" height="15.0" fill="rgb(253,72,5)" rx="2" ry="2" _orig_x="103.2" _orig_width="3.4"/>
<text x="90.58462823725988" y="1983.5" _orig_x="106.22"/>
</g>
<g class="hide">
<title>[chrome] (14 samples, 0.01%)</title><rect x="11.7" y="1653" width="0.1" height="15.0" fill="rgb(248,222,12)" rx="2" ry="2"/>
<text x="14.68" y="1663.5"/>
</g>
<g class="hide">
<title>kworker/10:1-ev (96 samples, 0.08%)</title><rect x="349.0" y="2069" width="0.9" height="15.0" fill="rgb(241,74,30)" rx="2" ry="2"/>
<text x="351.96" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (27 samples, 0.02%)</title><rect x="1012.063492063492" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(248,32,28)" rx="2" ry="2" _orig_x="775.6" _orig_width="0.2"/>
<text x="1015.063492063492" y="1807.5" _orig_x="778.56"/>
</g>
<g>
<title>_int_free (11 samples, 0.01%)</title><rect x="931.7209690893901" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(236,54,50)" rx="2" ry="2" _orig_x="743.0" _orig_width="0.1"/>
<text x="934.7209690893901" y="1855.5" _orig_x="746.00"/>
</g>
<g>
<title>Row::~Row (709 samples, 0.60%)</title><rect x="224.4110275689223" y="1845" width="17.497911445279865" height="15.0" fill="rgb(248,54,19)" rx="2" ry="2" _orig_x="456.0" _orig_width="7.1"/>
<text x="227.4110275689223" y="1855.5" _orig_x="459.03"/>
</g>
<g class="hide">
<title>[libjvm.so] (34 samples, 0.03%)</title><rect x="43.951921470342576" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(242,123,37)" rx="2" ry="2" _orig_x="61.3" _orig_width="0.3"/>
<text x="46.951921470342576" y="2047.5" _orig_x="64.28"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (177 samples, 0.15%)</title><rect x="1094.8705096073518" y="1861" width="4.43609022556391" height="15.0" fill="rgb(215,76,27)" rx="2" ry="2" _orig_x="809.2" _orig_width="1.8"/>
<text x="1097.8705096073518" y="1871.5" _orig_x="812.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="30.41432748538017" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(205,168,1)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1919.5" _orig_x="51.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="83.21094402673356" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(220,104,12)" rx="2" ry="2" _orig_x="99.0" _orig_width="0.2"/>
<text x="86.21094402673356" y="1807.5" _orig_x="102.04"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (199 samples, 0.17%)</title><rect x="936.1570593149538" y="1861" width="4.928989139515455" height="15.0" fill="rgb(232,20,48)" rx="2" ry="2" _orig_x="744.8" _orig_width="2.0"/>
<text x="939.1570593149538" y="1871.5" _orig_x="747.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.03%)</title><rect x="355.73312447786134" y="1925" width="0.41654135338345866" height="15.0" fill="rgb(254,95,45)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1935.5" _orig_x="363.69"/>
</g>
<g class="hide">
<title>blink::V8Window::ClearIntervalMethodCallback (11 samples, 0.01%)</title><rect x="184.9511695906433" y="1525" width="0.10413533834586466" height="15.0" fill="rgb(235,205,53)" rx="2" ry="2" _orig_x="196.7" _orig_width="0.1"/>
<text x="187.9511695906433" y="1535.5" _orig_x="199.68"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (52 samples, 0.04%)</title><rect x="899.6825396825396" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(251,194,16)" rx="2" ry="2" _orig_x="730.0" _orig_width="0.5"/>
<text x="902.6825396825396" y="1823.5" _orig_x="733.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.04%)</title><rect x="96.54026733500423" y="2005" width="0.5206766917293233" height="15.0" fill="rgb(207,191,17)" rx="2" ry="2" _orig_x="111.8" _orig_width="0.5"/>
<text x="99.54026733500423" y="2015.5" _orig_x="114.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="11.253425229741072" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(246,20,1)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1919.5" _orig_x="32.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (41 samples, 0.03%)</title><rect x="618.9766081871346" y="1765" width="0.985797827903091" height="15.0" fill="rgb(232,166,35)" rx="2" ry="2" _orig_x="616.1" _orig_width="0.4"/>
<text x="621.9766081871346" y="1775.5" _orig_x="619.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="19.6" y="1813" width="0.2" height="15.0" fill="rgb(242,112,35)" rx="2" ry="2"/>
<text x="22.59" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (82 samples, 0.07%)</title><rect x="130.28011695906437" y="1877" width="0.8330827067669173" height="15.0" fill="rgb(220,1,39)" rx="2" ry="2" _orig_x="144.2" _orig_width="0.8"/>
<text x="133.28011695906437" y="1887.5" _orig_x="147.16"/>
</g>
<g class="hide">
<title>[unknown] (144 samples, 0.12%)</title><rect x="49.679365079365134" y="149" width="1.4578947368421051" height="15.0" fill="rgb(231,2,47)" rx="2" ry="2" _orig_x="66.8" _orig_width="1.4"/>
<text x="52.679365079365134" y="159.5" _orig_x="69.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (28 samples, 0.02%)</title><rect x="980.2715121136174" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(205,152,28)" rx="2" ry="2" _orig_x="762.7" _orig_width="0.3"/>
<text x="983.2715121136174" y="1791.5" _orig_x="765.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="20.1" y="1957" width="0.2" height="15.0" fill="rgb(254,227,51)" rx="2" ry="2"/>
<text x="23.12" y="1967.5"/>
</g>
<g class="hide">
<title>[chrome] (11 samples, 0.01%)</title><rect x="86.75154553049296" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(244,2,53)" rx="2" ry="2" _orig_x="102.4" _orig_width="0.1"/>
<text x="89.75154553049296" y="1711.5" _orig_x="105.43"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="453" width="0.31240601503759396" height="15.0" fill="rgb(253,191,49)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="463.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>pa_resampler_max_block_size (16 samples, 0.01%)</title><rect x="91.2" y="2053" width="0.2" height="15.0" fill="rgb(205,28,45)" rx="2" ry="2"/>
<text x="94.25" y="2063.5"/>
</g>
<g class="hide">
<title>Builtins_JSBuiltinsConstructStub (119 samples, 0.10%)</title><rect x="163.91583124477867" y="1573" width="1.1454887218045113" height="15.0" fill="rgb(253,219,8)" rx="2" ry="2" _orig_x="176.5" _orig_width="1.1"/>
<text x="166.91583124477867" y="1583.5" _orig_x="179.46"/>
</g>
<g class="hide">
<title>_int_malloc (16 samples, 0.01%)</title><rect x="329.5" y="2053" width="0.2" height="15.0" fill="rgb(228,7,47)" rx="2" ry="2"/>
<text x="332.50" y="2063.5"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (18 samples, 0.02%)</title><rect x="943.0576441102756" y="1893" width="0.4928989139515455" height="15.0" fill="rgb(210,62,28)" rx="2" ry="2" _orig_x="747.6" _orig_width="0.2"/>
<text x="946.0576441102756" y="1903.5" _orig_x="750.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.10%)</title><rect x="347.7147034252298" y="1957" width="1.2496240601503759" height="15.0" fill="rgb(249,75,1)" rx="2" ry="2" _orig_x="353.0" _orig_width="1.2"/>
<text x="350.7147034252298" y="1967.5" _orig_x="355.96"/>
</g>
<g class="hide">
<title>[unknown] (64 samples, 0.05%)</title><rect x="318.8692147034253" y="1989" width="0.7289473684210526" height="15.0" fill="rgb(237,105,30)" rx="2" ry="2" _orig_x="325.3" _orig_width="0.7"/>
<text x="321.8692147034253" y="1999.5" _orig_x="328.35"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (24 samples, 0.02%)</title><rect x="322.7" y="2053" width="0.2" height="15.0" fill="rgb(225,88,39)" rx="2" ry="2"/>
<text x="325.70" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.04%)</title><rect x="302.936507936508" y="1797" width="0.5206766917293233" height="15.0" fill="rgb(253,73,3)" rx="2" ry="2" _orig_x="310.0" _orig_width="0.5"/>
<text x="305.936507936508" y="1807.5" _orig_x="313.04"/>
</g>
<g class="hide">
<title>[chrome] (32 samples, 0.03%)</title><rect x="92.06244778613205" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(220,126,8)" rx="2" ry="2" _orig_x="107.5" _orig_width="0.3"/>
<text x="95.06244778613205" y="1727.5" _orig_x="110.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="355.5248538011696" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(249,47,42)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="2047.5" _orig_x="363.45"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1573" width="2.2909774436090227" height="15.0" fill="rgb(210,172,21)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1583.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="28.223024468511806" y="2005" width="0.4733253108704372" height="15.0" fill="rgb(227,147,20)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="2015.5" _orig_x="371.76"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (328 samples, 0.28%)</title><rect x="983.2289055973266" y="1749" width="8.132832080200501" height="15.0" fill="rgb(228,64,23)" rx="2" ry="2" _orig_x="763.9" _orig_width="3.3"/>
<text x="986.2289055973266" y="1759.5" _orig_x="766.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (178 samples, 0.15%)</title><rect x="347.08989139515455" y="1989" width="1.874436090225564" height="15.0" fill="rgb(211,42,5)" rx="2" ry="2" _orig_x="352.4" _orig_width="1.8"/>
<text x="350.08989139515455" y="1999.5" _orig_x="355.43"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (53 samples, 0.04%)</title><rect x="1037.9406850459482" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(235,92,17)" rx="2" ry="2" _orig_x="786.1" _orig_width="0.6"/>
<text x="1040.9406850459482" y="1807.5" _orig_x="789.14"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (81 samples, 0.07%)</title><rect x="1033.9974937343359" y="1829" width="1.971595655806182" height="15.0" fill="rgb(224,32,4)" rx="2" ry="2" _orig_x="784.5" _orig_width="0.8"/>
<text x="1036.9974937343359" y="1839.5" _orig_x="787.46"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (13 samples, 0.01%)</title><rect x="1117.7903091060984" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(228,128,20)" rx="2" ry="2" _orig_x="818.5" _orig_width="0.1"/>
<text x="1120.7903091060984" y="1775.5" _orig_x="821.50"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (211 samples, 0.18%)</title><rect x="1126.4160401002505" y="1765" width="5.175438596491228" height="15.0" fill="rgb(226,143,8)" rx="2" ry="2" _orig_x="822.0" _orig_width="2.1"/>
<text x="1129.4160401002505" y="1775.5" _orig_x="824.99"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::SetObjectProperty (16 samples, 0.01%)</title><rect x="124.96921470342528" y="1861" width="0.10413533834586466" height="15.0" fill="rgb(242,81,10)" rx="2" ry="2" _orig_x="139.1" _orig_width="0.1"/>
<text x="127.96921470342528" y="1871.5" _orig_x="142.06"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (20 samples, 0.02%)</title><rect x="1098.0743525480368" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(250,29,17)" rx="2" ry="2" _orig_x="810.5" _orig_width="0.2"/>
<text x="1101.0743525480368" y="1839.5" _orig_x="813.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="65.29966583124482" y="1781" width="0.20827067669172933" height="15.0" fill="rgb(246,62,11)" rx="2" ry="2" _orig_x="81.8" _orig_width="0.2"/>
<text x="68.29966583124482" y="1791.5" _orig_x="84.83"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (11 samples, 0.01%)</title><rect x="57.071846282372654" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(233,76,24)" rx="2" ry="2" _orig_x="388.1" _orig_width="0.1"/>
<text x="60.071846282372654" y="1775.5" _orig_x="391.07"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (12 samples, 0.01%)</title><rect x="1158.454469507101" y="1893" width="0.24644945697577275" height="15.0" fill="rgb(248,102,29)" rx="2" ry="2" _orig_x="835.0" _orig_width="0.1"/>
<text x="1161.454469507101" y="1903.5" _orig_x="838.01"/>
</g>
<g class="hide">
<title>[unknown] (38 samples, 0.03%)</title><rect x="330.7" y="2053" width="0.4" height="15.0" fill="rgb(212,209,49)" rx="2" ry="2"/>
<text x="333.68" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="28.956432748538067" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(240,9,5)" rx="2" ry="2" _orig_x="46.9" _orig_width="0.2"/>
<text x="31.956432748538067" y="1935.5" _orig_x="49.93"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,421 samples, 1.19%)</title><rect x="576.3408521303256" y="1797" width="34.749373433583955" height="15.0" fill="rgb(216,15,27)" rx="2" ry="2" _orig_x="598.8" _orig_width="14.1"/>
<text x="579.3408521303256" y="1807.5" _orig_x="601.83">std..</text>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (91 samples, 0.08%)</title><rect x="653.4795321637428" y="1829" width="2.218045112781955" height="15.0" fill="rgb(224,203,32)" rx="2" ry="2" _orig_x="630.1" _orig_width="0.9"/>
<text x="656.4795321637428" y="1839.5" _orig_x="633.06"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (16 samples, 0.01%)</title><rect x="516.9465329991647" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(231,217,40)" rx="2" ry="2" _orig_x="574.7" _orig_width="0.1"/>
<text x="519.9465329991647" y="1743.5" _orig_x="577.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.18%)</title><rect x="240.0387635756057" y="1941" width="2.2909774436090227" height="15.0" fill="rgb(240,110,17)" rx="2" ry="2" _orig_x="249.6" _orig_width="2.2"/>
<text x="243.0387635756057" y="1951.5" _orig_x="252.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.167710944026787" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(212,119,37)" rx="2" ry="2" _orig_x="37.5" _orig_width="0.2"/>
<text x="22.167710944026787" y="1967.5" _orig_x="40.53"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (914 samples, 0.77%)</title><rect x="173.88888888888889" y="1813" width="22.18045112781955" height="15.0" fill="rgb(210,86,31)" rx="2" ry="2" _orig_x="435.5" _orig_width="9.0"/>
<text x="176.88888888888889" y="1823.5" _orig_x="438.48"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1109" width="0.31240601503759396" height="15.0" fill="rgb(208,212,54)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1119.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (13 samples, 0.01%)</title><rect x="1144.8997493734335" y="1861" width="0.24644945697577275" height="15.0" fill="rgb(244,65,27)" rx="2" ry="2" _orig_x="829.5" _orig_width="0.1"/>
<text x="1147.8997493734335" y="1871.5" _orig_x="832.45"/>
</g>
<g class="hide">
<title>[unknown] (1,371 samples, 1.15%)</title><rect x="884.636507936508" y="2037" width="14.162406015037593" height="15.0" fill="rgb(209,165,34)" rx="2" ry="2" _orig_x="868.6" _orig_width="13.6"/>
<text x="887.636507936508" y="2047.5" _orig_x="871.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="124.13613199665838" y="1253" width="0.31240601503759396" height="15.0" fill="rgb(249,7,21)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1263.5" _orig_x="141.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="15.7" y="2005" width="0.2" height="15.0" fill="rgb(242,67,2)" rx="2" ry="2"/>
<text x="18.74" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="162.3538011695907" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(245,83,44)" rx="2" ry="2" _orig_x="175.0" _orig_width="0.1"/>
<text x="165.3538011695907" y="1951.5" _orig_x="177.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="235.977485380117" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(229,22,32)" rx="2" ry="2" _orig_x="245.7" _orig_width="0.2"/>
<text x="238.977485380117" y="1951.5" _orig_x="248.67"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (15 samples, 0.01%)</title><rect x="1070.2255639097746" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(254,147,17)" rx="2" ry="2" _orig_x="799.2" _orig_width="0.1"/>
<text x="1073.2255639097746" y="1791.5" _orig_x="802.18"/>
</g>
<g class="hide">
<title>__poll (28 samples, 0.02%)</title><rect x="11.149289891395211" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(248,94,18)" rx="2" ry="2" _orig_x="29.8" _orig_width="0.3"/>
<text x="14.149289891395211" y="2031.5" _orig_x="32.78"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1301" width="0.31240601503759396" height="15.0" fill="rgb(254,133,29)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1311.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>scheduling_metrics::ThreadMetrics::RecordTaskMetrics (31 samples, 0.03%)</title><rect x="211.60981620718468" y="1685" width="0.31240601503759396" height="15.0" fill="rgb(205,152,25)" rx="2" ry="2" _orig_x="222.3" _orig_width="0.3"/>
<text x="214.60981620718468" y="1695.5" _orig_x="225.28"/>
</g>
<g class="hide">
<title>qt_meta_stringdata_QObject (16 samples, 0.01%)</title><rect x="277.8" y="2053" width="0.1" height="15.0" fill="rgb(221,207,38)" rx="2" ry="2"/>
<text x="280.76" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (16 samples, 0.01%)</title><rect x="116.84665831244784" y="1253" width="0.20827067669172933" height="15.0" fill="rgb(208,44,23)" rx="2" ry="2" _orig_x="131.3" _orig_width="0.2"/>
<text x="119.84665831244784" y="1263.5" _orig_x="134.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.06%)</title><rect x="54.67786131996663" y="1781" width="0.8330827067669173" height="15.0" fill="rgb(232,111,24)" rx="2" ry="2" _orig_x="71.6" _orig_width="0.8"/>
<text x="57.67786131996663" y="1791.5" _orig_x="74.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="153.7105680868839" y="1669" width="0.41654135338345866" height="15.0" fill="rgb(209,117,40)" rx="2" ry="2" _orig_x="166.7" _orig_width="0.4"/>
<text x="156.7105680868839" y="1679.5" _orig_x="169.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="94.76996658312453" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(248,83,6)" rx="2" ry="2" _orig_x="110.1" _orig_width="0.5"/>
<text x="97.76996658312453" y="2031.5" _orig_x="113.08"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(208,133,52)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1983.5" _orig_x="99.72"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (18 samples, 0.02%)</title><rect x="645.8395989974937" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(212,174,9)" rx="2" ry="2" _orig_x="627.0" _orig_width="0.1"/>
<text x="648.8395989974937" y="1743.5" _orig_x="629.95"/>
</g>
<g class="hide">
<title>[chrome] (240 samples, 0.20%)</title><rect x="91.12522974101927" y="1989" width="2.4992481203007517" height="15.0" fill="rgb(237,184,2)" rx="2" ry="2" _orig_x="106.6" _orig_width="2.4"/>
<text x="94.12522974101927" y="1999.5" _orig_x="109.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="270.3421470342523" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(214,10,36)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1903.5" _orig_x="281.71"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (564 samples, 0.47%)</title><rect x="224.65747702589812" y="1829" width="13.801169590643275" height="15.0" fill="rgb(230,24,49)" rx="2" ry="2" _orig_x="456.1" _orig_width="5.6"/>
<text x="227.65747702589812" y="1839.5" _orig_x="459.13"/>
</g>
<g class="hide">
<title>[code] (31 samples, 0.03%)</title><rect x="99.8725981620719" y="1925" width="0.31240601503759396" height="15.0" fill="rgb(226,146,44)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.3"/>
<text x="102.8725981620719" y="1935.5" _orig_x="117.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="235.87335004177115" y="1973" width="0.31240601503759396" height="15.0" fill="rgb(223,153,27)" rx="2" ry="2" _orig_x="245.6" _orig_width="0.3"/>
<text x="238.87335004177115" y="1983.5" _orig_x="248.63"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (258 samples, 0.22%)</title><rect x="723.9640768588138" y="1845" width="6.407685881370091" height="15.0" fill="rgb(213,28,36)" rx="2" ry="2" _orig_x="658.7" _orig_width="2.6"/>
<text x="726.9640768588138" y="1855.5" _orig_x="661.69"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (15 samples, 0.01%)</title><rect x="847.4352548036757" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(213,68,54)" rx="2" ry="2" _orig_x="708.8" _orig_width="0.2"/>
<text x="850.4352548036757" y="1823.5" _orig_x="711.82"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="681.3283208020049" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(213,194,40)" rx="2" ry="2" _orig_x="641.4" _orig_width="0.2"/>
<text x="684.3283208020049" y="1855.5" _orig_x="644.41"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (36 samples, 0.03%)</title><rect x="737.7652464494568" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(221,125,37)" rx="2" ry="2" _orig_x="664.3" _orig_width="0.3"/>
<text x="740.7652464494568" y="1791.5" _orig_x="667.29"/>
</g>
<g class="hide">
<title>WTF::AtomicString::AtomicString (41 samples, 0.03%)</title><rect x="196.30192147034256" y="1429" width="0.41654135338345866" height="15.0" fill="rgb(239,135,13)" rx="2" ry="2" _orig_x="207.6" _orig_width="0.4"/>
<text x="199.30192147034256" y="1439.5" _orig_x="210.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="19.896658312447844" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(248,102,45)" rx="2" ry="2" _orig_x="38.2" _orig_width="0.1"/>
<text x="22.896658312447844" y="1967.5" _orig_x="41.17"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (33 samples, 0.03%)</title><rect x="58.84327485380122" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(247,127,31)" rx="2" ry="2" _orig_x="75.6" _orig_width="0.3"/>
<text x="61.84327485380122" y="2047.5" _orig_x="78.59"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (133 samples, 0.11%)</title><rect x="211.10275689223062" y="1765" width="3.2038429406850457" height="15.0" fill="rgb(243,29,44)" rx="2" ry="2" _orig_x="450.6" _orig_width="1.3"/>
<text x="214.10275689223062" y="1775.5" _orig_x="453.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="97.68575605680874" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(251,148,25)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="2015.5" _orig_x="115.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.07%)</title><rect x="302.62410192147036" y="2021" width="0.8330827067669173" height="15.0" fill="rgb(233,176,27)" rx="2" ry="2" _orig_x="309.7" _orig_width="0.8"/>
<text x="305.62410192147036" y="2031.5" _orig_x="312.73"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (393 samples, 0.33%)</title><rect x="490.32999164578104" y="1829" width="9.611528822055138" height="15.0" fill="rgb(212,132,21)" rx="2" ry="2" _orig_x="563.9" _orig_width="3.9"/>
<text x="493.32999164578104" y="1839.5" _orig_x="566.89"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (72 samples, 0.06%)</title><rect x="972.8780284043443" y="1765" width="1.7251461988304093" height="15.0" fill="rgb(235,7,22)" rx="2" ry="2" _orig_x="759.7" _orig_width="0.7"/>
<text x="975.8780284043443" y="1775.5" _orig_x="762.68"/>
</g>
<g class="hide">
<title>v8::Function::Call (114 samples, 0.10%)</title><rect x="119.76244778613204" y="1717" width="1.2496240601503759" height="15.0" fill="rgb(215,17,8)" rx="2" ry="2" _orig_x="134.1" _orig_width="1.2"/>
<text x="122.76244778613204" y="1727.5" _orig_x="137.14"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (23 samples, 0.02%)</title><rect x="554.406850459482" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(252,53,19)" rx="2" ry="2" _orig_x="589.9" _orig_width="0.2"/>
<text x="557.406850459482" y="1775.5" _orig_x="592.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (117 samples, 0.10%)</title><rect x="1071.7042606516288" y="1781" width="2.7109440267335008" height="15.0" fill="rgb(225,155,13)" rx="2" ry="2" _orig_x="799.8" _orig_width="1.1"/>
<text x="1074.7042606516288" y="1791.5" _orig_x="802.76"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (13 samples, 0.01%)</title><rect x="184.73266499582283" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(248,185,25)" rx="2" ry="2" _orig_x="439.9" _orig_width="0.1"/>
<text x="187.73266499582283" y="1727.5" _orig_x="442.90"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="101" width="0.20827067669172933" height="15.0" fill="rgb(229,80,0)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="111.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>JSScript::traceChildren (42 samples, 0.04%)</title><rect x="282.0053049289892" y="1893" width="0.41654135338345866" height="15.0" fill="rgb(242,127,13)" rx="2" ry="2" _orig_x="289.9" _orig_width="0.4"/>
<text x="285.0053049289892" y="1903.5" _orig_x="292.85"/>
</g>
<g class="hide">
<title>[firefox] (14 samples, 0.01%)</title><rect x="10.836883876357616" y="37" width="0.10413533834586466" height="15.0" fill="rgb(241,112,19)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.1"/>
<text x="13.836883876357616" y="47.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>v8::internal::Context::global_proxy (20 samples, 0.02%)</title><rect x="178.18237259816212" y="1605" width="0.20827067669172933" height="15.0" fill="rgb(209,54,20)" rx="2" ry="2" _orig_x="190.2" _orig_width="0.2"/>
<text x="181.18237259816212" y="1615.5" _orig_x="193.21"/>
</g>
<g class="hide">
<title>blink::Event::Event (24 samples, 0.02%)</title><rect x="188.38763575605685" y="1429" width="0.20827067669172933" height="15.0" fill="rgb(205,182,39)" rx="2" ry="2" _orig_x="200.0" _orig_width="0.2"/>
<text x="191.38763575605685" y="1439.5" _orig_x="202.96"/>
</g>
<g class="hide">
<title>[perf-15821.map] (32 samples, 0.03%)</title><rect x="92.89553049289897" y="1509" width="0.41654135338345866" height="15.0" fill="rgb(224,28,51)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1519.5" _orig_x="111.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (173 samples, 0.15%)</title><rect x="106.43312447786137" y="1829" width="1.874436090225564" height="15.0" fill="rgb(212,179,17)" rx="2" ry="2" _orig_x="121.3" _orig_width="1.8"/>
<text x="109.43312447786137" y="1839.5" _orig_x="124.33"/>
</g>
<g>
<title>malloc (13 samples, 0.01%)</title><rect x="354.782790309106" y="1717" width="0.4928989139515455" height="15.0" fill="rgb(254,165,30)" rx="2" ry="2" _orig_x="508.9" _orig_width="0.2"/>
<text x="357.782790309106" y="1727.5" _orig_x="511.95"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1189" width="0.20827067669172933" height="15.0" fill="rgb(213,0,52)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1199.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="357" width="0.31240601503759396" height="15.0" fill="rgb(219,87,42)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="367.5" _orig_x="48.87"/>
</g>
<g class="hide">
<title>CefCppToCRefCounted&lt;CefAppCppToC, CefApp, _cef_app_t&gt;::Release (5,407 samples, 4.55%)</title><rect x="170.16395154553055" y="2037" width="55.81654135338346" height="15.0" fill="rgb(229,40,25)" rx="2" ry="2" _orig_x="182.5" _orig_width="53.6"/>
<text x="173.16395154553055" y="2047.5" _orig_x="185.47">CefCppToCRefCounted&lt;CefAppCppToC, CefApp, _cef_app_t&gt;::Release </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(243,150,19)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="1951.5" _orig_x="918.65"/>
</g>
<g>
<title>Field::Field (35 samples, 0.03%)</title><rect x="329.39849624060156" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(205,181,18)" rx="2" ry="2" _orig_x="498.6" _orig_width="0.3"/>
<text x="332.39849624060156" y="1839.5" _orig_x="501.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.10%)</title><rect x="902.9643274853802" y="2021" width="1.2496240601503759" height="15.0" fill="rgb(234,117,14)" rx="2" ry="2" _orig_x="886.2" _orig_width="1.2"/>
<text x="905.9643274853802" y="2031.5" _orig_x="889.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="28.223024468511806" y="1909" width="0.4733253108704372" height="15.0" fill="rgb(245,115,26)" rx="2" ry="2" _orig_x="368.8" _orig_width="0.2"/>
<text x="31.223024468511806" y="1919.5" _orig_x="371.82"/>
</g>
<g class="hide">
<title>ppoll (25 samples, 0.02%)</title><rect x="913.6" y="2053" width="0.2" height="15.0" fill="rgb(220,34,30)" rx="2" ry="2"/>
<text x="916.58" y="2063.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (92 samples, 0.08%)</title><rect x="263.1" y="2053" width="0.9" height="15.0" fill="rgb(254,51,44)" rx="2" ry="2"/>
<text x="266.10" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="355.73312447786134" y="1989" width="0.41654135338345866" height="15.0" fill="rgb(210,108,0)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="1999.5" _orig_x="363.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.05%)</title><rect x="914.4192147034253" y="1925" width="0.6248120300751879" height="15.0" fill="rgb(252,71,29)" rx="2" ry="2" _orig_x="897.2" _orig_width="0.6"/>
<text x="917.4192147034253" y="1935.5" _orig_x="900.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24 samples, 0.02%)</title><rect x="43.63951545530498" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(226,189,34)" rx="2" ry="2" _orig_x="61.0" _orig_width="0.3"/>
<text x="46.63951545530498" y="2031.5" _orig_x="64.04"/>
</g>
<g class="hide">
<title>[unknown] (23 samples, 0.02%)</title><rect x="319.077485380117" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(235,168,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1551.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.13%)</title><rect x="53.844778613199715" y="2005" width="1.6661654135338346" height="15.0" fill="rgb(253,186,31)" rx="2" ry="2" _orig_x="70.8" _orig_width="1.6"/>
<text x="56.844778613199715" y="2015.5" _orig_x="73.85"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (34 samples, 0.03%)</title><rect x="209.1311612364244" y="1749" width="0.985797827903091" height="15.0" fill="rgb(225,83,9)" rx="2" ry="2" _orig_x="449.8" _orig_width="0.4"/>
<text x="212.1311612364244" y="1759.5" _orig_x="452.84"/>
</g>
<g class="hide">
<title>[perf-58119.map] (308 samples, 0.26%)</title><rect x="114.65981620718468" y="1461" width="3.2281954887218047" height="15.0" fill="rgb(208,70,46)" rx="2" ry="2" _orig_x="129.2" _orig_width="3.1"/>
<text x="117.65981620718468" y="1471.5" _orig_x="132.21"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (25 samples, 0.02%)</title><rect x="223.42522974101925" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(209,104,2)" rx="2" ry="2" _orig_x="455.6" _orig_width="0.3"/>
<text x="226.42522974101925" y="1807.5" _orig_x="458.62"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (633 samples, 0.53%)</title><rect x="732.5898078529659" y="1845" width="15.526315789473683" height="15.0" fill="rgb(216,183,44)" rx="2" ry="2" _orig_x="662.2" _orig_width="6.3"/>
<text x="735.5898078529659" y="1855.5" _orig_x="665.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="302.10342522974105" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(213,50,1)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="1967.5" _orig_x="312.17"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (42 samples, 0.04%)</title><rect x="25.772765246449396" y="1733" width="0.985797827903091" height="15.0" fill="rgb(242,39,1)" rx="2" ry="2" _orig_x="375.4" _orig_width="0.4"/>
<text x="28.772765246449396" y="1743.5" _orig_x="378.37"/>
</g>
<g>
<title>std::__detail::_Identity::operator (12 samples, 0.01%)</title><rect x="31.68755221386803" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(246,177,16)" rx="2" ry="2" _orig_x="377.8" _orig_width="0.1"/>
<text x="34.68755221386803" y="1743.5" _orig_x="380.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="11.565831244778668" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(237,13,10)" rx="2" ry="2" _orig_x="30.2" _orig_width="0.2"/>
<text x="14.565831244778668" y="1951.5" _orig_x="33.21"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="997" width="0.31240601503759396" height="15.0" fill="rgb(208,69,40)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1007.5" _orig_x="32.46"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (26 samples, 0.02%)</title><rect x="1144.1604010025062" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(229,92,28)" rx="2" ry="2" _orig_x="829.2" _orig_width="0.2"/>
<text x="1147.1604010025062" y="1855.5" _orig_x="832.17"/>
</g>
<g class="hide">
<title>[chrome] (95 samples, 0.08%)</title><rect x="86.0225981620719" y="1845" width="1.0413533834586466" height="15.0" fill="rgb(234,46,26)" rx="2" ry="2" _orig_x="101.7" _orig_width="1.0"/>
<text x="89.0225981620719" y="1855.5" _orig_x="104.74"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="901" width="2.2909774436090227" height="15.0" fill="rgb(238,50,53)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="911.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>v8::internal::Runtime_GetProperty (20 samples, 0.02%)</title><rect x="185.68011695906438" y="1541" width="0.20827067669172933" height="15.0" fill="rgb(214,211,16)" rx="2" ry="2" _orig_x="197.4" _orig_width="0.2"/>
<text x="188.68011695906438" y="1551.5" _orig_x="200.36"/>
</g>
<g class="hide">
<title>[perf-15821.map] (32 samples, 0.03%)</title><rect x="92.89553049289897" y="1541" width="0.41654135338345866" height="15.0" fill="rgb(249,38,48)" rx="2" ry="2" _orig_x="108.3" _orig_width="0.4"/>
<text x="95.89553049289897" y="1551.5" _orig_x="111.33"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="53" width="0.31240601503759396" height="15.0" fill="rgb(252,48,41)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="63.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[unknown] (26 samples, 0.02%)</title><rect x="48.2" y="2053" width="0.3" height="15.0" fill="rgb(208,153,42)" rx="2" ry="2"/>
<text x="51.23" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,733 samples, 1.46%)</title><rect x="800.3634085213033" y="1797" width="42.38930659983291" height="15.0" fill="rgb(220,126,0)" rx="2" ry="2" _orig_x="689.7" _orig_width="17.2"/>
<text x="803.3634085213033" y="1807.5" _orig_x="692.68">std:..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.04%)</title><rect x="84.5647034252298" y="2021" width="0.5206766917293233" height="15.0" fill="rgb(212,157,38)" rx="2" ry="2" _orig_x="100.3" _orig_width="0.5"/>
<text x="87.5647034252298" y="2031.5" _orig_x="103.29"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="421" width="0.31240601503759396" height="15.0" fill="rgb(221,2,11)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="431.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>dixLookupResourceByType (14 samples, 0.01%)</title><rect x="74.4" y="2053" width="0.1" height="15.0" fill="rgb(224,168,0)" rx="2" ry="2"/>
<text x="77.37" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="1188.8" y="2021" width="0.1" height="15.0" fill="rgb(241,208,18)" rx="2" ry="2"/>
<text x="1191.79" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (16 samples, 0.01%)</title><rect x="778.1829573934838" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(240,220,47)" rx="2" ry="2" _orig_x="680.7" _orig_width="0.1"/>
<text x="781.1829573934838" y="1807.5" _orig_x="683.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,184 samples, 1.00%)</title><rect x="916.2936507936508" y="1909" width="12.28796992481203" height="15.0" fill="rgb(229,138,8)" rx="2" ry="2" _orig_x="899.0" _orig_width="11.8"/>
<text x="919.2936507936508" y="1919.5" _orig_x="902.01"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (40 samples, 0.03%)</title><rect x="196.56223893065993" y="1781" width="0.985797827903091" height="15.0" fill="rgb(240,157,39)" rx="2" ry="2" _orig_x="444.7" _orig_width="0.4"/>
<text x="199.56223893065993" y="1791.5" _orig_x="447.72"/>
</g>
<g class="hide">
<title>[code] (25 samples, 0.02%)</title><rect x="19.0" y="1621" width="0.2" height="15.0" fill="rgb(241,43,15)" rx="2" ry="2"/>
<text x="21.98" y="1631.5"/>
</g>
<g class="hide">
<title>[unknown] (36 samples, 0.03%)</title><rect x="332.5" y="2053" width="0.3" height="15.0" fill="rgb(215,171,32)" rx="2" ry="2"/>
<text x="335.47" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_condattr_init (13 samples, 0.01%)</title><rect x="172.87147034252303" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(218,91,23)" rx="2" ry="2" _orig_x="185.1" _orig_width="0.1"/>
<text x="175.87147034252303" y="1807.5" _orig_x="188.09"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="821" width="0.20827067669172933" height="15.0" fill="rgb(220,4,31)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="831.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>kworker/5:2-eve (118 samples, 0.10%)</title><rect x="356.5" y="2069" width="1.1" height="15.0" fill="rgb(209,75,6)" rx="2" ry="2"/>
<text x="359.45" y="2079.5"/>
</g>
<g class="hide">
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void  (25 samples, 0.02%)</title><rect x="174.53763575605686" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(224,29,48)" rx="2" ry="2" _orig_x="186.7" _orig_width="0.2"/>
<text x="177.53763575605686" y="1775.5" _orig_x="189.66"/>
</g>
<g class="hide">
<title>_nv018050rm (13 samples, 0.01%)</title><rect x="1182.5" y="2053" width="0.1" height="15.0" fill="rgb(244,29,16)" rx="2" ry="2"/>
<text x="1185.46" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (76 samples, 0.06%)</title><rect x="49.679365079365134" y="85" width="0.8330827067669173" height="15.0" fill="rgb(223,26,46)" rx="2" ry="2" _orig_x="66.8" _orig_width="0.8"/>
<text x="52.679365079365134" y="95.5" _orig_x="69.82"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (16 samples, 0.01%)</title><rect x="465.68504594820376" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(218,160,15)" rx="2" ry="2" _orig_x="553.9" _orig_width="0.1"/>
<text x="468.68504594820376" y="1711.5" _orig_x="556.89"/>
</g>
<g>
<title>std::unordered_map&lt;unsigned int, IndexInfo*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt; &gt;::find (23 samples, 0.02%)</title><rect x="1164.8621553884711" y="1941" width="0.4928989139515455" height="15.0" fill="rgb(235,223,35)" rx="2" ry="2" _orig_x="837.6" _orig_width="0.2"/>
<text x="1167.8621553884711" y="1951.5" _orig_x="840.56"/>
</g>
<g>
<title>[libminisql_shared.so] (14 samples, 0.01%)</title><rect x="998.2623224728487" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(238,94,19)" rx="2" ry="2" _orig_x="770.0" _orig_width="0.1"/>
<text x="1001.2623224728487" y="1791.5" _orig_x="772.97"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (16 samples, 0.01%)</title><rect x="556.8713450292397" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(231,4,2)" rx="2" ry="2" _orig_x="590.9" _orig_width="0.1"/>
<text x="559.8713450292397" y="1839.5" _orig_x="593.87"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (34 samples, 0.03%)</title><rect x="264.5822890559733" y="1733" width="0.985797827903091" height="15.0" fill="rgb(238,163,43)" rx="2" ry="2" _orig_x="472.3" _orig_width="0.4"/>
<text x="267.5822890559733" y="1743.5" _orig_x="475.33"/>
</g>
<g class="hide">
<title>[code] (210 samples, 0.18%)</title><rect x="17.2" y="1797" width="2.1" height="15.0" fill="rgb(219,52,31)" rx="2" ry="2"/>
<text x="20.21" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (102 samples, 0.09%)</title><rect x="228.68801169590648" y="2021" width="1.1454887218045113" height="15.0" fill="rgb(230,129,51)" rx="2" ry="2" _orig_x="238.7" _orig_width="1.1"/>
<text x="231.68801169590648" y="2031.5" _orig_x="241.74"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (13 samples, 0.01%)</title><rect x="933.6925647451961" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(241,173,14)" rx="2" ry="2" _orig_x="743.8" _orig_width="0.1"/>
<text x="936.6925647451961" y="1855.5" _orig_x="746.75"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (55 samples, 0.05%)</title><rect x="532.4728487886382" y="1829" width="1.4786967418546364" height="15.0" fill="rgb(240,158,8)" rx="2" ry="2" _orig_x="581.0" _orig_width="0.6"/>
<text x="535.4728487886382" y="1839.5" _orig_x="584.04"/>
</g>
<g class="hide">
<title>__libc_recvmsg (25 samples, 0.02%)</title><rect x="13.0" y="1893" width="0.3" height="15.0" fill="rgb(247,173,9)" rx="2" ry="2"/>
<text x="16.03" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="161.62485380116965" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(240,190,1)" rx="2" ry="2" _orig_x="174.3" _orig_width="0.2"/>
<text x="164.62485380116965" y="1967.5" _orig_x="177.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (247 samples, 0.21%)</title><rect x="236.60229741019222" y="1973" width="2.6033834586466167" height="15.0" fill="rgb(247,224,5)" rx="2" ry="2" _orig_x="246.3" _orig_width="2.5"/>
<text x="239.60229741019222" y="1983.5" _orig_x="249.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="15.8" y="1893" width="0.1" height="15.0" fill="rgb(231,2,30)" rx="2" ry="2"/>
<text x="18.77" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.04%)</title><rect x="21.3" y="1989" width="0.4" height="15.0" fill="rgb(223,75,43)" rx="2" ry="2"/>
<text x="24.25" y="1999.5"/>
</g>
<g>
<title>Field::Field (28 samples, 0.02%)</title><rect x="449.17293233082717" y="1829" width="0.7393483709273182" height="15.0" fill="rgb(237,41,38)" rx="2" ry="2" _orig_x="547.2" _orig_width="0.3"/>
<text x="452.17293233082717" y="1839.5" _orig_x="550.21"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (189 samples, 0.16%)</title><rect x="1069.732664995823" y="1797" width="4.682539682539682" height="15.0" fill="rgb(245,134,15)" rx="2" ry="2" _orig_x="799.0" _orig_width="1.9"/>
<text x="1072.732664995823" y="1807.5" _orig_x="802.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.03%)</title><rect x="41.869214703425286" y="1989" width="0.31240601503759396" height="15.0" fill="rgb(211,4,8)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1999.5" _orig_x="62.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="326.47109440267343" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(230,119,21)" rx="2" ry="2" _orig_x="332.6" _orig_width="0.2"/>
<text x="329.47109440267343" y="1935.5" _orig_x="335.58"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (26 samples, 0.02%)</title><rect x="640.9106098579782" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(236,55,11)" rx="2" ry="2" _orig_x="625.0" _orig_width="0.3"/>
<text x="643.9106098579782" y="1743.5" _orig_x="628.00"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Identity, true&gt;::_S_get (13 samples, 0.01%)</title><rect x="478.74686716791985" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(228,7,25)" rx="2" ry="2" _orig_x="559.2" _orig_width="0.2"/>
<text x="481.74686716791985" y="1759.5" _orig_x="562.24"/>
</g>
<g class="hide">
<title>g_slice_alloc (42 samples, 0.04%)</title><rect x="321.1" y="2053" width="0.5" height="15.0" fill="rgb(211,64,39)" rx="2" ry="2"/>
<text x="324.15" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (12 samples, 0.01%)</title><rect x="1056.670843776107" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(234,131,19)" rx="2" ry="2" _orig_x="793.7" _orig_width="0.2"/>
<text x="1059.670843776107" y="1839.5" _orig_x="796.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="124.13613199665838" y="1189" width="0.31240601503759396" height="15.0" fill="rgb(209,2,36)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1199.5" _orig_x="141.33"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="30.93500417710949" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(237,36,6)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1967.5" _orig_x="51.77"/>
</g>
<g class="hide">
<title>[code] (30 samples, 0.03%)</title><rect x="99.24778613199672" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(227,129,45)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.3"/>
<text x="102.24778613199672" y="1407.5" _orig_x="117.37"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (64 samples, 0.05%)</title><rect x="271.383500417711" y="2037" width="0.6248120300751879" height="15.0" fill="rgb(212,76,18)" rx="2" ry="2" _orig_x="279.7" _orig_width="0.6"/>
<text x="274.383500417711" y="2047.5" _orig_x="282.71"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarkingJob::Task::RunInternal (52 samples, 0.04%)</title><rect x="206.92372598162078" y="1765" width="0.5206766917293233" height="15.0" fill="rgb(216,60,14)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.5"/>
<text x="209.92372598162078" y="1775.5" _orig_x="220.82"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (25 samples, 0.02%)</title><rect x="1021.1821219715954" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(237,195,26)" rx="2" ry="2" _orig_x="779.3" _orig_width="0.3"/>
<text x="1024.1821219715953" y="1807.5" _orig_x="782.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="21.3" y="1957" width="0.4" height="15.0" fill="rgb(253,82,8)" rx="2" ry="2"/>
<text x="24.26" y="1967.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (26 samples, 0.02%)</title><rect x="286.5872598162072" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(206,85,41)" rx="2" ry="2" _orig_x="294.3" _orig_width="0.2"/>
<text x="289.5872598162072" y="1935.5" _orig_x="297.28"/>
</g>
<g class="hide">
<title>v8::internal::Object::GetProperty (19 samples, 0.02%)</title><rect x="185.68011695906438" y="1525" width="0.20827067669172933" height="15.0" fill="rgb(211,148,37)" rx="2" ry="2" _orig_x="197.4" _orig_width="0.2"/>
<text x="188.68011695906438" y="1535.5" _orig_x="200.37"/>
</g>
<g class="hide">
<title>blink::ThreadHeap::AdvanceConcurrentSweep (18 samples, 0.02%)</title><rect x="32.70530492898919" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(233,123,28)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1887.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="613" width="0.20827067669172933" height="15.0" fill="rgb(253,21,0)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="623.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (11 samples, 0.01%)</title><rect x="39.081035923141215" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(248,70,42)" rx="2" ry="2" _orig_x="380.8" _orig_width="0.1"/>
<text x="42.081035923141215" y="1759.5" _orig_x="383.84"/>
</g>
<g class="hide">
<title>base::internal::Invoker&lt;base::internal::BindState&lt;leveldb_proto::ProtoDatabaseSelector::DeleteOldDataAndMigrate (12 samples, 0.01%)</title><rect x="174.32936507936512" y="1765" width="0.20827067669172933" height="15.0" fill="rgb(205,220,11)" rx="2" ry="2" _orig_x="186.5" _orig_width="0.2"/>
<text x="177.32936507936512" y="1775.5" _orig_x="189.54"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (14 samples, 0.01%)</title><rect x="82.70258980785296" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(254,163,7)" rx="2" ry="2" _orig_x="398.5" _orig_width="0.1"/>
<text x="85.70258980785296" y="1759.5" _orig_x="401.51"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (20 samples, 0.02%)</title><rect x="213.81370091896403" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(216,96,48)" rx="2" ry="2" _orig_x="451.7" _orig_width="0.2"/>
<text x="216.81370091896403" y="1759.5" _orig_x="454.71"/>
</g>
<g class="hide">
<title>record__mmap_read_evlist.constprop.0 (1,443 samples, 1.21%)</title><rect x="915.460568086884" y="1989" width="14.891353383458647" height="15.0" fill="rgb(248,133,30)" rx="2" ry="2" _orig_x="898.2" _orig_width="14.3"/>
<text x="918.460568086884" y="1999.5" _orig_x="901.15"/>
</g>
<g class="hide">
<title>[chrome] (18 samples, 0.02%)</title><rect x="30.830868838763635" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(217,102,23)" rx="2" ry="2" _orig_x="48.7" _orig_width="0.2"/>
<text x="33.830868838763635" y="1983.5" _orig_x="51.74"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1125" width="0.31240601503759396" height="15.0" fill="rgb(247,218,2)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1135.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (22 samples, 0.02%)</title><rect x="347.88220551378447" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(230,40,39)" rx="2" ry="2" _orig_x="506.1" _orig_width="0.2"/>
<text x="350.88220551378447" y="1759.5" _orig_x="509.09"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (15 samples, 0.01%)</title><rect x="171.62184628237264" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(245,104,22)" rx="2" ry="2" _orig_x="183.9" _orig_width="0.2"/>
<text x="174.62184628237264" y="1807.5" _orig_x="186.91"/>
</g>
<g class="hide">
<title>[perf-58145.map] (185 samples, 0.16%)</title><rect x="126.84365079365085" y="1621" width="1.874436090225564" height="15.0" fill="rgb(237,93,35)" rx="2" ry="2" _orig_x="140.9" _orig_width="1.8"/>
<text x="129.84365079365085" y="1631.5" _orig_x="143.91"/>
</g>
<g class="hide">
<title>azx_pcm_pointer (22 samples, 0.02%)</title><rect x="69.77748538011701" y="1877" width="0.20827067669172933" height="15.0" fill="rgb(212,82,34)" rx="2" ry="2" _orig_x="86.1" _orig_width="0.2"/>
<text x="72.77748538011701" y="1887.5" _orig_x="89.11"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,896 samples, 1.59%)</title><rect x="797.8989139515455" y="1845" width="46.57894736842105" height="15.0" fill="rgb(231,130,22)" rx="2" ry="2" _orig_x="688.7" _orig_width="18.9"/>
<text x="800.8989139515455" y="1855.5" _orig_x="691.75">Simp..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="320.53538011695906" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(218,115,43)" rx="2" ry="2" _orig_x="326.9" _orig_width="0.1"/>
<text x="323.53538011695906" y="1855.5" _orig_x="329.86"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (212 samples, 0.18%)</title><rect x="261.8713450292397" y="1765" width="5.175438596491228" height="15.0" fill="rgb(216,137,0)" rx="2" ry="2" _orig_x="471.2" _orig_width="2.1"/>
<text x="264.8713450292397" y="1775.5" _orig_x="474.19"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (108 samples, 0.09%)</title><rect x="392.2431077694236" y="1765" width="2.7109440267335008" height="15.0" fill="rgb(240,15,0)" rx="2" ry="2" _orig_x="524.1" _orig_width="1.1"/>
<text x="395.2431077694236" y="1775.5" _orig_x="527.08"/>
</g>
<g class="hide">
<title>[perf-58145.map] (13 samples, 0.01%)</title><rect x="128.61395154553054" y="1429" width="0.10413533834586466" height="15.0" fill="rgb(231,25,20)" rx="2" ry="2" _orig_x="142.6" _orig_width="0.1"/>
<text x="131.61395154553054" y="1439.5" _orig_x="145.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.12%)</title><rect x="56.135756056808745" y="1973" width="1.4578947368421051" height="15.0" fill="rgb(211,66,35)" rx="2" ry="2" _orig_x="73.0" _orig_width="1.4"/>
<text x="59.135756056808745" y="1983.5" _orig_x="75.97"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (89 samples, 0.07%)</title><rect x="783.6048454469505" y="1925" width="2.218045112781955" height="15.0" fill="rgb(239,159,45)" rx="2" ry="2" _orig_x="682.9" _orig_width="0.9"/>
<text x="786.6048454469505" y="1935.5" _orig_x="685.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="30.41432748538017" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(233,80,12)" rx="2" ry="2" _orig_x="48.3" _orig_width="0.2"/>
<text x="33.41432748538017" y="1983.5" _orig_x="51.31"/>
</g>
<g class="hide">
<title>perf_mmap__read_init (11 samples, 0.01%)</title><rect x="915.7729741019215" y="1957" width="0.10413533834586466" height="15.0" fill="rgb(205,109,22)" rx="2" ry="2" _orig_x="898.5" _orig_width="0.1"/>
<text x="918.7729741019215" y="1967.5" _orig_x="901.46"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="293" width="0.31240601503759396" height="15.0" fill="rgb(211,48,2)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="303.5" _orig_x="32.46"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (380 samples, 0.32%)</title><rect x="469.38178780284034" y="1765" width="9.365079365079364" height="15.0" fill="rgb(247,166,41)" rx="2" ry="2" _orig_x="555.4" _orig_width="3.8"/>
<text x="472.38178780284034" y="1775.5" _orig_x="558.39"/>
</g>
<g class="hide">
<title>v8::internal::LookupIterator::Key::Key (23 samples, 0.02%)</title><rect x="191.61583124477866" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(214,187,4)" rx="2" ry="2" _orig_x="203.1" _orig_width="0.2"/>
<text x="194.61583124477866" y="1391.5" _orig_x="206.12"/>
</g>
<g class="hide">
<title>__pthread_mutex_cond_lock (14 samples, 0.01%)</title><rect x="239.2056808688388" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(219,140,20)" rx="2" ry="2" _orig_x="248.8" _orig_width="0.2"/>
<text x="242.2056808688388" y="2047.5" _orig_x="251.81"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (11 samples, 0.01%)</title><rect x="804.3065998329155" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(254,165,51)" rx="2" ry="2" _orig_x="691.3" _orig_width="0.1"/>
<text x="807.3065998329155" y="1759.5" _orig_x="694.34"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (46 samples, 0.04%)</title><rect x="1003.1913116123642" y="1765" width="1.2322472848788637" height="15.0" fill="rgb(242,72,19)" rx="2" ry="2" _orig_x="772.0" _orig_width="0.5"/>
<text x="1006.1913116123642" y="1775.5" _orig_x="775.02"/>
</g>
<g class="hide">
<title>Watcher::fireCallbacks (303 samples, 0.25%)</title><rect x="122.2616959064328" y="1957" width="3.1240601503759398" height="15.0" fill="rgb(211,185,41)" rx="2" ry="2" _orig_x="136.5" _orig_width="3.0"/>
<text x="125.2616959064328" y="1967.5" _orig_x="139.47"/>
</g>
<g class="hide">
<title>[chrome] (104 samples, 0.09%)</title><rect x="85.91846282372603" y="1909" width="1.1454887218045113" height="15.0" fill="rgb(244,76,1)" rx="2" ry="2" _orig_x="101.6" _orig_width="1.1"/>
<text x="88.91846282372603" y="1919.5" _orig_x="104.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="905.0470342522975" y="1941" width="0.8330827067669173" height="15.0" fill="rgb(246,43,3)" rx="2" ry="2" _orig_x="888.2" _orig_width="0.8"/>
<text x="908.0470342522975" y="1951.5" _orig_x="891.21"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="133" width="0.20827067669172933" height="15.0" fill="rgb(250,6,28)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="143.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="131.321470342523" y="1797" width="0.20827067669172933" height="15.0" fill="rgb(254,169,32)" rx="2" ry="2" _orig_x="145.2" _orig_width="0.2"/>
<text x="134.321470342523" y="1807.5" _orig_x="148.25"/>
</g>
<g class="hide">
<title>_int_free (42 samples, 0.04%)</title><rect x="900.2568086883877" y="2037" width="0.41654135338345866" height="15.0" fill="rgb(233,107,2)" rx="2" ry="2" _orig_x="883.6" _orig_width="0.4"/>
<text x="903.2568086883877" y="2047.5" _orig_x="886.62"/>
</g>
<g class="hide">
<title>base::(anonymous namespace)::ThreadFunc (12 samples, 0.01%)</title><rect x="15.1" y="2037" width="0.2" height="15.0" fill="rgb(223,59,48)" rx="2" ry="2"/>
<text x="18.14" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (392 samples, 0.33%)</title><rect x="887.8647034252298" y="1813" width="4.061278195488722" height="15.0" fill="rgb(246,196,13)" rx="2" ry="2" _orig_x="871.7" _orig_width="3.9"/>
<text x="890.8647034252298" y="1823.5" _orig_x="874.69"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (44 samples, 0.04%)</title><rect x="1107.4394319131159" y="1845" width="0.985797827903091" height="15.0" fill="rgb(243,129,5)" rx="2" ry="2" _orig_x="814.3" _orig_width="0.4"/>
<text x="1110.4394319131159" y="1855.5" _orig_x="817.30"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (152 samples, 0.13%)</title><rect x="682.5605680868838" y="1845" width="3.6967418546365916" height="15.0" fill="rgb(239,124,34)" rx="2" ry="2" _orig_x="641.9" _orig_width="1.5"/>
<text x="685.5605680868838" y="1855.5" _orig_x="644.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="101" width="0.20827067669172933" height="15.0" fill="rgb(233,204,10)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="111.5" _orig_x="71.64"/>
</g>
<g>
<title>_int_free (16 samples, 0.01%)</title><rect x="432.1679197994986" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(253,4,28)" rx="2" ry="2" _orig_x="540.3" _orig_width="0.1"/>
<text x="435.1679197994986" y="1839.5" _orig_x="543.28"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_state (12 samples, 0.01%)</title><rect x="107.34753550543023" y="1733" width="0.24644945697577275" height="15.0" fill="rgb(218,112,27)" rx="2" ry="2" _orig_x="408.5" _orig_width="0.1"/>
<text x="110.34753550543023" y="1743.5" _orig_x="411.46"/>
</g>
<g>
<title>operator new (12 samples, 0.01%)</title><rect x="651.015037593985" y="1845" width="0.4928989139515455" height="15.0" fill="rgb(253,11,20)" rx="2" ry="2" _orig_x="629.1" _orig_width="0.2"/>
<text x="654.015037593985" y="1855.5" _orig_x="632.14"/>
</g>
<g class="hide">
<title>kworker/u32:48- (40 samples, 0.03%)</title><rect x="360.7" y="2069" width="0.4" height="15.0" fill="rgb(234,7,4)" rx="2" ry="2"/>
<text x="363.68" y="2079.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (490 samples, 0.41%)</title><rect x="112.78538011695912" y="1717" width="5.102631578947369" height="15.0" fill="rgb(253,67,46)" rx="2" ry="2" _orig_x="127.4" _orig_width="4.9"/>
<text x="115.78538011695912" y="1727.5" _orig_x="130.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.03%)</title><rect x="355.73312447786134" y="2005" width="0.41654135338345866" height="15.0" fill="rgb(248,18,27)" rx="2" ry="2" _orig_x="360.7" _orig_width="0.4"/>
<text x="358.73312447786134" y="2015.5" _orig_x="363.68"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (21 samples, 0.02%)</title><rect x="456.56641604010036" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(211,2,1)" rx="2" ry="2" _orig_x="550.2" _orig_width="0.2"/>
<text x="459.56641604010036" y="1775.5" _orig_x="553.22"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (194 samples, 0.16%)</title><rect x="44.74937343358401" y="1797" width="4.682539682539682" height="15.0" fill="rgb(245,15,42)" rx="2" ry="2" _orig_x="383.1" _orig_width="1.9"/>
<text x="47.74937343358401" y="1807.5" _orig_x="386.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="276.1737259816208" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(212,143,21)" rx="2" ry="2" _orig_x="284.3" _orig_width="0.1"/>
<text x="279.1737259816208" y="1935.5" _orig_x="287.29"/>
</g>
<g class="hide">
<title>node::MakeCallback (102 samples, 0.09%)</title><rect x="98.62297410192151" y="1797" width="1.0413533834586466" height="15.0" fill="rgb(247,111,31)" rx="2" ry="2" _orig_x="113.8" _orig_width="1.0"/>
<text x="101.62297410192151" y="1807.5" _orig_x="116.80"/>
</g>
<g class="hide">
<title>pthread_cond_init@@GLIBC_2.3.2 (11 samples, 0.01%)</title><rect x="172.6631996658313" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(236,53,1)" rx="2" ry="2" _orig_x="184.9" _orig_width="0.1"/>
<text x="175.6631996658313" y="1807.5" _orig_x="187.94"/>
</g>
<g>
<title>Schema::GetColumn (14 samples, 0.01%)</title><rect x="250.28822055137843" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(251,43,49)" rx="2" ry="2" _orig_x="466.5" _orig_width="0.1"/>
<text x="253.28822055137843" y="1839.5" _orig_x="469.48"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (19 samples, 0.02%)</title><rect x="72.59816207184622" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(216,206,48)" rx="2" ry="2" _orig_x="394.4" _orig_width="0.2"/>
<text x="75.59816207184622" y="1807.5" _orig_x="397.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (30 samples, 0.03%)</title><rect x="355.8372598162072" y="1781" width="0.31240601503759396" height="15.0" fill="rgb(233,38,40)" rx="2" ry="2" _orig_x="360.8" _orig_width="0.3"/>
<text x="358.8372598162072" y="1791.5" _orig_x="363.78"/>
</g>
<g class="hide">
<title>[ntfs-3g] (75 samples, 0.06%)</title><rect x="883.9075605680869" y="2037" width="0.7289473684210526" height="15.0" fill="rgb(228,53,28)" rx="2" ry="2" _orig_x="867.9" _orig_width="0.7"/>
<text x="886.9075605680869" y="2047.5" _orig_x="870.86"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl (4,920 samples, 4.14%)</title><rect x="173.70455304928996" y="1797" width="50.81804511278195" height="15.0" fill="rgb(209,130,8)" rx="2" ry="2" _orig_x="185.9" _orig_width="48.8"/>
<text x="176.70455304928996" y="1807.5" _orig_x="188.87">base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.12%)</title><rect x="140.9019214703426" y="2021" width="1.5620300751879699" height="15.0" fill="rgb(225,99,6)" rx="2" ry="2" _orig_x="154.4" _orig_width="1.5"/>
<text x="143.9019214703426" y="2031.5" _orig_x="157.41"/>
</g>
<g class="hide">
<title>[perf-58119.map] (47 samples, 0.04%)</title><rect x="117.99214703425235" y="1637" width="0.41654135338345866" height="15.0" fill="rgb(210,166,35)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1647.5" _orig_x="135.37"/>
</g>
<g class="hide">
<title>tracker-store (27 samples, 0.02%)</title><rect x="1189.1" y="2069" width="0.2" height="15.0" fill="rgb(241,77,33)" rx="2" ry="2"/>
<text x="1192.06" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (109 samples, 0.09%)</title><rect x="75.55555555555561" y="1749" width="2.4644945697577274" height="15.0" fill="rgb(250,208,2)" rx="2" ry="2" _orig_x="395.6" _orig_width="1.0"/>
<text x="78.55555555555561" y="1759.5" _orig_x="398.56"/>
</g>
<g class="hide">
<title>[unknown] (223 samples, 0.19%)</title><rect x="16.772598162071905" y="2021" width="2.2909774436090227" height="15.0" fill="rgb(209,155,28)" rx="2" ry="2" _orig_x="35.2" _orig_width="2.2"/>
<text x="19.772598162071905" y="2031.5" _orig_x="38.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="15.106432748538069" y="1989" width="0.10413533834586466" height="15.0" fill="rgb(236,83,9)" rx="2" ry="2" _orig_x="33.6" _orig_width="0.1"/>
<text x="18.10643274853807" y="1999.5" _orig_x="36.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29 samples, 0.02%)</title><rect x="41.869214703425286" y="1909" width="0.31240601503759396" height="15.0" fill="rgb(217,0,30)" rx="2" ry="2" _orig_x="59.3" _orig_width="0.3"/>
<text x="44.869214703425286" y="1919.5" _orig_x="62.35"/>
</g>
<g class="hide">
<title>[perf-58145.map] (193 samples, 0.16%)</title><rect x="126.739515455305" y="1685" width="1.9785714285714284" height="15.0" fill="rgb(225,44,17)" rx="2" ry="2" _orig_x="140.8" _orig_width="1.9"/>
<text x="129.739515455305" y="1695.5" _orig_x="143.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (865 samples, 0.73%)</title><rect x="259.09553049289894" y="1941" width="8.95563909774436" height="15.0" fill="rgb(235,51,26)" rx="2" ry="2" _orig_x="267.9" _orig_width="8.6"/>
<text x="262.09553049289894" y="1951.5" _orig_x="270.94"/>
</g>
<g class="hide">
<title>v8::internal::Heap::CollectGarbage (20 samples, 0.02%)</title><rect x="206.92372598162078" y="1733" width="0.20827067669172933" height="15.0" fill="rgb(253,182,20)" rx="2" ry="2" _orig_x="217.8" _orig_width="0.2"/>
<text x="209.92372598162078" y="1743.5" _orig_x="220.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="278.7771094402674" y="1941" width="0.10413533834586466" height="15.0" fill="rgb(216,103,30)" rx="2" ry="2" _orig_x="286.8" _orig_width="0.1"/>
<text x="281.7771094402674" y="1951.5" _orig_x="289.77"/>
</g>
<g class="hide">
<title>blink::V8Event::ToImplWithTypeCheck (15 samples, 0.01%)</title><rect x="184.7428989139516" y="1509" width="0.20827067669172933" height="15.0" fill="rgb(216,46,5)" rx="2" ry="2" _orig_x="196.5" _orig_width="0.2"/>
<text x="187.7428989139516" y="1519.5" _orig_x="199.51"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (16 samples, 0.01%)</title><rect x="1040.1587301587301" y="1781" width="0.4928989139515455" height="15.0" fill="rgb(215,189,21)" rx="2" ry="2" _orig_x="787.0" _orig_width="0.2"/>
<text x="1043.1587301587301" y="1791.5" _orig_x="790.03"/>
</g>
<g class="hide">
<title>[code] (117 samples, 0.10%)</title><rect x="17.3" y="1733" width="1.1" height="15.0" fill="rgb(209,194,7)" rx="2" ry="2"/>
<text x="20.26" y="1743.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (14 samples, 0.01%)</title><rect x="367.5981620718463" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(223,0,29)" rx="2" ry="2" _orig_x="514.1" _orig_width="0.2"/>
<text x="370.5981620718463" y="1759.5" _orig_x="517.13"/>
</g>
<g class="hide">
<title>[code] (20 samples, 0.02%)</title><rect x="99.8725981620719" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(249,42,40)" rx="2" ry="2" _orig_x="115.0" _orig_width="0.2"/>
<text x="102.8725981620719" y="1839.5" _orig_x="118.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="914.9398913951546" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(252,91,49)" rx="2" ry="2" _orig_x="897.7" _orig_width="0.1"/>
<text x="917.9398913951546" y="1807.5" _orig_x="900.68"/>
</g>
<g class="hide">
<title>_int_malloc (13 samples, 0.01%)</title><rect x="286.6" y="2053" width="0.1" height="15.0" fill="rgb(236,100,17)" rx="2" ry="2"/>
<text x="289.59" y="2063.5"/>
</g>
<g class="hide">
<title>g_socket_send_message (11 samples, 0.01%)</title><rect x="278.0481620718464" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(211,142,28)" rx="2" ry="2" _orig_x="286.1" _orig_width="0.1"/>
<text x="281.0481620718464" y="2047.5" _orig_x="289.07"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="1237" width="0.20827067669172933" height="15.0" fill="rgb(253,42,9)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="1247.5" _orig_x="328.48"/>
</g>
<g>
<title>MemHeap::~MemHeap (12 samples, 0.01%)</title><rect x="615.2798663324979" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(230,52,45)" rx="2" ry="2" _orig_x="614.6" _orig_width="0.1"/>
<text x="618.2798663324979" y="1807.5" _orig_x="617.59"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="629" width="0.31240601503759396" height="15.0" fill="rgb(210,19,20)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="639.5" _orig_x="48.87"/>
</g>
<g>
<title>ExecuteEngine::Execute (48,250 samples, 40.57%)</title><rect x="10" y="2021" width="1180" height="15.0" fill="rgb(219,129,53)" rx="2" ry="2" _orig_x="369.0" _orig_width="478.8"/>
<text x="13" y="2031.5" _orig_x="372.05">ExecuteEngine::Execute </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="84.14816207184634" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(246,154,21)" rx="2" ry="2" _orig_x="99.9" _orig_width="0.2"/>
<text x="87.14816207184634" y="2047.5" _orig_x="102.88"/>
</g>
<g class="hide">
<title>[perf-58119.map] (106 samples, 0.09%)</title><rect x="119.8665831244779" y="1653" width="1.1454887218045113" height="15.0" fill="rgb(226,61,41)" rx="2" ry="2" _orig_x="134.2" _orig_width="1.1"/>
<text x="122.8665831244779" y="1663.5" _orig_x="137.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="197.9680868838764" y="1541" width="0.10413533834586466" height="15.0" fill="rgb(226,89,26)" rx="2" ry="2" _orig_x="209.2" _orig_width="0.1"/>
<text x="200.9680868838764" y="1551.5" _orig_x="212.17"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (12 samples, 0.01%)</title><rect x="41.54553049289893" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(240,118,12)" rx="2" ry="2" _orig_x="381.8" _orig_width="0.1"/>
<text x="44.54553049289893" y="1759.5" _orig_x="384.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="271.9041771094403" y="1845" width="0.10413533834586466" height="15.0" fill="rgb(237,123,19)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="274.9041771094403" y="1855.5" _orig_x="283.20"/>
</g>
<g class="hide">
<title>[perf-32996.map] (77 samples, 0.06%)</title><rect x="17.7" y="1509" width="0.7" height="15.0" fill="rgb(238,48,37)" rx="2" ry="2"/>
<text x="20.66" y="1519.5"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="69" width="0.31240601503759396" height="15.0" fill="rgb(246,194,10)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="79.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>__poll (47 samples, 0.04%)</title><rect x="276.9026733500418" y="2037" width="0.5206766917293233" height="15.0" fill="rgb(254,57,4)" rx="2" ry="2" _orig_x="285.0" _orig_width="0.5"/>
<text x="279.9026733500418" y="2047.5" _orig_x="288.00"/>
</g>
<g class="hide">
<title>[code] (14 samples, 0.01%)</title><rect x="125.80229741019221" y="1701" width="0.10413533834586466" height="15.0" fill="rgb(249,61,13)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1711.5" _orig_x="142.90"/>
</g>
<g class="hide">
<title>v8::internal::FunctionTemplateInfo::IsTemplateFor (62 samples, 0.05%)</title><rect x="192.9695906432749" y="1381" width="0.6248120300751879" height="15.0" fill="rgb(232,49,44)" rx="2" ry="2" _orig_x="204.4" _orig_width="0.6"/>
<text x="195.9695906432749" y="1391.5" _orig_x="207.42"/>
</g>
<g>
<title>[libminisql_shared.so] (18 samples, 0.02%)</title><rect x="403.57978279030914" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(225,39,10)" rx="2" ry="2" _orig_x="528.7" _orig_width="0.1"/>
<text x="406.57978279030914" y="1855.5" _orig_x="531.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="25.0" y="1941" width="0.2" height="15.0" fill="rgb(254,105,10)" rx="2" ry="2"/>
<text x="28.01" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (353 samples, 0.30%)</title><rect x="150.48237259816213" y="1797" width="3.644736842105263" height="15.0" fill="rgb(250,39,41)" rx="2" ry="2" _orig_x="163.6" _orig_width="3.5"/>
<text x="153.48237259816213" y="1807.5" _orig_x="166.61"/>
</g>
<g class="hide">
<title>__GI___ioctl (78 samples, 0.07%)</title><rect x="914.3150793650794" y="1973" width="0.7289473684210526" height="15.0" fill="rgb(237,20,8)" rx="2" ry="2" _orig_x="897.1" _orig_width="0.7"/>
<text x="917.3150793650794" y="1983.5" _orig_x="900.07"/>
</g>
<g class="hide">
<title>[perf-58119.map] (43 samples, 0.04%)</title><rect x="117.99214703425235" y="1541" width="0.41654135338345866" height="15.0" fill="rgb(243,216,31)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1551.5" _orig_x="135.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (59 samples, 0.05%)</title><rect x="252.75271512113616" y="1765" width="1.4786967418546364" height="15.0" fill="rgb(221,75,8)" rx="2" ry="2" _orig_x="467.5" _orig_width="0.6"/>
<text x="255.75271512113616" y="1775.5" _orig_x="470.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.11%)</title><rect x="25.311695906432803" y="1845" width="1.2496240601503759" height="15.0" fill="rgb(218,213,6)" rx="2" ry="2" _orig_x="43.4" _orig_width="1.2"/>
<text x="28.311695906432803" y="1855.5" _orig_x="46.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="320.43124477861323" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(245,144,6)" rx="2" ry="2" _orig_x="326.8" _orig_width="0.2"/>
<text x="323.43124477861323" y="1999.5" _orig_x="329.84"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (19 samples, 0.02%)</title><rect x="911.5121136173766" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(251,45,9)" rx="2" ry="2" _orig_x="734.8" _orig_width="0.1"/>
<text x="914.5121136173766" y="1807.5" _orig_x="737.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12 samples, 0.01%)</title><rect x="25.2" y="1989" width="0.2" height="15.0" fill="rgb(241,205,5)" rx="2" ry="2"/>
<text x="28.23" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-58145.map] (14 samples, 0.01%)</title><rect x="125.80229741019221" y="1669" width="0.10413533834586466" height="15.0" fill="rgb(210,48,26)" rx="2" ry="2" _orig_x="139.9" _orig_width="0.1"/>
<text x="128.8022974101922" y="1679.5" _orig_x="142.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (84 samples, 0.07%)</title><rect x="61.01503759398493" y="1765" width="2.218045112781955" height="15.0" fill="rgb(251,202,23)" rx="2" ry="2" _orig_x="389.7" _orig_width="0.9"/>
<text x="64.01503759398493" y="1775.5" _orig_x="392.73"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue (21 samples, 0.02%)</title><rect x="218.48274853801175" y="1717" width="0.20827067669172933" height="15.0" fill="rgb(247,14,42)" rx="2" ry="2" _orig_x="228.9" _orig_width="0.2"/>
<text x="221.48274853801175" y="1727.5" _orig_x="231.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (195 samples, 0.16%)</title><rect x="513.9891395154553" y="1781" width="4.682539682539682" height="15.0" fill="rgb(237,154,39)" rx="2" ry="2" _orig_x="573.5" _orig_width="1.9"/>
<text x="516.9891395154553" y="1791.5" _orig_x="576.51"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (279 samples, 0.23%)</title><rect x="1036.9548872180453" y="1829" width="6.900584795321637" height="15.0" fill="rgb(251,135,3)" rx="2" ry="2" _orig_x="785.7" _orig_width="2.8"/>
<text x="1039.9548872180453" y="1839.5" _orig_x="788.70"/>
</g>
<g class="hide">
<title>v8::internal::(anonymous namespace)::Invoke (157 samples, 0.13%)</title><rect x="163.4992898913952" y="1637" width="1.6661654135338346" height="15.0" fill="rgb(251,104,42)" rx="2" ry="2" _orig_x="176.1" _orig_width="1.6"/>
<text x="166.4992898913952" y="1647.5" _orig_x="179.12"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (29 samples, 0.02%)</title><rect x="258.42105263157896" y="1685" width="0.7393483709273182" height="15.0" fill="rgb(241,225,49)" rx="2" ry="2" _orig_x="469.8" _orig_width="0.3"/>
<text x="261.42105263157896" y="1695.5" _orig_x="472.82"/>
</g>
<g class="hide">
<title>blink::LayoutObject::MapLocalToAncestor (52 samples, 0.04%)</title><rect x="182.86846282372602" y="1461" width="0.5206766917293233" height="15.0" fill="rgb(210,211,28)" rx="2" ry="2" _orig_x="194.7" _orig_width="0.5"/>
<text x="185.86846282372602" y="1471.5" _orig_x="197.69"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (29 samples, 0.02%)</title><rect x="842.0133667502089" y="1781" width="0.7393483709273182" height="15.0" fill="rgb(250,121,40)" rx="2" ry="2" _orig_x="706.6" _orig_width="0.3"/>
<text x="845.0133667502089" y="1791.5" _orig_x="709.59"/>
</g>
<g>
<title>GenericComparator&lt;32ul&gt;::operator (4,816 samples, 4.05%)</title><rect x="323.2372598162072" y="1877" width="117.80284043441937" height="15.0" fill="rgb(238,117,26)" rx="2" ry="2" _orig_x="496.1" _orig_width="47.8"/>
<text x="326.2372598162072" y="1887.5" _orig_x="499.14">GenericCompara..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="321.57673350041773" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(215,4,45)" rx="2" ry="2" _orig_x="327.9" _orig_width="0.2"/>
<text x="324.57673350041773" y="1871.5" _orig_x="330.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.09%)</title><rect x="54.36545530492904" y="1813" width="1.1454887218045113" height="15.0" fill="rgb(223,43,41)" rx="2" ry="2" _orig_x="71.3" _orig_width="1.1"/>
<text x="57.36545530492904" y="1823.5" _orig_x="74.34"/>
</g>
<g class="hide">
<title>Xorg (1,292 samples, 1.09%)</title><rect x="61.9" y="2069" width="12.8" height="15.0" fill="rgb(252,81,28)" rx="2" ry="2"/>
<text x="64.87" y="2079.5"/>
</g>
<g class="hide">
<title>v8::FunctionTemplate::HasInstance (68 samples, 0.06%)</title><rect x="192.9695906432749" y="1397" width="0.6248120300751879" height="15.0" fill="rgb(234,167,53)" rx="2" ry="2" _orig_x="204.4" _orig_width="0.6"/>
<text x="195.9695906432749" y="1407.5" _orig_x="207.36"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (14 samples, 0.01%)</title><rect x="1161.1654135338347" y="1877" width="0.24644945697577275" height="15.0" fill="rgb(253,78,8)" rx="2" ry="2" _orig_x="836.1" _orig_width="0.1"/>
<text x="1164.1654135338347" y="1887.5" _orig_x="839.10"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (32 samples, 0.03%)</title><rect x="176.35338345864662" y="1733" width="0.7393483709273182" height="15.0" fill="rgb(244,0,18)" rx="2" ry="2" _orig_x="436.5" _orig_width="0.3"/>
<text x="179.35338345864662" y="1743.5" _orig_x="439.51"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (11 samples, 0.01%)</title><rect x="386.82121971595643" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(253,51,5)" rx="2" ry="2" _orig_x="521.9" _orig_width="0.1"/>
<text x="389.82121971595643" y="1775.5" _orig_x="524.93"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (17 samples, 0.01%)</title><rect x="847.1888053467002" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(235,118,12)" rx="2" ry="2" _orig_x="708.7" _orig_width="0.1"/>
<text x="850.1888053467002" y="1807.5" _orig_x="711.65"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="1128.6340852130324" y="1733" width="0.4928989139515455" height="15.0" fill="rgb(245,71,52)" rx="2" ry="2" _orig_x="822.9" _orig_width="0.2"/>
<text x="1131.6340852130324" y="1743.5" _orig_x="825.91"/>
</g>
<g class="hide">
<title>ib_log_writer (37 samples, 0.03%)</title><rect x="333.5" y="2069" width="0.4" height="15.0" fill="rgb(241,146,4)" rx="2" ry="2"/>
<text x="336.51" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (20 samples, 0.02%)</title><rect x="467.4101921470343" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(216,38,36)" rx="2" ry="2" _orig_x="554.6" _orig_width="0.2"/>
<text x="470.4101921470343" y="1759.5" _orig_x="557.61"/>
</g>
<g class="hide">
<title>ib_log_fl_notif (37 samples, 0.03%)</title><rect x="332.5" y="2069" width="0.3" height="15.0" fill="rgb(205,229,28)" rx="2" ry="2"/>
<text x="335.47" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (13 samples, 0.01%)</title><rect x="979.7786131996658" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(239,80,8)" rx="2" ry="2" _orig_x="762.5" _orig_width="0.1"/>
<text x="982.7786131996658" y="1775.5" _orig_x="765.51"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (56 samples, 0.05%)</title><rect x="1166.09440267335" y="1941" width="1.2322472848788637" height="15.0" fill="rgb(253,99,50)" rx="2" ry="2" _orig_x="838.1" _orig_width="0.5"/>
<text x="1169.09440267335" y="1951.5" _orig_x="841.07"/>
</g>
<g class="hide">
<title>blink::LongTaskDetector::DidProcessTask (11 samples, 0.01%)</title><rect x="213.5883876357561" y="1765" width="0.10413533834586466" height="15.0" fill="rgb(235,84,48)" rx="2" ry="2" _orig_x="224.2" _orig_width="0.1"/>
<text x="216.5883876357561" y="1775.5" _orig_x="227.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="145.17147034252304" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(211,165,19)" rx="2" ry="2" _orig_x="158.5" _orig_width="0.3"/>
<text x="148.17147034252304" y="1951.5" _orig_x="161.50"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (42 samples, 0.04%)</title><rect x="198.53383458646616" y="1781" width="1.2322472848788637" height="15.0" fill="rgb(249,81,21)" rx="2" ry="2" _orig_x="445.5" _orig_width="0.5"/>
<text x="201.53383458646616" y="1791.5" _orig_x="448.54"/>
</g>
<g>
<title>Row::GetField (28 samples, 0.02%)</title><rect x="896.9715956558061" y="1877" width="0.4928989139515455" height="15.0" fill="rgb(217,84,44)" rx="2" ry="2" _orig_x="728.9" _orig_width="0.2"/>
<text x="899.9715956558061" y="1887.5" _orig_x="731.86"/>
</g>
<g class="hide">
<title>g_slice_alloc (15 samples, 0.01%)</title><rect x="287.1" y="2053" width="0.2" height="15.0" fill="rgb(215,4,49)" rx="2" ry="2"/>
<text x="290.11" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (571 samples, 0.48%)</title><rect x="282.8195488721804" y="1813" width="14.047619047619047" height="15.0" fill="rgb(239,194,43)" rx="2" ry="2" _orig_x="479.7" _orig_width="5.7"/>
<text x="285.8195488721804" y="1823.5" _orig_x="482.73"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (167 samples, 0.14%)</title><rect x="281.4846282372598" y="1989" width="1.7703007518796992" height="15.0" fill="rgb(227,85,2)" rx="2" ry="2" _orig_x="289.4" _orig_width="1.7"/>
<text x="284.4846282372598" y="1999.5" _orig_x="292.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (20 samples, 0.02%)</title><rect x="373.75939849624064" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(237,17,37)" rx="2" ry="2" _orig_x="516.6" _orig_width="0.2"/>
<text x="376.75939849624064" y="1775.5" _orig_x="519.57"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (14 samples, 0.01%)</title><rect x="472.3391812865497" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(230,118,20)" rx="2" ry="2" _orig_x="556.6" _orig_width="0.1"/>
<text x="475.3391812865497" y="1727.5" _orig_x="559.58"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (286 samples, 0.24%)</title><rect x="670.484544695071" y="1781" width="6.900584795321637" height="15.0" fill="rgb(234,181,46)" rx="2" ry="2" _orig_x="637.0" _orig_width="2.8"/>
<text x="673.484544695071" y="1791.5" _orig_x="639.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (35 samples, 0.03%)</title><rect x="308.76808688387644" y="1877" width="0.31240601503759396" height="15.0" fill="rgb(253,129,50)" rx="2" ry="2" _orig_x="315.6" _orig_width="0.3"/>
<text x="311.76808688387644" y="1887.5" _orig_x="318.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.04%)</title><rect x="350.83876357560575" y="1925" width="0.5206766917293233" height="15.0" fill="rgb(210,112,3)" rx="2" ry="2" _orig_x="356.0" _orig_width="0.5"/>
<text x="353.83876357560575" y="1935.5" _orig_x="358.98"/>
</g>
<g class="hide">
<title>firefox (100 samples, 0.08%)</title><rect x="282.3" y="2069" width="1.0" height="15.0" fill="rgb(219,7,22)" rx="2" ry="2"/>
<text x="285.32" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="280.65154553049297" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(212,213,31)" rx="2" ry="2" _orig_x="288.6" _orig_width="0.1"/>
<text x="283.65154553049297" y="1839.5" _orig_x="291.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,454 samples, 3.75%)</title><rect x="1164.5522974101923" y="1909" width="46.02781954887218" height="15.0" fill="rgb(212,182,50)" rx="2" ry="2" _orig_x="1137.4" _orig_width="44.2"/>
<text x="1167.5522974101923" y="1919.5" _orig_x="1140.38">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (119 samples, 0.10%)</title><rect x="586.938178780284" y="1701" width="2.957393483709273" height="15.0" fill="rgb(242,104,15)" rx="2" ry="2" _orig_x="603.1" _orig_width="1.2"/>
<text x="589.938178780284" y="1711.5" _orig_x="606.09"/>
</g>
<g class="hide">
<title>[code] (155 samples, 0.13%)</title><rect x="98.20643274853808" y="1957" width="1.5620300751879699" height="15.0" fill="rgb(217,86,54)" rx="2" ry="2" _orig_x="113.4" _orig_width="1.5"/>
<text x="101.20643274853808" y="1967.5" _orig_x="116.40"/>
</g>
<g class="hide">
<title>blink::ThreadState::PerformConcurrentMark (99 samples, 0.08%)</title><rect x="32.913575605680926" y="1893" width="1.0413533834586466" height="15.0" fill="rgb(247,179,41)" rx="2" ry="2" _orig_x="50.7" _orig_width="1.0"/>
<text x="35.913575605680926" y="1903.5" _orig_x="53.67"/>
</g>
<g class="hide">
<title>[perf-58119.map] (162 samples, 0.14%)</title><rect x="116.22184628237264" y="1349" width="1.6661654135338346" height="15.0" fill="rgb(254,113,47)" rx="2" ry="2" _orig_x="130.7" _orig_width="1.6"/>
<text x="119.22184628237264" y="1359.5" _orig_x="133.66"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (13 samples, 0.01%)</title><rect x="1116.8045112781956" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(247,183,10)" rx="2" ry="2" _orig_x="818.1" _orig_width="0.1"/>
<text x="1119.8045112781956" y="1775.5" _orig_x="821.08"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (11 samples, 0.01%)</title><rect x="612.3224728487885" y="1781" width="0.24644945697577275" height="15.0" fill="rgb(215,146,49)" rx="2" ry="2" _orig_x="613.4" _orig_width="0.1"/>
<text x="615.3224728487885" y="1791.5" _orig_x="616.37"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="725" width="0.20827067669172933" height="15.0" fill="rgb(214,213,48)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="735.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>base::WaitableEvent::TimedWait (15 samples, 0.01%)</title><rect x="162.6662071846283" y="1829" width="0.20827067669172933" height="15.0" fill="rgb(206,8,37)" rx="2" ry="2" _orig_x="175.3" _orig_width="0.2"/>
<text x="165.6662071846283" y="1839.5" _orig_x="178.30"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (59 samples, 0.05%)</title><rect x="655.6975772765246" y="1845" width="1.4786967418546364" height="15.0" fill="rgb(247,54,38)" rx="2" ry="2" _orig_x="631.0" _orig_width="0.6"/>
<text x="658.6975772765246" y="1855.5" _orig_x="633.98"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (16 samples, 0.01%)</title><rect x="286.69139515455305" y="1893" width="0.10413533834586466" height="15.0" fill="rgb(241,6,44)" rx="2" ry="2" _orig_x="294.4" _orig_width="0.1"/>
<text x="289.69139515455305" y="1903.5" _orig_x="297.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="933.6842522974102" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(250,194,42)" rx="2" ry="2" _orig_x="915.7" _orig_width="0.2"/>
<text x="936.6842522974102" y="2047.5" _orig_x="918.65"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (14 samples, 0.01%)</title><rect x="1068.500417710944" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(210,114,27)" rx="2" ry="2" _orig_x="798.5" _orig_width="0.1"/>
<text x="1071.500417710944" y="1807.5" _orig_x="801.50"/>
</g>
<g>
<title>Column::GetType (11 samples, 0.01%)</title><rect x="325.94820384294064" y="1845" width="0.24644945697577275" height="15.0" fill="rgb(245,16,38)" rx="2" ry="2" _orig_x="497.2" _orig_width="0.1"/>
<text x="328.94820384294064" y="1855.5" _orig_x="500.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (330 samples, 0.28%)</title><rect x="23.22898913951551" y="1957" width="3.4364661654135333" height="15.0" fill="rgb(250,102,36)" rx="2" ry="2" _orig_x="41.4" _orig_width="3.3"/>
<text x="26.22898913951551" y="1967.5" _orig_x="44.45"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (11 samples, 0.01%)</title><rect x="348.86800334168754" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(215,152,46)" rx="2" ry="2" _orig_x="506.5" _orig_width="0.1"/>
<text x="351.86800334168754" y="1759.5" _orig_x="509.49"/>
</g>
<g class="hide">
<title>[unknown] (609 samples, 0.51%)</title><rect x="323.0" y="2053" width="6.0" height="15.0" fill="rgb(242,52,33)" rx="2" ry="2"/>
<text x="325.99" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (175 samples, 0.15%)</title><rect x="20.6" y="2053" width="1.8" height="15.0" fill="rgb(248,63,48)" rx="2" ry="2"/>
<text x="23.63" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (34 samples, 0.03%)</title><rect x="28.8522974101922" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(239,4,15)" rx="2" ry="2" _orig_x="46.8" _orig_width="0.3"/>
<text x="31.8522974101922" y="2031.5" _orig_x="49.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="302.10342522974105" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(234,50,12)" rx="2" ry="2" _orig_x="309.2" _orig_width="0.1"/>
<text x="305.10342522974105" y="1983.5" _orig_x="312.17"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_uses_single_bucket (11 samples, 0.01%)</title><rect x="1038.6800334168754" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(218,189,19)" rx="2" ry="2" _orig_x="786.4" _orig_width="0.1"/>
<text x="1041.6800334168754" y="1775.5" _orig_x="789.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="274.81996658312454" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(236,38,30)" rx="2" ry="2" _orig_x="283.0" _orig_width="0.3"/>
<text x="277.81996658312454" y="2031.5" _orig_x="286.05"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (13 samples, 0.01%)</title><rect x="877.7485380116959" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(253,18,4)" rx="2" ry="2" _orig_x="721.1" _orig_width="0.1"/>
<text x="880.7485380116959" y="1807.5" _orig_x="724.11"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (15 samples, 0.01%)</title><rect x="275.65304928989144" y="2037" width="0.10413533834586466" height="15.0" fill="rgb(241,93,35)" rx="2" ry="2" _orig_x="283.8" _orig_width="0.1"/>
<text x="278.65304928989144" y="2047.5" _orig_x="286.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="313.6624477861321" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(240,62,3)" rx="2" ry="2" _orig_x="320.3" _orig_width="0.1"/>
<text x="316.6624477861321" y="1919.5" _orig_x="323.30"/>
</g>
<g class="hide">
<title>__sched_yield (30 samples, 0.03%)</title><rect x="72.4" y="2053" width="0.3" height="15.0" fill="rgb(240,30,48)" rx="2" ry="2"/>
<text x="75.37" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (152 samples, 0.13%)</title><rect x="1026.8504594820383" y="1845" width="3.943191311612364" height="15.0" fill="rgb(240,131,45)" rx="2" ry="2" _orig_x="781.6" _orig_width="1.6"/>
<text x="1029.8504594820383" y="1855.5" _orig_x="784.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="15.8" y="1877" width="0.1" height="15.0" fill="rgb(206,48,41)" rx="2" ry="2"/>
<text x="18.78" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-9366.map] (24 samples, 0.02%)</title><rect x="10.316207184628293" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(215,154,0)" rx="2" ry="2" _orig_x="29.0" _orig_width="0.2"/>
<text x="13.316207184628293" y="1967.5" _orig_x="31.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25 samples, 0.02%)</title><rect x="21.5" y="1845" width="0.2" height="15.0" fill="rgb(225,220,40)" rx="2" ry="2"/>
<text x="24.49" y="1855.5"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (11 samples, 0.01%)</title><rect x="182.2681704260651" y="1669" width="0.24644945697577275" height="15.0" fill="rgb(249,144,22)" rx="2" ry="2" _orig_x="438.9" _orig_width="0.1"/>
<text x="185.2681704260651" y="1679.5" _orig_x="441.86"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_addr (16 samples, 0.01%)</title><rect x="1106.7000835421886" y="1797" width="0.4928989139515455" height="15.0" fill="rgb(251,200,44)" rx="2" ry="2" _orig_x="814.0" _orig_width="0.2"/>
<text x="1109.7000835421886" y="1807.5" _orig_x="817.00"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (36 samples, 0.03%)</title><rect x="358.47953216374265" y="1765" width="0.985797827903091" height="15.0" fill="rgb(253,66,35)" rx="2" ry="2" _orig_x="510.4" _orig_width="0.4"/>
<text x="361.47953216374265" y="1775.5" _orig_x="513.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (28 samples, 0.02%)</title><rect x="323.4511695906433" y="2021" width="0.31240601503759396" height="15.0" fill="rgb(232,108,46)" rx="2" ry="2" _orig_x="329.7" _orig_width="0.3"/>
<text x="326.4511695906433" y="2031.5" _orig_x="332.71"/>
</g>
<g class="hide">
<title>Clone_persist_gtid::periodic_write (17 samples, 0.01%)</title><rect x="325.3256056808689" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(207,2,3)" rx="2" ry="2" _orig_x="331.5" _orig_width="0.1"/>
<text x="328.3256056808689" y="1983.5" _orig_x="334.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (12 samples, 0.01%)</title><rect x="986.4327485380117" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(233,179,42)" rx="2" ry="2" _orig_x="765.2" _orig_width="0.1"/>
<text x="989.4327485380117" y="1727.5" _orig_x="768.19"/>
</g>
<g class="hide">
<title>[perf-58119.map] (17 samples, 0.01%)</title><rect x="120.80380116959068" y="1381" width="0.20827067669172933" height="15.0" fill="rgb(253,178,42)" rx="2" ry="2" _orig_x="135.1" _orig_width="0.2"/>
<text x="123.80380116959068" y="1391.5" _orig_x="138.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.04%)</title><rect x="350.83876357560575" y="1909" width="0.5206766917293233" height="15.0" fill="rgb(225,47,50)" rx="2" ry="2" _orig_x="356.0" _orig_width="0.5"/>
<text x="353.83876357560575" y="1919.5" _orig_x="359.03"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarking::AdvanceWithDeadline (23 samples, 0.02%)</title><rect x="207.1319966583125" y="1749" width="0.31240601503759396" height="15.0" fill="rgb(235,11,43)" rx="2" ry="2" _orig_x="218.0" _orig_width="0.3"/>
<text x="210.1319966583125" y="1759.5" _orig_x="221.04"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (51 samples, 0.04%)</title><rect x="110.8" y="2053" width="0.5" height="15.0" fill="rgb(205,179,53)" rx="2" ry="2"/>
<text x="113.78" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="355.5248538011696" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(215,53,0)" rx="2" ry="2" _orig_x="360.5" _orig_width="0.2"/>
<text x="358.5248538011696" y="2031.5" _orig_x="363.45"/>
</g>
<g class="hide">
<title>blink::CancelableTaskScheduler::TaskData::Run (99 samples, 0.08%)</title><rect x="32.913575605680926" y="1909" width="1.0413533834586466" height="15.0" fill="rgb(231,197,48)" rx="2" ry="2" _orig_x="50.7" _orig_width="1.0"/>
<text x="35.913575605680926" y="1919.5" _orig_x="53.67"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (11 samples, 0.01%)</title><rect x="937.1428571428572" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(227,77,33)" rx="2" ry="2" _orig_x="745.2" _orig_width="0.1"/>
<text x="940.1428571428572" y="1839.5" _orig_x="748.16"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (17 samples, 0.01%)</title><rect x="884.636507936508" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(249,97,51)" rx="2" ry="2" _orig_x="868.6" _orig_width="0.2"/>
<text x="887.636507936508" y="2031.5" _orig_x="871.60"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="933" width="0.20827067669172933" height="15.0" fill="rgb(235,10,12)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="943.5" _orig_x="328.48"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (31 samples, 0.03%)</title><rect x="537.1553884711778" y="1797" width="0.7393483709273182" height="15.0" fill="rgb(254,8,49)" rx="2" ry="2" _orig_x="582.9" _orig_width="0.3"/>
<text x="540.1553884711778" y="1807.5" _orig_x="585.86"/>
</g>
<g>
<title>operator new (11 samples, 0.01%)</title><rect x="475.7894736842105" y="1717" width="0.24644945697577275" height="15.0" fill="rgb(242,17,49)" rx="2" ry="2" _orig_x="558.0" _orig_width="0.1"/>
<text x="478.7894736842105" y="1727.5" _orig_x="560.96"/>
</g>
<g class="hide">
<title>[perf-33014.map] (34 samples, 0.03%)</title><rect x="129.86357560568092" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(207,51,21)" rx="2" ry="2" _orig_x="143.8" _orig_width="0.3"/>
<text x="132.86357560568092" y="1839.5" _orig_x="146.80"/>
</g>
<g>
<title>[libminisql_shared.so] (16 samples, 0.01%)</title><rect x="555.392648287385" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(223,24,45)" rx="2" ry="2" _orig_x="590.3" _orig_width="0.2"/>
<text x="558.392648287385" y="1839.5" _orig_x="593.34"/>
</g>
<g class="hide">
<title>snd_ctl_find_id (30 samples, 0.03%)</title><rect x="67.06996658312454" y="1941" width="0.31240601503759396" height="15.0" fill="rgb(206,173,3)" rx="2" ry="2" _orig_x="83.5" _orig_width="0.3"/>
<text x="70.06996658312454" y="1951.5" _orig_x="86.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="11.253425229741072" y="1861" width="0.20827067669172933" height="15.0" fill="rgb(248,159,17)" rx="2" ry="2" _orig_x="29.9" _orig_width="0.2"/>
<text x="14.253425229741072" y="1871.5" _orig_x="32.94"/>
</g>
<g class="hide">
<title>base::internal::Invoker&lt;base::internal::BindState&lt;base::internal::JobTaskSource::JobTaskSource (18 samples, 0.02%)</title><rect x="32.70530492898919" y="1909" width="0.20827067669172933" height="15.0" fill="rgb(253,140,48)" rx="2" ry="2" _orig_x="50.5" _orig_width="0.2"/>
<text x="35.70530492898919" y="1919.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__emplace_unique_key_args&lt;Watcher*, Watcher* const&amp;&gt; (16 samples, 0.01%)</title><rect x="154.23124477861325" y="1973" width="0.10413533834586466" height="15.0" fill="rgb(222,40,4)" rx="2" ry="2" _orig_x="167.2" _orig_width="0.1"/>
<text x="157.23124477861325" y="1983.5" _orig_x="170.17"/>
</g>
<g class="hide">
<title>v8::internal::GlobalHandles::CreateTraced (16 samples, 0.01%)</title><rect x="189.22071846282378" y="1413" width="0.20827067669172933" height="15.0" fill="rgb(242,32,49)" rx="2" ry="2" _orig_x="200.8" _orig_width="0.2"/>
<text x="192.22071846282378" y="1423.5" _orig_x="203.83"/>
</g>
<g class="hide">
<title>[chrome] (16 samples, 0.01%)</title><rect x="92.47898913951552" y="1637" width="0.20827067669172933" height="15.0" fill="rgb(244,173,21)" rx="2" ry="2" _orig_x="107.9" _orig_width="0.2"/>
<text x="95.47898913951552" y="1647.5" _orig_x="110.93"/>
</g>
<g class="hide">
<title>blink::scheduler::AgentInterferenceRecorder::OnTaskStarted (91 samples, 0.08%)</title><rect x="221.50267335004185" y="1733" width="0.937218045112782" height="15.0" fill="rgb(254,222,4)" rx="2" ry="2" _orig_x="231.8" _orig_width="0.9"/>
<text x="224.50267335004185" y="1743.5" _orig_x="234.81"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="1013" width="0.31240601503759396" height="15.0" fill="rgb(236,118,32)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="1023.5" _orig_x="32.46"/>
</g>
<g class="hide">
<title>base::TaskAnnotator::RunTask (117 samples, 0.10%)</title><rect x="32.70530492898919" y="1925" width="1.2496240601503759" height="15.0" fill="rgb(235,23,15)" rx="2" ry="2" _orig_x="50.5" _orig_width="1.2"/>
<text x="35.70530492898919" y="1935.5" _orig_x="53.49"/>
</g>
<g class="hide">
<title>do_futex_wait.constprop.0 (31 samples, 0.03%)</title><rect x="97.68575605680874" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(249,65,0)" rx="2" ry="2" _orig_x="112.9" _orig_width="0.3"/>
<text x="100.68575605680874" y="2047.5" _orig_x="115.87"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="501" width="0.20827067669172933" height="15.0" fill="rgb(236,0,10)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="511.5" _orig_x="328.48"/>
</g>
<g>
<title>Row::~Row (766 samples, 0.64%)</title><rect x="147.0258980785297" y="1845" width="18.730158730158728" height="15.0" fill="rgb(230,185,53)" rx="2" ry="2" _orig_x="424.6" _orig_width="7.6"/>
<text x="150.0258980785297" y="1855.5" _orig_x="427.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.05%)</title><rect x="308.45568086883884" y="1957" width="0.6248120300751879" height="15.0" fill="rgb(220,124,25)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="1967.5" _orig_x="318.33"/>
</g>
<g class="hide">
<title>__poll (19 samples, 0.02%)</title><rect x="915.1481620718463" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(232,20,3)" rx="2" ry="2" _orig_x="897.9" _orig_width="0.2"/>
<text x="918.1481620718463" y="1999.5" _orig_x="900.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="25.2" y="1957" width="0.2" height="15.0" fill="rgb(214,213,7)" rx="2" ry="2"/>
<text x="28.24" y="1967.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (81 samples, 0.07%)</title><rect x="902.1470342522973" y="1861" width="1.971595655806182" height="15.0" fill="rgb(218,75,41)" rx="2" ry="2" _orig_x="731.0" _orig_width="0.8"/>
<text x="905.1470342522973" y="1871.5" _orig_x="734.00"/>
</g>
<g class="hide">
<title>[perf-58119.map] (45 samples, 0.04%)</title><rect x="117.99214703425235" y="1573" width="0.41654135338345866" height="15.0" fill="rgb(242,87,49)" rx="2" ry="2" _orig_x="132.4" _orig_width="0.4"/>
<text x="120.99214703425235" y="1583.5" _orig_x="135.39"/>
</g>
<g class="hide">
<title>v8::internal::Sweeper::ParallelSweepPage (100 samples, 0.08%)</title><rect x="39.47410192147039" y="1893" width="1.0413533834586466" height="15.0" fill="rgb(247,0,40)" rx="2" ry="2" _orig_x="57.0" _orig_width="1.0"/>
<text x="42.47410192147039" y="1903.5" _orig_x="59.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="15.6" y="2021" width="0.1" height="15.0" fill="rgb(243,159,22)" rx="2" ry="2"/>
<text x="18.56" y="2031.5"/>
</g>
<g class="hide">
<title>[[vdso]] (24 samples, 0.02%)</title><rect x="43.63951545530498" y="2037" width="0.31240601503759396" height="15.0" fill="rgb(222,73,13)" rx="2" ry="2" _orig_x="61.0" _orig_width="0.3"/>
<text x="46.63951545530498" y="2047.5" _orig_x="64.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="1162.3104693140792" y="2005" width="0.2366626554352186" height="15.0" fill="rgb(235,74,26)" rx="2" ry="2" _orig_x="848.0" _orig_width="0.1"/>
<text x="1165.3104693140792" y="2015.5" _orig_x="850.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="326.78350041771097" y="2005" width="0.10413533834586466" height="15.0" fill="rgb(220,144,44)" rx="2" ry="2" _orig_x="332.9" _orig_width="0.1"/>
<text x="329.78350041771097" y="2015.5" _orig_x="335.89"/>
</g>
<g>
<title>Schema::GetColumn (11 samples, 0.01%)</title><rect x="173.64243943191306" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(244,159,31)" rx="2" ry="2" _orig_x="435.4" _orig_width="0.1"/>
<text x="176.64243943191306" y="1823.5" _orig_x="438.37"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (14 samples, 0.01%)</title><rect x="232.7492898913952" y="2037" width="0.20827067669172933" height="15.0" fill="rgb(230,220,43)" rx="2" ry="2" _orig_x="242.6" _orig_width="0.2"/>
<text x="235.7492898913952" y="2047.5" _orig_x="245.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.03%)</title><rect x="308.76808688387644" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(232,130,5)" rx="2" ry="2" _orig_x="315.6" _orig_width="0.3"/>
<text x="311.76808688387644" y="1903.5" _orig_x="318.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17 samples, 0.01%)</title><rect x="325.11733500417716" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(248,170,5)" rx="2" ry="2" _orig_x="331.3" _orig_width="0.2"/>
<text x="328.11733500417716" y="2031.5" _orig_x="334.31"/>
</g>
<g>
<title>[libminisql_shared.so] (33 samples, 0.03%)</title><rect x="865.1796157059315" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(254,129,6)" rx="2" ry="2" _orig_x="716.0" _orig_width="0.3"/>
<text x="868.1796157059315" y="1823.5" _orig_x="718.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="124.13613199665838" y="1301" width="0.31240601503759396" height="15.0" fill="rgb(215,154,43)" rx="2" ry="2" _orig_x="138.3" _orig_width="0.3"/>
<text x="127.13613199665838" y="1311.5" _orig_x="141.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="10.5" y="2005" width="0.2" height="15.0" fill="rgb(236,158,19)" rx="2" ry="2"/>
<text x="13.52" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (72 samples, 0.06%)</title><rect x="49.679365079365134" y="69" width="0.7289473684210526" height="15.0" fill="rgb(235,18,18)" rx="2" ry="2" _orig_x="66.8" _orig_width="0.7"/>
<text x="52.679365079365134" y="79.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (421 samples, 0.35%)</title><rect x="157.14703425229746" y="1973" width="4.373684210526316" height="15.0" fill="rgb(229,139,49)" rx="2" ry="2" _orig_x="170.0" _orig_width="4.2"/>
<text x="160.14703425229746" y="1983.5" _orig_x="173.02"/>
</g>
<g class="hide">
<title>os_acquire_spinlock (12 samples, 0.01%)</title><rect x="1187.3" y="2037" width="0.1" height="15.0" fill="rgb(228,73,39)" rx="2" ry="2"/>
<text x="1190.33" y="2047.5"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (19 samples, 0.02%)</title><rect x="75.1" y="2053" width="0.2" height="15.0" fill="rgb(227,69,48)" rx="2" ry="2"/>
<text x="78.13" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.12%)</title><rect x="25.103425229741077" y="1861" width="1.4578947368421051" height="15.0" fill="rgb(229,27,20)" rx="2" ry="2" _orig_x="43.2" _orig_width="1.4"/>
<text x="28.103425229741077" y="1871.5" _orig_x="46.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20 samples, 0.02%)</title><rect x="235.977485380117" y="1925" width="0.20827067669172933" height="15.0" fill="rgb(238,95,18)" rx="2" ry="2" _orig_x="245.7" _orig_width="0.2"/>
<text x="238.977485380117" y="1935.5" _orig_x="248.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(221,134,1)" rx="2" ry="2"/>
<text x="14.24" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (26 samples, 0.02%)</title><rect x="108.30756056808693" y="1957" width="0.31240601503759396" height="15.0" fill="rgb(206,110,30)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="111.30756056808693" y="1967.5" _orig_x="126.14"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (48 samples, 0.04%)</title><rect x="926.299081035923" y="1733" width="1.2322472848788637" height="15.0" fill="rgb(250,119,32)" rx="2" ry="2" _orig_x="740.8" _orig_width="0.5"/>
<text x="929.299081035923" y="1743.5" _orig_x="743.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="12.919590643274908" y="1957" width="0.20827067669172933" height="15.0" fill="rgb(232,105,10)" rx="2" ry="2" _orig_x="31.5" _orig_width="0.2"/>
<text x="15.919590643274908" y="1967.5" _orig_x="34.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15 samples, 0.01%)</title><rect x="43.74365079365085" y="1973" width="0.20827067669172933" height="15.0" fill="rgb(228,132,10)" rx="2" ry="2" _orig_x="61.1" _orig_width="0.2"/>
<text x="46.74365079365085" y="1983.5" _orig_x="64.13"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,082 samples, 0.91%)</title><rect x="904.8579782790309" y="1845" width="26.370091896407683" height="15.0" fill="rgb(206,57,33)" rx="2" ry="2" _orig_x="732.1" _orig_width="10.7"/>
<text x="907.8579782790309" y="1855.5" _orig_x="735.05">S..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (720 samples, 0.61%)</title><rect x="913.483709273183" y="1813" width="17.497911445279865" height="15.0" fill="rgb(249,204,36)" rx="2" ry="2" _orig_x="735.6" _orig_width="7.1"/>
<text x="916.483709273183" y="1823.5" _orig_x="738.56"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="581" width="2.2909774436090227" height="15.0" fill="rgb(245,32,26)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="591.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23 samples, 0.02%)</title><rect x="13.0" y="1861" width="0.3" height="15.0" fill="rgb(241,12,17)" rx="2" ry="2"/>
<text x="16.05" y="1871.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (41 samples, 0.03%)</title><rect x="994.0726817042605" y="1781" width="0.985797827903091" height="15.0" fill="rgb(237,92,7)" rx="2" ry="2" _orig_x="768.3" _orig_width="0.4"/>
<text x="997.0726817042605" y="1791.5" _orig_x="771.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.08%)</title><rect x="343.5492898913952" y="2037" width="0.937218045112782" height="15.0" fill="rgb(235,170,17)" rx="2" ry="2" _orig_x="349.0" _orig_width="0.9"/>
<text x="346.5492898913952" y="2047.5" _orig_x="351.98"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1397" width="0.31240601503759396" height="15.0" fill="rgb(230,0,28)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1407.5" _orig_x="99.72"/>
</g>
<g>
<title>BufferPoolManager::CheckAllUnpinned (179 samples, 0.15%)</title><rect x="10.985797827903033" y="1973" width="4.43609022556391" height="15.0" fill="rgb(248,193,4)" rx="2" ry="2" _orig_x="369.4" _orig_width="1.8"/>
<text x="13.985797827903033" y="1983.5" _orig_x="372.43"/>
</g>
<g class="hide">
<title>_nv013246rm (16 samples, 0.01%)</title><rect x="336.5" y="2053" width="0.2" height="15.0" fill="rgb(247,151,15)" rx="2" ry="2"/>
<text x="339.52" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (17 samples, 0.01%)</title><rect x="771.2823725981619" y="1829" width="0.4928989139515455" height="15.0" fill="rgb(231,8,0)" rx="2" ry="2" _orig_x="677.9" _orig_width="0.2"/>
<text x="774.2823725981619" y="1839.5" _orig_x="680.89"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1029" width="2.2909774436090227" height="15.0" fill="rgb(250,109,30)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1039.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="51.03312447786137" y="69" width="0.10413533834586466" height="15.0" fill="rgb(209,144,7)" rx="2" ry="2" _orig_x="68.1" _orig_width="0.1"/>
<text x="54.03312447786137" y="79.5" _orig_x="71.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="22.4" y="2005" width="0.2" height="15.0" fill="rgb(243,30,41)" rx="2" ry="2"/>
<text x="25.39" y="2015.5"/>
</g>
<g>
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (14 samples, 0.01%)</title><rect x="81.22389306599827" y="1685" width="0.24644945697577275" height="15.0" fill="rgb(238,198,29)" rx="2" ry="2" _orig_x="397.9" _orig_width="0.1"/>
<text x="84.22389306599827" y="1695.5" _orig_x="400.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="118.61695906432753" y="1701" width="0.20827067669172933" height="15.0" fill="rgb(242,176,29)" rx="2" ry="2" _orig_x="133.0" _orig_width="0.2"/>
<text x="121.61695906432753" y="1711.5" _orig_x="136.03"/>
</g>
<g class="hide">
<title>base::sequence_manager::internal::SequenceManagerImpl::SelectNextTask (26 samples, 0.02%)</title><rect x="243.3710944026734" y="1893" width="0.31240601503759396" height="15.0" fill="rgb(249,131,30)" rx="2" ry="2" _orig_x="252.8" _orig_width="0.3"/>
<text x="246.3710944026734" y="1903.5" _orig_x="255.81"/>
</g>
<g class="hide">
<title>content::ContentMainRunnerImpl::Run (492 samples, 0.41%)</title><rect x="162.5620718462824" y="1925" width="5.102631578947369" height="15.0" fill="rgb(239,20,12)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="1935.5" _orig_x="178.24"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (51 samples, 0.04%)</title><rect x="86.89223057644108" y="1813" width="1.2322472848788637" height="15.0" fill="rgb(251,13,43)" rx="2" ry="2" _orig_x="400.2" _orig_width="0.5"/>
<text x="89.89223057644108" y="1823.5" _orig_x="403.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="13.4" y="1877" width="0.2" height="15.0" fill="rgb(239,11,31)" rx="2" ry="2"/>
<text x="16.38" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (487 samples, 0.41%)</title><rect x="893.3838763575606" y="1909" width="4.998496240601503" height="15.0" fill="rgb(222,199,28)" rx="2" ry="2" _orig_x="877.0" _orig_width="4.8"/>
<text x="896.3838763575606" y="1919.5" _orig_x="880.00"/>
</g>
<g>
<title>malloc (11 samples, 0.01%)</title><rect x="989.3901420217209" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(254,204,27)" rx="2" ry="2" _orig_x="766.4" _orig_width="0.1"/>
<text x="992.3901420217209" y="1711.5" _orig_x="769.39"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (38 samples, 0.03%)</title><rect x="426.9924812030076" y="1717" width="0.985797827903091" height="15.0" fill="rgb(230,41,32)" rx="2" ry="2" _orig_x="538.2" _orig_width="0.4"/>
<text x="429.9924812030076" y="1727.5" _orig_x="541.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19 samples, 0.02%)</title><rect x="21.6" y="1829" width="0.1" height="15.0" fill="rgb(234,122,1)" rx="2" ry="2"/>
<text x="24.55" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="119.24177109440272" y="1813" width="0.20827067669172933" height="15.0" fill="rgb(211,152,7)" rx="2" ry="2" _orig_x="133.6" _orig_width="0.2"/>
<text x="122.24177109440272" y="1823.5" _orig_x="136.65"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (29 samples, 0.02%)</title><rect x="57.31829573934834" y="1765" width="0.7393483709273182" height="15.0" fill="rgb(238,83,21)" rx="2" ry="2" _orig_x="388.2" _orig_width="0.3"/>
<text x="60.31829573934834" y="1775.5" _orig_x="391.19"/>
</g>
<g class="hide">
<title>[perf-32884.map] (56 samples, 0.05%)</title><rect x="99.03951545530498" y="1509" width="0.6248120300751879" height="15.0" fill="rgb(231,137,40)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.6"/>
<text x="102.03951545530498" y="1519.5" _orig_x="117.21"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; const&amp;&gt; (17 samples, 0.01%)</title><rect x="1162.6441102756894" y="1861" width="0.4928989139515455" height="15.0" fill="rgb(222,138,5)" rx="2" ry="2" _orig_x="836.7" _orig_width="0.2"/>
<text x="1165.6441102756894" y="1871.5" _orig_x="839.75"/>
</g>
<g class="hide">
<title>blink::V8EventTarget::DispatchEventMethodCallback (130 samples, 0.11%)</title><rect x="183.5974101921471" y="1525" width="1.3537593984962406" height="15.0" fill="rgb(233,107,17)" rx="2" ry="2" _orig_x="195.4" _orig_width="1.3"/>
<text x="186.5974101921471" y="1535.5" _orig_x="198.39"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (13 samples, 0.01%)</title><rect x="226.3826232247285" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(234,11,16)" rx="2" ry="2" _orig_x="456.8" _orig_width="0.1"/>
<text x="229.3826232247285" y="1775.5" _orig_x="459.76"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="149" width="0.20827067669172933" height="15.0" fill="rgb(207,158,31)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="159.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[perf-32996.map] (83 samples, 0.07%)</title><rect x="17.6" y="1525" width="0.8" height="15.0" fill="rgb(232,169,44)" rx="2" ry="2"/>
<text x="20.60" y="1535.5"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (19 samples, 0.02%)</title><rect x="994.5655806182122" y="1749" width="0.4928989139515455" height="15.0" fill="rgb(218,118,25)" rx="2" ry="2" _orig_x="768.5" _orig_width="0.2"/>
<text x="997.5655806182122" y="1759.5" _orig_x="771.47"/>
</g>
<g class="hide">
<title>[unknown] (24 samples, 0.02%)</title><rect x="80.81583124477866" y="1589" width="0.31240601503759396" height="15.0" fill="rgb(213,5,29)" rx="2" ry="2" _orig_x="96.7" _orig_width="0.3"/>
<text x="83.81583124477866" y="1599.5" _orig_x="99.72"/>
</g>
<g class="hide">
<title>[code] (34 samples, 0.03%)</title><rect x="125.59402673350046" y="1877" width="0.41654135338345866" height="15.0" fill="rgb(211,219,25)" rx="2" ry="2" _orig_x="139.7" _orig_width="0.4"/>
<text x="128.59402673350047" y="1887.5" _orig_x="142.74"/>
</g>
<g class="hide">
<title>[chrome] (76 samples, 0.06%)</title><rect x="11.4" y="2037" width="0.7" height="15.0" fill="rgb(230,201,52)" rx="2" ry="2"/>
<text x="14.39" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (89 samples, 0.07%)</title><rect x="706.4661654135339" y="1717" width="2.218045112781955" height="15.0" fill="rgb(215,179,1)" rx="2" ry="2" _orig_x="651.6" _orig_width="0.9"/>
<text x="709.4661654135339" y="1727.5" _orig_x="654.58"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (21 samples, 0.02%)</title><rect x="1002.6984126984125" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(232,7,9)" rx="2" ry="2" _orig_x="771.8" _orig_width="0.2"/>
<text x="1005.6984126984125" y="1775.5" _orig_x="774.81"/>
</g>
<g>
<title>Field::Field (11 samples, 0.01%)</title><rect x="170.6850459482038" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(214,140,19)" rx="2" ry="2" _orig_x="434.2" _orig_width="0.1"/>
<text x="173.6850459482038" y="1839.5" _orig_x="437.22"/>
</g>
<g>
<title>__memset_avx2_unaligned (11 samples, 0.01%)</title><rect x="74.81620718462825" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(218,167,26)" rx="2" ry="2" _orig_x="395.3" _orig_width="0.1"/>
<text x="77.81620718462825" y="1775.5" _orig_x="398.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.04%)</title><rect x="54.99026733500424" y="1749" width="0.5206766917293233" height="15.0" fill="rgb(235,202,39)" rx="2" ry="2" _orig_x="71.9" _orig_width="0.5"/>
<text x="57.99026733500424" y="1759.5" _orig_x="74.91"/>
</g>
<g>
<title>GenericKey&lt;32ul&gt;::DeserializeToKey (1,981 samples, 1.67%)</title><rect x="17.63993316624901" y="1845" width="48.55054302422723" height="15.0" fill="rgb(254,202,34)" rx="2" ry="2" _orig_x="372.1" _orig_width="19.7"/>
<text x="20.63993316624901" y="1855.5" _orig_x="375.10">Gener..</text>
</g>
<g class="hide">
<title>[Xorg] (33 samples, 0.03%)</title><rect x="49.887635756056866" y="37" width="0.31240601503759396" height="15.0" fill="rgb(222,175,34)" rx="2" ry="2" _orig_x="67.0" _orig_width="0.3"/>
<text x="52.887635756056866" y="47.5" _orig_x="70.00"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (72 samples, 0.06%)</title><rect x="138.15371762740185" y="1749" width="1.7251461988304093" height="15.0" fill="rgb(206,174,44)" rx="2" ry="2" _orig_x="421.0" _orig_width="0.7"/>
<text x="141.15371762740185" y="1759.5" _orig_x="423.99"/>
</g>
<g class="hide">
<title>g_type_create_instance (12 samples, 0.01%)</title><rect x="289.086507936508" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(237,7,7)" rx="2" ry="2" _orig_x="296.7" _orig_width="0.1"/>
<text x="292.086507936508" y="2031.5" _orig_x="299.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.13%)</title><rect x="928.7898913951545" y="1861" width="1.5620300751879699" height="15.0" fill="rgb(222,203,49)" rx="2" ry="2" _orig_x="911.0" _orig_width="1.5"/>
<text x="931.7898913951545" y="1871.5" _orig_x="913.95"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::deallocate (16 samples, 0.01%)</title><rect x="939.1144527986634" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(247,141,33)" rx="2" ry="2" _orig_x="746.0" _orig_width="0.1"/>
<text x="942.1144527986634" y="1807.5" _orig_x="748.96"/>
</g>
<g class="hide">
<title>[unknown] (21 samples, 0.02%)</title><rect x="319.077485380117" y="709" width="0.20827067669172933" height="15.0" fill="rgb(230,56,19)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="322.077485380117" y="719.5" _orig_x="328.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="270.3421470342523" y="1829" width="0.10413533834586466" height="15.0" fill="rgb(226,11,34)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1839.5" _orig_x="281.71"/>
</g>
<g class="hide">
<title>runtime.epollwait.abi0 (16 samples, 0.01%)</title><rect x="270.3421470342523" y="1925" width="0.10413533834586466" height="15.0" fill="rgb(217,125,50)" rx="2" ry="2" _orig_x="278.7" _orig_width="0.1"/>
<text x="273.3421470342523" y="1935.5" _orig_x="281.68"/>
</g>
<g class="hide">
<title>[unknown] (31 samples, 0.03%)</title><rect x="10.836883876357616" y="309" width="0.31240601503759396" height="15.0" fill="rgb(230,52,37)" rx="2" ry="2" _orig_x="29.5" _orig_width="0.3"/>
<text x="13.836883876357616" y="319.5" _orig_x="32.46"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::deallocate (12 samples, 0.01%)</title><rect x="1147.1177944862154" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(241,89,38)" rx="2" ry="2" _orig_x="830.4" _orig_width="0.1"/>
<text x="1150.1177944862154" y="1839.5" _orig_x="833.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.11%)</title><rect x="54.15718462823731" y="1893" width="1.3537593984962406" height="15.0" fill="rgb(220,60,3)" rx="2" ry="2" _orig_x="71.1" _orig_width="1.3"/>
<text x="57.15718462823731" y="1903.5" _orig_x="74.06"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (23 samples, 0.02%)</title><rect x="287.1079365079366" y="1845" width="0.20827067669172933" height="15.0" fill="rgb(235,187,10)" rx="2" ry="2" _orig_x="294.8" _orig_width="0.2"/>
<text x="290.1079365079366" y="1855.5" _orig_x="297.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.06%)</title><rect x="93.93688387635761" y="1989" width="0.8330827067669173" height="15.0" fill="rgb(250,46,44)" rx="2" ry="2" _orig_x="109.3" _orig_width="0.8"/>
<text x="96.93688387635761" y="1999.5" _orig_x="112.32"/>
</g>
<g class="hide">
<title>[perf-58145.map] (217 samples, 0.18%)</title><rect x="126.53124477861324" y="1733" width="2.186842105263158" height="15.0" fill="rgb(252,227,16)" rx="2" ry="2" _orig_x="140.6" _orig_width="2.1"/>
<text x="129.53124477861326" y="1743.5" _orig_x="143.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.05%)</title><rect x="308.45568086883884" y="2021" width="0.6248120300751879" height="15.0" fill="rgb(216,215,14)" rx="2" ry="2" _orig_x="315.3" _orig_width="0.6"/>
<text x="311.45568086883884" y="2031.5" _orig_x="318.31"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="485" width="0.31240601503759396" height="15.0" fill="rgb(214,101,12)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="495.5" _orig_x="48.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (65 samples, 0.05%)</title><rect x="367.1052631578947" y="1797" width="1.4786967418546364" height="15.0" fill="rgb(220,36,12)" rx="2" ry="2" _orig_x="513.9" _orig_width="0.6"/>
<text x="370.1052631578947" y="1807.5" _orig_x="516.86"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~allocator (12 samples, 0.01%)</title><rect x="376.22389306599837" y="1749" width="0.24644945697577275" height="15.0" fill="rgb(250,183,47)" rx="2" ry="2" _orig_x="517.6" _orig_width="0.1"/>
<text x="379.22389306599837" y="1759.5" _orig_x="520.62"/>
</g>
<g class="hide">
<title>_int_malloc (28 samples, 0.02%)</title><rect x="1162.0738066586441" y="2053" width="0.4733253108704372" height="15.0" fill="rgb(229,225,43)" rx="2" ry="2" _orig_x="847.9" _orig_width="0.2"/>
<text x="1165.0738066586441" y="2063.5" _orig_x="850.86"/>
</g>
<g class="hide">
<title>v8::HandleScope::CreateHandle (22 samples, 0.02%)</title><rect x="201.5086883876358" y="1717" width="0.31240601503759396" height="15.0" fill="rgb(208,64,0)" rx="2" ry="2" _orig_x="212.6" _orig_width="0.3"/>
<text x="204.5086883876358" y="1727.5" _orig_x="215.64"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.19%)</title><rect x="49.679365079365134" y="1045" width="2.2909774436090227" height="15.0" fill="rgb(208,18,29)" rx="2" ry="2" _orig_x="66.8" _orig_width="2.2"/>
<text x="52.679365079365134" y="1055.5" _orig_x="69.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (252 samples, 0.21%)</title><rect x="236.60229741019222" y="1989" width="2.6033834586466167" height="15.0" fill="rgb(222,45,29)" rx="2" ry="2" _orig_x="246.3" _orig_width="2.5"/>
<text x="239.60229741019222" y="1999.5" _orig_x="249.25"/>
</g>
<g class="hide">
<title>operator delete[] (16 samples, 0.01%)</title><rect x="172.55906432748543" y="1797" width="0.10413533834586466" height="15.0" fill="rgb(229,177,22)" rx="2" ry="2" _orig_x="184.8" _orig_width="0.1"/>
<text x="175.55906432748543" y="1807.5" _orig_x="187.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (22 samples, 0.02%)</title><rect x="124.24026733500423" y="1125" width="0.20827067669172933" height="15.0" fill="rgb(231,49,3)" rx="2" ry="2" _orig_x="138.4" _orig_width="0.2"/>
<text x="127.24026733500423" y="1135.5" _orig_x="141.39"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (15 samples, 0.01%)</title><rect x="190.15455304928994" y="1701" width="0.24644945697577275" height="15.0" fill="rgb(220,11,27)" rx="2" ry="2" _orig_x="442.1" _orig_width="0.1"/>
<text x="193.15455304928994" y="1711.5" _orig_x="445.06"/>
</g>
<g>
<title>TypeInt::CompareGreaterThan (12 samples, 0.01%)</title><rect x="168.95989974937342" y="1829" width="0.24644945697577275" height="15.0" fill="rgb(247,111,38)" rx="2" ry="2" _orig_x="433.5" _orig_width="0.1"/>
<text x="171.95989974937342" y="1839.5" _orig_x="436.46"/>
</g>
<g class="hide">
<title>__libc_recvmsg (17 samples, 0.01%)</title><rect x="276.06959064327486" y="1989" width="0.20827067669172933" height="15.0" fill="rgb(225,157,35)" rx="2" ry="2" _orig_x="284.2" _orig_width="0.2"/>
<text x="279.06959064327486" y="1999.5" _orig_x="287.24"/>
</g>
<g class="hide">
<title>cef_execute_process (492 samples, 0.41%)</title><rect x="162.5620718462824" y="2005" width="5.102631578947369" height="15.0" fill="rgb(222,65,13)" rx="2" ry="2" _orig_x="175.2" _orig_width="4.9"/>
<text x="165.5620718462824" y="2015.5" _orig_x="178.24"/>
</g>
<g class="hide">
<title>[unknown] (30 samples, 0.03%)</title><rect x="27.915079365079418" y="949" width="0.31240601503759396" height="15.0" fill="rgb(234,23,26)" rx="2" ry="2" _orig_x="45.9" _orig_width="0.3"/>
<text x="30.915079365079418" y="959.5" _orig_x="48.87"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (885 samples, 0.74%)</title><rect x="251.02756892230576" y="1797" width="21.687552213868006" height="15.0" fill="rgb(210,71,35)" rx="2" ry="2" _orig_x="466.8" _orig_width="8.8"/>
<text x="254.02756892230576" y="1807.5" _orig_x="469.82">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18 samples, 0.02%)</title><rect x="41.45267335004182" y="1941" width="0.20827067669172933" height="15.0" fill="rgb(209,132,0)" rx="2" ry="2" _orig_x="58.9" _orig_width="0.2"/>
<text x="44.45267335004182" y="1951.5" _orig_x="61.88"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (28 samples, 0.02%)</title><rect x="813.671679197995" y="1701" width="0.7393483709273182" height="15.0" fill="rgb(253,62,37)" rx="2" ry="2" _orig_x="695.1" _orig_width="0.3"/>
<text x="816.671679197995" y="1711.5" _orig_x="698.10"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (14 samples, 0.01%)</title><rect x="876.8263575605681" y="2021" width="0.10413533834586466" height="15.0" fill="rgb(216,35,19)" rx="2" ry="2" _orig_x="861.1" _orig_width="0.1"/>
<text x="879.8263575605681" y="2031.5" _orig_x="864.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (16 samples, 0.01%)</title><rect x="19.6" y="1717" width="0.2" height="15.0" fill="rgb(245,177,2)" rx="2" ry="2"/>
<text x="22.64" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21 samples, 0.02%)</title><rect x="55.61507936507942" y="2021" width="0.20827067669172933" height="15.0" fill="rgb(246,186,10)" rx="2" ry="2" _orig_x="72.5" _orig_width="0.2"/>
<text x="58.61507936507942" y="2031.5" _orig_x="75.46"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (182 samples, 0.15%)</title><rect x="425.02088554720126" y="1749" width="4.43609022556391" height="15.0" fill="rgb(242,21,33)" rx="2" ry="2" _orig_x="537.4" _orig_width="1.8"/>
<text x="428.02088554720126" y="1759.5" _orig_x="540.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11 samples, 0.01%)</title><rect x="51.55380116959069" y="149" width="0.20827067669172933" height="15.0" fill="rgb(222,109,26)" rx="2" ry="2" _orig_x="68.6" _orig_width="0.2"/>
<text x="54.55380116959069" y="159.5" _orig_x="71.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (12 samples, 0.01%)</title><rect x="489.8370927318296" y="1797" width="0.24644945697577275" height="15.0" fill="rgb(250,150,3)" rx="2" ry="2" _orig_x="563.7" _orig_width="0.1"/>
<text x="492.8370927318296" y="1807.5" _orig_x="566.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (275 samples, 0.23%)</title><rect x="340.735171261487" y="1749" width="6.654135338345864" height="15.0" fill="rgb(227,32,25)" rx="2" ry="2" _orig_x="503.2" _orig_width="2.7"/>
<text x="343.735171261487" y="1759.5" _orig_x="506.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32 samples, 0.03%)</title><rect x="108.61996658312454" y="2005" width="0.31240601503759396" height="15.0" fill="rgb(223,180,20)" rx="2" ry="2" _orig_x="123.4" _orig_width="0.3"/>
<text x="111.61996658312454" y="2015.5" _orig_x="126.43"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (50 samples, 0.04%)</title><rect x="118.43776106934001" y="1797" width="1.2322472848788637" height="15.0" fill="rgb(244,135,4)" rx="2" ry="2" _orig_x="413.0" _orig_width="0.5"/>
<text x="121.43776106934001" y="1807.5" _orig_x="415.97"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (37 samples, 0.03%)</title><rect x="146.04010025062652" y="1813" width="0.985797827903091" height="15.0" fill="rgb(237,105,4)" rx="2" ry="2" _orig_x="424.2" _orig_width="0.4"/>
<text x="149.04010025062652" y="1823.5" _orig_x="427.23"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (14 samples, 0.01%)</title><rect x="1117.0509607351712" y="1765" width="0.4928989139515455" height="15.0" fill="rgb(224,64,14)" rx="2" ry="2" _orig_x="818.2" _orig_width="0.2"/>
<text x="1120.0509607351712" y="1775.5" _orig_x="821.24"/>
</g>
<g class="hide">
<title>[code] (200 samples, 0.17%)</title><rect x="119.45004177109446" y="1797" width="2.082706766917293" height="15.0" fill="rgb(219,173,17)" rx="2" ry="2" _orig_x="133.8" _orig_width="2.0"/>
<text x="122.45004177109446" y="1807.5" _orig_x="136.85"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (118 samples, 0.10%)</title><rect x="17.3" y="1749" width="1.1" height="15.0" fill="rgb(206,201,45)" rx="2" ry="2"/>
<text x="20.25" y="1759.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (16 samples, 0.01%)</title><rect x="604.9289891395154" y="1765" width="0.24644945697577275" height="15.0" fill="rgb(242,184,38)" rx="2" ry="2" _orig_x="610.4" _orig_width="0.1"/>
<text x="607.9289891395154" y="1775.5" _orig_x="613.39"/>
</g>
<g class="hide">
<title>[chrome] (103 samples, 0.09%)</title><rect x="86.0225981620719" y="1893" width="1.0413533834586466" height="15.0" fill="rgb(251,51,32)" rx="2" ry="2" _orig_x="101.7" _orig_width="1.0"/>
<text x="89.0225981620719" y="1903.5" _orig_x="104.66"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (13 samples, 0.01%)</title><rect x="1029.8078529657473" y="1813" width="0.24644945697577275" height="15.0" fill="rgb(217,130,17)" rx="2" ry="2" _orig_x="782.8" _orig_width="0.1"/>
<text x="1032.8078529657473" y="1823.5" _orig_x="785.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13 samples, 0.01%)</title><rect x="1181.4" y="1525" width="0.2" height="15.0" fill="rgb(233,3,22)" rx="2" ry="2"/>
<text x="1184.44" y="1535.5"/>
</g>
<g class="hide">
<title>[code] (645 samples, 0.54%)</title><rect x="111.74402673350048" y="1733" width="6.6646616541353385" height="15.0" fill="rgb(239,69,34)" rx="2" ry="2" _orig_x="126.4" _orig_width="6.4"/>
<text x="114.74402673350048" y="1743.5" _orig_x="129.43"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (25 samples, 0.02%)</title><rect x="305.24644945697577" y="1813" width="0.7393483709273182" height="15.0" fill="rgb(222,146,4)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.3"/>
<text x="308.24644945697577" y="1823.5" _orig_x="491.81"/>
</g>
<g class="hide">
<title>[code] (27 samples, 0.02%)</title><rect x="125.69816207184634" y="1829" width="0.31240601503759396" height="15.0" fill="rgb(230,137,46)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.3"/>
<text x="128.69816207184635" y="1839.5" _orig_x="142.79"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (927 samples, 0.78%)</title><rect x="95.51796157059312" y="1813" width="22.67335004177109" height="15.0" fill="rgb(219,221,49)" rx="2" ry="2" _orig_x="403.7" _orig_width="9.2"/>
<text x="98.51796157059312" y="1823.5" _orig_x="406.69"/>
</g>
<g class="hide">
<title>[chrome] (15 samples, 0.01%)</title><rect x="30.93500417710949" y="1909" width="0.10413533834586466" height="15.0" fill="rgb(222,191,14)" rx="2" ry="2" _orig_x="48.8" _orig_width="0.1"/>
<text x="33.93500417710949" y="1919.5" _orig_x="51.77"/>
</g>
<g>
<title>BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Insert (31,488 samples, 26.48%)</title><rect x="15.668337510442797" y="1941" width="770.1545530492899" height="15.0" fill="rgb(235,120,53)" rx="2" ry="2" _orig_x="371.3" _orig_width="312.5"/>
<text x="18.668337510442797" y="1951.5" _orig_x="374.35">BPlusTree&lt;GenericKey&lt;32ul&gt;, RowId, GenericComparator&lt;32ul&gt; &gt;::Insert </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (14 samples, 0.01%)</title><rect x="130.8007936507937" y="1397" width="0.20827067669172933" height="15.0" fill="rgb(205,193,20)" rx="2" ry="2" _orig_x="144.7" _orig_width="0.2"/>
<text x="133.8007936507937" y="1407.5" _orig_x="147.71"/>
</g>
<g>
<title>Row::GetField (26 samples, 0.02%)</title><rect x="528.28320802005" y="1861" width="0.7393483709273182" height="15.0" fill="rgb(214,124,35)" rx="2" ry="2" _orig_x="579.3" _orig_width="0.3"/>
<text x="531.28320802005" y="1871.5" _orig_x="582.34"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (14 samples, 0.01%)</title><rect x="503.14536340852135" y="1813" width="0.4928989139515455" height="15.0" fill="rgb(239,46,34)" rx="2" ry="2" _orig_x="569.1" _orig_width="0.2"/>
<text x="506.14536340852135" y="1823.5" _orig_x="572.13"/>
</g>
</g>
</svg>
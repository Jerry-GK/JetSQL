<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
		<stop stop-color="#eeeeee" offset="5%"/>
		<stop stop-color="#eeeeb0" offset="95%"/>
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2118.0" fill="url(#background)"/>
<text id="title" x="600.00" y="24">Flame Graph</text>
<text id="details" x="10.00" y="2101"> </text>
<text id="unzoom" x="10.00" y="24" class="">Reset Zoom</text>
<text id="search" x="1090.00" y="24">Search</text>
<text id="ignorecase" x="1174.00" y="24">ic</text>
<text id="matched" x="1090.00" y="2101"> </text>
<g id="frames">
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="49.3" y="1989" width="0.2" height="15.0" fill="rgb(240,8,47)" rx="2" ry="2"/>
<text x="52.3" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1701" width="0.2" height="15.0" fill="rgb(252,21,18)" rx="2" ry="2"/>
<text x="30" y="1711.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (38 samples, 0.01%)</title><rect x="494.5" y="1861" width="0.1" height="15.0" fill="rgb(239,94,52)" rx="2" ry="2"/>
<text x="497.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (51 samples, 0.01%)</title><rect x="499.2" y="1813" width="0.1" height="15.0" fill="rgb(220,222,31)" rx="2" ry="2"/>
<text x="502.2" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (368 samples, 0.09%)</title><rect x="384.8" y="1957" width="1.0" height="15.0" fill="rgb(240,168,54)" rx="2" ry="2"/>
<text x="387.8" y="1967.5"/>
</g>
<g class="hide">
<title>__libc_send (83 samples, 0.02%)</title><rect x="16.9" y="2037" width="0.2" height="15.0" fill="rgb(235,166,27)" rx="2" ry="2"/>
<text x="19.9" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (61 samples, 0.01%)</title><rect x="582.4" y="1813" width="0.2" height="15.0" fill="rgb(245,87,47)" rx="2" ry="2"/>
<text x="585.4" y="1823.5"/>
</g>
<g class="hide">
<title>Field::GetSerializedSize (59 samples, 0.01%)</title><rect x="639.8" y="1925" width="0.2" height="15.0" fill="rgb(217,71,52)" rx="2" ry="2"/>
<text x="642.8" y="1935.5"/>
</g>
<g class="hide">
<title>Page::WLatch (47 samples, 0.01%)</title><rect x="447.9" y="1877" width="0.1" height="15.0" fill="rgb(212,30,27)" rx="2" ry="2"/>
<text x="450.9" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (166 samples, 0.04%)</title><rect x="360.6" y="1941" width="0.4" height="15.0" fill="rgb(224,187,53)" rx="2" ry="2"/>
<text x="363.6" y="1951.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (910 samples, 0.21%)</title><rect x="602.8" y="1829" width="2.5" height="15.0" fill="rgb(210,16,0)" rx="2" ry="2"/>
<text x="605.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="392.0" y="1973" width="0.1" height="15.0" fill="rgb(228,117,9)" rx="2" ry="2"/>
<text x="395" y="1983.5"/>
</g>
<g class="hide">
<title>TypeChar::CompareGreaterThan (59 samples, 0.01%)</title><rect x="415.7" y="1845" width="0.2" height="15.0" fill="rgb(229,39,1)" rx="2" ry="2"/>
<text x="418.7" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (56 samples, 0.01%)</title><rect x="646.9" y="1765" width="0.1" height="15.0" fill="rgb(216,214,43)" rx="2" ry="2"/>
<text x="649.9" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (3,095 samples, 0.72%)</title><rect x="238.7" y="1797" width="8.5" height="15.0" fill="rgb(242,201,40)" rx="2" ry="2"/>
<text x="241.7" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="206.4" y="1861" width="0.3" height="15.0" fill="rgb(245,38,40)" rx="2" ry="2"/>
<text x="209.4" y="1871.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (44 samples, 0.01%)</title><rect x="591.1" y="1861" width="0.1" height="15.0" fill="rgb(225,144,35)" rx="2" ry="2"/>
<text x="594.1" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1397" width="0.8" height="15.0" fill="rgb(230,166,16)" rx="2" ry="2"/>
<text x="57.8" y="1407.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="389" width="0.8" height="15.0" fill="rgb(230,73,23)" rx="2" ry="2"/>
<text x="57.8" y="399.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="52.1" y="2005" width="0.7" height="15.0" fill="rgb(223,202,42)" rx="2" ry="2"/>
<text x="55.1" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (229 samples, 0.05%)</title><rect x="515.2" y="1813" width="0.6" height="15.0" fill="rgb(210,27,27)" rx="2" ry="2"/>
<text x="518.2" y="1823.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvents (154 samples, 0.04%)</title><rect x="261.3" y="2005" width="0.4" height="15.0" fill="rgb(240,68,26)" rx="2" ry="2"/>
<text x="264.3" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.03%)</title><rect x="1126.8" y="1557" width="0.3" height="15.0" fill="rgb(215,179,54)" rx="2" ry="2"/>
<text x="1129.8" y="1567.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="364.5" y="1973" width="0.2" height="15.0" fill="rgb(223,19,34)" rx="2" ry="2"/>
<text x="367.5" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (80 samples, 0.02%)</title><rect x="418.5" y="1717" width="0.2" height="15.0" fill="rgb(240,55,30)" rx="2" ry="2"/>
<text x="421.5" y="1727.5"/>
</g>
<g class="hide">
<title>Field::CompareLessThan (180 samples, 0.04%)</title><rect x="600.6" y="1909" width="0.5" height="15.0" fill="rgb(241,65,25)" rx="2" ry="2"/>
<text x="603.6" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="949" width="0.1" height="15.0" fill="rgb(244,153,48)" rx="2" ry="2"/>
<text x="247" y="959.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103,174 samples, 23.90%)</title><rect x="845.8" y="1941" width="282.0" height="15.0" fill="rgb(248,11,20)" rx="2" ry="2"/>
<text x="848.8" y="1951.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.02%)</title><rect x="26.5" y="1925" width="0.2" height="15.0" fill="rgb(224,4,54)" rx="2" ry="2"/>
<text x="29.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.02%)</title><rect x="237.1" y="1877" width="0.3" height="15.0" fill="rgb(236,154,1)" rx="2" ry="2"/>
<text x="240.1" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (889 samples, 0.21%)</title><rect x="586.8" y="1781" width="2.5" height="15.0" fill="rgb(215,196,54)" rx="2" ry="2"/>
<text x="589.8" y="1791.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (145 samples, 0.03%)</title><rect x="243.5" y="1013" width="0.4" height="15.0" fill="rgb(254,186,12)" rx="2" ry="2"/>
<text x="246.5" y="1023.5"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (77 samples, 0.02%)</title><rect x="362.0" y="1989" width="0.3" height="15.0" fill="rgb(231,51,40)" rx="2" ry="2"/>
<text x="365" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="203.2" y="1957" width="0.1" height="15.0" fill="rgb(227,126,24)" rx="2" ry="2"/>
<text x="206.2" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="379.9" y="1861" width="0.2" height="15.0" fill="rgb(251,123,53)" rx="2" ry="2"/>
<text x="382.9" y="1871.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (54 samples, 0.01%)</title><rect x="425.5" y="1765" width="0.2" height="15.0" fill="rgb(214,38,54)" rx="2" ry="2"/>
<text x="428.5" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (548 samples, 0.13%)</title><rect x="208.6" y="1861" width="1.5" height="15.0" fill="rgb(253,178,49)" rx="2" ry="2"/>
<text x="211.6" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (426 samples, 0.10%)</title><rect x="50.6" y="1957" width="1.2" height="15.0" fill="rgb(233,27,2)" rx="2" ry="2"/>
<text x="53.6" y="1967.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (266 samples, 0.06%)</title><rect x="647.3" y="1829" width="0.7" height="15.0" fill="rgb(206,224,1)" rx="2" ry="2"/>
<text x="650.3" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (41 samples, 0.01%)</title><rect x="625.1" y="1861" width="0.1" height="15.0" fill="rgb(222,187,28)" rx="2" ry="2"/>
<text x="628.1" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="245.3" y="1381" width="0.2" height="15.0" fill="rgb(233,116,49)" rx="2" ry="2"/>
<text x="248.3" y="1391.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,588 samples, 0.60%)</title><rect x="253.9" y="2005" width="7.1" height="15.0" fill="rgb(233,60,43)" rx="2" ry="2"/>
<text x="256.9" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (94 samples, 0.02%)</title><rect x="27.0" y="1957" width="0.2" height="15.0" fill="rgb(241,173,39)" rx="2" ry="2"/>
<text x="30" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (82 samples, 0.02%)</title><rect x="44.0" y="1829" width="0.3" height="15.0" fill="rgb(205,113,8)" rx="2" ry="2"/>
<text x="47" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="581" width="0.8" height="15.0" fill="rgb(254,28,20)" rx="2" ry="2"/>
<text x="57.8" y="591.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,029 samples, 4.18%)</title><rect x="1078.5" y="1829" width="49.3" height="15.0" fill="rgb(237,78,9)" rx="2" ry="2"/>
<text x="1081.5" y="1839.5">[[ker..</text>
</g>
<g class="hide">
<title>[github-desktop] (40 samples, 0.01%)</title><rect x="354.5" y="1861" width="0.1" height="15.0" fill="rgb(253,195,39)" rx="2" ry="2"/>
<text x="357.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (41 samples, 0.01%)</title><rect x="491.1" y="1829" width="0.1" height="15.0" fill="rgb(236,32,34)" rx="2" ry="2"/>
<text x="494.1" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (85 samples, 0.02%)</title><rect x="449.5" y="1813" width="0.2" height="15.0" fill="rgb(227,183,20)" rx="2" ry="2"/>
<text x="452.5" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="1989" width="0.2" height="15.0" fill="rgb(221,189,17)" rx="2" ry="2"/>
<text x="801" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (644 samples, 0.15%)</title><rect x="384.0" y="2021" width="1.8" height="15.0" fill="rgb(231,5,50)" rx="2" ry="2"/>
<text x="387" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="1973" width="1.9" height="15.0" fill="rgb(224,148,48)" rx="2" ry="2"/>
<text x="17.1" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1333" width="0.2" height="15.0" fill="rgb(252,123,11)" rx="2" ry="2"/>
<text x="248.6" y="1343.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="347.5" y="1957" width="0.1" height="15.0" fill="rgb(230,215,40)" rx="2" ry="2"/>
<text x="350.5" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (89 samples, 0.02%)</title><rect x="245.6" y="1605" width="0.2" height="15.0" fill="rgb(248,154,10)" rx="2" ry="2"/>
<text x="248.6" y="1615.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (47 samples, 0.01%)</title><rect x="614.8561151079136" y="1845" width="4.244604316546762" height="15.0" fill="rgb(234,84,22)" rx="2" ry="2" _orig_x="548.8" _orig_width="0.2"/>
<text x="617.8561151079136" y="1855.5" _orig_x="551.8"/>
</g>
<g class="hide">
<title>[unknown] (500 samples, 0.12%)</title><rect x="31.9" y="2037" width="1.4" height="15.0" fill="rgb(249,51,3)" rx="2" ry="2"/>
<text x="34.9" y="2047.5"/>
</g>
<g class="">
<title>Field::DeserializeFrom (7,796 samples, 1.81%)</title><rect x="65.1798561151084" y="1861" width="452.0503597122302" height="15.0" fill="rgb(206,160,23)" rx="2" ry="2" _orig_x="522.9" _orig_width="21.3"/>
<text x="68.1798561151084" y="1871.5" _orig_x="525.9">Field::DeserializeFrom </text>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (40 samples, 0.01%)</title><rect x="472.1" y="1829" width="0.1" height="15.0" fill="rgb(225,146,48)" rx="2" ry="2"/>
<text x="475.1" y="1839.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::EntryAt (1,289 samples, 0.30%)</title><rect x="436.0" y="1893" width="3.6" height="15.0" fill="rgb(216,139,13)" rx="2" ry="2"/>
<text x="439" y="1903.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (53 samples, 0.01%)</title><rect x="641.7" y="1925" width="0.1" height="15.0" fill="rgb(239,54,20)" rx="2" ry="2"/>
<text x="644.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (180 samples, 0.04%)</title><rect x="382.9" y="1957" width="0.5" height="15.0" fill="rgb(244,21,19)" rx="2" ry="2"/>
<text x="385.9" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (37 samples, 0.01%)</title><rect x="468.2" y="1717" width="0.1" height="15.0" fill="rgb(214,72,23)" rx="2" ry="2"/>
<text x="471.2" y="1727.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1349" width="0.2" height="15.0" fill="rgb(243,162,47)" rx="2" ry="2"/>
<text x="248.6" y="1359.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (178 samples, 0.04%)</title><rect x="56.4" y="1893" width="0.5" height="15.0" fill="rgb(242,229,6)" rx="2" ry="2"/>
<text x="59.4" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,756 samples, 2.26%)</title><rect x="277.7" y="1845" width="26.7" height="15.0" fill="rgb(230,44,49)" rx="2" ry="2"/>
<text x="280.7" y="1855.5">[..</text>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (60 samples, 0.01%)</title><rect x="592.6" y="1845" width="0.2" height="15.0" fill="rgb(213,5,6)" rx="2" ry="2"/>
<text x="595.6" y="1855.5"/>
</g>
<g class="hide">
<title>pa_sink_input_drop (60 samples, 0.01%)</title><rect x="199.0" y="2037" width="0.2" height="15.0" fill="rgb(229,49,50)" rx="2" ry="2"/>
<text x="202" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (204 samples, 0.05%)</title><rect x="48.4" y="1989" width="0.6" height="15.0" fill="rgb(238,35,9)" rx="2" ry="2"/>
<text x="51.4" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (409 samples, 0.09%)</title><rect x="207.37410071942588" y="1733" width="23.345323741007192" height="15.0" fill="rgb(205,39,35)" rx="2" ry="2" _orig_x="529.6" _orig_width="1.1"/>
<text x="210.37410071942588" y="1743.5" _orig_x="532.6">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="17.0" y="1861" width="0.1" height="15.0" fill="rgb(207,182,46)" rx="2" ry="2"/>
<text x="20" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.04%)</title><rect x="389.9" y="2005" width="0.5" height="15.0" fill="rgb(211,158,9)" rx="2" ry="2"/>
<text x="392.9" y="2015.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::IsPageFree (38 samples, 0.01%)</title><rect x="657.7" y="1941" width="0.1" height="15.0" fill="rgb(216,123,33)" rx="2" ry="2"/>
<text x="660.7" y="1951.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (843 samples, 0.20%)</title><rect x="602.8" y="1797" width="2.3" height="15.0" fill="rgb(218,18,11)" rx="2" ry="2"/>
<text x="605.8" y="1807.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (605 samples, 0.14%)</title><rect x="491.2" y="1845" width="1.7" height="15.0" fill="rgb(215,139,3)" rx="2" ry="2"/>
<text x="494.2" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (1,116 samples, 0.26%)</title><rect x="17.4" y="1909" width="3.0" height="15.0" fill="rgb(228,162,23)" rx="2" ry="2"/>
<text x="20.4" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.05%)</title><rect x="48.4" y="1973" width="0.6" height="15.0" fill="rgb(209,166,3)" rx="2" ry="2"/>
<text x="51.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.02%)</title><rect x="56.6" y="1781" width="0.3" height="15.0" fill="rgb(221,101,42)" rx="2" ry="2"/>
<text x="59.6" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.02%)</title><rect x="391.1" y="1893" width="0.3" height="15.0" fill="rgb(226,137,43)" rx="2" ry="2"/>
<text x="394.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (149 samples, 0.03%)</title><rect x="20.9" y="1797" width="0.4" height="15.0" fill="rgb(225,176,26)" rx="2" ry="2"/>
<text x="23.9" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="354.3" y="1797" width="0.2" height="15.0" fill="rgb(237,169,11)" rx="2" ry="2"/>
<text x="357.3" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="581" width="0.2" height="15.0" fill="rgb(209,216,28)" rx="2" ry="2"/>
<text x="30" y="591.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.02%)</title><rect x="206.9" y="1989" width="0.3" height="15.0" fill="rgb(228,183,32)" rx="2" ry="2"/>
<text x="209.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (331 samples, 0.08%)</title><rect x="1126.2" y="1589" width="0.9" height="15.0" fill="rgb(242,202,24)" rx="2" ry="2"/>
<text x="1129.2" y="1599.5"/>
</g>
<g class="hide">
<title>[code] (67 samples, 0.02%)</title><rect x="245.1" y="981" width="0.2" height="15.0" fill="rgb(231,20,43)" rx="2" ry="2"/>
<text x="248.1" y="991.5"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.01%)</title><rect x="51.5" y="1717" width="0.2" height="15.0" fill="rgb(213,71,44)" rx="2" ry="2"/>
<text x="54.5" y="1727.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (127 samples, 0.03%)</title><rect x="438.70503597122394" y="1733" width="8.489208633093524" height="15.0" fill="rgb(208,121,10)" rx="2" ry="2" _orig_x="540.5" _orig_width="0.4"/>
<text x="441.70503597122394" y="1743.5" _orig_x="543.5"/>
</g>
<g class="hide">
<title>[unknown] (297 samples, 0.07%)</title><rect x="54.8" y="293" width="0.8" height="15.0" fill="rgb(212,62,44)" rx="2" ry="2"/>
<text x="57.8" y="303.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="243.2" y="517" width="0.1" height="15.0" fill="rgb(231,137,40)" rx="2" ry="2"/>
<text x="246.2" y="527.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (324 samples, 0.08%)</title><rect x="389.0" y="2037" width="0.9" height="15.0" fill="rgb(214,221,12)" rx="2" ry="2"/>
<text x="392" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="392.0" y="1925" width="0.1" height="15.0" fill="rgb(228,159,3)" rx="2" ry="2"/>
<text x="395" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (342 samples, 0.08%)</title><rect x="40.0" y="1877" width="0.9" height="15.0" fill="rgb(217,33,53)" rx="2" ry="2"/>
<text x="43" y="1887.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (40 samples, 0.01%)</title><rect x="797.3741007194249" y="1781" width="4.244604316546762" height="15.0" fill="rgb(210,170,41)" rx="2" ry="2" _orig_x="557.4" _orig_width="0.2"/>
<text x="800.3741007194249" y="1791.5" _orig_x="560.4"/>
</g>
<g class="hide">
<title>[unknown] (64 samples, 0.01%)</title><rect x="28.4" y="1989" width="0.2" height="15.0" fill="rgb(217,70,47)" rx="2" ry="2"/>
<text x="31.4" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (42 samples, 0.01%)</title><rect x="249.1" y="1829" width="0.1" height="15.0" fill="rgb(227,97,10)" rx="2" ry="2"/>
<text x="252.1" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1397" width="0.2" height="15.0" fill="rgb(231,163,0)" rx="2" ry="2"/>
<text x="30" y="1407.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (72 samples, 0.02%)</title><rect x="245.6" y="1429" width="0.2" height="15.0" fill="rgb(229,217,23)" rx="2" ry="2"/>
<text x="248.6" y="1439.5"/>
</g>
<g class="hide">
<title>[code] (46 samples, 0.01%)</title><rect x="244.3" y="629" width="0.1" height="15.0" fill="rgb(218,100,17)" rx="2" ry="2"/>
<text x="247.3" y="639.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="386.4" y="1925" width="0.2" height="15.0" fill="rgb(215,76,51)" rx="2" ry="2"/>
<text x="389.4" y="1935.5"/>
</g>
<g class="hide">
<title>start_thread (41 samples, 0.01%)</title><rect x="13.1" y="2037" width="0.1" height="15.0" fill="rgb(214,28,12)" rx="2" ry="2"/>
<text x="16.1" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (1,278 samples, 0.30%)</title><rect x="346.0" y="2037" width="3.5" height="15.0" fill="rgb(208,181,6)" rx="2" ry="2"/>
<text x="349" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (65 samples, 0.02%)</title><rect x="653.5" y="1893" width="0.1" height="15.0" fill="rgb(209,106,41)" rx="2" ry="2"/>
<text x="656.5" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="391.8" y="1765" width="0.2" height="15.0" fill="rgb(241,53,35)" rx="2" ry="2"/>
<text x="394.8" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,696 samples, 1.09%)</title><rect x="720.0" y="1765" width="12.8" height="15.0" fill="rgb(249,35,51)" rx="2" ry="2"/>
<text x="723" y="1775.5"/>
</g>
<g class="">
<title>Schema::GetColumnCount (66 samples, 0.02%)</title><rect x="517.2302158273401" y="1861" width="4.244604316546762" height="15.0" fill="rgb(237,20,22)" rx="2" ry="2" _orig_x="544.2" _orig_width="0.2"/>
<text x="520.2302158273401" y="1871.5" _orig_x="547.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (879 samples, 0.20%)</title><rect x="395.7" y="1925" width="2.4" height="15.0" fill="rgb(233,58,42)" rx="2" ry="2"/>
<text x="398.7" y="1935.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (89 samples, 0.02%)</title><rect x="486.4" y="1829" width="0.2" height="15.0" fill="rgb(220,27,6)" rx="2" ry="2"/>
<text x="489.4" y="1839.5"/>
</g>
<g class="hide">
<title>TypeFloat::DeserializeFrom (87 samples, 0.02%)</title><rect x="643.6" y="1877" width="0.2" height="15.0" fill="rgb(234,17,53)" rx="2" ry="2"/>
<text x="646.6" y="1887.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (45 samples, 0.01%)</title><rect x="630.2" y="1845" width="0.1" height="15.0" fill="rgb(220,219,15)" rx="2" ry="2"/>
<text x="633.2" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.02%)</title><rect x="48.1" y="1797" width="0.2" height="15.0" fill="rgb(241,173,29)" rx="2" ry="2"/>
<text x="51.1" y="1807.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (46 samples, 0.01%)</title><rect x="249.1" y="1845" width="0.1" height="15.0" fill="rgb(253,126,3)" rx="2" ry="2"/>
<text x="252.1" y="1855.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (96 samples, 0.02%)</title><rect x="447.19424460431696" y="1733" width="6.366906474820143" height="15.0" fill="rgb(207,176,14)" rx="2" ry="2" _orig_x="540.9" _orig_width="0.3"/>
<text x="450.19424460431696" y="1743.5" _orig_x="543.9"/>
</g>
<g class="">
<title>std::__niter_base&lt;Field**&gt; (104 samples, 0.02%)</title><rect x="856.798561151081" y="1781" width="6.366906474820143" height="15.0" fill="rgb(217,37,44)" rx="2" ry="2" _orig_x="560.2" _orig_width="0.3"/>
<text x="859.798561151081" y="1791.5" _orig_x="563.2"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (237 samples, 0.05%)</title><rect x="638.2" y="1909" width="0.6" height="15.0" fill="rgb(222,106,30)" rx="2" ry="2"/>
<text x="641.2" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (59 samples, 0.01%)</title><rect x="244.2" y="933" width="0.2" height="15.0" fill="rgb(226,44,22)" rx="2" ry="2"/>
<text x="247.2" y="943.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1701" width="0.8" height="15.0" fill="rgb(230,117,42)" rx="2" ry="2"/>
<text x="57.8" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (36,007 samples, 8.34%)</title><rect x="1029.4" y="1893" width="98.4" height="15.0" fill="rgb(249,210,54)" rx="2" ry="2"/>
<text x="1032.4" y="1903.5">[[kernel.kall..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15,013 samples, 3.48%)</title><rect x="1086.4" y="1797" width="41.0" height="15.0" fill="rgb(216,190,5)" rx="2" ry="2"/>
<text x="1089.4" y="1807.5">[[ke..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="14.0" y="1957" width="0.1" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2"/>
<text x="17" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="48.8" y="1781" width="0.2" height="15.0" fill="rgb(207,216,39)" rx="2" ry="2"/>
<text x="51.8" y="1791.5"/>
</g>
<g class="hide">
<title>malloc_consolidate (100 samples, 0.02%)</title><rect x="671.3" y="2037" width="0.3" height="15.0" fill="rgb(206,89,5)" rx="2" ry="2"/>
<text x="674.3" y="2047.5"/>
</g>
<g class="hide">
<title>operator delete (58 samples, 0.01%)</title><rect x="591.8" y="1877" width="0.2" height="15.0" fill="rgb(240,22,39)" rx="2" ry="2"/>
<text x="594.8" y="1887.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (50 samples, 0.01%)</title><rect x="373.2" y="2021" width="0.1" height="15.0" fill="rgb(212,46,15)" rx="2" ry="2"/>
<text x="376.2" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (69 samples, 0.02%)</title><rect x="509.0" y="1829" width="0.2" height="15.0" fill="rgb(243,101,35)" rx="2" ry="2"/>
<text x="512" y="1839.5"/>
</g>
<g class="hide">
<title>ntfs_malloc (66 samples, 0.02%)</title><rect x="778.4" y="2021" width="0.2" height="15.0" fill="rgb(211,228,44)" rx="2" ry="2"/>
<text x="781.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (1,066 samples, 0.25%)</title><rect x="502.8" y="1797" width="2.9" height="15.0" fill="rgb(220,114,14)" rx="2" ry="2"/>
<text x="505.8" y="1807.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1525" width="0.2" height="15.0" fill="rgb(216,181,43)" rx="2" ry="2"/>
<text x="249.9" y="1535.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (51 samples, 0.01%)</title><rect x="473.4" y="1829" width="0.2" height="15.0" fill="rgb(225,113,27)" rx="2" ry="2"/>
<text x="476.4" y="1839.5"/>
</g>
<g class="hide">
<title>kworker/7:2-eve (182 samples, 0.04%)</title><rect x="389.9" y="2053" width="0.5" height="15.0" fill="rgb(254,218,21)" rx="2" ry="2"/>
<text x="392.9" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (1,392 samples, 0.32%)</title><rect x="240.8" y="1509" width="3.8" height="15.0" fill="rgb(247,107,51)" rx="2" ry="2"/>
<text x="243.8" y="1519.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,741 samples, 2.26%)</title><rect x="1100.6" y="1765" width="26.7" height="15.0" fill="rgb(209,11,0)" rx="2" ry="2"/>
<text x="1103.6" y="1775.5">[..</text>
</g>
<g class="hide">
<title>TypeChar::DeserializeFrom (1,006 samples, 0.23%)</title><rect x="602.6" y="1861" width="2.8" height="15.0" fill="rgb(237,162,38)" rx="2" ry="2"/>
<text x="605.6" y="1871.5"/>
</g>
<g class="">
<title>std::forward&lt;Field*&gt; (41 samples, 0.01%)</title><rect x="767.661870503598" y="1797" width="2.122302158273381" height="15.0" fill="rgb(237,66,35)" rx="2" ry="2" _orig_x="556.0" _orig_width="0.1"/>
<text x="770.661870503598" y="1807.5" _orig_x="559"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (37 samples, 0.01%)</title><rect x="608.4892086330944" y="1845" width="2.122302158273381" height="15.0" fill="rgb(219,47,8)" rx="2" ry="2" _orig_x="548.5" _orig_width="0.1"/>
<text x="611.4892086330944" y="1855.5" _orig_x="551.5"/>
</g>
<g class="hide">
<title>[unknown] (521 samples, 0.12%)</title><rect x="11.5" y="2037" width="1.4" height="15.0" fill="rgb(248,68,11)" rx="2" ry="2"/>
<text x="14.5" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (63 samples, 0.01%)</title><rect x="245.1" y="869" width="0.2" height="15.0" fill="rgb(245,113,22)" rx="2" ry="2"/>
<text x="248.1" y="879.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,349 samples, 2.17%)</title><rect x="90.1" y="1941" width="25.6" height="15.0" fill="rgb(254,226,30)" rx="2" ry="2"/>
<text x="93.1" y="1951.5">[..</text>
</g>
<g class="hide">
<title>[libgobject-2.0.so.0.6400.6] (38 samples, 0.01%)</title><rect x="356.4" y="2037" width="0.2" height="15.0" fill="rgb(226,119,28)" rx="2" ry="2"/>
<text x="359.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="203.2" y="1877" width="0.1" height="15.0" fill="rgb(249,201,33)" rx="2" ry="2"/>
<text x="206.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,319 samples, 0.31%)</title><rect x="441.9" y="1733" width="3.6" height="15.0" fill="rgb(234,128,10)" rx="2" ry="2"/>
<text x="444.9" y="1743.5"/>
</g>
<g class="hide">
<title>pa_rtclock_get (146 samples, 0.03%)</title><rect x="196.6" y="2037" width="0.4" height="15.0" fill="rgb(250,204,18)" rx="2" ry="2"/>
<text x="199.6" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (97 samples, 0.02%)</title><rect x="54.8" y="53" width="0.2" height="15.0" fill="rgb(220,41,15)" rx="2" ry="2"/>
<text x="57.8" y="63.5"/>
</g>
<g class="hide">
<title>[unknown] (108 samples, 0.03%)</title><rect x="27.0" y="2005" width="0.2" height="15.0" fill="rgb(239,167,38)" rx="2" ry="2"/>
<text x="30" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (95 samples, 0.02%)</title><rect x="629.9" y="1861" width="0.3" height="15.0" fill="rgb(247,212,36)" rx="2" ry="2"/>
<text x="632.9" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="14.9" y="1669" width="0.1" height="15.0" fill="rgb(228,50,28)" rx="2" ry="2"/>
<text x="17.9" y="1679.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (66 samples, 0.02%)</title><rect x="570.2877697841745" y="1861" width="4.244604316546762" height="15.0" fill="rgb(234,210,51)" rx="2" ry="2" _orig_x="546.7" _orig_width="0.2"/>
<text x="573.2877697841745" y="1871.5" _orig_x="549.7"/>
</g>
<g class="hide">
<title>[unknown] (101 samples, 0.02%)</title><rect x="345.3" y="2037" width="0.2" height="15.0" fill="rgb(209,112,46)" rx="2" ry="2"/>
<text x="348.3" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (958 samples, 0.22%)</title><rect x="241.3" y="1397" width="2.6" height="15.0" fill="rgb(214,48,3)" rx="2" ry="2"/>
<text x="244.3" y="1407.5"/>
</g>
<g class="hide">
<title>std::allocator&lt;Field*&gt;::~allocator (39 samples, 0.01%)</title><rect x="509.2" y="1829" width="0.1" height="15.0" fill="rgb(230,128,1)" rx="2" ry="2"/>
<text x="512.2" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (1,059 samples, 0.25%)</title><rect x="17.5" y="1893" width="2.9" height="15.0" fill="rgb(221,165,16)" rx="2" ry="2"/>
<text x="20.5" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,372 samples, 0.32%)</title><rect x="693.9" y="1765" width="3.7" height="15.0" fill="rgb(209,221,17)" rx="2" ry="2"/>
<text x="696.9" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="32.5" y="1957" width="0.2" height="15.0" fill="rgb(244,65,52)" rx="2" ry="2"/>
<text x="35.5" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="391.8" y="1909" width="0.2" height="15.0" fill="rgb(235,201,6)" rx="2" ry="2"/>
<text x="394.8" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (800 samples, 0.19%)</title><rect x="208.2" y="1989" width="2.2" height="15.0" fill="rgb(252,32,45)" rx="2" ry="2"/>
<text x="211.2" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="741" width="0.8" height="15.0" fill="rgb(241,21,16)" rx="2" ry="2"/>
<text x="57.8" y="751.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (185 samples, 0.04%)</title><rect x="1178.3" y="1621" width="0.5" height="15.0" fill="rgb(249,163,52)" rx="2" ry="2"/>
<text x="1181.3" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (996 samples, 0.23%)</title><rect x="258.3" y="1877" width="2.7" height="15.0" fill="rgb(205,57,30)" rx="2" ry="2"/>
<text x="261.3" y="1887.5"/>
</g>
<g class="hide">
<title>GC_Thread#8 (39 samples, 0.01%)</title><rect x="22.8" y="2053" width="0.1" height="15.0" fill="rgb(246,226,45)" rx="2" ry="2"/>
<text x="25.8" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="1189.2" y="2005" width="0.1" height="15.0" fill="rgb(229,198,27)" rx="2" ry="2"/>
<text x="1192.2" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1493" width="0.8" height="15.0" fill="rgb(231,100,27)" rx="2" ry="2"/>
<text x="57.8" y="1503.5"/>
</g>
<g class="hide">
<title>pa_sink_volume_change_apply (83 samples, 0.02%)</title><rect x="200.0" y="2037" width="0.2" height="15.0" fill="rgb(236,6,19)" rx="2" ry="2"/>
<text x="203" y="2047.5"/>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 0.01%)</title><rect x="12.9" y="2037" width="0.2" height="15.0" fill="rgb(223,58,25)" rx="2" ry="2"/>
<text x="15.9" y="2047.5"/>
</g>
<g class="hide">
<title>snd_pcm_mmap_begin (51 samples, 0.01%)</title><rect x="74.8" y="1989" width="0.2" height="15.0" fill="rgb(210,40,28)" rx="2" ry="2"/>
<text x="77.8" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="997" width="0.2" height="15.0" fill="rgb(249,118,8)" rx="2" ry="2"/>
<text x="247.2" y="1007.5"/>
</g>
<g class="hide">
<title>std::__detail::_Mod_range_hashing::operator (41 samples, 0.01%)</title><rect x="418.5" y="1685" width="0.2" height="15.0" fill="rgb(207,187,14)" rx="2" ry="2"/>
<text x="421.5" y="1695.5"/>
</g>
<g class="hide">
<title>std::min&lt;unsigned long&gt; (47 samples, 0.01%)</title><rect x="619.4" y="1781" width="0.1" height="15.0" fill="rgb(219,98,31)" rx="2" ry="2"/>
<text x="622.4" y="1791.5"/>
</g>
<g class="hide">
<title>geoclue (291 samples, 0.07%)</title><rect x="350.6" y="2053" width="0.8" height="15.0" fill="rgb(219,156,23)" rx="2" ry="2"/>
<text x="353.6" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (52 samples, 0.01%)</title><rect x="373.9" y="2021" width="0.2" height="15.0" fill="rgb(211,145,23)" rx="2" ry="2"/>
<text x="376.9" y="2031.5"/>
</g>
<g class="hide">
<title>Field::DeserializeFrom (5,854 samples, 1.36%)</title><rect x="454.9" y="1845" width="16.0" height="15.0" fill="rgb(224,28,42)" rx="2" ry="2"/>
<text x="457.9" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,319 samples, 0.31%)</title><rect x="455.6" y="1765" width="3.6" height="15.0" fill="rgb(250,130,37)" rx="2" ry="2"/>
<text x="458.6" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="246.9" y="1653" width="0.2" height="15.0" fill="rgb(215,179,49)" rx="2" ry="2"/>
<text x="249.9" y="1663.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1285" width="0.8" height="15.0" fill="rgb(207,133,1)" rx="2" ry="2"/>
<text x="57.8" y="1295.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (39 samples, 0.01%)</title><rect x="484.3" y="1797" width="0.1" height="15.0" fill="rgb(234,219,13)" rx="2" ry="2"/>
<text x="487.3" y="1807.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (686 samples, 0.16%)</title><rect x="362.30215827338174" y="1749" width="40.323741007194236" height="15.0" fill="rgb(245,38,44)" rx="2" ry="2" _orig_x="536.9" _orig_width="1.9"/>
<text x="365.30215827338174" y="1759.5" _orig_x="539.9">std:..</text>
</g>
<g class="hide">
<title>[perf-123109.map] (88 samples, 0.02%)</title><rect x="248.4" y="1813" width="0.2" height="15.0" fill="rgb(207,2,24)" rx="2" ry="2"/>
<text x="251.4" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (178 samples, 0.04%)</title><rect x="461.1" y="1701" width="0.4" height="15.0" fill="rgb(230,151,22)" rx="2" ry="2"/>
<text x="464.1" y="1711.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (42 samples, 0.01%)</title><rect x="226.47482014388584" y="1701" width="2.122302158273381" height="15.0" fill="rgb(228,89,49)" rx="2" ry="2" _orig_x="530.5" _orig_width="0.1"/>
<text x="229.47482014388584" y="1711.5" _orig_x="533.5"/>
</g>
<g class="hide">
<title>[code] (583 samples, 0.14%)</title><rect x="208.5" y="1877" width="1.6" height="15.0" fill="rgb(246,49,26)" rx="2" ry="2"/>
<text x="211.5" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="160.9" y="1813" width="0.1" height="15.0" fill="rgb(254,124,22)" rx="2" ry="2"/>
<text x="163.9" y="1823.5"/>
</g>
<g class="hide">
<title>start_thread (38 samples, 0.01%)</title><rect x="22.7" y="2037" width="0.1" height="15.0" fill="rgb(254,125,22)" rx="2" ry="2"/>
<text x="25.7" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_deallocate_node (41 samples, 0.01%)</title><rect x="448.7" y="1813" width="0.1" height="15.0" fill="rgb(238,148,3)" rx="2" ry="2"/>
<text x="451.7" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (494 samples, 0.11%)</title><rect x="242.0" y="1157" width="1.3" height="15.0" fill="rgb(207,123,30)" rx="2" ry="2"/>
<text x="245" y="1167.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (46 samples, 0.01%)</title><rect x="661.5" y="1829" width="0.1" height="15.0" fill="rgb(235,147,39)" rx="2" ry="2"/>
<text x="664.5" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (2,184 samples, 0.51%)</title><rect x="239.5" y="1653" width="6.0" height="15.0" fill="rgb(228,35,9)" rx="2" ry="2"/>
<text x="242.5" y="1663.5"/>
</g>
<g class="hide">
<title>snd_pcm_status_get_htstamp (85 samples, 0.02%)</title><rect x="59.9" y="2021" width="0.3" height="15.0" fill="rgb(208,166,28)" rx="2" ry="2"/>
<text x="62.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,637 samples, 4.32%)</title><rect x="1127.8" y="1941" width="51.0" height="15.0" fill="rgb(249,76,24)" rx="2" ry="2"/>
<text x="1130.8" y="1951.5">[[kern..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="342.6" y="1941" width="0.2" height="15.0" fill="rgb(219,21,16)" rx="2" ry="2"/>
<text x="345.6" y="1951.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::destroy&lt;void*&gt; (37 samples, 0.01%)</title><rect x="503.7" y="1749" width="0.1" height="15.0" fill="rgb(214,114,20)" rx="2" ry="2"/>
<text x="506.7" y="1759.5"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (182 samples, 0.04%)</title><rect x="59.0" y="2021" width="0.5" height="15.0" fill="rgb(223,120,18)" rx="2" ry="2"/>
<text x="62" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (233 samples, 0.05%)</title><rect x="382.8" y="1989" width="0.6" height="15.0" fill="rgb(210,100,9)" rx="2" ry="2"/>
<text x="385.8" y="1999.5"/>
</g>
<g class="hide">
<title>ib_log_writer (92 samples, 0.02%)</title><rect x="373.9" y="2053" width="0.3" height="15.0" fill="rgb(216,40,45)" rx="2" ry="2"/>
<text x="376.9" y="2063.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (72 samples, 0.02%)</title><rect x="500.0" y="1813" width="0.2" height="15.0" fill="rgb(232,226,33)" rx="2" ry="2"/>
<text x="503" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="2005" width="0.2" height="15.0" fill="rgb(238,40,20)" rx="2" ry="2"/>
<text x="240.9" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (100 samples, 0.02%)</title><rect x="245.1" y="1349" width="0.2" height="15.0" fill="rgb(229,97,37)" rx="2" ry="2"/>
<text x="248.1" y="1359.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (61 samples, 0.01%)</title><rect x="246.7" y="1413" width="0.2" height="15.0" fill="rgb(211,100,2)" rx="2" ry="2"/>
<text x="249.7" y="1423.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (90 samples, 0.02%)</title><rect x="645.6" y="1829" width="0.2" height="15.0" fill="rgb(205,122,12)" rx="2" ry="2"/>
<text x="648.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,090 samples, 1.41%)</title><rect x="220.3" y="1925" width="16.7" height="15.0" fill="rgb(242,91,20)" rx="2" ry="2"/>
<text x="223.3" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (670 samples, 0.16%)</title><rect x="248.1" y="1957" width="1.8" height="15.0" fill="rgb(232,52,32)" rx="2" ry="2"/>
<text x="251.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="792.9" y="1909" width="0.2" height="15.0" fill="rgb(206,194,10)" rx="2" ry="2"/>
<text x="795.9" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1285" width="0.2" height="15.0" fill="rgb(243,70,53)" rx="2" ry="2"/>
<text x="30" y="1295.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,216 samples, 0.98%)</title><rect x="1115.6" y="1733" width="11.5" height="15.0" fill="rgb(207,116,12)" rx="2" ry="2"/>
<text x="1118.6" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="47.3" y="1909" width="0.1" height="15.0" fill="rgb(245,114,51)" rx="2" ry="2"/>
<text x="50.3" y="1919.5"/>
</g>
<g class="hide">
<title>TypeChar::DeserializeFrom (2,021 samples, 0.47%)</title><rect x="417.3" y="1813" width="5.5" height="15.0" fill="rgb(246,42,13)" rx="2" ry="2"/>
<text x="420.3" y="1823.5"/>
</g>
<g class="hide">
<title>start_thread (90 samples, 0.02%)</title><rect x="49.5" y="2037" width="0.3" height="15.0" fill="rgb(253,171,12)" rx="2" ry="2"/>
<text x="52.5" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (37 samples, 0.01%)</title><rect x="647.5" y="1717" width="0.1" height="15.0" fill="rgb(252,121,45)" rx="2" ry="2"/>
<text x="650.5" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.02%)</title><rect x="250.1" y="1925" width="0.2" height="15.0" fill="rgb(253,86,19)" rx="2" ry="2"/>
<text x="253.1" y="1935.5"/>
</g>
<g class="hide">
<title>DiskManager::WritePage (155 samples, 0.04%)</title><rect x="445.8" y="1877" width="0.4" height="15.0" fill="rgb(254,60,34)" rx="2" ry="2"/>
<text x="448.8" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="209.8" y="1749" width="0.1" height="15.0" fill="rgb(245,124,50)" rx="2" ry="2"/>
<text x="212.8" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.2" y="725" width="0.2" height="15.0" fill="rgb(244,33,46)" rx="2" ry="2"/>
<text x="247.2" y="735.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (78 samples, 0.02%)</title><rect x="609.3" y="1765" width="0.2" height="15.0" fill="rgb(217,128,54)" rx="2" ry="2"/>
<text x="612.3" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1493" width="0.2" height="15.0" fill="rgb(215,115,48)" rx="2" ry="2"/>
<text x="30" y="1503.5"/>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="245.1" y="1173" width="0.2" height="15.0" fill="rgb(233,157,3)" rx="2" ry="2"/>
<text x="248.1" y="1183.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (117 samples, 0.03%)</title><rect x="498.7" y="1813" width="0.3" height="15.0" fill="rgb(219,152,51)" rx="2" ry="2"/>
<text x="501.7" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (328 samples, 0.08%)</title><rect x="390.5" y="2021" width="0.9" height="15.0" fill="rgb(243,122,50)" rx="2" ry="2"/>
<text x="393.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,842 samples, 0.66%)</title><rect x="1171.0" y="1733" width="7.8" height="15.0" fill="rgb(220,123,32)" rx="2" ry="2"/>
<text x="1174" y="1743.5"/>
</g>
<g class="hide">
<title>start_thread (66 samples, 0.02%)</title><rect x="22.1" y="2037" width="0.2" height="15.0" fill="rgb(252,185,36)" rx="2" ry="2"/>
<text x="25.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="27.3" y="1893" width="0.1" height="15.0" fill="rgb(249,169,44)" rx="2" ry="2"/>
<text x="30.3" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="741" width="0.2" height="15.0" fill="rgb(216,55,46)" rx="2" ry="2"/>
<text x="30" y="751.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (41 samples, 0.01%)</title><rect x="427.6" y="1829" width="0.1" height="15.0" fill="rgb(235,155,16)" rx="2" ry="2"/>
<text x="430.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.04%)</title><rect x="387.9" y="1941" width="0.5" height="15.0" fill="rgb(215,121,22)" rx="2" ry="2"/>
<text x="390.9" y="1951.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (47 samples, 0.01%)</title><rect x="90.64748201438992" y="1749" width="2.122302158273381" height="15.0" fill="rgb(216,149,35)" rx="2" ry="2" _orig_x="524.1" _orig_width="0.1"/>
<text x="93.64748201438992" y="1759.5" _orig_x="527.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="410.6" y="1573" width="0.2" height="15.0" fill="rgb(240,68,4)" rx="2" ry="2"/>
<text x="413.6" y="1583.5"/>
</g>
<g class="hide">
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (366 samples, 0.08%)</title><rect x="489.1" y="1797" width="1.0" height="15.0" fill="rgb(218,62,24)" rx="2" ry="2"/>
<text x="492.1" y="1807.5"/>
</g>
<g class="hide">
<title>std::__detail::operator!=&lt;void*, false&gt; (38 samples, 0.01%)</title><rect x="629.8" y="1861" width="0.1" height="15.0" fill="rgb(239,153,36)" rx="2" ry="2"/>
<text x="632.8" y="1871.5"/>
</g>
<g class="hide">
<title>g_main_context_check (46 samples, 0.01%)</title><rect x="208.1" y="2021" width="0.1" height="15.0" fill="rgb(215,158,34)" rx="2" ry="2"/>
<text x="211.1" y="2031.5"/>
</g>
<g class="hide">
<title>__xstat64 (11,171 samples, 2.59%)</title><rect x="273.9" y="1957" width="30.5" height="15.0" fill="rgb(235,123,26)" rx="2" ry="2"/>
<text x="276.9" y="1967.5">_..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="697.3" y="1717" width="0.3" height="15.0" fill="rgb(226,51,27)" rx="2" ry="2"/>
<text x="700.3" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (241 samples, 0.06%)</title><rect x="52.1" y="1893" width="0.7" height="15.0" fill="rgb(249,68,52)" rx="2" ry="2"/>
<text x="55.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (1,342 samples, 0.31%)</title><rect x="240.9" y="1493" width="3.7" height="15.0" fill="rgb(246,32,34)" rx="2" ry="2"/>
<text x="243.9" y="1503.5"/>
</g>
<g class="">
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (512 samples, 0.12%)</title><rect x="1020.2158273381299" y="1813" width="29.712230215827333" height="15.0" fill="rgb(233,136,14)" rx="2" ry="2" _orig_x="567.9" _orig_width="1.4"/>
<text x="1023.2158273381299" y="1823.5" _orig_x="570.9">st..</text>
</g>
<g class="hide">
<title>JVM_GetStackAccessControlContext (242 samples, 0.06%)</title><rect x="10.7" y="2005" width="0.6" height="15.0" fill="rgb(209,151,43)" rx="2" ry="2"/>
<text x="13.7" y="2015.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (103 samples, 0.02%)</title><rect x="504.8" y="1733" width="0.3" height="15.0" fill="rgb(218,50,48)" rx="2" ry="2"/>
<text x="507.8" y="1743.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_init (62 samples, 0.01%)</title><rect x="677.6" y="2005" width="0.1" height="15.0" fill="rgb(217,135,12)" rx="2" ry="2"/>
<text x="680.6" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (50 samples, 0.01%)</title><rect x="245.7" y="1093" width="0.1" height="15.0" fill="rgb(235,12,43)" rx="2" ry="2"/>
<text x="248.7" y="1103.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (473 samples, 0.11%)</title><rect x="353.2" y="1877" width="1.3" height="15.0" fill="rgb(220,125,44)" rx="2" ry="2"/>
<text x="356.2" y="1887.5"/>
</g>
<g class="hide">
<title>Column::GetType (40 samples, 0.01%)</title><rect x="454.8" y="1845" width="0.1" height="15.0" fill="rgb(252,51,29)" rx="2" ry="2"/>
<text x="457.8" y="1855.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (53 samples, 0.01%)</title><rect x="466.2949640287769" y="1749" width="4.244604316546762" height="15.0" fill="rgb(252,68,10)" rx="2" ry="2" _orig_x="541.8" _orig_width="0.2"/>
<text x="469.2949640287769" y="1759.5" _orig_x="544.8"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (1,098 samples, 0.25%)</title><rect x="586.5" y="1797" width="3.0" height="15.0" fill="rgb(207,52,34)" rx="2" ry="2"/>
<text x="589.5" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="32.5" y="1925" width="0.2" height="15.0" fill="rgb(231,209,6)" rx="2" ry="2"/>
<text x="35.5" y="1935.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (57 samples, 0.01%)</title><rect x="481.7" y="1749" width="0.2" height="15.0" fill="rgb(220,50,26)" rx="2" ry="2"/>
<text x="484.7" y="1759.5"/>
</g>
<g class="hide">
<title>BPlusTree::InternalRemove (7,664 samples, 1.78%)</title><rect x="415.0" y="1893" width="20.9" height="15.0" fill="rgb(245,188,30)" rx="2" ry="2"/>
<text x="418" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (225 samples, 0.05%)</title><rect x="246.3" y="1525" width="0.6" height="15.0" fill="rgb(227,102,16)" rx="2" ry="2"/>
<text x="249.3" y="1535.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="365.2" y="1877" width="0.1" height="15.0" fill="rgb(247,192,31)" rx="2" ry="2"/>
<text x="368.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="1185.4" y="1973" width="0.1" height="15.0" fill="rgb(220,53,15)" rx="2" ry="2"/>
<text x="1188.4" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (986 samples, 0.23%)</title><rect x="241.3" y="1413" width="2.6" height="15.0" fill="rgb(237,114,21)" rx="2" ry="2"/>
<text x="244.3" y="1423.5"/>
</g>
<g class="hide">
<title>[code] (274 samples, 0.06%)</title><rect x="51.0" y="1861" width="0.8" height="15.0" fill="rgb(236,73,3)" rx="2" ry="2"/>
<text x="54" y="1871.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1925" width="0.1" height="15.0" fill="rgb(250,203,25)" rx="2" ry="2"/>
<text x="357.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="16.9" y="1893" width="0.2" height="15.0" fill="rgb(220,35,49)" rx="2" ry="2"/>
<text x="19.9" y="1903.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (270 samples, 0.06%)</title><rect x="250.5" y="2037" width="0.8" height="15.0" fill="rgb(220,163,51)" rx="2" ry="2"/>
<text x="253.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="50.0" y="2005" width="0.2" height="15.0" fill="rgb(230,99,3)" rx="2" ry="2"/>
<text x="53" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (287 samples, 0.07%)</title><rect x="598.3" y="1861" width="0.7" height="15.0" fill="rgb(246,50,6)" rx="2" ry="2"/>
<text x="601.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="391.8" y="1925" width="0.2" height="15.0" fill="rgb(228,12,28)" rx="2" ry="2"/>
<text x="394.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (347 samples, 0.08%)</title><rect x="495.9" y="1845" width="0.9" height="15.0" fill="rgb(242,195,39)" rx="2" ry="2"/>
<text x="498.9" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (54 samples, 0.01%)</title><rect x="505.1" y="1749" width="0.1" height="15.0" fill="rgb(208,205,28)" rx="2" ry="2"/>
<text x="508.1" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (123 samples, 0.03%)</title><rect x="1183.5" y="2037" width="0.3" height="15.0" fill="rgb(224,171,32)" rx="2" ry="2"/>
<text x="1186.5" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="247.8" y="1797" width="0.2" height="15.0" fill="rgb(231,69,17)" rx="2" ry="2"/>
<text x="250.8" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (159 samples, 0.04%)</title><rect x="383.5" y="1973" width="0.4" height="15.0" fill="rgb(209,108,22)" rx="2" ry="2"/>
<text x="386.5" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (57 samples, 0.01%)</title><rect x="244.2" y="901" width="0.2" height="15.0" fill="rgb(222,52,25)" rx="2" ry="2"/>
<text x="247.2" y="911.5"/>
</g>
<g class="hide">
<title>snd_ctl_elem_read (1,218 samples, 0.28%)</title><rect x="129.8" y="1941" width="3.3" height="15.0" fill="rgb(241,139,18)" rx="2" ry="2"/>
<text x="132.8" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1013" width="0.2" height="15.0" fill="rgb(209,188,37)" rx="2" ry="2"/>
<text x="247.2" y="1023.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (64 samples, 0.01%)</title><rect x="351.8" y="2021" width="0.2" height="15.0" fill="rgb(238,201,30)" rx="2" ry="2"/>
<text x="354.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[vdso]] (264 samples, 0.06%)</title><rect x="367.3" y="2021" width="0.7" height="15.0" fill="rgb(206,67,1)" rx="2" ry="2"/>
<text x="370.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (401 samples, 0.09%)</title><rect x="1177.7" y="1653" width="1.1" height="15.0" fill="rgb(215,3,32)" rx="2" ry="2"/>
<text x="1180.7" y="1663.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (90 samples, 0.02%)</title><rect x="29.1" y="1973" width="0.2" height="15.0" fill="rgb(222,170,50)" rx="2" ry="2"/>
<text x="32.1" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,171 samples, 1.20%)</title><rect x="290.3" y="1765" width="14.1" height="15.0" fill="rgb(211,118,46)" rx="2" ry="2"/>
<text x="293.3" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="389" width="0.2" height="15.0" fill="rgb(207,20,41)" rx="2" ry="2"/>
<text x="30" y="399.5"/>
</g>
<g class="hide">
<title>[code] (1,209 samples, 0.28%)</title><rect x="17.2" y="1989" width="3.3" height="15.0" fill="rgb(235,219,4)" rx="2" ry="2"/>
<text x="20.2" y="1999.5"/>
</g>
<g class="hide">
<title>nvidia_isr (53 samples, 0.01%)</title><rect x="1127.5" y="1813" width="0.2" height="15.0" fill="rgb(231,88,52)" rx="2" ry="2"/>
<text x="1130.5" y="1823.5"/>
</g>
<g class="hide">
<title>start_thread (99 samples, 0.02%)</title><rect x="29.1" y="2037" width="0.2" height="15.0" fill="rgb(246,217,6)" rx="2" ry="2"/>
<text x="32.1" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (53 samples, 0.01%)</title><rect x="472.5" y="1829" width="0.1" height="15.0" fill="rgb(244,215,43)" rx="2" ry="2"/>
<text x="475.5" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.03%)</title><rect x="666.0" y="2005" width="0.4" height="15.0" fill="rgb(211,78,45)" rx="2" ry="2"/>
<text x="669" y="2015.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (66 samples, 0.02%)</title><rect x="540.5755395683452" y="1861" width="4.244604316546762" height="15.0" fill="rgb(228,54,39)" rx="2" ry="2" _orig_x="545.3" _orig_width="0.2"/>
<text x="543.5755395683452" y="1871.5" _orig_x="548.3"/>
</g>
<g class="hide">
<title>[code] (1,035 samples, 0.24%)</title><rect x="41.4" y="1941" width="2.9" height="15.0" fill="rgb(238,50,53)" rx="2" ry="2"/>
<text x="44.4" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (204 samples, 0.05%)</title><rect x="56.3" y="2005" width="0.6" height="15.0" fill="rgb(232,71,34)" rx="2" ry="2"/>
<text x="59.3" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (468 samples, 0.11%)</title><rect x="259.7" y="1861" width="1.3" height="15.0" fill="rgb(244,38,28)" rx="2" ry="2"/>
<text x="262.7" y="1871.5"/>
</g>
<g class="hide">
<title>i2c_hid_irq (160 samples, 0.04%)</title><rect x="379.8" y="1973" width="0.5" height="15.0" fill="rgb(208,150,10)" rx="2" ry="2"/>
<text x="382.8" y="1983.5"/>
</g>
<g class="hide">
<title>IndexKey::DeserializeToKey (5,202 samples, 1.20%)</title><rect x="416.5" y="1861" width="14.2" height="15.0" fill="rgb(239,20,29)" rx="2" ry="2"/>
<text x="419.5" y="1871.5"/>
</g>
<g class="hide">
<title>_int_malloc (666 samples, 0.15%)</title><rect x="785.3" y="2037" width="1.9" height="15.0" fill="rgb(216,83,9)" rx="2" ry="2"/>
<text x="788.3" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1141" width="0.6" height="15.0" fill="rgb(252,169,47)" rx="2" ry="2"/>
<text x="246.3" y="1151.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="47.1" y="1829" width="0.1" height="15.0" fill="rgb(228,76,2)" rx="2" ry="2"/>
<text x="50.1" y="1839.5"/>
</g>
<g class="hide">
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (49 samples, 0.01%)</title><rect x="505.0" y="1717" width="0.1" height="15.0" fill="rgb(235,213,26)" rx="2" ry="2"/>
<text x="508" y="1727.5"/>
</g>
<g class="hide">
<title>[unknown] (37 samples, 0.01%)</title><rect x="29.0" y="2037" width="0.1" height="15.0" fill="rgb(229,31,36)" rx="2" ry="2"/>
<text x="32" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (67 samples, 0.02%)</title><rect x="647.7" y="1765" width="0.2" height="15.0" fill="rgb(216,200,34)" rx="2" ry="2"/>
<text x="650.7" y="1775.5"/>
</g>
<g class="hide">
<title>runtime.gcBgMarkWorker.func2 (41 samples, 0.01%)</title><rect x="344.1" y="2005" width="0.1" height="15.0" fill="rgb(239,34,44)" rx="2" ry="2"/>
<text x="347.1" y="2015.5"/>
</g>
<g class="hide">
<title>std::forward&lt;Field*&gt; (47 samples, 0.01%)</title><rect x="477.1" y="1813" width="0.1" height="15.0" fill="rgb(225,91,43)" rx="2" ry="2"/>
<text x="480.1" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.02%)</title><rect x="16.6" y="1989" width="0.3" height="15.0" fill="rgb(208,166,38)" rx="2" ry="2"/>
<text x="19.6" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (308 samples, 0.07%)</title><rect x="492.0" y="1829" width="0.9" height="15.0" fill="rgb(205,219,1)" rx="2" ry="2"/>
<text x="495" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (59 samples, 0.01%)</title><rect x="654.9" y="1861" width="0.2" height="15.0" fill="rgb(254,188,15)" rx="2" ry="2"/>
<text x="657.9" y="1871.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (67 samples, 0.02%)</title><rect x="49.5" y="1973" width="0.2" height="15.0" fill="rgb(243,194,23)" rx="2" ry="2"/>
<text x="52.5" y="1983.5"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (211 samples, 0.05%)</title><rect x="514.4" y="1861" width="0.6" height="15.0" fill="rgb(252,165,6)" rx="2" ry="2"/>
<text x="517.4" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (98 samples, 0.02%)</title><rect x="417.9" y="1733" width="0.3" height="15.0" fill="rgb(239,205,47)" rx="2" ry="2"/>
<text x="420.9" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.03%)</title><rect x="360.6" y="1909" width="0.4" height="15.0" fill="rgb(212,200,54)" rx="2" ry="2"/>
<text x="363.6" y="1919.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (40 samples, 0.01%)</title><rect x="517.3" y="1893" width="0.1" height="15.0" fill="rgb(236,172,13)" rx="2" ry="2"/>
<text x="520.3" y="1903.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleSubscription (2,898 samples, 0.67%)</title><rect x="264.3" y="1957" width="7.9" height="15.0" fill="rgb(226,79,15)" rx="2" ry="2"/>
<text x="267.3" y="1967.5"/>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (53 samples, 0.01%)</title><rect x="445.8" y="1861" width="0.1" height="15.0" fill="rgb(212,2,12)" rx="2" ry="2"/>
<text x="448.8" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (50 samples, 0.01%)</title><rect x="244.2" y="661" width="0.2" height="15.0" fill="rgb(241,156,43)" rx="2" ry="2"/>
<text x="247.2" y="671.5"/>
</g>
<g class="hide">
<title>[unknown] (56 samples, 0.01%)</title><rect x="362.5" y="1989" width="0.1" height="15.0" fill="rgb(237,166,17)" rx="2" ry="2"/>
<text x="365.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (679 samples, 0.16%)</title><rect x="1186.5" y="1989" width="1.9" height="15.0" fill="rgb(250,179,32)" rx="2" ry="2"/>
<text x="1189.5" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (137 samples, 0.03%)</title><rect x="209.4" y="1685" width="0.3" height="15.0" fill="rgb(226,46,4)" rx="2" ry="2"/>
<text x="212.4" y="1695.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (101 samples, 0.02%)</title><rect x="790.8" y="2037" width="0.3" height="15.0" fill="rgb(234,40,53)" rx="2" ry="2"/>
<text x="793.8" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (285 samples, 0.07%)</title><rect x="466.2" y="1701" width="0.8" height="15.0" fill="rgb(224,146,27)" rx="2" ry="2"/>
<text x="469.2" y="1711.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1301" width="0.2" height="15.0" fill="rgb(205,103,17)" rx="2" ry="2"/>
<text x="30" y="1311.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="55.7" y="1909" width="0.2" height="15.0" fill="rgb(237,178,13)" rx="2" ry="2"/>
<text x="58.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="32.8" y="1973" width="0.3" height="15.0" fill="rgb(212,59,41)" rx="2" ry="2"/>
<text x="35.8" y="1983.5"/>
</g>
<g class="hide">
<title>__strrchr_avx2 (89 samples, 0.02%)</title><rect x="772.0" y="2021" width="0.3" height="15.0" fill="rgb(223,114,16)" rx="2" ry="2"/>
<text x="775" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (46 samples, 0.01%)</title><rect x="473.1" y="1845" width="0.1" height="15.0" fill="rgb(209,72,8)" rx="2" ry="2"/>
<text x="476.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (905 samples, 0.21%)</title><rect x="241.4" y="1333" width="2.5" height="15.0" fill="rgb(230,113,35)" rx="2" ry="2"/>
<text x="244.4" y="1343.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1205" width="0.2" height="15.0" fill="rgb(228,181,30)" rx="2" ry="2"/>
<text x="30" y="1215.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (150 samples, 0.03%)</title><rect x="179.78417266187049" y="1765" width="8.489208633093524" height="15.0" fill="rgb(209,182,54)" rx="2" ry="2" _orig_x="528.3" _orig_width="0.4"/>
<text x="182.78417266187049" y="1775.5" _orig_x="531.3"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (319 samples, 0.07%)</title><rect x="487.5" y="1813" width="0.9" height="15.0" fill="rgb(234,176,13)" rx="2" ry="2"/>
<text x="490.5" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="342.6" y="1829" width="0.2" height="15.0" fill="rgb(219,162,51)" rx="2" ry="2"/>
<text x="345.6" y="1839.5"/>
</g>
<g class="hide">
<title>acpid (44 samples, 0.01%)</title><rect x="57.3" y="2053" width="0.1" height="15.0" fill="rgb(205,227,8)" rx="2" ry="2"/>
<text x="60.3" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (570 samples, 0.13%)</title><rect x="664.3" y="1957" width="1.6" height="15.0" fill="rgb(230,164,20)" rx="2" ry="2"/>
<text x="667.3" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (153 samples, 0.04%)</title><rect x="580.6" y="1829" width="0.4" height="15.0" fill="rgb(235,92,22)" rx="2" ry="2"/>
<text x="583.6" y="1839.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (161 samples, 0.04%)</title><rect x="245.0" y="1429" width="0.5" height="15.0" fill="rgb(248,142,16)" rx="2" ry="2"/>
<text x="248" y="1439.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (49 samples, 0.01%)</title><rect x="506.7" y="1845" width="0.2" height="15.0" fill="rgb(234,110,23)" rx="2" ry="2"/>
<text x="509.7" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (135 samples, 0.03%)</title><rect x="52.4" y="1749" width="0.3" height="15.0" fill="rgb(205,182,21)" rx="2" ry="2"/>
<text x="55.4" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (426 samples, 0.10%)</title><rect x="353.3" y="1861" width="1.2" height="15.0" fill="rgb(218,103,22)" rx="2" ry="2"/>
<text x="356.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="347.5" y="1941" width="0.1" height="15.0" fill="rgb(209,193,25)" rx="2" ry="2"/>
<text x="350.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117,733 samples, 27.27%)</title><rect x="806.1" y="2005" width="321.7" height="15.0" fill="rgb(223,63,15)" rx="2" ry="2"/>
<text x="809.1" y="2015.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>__libc_pread64 (1,418 samples, 0.33%)</title><rect x="781.0" y="2037" width="3.9" height="15.0" fill="rgb(219,72,46)" rx="2" ry="2"/>
<text x="784" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (291 samples, 0.07%)</title><rect x="47.6" y="2021" width="0.8" height="15.0" fill="rgb(242,54,34)" rx="2" ry="2"/>
<text x="50.6" y="2031.5"/>
</g>
<g class="hide">
<title>ThreadPoolForeg (1,117 samples, 0.26%)</title><rect x="41.3" y="2053" width="3.0" height="15.0" fill="rgb(243,76,44)" rx="2" ry="2"/>
<text x="44.3" y="2063.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_state (39 samples, 0.01%)</title><rect x="161.8" y="1877" width="0.1" height="15.0" fill="rgb(253,24,52)" rx="2" ry="2"/>
<text x="164.8" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (603 samples, 0.14%)</title><rect x="208.5" y="1893" width="1.7" height="15.0" fill="rgb(228,47,15)" rx="2" ry="2"/>
<text x="211.5" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (303 samples, 0.07%)</title><rect x="246.1" y="1653" width="0.8" height="15.0" fill="rgb(238,120,12)" rx="2" ry="2"/>
<text x="249.1" y="1663.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1205" width="0.8" height="15.0" fill="rgb(207,23,54)" rx="2" ry="2"/>
<text x="57.8" y="1215.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="373.4" y="2005" width="0.1" height="15.0" fill="rgb(230,124,15)" rx="2" ry="2"/>
<text x="376.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="15.1" y="1685" width="0.1" height="15.0" fill="rgb(213,87,22)" rx="2" ry="2"/>
<text x="18.1" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (1,590 samples, 0.37%)</title><rect x="240.4" y="1573" width="4.3" height="15.0" fill="rgb(221,30,18)" rx="2" ry="2"/>
<text x="243.4" y="1583.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (67 samples, 0.02%)</title><rect x="341.07913669064794" y="1765" width="4.244604316546762" height="15.0" fill="rgb(245,169,45)" rx="2" ry="2" _orig_x="535.9" _orig_width="0.2"/>
<text x="344.07913669064794" y="1775.5" _orig_x="538.9"/>
</g>
<g class="">
<title>Field::Field (63 samples, 0.01%)</title><rect x="302.87769784172804" y="1829" width="4.244604316546762" height="15.0" fill="rgb(254,153,51)" rx="2" ry="2" _orig_x="534.1" _orig_width="0.2"/>
<text x="305.87769784172804" y="1839.5" _orig_x="537.1"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1301" width="0.8" height="15.0" fill="rgb(230,179,42)" rx="2" ry="2"/>
<text x="57.8" y="1311.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (64 samples, 0.01%)</title><rect x="599.6" y="1845" width="0.2" height="15.0" fill="rgb(246,198,39)" rx="2" ry="2"/>
<text x="602.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (370 samples, 0.09%)</title><rect x="39.9" y="1893" width="1.0" height="15.0" fill="rgb(210,221,20)" rx="2" ry="2"/>
<text x="42.9" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="1989" width="0.4" height="15.0" fill="rgb(219,58,36)" rx="2" ry="2"/>
<text x="19.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.02%)</title><rect x="16.9" y="2005" width="0.2" height="15.0" fill="rgb(214,168,49)" rx="2" ry="2"/>
<text x="19.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.03%)</title><rect x="46.9" y="1893" width="0.3" height="15.0" fill="rgb(238,166,5)" rx="2" ry="2"/>
<text x="49.9" y="1903.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (75 samples, 0.02%)</title><rect x="784.6402877697841" y="1797" width="4.244604316546762" height="15.0" fill="rgb(213,41,43)" rx="2" ry="2" _orig_x="556.8" _orig_width="0.2"/>
<text x="787.6402877697841" y="1807.5" _orig_x="559.8"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (91 samples, 0.02%)</title><rect x="950.1798561151093" y="1845" width="4.244604316546762" height="15.0" fill="rgb(237,221,26)" rx="2" ry="2" _orig_x="564.6" _orig_width="0.2"/>
<text x="953.1798561151093" y="1855.5" _orig_x="567.6"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (143 samples, 0.03%)</title><rect x="498.6" y="1829" width="0.4" height="15.0" fill="rgb(206,205,7)" rx="2" ry="2"/>
<text x="501.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,991 samples, 0.69%)</title><rect x="689.5" y="1813" width="8.1" height="15.0" fill="rgb(242,209,12)" rx="2" ry="2"/>
<text x="692.5" y="1823.5"/>
</g>
<g class="hide">
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (47 samples, 0.01%)</title><rect x="584.5" y="1765" width="0.1" height="15.0" fill="rgb(213,106,47)" rx="2" ry="2"/>
<text x="587.5" y="1775.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (108 samples, 0.03%)</title><rect x="499.0" y="1829" width="0.3" height="15.0" fill="rgb(212,208,19)" rx="2" ry="2"/>
<text x="502" y="1839.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (243 samples, 0.06%)</title><rect x="244.8" y="1525" width="0.7" height="15.0" fill="rgb(244,156,26)" rx="2" ry="2"/>
<text x="247.8" y="1535.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (94 samples, 0.02%)</title><rect x="598.8" y="1845" width="0.2" height="15.0" fill="rgb(239,64,19)" rx="2" ry="2"/>
<text x="601.8" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="380.2" y="1861" width="0.1" height="15.0" fill="rgb(229,15,51)" rx="2" ry="2"/>
<text x="383.2" y="1871.5"/>
</g>
<g class="hide">
<title>boost::this_thread::sleep_for&lt;long, boost::ratio&lt;1l, 1000000000l&gt; &gt; (41 samples, 0.01%)</title><rect x="1185.8" y="2021" width="0.1" height="15.0" fill="rgb(246,18,47)" rx="2" ry="2"/>
<text x="1188.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="793.1" y="1941" width="0.1" height="15.0" fill="rgb(246,2,5)" rx="2" ry="2"/>
<text x="796.1" y="1951.5"/>
</g>
<g class="hide">
<title>ntfs_attr_mst_pwrite (57 samples, 0.01%)</title><rect x="790.4" y="2037" width="0.1" height="15.0" fill="rgb(218,22,8)" rx="2" ry="2"/>
<text x="793.4" y="2047.5"/>
</g>
<g class="hide">
<title>v8::internal::compiler::GraphReducer::ReduceGraph (39 samples, 0.01%)</title><rect x="44.1" y="1781" width="0.1" height="15.0" fill="rgb(244,101,27)" rx="2" ry="2"/>
<text x="47.1" y="1791.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (1,246 samples, 0.29%)</title><rect x="514.0" y="1909" width="3.4" height="15.0" fill="rgb(229,118,42)" rx="2" ry="2"/>
<text x="517" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,903 samples, 4.38%)</title><rect x="119.8" y="1973" width="51.7" height="15.0" fill="rgb(219,202,22)" rx="2" ry="2"/>
<text x="122.8" y="1983.5">[[kern..</text>
</g>
<g class="hide">
<title>_nv035303rm (48 samples, 0.01%)</title><rect x="379.4" y="2037" width="0.1" height="15.0" fill="rgb(235,178,53)" rx="2" ry="2"/>
<text x="382.4" y="2047.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (51 samples, 0.01%)</title><rect x="1183.6330935251813" y="1877" width="2.122302158273381" height="15.0" fill="rgb(224,77,2)" rx="2" ry="2" _orig_x="575.6" _orig_width="0.1"/>
<text x="1186.6330935251813" y="1887.5" _orig_x="578.6"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (218 samples, 0.05%)</title><rect x="308.2" y="1957" width="0.6" height="15.0" fill="rgb(233,129,12)" rx="2" ry="2"/>
<text x="311.2" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (319 samples, 0.07%)</title><rect x="474.6" y="1845" width="0.9" height="15.0" fill="rgb(213,216,36)" rx="2" ry="2"/>
<text x="477.6" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (106 samples, 0.02%)</title><rect x="465.7" y="1733" width="0.2" height="15.0" fill="rgb(211,103,26)" rx="2" ry="2"/>
<text x="468.7" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (193 samples, 0.04%)</title><rect x="732.3" y="1653" width="0.5" height="15.0" fill="rgb(229,184,41)" rx="2" ry="2"/>
<text x="735.3" y="1663.5"/>
</g>
<g class="hide">
<title>[code] (91 samples, 0.02%)</title><rect x="245.1" y="1157" width="0.2" height="15.0" fill="rgb(205,194,19)" rx="2" ry="2"/>
<text x="248.1" y="1167.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::operator[] (43 samples, 0.01%)</title><rect x="576.1" y="1877" width="0.1" height="15.0" fill="rgb(206,52,27)" rx="2" ry="2"/>
<text x="579.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="392.0" y="1861" width="0.1" height="15.0" fill="rgb(222,45,21)" rx="2" ry="2"/>
<text x="395" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1909" width="9.7" height="15.0" fill="rgb(212,30,40)" rx="2" ry="2"/>
<text x="241.3" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="380.3" y="1989" width="0.2" height="15.0" fill="rgb(210,86,10)" rx="2" ry="2"/>
<text x="383.3" y="1999.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (177 samples, 0.04%)</title><rect x="641.2" y="1925" width="0.5" height="15.0" fill="rgb(207,143,26)" rx="2" ry="2"/>
<text x="644.2" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="55.8" y="1845" width="0.1" height="15.0" fill="rgb(229,173,54)" rx="2" ry="2"/>
<text x="58.8" y="1855.5"/>
</g>
<g class="hide">
<title>v8::internal::Runtime::SetObjectProperty (42 samples, 0.01%)</title><rect x="248.7" y="1877" width="0.1" height="15.0" fill="rgb(252,75,42)" rx="2" ry="2"/>
<text x="251.7" y="1887.5"/>
</g>
<g class="hide">
<title>std::__1::chrono::system_clock::now (46 samples, 0.01%)</title><rect x="340.3" y="2005" width="0.1" height="15.0" fill="rgb(254,2,23)" rx="2" ry="2"/>
<text x="343.3" y="2015.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (158 samples, 0.04%)</title><rect x="501.8" y="1749" width="0.4" height="15.0" fill="rgb(219,179,9)" rx="2" ry="2"/>
<text x="504.8" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (459 samples, 0.11%)</title><rect x="1125.9" y="1637" width="1.2" height="15.0" fill="rgb(227,106,39)" rx="2" ry="2"/>
<text x="1128.9" y="1647.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (78 samples, 0.02%)</title><rect x="585.1438848920867" y="1845" width="6.366906474820143" height="15.0" fill="rgb(227,80,42)" rx="2" ry="2" _orig_x="547.4" _orig_width="0.3"/>
<text x="588.1438848920867" y="1855.5" _orig_x="550.4"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (825 samples, 0.19%)</title><rect x="596.9" y="1925" width="2.2" height="15.0" fill="rgb(231,49,45)" rx="2" ry="2"/>
<text x="599.9" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row*, Row&gt; (146 samples, 0.03%)</title><rect x="646.7" y="1925" width="0.4" height="15.0" fill="rgb(237,189,2)" rx="2" ry="2"/>
<text x="649.7" y="1935.5"/>
</g>
<g class="hide">
<title>thread_native_entry (69 samples, 0.02%)</title><rect x="21.9" y="2021" width="0.2" height="15.0" fill="rgb(237,84,54)" rx="2" ry="2"/>
<text x="24.9" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (94 samples, 0.02%)</title><rect x="244.1" y="1237" width="0.3" height="15.0" fill="rgb(248,114,44)" rx="2" ry="2"/>
<text x="247.1" y="1247.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (77 samples, 0.02%)</title><rect x="619.5" y="1813" width="0.2" height="15.0" fill="rgb(254,96,34)" rx="2" ry="2"/>
<text x="622.5" y="1823.5"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (2,772 samples, 0.64%)</title><rect x="253.4" y="2037" width="7.6" height="15.0" fill="rgb(252,229,22)" rx="2" ry="2"/>
<text x="256.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="364.6" y="1845" width="0.1" height="15.0" fill="rgb(239,110,51)" rx="2" ry="2"/>
<text x="367.6" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (203 samples, 0.05%)</title><rect x="606.2" y="1765" width="0.6" height="15.0" fill="rgb(253,98,5)" rx="2" ry="2"/>
<text x="609.2" y="1775.5"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (290 samples, 0.07%)</title><rect x="355.6" y="2037" width="0.8" height="15.0" fill="rgb(235,127,51)" rx="2" ry="2"/>
<text x="358.6" y="2047.5"/>
</g>
<g class="hide">
<title>malloc (55 samples, 0.01%)</title><rect x="509.6" y="1877" width="0.1" height="15.0" fill="rgb(253,70,23)" rx="2" ry="2"/>
<text x="512.6" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (1,829 samples, 0.42%)</title><rect x="239.7" y="1621" width="5.0" height="15.0" fill="rgb(230,208,40)" rx="2" ry="2"/>
<text x="242.7" y="1631.5"/>
</g>
<g class="hide">
<title>[code] (443 samples, 0.10%)</title><rect x="242.1" y="1125" width="1.2" height="15.0" fill="rgb(213,117,6)" rx="2" ry="2"/>
<text x="245.1" y="1135.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (112 samples, 0.03%)</title><rect x="435.1" y="1829" width="0.3" height="15.0" fill="rgb(243,2,11)" rx="2" ry="2"/>
<text x="438.1" y="1839.5"/>
</g>
<g class="hide">
<title>TypeFloat::DeserializeFrom (1,635 samples, 0.38%)</title><rect x="459.6" y="1829" width="4.5" height="15.0" fill="rgb(248,61,28)" rx="2" ry="2"/>
<text x="462.6" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (542 samples, 0.13%)</title><rect x="241.8" y="1173" width="1.5" height="15.0" fill="rgb(233,176,50)" rx="2" ry="2"/>
<text x="244.8" y="1183.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="342.6" y="1877" width="0.2" height="15.0" fill="rgb(229,192,26)" rx="2" ry="2"/>
<text x="345.6" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (620 samples, 0.14%)</title><rect x="706.3" y="2005" width="1.7" height="15.0" fill="rgb(254,219,38)" rx="2" ry="2"/>
<text x="709.3" y="2015.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (53 samples, 0.01%)</title><rect x="613.4" y="1877" width="0.2" height="15.0" fill="rgb(215,52,10)" rx="2" ry="2"/>
<text x="616.4" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (454 samples, 0.11%)</title><rect x="587.4" y="1765" width="1.2" height="15.0" fill="rgb(241,173,51)" rx="2" ry="2"/>
<text x="590.4" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (633 samples, 0.15%)</title><rect x="793.5" y="1797" width="1.7" height="15.0" fill="rgb(218,94,9)" rx="2" ry="2"/>
<text x="796.5" y="1807.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (126 samples, 0.03%)</title><rect x="599.4" y="1861" width="0.4" height="15.0" fill="rgb(248,226,32)" rx="2" ry="2"/>
<text x="602.4" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="49.2" y="2005" width="0.3" height="15.0" fill="rgb(205,56,33)" rx="2" ry="2"/>
<text x="52.2" y="2015.5"/>
</g>
<g class="hide">
<title>__GI___getdents64 (68 samples, 0.02%)</title><rect x="798.0" y="2037" width="0.2" height="15.0" fill="rgb(214,128,19)" rx="2" ry="2"/>
<text x="801" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="1185.3" y="1989" width="0.2" height="15.0" fill="rgb(216,109,8)" rx="2" ry="2"/>
<text x="1188.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="1178.7" y="1493" width="0.1" height="15.0" fill="rgb(250,176,34)" rx="2" ry="2"/>
<text x="1181.7" y="1503.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,446 samples, 0.57%)</title><rect x="1172.1" y="1717" width="6.7" height="15.0" fill="rgb(214,32,43)" rx="2" ry="2"/>
<text x="1175.1" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (166 samples, 0.04%)</title><rect x="52.3" y="1765" width="0.4" height="15.0" fill="rgb(238,219,14)" rx="2" ry="2"/>
<text x="55.3" y="1775.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::destroy&lt;void*&gt; (65 samples, 0.02%)</title><rect x="589.0" y="1765" width="0.2" height="15.0" fill="rgb(215,221,5)" rx="2" ry="2"/>
<text x="592" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="15.4" y="1749" width="0.2" height="15.0" fill="rgb(253,148,17)" rx="2" ry="2"/>
<text x="18.4" y="1759.5"/>
</g>
<g class="hide">
<title>[libxul.so] (150 samples, 0.03%)</title><rect x="27.5" y="2037" width="0.4" height="15.0" fill="rgb(240,187,0)" rx="2" ry="2"/>
<text x="30.5" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (77 samples, 0.02%)</title><rect x="245.6" y="1461" width="0.2" height="15.0" fill="rgb(220,62,6)" rx="2" ry="2"/>
<text x="248.6" y="1471.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (38 samples, 0.01%)</title><rect x="448.5" y="1829" width="0.1" height="15.0" fill="rgb(252,9,16)" rx="2" ry="2"/>
<text x="451.5" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (429 samples, 0.10%)</title><rect x="409.6" y="1653" width="1.2" height="15.0" fill="rgb(238,22,42)" rx="2" ry="2"/>
<text x="412.6" y="1663.5"/>
</g>
<g class="hide">
<title>[code] (236 samples, 0.05%)</title><rect x="52.1" y="1861" width="0.7" height="15.0" fill="rgb(215,123,36)" rx="2" ry="2"/>
<text x="55.1" y="1871.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::destroy&lt;void*&gt; (45 samples, 0.01%)</title><rect x="587.1" y="1765" width="0.1" height="15.0" fill="rgb(245,155,50)" rx="2" ry="2"/>
<text x="590.1" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1877" width="0.4" height="15.0" fill="rgb(253,151,35)" rx="2" ry="2"/>
<text x="240.4" y="1887.5"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (653 samples, 0.15%)</title><rect x="68.9" y="2005" width="1.8" height="15.0" fill="rgb(245,11,43)" rx="2" ry="2"/>
<text x="71.9" y="2015.5"/>
</g>
<g class="hide">
<title>__strlen_avx2 (66 samples, 0.02%)</title><rect x="268.5" y="1941" width="0.2" height="15.0" fill="rgb(210,80,13)" rx="2" ry="2"/>
<text x="271.5" y="1951.5"/>
</g>
<g class="hide">
<title>__xstat64 (216 samples, 0.05%)</title><rect x="48.4" y="2021" width="0.6" height="15.0" fill="rgb(244,14,26)" rx="2" ry="2"/>
<text x="51.4" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (251 samples, 0.06%)</title><rect x="382.7" y="2021" width="0.7" height="15.0" fill="rgb(219,44,15)" rx="2" ry="2"/>
<text x="385.7" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="997" width="0.2" height="15.0" fill="rgb(221,64,31)" rx="2" ry="2"/>
<text x="30" y="1007.5"/>
</g>
<g class="hide">
<title>[code] (298 samples, 0.07%)</title><rect x="242.5" y="1061" width="0.8" height="15.0" fill="rgb(235,9,8)" rx="2" ry="2"/>
<text x="245.5" y="1071.5"/>
</g>
<g class="hide">
<title>perf (918 samples, 0.21%)</title><rect x="792.9" y="2053" width="2.5" height="15.0" fill="rgb(225,92,39)" rx="2" ry="2"/>
<text x="795.9" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (184 samples, 0.04%)</title><rect x="46.7" y="2021" width="0.5" height="15.0" fill="rgb(236,182,28)" rx="2" ry="2"/>
<text x="49.7" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (728 samples, 0.17%)</title><rect x="45.2" y="2037" width="2.0" height="15.0" fill="rgb(231,75,13)" rx="2" ry="2"/>
<text x="48.2" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="391.8" y="1717" width="0.2" height="15.0" fill="rgb(243,160,17)" rx="2" ry="2"/>
<text x="394.8" y="1727.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (256 samples, 0.06%)</title><rect x="103.3812949640307" y="1749" width="14.856115107913666" height="15.0" fill="rgb(218,27,14)" rx="2" ry="2" _orig_x="524.7" _orig_width="0.7"/>
<text x="106.3812949640307" y="1759.5" _orig_x="527.7"/>
</g>
<g class="hide">
<title>[perf-123031.map] (183 samples, 0.04%)</title><rect x="243.4" y="1045" width="0.5" height="15.0" fill="rgb(228,42,15)" rx="2" ry="2"/>
<text x="246.4" y="1055.5"/>
</g>
<g class="hide">
<title>[code] (74 samples, 0.02%)</title><rect x="247.5" y="1669" width="0.2" height="15.0" fill="rgb(237,88,49)" rx="2" ry="2"/>
<text x="250.5" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="33.6" y="1813" width="0.1" height="15.0" fill="rgb(214,49,38)" rx="2" ry="2"/>
<text x="36.6" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="51.6" y="1701" width="0.1" height="15.0" fill="rgb(228,185,10)" rx="2" ry="2"/>
<text x="54.6" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (261 samples, 0.06%)</title><rect x="113.2" y="1781" width="0.7" height="15.0" fill="rgb(211,52,21)" rx="2" ry="2"/>
<text x="116.2" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.02%)</title><rect x="245.1" y="1045" width="0.2" height="15.0" fill="rgb(248,24,23)" rx="2" ry="2"/>
<text x="248.1" y="1055.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,849 samples, 0.66%)</title><rect x="310.8" y="1957" width="7.8" height="15.0" fill="rgb(244,163,9)" rx="2" ry="2"/>
<text x="313.8" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (154 samples, 0.04%)</title><rect x="46.8" y="1957" width="0.4" height="15.0" fill="rgb(236,132,2)" rx="2" ry="2"/>
<text x="49.8" y="1967.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (82 samples, 0.02%)</title><rect x="224.35251798561197" y="1717" width="6.366906474820143" height="15.0" fill="rgb(237,52,52)" rx="2" ry="2" _orig_x="530.4" _orig_width="0.3"/>
<text x="227.35251798561197" y="1727.5" _orig_x="533.4"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (817 samples, 0.19%)</title><rect x="331.4" y="1813" width="2.3" height="15.0" fill="rgb(237,119,43)" rx="2" ry="2"/>
<text x="334.4" y="1823.5"/>
</g>
<g class="">
<title>std::forward&lt;bool&gt; (39 samples, 0.01%)</title><rect x="493.88489208633234" y="1765" width="2.122302158273381" height="15.0" fill="rgb(247,159,4)" rx="2" ry="2" _orig_x="543.1" _orig_width="0.1"/>
<text x="496.88489208633234" y="1775.5" _orig_x="546.1"/>
</g>
<g class="hide">
<title>TypeChar::DeserializeFrom (100 samples, 0.02%)</title><rect x="643.3" y="1877" width="0.3" height="15.0" fill="rgb(236,67,47)" rx="2" ry="2"/>
<text x="646.3" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1029" width="0.2" height="15.0" fill="rgb(208,14,30)" rx="2" ry="2"/>
<text x="30" y="1039.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (139 samples, 0.03%)</title><rect x="428.6" y="1797" width="0.4" height="15.0" fill="rgb(213,101,47)" rx="2" ry="2"/>
<text x="431.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.03%)</title><rect x="388.7" y="1957" width="0.3" height="15.0" fill="rgb(230,39,0)" rx="2" ry="2"/>
<text x="391.7" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.04%)</title><rect x="381.2" y="1941" width="0.5" height="15.0" fill="rgb(251,227,44)" rx="2" ry="2"/>
<text x="384.2" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="373.7" y="1973" width="0.1" height="15.0" fill="rgb(220,169,53)" rx="2" ry="2"/>
<text x="376.7" y="1983.5"/>
</g>
<g class="hide">
<title>pa_frame_align (81 samples, 0.02%)</title><rect x="191.5" y="2037" width="0.2" height="15.0" fill="rgb(225,138,3)" rx="2" ry="2"/>
<text x="194.5" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1093" width="0.8" height="15.0" fill="rgb(210,128,24)" rx="2" ry="2"/>
<text x="57.8" y="1103.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.03%)</title><rect x="665.5" y="1877" width="0.4" height="15.0" fill="rgb(207,87,13)" rx="2" ry="2"/>
<text x="668.5" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="391.8" y="1861" width="0.2" height="15.0" fill="rgb(253,223,1)" rx="2" ry="2"/>
<text x="394.8" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="33.5" y="1845" width="0.2" height="15.0" fill="rgb(246,2,48)" rx="2" ry="2"/>
<text x="36.5" y="1855.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (87 samples, 0.02%)</title><rect x="56.9" y="2037" width="0.2" height="15.0" fill="rgb(254,221,38)" rx="2" ry="2"/>
<text x="59.9" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (72 samples, 0.02%)</title><rect x="655.3" y="1845" width="0.2" height="15.0" fill="rgb(225,139,26)" rx="2" ry="2"/>
<text x="658.3" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (37 samples, 0.01%)</title><rect x="645.6" y="1781" width="0.1" height="15.0" fill="rgb(252,14,2)" rx="2" ry="2"/>
<text x="648.6" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (279 samples, 0.06%)</title><rect x="306.8" y="1925" width="0.7" height="15.0" fill="rgb(253,16,13)" rx="2" ry="2"/>
<text x="309.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (42 samples, 0.01%)</title><rect x="653.8" y="1877" width="0.1" height="15.0" fill="rgb(228,19,43)" rx="2" ry="2"/>
<text x="656.8" y="1887.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (88 samples, 0.02%)</title><rect x="638.2014388489213" y="1845" width="4.244604316546762" height="15.0" fill="rgb(251,37,9)" rx="2" ry="2" _orig_x="549.9" _orig_width="0.2"/>
<text x="641.2014388489213" y="1855.5" _orig_x="552.9"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (64 samples, 0.01%)</title><rect x="73.3" y="1989" width="0.1" height="15.0" fill="rgb(231,103,39)" rx="2" ry="2"/>
<text x="76.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.02%)</title><rect x="1188.1" y="1797" width="0.3" height="15.0" fill="rgb(218,180,21)" rx="2" ry="2"/>
<text x="1191.1" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1093" width="0.2" height="15.0" fill="rgb(213,145,33)" rx="2" ry="2"/>
<text x="30" y="1103.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="1029" width="0.8" height="15.0" fill="rgb(240,26,48)" rx="2" ry="2"/>
<text x="57.8" y="1039.5"/>
</g>
<g class="hide">
<title>[code] (73 samples, 0.02%)</title><rect x="243.1" y="757" width="0.2" height="15.0" fill="rgb(231,35,2)" rx="2" ry="2"/>
<text x="246.1" y="767.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (180 samples, 0.04%)</title><rect x="504.3" y="1733" width="0.5" height="15.0" fill="rgb(236,190,43)" rx="2" ry="2"/>
<text x="507.3" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,459 samples, 2.65%)</title><rect x="734.1" y="1989" width="31.4" height="15.0" fill="rgb(212,141,34)" rx="2" ry="2"/>
<text x="737.1" y="1999.5">[[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="391.8" y="1941" width="0.2" height="15.0" fill="rgb(246,108,28)" rx="2" ry="2"/>
<text x="394.8" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (256 samples, 0.06%)</title><rect x="14.6" y="1829" width="0.7" height="15.0" fill="rgb(215,189,49)" rx="2" ry="2"/>
<text x="17.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.02%)</title><rect x="26.5" y="1877" width="0.2" height="15.0" fill="rgb(250,119,40)" rx="2" ry="2"/>
<text x="29.5" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="15.8" y="1813" width="0.2" height="15.0" fill="rgb(209,22,43)" rx="2" ry="2"/>
<text x="18.8" y="1823.5"/>
</g>
<g class="hide">
<title>runtime.systemstack.abi0 (41 samples, 0.01%)</title><rect x="344.1" y="2021" width="0.1" height="15.0" fill="rgb(252,205,9)" rx="2" ry="2"/>
<text x="347.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="341.0" y="1845" width="0.1" height="15.0" fill="rgb(228,8,13)" rx="2" ry="2"/>
<text x="344" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (751 samples, 0.17%)</title><rect x="592.2" y="1877" width="2.1" height="15.0" fill="rgb(213,226,23)" rx="2" ry="2"/>
<text x="595.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (529 samples, 0.12%)</title><rect x="39.5" y="2005" width="1.4" height="15.0" fill="rgb(240,5,28)" rx="2" ry="2"/>
<text x="42.5" y="2015.5"/>
</g>
<g class="">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (41 samples, 0.01%)</title><rect x="150.07194244604364" y="1765" width="2.122302158273381" height="15.0" fill="rgb(236,169,37)" rx="2" ry="2" _orig_x="526.9" _orig_width="0.1"/>
<text x="153.07194244604364" y="1775.5" _orig_x="529.9"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (960 samples, 0.22%)</title><rect x="431.7" y="1829" width="2.6" height="15.0" fill="rgb(225,49,50)" rx="2" ry="2"/>
<text x="434.7" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (4,409 samples, 1.02%)</title><rect x="238.3" y="2005" width="12.0" height="15.0" fill="rgb(248,155,3)" rx="2" ry="2"/>
<text x="241.3" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (125 samples, 0.03%)</title><rect x="606.3" y="1733" width="0.4" height="15.0" fill="rgb(219,202,21)" rx="2" ry="2"/>
<text x="609.3" y="1743.5"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (37 samples, 0.01%)</title><rect x="209.8" y="1733" width="0.1" height="15.0" fill="rgb(235,108,6)" rx="2" ry="2"/>
<text x="212.8" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="134.5" y="1925" width="0.2" height="15.0" fill="rgb(243,165,51)" rx="2" ry="2"/>
<text x="137.5" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (50 samples, 0.01%)</title><rect x="461.6" y="1701" width="0.1" height="15.0" fill="rgb(246,148,17)" rx="2" ry="2"/>
<text x="464.6" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (206 samples, 0.05%)</title><rect x="56.3" y="2021" width="0.6" height="15.0" fill="rgb(215,49,19)" rx="2" ry="2"/>
<text x="59.3" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="796.1" y="2037" width="0.2" height="15.0" fill="rgb(206,215,12)" rx="2" ry="2"/>
<text x="799.1" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (37 samples, 0.01%)</title><rect x="457.2" y="1701" width="0.1" height="15.0" fill="rgb(238,42,24)" rx="2" ry="2"/>
<text x="460.2" y="1711.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (49 samples, 0.01%)</title><rect x="617.2" y="1829" width="0.1" height="15.0" fill="rgb(240,217,39)" rx="2" ry="2"/>
<text x="620.2" y="1839.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (172 samples, 0.04%)</title><rect x="244.0" y="1349" width="0.4" height="15.0" fill="rgb(208,62,49)" rx="2" ry="2"/>
<text x="247" y="1359.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="795.2" y="1909" width="0.1" height="15.0" fill="rgb(237,94,29)" rx="2" ry="2"/>
<text x="798.2" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (64 samples, 0.01%)</title><rect x="27.0" y="309" width="0.2" height="15.0" fill="rgb(247,121,45)" rx="2" ry="2"/>
<text x="30" y="319.5"/>
</g>
<g class="hide">
<title>operator new (65 samples, 0.02%)</title><rect x="594.8" y="1893" width="0.1" height="15.0" fill="rgb(232,192,27)" rx="2" ry="2"/>
<text x="597.8" y="1903.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (136 samples, 0.03%)</title><rect x="651.0" y="1877" width="0.4" height="15.0" fill="rgb(220,60,24)" rx="2" ry="2"/>
<text x="654" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="372.3" y="1957" width="0.2" height="15.0" fill="rgb(214,171,21)" rx="2" ry="2"/>
<text x="375.3" y="1967.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (41 samples, 0.01%)</title><rect x="587.3" y="1749" width="0.1" height="15.0" fill="rgb(230,25,18)" rx="2" ry="2"/>
<text x="590.3" y="1759.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (48 samples, 0.01%)</title><rect x="613.0" y="1877" width="0.1" height="15.0" fill="rgb(205,172,37)" rx="2" ry="2"/>
<text x="616" y="1887.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1925" width="0.3" height="15.0" fill="rgb(252,229,51)" rx="2" ry="2"/>
<text x="16.5" y="1935.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (241 samples, 0.06%)</title><rect x="638.9" y="1941" width="0.6" height="15.0" fill="rgb(242,168,4)" rx="2" ry="2"/>
<text x="641.9" y="1951.5"/>
</g>
<g class="hide">
<title>vnstatd (42 samples, 0.01%)</title><rect x="1189.0" y="2053" width="0.1" height="15.0" fill="rgb(213,120,22)" rx="2" ry="2"/>
<text x="1192" y="2063.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (1,428 samples, 0.33%)</title><rect x="455.5" y="1813" width="3.9" height="15.0" fill="rgb(232,5,32)" rx="2" ry="2"/>
<text x="458.5" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (189 samples, 0.04%)</title><rect x="490.6" y="1813" width="0.5" height="15.0" fill="rgb(208,82,39)" rx="2" ry="2"/>
<text x="493.6" y="1823.5"/>
</g>
<g class="hide">
<title>malloc (76 samples, 0.02%)</title><rect x="774.2" y="2021" width="0.2" height="15.0" fill="rgb(249,116,15)" rx="2" ry="2"/>
<text x="777.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.03%)</title><rect x="391.4" y="1989" width="0.4" height="15.0" fill="rgb(212,184,3)" rx="2" ry="2"/>
<text x="394.4" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="243.2" y="533" width="0.1" height="15.0" fill="rgb(237,40,9)" rx="2" ry="2"/>
<text x="246.2" y="543.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (215 samples, 0.05%)</title><rect x="1111.4748201438867" y="1813" width="12.733812949640287" height="15.0" fill="rgb(251,84,40)" rx="2" ry="2" _orig_x="572.2" _orig_width="0.6"/>
<text x="1114.4748201438867" y="1823.5" _orig_x="575.2"/>
</g>
<g class="hide">
<title>[code] (195 samples, 0.05%)</title><rect x="242.8" y="1013" width="0.5" height="15.0" fill="rgb(214,154,8)" rx="2" ry="2"/>
<text x="245.8" y="1023.5"/>
</g>
<g class="hide">
<title>pa_sample_spec_valid (135 samples, 0.03%)</title><rect x="182.4" y="2021" width="0.4" height="15.0" fill="rgb(250,2,50)" rx="2" ry="2"/>
<text x="185.4" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="997" width="0.8" height="15.0" fill="rgb(251,85,40)" rx="2" ry="2"/>
<text x="57.8" y="1007.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (753 samples, 0.17%)</title><rect x="443.4" y="1669" width="2.1" height="15.0" fill="rgb(222,13,44)" rx="2" ry="2"/>
<text x="446.4" y="1679.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (45 samples, 0.01%)</title><rect x="589.3" y="1781" width="0.1" height="15.0" fill="rgb(219,119,54)" rx="2" ry="2"/>
<text x="592.3" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="203.2" y="1925" width="0.1" height="15.0" fill="rgb(242,24,34)" rx="2" ry="2"/>
<text x="206.2" y="1935.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (3,158 samples, 0.73%)</title><rect x="315.6115107913688" y="1781" width="184.64028776978415" height="15.0" fill="rgb(250,180,15)" rx="2" ry="2" _orig_x="534.7" _orig_width="8.7"/>
<text x="318.6115107913688" y="1791.5" _orig_x="537.7">std::_Hashtable&lt;void*, void..</text>
</g>
<g class="hide">
<title>Field::CompareLessThan (278 samples, 0.06%)</title><rect x="452.1" y="1877" width="0.7" height="15.0" fill="rgb(246,102,43)" rx="2" ry="2"/>
<text x="455.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="33.5" y="1877" width="0.2" height="15.0" fill="rgb(244,147,21)" rx="2" ry="2"/>
<text x="36.5" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1925" width="9.7" height="15.0" fill="rgb(233,171,48)" rx="2" ry="2"/>
<text x="241.3" y="1935.5"/>
</g>
<g class="hide">
<title>record__pushfn (714 samples, 0.17%)</title><rect x="793.3" y="1941" width="1.9" height="15.0" fill="rgb(250,160,1)" rx="2" ry="2"/>
<text x="796.3" y="1951.5"/>
</g>
<g class="hide">
<title>pa_msgobject_check_type (67 samples, 0.02%)</title><rect x="194.9" y="2037" width="0.2" height="15.0" fill="rgb(227,124,25)" rx="2" ry="2"/>
<text x="197.9" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="342.6" y="1893" width="0.2" height="15.0" fill="rgb(211,208,52)" rx="2" ry="2"/>
<text x="345.6" y="1903.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (58 samples, 0.01%)</title><rect x="566.0431654676267" y="1845" width="4.244604316546762" height="15.0" fill="rgb(251,150,33)" rx="2" ry="2" _orig_x="546.5" _orig_width="0.2"/>
<text x="569.0431654676267" y="1855.5" _orig_x="549.5"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (38 samples, 0.01%)</title><rect x="373.5" y="1989" width="0.1" height="15.0" fill="rgb(243,104,4)" rx="2" ry="2"/>
<text x="376.5" y="1999.5"/>
</g>
<g class="hide">
<title>snd_pcm_common_ioctl (13,770 samples, 3.19%)</title><rect x="133.7" y="1941" width="37.6" height="15.0" fill="rgb(245,153,42)" rx="2" ry="2"/>
<text x="136.7" y="1951.5">sn..</text>
</g>
<g class="hide">
<title>hid_irq_in (51 samples, 0.01%)</title><rect x="1127.3" y="1765" width="0.1" height="15.0" fill="rgb(232,39,0)" rx="2" ry="2"/>
<text x="1130.3" y="1775.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_move_if_noexcept_a&lt;Field*, Field*, std::allocator&lt;Field&gt; &gt; (66 samples, 0.02%)</title><rect x="659.8" y="1941" width="0.1" height="15.0" fill="rgb(244,159,37)" rx="2" ry="2"/>
<text x="662.8" y="1951.5"/>
</g>
<g class="hide">
<title>Field::Field (44 samples, 0.01%)</title><rect x="660.0" y="1909" width="0.1" height="15.0" fill="rgb(212,154,41)" rx="2" ry="2"/>
<text x="663" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (233 samples, 0.05%)</title><rect x="26.8" y="2037" width="0.7" height="15.0" fill="rgb(228,83,48)" rx="2" ry="2"/>
<text x="29.8" y="2047.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (117 samples, 0.03%)</title><rect x="15.3" y="1877" width="0.3" height="15.0" fill="rgb(252,79,45)" rx="2" ry="2"/>
<text x="18.3" y="1887.5"/>
</g>
<g class="hide">
<title>Field::Field (41 samples, 0.01%)</title><rect x="602.4" y="1861" width="0.2" height="15.0" fill="rgb(249,26,13)" rx="2" ry="2"/>
<text x="605.4" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (138 samples, 0.03%)</title><rect x="243.5" y="997" width="0.4" height="15.0" fill="rgb(242,26,36)" rx="2" ry="2"/>
<text x="246.5" y="1007.5"/>
</g>
<g class="hide">
<title>g_socket_receive_message (88 samples, 0.02%)</title><rect x="346.8" y="1989" width="0.3" height="15.0" fill="rgb(233,90,28)" rx="2" ry="2"/>
<text x="349.8" y="1999.5"/>
</g>
<g class="hide">
<title>__libc_enable_asynccancel (44 samples, 0.01%)</title><rect x="319.1" y="2005" width="0.1" height="15.0" fill="rgb(248,186,41)" rx="2" ry="2"/>
<text x="322.1" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (1,324 samples, 0.31%)</title><rect x="630.3" y="1861" width="3.7" height="15.0" fill="rgb(224,168,37)" rx="2" ry="2"/>
<text x="633.3" y="1871.5"/>
</g>
<g class="hide">
<title>snd_pcm_ioctl (13,828 samples, 3.20%)</title><rect x="133.7" y="1957" width="37.8" height="15.0" fill="rgb(228,45,43)" rx="2" ry="2"/>
<text x="136.7" y="1967.5">sn..</text>
</g>
<g class="hide">
<title>__memcmp_avx2_movbe (84 samples, 0.02%)</title><rect x="266.9" y="1909" width="0.2" height="15.0" fill="rgb(209,144,47)" rx="2" ry="2"/>
<text x="269.9" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="629" width="0.2" height="15.0" fill="rgb(211,217,43)" rx="2" ry="2"/>
<text x="30" y="639.5"/>
</g>
<g class="hide">
<title>ppoll (47 samples, 0.01%)</title><rect x="796.3" y="2037" width="0.1" height="15.0" fill="rgb(227,139,41)" rx="2" ry="2"/>
<text x="799.3" y="2047.5"/>
</g>
<g class="hide">
<title>pa_source_post (139 samples, 0.03%)</title><rect x="200.7" y="2037" width="0.4" height="15.0" fill="rgb(228,147,53)" rx="2" ry="2"/>
<text x="203.7" y="2047.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr0 (9,729 samples, 2.25%)</title><rect x="135.2" y="1877" width="26.6" height="15.0" fill="rgb(231,20,17)" rx="2" ry="2"/>
<text x="138.2" y="1887.5">s..</text>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (40 samples, 0.01%)</title><rect x="361.7" y="1989" width="0.1" height="15.0" fill="rgb(205,23,33)" rx="2" ry="2"/>
<text x="364.7" y="1999.5"/>
</g>
<g class="hide">
<title>cmd_record (892 samples, 0.21%)</title><rect x="792.9" y="1989" width="2.4" height="15.0" fill="rgb(239,218,36)" rx="2" ry="2"/>
<text x="795.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,056 samples, 0.48%)</title><rect x="255.4" y="1941" width="5.6" height="15.0" fill="rgb(231,38,46)" rx="2" ry="2"/>
<text x="258.4" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (58 samples, 0.01%)</title><rect x="608.9" y="1765" width="0.2" height="15.0" fill="rgb(249,219,39)" rx="2" ry="2"/>
<text x="611.9" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (85 samples, 0.02%)</title><rect x="209.5" y="1653" width="0.2" height="15.0" fill="rgb(218,153,29)" rx="2" ry="2"/>
<text x="212.5" y="1663.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (91 samples, 0.02%)</title><rect x="577.4" y="1813" width="0.2" height="15.0" fill="rgb(206,26,13)" rx="2" ry="2"/>
<text x="580.4" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="236.8" y="1765" width="0.2" height="15.0" fill="rgb(226,113,20)" rx="2" ry="2"/>
<text x="239.8" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (341 samples, 0.08%)</title><rect x="1177.8" y="1637" width="1.0" height="15.0" fill="rgb(219,88,25)" rx="2" ry="2"/>
<text x="1180.8" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (191 samples, 0.04%)</title><rect x="56.3" y="1941" width="0.6" height="15.0" fill="rgb(230,39,49)" rx="2" ry="2"/>
<text x="59.3" y="1951.5"/>
</g>
<g class="">
<title>IndexKey::DeserializeToKey (20,352 samples, 4.71%)</title><rect x="10" y="1893" width="1180" height="15.0" fill="rgb(236,131,33)" rx="2" ry="2" _orig_x="520.3" _orig_width="55.6"/>
<text x="13" y="1903.5" _orig_x="523.3">IndexKey::DeserializeToKey </text>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (63 samples, 0.01%)</title><rect x="363.4" y="1989" width="0.1" height="15.0" fill="rgb(224,221,39)" rx="2" ry="2"/>
<text x="366.4" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="51.9" y="1925" width="0.2" height="15.0" fill="rgb(234,86,32)" rx="2" ry="2"/>
<text x="54.9" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (77 samples, 0.02%)</title><rect x="23.1" y="2037" width="0.2" height="15.0" fill="rgb(244,221,52)" rx="2" ry="2"/>
<text x="26.1" y="2047.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (49 samples, 0.01%)</title><rect x="29.2" y="1893" width="0.1" height="15.0" fill="rgb(215,213,37)" rx="2" ry="2"/>
<text x="32.2" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="209.8" y="1685" width="0.1" height="15.0" fill="rgb(251,212,49)" rx="2" ry="2"/>
<text x="212.8" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (53 samples, 0.01%)</title><rect x="244.2" y="789" width="0.2" height="15.0" fill="rgb(215,209,6)" rx="2" ry="2"/>
<text x="247.2" y="799.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (165 samples, 0.04%)</title><rect x="11.9" y="2005" width="0.4" height="15.0" fill="rgb(253,155,15)" rx="2" ry="2"/>
<text x="14.9" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (183 samples, 0.04%)</title><rect x="247.3" y="1797" width="0.5" height="15.0" fill="rgb(217,182,42)" rx="2" ry="2"/>
<text x="250.3" y="1807.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvents (17,273 samples, 4.00%)</title><rect x="262.3" y="1989" width="47.2" height="15.0" fill="rgb(216,220,21)" rx="2" ry="2"/>
<text x="265.3" y="1999.5">Inoti..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.02%)</title><rect x="32.1" y="1973" width="0.3" height="15.0" fill="rgb(238,36,52)" rx="2" ry="2"/>
<text x="35.1" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (211 samples, 0.05%)</title><rect x="492.2" y="1813" width="0.6" height="15.0" fill="rgb(247,141,54)" rx="2" ry="2"/>
<text x="495.2" y="1823.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (66 samples, 0.02%)</title><rect x="358.0" y="1877" width="0.2" height="15.0" fill="rgb(248,74,19)" rx="2" ry="2"/>
<text x="361" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (37 samples, 0.01%)</title><rect x="1189.0" y="2037" width="0.1" height="15.0" fill="rgb(254,97,28)" rx="2" ry="2"/>
<text x="1192" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="16.7" y="1877" width="0.2" height="15.0" fill="rgb(220,188,10)" rx="2" ry="2"/>
<text x="19.7" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (37,114 samples, 8.60%)</title><rect x="679.5" y="2037" width="101.4" height="15.0" fill="rgb(243,134,43)" rx="2" ry="2"/>
<text x="682.5" y="2047.5">[unknown] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (204 samples, 0.05%)</title><rect x="388.5" y="1989" width="0.5" height="15.0" fill="rgb(250,30,40)" rx="2" ry="2"/>
<text x="391.5" y="1999.5"/>
</g>
<g class="hide">
<title>start_thread (51 samples, 0.01%)</title><rect x="49.8" y="2037" width="0.1" height="15.0" fill="rgb(215,22,18)" rx="2" ry="2"/>
<text x="52.8" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (55 samples, 0.01%)</title><rect x="650.5" y="1829" width="0.2" height="15.0" fill="rgb(248,193,3)" rx="2" ry="2"/>
<text x="653.5" y="1839.5"/>
</g>
<g class="hide">
<title>[libc-2.31.so] (66 samples, 0.02%)</title><rect x="679.5" y="2021" width="0.2" height="15.0" fill="rgb(249,24,42)" rx="2" ry="2"/>
<text x="682.5" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1749" width="0.8" height="15.0" fill="rgb(252,188,35)" rx="2" ry="2"/>
<text x="57.8" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (102 samples, 0.02%)</title><rect x="21.0" y="1717" width="0.2" height="15.0" fill="rgb(251,28,28)" rx="2" ry="2"/>
<text x="24" y="1727.5"/>
</g>
<g class="hide">
<title>snd_pcm_state (97 samples, 0.02%)</title><rect x="75.0" y="1989" width="0.2" height="15.0" fill="rgb(228,218,7)" rx="2" ry="2"/>
<text x="78" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="373.7" y="2005" width="0.1" height="15.0" fill="rgb(238,151,9)" rx="2" ry="2"/>
<text x="376.7" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="1045" width="0.8" height="15.0" fill="rgb(208,7,34)" rx="2" ry="2"/>
<text x="57.8" y="1055.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="12.7" y="1973" width="0.2" height="15.0" fill="rgb(206,60,11)" rx="2" ry="2"/>
<text x="15.7" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="48.2" y="1733" width="0.1" height="15.0" fill="rgb(245,3,52)" rx="2" ry="2"/>
<text x="51.2" y="1743.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (46 samples, 0.01%)</title><rect x="465.3" y="1749" width="0.2" height="15.0" fill="rgb(241,115,4)" rx="2" ry="2"/>
<text x="468.3" y="1759.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (650 samples, 0.15%)</title><rect x="418.3" y="1733" width="1.8" height="15.0" fill="rgb(206,69,54)" rx="2" ry="2"/>
<text x="421.3" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (40 samples, 0.01%)</title><rect x="370.1" y="1989" width="0.1" height="15.0" fill="rgb(246,76,27)" rx="2" ry="2"/>
<text x="373.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.03%)</title><rect x="666.1" y="1973" width="0.3" height="15.0" fill="rgb(216,223,28)" rx="2" ry="2"/>
<text x="669.1" y="1983.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (44 samples, 0.01%)</title><rect x="133.09352517985755" y="1733" width="4.244604316546762" height="15.0" fill="rgb(228,63,41)" rx="2" ry="2" _orig_x="526.1" _orig_width="0.2"/>
<text x="136.09352517985755" y="1743.5" _orig_x="529.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,783 samples, 0.88%)</title><rect x="400.4" y="1909" width="10.4" height="15.0" fill="rgb(221,182,44)" rx="2" ry="2"/>
<text x="403.4" y="1919.5"/>
</g>
<g class="hide">
<title>[libxul.so] (46 samples, 0.01%)</title><rect x="28.4" y="1957" width="0.2" height="15.0" fill="rgb(207,161,38)" rx="2" ry="2"/>
<text x="31.4" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,548 samples, 0.82%)</title><rect x="401.1" y="1893" width="9.7" height="15.0" fill="rgb(210,22,44)" rx="2" ry="2"/>
<text x="404.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (271 samples, 0.06%)</title><rect x="20.6" y="2005" width="0.7" height="15.0" fill="rgb(220,57,25)" rx="2" ry="2"/>
<text x="23.6" y="2015.5"/>
</g>
<g class="hide">
<title>atopacctd (131 samples, 0.03%)</title><rect x="203.0" y="2053" width="0.3" height="15.0" fill="rgb(221,148,49)" rx="2" ry="2"/>
<text x="206" y="2063.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (243 samples, 0.06%)</title><rect x="244.8" y="1621" width="0.7" height="15.0" fill="rgb(219,29,1)" rx="2" ry="2"/>
<text x="247.8" y="1631.5"/>
</g>
<g class="">
<title>std::max&lt;unsigned long&gt; (61 samples, 0.01%)</title><rect x="788.8848920863318" y="1797" width="4.244604316546762" height="15.0" fill="rgb(218,134,1)" rx="2" ry="2" _orig_x="557.0" _orig_width="0.2"/>
<text x="791.8848920863318" y="1807.5" _orig_x="560"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="13.9" y="2021" width="0.1" height="15.0" fill="rgb(209,229,43)" rx="2" ry="2"/>
<text x="16.9" y="2031.5"/>
</g>
<g class="hide">
<title>pa_timeval_load (57 samples, 0.01%)</title><rect x="201.5" y="2037" width="0.2" height="15.0" fill="rgb(250,213,34)" rx="2" ry="2"/>
<text x="204.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="382.4" y="1893" width="0.3" height="15.0" fill="rgb(224,213,13)" rx="2" ry="2"/>
<text x="385.4" y="1903.5"/>
</g>
<g class="hide">
<title>operator new (50 samples, 0.01%)</title><rect x="509.7" y="1877" width="0.2" height="15.0" fill="rgb(234,7,13)" rx="2" ry="2"/>
<text x="512.7" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (201 samples, 0.05%)</title><rect x="243.3" y="1125" width="0.6" height="15.0" fill="rgb(230,43,40)" rx="2" ry="2"/>
<text x="246.3" y="1135.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="32.8" y="1925" width="0.3" height="15.0" fill="rgb(246,37,15)" rx="2" ry="2"/>
<text x="35.8" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (424 samples, 0.10%)</title><rect x="45.5" y="2005" width="1.1" height="15.0" fill="rgb(213,32,26)" rx="2" ry="2"/>
<text x="48.5" y="2015.5"/>
</g>
<g class="hide">
<title>azx_pcm_pointer (2,409 samples, 0.56%)</title><rect x="163.8" y="1861" width="6.6" height="15.0" fill="rgb(213,81,15)" rx="2" ry="2"/>
<text x="166.8" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (994 samples, 0.23%)</title><rect x="17.7" y="1877" width="2.7" height="15.0" fill="rgb(220,34,22)" rx="2" ry="2"/>
<text x="20.7" y="1887.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (320 samples, 0.07%)</title><rect x="246.1" y="1701" width="0.8" height="15.0" fill="rgb(206,70,5)" rx="2" ry="2"/>
<text x="249.1" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="48.2" y="1717" width="0.1" height="15.0" fill="rgb(242,214,47)" rx="2" ry="2"/>
<text x="51.2" y="1727.5"/>
</g>
<g class="hide">
<title>std::__niter_base&lt;Field**&gt; (85 samples, 0.02%)</title><rect x="483.6" y="1749" width="0.2" height="15.0" fill="rgb(246,19,37)" rx="2" ry="2"/>
<text x="486.6" y="1759.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (81 samples, 0.02%)</title><rect x="595.6" y="1909" width="0.3" height="15.0" fill="rgb(242,147,7)" rx="2" ry="2"/>
<text x="598.6" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="50.2" y="1989" width="0.2" height="15.0" fill="rgb(248,112,27)" rx="2" ry="2"/>
<text x="53.2" y="1999.5"/>
</g>
<g class="hide">
<title>mt_report (49 samples, 0.01%)</title><rect x="380.1" y="1925" width="0.2" height="15.0" fill="rgb(233,9,12)" rx="2" ry="2"/>
<text x="383.1" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (142 samples, 0.03%)</title><rect x="44.4" y="2037" width="0.4" height="15.0" fill="rgb(221,24,6)" rx="2" ry="2"/>
<text x="47.4" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (87 samples, 0.02%)</title><rect x="54.8" y="37" width="0.2" height="15.0" fill="rgb(240,140,42)" rx="2" ry="2"/>
<text x="57.8" y="47.5"/>
</g>
<g class="hide">
<title>std::allocator&lt;Field*&gt;::allocator (42 samples, 0.01%)</title><rect x="578.8" y="1829" width="0.2" height="15.0" fill="rgb(239,103,26)" rx="2" ry="2"/>
<text x="581.8" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="1989" width="1.9" height="15.0" fill="rgb(237,76,3)" rx="2" ry="2"/>
<text x="17.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="373.2" y="1973" width="0.1" height="15.0" fill="rgb(220,199,45)" rx="2" ry="2"/>
<text x="376.2" y="1983.5"/>
</g>
<g class="hide">
<title>pa_hashmap_iterate (87 samples, 0.02%)</title><rect x="79.7" y="2005" width="0.3" height="15.0" fill="rgb(214,128,11)" rx="2" ry="2"/>
<text x="82.7" y="2015.5"/>
</g>
<g class="hide">
<title>pa_sink_render_into (117 samples, 0.03%)</title><rect x="84.4" y="2005" width="0.3" height="15.0" fill="rgb(229,67,43)" rx="2" ry="2"/>
<text x="87.4" y="2015.5"/>
</g>
<g class="hide">
<title>gsd-sharing (195 samples, 0.05%)</title><rect x="371.7" y="2053" width="0.5" height="15.0" fill="rgb(205,12,10)" rx="2" ry="2"/>
<text x="374.7" y="2063.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (41 samples, 0.01%)</title><rect x="641.7" y="1909" width="0.1" height="15.0" fill="rgb(226,176,38)" rx="2" ry="2"/>
<text x="644.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="392.0" y="1797" width="0.1" height="15.0" fill="rgb(212,36,21)" rx="2" ry="2"/>
<text x="395" y="1807.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_base::_Hash_node_base (56 samples, 0.01%)</title><rect x="577.1" y="1829" width="0.2" height="15.0" fill="rgb(219,120,29)" rx="2" ry="2"/>
<text x="580.1" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (190 samples, 0.04%)</title><rect x="624.2" y="1861" width="0.5" height="15.0" fill="rgb(231,26,3)" rx="2" ry="2"/>
<text x="627.2" y="1871.5"/>
</g>
<g class="">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (802 samples, 0.19%)</title><rect x="415.35971223021625" y="1765" width="46.690647482014384" height="15.0" fill="rgb(228,129,51)" rx="2" ry="2" _orig_x="539.4" _orig_width="2.2"/>
<text x="418.35971223021625" y="1775.5" _orig_x="542.4">std:..</text>
</g>
<g class="">
<title>malloc (58 samples, 0.01%)</title><rect x="742.1942446043165" y="1781" width="4.244604316546762" height="15.0" fill="rgb(220,115,32)" rx="2" ry="2" _orig_x="554.8" _orig_width="0.2"/>
<text x="745.1942446043165" y="1791.5" _orig_x="557.8"/>
</g>
<g class="hide">
<title>__GI___ioctl (20,088 samples, 4.65%)</title><rect x="117.2" y="2021" width="54.9" height="15.0" fill="rgb(210,43,8)" rx="2" ry="2"/>
<text x="120.2" y="2031.5">__GI..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="372.3" y="1989" width="0.2" height="15.0" fill="rgb(223,28,10)" rx="2" ry="2"/>
<text x="375.3" y="1999.5"/>
</g>
<g class="hide">
<title>epoll_wait (125 samples, 0.03%)</title><rect x="15.7" y="1909" width="0.3" height="15.0" fill="rgb(245,55,13)" rx="2" ry="2"/>
<text x="18.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (211 samples, 0.05%)</title><rect x="353.9" y="1829" width="0.6" height="15.0" fill="rgb(237,164,31)" rx="2" ry="2"/>
<text x="356.9" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (156 samples, 0.04%)</title><rect x="209.3" y="1701" width="0.4" height="15.0" fill="rgb(222,109,23)" rx="2" ry="2"/>
<text x="212.3" y="1711.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,520 samples, 0.35%)</title><rect x="459.8" y="1797" width="4.2" height="15.0" fill="rgb(227,41,54)" rx="2" ry="2"/>
<text x="462.8" y="1807.5"/>
</g>
<g class="hide">
<title>ntfs_attr_mst_pwrite (104 samples, 0.02%)</title><rect x="775.2" y="2021" width="0.3" height="15.0" fill="rgb(244,139,3)" rx="2" ry="2"/>
<text x="778.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,095 samples, 1.18%)</title><rect x="683.7" y="1893" width="13.9" height="15.0" fill="rgb(233,91,18)" rx="2" ry="2"/>
<text x="686.7" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (347 samples, 0.08%)</title><rect x="418.9" y="1701" width="0.9" height="15.0" fill="rgb(221,51,3)" rx="2" ry="2"/>
<text x="421.9" y="1711.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (46 samples, 0.01%)</title><rect x="633.8" y="1845" width="0.2" height="15.0" fill="rgb(231,144,20)" rx="2" ry="2"/>
<text x="636.8" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (701 samples, 0.16%)</title><rect x="352.6" y="1989" width="1.9" height="15.0" fill="rgb(217,78,32)" rx="2" ry="2"/>
<text x="355.6" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1749" width="0.2" height="15.0" fill="rgb(207,57,33)" rx="2" ry="2"/>
<text x="30" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="383.3" y="1893" width="0.1" height="15.0" fill="rgb(236,222,13)" rx="2" ry="2"/>
<text x="386.3" y="1903.5"/>
</g>
<g class="">
<title>std::forward&lt;Field*&gt; (46 samples, 0.01%)</title><rect x="646.6906474820144" y="1845" width="2.122302158273381" height="15.0" fill="rgb(205,142,9)" rx="2" ry="2" _orig_x="550.3" _orig_width="0.1"/>
<text x="649.6906474820144" y="1855.5" _orig_x="553.3"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1045" width="0.2" height="15.0" fill="rgb(224,94,35)" rx="2" ry="2"/>
<text x="30" y="1055.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;char*, char&gt; (57 samples, 0.01%)</title><rect x="624.9" y="1861" width="0.1" height="15.0" fill="rgb(227,36,27)" rx="2" ry="2"/>
<text x="627.9" y="1871.5"/>
</g>
<g class="hide">
<title>__strlen_avx2 (105 samples, 0.02%)</title><rect x="784.9" y="2037" width="0.3" height="15.0" fill="rgb(249,1,16)" rx="2" ry="2"/>
<text x="787.9" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (70 samples, 0.02%)</title><rect x="493.7" y="1861" width="0.2" height="15.0" fill="rgb(223,139,14)" rx="2" ry="2"/>
<text x="496.7" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,072 samples, 0.25%)</title><rect x="407.8" y="1717" width="3.0" height="15.0" fill="rgb(232,213,26)" rx="2" ry="2"/>
<text x="410.8" y="1727.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (41 samples, 0.01%)</title><rect x="113.9928057553976" y="1717" width="4.244604316546762" height="15.0" fill="rgb(244,67,9)" rx="2" ry="2" _orig_x="525.2" _orig_width="0.2"/>
<text x="116.9928057553976" y="1727.5" _orig_x="528.2"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (478 samples, 0.11%)</title><rect x="456.2" y="1749" width="1.4" height="15.0" fill="rgb(211,118,15)" rx="2" ry="2"/>
<text x="459.2" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="380.3" y="2005" width="0.2" height="15.0" fill="rgb(224,204,44)" rx="2" ry="2"/>
<text x="383.3" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (159 samples, 0.04%)</title><rect x="496.9" y="1845" width="0.4" height="15.0" fill="rgb(237,102,3)" rx="2" ry="2"/>
<text x="499.9" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="347.7" y="2005" width="0.1" height="15.0" fill="rgb(222,109,34)" rx="2" ry="2"/>
<text x="350.7" y="2015.5"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (320 samples, 0.07%)</title><rect x="357.5" y="2021" width="0.9" height="15.0" fill="rgb(244,127,16)" rx="2" ry="2"/>
<text x="360.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (43 samples, 0.01%)</title><rect x="646.9" y="1749" width="0.1" height="15.0" fill="rgb(205,112,3)" rx="2" ry="2"/>
<text x="649.9" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (323 samples, 0.07%)</title><rect x="623.3" y="1861" width="0.9" height="15.0" fill="rgb(226,76,1)" rx="2" ry="2"/>
<text x="626.3" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (39 samples, 0.01%)</title><rect x="245.7" y="1061" width="0.1" height="15.0" fill="rgb(221,130,2)" rx="2" ry="2"/>
<text x="248.7" y="1071.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.05%)</title><rect x="48.4" y="1957" width="0.6" height="15.0" fill="rgb(224,94,51)" rx="2" ry="2"/>
<text x="51.4" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="629" width="0.8" height="15.0" fill="rgb(234,78,6)" rx="2" ry="2"/>
<text x="57.8" y="639.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,086 samples, 1.64%)</title><rect x="713.5" y="1861" width="19.3" height="15.0" fill="rgb(225,168,43)" rx="2" ry="2"/>
<text x="716.5" y="1871.5"/>
</g>
<g class="">
<title>Column::GetType (51 samples, 0.01%)</title><rect x="60.93525179856307" y="1861" width="4.244604316546762" height="15.0" fill="rgb(217,120,54)" rx="2" ry="2" _orig_x="522.7" _orig_width="0.2"/>
<text x="63.93525179856307" y="1871.5" _orig_x="525.7"/>
</g>
<g class="hide">
<title>pa_cvolume_set (40 samples, 0.01%)</title><rect x="190.8" y="2037" width="0.1" height="15.0" fill="rgb(220,139,47)" rx="2" ry="2"/>
<text x="193.8" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (96 samples, 0.02%)</title><rect x="609.8" y="1717" width="0.3" height="15.0" fill="rgb(212,212,18)" rx="2" ry="2"/>
<text x="612.8" y="1727.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (47 samples, 0.01%)</title><rect x="462.5" y="1717" width="0.1" height="15.0" fill="rgb(216,137,47)" rx="2" ry="2"/>
<text x="465.5" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.01%)</title><rect x="244.0" y="773" width="0.1" height="15.0" fill="rgb(240,134,40)" rx="2" ry="2"/>
<text x="247" y="783.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.03%)</title><rect x="391.4" y="2021" width="0.4" height="15.0" fill="rgb(236,176,45)" rx="2" ry="2"/>
<text x="394.4" y="2031.5"/>
</g>
<g class="hide">
<title>__sched_yield (39 samples, 0.01%)</title><rect x="205.7" y="2005" width="0.1" height="15.0" fill="rgb(250,160,20)" rx="2" ry="2"/>
<text x="208.7" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (50 samples, 0.01%)</title><rect x="440.7" y="1797" width="0.1" height="15.0" fill="rgb(235,220,35)" rx="2" ry="2"/>
<text x="443.7" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="243.1" y="677" width="0.2" height="15.0" fill="rgb(226,153,52)" rx="2" ry="2"/>
<text x="246.1" y="687.5"/>
</g>
<g class="hide">
<title>DiskManager::ReadPhysicalPage (1,588 samples, 0.37%)</title><rect x="441.2" y="1861" width="4.4" height="15.0" fill="rgb(215,19,48)" rx="2" ry="2"/>
<text x="444.2" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (217 samples, 0.05%)</title><rect x="444.9" y="1541" width="0.6" height="15.0" fill="rgb(231,49,21)" rx="2" ry="2"/>
<text x="447.9" y="1551.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1157" width="0.8" height="15.0" fill="rgb(236,129,4)" rx="2" ry="2"/>
<text x="57.8" y="1167.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="374.0" y="1989" width="0.1" height="15.0" fill="rgb(217,222,34)" rx="2" ry="2"/>
<text x="377" y="1999.5"/>
</g>
<g class="hide">
<title>Thread::call_run (43 samples, 0.01%)</title><rect x="22.4" y="2005" width="0.2" height="15.0" fill="rgb(242,225,50)" rx="2" ry="2"/>
<text x="25.4" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="789" width="0.2" height="15.0" fill="rgb(246,207,46)" rx="2" ry="2"/>
<text x="30" y="799.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="32.9" y="1845" width="0.2" height="15.0" fill="rgb(210,143,6)" rx="2" ry="2"/>
<text x="35.9" y="1855.5"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (151 samples, 0.03%)</title><rect x="62.9" y="2021" width="0.5" height="15.0" fill="rgb(233,207,46)" rx="2" ry="2"/>
<text x="65.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (187 samples, 0.04%)</title><rect x="379.8" y="2005" width="0.5" height="15.0" fill="rgb(244,218,20)" rx="2" ry="2"/>
<text x="382.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (41 samples, 0.01%)</title><rect x="463.5" y="1749" width="0.1" height="15.0" fill="rgb(222,224,34)" rx="2" ry="2"/>
<text x="466.5" y="1759.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (105 samples, 0.02%)</title><rect x="514.6" y="1797" width="0.3" height="15.0" fill="rgb(253,133,27)" rx="2" ry="2"/>
<text x="517.6" y="1807.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (163 samples, 0.04%)</title><rect x="428.5" y="1813" width="0.5" height="15.0" fill="rgb(216,142,14)" rx="2" ry="2"/>
<text x="431.5" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="853" width="0.2" height="15.0" fill="rgb(213,163,33)" rx="2" ry="2"/>
<text x="30" y="863.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="342.5" y="1973" width="0.1" height="15.0" fill="rgb(207,138,35)" rx="2" ry="2"/>
<text x="345.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (767 samples, 0.18%)</title><rect x="122.5" y="1941" width="2.1" height="15.0" fill="rgb(220,65,33)" rx="2" ry="2"/>
<text x="125.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="388.9" y="1909" width="0.1" height="15.0" fill="rgb(253,66,36)" rx="2" ry="2"/>
<text x="391.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (57 samples, 0.01%)</title><rect x="506.9" y="1845" width="0.1" height="15.0" fill="rgb(231,131,25)" rx="2" ry="2"/>
<text x="509.9" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (18,637 samples, 4.32%)</title><rect x="1127.8" y="2005" width="51.0" height="15.0" fill="rgb(250,63,40)" rx="2" ry="2"/>
<text x="1130.8" y="2015.5">[unk..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="37.4" y="1941" width="0.1" height="15.0" fill="rgb(249,164,48)" rx="2" ry="2"/>
<text x="40.4" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (298 samples, 0.07%)</title><rect x="246.1" y="1605" width="0.8" height="15.0" fill="rgb(244,226,45)" rx="2" ry="2"/>
<text x="249.1" y="1615.5"/>
</g>
<g class="hide">
<title>Thread::call_run (48 samples, 0.01%)</title><rect x="22.3" y="2005" width="0.1" height="15.0" fill="rgb(250,109,28)" rx="2" ry="2"/>
<text x="25.3" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (675 samples, 0.16%)</title><rect x="793.4" y="1877" width="1.8" height="15.0" fill="rgb(207,12,16)" rx="2" ry="2"/>
<text x="796.4" y="1887.5"/>
</g>
<g class="hide">
<title>nv_queue (45 samples, 0.01%)</title><rect x="792.8" y="2053" width="0.1" height="15.0" fill="rgb(236,101,30)" rx="2" ry="2"/>
<text x="795.8" y="2063.5"/>
</g>
<g class="hide">
<title>__libc_write (711 samples, 0.16%)</title><rect x="793.3" y="1925" width="1.9" height="15.0" fill="rgb(252,109,28)" rx="2" ry="2"/>
<text x="796.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,673 samples, 1.78%)</title><rect x="216.0" y="1989" width="21.0" height="15.0" fill="rgb(222,70,37)" rx="2" ry="2"/>
<text x="219" y="1999.5">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="250.2" y="1829" width="0.1" height="15.0" fill="rgb(240,105,18)" rx="2" ry="2"/>
<text x="253.2" y="1839.5"/>
</g>
<g class="hide">
<title>pa_mempool_ref (138 samples, 0.03%)</title><rect x="181.5" y="2021" width="0.3" height="15.0" fill="rgb(237,87,38)" rx="2" ry="2"/>
<text x="184.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (107 samples, 0.02%)</title><rect x="646.3" y="1861" width="0.3" height="15.0" fill="rgb(218,64,17)" rx="2" ry="2"/>
<text x="649.3" y="1871.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (48 samples, 0.01%)</title><rect x="249.6" y="1781" width="0.1" height="15.0" fill="rgb(249,93,42)" rx="2" ry="2"/>
<text x="252.6" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (39 samples, 0.01%)</title><rect x="593.0" y="1861" width="0.1" height="15.0" fill="rgb(245,187,2)" rx="2" ry="2"/>
<text x="596" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (56 samples, 0.01%)</title><rect x="244.0" y="1237" width="0.1" height="15.0" fill="rgb(216,197,39)" rx="2" ry="2"/>
<text x="247" y="1247.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field&gt;::construct&lt;Field, Field const&amp;&gt; (71 samples, 0.02%)</title><rect x="660.0" y="1925" width="0.2" height="15.0" fill="rgb(205,27,54)" rx="2" ry="2"/>
<text x="663" y="1935.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (749 samples, 0.17%)</title><rect x="967.1582733812953" y="1845" width="42.44604316546762" height="15.0" fill="rgb(232,167,47)" rx="2" ry="2" _orig_x="565.4" _orig_width="2.0"/>
<text x="970.1582733812953" y="1855.5" _orig_x="568.4">std:..</text>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1861" width="0.8" height="15.0" fill="rgb(247,0,5)" rx="2" ry="2"/>
<text x="57.8" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (234 samples, 0.05%)</title><rect x="457.6" y="1733" width="0.7" height="15.0" fill="rgb(242,205,49)" rx="2" ry="2"/>
<text x="460.6" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (51 samples, 0.01%)</title><rect x="27.0" y="229" width="0.1" height="15.0" fill="rgb(235,186,30)" rx="2" ry="2"/>
<text x="30" y="239.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="16.6" y="1941" width="0.3" height="15.0" fill="rgb(218,204,0)" rx="2" ry="2"/>
<text x="19.6" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.03%)</title><rect x="339.4" y="1909" width="0.3" height="15.0" fill="rgb(220,181,46)" rx="2" ry="2"/>
<text x="342.4" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (329 samples, 0.08%)</title><rect x="27.9" y="2037" width="0.9" height="15.0" fill="rgb(245,220,50)" rx="2" ry="2"/>
<text x="30.9" y="2047.5"/>
</g>
<g class="hide">
<title>start_thread (56 samples, 0.01%)</title><rect x="21.6" y="2037" width="0.2" height="15.0" fill="rgb(206,1,4)" rx="2" ry="2"/>
<text x="24.6" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (243 samples, 0.06%)</title><rect x="244.8" y="1573" width="0.7" height="15.0" fill="rgb(211,113,5)" rx="2" ry="2"/>
<text x="247.8" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="346.9" y="1813" width="0.1" height="15.0" fill="rgb(250,91,4)" rx="2" ry="2"/>
<text x="349.9" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (122 samples, 0.03%)</title><rect x="20.9" y="1749" width="0.3" height="15.0" fill="rgb(228,222,1)" rx="2" ry="2"/>
<text x="23.9" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.04%)</title><rect x="56.4" y="1861" width="0.5" height="15.0" fill="rgb(231,82,24)" rx="2" ry="2"/>
<text x="59.4" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="381.1" y="1989" width="0.6" height="15.0" fill="rgb(247,51,34)" rx="2" ry="2"/>
<text x="384.1" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1253" width="0.2" height="15.0" fill="rgb(207,74,47)" rx="2" ry="2"/>
<text x="30" y="1263.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="33.0" y="1829" width="0.1" height="15.0" fill="rgb(253,137,30)" rx="2" ry="2"/>
<text x="36" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (975 samples, 0.23%)</title><rect x="622.1" y="1877" width="2.7" height="15.0" fill="rgb(252,158,17)" rx="2" ry="2"/>
<text x="625.1" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1189" width="0.8" height="15.0" fill="rgb(227,95,2)" rx="2" ry="2"/>
<text x="57.8" y="1199.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (46 samples, 0.01%)</title><rect x="425.7" y="1781" width="0.2" height="15.0" fill="rgb(207,9,28)" rx="2" ry="2"/>
<text x="428.7" y="1791.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (37 samples, 0.01%)</title><rect x="468.0" y="1717" width="0.1" height="15.0" fill="rgb(240,37,15)" rx="2" ry="2"/>
<text x="471" y="1727.5"/>
</g>
<g class="parent">
<title>all (431,742 samples, 100%)</title><rect x="10" y="2069" width="1180" height="15.0" fill="rgb(227,220,48)" rx="2" ry="2" _orig_x="10.0" _orig_width="1180.0"/>
<text x="13" y="2079.5" _orig_x="13">all </text>
</g>
<g class="hide">
<title>[code] (165 samples, 0.04%)</title><rect x="247.3" y="1733" width="0.5" height="15.0" fill="rgb(234,67,44)" rx="2" ry="2"/>
<text x="250.3" y="1743.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Row&gt; &gt;::construct&lt;Row, Row const&amp;&gt; (500 samples, 0.12%)</title><rect x="645.3" y="1941" width="1.4" height="15.0" fill="rgb(248,36,20)" rx="2" ry="2"/>
<text x="648.3" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (169 samples, 0.04%)</title><rect x="16.1" y="1909" width="0.4" height="15.0" fill="rgb(228,195,46)" rx="2" ry="2"/>
<text x="19.1" y="1919.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (48 samples, 0.01%)</title><rect x="357.7" y="1877" width="0.1" height="15.0" fill="rgb(211,108,23)" rx="2" ry="2"/>
<text x="360.7" y="1887.5"/>
</g>
<g class="hide">
<title>Schema::GetColumnCount (47 samples, 0.01%)</title><rect x="492.9" y="1861" width="0.1" height="15.0" fill="rgb(220,4,42)" rx="2" ry="2"/>
<text x="495.9" y="1871.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (689 samples, 0.16%)</title><rect x="432.4" y="1813" width="1.9" height="15.0" fill="rgb(232,75,51)" rx="2" ry="2"/>
<text x="435.4" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (89 samples, 0.02%)</title><rect x="580.8" y="1813" width="0.2" height="15.0" fill="rgb(252,62,16)" rx="2" ry="2"/>
<text x="583.8" y="1823.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (84 samples, 0.02%)</title><rect x="172.4" y="2021" width="0.3" height="15.0" fill="rgb(224,134,3)" rx="2" ry="2"/>
<text x="175.4" y="2031.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (172 samples, 0.04%)</title><rect x="328.3453237410072" y="1749" width="10.611510791366905" height="15.0" fill="rgb(251,189,5)" rx="2" ry="2" _orig_x="535.3" _orig_width="0.5"/>
<text x="331.3453237410072" y="1759.5" _orig_x="538.3"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (37 samples, 0.01%)</title><rect x="330.467625899281" y="1733" width="2.122302158273381" height="15.0" fill="rgb(208,159,17)" rx="2" ry="2" _orig_x="535.4" _orig_width="0.1"/>
<text x="333.467625899281" y="1743.5" _orig_x="538.4"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (157 samples, 0.04%)</title><rect x="644.3" y="1877" width="0.5" height="15.0" fill="rgb(234,132,15)" rx="2" ry="2"/>
<text x="647.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,341 samples, 0.77%)</title><rect x="1169.6" y="1781" width="9.2" height="15.0" fill="rgb(212,196,39)" rx="2" ry="2"/>
<text x="1172.6" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (2,882 samples, 0.67%)</title><rect x="239.2" y="1717" width="7.9" height="15.0" fill="rgb(233,28,40)" rx="2" ry="2"/>
<text x="242.2" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (3,045 samples, 0.71%)</title><rect x="238.8" y="1781" width="8.3" height="15.0" fill="rgb(206,174,33)" rx="2" ry="2"/>
<text x="241.8" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (269 samples, 0.06%)</title><rect x="449.0" y="1845" width="0.7" height="15.0" fill="rgb(222,221,52)" rx="2" ry="2"/>
<text x="452" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.02%)</title><rect x="46.9" y="1861" width="0.3" height="15.0" fill="rgb(215,147,39)" rx="2" ry="2"/>
<text x="49.9" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (1,139 samples, 0.26%)</title><rect x="361.1" y="2021" width="3.1" height="15.0" fill="rgb(220,141,8)" rx="2" ry="2"/>
<text x="364.1" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (298 samples, 0.07%)</title><rect x="246.1" y="1621" width="0.8" height="15.0" fill="rgb(213,198,31)" rx="2" ry="2"/>
<text x="249.1" y="1631.5"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (284 samples, 0.07%)</title><rect x="355.6" y="2005" width="0.8" height="15.0" fill="rgb(237,43,30)" rx="2" ry="2"/>
<text x="358.6" y="2015.5"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (64 samples, 0.01%)</title><rect x="346.1" y="2021" width="0.2" height="15.0" fill="rgb(212,189,37)" rx="2" ry="2"/>
<text x="349.1" y="2031.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (43 samples, 0.01%)</title><rect x="502.37410071942537" y="1781" width="2.122302158273381" height="15.0" fill="rgb(227,183,49)" rx="2" ry="2" _orig_x="543.5" _orig_width="0.1"/>
<text x="505.37410071942537" y="1791.5" _orig_x="546.5"/>
</g>
<g class="hide">
<title>__strncpy_avx2 (265 samples, 0.06%)</title><rect x="771.3" y="2021" width="0.7" height="15.0" fill="rgb(222,211,17)" rx="2" ry="2"/>
<text x="774.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,033 samples, 4.18%)</title><rect x="1129.5" y="1893" width="49.3" height="15.0" fill="rgb(215,130,8)" rx="2" ry="2"/>
<text x="1132.5" y="1903.5">[[ker..</text>
</g>
<g class="hide">
<title>snd_pcm_status_get_avail (60 samples, 0.01%)</title><rect x="186.0" y="2021" width="0.1" height="15.0" fill="rgb(246,149,36)" rx="2" ry="2"/>
<text x="189" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="1183.5" y="2021" width="0.2" height="15.0" fill="rgb(217,90,18)" rx="2" ry="2"/>
<text x="1186.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (99 samples, 0.02%)</title><rect x="431.0" y="1813" width="0.3" height="15.0" fill="rgb(238,75,31)" rx="2" ry="2"/>
<text x="434" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49,168 samples, 11.39%)</title><rect x="993.5" y="1909" width="134.3" height="15.0" fill="rgb(216,156,51)" rx="2" ry="2"/>
<text x="996.5" y="1919.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>JVM_Sleep (97 samples, 0.02%)</title><rect x="24.0" y="2005" width="0.3" height="15.0" fill="rgb(226,166,25)" rx="2" ry="2"/>
<text x="27" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="392.0" y="1909" width="0.1" height="15.0" fill="rgb(229,46,38)" rx="2" ry="2"/>
<text x="395" y="1919.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1237" width="0.6" height="15.0" fill="rgb(237,105,17)" rx="2" ry="2"/>
<text x="246.3" y="1247.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="347.5" y="2005" width="0.1" height="15.0" fill="rgb(246,137,16)" rx="2" ry="2"/>
<text x="350.5" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1157" width="0.2" height="15.0" fill="rgb(236,9,0)" rx="2" ry="2"/>
<text x="247.2" y="1167.5"/>
</g>
<g class="hide">
<title>snd_pcm_stream_lock_irq (41 samples, 0.01%)</title><rect x="115.4" y="1909" width="0.1" height="15.0" fill="rgb(209,227,30)" rx="2" ry="2"/>
<text x="118.4" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="27.3" y="1973" width="0.1" height="15.0" fill="rgb(219,13,54)" rx="2" ry="2"/>
<text x="30.3" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (201 samples, 0.05%)</title><rect x="344.6" y="2037" width="0.5" height="15.0" fill="rgb(253,24,45)" rx="2" ry="2"/>
<text x="347.6" y="2047.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (47 samples, 0.01%)</title><rect x="500.6" y="1797" width="0.1" height="15.0" fill="rgb(241,226,24)" rx="2" ry="2"/>
<text x="503.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="50.1" y="1989" width="0.1" height="15.0" fill="rgb(243,120,41)" rx="2" ry="2"/>
<text x="53.1" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (38 samples, 0.01%)</title><rect x="203.12949640287815" y="1733" width="2.122302158273381" height="15.0" fill="rgb(241,189,7)" rx="2" ry="2" _orig_x="529.4" _orig_width="0.1"/>
<text x="206.12949640287815" y="1743.5" _orig_x="532.4"/>
</g>
<g class="hide">
<title>pa_msgobject_check_type (47 samples, 0.01%)</title><rect x="181.9" y="2021" width="0.1" height="15.0" fill="rgb(213,107,29)" rx="2" ry="2"/>
<text x="184.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (70 samples, 0.02%)</title><rect x="621.6" y="1877" width="0.2" height="15.0" fill="rgb(253,141,39)" rx="2" ry="2"/>
<text x="624.6" y="1887.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (63 samples, 0.01%)</title><rect x="591.7" y="1877" width="0.1" height="15.0" fill="rgb(244,131,52)" rx="2" ry="2"/>
<text x="594.7" y="1887.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (65 samples, 0.02%)</title><rect x="559.6762589928077" y="1845" width="2.122302158273381" height="15.0" fill="rgb(251,160,35)" rx="2" ry="2" _orig_x="546.2" _orig_width="0.1"/>
<text x="562.6762589928077" y="1855.5" _orig_x="549.2"/>
</g>
<g class="hide">
<title>[code] (246 samples, 0.06%)</title><rect x="20.7" y="1941" width="0.6" height="15.0" fill="rgb(241,169,41)" rx="2" ry="2"/>
<text x="23.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,008 samples, 0.23%)</title><rect x="395.4" y="2005" width="2.7" height="15.0" fill="rgb(210,101,50)" rx="2" ry="2"/>
<text x="398.4" y="2015.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (47 samples, 0.01%)</title><rect x="681.6" y="1973" width="0.1" height="15.0" fill="rgb(226,101,33)" rx="2" ry="2"/>
<text x="684.6" y="1983.5"/>
</g>
<g class="hide">
<title>mt_touch_report.isra.0 (48 samples, 0.01%)</title><rect x="380.1" y="1909" width="0.2" height="15.0" fill="rgb(233,120,54)" rx="2" ry="2"/>
<text x="383.1" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="364.6" y="1797" width="0.1" height="15.0" fill="rgb(251,61,50)" rx="2" ry="2"/>
<text x="367.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="1941" width="0.2" height="15.0" fill="rgb(223,2,30)" rx="2" ry="2"/>
<text x="240.9" y="1951.5"/>
</g>
<g class="hide">
<title>ntfs_mst_pre_write_fixup (57 samples, 0.01%)</title><rect x="779.9" y="2021" width="0.1" height="15.0" fill="rgb(233,149,53)" rx="2" ry="2"/>
<text x="782.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (187 samples, 0.04%)</title><rect x="648.2" y="1813" width="0.5" height="15.0" fill="rgb(236,216,38)" rx="2" ry="2"/>
<text x="651.2" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="885" width="0.1" height="15.0" fill="rgb(215,152,0)" rx="2" ry="2"/>
<text x="247" y="895.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (808 samples, 0.19%)</title><rect x="583.7" y="1797" width="2.2" height="15.0" fill="rgb(234,184,10)" rx="2" ry="2"/>
<text x="586.7" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1189" width="0.2" height="15.0" fill="rgb(239,221,42)" rx="2" ry="2"/>
<text x="30" y="1199.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (79 samples, 0.02%)</title><rect x="587.2" y="1765" width="0.2" height="15.0" fill="rgb(209,30,4)" rx="2" ry="2"/>
<text x="590.2" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="245.1" y="1237" width="0.2" height="15.0" fill="rgb(212,138,16)" rx="2" ry="2"/>
<text x="248.1" y="1247.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1253" width="0.8" height="15.0" fill="rgb(221,70,38)" rx="2" ry="2"/>
<text x="57.8" y="1263.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (79 samples, 0.02%)</title><rect x="510.4" y="1893" width="0.2" height="15.0" fill="rgb(252,147,40)" rx="2" ry="2"/>
<text x="513.4" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,010 samples, 1.86%)</title><rect x="710.9" y="1909" width="21.9" height="15.0" fill="rgb(214,67,3)" rx="2" ry="2"/>
<text x="713.9" y="1919.5">[..</text>
</g>
<g class="hide">
<title>__libc_sendmsg (94 samples, 0.02%)</title><rect x="342.6" y="2005" width="0.2" height="15.0" fill="rgb(224,21,41)" rx="2" ry="2"/>
<text x="345.6" y="2015.5"/>
</g>
<g class="hide">
<title>Field::DeserializeFrom (3,807 samples, 0.88%)</title><rect x="602.3" y="1877" width="10.4" height="15.0" fill="rgb(205,99,36)" rx="2" ry="2"/>
<text x="605.3" y="1887.5"/>
</g>
<g class="hide">
<title>start_thread (277 samples, 0.06%)</title><rect x="20.6" y="2037" width="0.8" height="15.0" fill="rgb(254,217,53)" rx="2" ry="2"/>
<text x="23.6" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,398 samples, 1.48%)</title><rect x="715.4" y="1845" width="17.4" height="15.0" fill="rgb(231,167,4)" rx="2" ry="2"/>
<text x="718.4" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (194 samples, 0.04%)</title><rect x="386.9" y="1957" width="0.5" height="15.0" fill="rgb(252,61,44)" rx="2" ry="2"/>
<text x="389.9" y="1967.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (41 samples, 0.01%)</title><rect x="508.9" y="1797" width="0.1" height="15.0" fill="rgb(244,201,22)" rx="2" ry="2"/>
<text x="511.9" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (43 samples, 0.01%)</title><rect x="26.2" y="2021" width="0.1" height="15.0" fill="rgb(220,135,9)" rx="2" ry="2"/>
<text x="29.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17,078 samples, 3.96%)</title><rect x="1132.1" y="1877" width="46.7" height="15.0" fill="rgb(245,17,48)" rx="2" ry="2"/>
<text x="1135.1" y="1887.5">[[ke..</text>
</g>
<g class="hide">
<title>run_builtin (893 samples, 0.21%)</title><rect x="792.9" y="2005" width="2.4" height="15.0" fill="rgb(207,146,11)" rx="2" ry="2"/>
<text x="795.9" y="2015.5"/>
</g>
<g class="hide">
<title>thread_native_entry (43 samples, 0.01%)</title><rect x="22.4" y="2021" width="0.2" height="15.0" fill="rgb(227,135,22)" rx="2" ry="2"/>
<text x="25.4" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1861" width="0.2" height="15.0" fill="rgb(250,154,8)" rx="2" ry="2"/>
<text x="30" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (277 samples, 0.06%)</title><rect x="346.4" y="2005" width="0.8" height="15.0" fill="rgb(230,171,45)" rx="2" ry="2"/>
<text x="349.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,102 samples, 0.26%)</title><rect x="424.5" y="1813" width="3.0" height="15.0" fill="rgb(247,80,38)" rx="2" ry="2"/>
<text x="427.5" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="370.7" y="1973" width="0.1" height="15.0" fill="rgb(223,125,5)" rx="2" ry="2"/>
<text x="373.7" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (200 samples, 0.05%)</title><rect x="56.3" y="1957" width="0.6" height="15.0" fill="rgb(221,173,52)" rx="2" ry="2"/>
<text x="59.3" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,487 samples, 0.34%)</title><rect x="314.5" y="1861" width="4.1" height="15.0" fill="rgb(210,77,40)" rx="2" ry="2"/>
<text x="317.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (421 samples, 0.10%)</title><rect x="420.1" y="1733" width="1.2" height="15.0" fill="rgb(249,164,17)" rx="2" ry="2"/>
<text x="423.1" y="1743.5"/>
</g>
<g class="hide">
<title>__memcmp_avx2_movbe (43 samples, 0.01%)</title><rect x="265.2" y="1925" width="0.1" height="15.0" fill="rgb(235,16,44)" rx="2" ry="2"/>
<text x="268.2" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="789" width="0.8" height="15.0" fill="rgb(205,97,36)" rx="2" ry="2"/>
<text x="57.8" y="799.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="391.8" y="1813" width="0.2" height="15.0" fill="rgb(238,83,50)" rx="2" ry="2"/>
<text x="394.8" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176 samples, 0.04%)</title><rect x="47.8" y="1909" width="0.5" height="15.0" fill="rgb(242,74,45)" rx="2" ry="2"/>
<text x="50.8" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1157" width="0.2" height="15.0" fill="rgb(240,84,6)" rx="2" ry="2"/>
<text x="30" y="1167.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,764 samples, 0.64%)</title><rect x="311.1" y="1941" width="7.5" height="15.0" fill="rgb(224,95,5)" rx="2" ry="2"/>
<text x="314.1" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="244.2" y="805" width="0.2" height="15.0" fill="rgb(221,128,27)" rx="2" ry="2"/>
<text x="247.2" y="815.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="49.3" y="1941" width="0.2" height="15.0" fill="rgb(227,176,54)" rx="2" ry="2"/>
<text x="52.3" y="1951.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (37 samples, 0.01%)</title><rect x="74.5" y="1973" width="0.1" height="15.0" fill="rgb(251,101,45)" rx="2" ry="2"/>
<text x="77.5" y="1983.5"/>
</g>
<g class="hide">
<title>pa_thread_mq_get (84 samples, 0.02%)</title><rect x="201.1" y="2037" width="0.2" height="15.0" fill="rgb(242,222,46)" rx="2" ry="2"/>
<text x="204.1" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (207 samples, 0.05%)</title><rect x="54.8" y="165" width="0.6" height="15.0" fill="rgb(205,100,27)" rx="2" ry="2"/>
<text x="57.8" y="175.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (383 samples, 0.09%)</title><rect x="265.5" y="1925" width="1.1" height="15.0" fill="rgb(206,17,31)" rx="2" ry="2"/>
<text x="268.5" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="341" width="0.8" height="15.0" fill="rgb(225,76,6)" rx="2" ry="2"/>
<text x="57.8" y="351.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Row, std::allocator&lt;Row&gt; &gt;::~vector (107 samples, 0.02%)</title><rect x="661.4" y="1973" width="0.3" height="15.0" fill="rgb(219,86,14)" rx="2" ry="2"/>
<text x="664.4" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="853" width="0.8" height="15.0" fill="rgb(225,113,25)" rx="2" ry="2"/>
<text x="57.8" y="863.5"/>
</g>
<g class="hide">
<title>[code] (45 samples, 0.01%)</title><rect x="16.2" y="1765" width="0.1" height="15.0" fill="rgb(245,35,46)" rx="2" ry="2"/>
<text x="19.2" y="1775.5"/>
</g>
<g class="hide">
<title>snd_mixer_poll_descriptors_revents (72 samples, 0.02%)</title><rect x="74.6" y="1989" width="0.2" height="15.0" fill="rgb(210,211,2)" rx="2" ry="2"/>
<text x="77.6" y="1999.5"/>
</g>
<g class="parent">
<title>ExecuteEngine::ExecuteDelete (91,775 samples, 21.26%)</title><rect x="10" y="1989" width="1180" height="15.0" fill="rgb(207,72,50)" rx="2" ry="2" _orig_x="410.8" _orig_width="250.9"/>
<text x="13" y="1999.5" _orig_x="413.8">ExecuteEngine::ExecuteDelete </text>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (37 samples, 0.01%)</title><rect x="468.6" y="1701" width="0.1" height="15.0" fill="rgb(229,222,37)" rx="2" ry="2"/>
<text x="471.6" y="1711.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (58 samples, 0.01%)</title><rect x="578.7" y="1829" width="0.1" height="15.0" fill="rgb(251,51,22)" rx="2" ry="2"/>
<text x="581.7" y="1839.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (1,025 samples, 0.24%)</title><rect x="605.5" y="1845" width="2.8" height="15.0" fill="rgb(216,205,50)" rx="2" ry="2"/>
<text x="608.5" y="1855.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (46 samples, 0.01%)</title><rect x="21.8" y="1989" width="0.1" height="15.0" fill="rgb(254,43,46)" rx="2" ry="2"/>
<text x="24.8" y="1999.5"/>
</g>
<g class="hide">
<title>__GI___writev (9,082 samples, 2.10%)</title><rect x="708.0" y="2005" width="24.8" height="15.0" fill="rgb(221,93,4)" rx="2" ry="2"/>
<text x="711" y="2015.5"/>
</g>
<g class="hide">
<title>snd_ctl_ioctl (3,277 samples, 0.76%)</title><rect x="124.6" y="1957" width="9.0" height="15.0" fill="rgb(206,148,7)" rx="2" ry="2"/>
<text x="127.6" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="12.7" y="1909" width="0.2" height="15.0" fill="rgb(208,115,52)" rx="2" ry="2"/>
<text x="15.7" y="1919.5"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (78 samples, 0.02%)</title><rect x="270.3" y="1941" width="0.2" height="15.0" fill="rgb(228,29,35)" rx="2" ry="2"/>
<text x="273.3" y="1951.5"/>
</g>
<g class="hide">
<title>kworker/10:3-ev (257 samples, 0.06%)</title><rect x="382.7" y="2053" width="0.7" height="15.0" fill="rgb(250,118,43)" rx="2" ry="2"/>
<text x="385.7" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="793.1" y="1957" width="0.1" height="15.0" fill="rgb(243,180,20)" rx="2" ry="2"/>
<text x="796.1" y="1967.5"/>
</g>
<g class="hide">
<title>snd_ctl_poll (173 samples, 0.04%)</title><rect x="115.7" y="1941" width="0.5" height="15.0" fill="rgb(224,74,41)" rx="2" ry="2"/>
<text x="118.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,645 samples, 0.61%)</title><rect x="311.4" y="1909" width="7.2" height="15.0" fill="rgb(244,51,16)" rx="2" ry="2"/>
<text x="314.4" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1077" width="0.2" height="15.0" fill="rgb(209,25,42)" rx="2" ry="2"/>
<text x="247.2" y="1087.5"/>
</g>
<g class="hide">
<title>Row::~Row (126 samples, 0.03%)</title><rect x="642.5" y="1941" width="0.3" height="15.0" fill="rgb(250,22,32)" rx="2" ry="2"/>
<text x="645.5" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (42 samples, 0.01%)</title><rect x="244.0" y="741" width="0.1" height="15.0" fill="rgb(210,215,39)" rx="2" ry="2"/>
<text x="247" y="751.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (71 samples, 0.02%)</title><rect x="517.8" y="1829" width="0.2" height="15.0" fill="rgb(232,91,53)" rx="2" ry="2"/>
<text x="520.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (200 samples, 0.05%)</title><rect x="515.3" y="1749" width="0.5" height="15.0" fill="rgb(225,172,20)" rx="2" ry="2"/>
<text x="518.3" y="1759.5"/>
</g>
<g class="hide">
<title>pa_frame_size (104 samples, 0.02%)</title><rect x="192.0" y="2037" width="0.2" height="15.0" fill="rgb(214,56,45)" rx="2" ry="2"/>
<text x="195" y="2047.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (88 samples, 0.02%)</title><rect x="918.3453237410085" y="1829" width="6.366906474820143" height="15.0" fill="rgb(253,145,50)" rx="2" ry="2" _orig_x="563.1" _orig_width="0.3"/>
<text x="921.3453237410085" y="1839.5" _orig_x="566.1"/>
</g>
<g class="hide">
<title>[code] (121 samples, 0.03%)</title><rect x="305.1" y="1925" width="0.4" height="15.0" fill="rgb(253,29,42)" rx="2" ry="2"/>
<text x="308.1" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (111 samples, 0.03%)</title><rect x="267.9" y="1941" width="0.3" height="15.0" fill="rgb(240,189,0)" rx="2" ry="2"/>
<text x="270.9" y="1951.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (57 samples, 0.01%)</title><rect x="633.1" y="1765" width="0.2" height="15.0" fill="rgb(238,73,8)" rx="2" ry="2"/>
<text x="636.1" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="28.4" y="1973" width="0.2" height="15.0" fill="rgb(251,185,54)" rx="2" ry="2"/>
<text x="31.4" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (317 samples, 0.07%)</title><rect x="650.1" y="1893" width="0.8" height="15.0" fill="rgb(243,29,46)" rx="2" ry="2"/>
<text x="653.1" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (293 samples, 0.07%)</title><rect x="516.5" y="1861" width="0.8" height="15.0" fill="rgb(237,78,22)" rx="2" ry="2"/>
<text x="519.5" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,410 samples, 1.72%)</title><rect x="745.2" y="1861" width="20.3" height="15.0" fill="rgb(241,43,31)" rx="2" ry="2"/>
<text x="748.2" y="1871.5">[..</text>
</g>
<g class="hide">
<title>std::equal_to&lt;int&gt;::operator (80 samples, 0.02%)</title><rect x="517.0" y="1797" width="0.3" height="15.0" fill="rgb(249,50,17)" rx="2" ry="2"/>
<text x="520" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="47.8" y="1957" width="0.5" height="15.0" fill="rgb(227,72,1)" rx="2" ry="2"/>
<text x="50.8" y="1967.5"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (125 samples, 0.03%)</title><rect x="759.172661870505" y="1797" width="6.366906474820143" height="15.0" fill="rgb(253,164,16)" rx="2" ry="2" _orig_x="555.6" _orig_width="0.3"/>
<text x="762.172661870505" y="1807.5" _orig_x="558.6"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (38 samples, 0.01%)</title><rect x="627.2" y="1893" width="0.1" height="15.0" fill="rgb(219,52,0)" rx="2" ry="2"/>
<text x="630.2" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.03%)</title><rect x="26.4" y="1957" width="0.3" height="15.0" fill="rgb(221,86,47)" rx="2" ry="2"/>
<text x="29.4" y="1967.5"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (179 samples, 0.04%)</title><rect x="340.9" y="2005" width="0.5" height="15.0" fill="rgb(213,179,33)" rx="2" ry="2"/>
<text x="343.9" y="2015.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (68 samples, 0.02%)</title><rect x="21.9" y="1989" width="0.2" height="15.0" fill="rgb(236,1,19)" rx="2" ry="2"/>
<text x="24.9" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (85 samples, 0.02%)</title><rect x="590.2" y="1829" width="0.2" height="15.0" fill="rgb(253,219,25)" rx="2" ry="2"/>
<text x="593.2" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="51.9" y="1957" width="0.2" height="15.0" fill="rgb(233,39,21)" rx="2" ry="2"/>
<text x="54.9" y="1967.5"/>
</g>
<g class="hide">
<title>pa_channel_map_equal (78 samples, 0.02%)</title><rect x="190.1" y="2037" width="0.2" height="15.0" fill="rgb(221,104,48)" rx="2" ry="2"/>
<text x="193.1" y="2047.5"/>
</g>
<g class="hide">
<title>vpnui (55 samples, 0.01%)</title><rect x="1189.1" y="2053" width="0.2" height="15.0" fill="rgb(217,50,52)" rx="2" ry="2"/>
<text x="1192.1" y="2063.5"/>
</g>
<g class="hide">
<title>[[vdso]] (73 samples, 0.02%)</title><rect x="56.9" y="2021" width="0.2" height="15.0" fill="rgb(205,62,52)" rx="2" ry="2"/>
<text x="59.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (2,241 samples, 0.52%)</title><rect x="500.2" y="1829" width="6.1" height="15.0" fill="rgb(248,103,30)" rx="2" ry="2"/>
<text x="503.2" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (899 samples, 0.21%)</title><rect x="602.8" y="1813" width="2.5" height="15.0" fill="rgb(252,98,44)" rx="2" ry="2"/>
<text x="605.8" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.02%)</title><rect x="515.6" y="1685" width="0.2" height="15.0" fill="rgb(239,13,2)" rx="2" ry="2"/>
<text x="518.6" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (177 samples, 0.04%)</title><rect x="14.7" y="1765" width="0.5" height="15.0" fill="rgb(230,117,39)" rx="2" ry="2"/>
<text x="17.7" y="1775.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (45 samples, 0.01%)</title><rect x="332.5899280575549" y="1733" width="2.122302158273381" height="15.0" fill="rgb(219,207,23)" rx="2" ry="2" _orig_x="535.5" _orig_width="0.1"/>
<text x="335.5899280575549" y="1743.5" _orig_x="538.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.04%)</title><rect x="206.2" y="1925" width="0.5" height="15.0" fill="rgb(216,221,31)" rx="2" ry="2"/>
<text x="209.2" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (40 samples, 0.01%)</title><rect x="517.9" y="1813" width="0.1" height="15.0" fill="rgb(250,194,51)" rx="2" ry="2"/>
<text x="520.9" y="1823.5"/>
</g>
<g class="hide">
<title>thread_native_entry (48 samples, 0.01%)</title><rect x="22.3" y="2021" width="0.1" height="15.0" fill="rgb(235,157,33)" rx="2" ry="2"/>
<text x="25.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="381.4" y="1877" width="0.3" height="15.0" fill="rgb(229,59,19)" rx="2" ry="2"/>
<text x="384.4" y="1887.5"/>
</g>
<g class="hide">
<title>Java_sun_awt_image_GifImageDecoder_parseImage (398 samples, 0.09%)</title><rect x="25.0" y="1989" width="1.1" height="15.0" fill="rgb(218,98,10)" rx="2" ry="2"/>
<text x="28" y="1999.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (168 samples, 0.04%)</title><rect x="450.5" y="1893" width="0.5" height="15.0" fill="rgb(245,35,45)" rx="2" ry="2"/>
<text x="453.5" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="244.0" y="821" width="0.1" height="15.0" fill="rgb(253,89,47)" rx="2" ry="2"/>
<text x="247" y="831.5"/>
</g>
<g class="hide">
<title>[code] (109 samples, 0.03%)</title><rect x="243.0" y="869" width="0.3" height="15.0" fill="rgb(217,156,32)" rx="2" ry="2"/>
<text x="246" y="879.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (180 samples, 0.04%)</title><rect x="356.8" y="2037" width="0.5" height="15.0" fill="rgb(210,184,16)" rx="2" ry="2"/>
<text x="359.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="380.7" y="1925" width="0.2" height="15.0" fill="rgb(225,24,31)" rx="2" ry="2"/>
<text x="383.7" y="1935.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (66 samples, 0.02%)</title><rect x="1179.3884892086335" y="1877" width="4.244604316546762" height="15.0" fill="rgb(225,86,32)" rx="2" ry="2" _orig_x="575.4" _orig_width="0.2"/>
<text x="1182.3884892086335" y="1887.5" _orig_x="578.4"/>
</g>
<g class="hide">
<title>Watcher::notify (237 samples, 0.05%)</title><rect x="308.2" y="1973" width="0.6" height="15.0" fill="rgb(239,28,48)" rx="2" ry="2"/>
<text x="311.2" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="342.5" y="1989" width="0.1" height="15.0" fill="rgb(212,137,19)" rx="2" ry="2"/>
<text x="345.5" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (56 samples, 0.01%)</title><rect x="435.1" y="1813" width="0.2" height="15.0" fill="rgb(224,74,41)" rx="2" ry="2"/>
<text x="438.1" y="1823.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,173 samples, 0.27%)</title><rect x="86.4028776978422" y="1781" width="67.91366906474819" height="15.0" fill="rgb(254,139,25)" rx="2" ry="2" _orig_x="523.9" _orig_width="3.2"/>
<text x="89.4028776978422" y="1791.5" _orig_x="526.9">std::_H..</text>
</g>
<g class="hide">
<title>[[vdso]] (462 samples, 0.11%)</title><rect x="188.2" y="2021" width="1.3" height="15.0" fill="rgb(210,110,19)" rx="2" ry="2"/>
<text x="191.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="342.5" y="1925" width="0.1" height="15.0" fill="rgb(252,183,20)" rx="2" ry="2"/>
<text x="345.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,192 samples, 0.51%)</title><rect x="327.7" y="1877" width="6.0" height="15.0" fill="rgb(211,89,4)" rx="2" ry="2"/>
<text x="330.7" y="1887.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field**, Field*&gt; (82 samples, 0.02%)</title><rect x="634.8" y="1877" width="0.3" height="15.0" fill="rgb(208,73,49)" rx="2" ry="2"/>
<text x="637.8" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (191 samples, 0.04%)</title><rect x="56.3" y="1925" width="0.6" height="15.0" fill="rgb(208,126,8)" rx="2" ry="2"/>
<text x="59.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,371 samples, 0.32%)</title><rect x="441.8" y="1749" width="3.7" height="15.0" fill="rgb(251,148,12)" rx="2" ry="2"/>
<text x="444.8" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (869 samples, 0.20%)</title><rect x="24.3" y="2037" width="2.4" height="15.0" fill="rgb(218,27,19)" rx="2" ry="2"/>
<text x="27.3" y="2047.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (783 samples, 0.18%)</title><rect x="187.8" y="2037" width="2.2" height="15.0" fill="rgb(231,185,34)" rx="2" ry="2"/>
<text x="190.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (672 samples, 0.16%)</title><rect x="1186.5" y="1973" width="1.9" height="15.0" fill="rgb(250,199,29)" rx="2" ry="2"/>
<text x="1189.5" y="1983.5"/>
</g>
<g class="hide">
<title>Field::CompareLessThan (47 samples, 0.01%)</title><rect x="518.1" y="1909" width="0.2" height="15.0" fill="rgb(246,219,40)" rx="2" ry="2"/>
<text x="521.1" y="1919.5"/>
</g>
<g class="hide">
<title>[[vdso]] (55 samples, 0.01%)</title><rect x="787.9" y="2021" width="0.1" height="15.0" fill="rgb(225,73,10)" rx="2" ry="2"/>
<text x="790.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (44 samples, 0.01%)</title><rect x="637.6" y="1797" width="0.2" height="15.0" fill="rgb(253,215,0)" rx="2" ry="2"/>
<text x="640.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="383.2" y="1909" width="0.2" height="15.0" fill="rgb(248,81,32)" rx="2" ry="2"/>
<text x="386.2" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19,338 samples, 4.48%)</title><rect x="119.3" y="1989" width="52.8" height="15.0" fill="rgb(237,182,33)" rx="2" ry="2"/>
<text x="122.3" y="1999.5">[[kern..</text>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="1973" width="0.4" height="15.0" fill="rgb(218,221,25)" rx="2" ry="2"/>
<text x="19.1" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="386.4" y="1909" width="0.2" height="15.0" fill="rgb(227,37,26)" rx="2" ry="2"/>
<text x="389.4" y="1919.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (110 samples, 0.03%)</title><rect x="624.4" y="1845" width="0.3" height="15.0" fill="rgb(206,110,54)" rx="2" ry="2"/>
<text x="627.4" y="1855.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (246 samples, 0.06%)</title><rect x="326.2230215827357" y="1765" width="14.856115107913666" height="15.0" fill="rgb(218,39,25)" rx="2" ry="2" _orig_x="535.2" _orig_width="0.7"/>
<text x="329.2230215827357" y="1775.5" _orig_x="538.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="364.5" y="1893" width="0.2" height="15.0" fill="rgb(218,5,8)" rx="2" ry="2"/>
<text x="367.5" y="1903.5"/>
</g>
<g class="">
<title>SimpleMemHeap::Allocate (1,301 samples, 0.30%)</title><rect x="82.15827338129688" y="1829" width="76.40287769784172" height="15.0" fill="rgb(221,124,3)" rx="2" ry="2" _orig_x="523.7" _orig_width="3.6"/>
<text x="85.15827338129688" y="1839.5" _orig_x="526.7">SimpleM..</text>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (258 samples, 0.06%)</title><rect x="578.3" y="1861" width="0.7" height="15.0" fill="rgb(253,129,41)" rx="2" ry="2"/>
<text x="581.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (372 samples, 0.09%)</title><rect x="444.5" y="1589" width="1.0" height="15.0" fill="rgb(247,28,18)" rx="2" ry="2"/>
<text x="447.5" y="1599.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (44 samples, 0.01%)</title><rect x="433.7" y="1717" width="0.2" height="15.0" fill="rgb(254,61,15)" rx="2" ry="2"/>
<text x="436.7" y="1727.5"/>
</g>
<g class="hide">
<title>pa_resampler_request (98 samples, 0.02%)</title><rect x="196.3" y="2037" width="0.3" height="15.0" fill="rgb(226,90,21)" rx="2" ry="2"/>
<text x="199.3" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,923 samples, 0.91%)</title><rect x="400.0" y="1941" width="10.8" height="15.0" fill="rgb(246,35,49)" rx="2" ry="2"/>
<text x="403" y="1951.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (204 samples, 0.05%)</title><rect x="478.6" y="1797" width="0.6" height="15.0" fill="rgb(205,185,0)" rx="2" ry="2"/>
<text x="481.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (652 samples, 0.15%)</title><rect x="664.1" y="2005" width="1.8" height="15.0" fill="rgb(212,18,19)" rx="2" ry="2"/>
<text x="667.1" y="2015.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (37 samples, 0.01%)</title><rect x="897.1223021582747" y="1829" width="2.122302158273381" height="15.0" fill="rgb(222,225,20)" rx="2" ry="2" _orig_x="562.1" _orig_width="0.1"/>
<text x="900.1223021582747" y="1839.5" _orig_x="565.1"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (114 samples, 0.03%)</title><rect x="643.8" y="1845" width="0.3" height="15.0" fill="rgb(218,212,49)" rx="2" ry="2"/>
<text x="646.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (108 samples, 0.03%)</title><rect x="637.6" y="1845" width="0.2" height="15.0" fill="rgb(225,86,53)" rx="2" ry="2"/>
<text x="640.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (291 samples, 0.07%)</title><rect x="386.6" y="2037" width="0.8" height="15.0" fill="rgb(229,159,8)" rx="2" ry="2"/>
<text x="389.6" y="2047.5"/>
</g>
<g class="hide">
<title>MemHeap::~MemHeap (37 samples, 0.01%)</title><rect x="579.5" y="1861" width="0.1" height="15.0" fill="rgb(232,20,27)" rx="2" ry="2"/>
<text x="582.5" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,618 samples, 1.53%)</title><rect x="1109.2" y="1749" width="18.1" height="15.0" fill="rgb(249,219,48)" rx="2" ry="2"/>
<text x="1112.2" y="1759.5"/>
</g>
<g class="">
<title>__memset_avx2_unaligned (46 samples, 0.01%)</title><rect x="1037.1942446043183" y="1749" width="4.244604316546762" height="15.0" fill="rgb(224,121,19)" rx="2" ry="2" _orig_x="568.7" _orig_width="0.2"/>
<text x="1040.1942446043183" y="1759.5" _orig_x="571.7"/>
</g>
<g class="hide">
<title>IndexInfo::GetIndexKeySchema (62 samples, 0.01%)</title><rect x="648.8" y="1973" width="0.2" height="15.0" fill="rgb(225,106,49)" rx="2" ry="2"/>
<text x="651.8" y="1983.5"/>
</g>
<g class="hide">
<title>IPC_I/O_Child (112 samples, 0.03%)</title><rect x="23.1" y="2053" width="0.3" height="15.0" fill="rgb(205,108,13)" rx="2" ry="2"/>
<text x="26.1" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.02%)</title><rect x="798.3" y="1893" width="0.2" height="15.0" fill="rgb(253,31,53)" rx="2" ry="2"/>
<text x="801.3" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="14.9" y="1685" width="0.1" height="15.0" fill="rgb(205,114,6)" rx="2" ry="2"/>
<text x="17.9" y="1695.5"/>
</g>
<g class="hide">
<title>thread_native_entry (38 samples, 0.01%)</title><rect x="22.7" y="2021" width="0.1" height="15.0" fill="rgb(207,25,25)" rx="2" ry="2"/>
<text x="25.7" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (316 samples, 0.07%)</title><rect x="19.4" y="1701" width="0.9" height="15.0" fill="rgb(208,146,16)" rx="2" ry="2"/>
<text x="22.4" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (636 samples, 0.15%)</title><rect x="664.2" y="1989" width="1.7" height="15.0" fill="rgb(251,194,44)" rx="2" ry="2"/>
<text x="667.2" y="1999.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::IsLeafPage (37 samples, 0.01%)</title><rect x="513.9" y="1909" width="0.1" height="15.0" fill="rgb(253,193,10)" rx="2" ry="2"/>
<text x="516.9" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="55.8" y="1861" width="0.1" height="15.0" fill="rgb(226,217,31)" rx="2" ry="2"/>
<text x="58.8" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (73 samples, 0.02%)</title><rect x="247.5" y="1589" width="0.2" height="15.0" fill="rgb(234,80,10)" rx="2" ry="2"/>
<text x="250.5" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="15.4" y="1701" width="0.2" height="15.0" fill="rgb(220,73,0)" rx="2" ry="2"/>
<text x="18.4" y="1711.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (267 samples, 0.06%)</title><rect x="645.4" y="1893" width="0.8" height="15.0" fill="rgb(205,46,17)" rx="2" ry="2"/>
<text x="648.4" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,038 samples, 2.32%)</title><rect x="88.9" y="1973" width="27.5" height="15.0" fill="rgb(213,105,47)" rx="2" ry="2"/>
<text x="91.9" y="1983.5">[[..</text>
</g>
<g class="hide">
<title>[code] (2,925 samples, 0.68%)</title><rect x="239.1" y="1733" width="8.0" height="15.0" fill="rgb(242,88,29)" rx="2" ry="2"/>
<text x="242.1" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (243 samples, 0.06%)</title><rect x="796.5" y="1989" width="0.7" height="15.0" fill="rgb(236,49,15)" rx="2" ry="2"/>
<text x="799.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="392.0" y="2037" width="0.2" height="15.0" fill="rgb(221,130,7)" rx="2" ry="2"/>
<text x="395" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="388.8" y="1925" width="0.2" height="15.0" fill="rgb(208,128,15)" rx="2" ry="2"/>
<text x="391.8" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="245.3" y="1349" width="0.1" height="15.0" fill="rgb(223,142,43)" rx="2" ry="2"/>
<text x="248.3" y="1359.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (1,855 samples, 0.43%)</title><rect x="628.9" y="1877" width="5.1" height="15.0" fill="rgb(233,136,38)" rx="2" ry="2"/>
<text x="631.9" y="1887.5"/>
</g>
<g class="hide">
<title>ntfs_names_full_collate (67 samples, 0.02%)</title><rect x="780.0" y="2021" width="0.2" height="15.0" fill="rgb(253,129,28)" rx="2" ry="2"/>
<text x="783" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.03%)</title><rect x="391.4" y="2005" width="0.4" height="15.0" fill="rgb(221,89,51)" rx="2" ry="2"/>
<text x="394.4" y="2015.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (37 samples, 0.01%)</title><rect x="616.0" y="1845" width="0.1" height="15.0" fill="rgb(243,68,50)" rx="2" ry="2"/>
<text x="619" y="1855.5"/>
</g>
<g class="hide">
<title>wpa_supplicant (180 samples, 0.04%)</title><rect x="1189.4" y="2053" width="0.5" height="15.0" fill="rgb(230,50,21)" rx="2" ry="2"/>
<text x="1192.4" y="2063.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_S_max_size (42 samples, 0.01%)</title><rect x="660.3" y="1909" width="0.2" height="15.0" fill="rgb(252,118,1)" rx="2" ry="2"/>
<text x="663.3" y="1919.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (92 samples, 0.02%)</title><rect x="613.6" y="1877" width="0.2" height="15.0" fill="rgb(237,140,12)" rx="2" ry="2"/>
<text x="616.6" y="1887.5"/>
</g>
<g class="hide">
<title>pa_bytes_to_usec_round_up (87 samples, 0.02%)</title><rect x="78.4" y="2005" width="0.2" height="15.0" fill="rgb(211,72,25)" rx="2" ry="2"/>
<text x="81.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="793.1" y="1925" width="0.1" height="15.0" fill="rgb(221,57,14)" rx="2" ry="2"/>
<text x="796.1" y="1935.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (40 samples, 0.01%)</title><rect x="49.6" y="1957" width="0.1" height="15.0" fill="rgb(250,76,24)" rx="2" ry="2"/>
<text x="52.6" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.02%)</title><rect x="27.0" y="1909" width="0.2" height="15.0" fill="rgb(217,0,27)" rx="2" ry="2"/>
<text x="30" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="47.0" y="1845" width="0.2" height="15.0" fill="rgb(241,229,39)" rx="2" ry="2"/>
<text x="50" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1173" width="0.2" height="15.0" fill="rgb(224,83,44)" rx="2" ry="2"/>
<text x="247.2" y="1183.5"/>
</g>
<g class="">
<title>std::__detail::_Identity::operator (55 samples, 0.01%)</title><rect x="474.7841726618724" y="1765" width="4.244604316546762" height="15.0" fill="rgb(225,70,18)" rx="2" ry="2" _orig_x="542.2" _orig_width="0.2"/>
<text x="477.7841726618724" y="1775.5" _orig_x="545.2"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (151 samples, 0.03%)</title><rect x="45.5" y="1989" width="0.4" height="15.0" fill="rgb(236,111,5)" rx="2" ry="2"/>
<text x="48.5" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (1,209 samples, 0.28%)</title><rect x="17.2" y="1973" width="3.3" height="15.0" fill="rgb(213,102,42)" rx="2" ry="2"/>
<text x="20.2" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (406 samples, 0.09%)</title><rect x="208.9" y="1797" width="1.1" height="15.0" fill="rgb(245,142,39)" rx="2" ry="2"/>
<text x="211.9" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (240 samples, 0.06%)</title><rect x="369.9" y="2021" width="0.6" height="15.0" fill="rgb(212,117,22)" rx="2" ry="2"/>
<text x="372.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (263 samples, 0.06%)</title><rect x="609.7" y="1749" width="0.7" height="15.0" fill="rgb(224,87,23)" rx="2" ry="2"/>
<text x="612.7" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (429 samples, 0.10%)</title><rect x="346.3" y="2021" width="1.2" height="15.0" fill="rgb(234,41,27)" rx="2" ry="2"/>
<text x="349.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="381.1" y="2037" width="0.6" height="15.0" fill="rgb(235,200,53)" rx="2" ry="2"/>
<text x="384.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (334 samples, 0.08%)</title><rect x="381.7" y="2005" width="1.0" height="15.0" fill="rgb(230,76,15)" rx="2" ry="2"/>
<text x="384.7" y="2015.5"/>
</g>
<g class="hide">
<title>snd_pcm_poll (389 samples, 0.09%)</title><rect x="114.5" y="1925" width="1.0" height="15.0" fill="rgb(233,29,48)" rx="2" ry="2"/>
<text x="117.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="515.7" y="1605" width="0.1" height="15.0" fill="rgb(239,162,29)" rx="2" ry="2"/>
<text x="518.7" y="1615.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="203.2" y="1893" width="0.1" height="15.0" fill="rgb(242,104,46)" rx="2" ry="2"/>
<text x="206.2" y="1903.5"/>
</g>
<g class="hide">
<title>BPlusTree::InternalRemove (35,991 samples, 8.34%)</title><rect x="412.9" y="1909" width="98.4" height="15.0" fill="rgb(238,55,22)" rx="2" ry="2"/>
<text x="415.9" y="1919.5">BPlusTree::In..</text>
</g>
<g class="hide">
<title>Row::Row (436 samples, 0.10%)</title><rect x="627.5" y="1909" width="1.2" height="15.0" fill="rgb(220,148,10)" rx="2" ry="2"/>
<text x="630.5" y="1919.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (52 samples, 0.01%)</title><rect x="627.5899280575544" y="1829" width="4.244604316546762" height="15.0" fill="rgb(234,135,7)" rx="2" ry="2" _orig_x="549.4" _orig_width="0.2"/>
<text x="630.5899280575544" y="1839.5" _orig_x="552.4"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (2,669 samples, 0.62%)</title><rect x="477.3" y="1813" width="7.3" height="15.0" fill="rgb(243,227,25)" rx="2" ry="2"/>
<text x="480.3" y="1823.5"/>
</g>
<g class="hide">
<title>mount.ntfs (44,128 samples, 10.22%)</title><rect x="672.1" y="2053" width="120.6" height="15.0" fill="rgb(225,88,41)" rx="2" ry="2"/>
<text x="675.1" y="2063.5">mount.ntfs </text>
</g>
<g class="hide">
<title>runtime.epollwait.abi0 (45 samples, 0.01%)</title><rect x="341.0" y="1909" width="0.1" height="15.0" fill="rgb(217,127,15)" rx="2" ry="2"/>
<text x="344" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="203.2" y="1861" width="0.1" height="15.0" fill="rgb(246,88,33)" rx="2" ry="2"/>
<text x="206.2" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="48.8" y="1797" width="0.2" height="15.0" fill="rgb(242,102,50)" rx="2" ry="2"/>
<text x="51.8" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="237.4" y="1829" width="0.4" height="15.0" fill="rgb(232,206,43)" rx="2" ry="2"/>
<text x="240.4" y="1839.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1957" width="0.3" height="15.0" fill="rgb(250,107,30)" rx="2" ry="2"/>
<text x="16.5" y="1967.5"/>
</g>
<g class="hide">
<title>TablePage::GetTupleCount (41 samples, 0.01%)</title><rect x="657.2" y="1941" width="0.1" height="15.0" fill="rgb(228,20,41)" rx="2" ry="2"/>
<text x="660.2" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1941" width="9.7" height="15.0" fill="rgb(228,146,33)" rx="2" ry="2"/>
<text x="241.3" y="1951.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (38 samples, 0.01%)</title><rect x="373.5" y="2021" width="0.1" height="15.0" fill="rgb(240,119,36)" rx="2" ry="2"/>
<text x="376.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="342.7" y="1781" width="0.1" height="15.0" fill="rgb(207,228,23)" rx="2" ry="2"/>
<text x="345.7" y="1791.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (76 samples, 0.02%)</title><rect x="309.0" y="1973" width="0.2" height="15.0" fill="rgb(208,186,22)" rx="2" ry="2"/>
<text x="312" y="1983.5"/>
</g>
<g class="hide">
<title>snd_ctl_ioctl (90 samples, 0.02%)</title><rect x="171.5" y="1973" width="0.2" height="15.0" fill="rgb(212,106,26)" rx="2" ry="2"/>
<text x="174.5" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (939 samples, 0.22%)</title><rect x="583.4" y="1813" width="2.6" height="15.0" fill="rgb(217,171,27)" rx="2" ry="2"/>
<text x="586.4" y="1823.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (61 samples, 0.01%)</title><rect x="29.2" y="1925" width="0.1" height="15.0" fill="rgb(243,116,31)" rx="2" ry="2"/>
<text x="32.2" y="1935.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (38 samples, 0.01%)</title><rect x="423.3" y="1829" width="0.1" height="15.0" fill="rgb(217,31,8)" rx="2" ry="2"/>
<text x="426.3" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (84 samples, 0.02%)</title><rect x="426.3" y="1749" width="0.2" height="15.0" fill="rgb(209,137,2)" rx="2" ry="2"/>
<text x="429.3" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="797.1" y="1861" width="0.1" height="15.0" fill="rgb(242,41,32)" rx="2" ry="2"/>
<text x="800.1" y="1871.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (52 samples, 0.01%)</title><rect x="578.7769784172676" y="1861" width="2.122302158273381" height="15.0" fill="rgb(243,92,48)" rx="2" ry="2" _orig_x="547.1" _orig_width="0.1"/>
<text x="581.7769784172676" y="1871.5" _orig_x="550.1"/>
</g>
<g class="hide">
<title>[code] (471 samples, 0.11%)</title><rect x="208.8" y="1829" width="1.3" height="15.0" fill="rgb(234,55,30)" rx="2" ry="2"/>
<text x="211.8" y="1839.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1957" width="0.1" height="15.0" fill="rgb(214,16,10)" rx="2" ry="2"/>
<text x="357.5" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="342.6" y="1957" width="0.2" height="15.0" fill="rgb(233,44,28)" rx="2" ry="2"/>
<text x="345.6" y="1967.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (130 samples, 0.03%)</title><rect x="13.5" y="1877" width="0.3" height="15.0" fill="rgb(214,77,21)" rx="2" ry="2"/>
<text x="16.5" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (469 samples, 0.11%)</title><rect x="39.6" y="1957" width="1.3" height="15.0" fill="rgb(247,159,47)" rx="2" ry="2"/>
<text x="42.6" y="1967.5"/>
</g>
<g class="hide">
<title>std::uninitialized_copy&lt;Row const*, Row*&gt; (596 samples, 0.14%)</title><rect x="647.1" y="1893" width="1.7" height="15.0" fill="rgb(245,226,26)" rx="2" ry="2"/>
<text x="650.1" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (705 samples, 0.16%)</title><rect x="793.3" y="1909" width="1.9" height="15.0" fill="rgb(219,127,16)" rx="2" ry="2"/>
<text x="796.3" y="1919.5"/>
</g>
<g class="hide">
<title>pa_mempool_block_size_max (70 samples, 0.02%)</title><rect x="81.0" y="2005" width="0.2" height="15.0" fill="rgb(251,39,21)" rx="2" ry="2"/>
<text x="84" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (39 samples, 0.01%)</title><rect x="650.0" y="1893" width="0.1" height="15.0" fill="rgb(226,126,31)" rx="2" ry="2"/>
<text x="653" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (99 samples, 0.02%)</title><rect x="51.4" y="1749" width="0.3" height="15.0" fill="rgb(227,228,16)" rx="2" ry="2"/>
<text x="54.4" y="1759.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (47 samples, 0.01%)</title><rect x="645.6" y="1797" width="0.2" height="15.0" fill="rgb(254,52,35)" rx="2" ry="2"/>
<text x="648.6" y="1807.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (68 samples, 0.02%)</title><rect x="1077.5179856115121" y="1845" width="4.244604316546762" height="15.0" fill="rgb(243,121,18)" rx="2" ry="2" _orig_x="570.6" _orig_width="0.2"/>
<text x="1080.5179856115121" y="1855.5" _orig_x="573.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (298 samples, 0.07%)</title><rect x="389.1" y="1989" width="0.8" height="15.0" fill="rgb(219,182,26)" rx="2" ry="2"/>
<text x="392.1" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (78 samples, 0.02%)</title><rect x="465.7" y="1717" width="0.2" height="15.0" fill="rgb(224,147,6)" rx="2" ry="2"/>
<text x="468.7" y="1727.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1909" width="0.1" height="15.0" fill="rgb(222,136,18)" rx="2" ry="2"/>
<text x="357.5" y="1919.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (54 samples, 0.01%)</title><rect x="1188.8" y="2037" width="0.2" height="15.0" fill="rgb(215,125,53)" rx="2" ry="2"/>
<text x="1191.8" y="2047.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (52 samples, 0.01%)</title><rect x="37.3" y="1973" width="0.2" height="15.0" fill="rgb(210,13,23)" rx="2" ry="2"/>
<text x="40.3" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (294 samples, 0.07%)</title><rect x="598.2" y="1877" width="0.8" height="15.0" fill="rgb(229,88,36)" rx="2" ry="2"/>
<text x="601.2" y="1887.5"/>
</g>
<g class="hide">
<title>ReaderWriterLatch::WLock (44 samples, 0.01%)</title><rect x="656.8" y="1941" width="0.1" height="15.0" fill="rgb(214,22,40)" rx="2" ry="2"/>
<text x="659.8" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (89 samples, 0.02%)</title><rect x="245.6" y="1573" width="0.2" height="15.0" fill="rgb(238,72,32)" rx="2" ry="2"/>
<text x="248.6" y="1583.5"/>
</g>
<g class="hide">
<title>SyntheticaAnima (2,598 samples, 0.60%)</title><rect x="33.9" y="2053" width="7.1" height="15.0" fill="rgb(231,57,21)" rx="2" ry="2"/>
<text x="36.9" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (96 samples, 0.02%)</title><rect x="194.64028776978512" y="1749" width="6.366906474820143" height="15.0" fill="rgb(242,172,44)" rx="2" ry="2" _orig_x="529.0" _orig_width="0.3"/>
<text x="197.64028776978512" y="1759.5" _orig_x="532"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (42 samples, 0.01%)</title><rect x="501.5" y="1749" width="0.1" height="15.0" fill="rgb(251,221,35)" rx="2" ry="2"/>
<text x="504.5" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (6,089 samples, 1.41%)</title><rect x="681.2" y="2005" width="16.7" height="15.0" fill="rgb(218,8,44)" rx="2" ry="2"/>
<text x="684.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (398 samples, 0.09%)</title><rect x="39.8" y="1925" width="1.1" height="15.0" fill="rgb(254,149,38)" rx="2" ry="2"/>
<text x="42.8" y="1935.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::IsLeafPage (47 samples, 0.01%)</title><rect x="596.7" y="1925" width="0.2" height="15.0" fill="rgb(243,19,44)" rx="2" ry="2"/>
<text x="599.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="1957" width="0.2" height="15.0" fill="rgb(234,203,40)" rx="2" ry="2"/>
<text x="801" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (2,379 samples, 0.55%)</title><rect x="239.3" y="1685" width="6.5" height="15.0" fill="rgb(214,31,49)" rx="2" ry="2"/>
<text x="242.3" y="1695.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Row&gt;::construct&lt;Row, Row const&amp;&gt; (499 samples, 0.12%)</title><rect x="645.4" y="1925" width="1.3" height="15.0" fill="rgb(241,112,16)" rx="2" ry="2"/>
<text x="648.4" y="1935.5"/>
</g>
<g class="hide">
<title>snd_ctl_find_id (1,106 samples, 0.26%)</title><rect x="130.1" y="1925" width="3.0" height="15.0" fill="rgb(217,65,3)" rx="2" ry="2"/>
<text x="133.1" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="32.1" y="1989" width="0.3" height="15.0" fill="rgb(251,134,7)" rx="2" ry="2"/>
<text x="35.1" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (198 samples, 0.05%)</title><rect x="603.4" y="1765" width="0.6" height="15.0" fill="rgb(215,138,3)" rx="2" ry="2"/>
<text x="606.4" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,708 samples, 0.86%)</title><rect x="323.5" y="1925" width="10.2" height="15.0" fill="rgb(237,198,54)" rx="2" ry="2"/>
<text x="326.5" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (110 samples, 0.03%)</title><rect x="628.3" y="1877" width="0.3" height="15.0" fill="rgb(233,85,38)" rx="2" ry="2"/>
<text x="631.3" y="1887.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (269 samples, 0.06%)</title><rect x="623.4" y="1845" width="0.7" height="15.0" fill="rgb(220,0,14)" rx="2" ry="2"/>
<text x="626.4" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (574 samples, 0.13%)</title><rect x="487.1" y="1829" width="1.6" height="15.0" fill="rgb(208,175,21)" rx="2" ry="2"/>
<text x="490.1" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (61 samples, 0.01%)</title><rect x="243.1" y="693" width="0.2" height="15.0" fill="rgb(223,67,52)" rx="2" ry="2"/>
<text x="246.1" y="703.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="342.7" y="1813" width="0.1" height="15.0" fill="rgb(243,110,39)" rx="2" ry="2"/>
<text x="345.7" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (95 samples, 0.02%)</title><rect x="469.5" y="1749" width="0.3" height="15.0" fill="rgb(237,45,38)" rx="2" ry="2"/>
<text x="472.5" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="32.5" y="1973" width="0.2" height="15.0" fill="rgb(233,166,25)" rx="2" ry="2"/>
<text x="35.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.04%)</title><rect x="48.5" y="1893" width="0.5" height="15.0" fill="rgb(216,189,45)" rx="2" ry="2"/>
<text x="51.5" y="1903.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (38 samples, 0.01%)</title><rect x="691.2589928057558" y="1829" width="2.122302158273381" height="15.0" fill="rgb(232,58,39)" rx="2" ry="2" _orig_x="552.4" _orig_width="0.1"/>
<text x="694.2589928057558" y="1839.5" _orig_x="555.4"/>
</g>
<g class="hide">
<title>GC_Thread#0 (58 samples, 0.01%)</title><rect x="21.6" y="2053" width="0.2" height="15.0" fill="rgb(215,21,9)" rx="2" ry="2"/>
<text x="24.6" y="2063.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (46 samples, 0.01%)</title><rect x="574.5323741007198" y="1861" width="2.122302158273381" height="15.0" fill="rgb(230,74,53)" rx="2" ry="2" _orig_x="546.9" _orig_width="0.1"/>
<text x="577.5323741007198" y="1871.5" _orig_x="549.9"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="379.9" y="1893" width="0.2" height="15.0" fill="rgb(207,24,15)" rx="2" ry="2"/>
<text x="382.9" y="1903.5"/>
</g>
<g class="hide">
<title>std::equal_to&lt;int&gt;::operator (69 samples, 0.02%)</title><rect x="598.8" y="1813" width="0.2" height="15.0" fill="rgb(238,47,54)" rx="2" ry="2"/>
<text x="601.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (1,527 samples, 0.35%)</title><rect x="616.7" y="1845" width="4.2" height="15.0" fill="rgb(228,185,50)" rx="2" ry="2"/>
<text x="619.7" y="1855.5"/>
</g>
<g class="hide">
<title>operator new[] (59 samples, 0.01%)</title><rect x="267.7" y="1909" width="0.2" height="15.0" fill="rgb(214,156,41)" rx="2" ry="2"/>
<text x="270.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (166 samples, 0.04%)</title><rect x="388.6" y="1973" width="0.4" height="15.0" fill="rgb(254,194,34)" rx="2" ry="2"/>
<text x="391.6" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="160.7" y="1845" width="0.3" height="15.0" fill="rgb(236,197,15)" rx="2" ry="2"/>
<text x="163.7" y="1855.5"/>
</g>
<g class="">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (3,404 samples, 0.79%)</title><rect x="309.2446043165472" y="1813" width="197.37410071942446" height="15.0" fill="rgb(220,67,26)" rx="2" ry="2" _orig_x="534.4" _orig_width="9.3"/>
<text x="312.2446043165472" y="1823.5" _orig_x="537.4">std::unordered_set&lt;void*, std..</text>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::vector (60 samples, 0.01%)</title><rect x="660.6" y="1973" width="0.1" height="15.0" fill="rgb(209,110,2)" rx="2" ry="2"/>
<text x="663.6" y="1983.5"/>
</g>
<g class="hide">
<title>Field::CompareLessThan (293 samples, 0.07%)</title><rect x="519.5" y="1893" width="0.8" height="15.0" fill="rgb(249,188,14)" rx="2" ry="2"/>
<text x="522.5" y="1903.5"/>
</g>
<g class="hide">
<title>kworker/3:1-eve (291 samples, 0.07%)</title><rect x="386.6" y="2053" width="0.8" height="15.0" fill="rgb(210,197,12)" rx="2" ry="2"/>
<text x="389.6" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="33.5" y="2005" width="0.2" height="15.0" fill="rgb(225,95,42)" rx="2" ry="2"/>
<text x="36.5" y="2015.5"/>
</g>
<g class="hide">
<title>__errno_location (37 samples, 0.01%)</title><rect x="780.9" y="2037" width="0.1" height="15.0" fill="rgb(205,111,48)" rx="2" ry="2"/>
<text x="783.9" y="2047.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (93 samples, 0.02%)</title><rect x="656.4" y="1957" width="0.3" height="15.0" fill="rgb(248,48,43)" rx="2" ry="2"/>
<text x="659.4" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="795.0" y="1605" width="0.2" height="15.0" fill="rgb(226,47,42)" rx="2" ry="2"/>
<text x="798" y="1615.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.03%)</title><rect x="40.5" y="1813" width="0.4" height="15.0" fill="rgb(237,19,16)" rx="2" ry="2"/>
<text x="43.5" y="1823.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (71 samples, 0.02%)</title><rect x="74.2" y="1989" width="0.2" height="15.0" fill="rgb(217,118,26)" rx="2" ry="2"/>
<text x="77.2" y="1999.5"/>
</g>
<g class="hide">
<title>start_thread (48 samples, 0.01%)</title><rect x="22.3" y="2037" width="0.1" height="15.0" fill="rgb(215,70,2)" rx="2" ry="2"/>
<text x="25.3" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (37 samples, 0.01%)</title><rect x="440.7" y="1765" width="0.1" height="15.0" fill="rgb(243,23,27)" rx="2" ry="2"/>
<text x="443.7" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (199 samples, 0.05%)</title><rect x="432.7" y="1765" width="0.5" height="15.0" fill="rgb(234,211,18)" rx="2" ry="2"/>
<text x="435.7" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.04%)</title><rect x="364.8" y="2005" width="0.5" height="15.0" fill="rgb(254,151,35)" rx="2" ry="2"/>
<text x="367.8" y="2015.5"/>
</g>
<g class="">
<title>std::min&lt;unsigned long&gt; (53 samples, 0.01%)</title><rect x="1075.3956834532382" y="1813" width="2.122302158273381" height="15.0" fill="rgb(230,215,11)" rx="2" ry="2" _orig_x="570.5" _orig_width="0.1"/>
<text x="1078.3956834532382" y="1823.5" _orig_x="573.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.02%)</title><rect x="15.4" y="1765" width="0.2" height="15.0" fill="rgb(208,86,35)" rx="2" ry="2"/>
<text x="18.4" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,029 samples, 0.93%)</title><rect x="399.7" y="2005" width="11.1" height="15.0" fill="rgb(252,77,52)" rx="2" ry="2"/>
<text x="402.7" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,426 samples, 0.33%)</title><rect x="441.6" y="1765" width="3.9" height="15.0" fill="rgb(233,133,29)" rx="2" ry="2"/>
<text x="444.6" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="341" width="0.2" height="15.0" fill="rgb(219,131,35)" rx="2" ry="2"/>
<text x="30" y="351.5"/>
</g>
<g class="">
<title>malloc (41 samples, 0.01%)</title><rect x="998.992805755396" y="1781" width="2.122302158273381" height="15.0" fill="rgb(208,228,1)" rx="2" ry="2" _orig_x="566.9" _orig_width="0.1"/>
<text x="1001.992805755396" y="1791.5" _orig_x="569.9"/>
</g>
<g class="hide">
<title>__poll (112 samples, 0.03%)</title><rect x="347.8" y="2021" width="0.3" height="15.0" fill="rgb(239,121,0)" rx="2" ry="2"/>
<text x="350.8" y="2031.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (48 samples, 0.01%)</title><rect x="398.3812949640302" y="1701" width="2.122302158273381" height="15.0" fill="rgb(233,214,0)" rx="2" ry="2" _orig_x="538.6" _orig_width="0.1"/>
<text x="401.3812949640302" y="1711.5" _orig_x="541.6"/>
</g>
<g class="hide">
<title>pa_asyncmsgq_get (128 samples, 0.03%)</title><rect x="189.5" y="2021" width="0.4" height="15.0" fill="rgb(224,131,52)" rx="2" ry="2"/>
<text x="192.5" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="243.2" y="597" width="0.1" height="15.0" fill="rgb(220,205,14)" rx="2" ry="2"/>
<text x="246.2" y="607.5"/>
</g>
<g class="hide">
<title>[unknown] (296 samples, 0.07%)</title><rect x="54.8" y="277" width="0.8" height="15.0" fill="rgb(206,125,0)" rx="2" ry="2"/>
<text x="57.8" y="287.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (71 samples, 0.02%)</title><rect x="606.4" y="1717" width="0.2" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2"/>
<text x="609.4" y="1727.5"/>
</g>
<g class="">
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;char*&gt; (62 samples, 0.01%)</title><rect x="1088.129496402879" y="1829" width="4.244604316546762" height="15.0" fill="rgb(219,64,32)" rx="2" ry="2" _orig_x="571.1" _orig_width="0.2"/>
<text x="1091.129496402879" y="1839.5" _orig_x="574.1"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (40 samples, 0.01%)</title><rect x="577.5" y="1797" width="0.1" height="15.0" fill="rgb(252,158,26)" rx="2" ry="2"/>
<text x="580.5" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (623 samples, 0.14%)</title><rect x="241.6" y="1237" width="1.7" height="15.0" fill="rgb(253,96,7)" rx="2" ry="2"/>
<text x="244.6" y="1247.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="16.9" y="1909" width="0.2" height="15.0" fill="rgb(236,97,48)" rx="2" ry="2"/>
<text x="19.9" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1029" width="0.1" height="15.0" fill="rgb(219,178,35)" rx="2" ry="2"/>
<text x="247" y="1039.5"/>
</g>
<g class="hide">
<title>[code] (175 samples, 0.04%)</title><rect x="242.8" y="981" width="0.5" height="15.0" fill="rgb(237,43,51)" rx="2" ry="2"/>
<text x="245.8" y="991.5"/>
</g>
<g class="hide">
<title>[libprotocol-native.so] (143 samples, 0.03%)</title><rect x="175.0" y="2005" width="0.4" height="15.0" fill="rgb(220,78,11)" rx="2" ry="2"/>
<text x="178" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (63 samples, 0.01%)</title><rect x="27.0" y="277" width="0.2" height="15.0" fill="rgb(226,62,44)" rx="2" ry="2"/>
<text x="30" y="287.5"/>
</g>
<g class="hide">
<title>ntfs_mapping_pairs_decompress (171 samples, 0.04%)</title><rect x="778.6" y="2021" width="0.5" height="15.0" fill="rgb(242,93,7)" rx="2" ry="2"/>
<text x="781.6" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;Field**&gt; (47 samples, 0.01%)</title><rect x="508.0" y="1829" width="0.1" height="15.0" fill="rgb(232,99,53)" rx="2" ry="2"/>
<text x="511" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (41 samples, 0.01%)</title><rect x="373.8" y="2005" width="0.1" height="15.0" fill="rgb(253,196,32)" rx="2" ry="2"/>
<text x="376.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (129 samples, 0.03%)</title><rect x="577.3" y="1829" width="0.4" height="15.0" fill="rgb(233,72,9)" rx="2" ry="2"/>
<text x="580.3" y="1839.5"/>
</g>
<g class="hide">
<title>read (112 samples, 0.03%)</title><rect x="798.2" y="2037" width="0.3" height="15.0" fill="rgb(230,218,38)" rx="2" ry="2"/>
<text x="801.2" y="2047.5"/>
</g>
<g class="hide">
<title>Row::DeserializeFrom (4,855 samples, 1.12%)</title><rect x="416.7" y="1845" width="13.3" height="15.0" fill="rgb(212,224,33)" rx="2" ry="2"/>
<text x="419.7" y="1855.5"/>
</g>
<g class="hide">
<title>uv_run (187 samples, 0.04%)</title><rect x="247.3" y="1829" width="0.5" height="15.0" fill="rgb(238,195,22)" rx="2" ry="2"/>
<text x="250.3" y="1839.5"/>
</g>
<g class="hide">
<title>[Xorg] (43 samples, 0.01%)</title><rect x="54.5" y="1989" width="0.1" height="15.0" fill="rgb(220,121,46)" rx="2" ry="2"/>
<text x="57.5" y="1999.5"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (107 samples, 0.02%)</title><rect x="266.3" y="1909" width="0.3" height="15.0" fill="rgb(225,8,38)" rx="2" ry="2"/>
<text x="269.3" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (380 samples, 0.09%)</title><rect x="54.6" y="1989" width="1.0" height="15.0" fill="rgb(235,80,28)" rx="2" ry="2"/>
<text x="57.6" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="391.8" y="1973" width="0.2" height="15.0" fill="rgb(238,22,50)" rx="2" ry="2"/>
<text x="394.8" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (288 samples, 0.07%)</title><rect x="246.1" y="1573" width="0.8" height="15.0" fill="rgb(216,70,37)" rx="2" ry="2"/>
<text x="249.1" y="1583.5"/>
</g>
<g class="hide">
<title>[unknown] (562 samples, 0.13%)</title><rect x="47.5" y="2037" width="1.5" height="15.0" fill="rgb(205,137,6)" rx="2" ry="2"/>
<text x="50.5" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::~vector (219 samples, 0.05%)</title><rect x="660.7" y="1973" width="0.6" height="15.0" fill="rgb(244,118,28)" rx="2" ry="2"/>
<text x="663.7" y="1983.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (236 samples, 0.05%)</title><rect x="1064.7841726618713" y="1829" width="12.733812949640287" height="15.0" fill="rgb(219,109,51)" rx="2" ry="2" _orig_x="570.0" _orig_width="0.6"/>
<text x="1067.7841726618713" y="1839.5" _orig_x="573"/>
</g>
<g class="hide">
<title>[Xorg] (68 samples, 0.02%)</title><rect x="54.6" y="1941" width="0.2" height="15.0" fill="rgb(205,115,26)" rx="2" ry="2"/>
<text x="57.6" y="1951.5"/>
</g>
<g class="hide">
<title>pa_flist_push (127 samples, 0.03%)</title><rect x="79.0" y="2005" width="0.4" height="15.0" fill="rgb(248,211,51)" rx="2" ry="2"/>
<text x="82" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (194 samples, 0.04%)</title><rect x="41.7" y="1813" width="0.5" height="15.0" fill="rgb(242,62,19)" rx="2" ry="2"/>
<text x="44.7" y="1823.5"/>
</g>
<g class="">
<title>Field::DeserializeFrom (65 samples, 0.02%)</title><rect x="18.489208633095455" y="1877" width="4.244604316546762" height="15.0" fill="rgb(241,44,23)" rx="2" ry="2" _orig_x="520.7" _orig_width="0.2"/>
<text x="21.489208633095455" y="1887.5" _orig_x="523.7"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (423 samples, 0.10%)</title><rect x="977.7697841726623" y="1829" width="23.345323741007192" height="15.0" fill="rgb(211,52,42)" rx="2" ry="2" _orig_x="565.9" _orig_width="1.1"/>
<text x="980.7697841726623" y="1839.5" _orig_x="568.9">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="27.3" y="2005" width="0.1" height="15.0" fill="rgb(223,197,1)" rx="2" ry="2"/>
<text x="30.3" y="2015.5"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (48 samples, 0.01%)</title><rect x="994.7482014388507" y="1781" width="2.122302158273381" height="15.0" fill="rgb(215,225,15)" rx="2" ry="2" _orig_x="566.7" _orig_width="0.1"/>
<text x="997.7482014388507" y="1791.5" _orig_x="569.7"/>
</g>
<g class="hide">
<title>jni_CallIntMethod (161 samples, 0.04%)</title><rect x="25.4" y="1973" width="0.4" height="15.0" fill="rgb(250,228,15)" rx="2" ry="2"/>
<text x="28.4" y="1983.5"/>
</g>
<g class="hide">
<title>BPlusTreeInternalPage::EntryAt (72 samples, 0.02%)</title><rect x="596.2" y="1925" width="0.2" height="15.0" fill="rgb(240,103,7)" rx="2" ry="2"/>
<text x="599.2" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="374.0" y="1957" width="0.1" height="15.0" fill="rgb(234,215,21)" rx="2" ry="2"/>
<text x="377" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (73 samples, 0.02%)</title><rect x="463.3" y="1749" width="0.2" height="15.0" fill="rgb(254,182,35)" rx="2" ry="2"/>
<text x="466.3" y="1759.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (83 samples, 0.02%)</title><rect x="643.6" y="1861" width="0.2" height="15.0" fill="rgb(227,100,52)" rx="2" ry="2"/>
<text x="646.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (147 samples, 0.03%)</title><rect x="56.5" y="1829" width="0.4" height="15.0" fill="rgb(217,44,43)" rx="2" ry="2"/>
<text x="59.5" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (231 samples, 0.05%)</title><rect x="386.8" y="1973" width="0.6" height="15.0" fill="rgb(206,121,5)" rx="2" ry="2"/>
<text x="389.8" y="1983.5"/>
</g>
<g class="hide">
<title>operator new (41 samples, 0.01%)</title><rect x="479.1" y="1765" width="0.1" height="15.0" fill="rgb(242,110,17)" rx="2" ry="2"/>
<text x="482.1" y="1775.5"/>
</g>
<g class="hide">
<title>pa_sink_input_check_type (252 samples, 0.06%)</title><rect x="198.4" y="2037" width="0.6" height="15.0" fill="rgb(239,218,9)" rx="2" ry="2"/>
<text x="201.4" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (63 samples, 0.01%)</title><rect x="27.0" y="293" width="0.2" height="15.0" fill="rgb(228,100,8)" rx="2" ry="2"/>
<text x="30" y="303.5"/>
</g>
<g class="hide">
<title>azx_pcm_pointer (45 samples, 0.01%)</title><rect x="135.1" y="1877" width="0.1" height="15.0" fill="rgb(205,165,37)" rx="2" ry="2"/>
<text x="138.1" y="1887.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (591 samples, 0.14%)</title><rect x="39.3" y="2021" width="1.6" height="15.0" fill="rgb(226,169,18)" rx="2" ry="2"/>
<text x="42.3" y="2031.5"/>
</g>
<g class="hide">
<title>Page::WLatch (49 samples, 0.01%)</title><rect x="656.8" y="1957" width="0.1" height="15.0" fill="rgb(240,48,23)" rx="2" ry="2"/>
<text x="659.8" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (922 samples, 0.21%)</title><rect x="395.6" y="1989" width="2.5" height="15.0" fill="rgb(224,81,36)" rx="2" ry="2"/>
<text x="398.6" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="243.2" y="613" width="0.1" height="15.0" fill="rgb(210,41,21)" rx="2" ry="2"/>
<text x="246.2" y="623.5"/>
</g>
<g class="hide">
<title>__GI___writev (4,184 samples, 0.97%)</title><rect x="399.3" y="2037" width="11.5" height="15.0" fill="rgb(237,152,39)" rx="2" ry="2"/>
<text x="402.3" y="2047.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (90 samples, 0.02%)</title><rect x="49.5" y="2005" width="0.3" height="15.0" fill="rgb(254,113,46)" rx="2" ry="2"/>
<text x="52.5" y="2015.5"/>
</g>
<g class="">
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (37 samples, 0.01%)</title><rect x="421.7266187050379" y="1733" width="2.122302158273381" height="15.0" fill="rgb(251,204,50)" rx="2" ry="2" _orig_x="539.7" _orig_width="0.1"/>
<text x="424.7266187050379" y="1743.5" _orig_x="542.7"/>
</g>
<g class="hide">
<title>[code] (76 samples, 0.02%)</title><rect x="306.3" y="1941" width="0.2" height="15.0" fill="rgb(211,153,39)" rx="2" ry="2"/>
<text x="309.3" y="1951.5"/>
</g>
<g class="hide">
<title>ntfs_pwrite (91 samples, 0.02%)</title><rect x="697.6" y="1989" width="0.3" height="15.0" fill="rgb(220,58,18)" rx="2" ry="2"/>
<text x="700.6" y="1999.5"/>
</g>
<g class="">
<title>std::max&lt;unsigned long&gt; (52 samples, 0.01%)</title><rect x="771.9064748201457" y="1813" width="2.122302158273381" height="15.0" fill="rgb(225,124,44)" rx="2" ry="2" _orig_x="556.2" _orig_width="0.1"/>
<text x="774.9064748201457" y="1823.5" _orig_x="559.2"/>
</g>
<g class="hide">
<title>ntfs_mst_post_read_fixup_warn (42 samples, 0.01%)</title><rect x="791.7" y="2037" width="0.1" height="15.0" fill="rgb(233,33,45)" rx="2" ry="2"/>
<text x="794.7" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (128 samples, 0.03%)</title><rect x="26.4" y="2005" width="0.3" height="15.0" fill="rgb(249,46,46)" rx="2" ry="2"/>
<text x="29.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (41 samples, 0.01%)</title><rect x="581.4" y="1813" width="0.1" height="15.0" fill="rgb(249,85,7)" rx="2" ry="2"/>
<text x="584.4" y="1823.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (69 samples, 0.02%)</title><rect x="90.64748201438992" y="1765" width="4.244604316546762" height="15.0" fill="rgb(228,196,15)" rx="2" ry="2" _orig_x="524.1" _orig_width="0.2"/>
<text x="93.64748201438992" y="1775.5" _orig_x="527.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="792.9" y="1829" width="0.2" height="15.0" fill="rgb(226,32,30)" rx="2" ry="2"/>
<text x="795.9" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="2021" width="0.4" height="15.0" fill="rgb(253,26,41)" rx="2" ry="2"/>
<text x="240.4" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (987 samples, 0.23%)</title><rect x="351.8" y="2037" width="2.7" height="15.0" fill="rgb(248,3,5)" rx="2" ry="2"/>
<text x="354.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,885 samples, 0.90%)</title><rect x="400.1" y="1925" width="10.7" height="15.0" fill="rgb(245,90,44)" rx="2" ry="2"/>
<text x="403.1" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (172 samples, 0.04%)</title><rect x="40.4" y="1829" width="0.5" height="15.0" fill="rgb(243,40,29)" rx="2" ry="2"/>
<text x="43.4" y="1839.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::shared_ptr&lt;InotifySubscription&gt; const&amp;&gt; (657 samples, 0.15%)</title><rect x="306.1" y="1957" width="1.8" height="15.0" fill="rgb(248,72,26)" rx="2" ry="2"/>
<text x="309.1" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_check_len (98 samples, 0.02%)</title><rect x="660.2" y="1941" width="0.3" height="15.0" fill="rgb(213,95,23)" rx="2" ry="2"/>
<text x="663.2" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="245.1" y="1221" width="0.2" height="15.0" fill="rgb(238,173,2)" rx="2" ry="2"/>
<text x="248.1" y="1231.5"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (537 samples, 0.12%)</title><rect x="61.5" y="2037" width="1.4" height="15.0" fill="rgb(254,22,48)" rx="2" ry="2"/>
<text x="64.5" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (156 samples, 0.04%)</title><rect x="242.9" y="949" width="0.4" height="15.0" fill="rgb(226,194,40)" rx="2" ry="2"/>
<text x="245.9" y="959.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.03%)</title><rect x="46.9" y="1925" width="0.3" height="15.0" fill="rgb(218,46,7)" rx="2" ry="2"/>
<text x="49.9" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (2,548 samples, 0.59%)</title><rect x="392.3" y="2037" width="7.0" height="15.0" fill="rgb(214,114,49)" rx="2" ry="2"/>
<text x="395.3" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (319 samples, 0.07%)</title><rect x="389.1" y="2021" width="0.8" height="15.0" fill="rgb(209,108,44)" rx="2" ry="2"/>
<text x="392.1" y="2031.5"/>
</g>
<g class="hide">
<title>std::equal_to&lt;int&gt;::operator (63 samples, 0.01%)</title><rect x="449.5" y="1781" width="0.2" height="15.0" fill="rgb(221,200,43)" rx="2" ry="2"/>
<text x="452.5" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (48 samples, 0.01%)</title><rect x="649.8" y="1893" width="0.1" height="15.0" fill="rgb(222,43,41)" rx="2" ry="2"/>
<text x="652.8" y="1903.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (90 samples, 0.02%)</title><rect x="440.7" y="1829" width="0.2" height="15.0" fill="rgb(205,6,13)" rx="2" ry="2"/>
<text x="443.7" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.04%)</title><rect x="364.8" y="1989" width="0.5" height="15.0" fill="rgb(206,8,19)" rx="2" ry="2"/>
<text x="367.8" y="1999.5"/>
</g>
<g class="hide">
<title>__libc_start_main (4,409 samples, 1.02%)</title><rect x="238.3" y="2037" width="12.0" height="15.0" fill="rgb(236,15,46)" rx="2" ry="2"/>
<text x="241.3" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (172 samples, 0.04%)</title><rect x="244.0" y="1317" width="0.4" height="15.0" fill="rgb(245,75,45)" rx="2" ry="2"/>
<text x="247" y="1327.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (139 samples, 0.03%)</title><rect x="429.6" y="1813" width="0.4" height="15.0" fill="rgb(228,5,20)" rx="2" ry="2"/>
<text x="432.6" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.02%)</title><rect x="48.0" y="1813" width="0.3" height="15.0" fill="rgb(223,171,25)" rx="2" ry="2"/>
<text x="51" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (89 samples, 0.02%)</title><rect x="245.6" y="1637" width="0.2" height="15.0" fill="rgb(247,68,37)" rx="2" ry="2"/>
<text x="248.6" y="1647.5"/>
</g>
<g class="hide">
<title>[unknown] (308 samples, 0.07%)</title><rect x="54.8" y="1925" width="0.8" height="15.0" fill="rgb(222,171,7)" rx="2" ry="2"/>
<text x="57.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (60 samples, 0.01%)</title><rect x="468.6" y="1717" width="0.1" height="15.0" fill="rgb(235,175,17)" rx="2" ry="2"/>
<text x="471.6" y="1727.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (174 samples, 0.04%)</title><rect x="677.7" y="2005" width="0.5" height="15.0" fill="rgb(243,61,13)" rx="2" ry="2"/>
<text x="680.7" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,644 samples, 0.38%)</title><rect x="109.4" y="1813" width="4.5" height="15.0" fill="rgb(219,202,22)" rx="2" ry="2"/>
<text x="112.4" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (71 samples, 0.02%)</title><rect x="245.6" y="1397" width="0.2" height="15.0" fill="rgb(215,126,20)" rx="2" ry="2"/>
<text x="248.6" y="1407.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.03%)</title><rect x="15.7" y="1893" width="0.3" height="15.0" fill="rgb(242,30,6)" rx="2" ry="2"/>
<text x="18.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="364.5" y="1909" width="0.2" height="15.0" fill="rgb(254,127,15)" rx="2" ry="2"/>
<text x="367.5" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,599 samples, 1.99%)</title><rect x="280.9" y="1813" width="23.5" height="15.0" fill="rgb(222,68,53)" rx="2" ry="2"/>
<text x="283.9" y="1823.5">[..</text>
</g>
<g class="hide">
<title>runtime.gcDrain (41 samples, 0.01%)</title><rect x="344.1" y="1989" width="0.1" height="15.0" fill="rgb(251,146,22)" rx="2" ry="2"/>
<text x="347.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (168 samples, 0.04%)</title><rect x="796.7" y="1957" width="0.5" height="15.0" fill="rgb(254,61,43)" rx="2" ry="2"/>
<text x="799.7" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (651 samples, 0.15%)</title><rect x="793.4" y="1813" width="1.8" height="15.0" fill="rgb(206,223,3)" rx="2" ry="2"/>
<text x="796.4" y="1823.5"/>
</g>
<g class="hide">
<title>jni_invoke_nonstatic (120 samples, 0.03%)</title><rect x="25.5" y="1957" width="0.3" height="15.0" fill="rgb(253,145,12)" rx="2" ry="2"/>
<text x="28.5" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (245 samples, 0.06%)</title><rect x="41.6" y="1829" width="0.6" height="15.0" fill="rgb(214,92,14)" rx="2" ry="2"/>
<text x="44.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (569 samples, 0.13%)</title><rect x="652.6" y="1957" width="1.6" height="15.0" fill="rgb(229,202,5)" rx="2" ry="2"/>
<text x="655.6" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (182 samples, 0.04%)</title><rect x="56.4" y="1909" width="0.5" height="15.0" fill="rgb(220,215,20)" rx="2" ry="2"/>
<text x="59.4" y="1919.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (41 samples, 0.01%)</title><rect x="607.9" y="1781" width="0.1" height="15.0" fill="rgb(231,206,16)" rx="2" ry="2"/>
<text x="610.9" y="1791.5"/>
</g>
<g class="hide">
<title>Field::CompareGreaterThan (110 samples, 0.03%)</title><rect x="600.3" y="1909" width="0.3" height="15.0" fill="rgb(237,23,33)" rx="2" ry="2"/>
<text x="603.3" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (83 samples, 0.02%)</title><rect x="628.4" y="1861" width="0.2" height="15.0" fill="rgb(206,0,40)" rx="2" ry="2"/>
<text x="631.4" y="1871.5"/>
</g>
<g class="hide">
<title>pa_asyncq_pop (40 samples, 0.01%)</title><rect x="189.9" y="2021" width="0.1" height="15.0" fill="rgb(210,207,50)" rx="2" ry="2"/>
<text x="192.9" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (639 samples, 0.15%)</title><rect x="24.4" y="2021" width="1.8" height="15.0" fill="rgb(224,199,30)" rx="2" ry="2"/>
<text x="27.4" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="15.9" y="1765" width="0.1" height="15.0" fill="rgb(231,190,28)" rx="2" ry="2"/>
<text x="18.9" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (658 samples, 0.15%)</title><rect x="793.4" y="1829" width="1.8" height="15.0" fill="rgb(247,149,19)" rx="2" ry="2"/>
<text x="796.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="366.9" y="1957" width="0.2" height="15.0" fill="rgb(231,212,4)" rx="2" ry="2"/>
<text x="369.9" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.03%)</title><rect x="388.1" y="1925" width="0.3" height="15.0" fill="rgb(243,25,27)" rx="2" ry="2"/>
<text x="391.1" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="385.6" y="1893" width="0.2" height="15.0" fill="rgb(241,209,4)" rx="2" ry="2"/>
<text x="388.6" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1125" width="0.2" height="15.0" fill="rgb(246,139,51)" rx="2" ry="2"/>
<text x="247.2" y="1135.5"/>
</g>
<g class="hide">
<title>Row::~Row (1,388 samples, 0.32%)</title><rect x="431.6" y="1861" width="3.8" height="15.0" fill="rgb(241,214,32)" rx="2" ry="2"/>
<text x="434.6" y="1871.5"/>
</g>
<g class="hide">
<title>__evlist__enable (72 samples, 0.02%)</title><rect x="792.9" y="1973" width="0.2" height="15.0" fill="rgb(209,81,26)" rx="2" ry="2"/>
<text x="795.9" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,064 samples, 0.71%)</title><rect x="1170.4" y="1749" width="8.4" height="15.0" fill="rgb(242,214,31)" rx="2" ry="2"/>
<text x="1173.4" y="1759.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (47 samples, 0.01%)</title><rect x="609.9" y="1701" width="0.2" height="15.0" fill="rgb(245,149,46)" rx="2" ry="2"/>
<text x="612.9" y="1711.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (71 samples, 0.02%)</title><rect x="476.1" y="1813" width="0.2" height="15.0" fill="rgb(246,180,24)" rx="2" ry="2"/>
<text x="479.1" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (113 samples, 0.03%)</title><rect x="650.5" y="1861" width="0.3" height="15.0" fill="rgb(230,214,53)" rx="2" ry="2"/>
<text x="653.5" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (229 samples, 0.05%)</title><rect x="54.8" y="197" width="0.6" height="15.0" fill="rgb(241,142,48)" rx="2" ry="2"/>
<text x="57.8" y="207.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (49 samples, 0.01%)</title><rect x="249.1" y="1893" width="0.1" height="15.0" fill="rgb(221,4,32)" rx="2" ry="2"/>
<text x="252.1" y="1903.5"/>
</g>
<g class="hide">
<title>BPlusTreeInternalPage::KeyAt (75 samples, 0.02%)</title><rect x="511.4" y="1909" width="0.2" height="15.0" fill="rgb(253,107,3)" rx="2" ry="2"/>
<text x="514.4" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (265 samples, 0.06%)</title><rect x="20.6" y="1989" width="0.7" height="15.0" fill="rgb(208,136,18)" rx="2" ry="2"/>
<text x="23.6" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (227 samples, 0.05%)</title><rect x="432.6" y="1781" width="0.6" height="15.0" fill="rgb(251,187,33)" rx="2" ry="2"/>
<text x="435.6" y="1791.5"/>
</g>
<g class="hide">
<title>Messages_View_G (175 samples, 0.04%)</title><rect x="29.5" y="2053" width="0.4" height="15.0" fill="rgb(252,144,10)" rx="2" ry="2"/>
<text x="32.5" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="244.0" y="1221" width="0.1" height="15.0" fill="rgb(227,78,22)" rx="2" ry="2"/>
<text x="247" y="1231.5"/>
</g>
<g class="hide">
<title>[unknown] (112 samples, 0.03%)</title><rect x="54.8" y="85" width="0.3" height="15.0" fill="rgb(246,104,50)" rx="2" ry="2"/>
<text x="57.8" y="95.5"/>
</g>
<g class="hide">
<title>[code] (630 samples, 0.15%)</title><rect x="241.6" y="1253" width="1.7" height="15.0" fill="rgb(214,18,18)" rx="2" ry="2"/>
<text x="244.6" y="1263.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (924 samples, 0.21%)</title><rect x="602.7" y="1845" width="2.6" height="15.0" fill="rgb(213,108,4)" rx="2" ry="2"/>
<text x="605.7" y="1855.5"/>
</g>
<g class="hide">
<title>snd_pcm_poll_descriptors_revents (401 samples, 0.09%)</title><rect x="201.8" y="2037" width="1.1" height="15.0" fill="rgb(239,174,22)" rx="2" ry="2"/>
<text x="204.8" y="2047.5"/>
</g>
<g class="hide">
<title>epoll_wait (87 samples, 0.02%)</title><rect x="250.1" y="1973" width="0.2" height="15.0" fill="rgb(245,44,50)" rx="2" ry="2"/>
<text x="253.1" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (57 samples, 0.01%)</title><rect x="647.5" y="1749" width="0.1" height="15.0" fill="rgb(221,155,47)" rx="2" ry="2"/>
<text x="650.5" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (312 samples, 0.07%)</title><rect x="385.8" y="2021" width="0.8" height="15.0" fill="rgb(230,60,6)" rx="2" ry="2"/>
<text x="388.8" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.02%)</title><rect x="245.1" y="1029" width="0.2" height="15.0" fill="rgb(212,190,21)" rx="2" ry="2"/>
<text x="248.1" y="1039.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="360.9" y="1861" width="0.1" height="15.0" fill="rgb(224,70,40)" rx="2" ry="2"/>
<text x="363.9" y="1871.5"/>
</g>
<g class="hide">
<title>Row::~Row (105 samples, 0.02%)</title><rect x="661.4" y="1893" width="0.3" height="15.0" fill="rgb(241,120,28)" rx="2" ry="2"/>
<text x="664.4" y="1903.5"/>
</g>
<g class="hide">
<title>TypeFloat::DeserializeFrom (1,081 samples, 0.25%)</title><rect x="605.4" y="1861" width="2.9" height="15.0" fill="rgb(216,4,12)" rx="2" ry="2"/>
<text x="608.4" y="1871.5"/>
</g>
<g class="hide">
<title>azx_get_pos_fifo (2,261 samples, 0.52%)</title><rect x="164.2" y="1829" width="6.2" height="15.0" fill="rgb(250,189,37)" rx="2" ry="2"/>
<text x="167.2" y="1839.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (97 samples, 0.02%)</title><rect x="892.877697841727" y="1813" width="4.244604316546762" height="15.0" fill="rgb(210,221,47)" rx="2" ry="2" _orig_x="561.9" _orig_width="0.2"/>
<text x="895.877697841727" y="1823.5" _orig_x="564.9"/>
</g>
<g class="hide">
<title>TablePage::GetTupleOffsetAtSlot (38 samples, 0.01%)</title><rect x="657.3" y="1941" width="0.1" height="15.0" fill="rgb(222,135,27)" rx="2" ry="2"/>
<text x="660.3" y="1951.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (118 samples, 0.03%)</title><rect x="546.9424460431669" y="1861" width="6.366906474820143" height="15.0" fill="rgb(237,64,29)" rx="2" ry="2" _orig_x="545.6" _orig_width="0.3"/>
<text x="549.9424460431669" y="1871.5" _orig_x="548.6"/>
</g>
<g class="hide">
<title>[perf-123126.map] (74 samples, 0.02%)</title><rect x="247.5" y="1621" width="0.2" height="15.0" fill="rgb(250,216,46)" rx="2" ry="2"/>
<text x="250.5" y="1631.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (66 samples, 0.02%)</title><rect x="583.1" y="1813" width="0.2" height="15.0" fill="rgb(221,23,28)" rx="2" ry="2"/>
<text x="586.1" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="391.6" y="1909" width="0.2" height="15.0" fill="rgb(220,192,50)" rx="2" ry="2"/>
<text x="394.6" y="1919.5"/>
</g>
<g class="hide">
<title>C2_CompilerThre (142 samples, 0.03%)</title><rect x="13.4" y="2053" width="0.4" height="15.0" fill="rgb(235,223,0)" rx="2" ry="2"/>
<text x="16.4" y="2063.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_item_get_work_userdata (58 samples, 0.01%)</title><rect x="81.9" y="2005" width="0.2" height="15.0" fill="rgb(238,104,6)" rx="2" ry="2"/>
<text x="84.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.03%)</title><rect x="794.8" y="1653" width="0.4" height="15.0" fill="rgb(249,15,29)" rx="2" ry="2"/>
<text x="797.8" y="1663.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (54 samples, 0.01%)</title><rect x="355.8" y="1845" width="0.2" height="15.0" fill="rgb(245,43,23)" rx="2" ry="2"/>
<text x="358.8" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (184 samples, 0.04%)</title><rect x="350.7" y="2037" width="0.5" height="15.0" fill="rgb(217,131,47)" rx="2" ry="2"/>
<text x="353.7" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (125 samples, 0.03%)</title><rect x="499.5" y="1813" width="0.4" height="15.0" fill="rgb(230,133,14)" rx="2" ry="2"/>
<text x="502.5" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="421" width="0.8" height="15.0" fill="rgb(242,117,25)" rx="2" ry="2"/>
<text x="57.8" y="431.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (46 samples, 0.01%)</title><rect x="499.7" y="1797" width="0.1" height="15.0" fill="rgb(240,77,29)" rx="2" ry="2"/>
<text x="502.7" y="1807.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (38 samples, 0.01%)</title><rect x="357.7" y="1861" width="0.1" height="15.0" fill="rgb(253,94,32)" rx="2" ry="2"/>
<text x="360.7" y="1871.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (80 samples, 0.02%)</title><rect x="484.9" y="1797" width="0.2" height="15.0" fill="rgb(253,21,33)" rx="2" ry="2"/>
<text x="487.9" y="1807.5"/>
</g>
<g class="hide">
<title>iwl_pcie_rx_handle_rb.constprop.0 (41 samples, 0.01%)</title><rect x="380.3" y="1941" width="0.2" height="15.0" fill="rgb(239,85,41)" rx="2" ry="2"/>
<text x="383.3" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="244.2" y="837" width="0.2" height="15.0" fill="rgb(224,7,38)" rx="2" ry="2"/>
<text x="247.2" y="847.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (172 samples, 0.04%)</title><rect x="787.6" y="2037" width="0.4" height="15.0" fill="rgb(227,8,40)" rx="2" ry="2"/>
<text x="790.6" y="2047.5"/>
</g>
<g class="hide">
<title>dbus-daemon (918 samples, 0.21%)</title><rect x="341.6" y="2053" width="2.5" height="15.0" fill="rgb(251,139,33)" rx="2" ry="2"/>
<text x="344.6" y="2063.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (46 samples, 0.01%)</title><rect x="626.4" y="1893" width="0.1" height="15.0" fill="rgb(223,79,15)" rx="2" ry="2"/>
<text x="629.4" y="1903.5"/>
</g>
<g class="hide">
<title>std::allocator&lt;Field*&gt;::~allocator (60 samples, 0.01%)</title><rect x="594.1" y="1845" width="0.1" height="15.0" fill="rgb(220,207,17)" rx="2" ry="2"/>
<text x="597.1" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="391.8" y="1877" width="0.2" height="15.0" fill="rgb(232,149,15)" rx="2" ry="2"/>
<text x="394.8" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (47 samples, 0.01%)</title><rect x="249.1" y="1861" width="0.1" height="15.0" fill="rgb(212,195,15)" rx="2" ry="2"/>
<text x="252.1" y="1871.5"/>
</g>
<g class="hide">
<title>ntfs_mbstoucs (237 samples, 0.05%)</title><rect x="779.1" y="2021" width="0.6" height="15.0" fill="rgb(229,11,29)" rx="2" ry="2"/>
<text x="782.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.02%)</title><rect x="1185.3" y="2005" width="0.2" height="15.0" fill="rgb(250,100,41)" rx="2" ry="2"/>
<text x="1188.3" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="795.2" y="1877" width="0.1" height="15.0" fill="rgb(242,40,54)" rx="2" ry="2"/>
<text x="798.2" y="1887.5"/>
</g>
<g class="hide">
<title>DirTree::update (628 samples, 0.15%)</title><rect x="265.1" y="1941" width="1.7" height="15.0" fill="rgb(214,112,53)" rx="2" ry="2"/>
<text x="268.1" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (122 samples, 0.03%)</title><rect x="237.4" y="1845" width="0.4" height="15.0" fill="rgb(254,133,14)" rx="2" ry="2"/>
<text x="240.4" y="1855.5"/>
</g>
<g class="hide">
<title>_dl_update_slotinfo (136 samples, 0.03%)</title><rect x="187.5" y="2037" width="0.3" height="15.0" fill="rgb(213,11,1)" rx="2" ry="2"/>
<text x="190.5" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="373" width="0.2" height="15.0" fill="rgb(234,45,33)" rx="2" ry="2"/>
<text x="30" y="383.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (47 samples, 0.01%)</title><rect x="642.8" y="1925" width="0.2" height="15.0" fill="rgb(211,208,19)" rx="2" ry="2"/>
<text x="645.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (48 samples, 0.01%)</title><rect x="458.0" y="1717" width="0.1" height="15.0" fill="rgb(248,199,48)" rx="2" ry="2"/>
<text x="461" y="1727.5"/>
</g>
<g class="hide">
<title>azx_get_pos_fifo (63 samples, 0.01%)</title><rect x="137.0" y="1845" width="0.1" height="15.0" fill="rgb(210,39,36)" rx="2" ry="2"/>
<text x="140" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (542 samples, 0.13%)</title><rect x="24.7" y="2005" width="1.5" height="15.0" fill="rgb(251,181,21)" rx="2" ry="2"/>
<text x="27.7" y="2015.5"/>
</g>
<g class="hide">
<title>DiskManager::ReadPage (287 samples, 0.07%)</title><rect x="515.1" y="1893" width="0.8" height="15.0" fill="rgb(224,46,46)" rx="2" ry="2"/>
<text x="518.1" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (58 samples, 0.01%)</title><rect x="358.0" y="1813" width="0.2" height="15.0" fill="rgb(254,73,52)" rx="2" ry="2"/>
<text x="361" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (454 samples, 0.11%)</title><rect x="50.6" y="2005" width="1.2" height="15.0" fill="rgb(206,95,47)" rx="2" ry="2"/>
<text x="53.6" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (52 samples, 0.01%)</title><rect x="245.2" y="821" width="0.1" height="15.0" fill="rgb(223,88,20)" rx="2" ry="2"/>
<text x="248.2" y="831.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (79 samples, 0.02%)</title><rect x="637.6" y="1813" width="0.2" height="15.0" fill="rgb(224,172,23)" rx="2" ry="2"/>
<text x="640.6" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (59 samples, 0.01%)</title><rect x="474.4" y="1845" width="0.1" height="15.0" fill="rgb(250,173,35)" rx="2" ry="2"/>
<text x="477.4" y="1855.5"/>
</g>
<g class="hide">
<title>Field::CompareGreaterThan (186 samples, 0.04%)</title><rect x="518.9" y="1893" width="0.6" height="15.0" fill="rgb(218,179,30)" rx="2" ry="2"/>
<text x="521.9" y="1903.5"/>
</g>
<g class="hide">
<title>Debounce::loop (1,139 samples, 0.26%)</title><rect x="333.7" y="2005" width="3.1" height="15.0" fill="rgb(251,61,52)" rx="2" ry="2"/>
<text x="336.7" y="2015.5"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (85 samples, 0.02%)</title><rect x="369.5" y="2021" width="0.3" height="15.0" fill="rgb(251,17,15)" rx="2" ry="2"/>
<text x="372.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="798.4" y="1845" width="0.1" height="15.0" fill="rgb(242,174,11)" rx="2" ry="2"/>
<text x="801.4" y="1855.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (284 samples, 0.07%)</title><rect x="355.6" y="1957" width="0.8" height="15.0" fill="rgb(235,211,24)" rx="2" ry="2"/>
<text x="358.6" y="1967.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (431 samples, 0.10%)</title><rect x="97.01438848920911" y="1765" width="23.345323741007192" height="15.0" fill="rgb(211,134,24)" rx="2" ry="2" _orig_x="524.4" _orig_width="1.1"/>
<text x="100.01438848920911" y="1775.5" _orig_x="527.4">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (577 samples, 0.13%)</title><rect x="352.9" y="1925" width="1.6" height="15.0" fill="rgb(244,67,23)" rx="2" ry="2"/>
<text x="355.9" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (37 samples, 0.01%)</title><rect x="450.8" y="1813" width="0.1" height="15.0" fill="rgb(228,41,35)" rx="2" ry="2"/>
<text x="453.8" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1525" width="0.8" height="15.0" fill="rgb(254,219,5)" rx="2" ry="2"/>
<text x="57.8" y="1535.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (194 samples, 0.04%)</title><rect x="383.4" y="2021" width="0.5" height="15.0" fill="rgb(251,99,54)" rx="2" ry="2"/>
<text x="386.4" y="2031.5"/>
</g>
<g class="hide">
<title>__libc_read (3,258 samples, 0.75%)</title><rect x="309.7" y="1989" width="8.9" height="15.0" fill="rgb(222,75,6)" rx="2" ry="2"/>
<text x="312.7" y="1999.5"/>
</g>
<g class="hide">
<title>G1_Young_RemSet (50 samples, 0.01%)</title><rect x="21.5" y="2053" width="0.1" height="15.0" fill="rgb(254,149,19)" rx="2" ry="2"/>
<text x="24.5" y="2063.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (44 samples, 0.01%)</title><rect x="640.3237410071952" y="1829" width="2.122302158273381" height="15.0" fill="rgb(242,11,7)" rx="2" ry="2" _orig_x="550.0" _orig_width="0.1"/>
<text x="643.3237410071952" y="1839.5" _orig_x="553"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1781" width="0.8" height="15.0" fill="rgb(237,72,30)" rx="2" ry="2"/>
<text x="57.8" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,975 samples, 2.08%)</title><rect x="708.3" y="1989" width="24.5" height="15.0" fill="rgb(209,207,38)" rx="2" ry="2"/>
<text x="711.3" y="1999.5">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (662 samples, 0.15%)</title><rect x="122.7" y="1925" width="1.9" height="15.0" fill="rgb(238,122,36)" rx="2" ry="2"/>
<text x="125.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="15.9" y="1733" width="0.1" height="15.0" fill="rgb(225,1,35)" rx="2" ry="2"/>
<text x="18.9" y="1743.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (110 samples, 0.03%)</title><rect x="602.1223021582753" y="1845" width="6.366906474820143" height="15.0" fill="rgb(214,177,40)" rx="2" ry="2" _orig_x="548.2" _orig_width="0.3"/>
<text x="605.1223021582753" y="1855.5" _orig_x="551.2"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;char*, char&gt; (103 samples, 0.02%)</title><rect x="491.4" y="1829" width="0.2" height="15.0" fill="rgb(216,24,14)" rx="2" ry="2"/>
<text x="494.4" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (67 samples, 0.02%)</title><rect x="272.2" y="1957" width="0.2" height="15.0" fill="rgb(218,85,11)" rx="2" ry="2"/>
<text x="275.2" y="1967.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::KeyAt (45 samples, 0.01%)</title><rect x="415.3" y="1877" width="0.2" height="15.0" fill="rgb(229,140,12)" rx="2" ry="2"/>
<text x="418.3" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (56 samples, 0.01%)</title><rect x="638.6" y="1861" width="0.2" height="15.0" fill="rgb(226,70,24)" rx="2" ry="2"/>
<text x="641.6" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown]  (116 samples, 0.03%)</title><rect x="204.5" y="2037" width="0.4" height="15.0" fill="rgb(239,133,14)" rx="2" ry="2"/>
<text x="207.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="391.8" y="2005" width="0.2" height="15.0" fill="rgb(248,192,22)" rx="2" ry="2"/>
<text x="394.8" y="2015.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (39 samples, 0.01%)</title><rect x="633.0" y="1749" width="0.1" height="15.0" fill="rgb(245,73,4)" rx="2" ry="2"/>
<text x="636" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (309 samples, 0.07%)</title><rect x="54.8" y="1941" width="0.8" height="15.0" fill="rgb(226,103,7)" rx="2" ry="2"/>
<text x="57.8" y="1951.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1893" width="0.1" height="15.0" fill="rgb(219,153,9)" rx="2" ry="2"/>
<text x="357.5" y="1903.5"/>
</g>
<g class="">
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (568 samples, 0.13%)</title><rect x="1018.093525179856" y="1829" width="31.834532374100718" height="15.0" fill="rgb(248,108,53)" rx="2" ry="2" _orig_x="567.8" _orig_width="1.5"/>
<text x="1021.093525179856" y="1839.5" _orig_x="570.8">std..</text>
</g>
<g class="">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (52 samples, 0.01%)</title><rect x="496.0071942446062" y="1765" width="4.244604316546762" height="15.0" fill="rgb(218,161,50)" rx="2" ry="2" _orig_x="543.2" _orig_width="0.2"/>
<text x="499.0071942446062" y="1775.5" _orig_x="546.2"/>
</g>
<g class="hide">
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (135 samples, 0.03%)</title><rect x="620.2" y="1797" width="0.4" height="15.0" fill="rgb(233,226,42)" rx="2" ry="2"/>
<text x="623.2" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (203 samples, 0.05%)</title><rect x="20.8" y="1877" width="0.5" height="15.0" fill="rgb(235,60,47)" rx="2" ry="2"/>
<text x="23.8" y="1887.5"/>
</g>
<g class="hide">
<title>_nv033085rm (763 samples, 0.18%)</title><rect x="377.1" y="2037" width="2.1" height="15.0" fill="rgb(254,107,17)" rx="2" ry="2"/>
<text x="380.1" y="2047.5"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (146 samples, 0.03%)</title><rect x="269.9" y="1925" width="0.4" height="15.0" fill="rgb(243,104,27)" rx="2" ry="2"/>
<text x="272.9" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176 samples, 0.04%)</title><rect x="390.9" y="1925" width="0.5" height="15.0" fill="rgb(237,46,49)" rx="2" ry="2"/>
<text x="393.9" y="1935.5"/>
</g>
<g class="hide">
<title>DiskManager::ReadPhysicalPage (256 samples, 0.06%)</title><rect x="515.1" y="1877" width="0.7" height="15.0" fill="rgb(246,210,48)" rx="2" ry="2"/>
<text x="518.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="51.9" y="2005" width="0.2" height="15.0" fill="rgb(228,145,32)" rx="2" ry="2"/>
<text x="54.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (911 samples, 0.21%)</title><rect x="408.3" y="1701" width="2.5" height="15.0" fill="rgb(250,172,16)" rx="2" ry="2"/>
<text x="411.3" y="1711.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1205" width="0.6" height="15.0" fill="rgb(252,92,12)" rx="2" ry="2"/>
<text x="246.3" y="1215.5"/>
</g>
<g class="hide">
<title>Field::DeserializeFrom (2,103 samples, 0.49%)</title><rect x="417.1" y="1829" width="5.8" height="15.0" fill="rgb(239,8,45)" rx="2" ry="2"/>
<text x="420.1" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (42 samples, 0.01%)</title><rect x="27.0" y="197" width="0.1" height="15.0" fill="rgb(221,7,51)" rx="2" ry="2"/>
<text x="30" y="207.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (38 samples, 0.01%)</title><rect x="373.5" y="1973" width="0.1" height="15.0" fill="rgb(231,153,54)" rx="2" ry="2"/>
<text x="376.5" y="1983.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (43 samples, 0.01%)</title><rect x="593.9" y="1829" width="0.1" height="15.0" fill="rgb(243,171,53)" rx="2" ry="2"/>
<text x="596.9" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (41 samples, 0.01%)</title><rect x="431.1" y="1797" width="0.1" height="15.0" fill="rgb(252,39,44)" rx="2" ry="2"/>
<text x="434.1" y="1807.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (77 samples, 0.02%)</title><rect x="597.5" y="1797" width="0.2" height="15.0" fill="rgb(237,62,24)" rx="2" ry="2"/>
<text x="600.5" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1093" width="0.2" height="15.0" fill="rgb(231,228,43)" rx="2" ry="2"/>
<text x="247.2" y="1103.5"/>
</g>
<g class="hide">
<title>[code] (108 samples, 0.03%)</title><rect x="245.0" y="1413" width="0.3" height="15.0" fill="rgb(240,14,16)" rx="2" ry="2"/>
<text x="248" y="1423.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="1189.2" y="1957" width="0.1" height="15.0" fill="rgb(251,120,6)" rx="2" ry="2"/>
<text x="1192.2" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (86 samples, 0.02%)</title><rect x="342.8" y="2021" width="0.3" height="15.0" fill="rgb(239,67,47)" rx="2" ry="2"/>
<text x="345.8" y="2031.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (57 samples, 0.01%)</title><rect x="429.7" y="1781" width="0.2" height="15.0" fill="rgb(244,100,25)" rx="2" ry="2"/>
<text x="432.7" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="26.6" y="1829" width="0.1" height="15.0" fill="rgb(214,4,34)" rx="2" ry="2"/>
<text x="29.6" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="469" width="0.8" height="15.0" fill="rgb(244,70,5)" rx="2" ry="2"/>
<text x="57.8" y="479.5"/>
</g>
<g class="hide">
<title>DirTree::update (41 samples, 0.01%)</title><rect x="264.0" y="1957" width="0.1" height="15.0" fill="rgb(211,92,27)" rx="2" ry="2"/>
<text x="267" y="1967.5"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (45 samples, 0.01%)</title><rect x="14.0" y="2037" width="0.1" height="15.0" fill="rgb(251,42,20)" rx="2" ry="2"/>
<text x="17" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (4,409 samples, 1.02%)</title><rect x="238.3" y="2021" width="12.0" height="15.0" fill="rgb(233,127,47)" rx="2" ry="2"/>
<text x="241.3" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (40 samples, 0.01%)</title><rect x="629.5" y="1829" width="0.1" height="15.0" fill="rgb(250,58,21)" rx="2" ry="2"/>
<text x="632.5" y="1839.5"/>
</g>
<g class="hide">
<title>dockerd (47 samples, 0.01%)</title><rect x="344.1" y="2053" width="0.1" height="15.0" fill="rgb(250,1,5)" rx="2" ry="2"/>
<text x="347.1" y="2063.5"/>
</g>
<g class="hide">
<title>[dbus-daemon] (112 samples, 0.03%)</title><rect x="341.7" y="2021" width="0.3" height="15.0" fill="rgb(225,20,19)" rx="2" ry="2"/>
<text x="344.7" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (94 samples, 0.02%)</title><rect x="27.0" y="1973" width="0.2" height="15.0" fill="rgb(248,225,48)" rx="2" ry="2"/>
<text x="30" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (79 samples, 0.02%)</title><rect x="344.3" y="2037" width="0.2" height="15.0" fill="rgb(242,133,9)" rx="2" ry="2"/>
<text x="347.3" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (3,209 samples, 0.74%)</title><rect x="238.5" y="1829" width="8.8" height="15.0" fill="rgb(250,34,30)" rx="2" ry="2"/>
<text x="241.5" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (96 samples, 0.02%)</title><rect x="245.1" y="1301" width="0.2" height="15.0" fill="rgb(251,210,53)" rx="2" ry="2"/>
<text x="248.1" y="1311.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_move_if_noexcept_a&lt;Row*, Row*, std::allocator&lt;Row&gt; &gt; (596 samples, 0.14%)</title><rect x="647.1" y="1925" width="1.7" height="15.0" fill="rgb(234,72,39)" rx="2" ry="2"/>
<text x="650.1" y="1935.5"/>
</g>
<g class="hide">
<title>azx_pcm_pointer (8,835 samples, 2.05%)</title><rect x="136.5" y="1861" width="24.1" height="15.0" fill="rgb(220,199,14)" rx="2" ry="2"/>
<text x="139.5" y="1871.5">a..</text>
</g>
<g class="hide">
<title>[unknown] (816 samples, 0.19%)</title><rect x="361.6" y="2005" width="2.2" height="15.0" fill="rgb(225,165,23)" rx="2" ry="2"/>
<text x="364.6" y="2015.5"/>
</g>
<g class="hide">
<title>kworker/4:1-eve (364 samples, 0.08%)</title><rect x="387.4" y="2053" width="1.0" height="15.0" fill="rgb(236,93,0)" rx="2" ry="2"/>
<text x="390.4" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (237 samples, 0.05%)</title><rect x="20.7" y="1925" width="0.6" height="15.0" fill="rgb(211,81,53)" rx="2" ry="2"/>
<text x="23.7" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1109" width="0.1" height="15.0" fill="rgb(214,149,35)" rx="2" ry="2"/>
<text x="247" y="1119.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (51 samples, 0.01%)</title><rect x="130.97122302158368" y="1733" width="2.122302158273381" height="15.0" fill="rgb(210,34,41)" rx="2" ry="2" _orig_x="526.0" _orig_width="0.1"/>
<text x="133.97122302158368" y="1743.5" _orig_x="529"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="49.3" y="1925" width="0.2" height="15.0" fill="rgb(232,116,20)" rx="2" ry="2"/>
<text x="52.3" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (100 samples, 0.02%)</title><rect x="456.8" y="1685" width="0.3" height="15.0" fill="rgb(227,41,39)" rx="2" ry="2"/>
<text x="459.8" y="1695.5"/>
</g>
<g class="hide">
<title>__tls_get_addr (135 samples, 0.03%)</title><rect x="172.7" y="2021" width="0.3" height="15.0" fill="rgb(225,86,16)" rx="2" ry="2"/>
<text x="175.7" y="2031.5"/>
</g>
<g class="hide">
<title>log_write_notifier (39 samples, 0.01%)</title><rect x="373.8" y="1957" width="0.1" height="15.0" fill="rgb(236,220,8)" rx="2" ry="2"/>
<text x="376.8" y="1967.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (42 samples, 0.01%)</title><rect x="588.9" y="1765" width="0.1" height="15.0" fill="rgb(214,216,20)" rx="2" ry="2"/>
<text x="591.9" y="1775.5"/>
</g>
<g class="hide">
<title>thread_native_entry (50 samples, 0.01%)</title><rect x="49.8" y="2021" width="0.1" height="15.0" fill="rgb(225,3,44)" rx="2" ry="2"/>
<text x="52.8" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (166 samples, 0.04%)</title><rect x="655.2" y="1877" width="0.5" height="15.0" fill="rgb(222,9,2)" rx="2" ry="2"/>
<text x="658.2" y="1887.5"/>
</g>
<g class="hide">
<title>pa_sink_get_requested_latency_within_thread (71 samples, 0.02%)</title><rect x="182.8" y="2021" width="0.2" height="15.0" fill="rgb(226,73,30)" rx="2" ry="2"/>
<text x="185.8" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field**&gt; (47 samples, 0.01%)</title><rect x="507.9" y="1829" width="0.1" height="15.0" fill="rgb(206,92,16)" rx="2" ry="2"/>
<text x="510.9" y="1839.5"/>
</g>
<g class="hide">
<title>std::max&lt;unsigned long&gt; (46 samples, 0.01%)</title><rect x="480.0" y="1797" width="0.2" height="15.0" fill="rgb(250,172,6)" rx="2" ry="2"/>
<text x="483" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (348 samples, 0.08%)</title><rect x="381.7" y="2037" width="1.0" height="15.0" fill="rgb(234,71,16)" rx="2" ry="2"/>
<text x="384.7" y="2047.5"/>
</g>
<g class="hide">
<title>JS_Helper (140 samples, 0.03%)</title><rect x="29.0" y="2053" width="0.3" height="15.0" fill="rgb(235,189,46)" rx="2" ry="2"/>
<text x="32" y="2063.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (85 samples, 0.02%)</title><rect x="598.8" y="1829" width="0.2" height="15.0" fill="rgb(205,154,52)" rx="2" ry="2"/>
<text x="601.8" y="1839.5"/>
</g>
<g class="parent">
<title>main (92,115 samples, 21.34%)</title><rect x="10" y="2021" width="1180" height="15.0" fill="rgb(228,88,35)" rx="2" ry="2" _orig_x="410.8" _orig_width="251.7"/>
<text x="13" y="2031.5" _orig_x="413.8">main </text>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (100 samples, 0.02%)</title><rect x="595.9" y="1909" width="0.3" height="15.0" fill="rgb(232,15,24)" rx="2" ry="2"/>
<text x="598.9" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (99 samples, 0.02%)</title><rect x="373.6" y="2037" width="0.3" height="15.0" fill="rgb(238,132,5)" rx="2" ry="2"/>
<text x="376.6" y="2047.5"/>
</g>
<g class="">
<title>operator new (54 samples, 0.01%)</title><rect x="512.9856115107923" y="1845" width="4.244604316546762" height="15.0" fill="rgb(227,132,15)" rx="2" ry="2" _orig_x="544.0" _orig_width="0.2"/>
<text x="515.9856115107923" y="1855.5" _orig_x="547"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19,701 samples, 4.56%)</title><rect x="1074.0" y="1845" width="53.8" height="15.0" fill="rgb(223,203,54)" rx="2" ry="2"/>
<text x="1077" y="1855.5">[[kern..</text>
</g>
<g class="hide">
<title>[code] (61 samples, 0.01%)</title><rect x="21.1" y="1701" width="0.1" height="15.0" fill="rgb(216,161,26)" rx="2" ry="2"/>
<text x="24.1" y="1711.5"/>
</g>
<g class="hide">
<title>__strcpy_avx2 (50 samples, 0.01%)</title><rect x="768.9" y="2021" width="0.1" height="15.0" fill="rgb(211,207,5)" rx="2" ry="2"/>
<text x="771.9" y="2031.5"/>
</g>
<g class="hide">
<title>VMThread::evaluate_operation (46 samples, 0.01%)</title><rect x="49.8" y="1957" width="0.1" height="15.0" fill="rgb(249,150,30)" rx="2" ry="2"/>
<text x="52.8" y="1967.5"/>
</g>
<g class="hide">
<title>snd_pcm_state (109 samples, 0.03%)</title><rect x="116.9" y="2005" width="0.3" height="15.0" fill="rgb(207,78,41)" rx="2" ry="2"/>
<text x="119.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (217 samples, 0.05%)</title><rect x="390.8" y="1941" width="0.6" height="15.0" fill="rgb(247,207,48)" rx="2" ry="2"/>
<text x="393.8" y="1951.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (54 samples, 0.01%)</title><rect x="271.0431654676273" y="1765" width="2.122302158273381" height="15.0" fill="rgb(218,13,19)" rx="2" ry="2" _orig_x="532.6" _orig_width="0.1"/>
<text x="274.0431654676273" y="1775.5" _orig_x="535.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (357 samples, 0.08%)</title><rect x="387.5" y="2021" width="0.9" height="15.0" fill="rgb(254,145,23)" rx="2" ry="2"/>
<text x="390.5" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (206 samples, 0.05%)</title><rect x="52.2" y="1797" width="0.6" height="15.0" fill="rgb(224,3,11)" rx="2" ry="2"/>
<text x="55.2" y="1807.5"/>
</g>
<g class="hide">
<title>pa_memblockq_drop (133 samples, 0.03%)</title><rect x="194.4" y="2037" width="0.4" height="15.0" fill="rgb(236,48,54)" rx="2" ry="2"/>
<text x="197.4" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1557" width="0.2" height="15.0" fill="rgb(226,99,22)" rx="2" ry="2"/>
<text x="249.9" y="1567.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (1,541 samples, 0.36%)</title><rect x="459.8" y="1813" width="4.2" height="15.0" fill="rgb(230,125,8)" rx="2" ry="2"/>
<text x="462.8" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="391.8" y="2037" width="0.2" height="15.0" fill="rgb(251,194,5)" rx="2" ry="2"/>
<text x="394.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (320 samples, 0.07%)</title><rect x="794.3" y="1701" width="0.9" height="15.0" fill="rgb(212,185,0)" rx="2" ry="2"/>
<text x="797.3" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.02%)</title><rect x="445.2" y="1509" width="0.3" height="15.0" fill="rgb(218,158,25)" rx="2" ry="2"/>
<text x="448.2" y="1519.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="354.9" y="1957" width="0.3" height="15.0" fill="rgb(217,42,3)" rx="2" ry="2"/>
<text x="357.9" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="381.1" y="2005" width="0.6" height="15.0" fill="rgb(205,222,3)" rx="2" ry="2"/>
<text x="384.1" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1781" width="0.2" height="15.0" fill="rgb(236,73,10)" rx="2" ry="2"/>
<text x="30" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.04%)</title><rect x="364.8" y="1973" width="0.5" height="15.0" fill="rgb(229,204,19)" rx="2" ry="2"/>
<text x="367.8" y="1983.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (63 samples, 0.01%)</title><rect x="502.2" y="1749" width="0.2" height="15.0" fill="rgb(221,192,42)" rx="2" ry="2"/>
<text x="505.2" y="1759.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (37 samples, 0.01%)</title><rect x="464.17266187050546" y="1765" width="2.122302158273381" height="15.0" fill="rgb(221,128,6)" rx="2" ry="2" _orig_x="541.7" _orig_width="0.1"/>
<text x="467.17266187050546" y="1775.5" _orig_x="544.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.03%)</title><rect x="798.2" y="2021" width="0.3" height="15.0" fill="rgb(213,186,33)" rx="2" ry="2"/>
<text x="801.2" y="2031.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (410 samples, 0.09%)</title><rect x="489.0" y="1813" width="1.1" height="15.0" fill="rgb(209,95,37)" rx="2" ry="2"/>
<text x="492" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (511 samples, 0.12%)</title><rect x="353.1" y="1893" width="1.4" height="15.0" fill="rgb(248,70,16)" rx="2" ry="2"/>
<text x="356.1" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1525" width="0.2" height="15.0" fill="rgb(223,129,32)" rx="2" ry="2"/>
<text x="30" y="1535.5"/>
</g>
<g class="hide">
<title>os::sleep (80 samples, 0.02%)</title><rect x="24.1" y="1989" width="0.2" height="15.0" fill="rgb(251,180,27)" rx="2" ry="2"/>
<text x="27.1" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (284 samples, 0.07%)</title><rect x="631.0" y="1797" width="0.7" height="15.0" fill="rgb(250,162,3)" rx="2" ry="2"/>
<text x="634" y="1807.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1973" width="0.1" height="15.0" fill="rgb(211,65,44)" rx="2" ry="2"/>
<text x="357.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.02%)</title><rect x="391.5" y="1957" width="0.3" height="15.0" fill="rgb(240,67,39)" rx="2" ry="2"/>
<text x="394.5" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (79 samples, 0.02%)</title><rect x="358.0" y="1909" width="0.2" height="15.0" fill="rgb(216,64,52)" rx="2" ry="2"/>
<text x="361" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="1957" width="1.9" height="15.0" fill="rgb(214,66,30)" rx="2" ry="2"/>
<text x="17.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,548 samples, 1.75%)</title><rect x="216.4" y="1973" width="20.6" height="15.0" fill="rgb(240,8,44)" rx="2" ry="2"/>
<text x="219.4" y="1983.5">[..</text>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="243.2" y="645" width="0.1" height="15.0" fill="rgb(225,18,19)" rx="2" ry="2"/>
<text x="246.2" y="655.5"/>
</g>
<g class="hide">
<title>[code] (562 samples, 0.13%)</title><rect x="18.8" y="1765" width="1.6" height="15.0" fill="rgb(244,168,11)" rx="2" ry="2"/>
<text x="21.8" y="1775.5"/>
</g>
<g class="hide">
<title>operator new[] (80 samples, 0.02%)</title><rect x="304.5" y="1957" width="0.2" height="15.0" fill="rgb(205,122,25)" rx="2" ry="2"/>
<text x="307.5" y="1967.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr (2,751 samples, 0.64%)</title><rect x="163.3" y="1893" width="7.5" height="15.0" fill="rgb(253,19,34)" rx="2" ry="2"/>
<text x="166.3" y="1903.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (76 samples, 0.02%)</title><rect x="196.762589928059" y="1733" width="4.244604316546762" height="15.0" fill="rgb(230,48,6)" rx="2" ry="2" _orig_x="529.1" _orig_width="0.2"/>
<text x="199.762589928059" y="1743.5" _orig_x="532.1"/>
</g>
<g class="hide">
<title>g_main_context_check (78 samples, 0.02%)</title><rect x="365.8" y="2021" width="0.2" height="15.0" fill="rgb(252,177,26)" rx="2" ry="2"/>
<text x="368.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,127 samples, 2.35%)</title><rect x="276.7" y="1861" width="27.7" height="15.0" fill="rgb(208,66,3)" rx="2" ry="2"/>
<text x="279.7" y="1871.5">[[..</text>
</g>
<g class="hide">
<title>start_thread (56 samples, 0.01%)</title><rect x="13.3" y="2037" width="0.1" height="15.0" fill="rgb(225,60,46)" rx="2" ry="2"/>
<text x="16.3" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1173" width="0.2" height="15.0" fill="rgb(249,27,32)" rx="2" ry="2"/>
<text x="30" y="1183.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (37 samples, 0.01%)</title><rect x="481.0" y="1765" width="0.1" height="15.0" fill="rgb(209,150,48)" rx="2" ry="2"/>
<text x="484" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field**, Field*&gt; (144 samples, 0.03%)</title><rect x="592.4" y="1861" width="0.4" height="15.0" fill="rgb(246,78,33)" rx="2" ry="2"/>
<text x="595.4" y="1871.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (41 samples, 0.01%)</title><rect x="373.8" y="2021" width="0.1" height="15.0" fill="rgb(245,32,9)" rx="2" ry="2"/>
<text x="376.8" y="2031.5"/>
</g>
<g class="hide">
<title>Row::~Row (5,545 samples, 1.28%)</title><rect x="579.1" y="1893" width="15.2" height="15.0" fill="rgb(220,41,23)" rx="2" ry="2"/>
<text x="582.1" y="1903.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (83 samples, 0.02%)</title><rect x="474.0" y="1829" width="0.2" height="15.0" fill="rgb(225,66,37)" rx="2" ry="2"/>
<text x="477" y="1839.5"/>
</g>
<g class="hide">
<title>Row::Row (275 samples, 0.06%)</title><rect x="430.8" y="1861" width="0.8" height="15.0" fill="rgb(224,37,40)" rx="2" ry="2"/>
<text x="433.8" y="1871.5"/>
</g>
<g class="hide">
<title>thread_native_entry (56 samples, 0.01%)</title><rect x="21.6" y="2021" width="0.2" height="15.0" fill="rgb(218,158,1)" rx="2" ry="2"/>
<text x="24.6" y="2031.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (960 samples, 0.22%)</title><rect x="649.5" y="1957" width="2.7" height="15.0" fill="rgb(216,68,7)" rx="2" ry="2"/>
<text x="652.5" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (103 samples, 0.02%)</title><rect x="245.1" y="1381" width="0.2" height="15.0" fill="rgb(212,156,17)" rx="2" ry="2"/>
<text x="248.1" y="1391.5"/>
</g>
<g class="hide">
<title>Row::SerializeTo (461 samples, 0.11%)</title><rect x="640.6" y="1941" width="1.2" height="15.0" fill="rgb(223,192,29)" rx="2" ry="2"/>
<text x="643.6" y="1951.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned_erms (39 samples, 0.01%)</title><rect x="768.2" y="2021" width="0.2" height="15.0" fill="rgb(216,11,7)" rx="2" ry="2"/>
<text x="771.2" y="2031.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (282 samples, 0.07%)</title><rect x="355.6" y="1925" width="0.8" height="15.0" fill="rgb(254,149,20)" rx="2" ry="2"/>
<text x="358.6" y="1935.5"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (59 samples, 0.01%)</title><rect x="344.6" y="2021" width="0.1" height="15.0" fill="rgb(229,189,27)" rx="2" ry="2"/>
<text x="347.6" y="2031.5"/>
</g>
<g class="hide">
<title>VM_Operation::evaluate (46 samples, 0.01%)</title><rect x="49.8" y="1941" width="0.1" height="15.0" fill="rgb(245,187,32)" rx="2" ry="2"/>
<text x="52.8" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="837" width="0.8" height="15.0" fill="rgb(246,37,22)" rx="2" ry="2"/>
<text x="57.8" y="847.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::GetKeySize (157 samples, 0.04%)</title><rect x="439.1" y="1877" width="0.4" height="15.0" fill="rgb(240,106,43)" rx="2" ry="2"/>
<text x="442.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="17.0" y="1877" width="0.1" height="15.0" fill="rgb(209,181,6)" rx="2" ry="2"/>
<text x="20" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (519 samples, 0.12%)</title><rect x="632.2" y="1813" width="1.4" height="15.0" fill="rgb(207,16,15)" rx="2" ry="2"/>
<text x="635.2" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (290 samples, 0.07%)</title><rect x="390.6" y="1973" width="0.8" height="15.0" fill="rgb(225,95,37)" rx="2" ry="2"/>
<text x="393.6" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="392.0" y="1845" width="0.1" height="15.0" fill="rgb(247,216,1)" rx="2" ry="2"/>
<text x="395" y="1855.5"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (54 samples, 0.01%)</title><rect x="342.8" y="2005" width="0.2" height="15.0" fill="rgb(252,94,17)" rx="2" ry="2"/>
<text x="345.8" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (294 samples, 0.07%)</title><rect x="246.1" y="1589" width="0.8" height="15.0" fill="rgb(249,92,14)" rx="2" ry="2"/>
<text x="249.1" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="1973" width="0.2" height="15.0" fill="rgb(252,42,39)" rx="2" ry="2"/>
<text x="801" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="245.6" y="1221" width="0.2" height="15.0" fill="rgb(234,21,33)" rx="2" ry="2"/>
<text x="248.6" y="1231.5"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (94 samples, 0.02%)</title><rect x="361.8" y="1989" width="0.2" height="15.0" fill="rgb(230,140,1)" rx="2" ry="2"/>
<text x="364.8" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (49 samples, 0.01%)</title><rect x="249.1" y="1877" width="0.1" height="15.0" fill="rgb(216,137,53)" rx="2" ry="2"/>
<text x="252.1" y="1887.5"/>
</g>
<g class="hide">
<title>pool-tracker-st (80 samples, 0.02%)</title><rect x="795.8" y="2053" width="0.2" height="15.0" fill="rgb(231,147,40)" rx="2" ry="2"/>
<text x="798.8" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (126 samples, 0.03%)</title><rect x="371.8" y="2037" width="0.3" height="15.0" fill="rgb(237,156,20)" rx="2" ry="2"/>
<text x="374.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="55.7" y="1925" width="0.2" height="15.0" fill="rgb(233,90,12)" rx="2" ry="2"/>
<text x="58.7" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1765" width="0.2" height="15.0" fill="rgb(254,25,39)" rx="2" ry="2"/>
<text x="30" y="1775.5"/>
</g>
<g class="hide">
<title>Schema::GetColumnCount (62 samples, 0.01%)</title><rect x="470.9" y="1845" width="0.1" height="15.0" fill="rgb(223,25,52)" rx="2" ry="2"/>
<text x="473.9" y="1855.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (47 samples, 0.01%)</title><rect x="536.3309352517999" y="1861" width="2.122302158273381" height="15.0" fill="rgb(232,129,13)" rx="2" ry="2" _orig_x="545.1" _orig_width="0.1"/>
<text x="539.3309352517999" y="1871.5" _orig_x="548.1"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (44 samples, 0.01%)</title><rect x="44.7" y="2021" width="0.1" height="15.0" fill="rgb(238,96,43)" rx="2" ry="2"/>
<text x="47.7" y="2031.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator* (43 samples, 0.01%)</title><rect x="532.0863309352522" y="1861" width="4.244604316546762" height="15.0" fill="rgb(226,97,26)" rx="2" ry="2" _orig_x="544.9" _orig_width="0.2"/>
<text x="535.0863309352522" y="1871.5" _orig_x="547.9"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (252 samples, 0.06%)</title><rect x="386.0" y="1973" width="0.6" height="15.0" fill="rgb(225,82,48)" rx="2" ry="2"/>
<text x="389" y="1983.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (39 samples, 0.01%)</title><rect x="485.7" y="1845" width="0.1" height="15.0" fill="rgb(250,116,50)" rx="2" ry="2"/>
<text x="488.7" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1429" width="0.8" height="15.0" fill="rgb(243,147,30)" rx="2" ry="2"/>
<text x="57.8" y="1439.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="52.1" y="2021" width="0.7" height="15.0" fill="rgb(246,154,3)" rx="2" ry="2"/>
<text x="55.1" y="2031.5"/>
</g>
<g class="hide">
<title>runtime.selectgo (160 samples, 0.04%)</title><rect x="341.0" y="1989" width="0.4" height="15.0" fill="rgb(210,104,41)" rx="2" ry="2"/>
<text x="344" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="44.7" y="1989" width="0.1" height="15.0" fill="rgb(253,5,2)" rx="2" ry="2"/>
<text x="47.7" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (76 samples, 0.02%)</title><rect x="267.4" y="1925" width="0.3" height="15.0" fill="rgb(214,110,40)" rx="2" ry="2"/>
<text x="270.4" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (167 samples, 0.04%)</title><rect x="244.0" y="1269" width="0.4" height="15.0" fill="rgb(216,5,10)" rx="2" ry="2"/>
<text x="247" y="1279.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (89 samples, 0.02%)</title><rect x="248.4" y="1861" width="0.2" height="15.0" fill="rgb(239,115,27)" rx="2" ry="2"/>
<text x="251.4" y="1871.5"/>
</g>
<g class="hide">
<title>BPlusTreeIndex::AdjustBufferFor (225 samples, 0.05%)</title><rect x="639.7" y="1957" width="0.6" height="15.0" fill="rgb(216,28,30)" rx="2" ry="2"/>
<text x="642.7" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="869" width="0.8" height="15.0" fill="rgb(238,133,51)" rx="2" ry="2"/>
<text x="57.8" y="879.5"/>
</g>
<g class="hide">
<title>pa_sink_render_into_full (351 samples, 0.08%)</title><rect x="84.7" y="2005" width="1.0" height="15.0" fill="rgb(236,182,14)" rx="2" ry="2"/>
<text x="87.7" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="933" width="0.2" height="15.0" fill="rgb(207,89,38)" rx="2" ry="2"/>
<text x="30" y="943.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="798.4" y="1829" width="0.1" height="15.0" fill="rgb(229,129,27)" rx="2" ry="2"/>
<text x="801.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (228 samples, 0.05%)</title><rect x="515.2" y="1797" width="0.6" height="15.0" fill="rgb(232,166,44)" rx="2" ry="2"/>
<text x="518.2" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (139 samples, 0.03%)</title><rect x="20.9" y="1781" width="0.4" height="15.0" fill="rgb(233,195,36)" rx="2" ry="2"/>
<text x="23.9" y="1791.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (526 samples, 0.12%)</title><rect x="10.0" y="2037" width="1.5" height="15.0" fill="rgb(209,60,53)" rx="2" ry="2"/>
<text x="13" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (51 samples, 0.01%)</title><rect x="505.9" y="1765" width="0.1" height="15.0" fill="rgb(242,225,10)" rx="2" ry="2"/>
<text x="508.9" y="1775.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (165 samples, 0.04%)</title><rect x="351.6906474820148" y="1749" width="10.611510791366905" height="15.0" fill="rgb(215,161,31)" rx="2" ry="2" _orig_x="536.4" _orig_width="0.5"/>
<text x="354.6906474820148" y="1759.5" _orig_x="539.4"/>
</g>
<g class="">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (52 samples, 0.01%)</title><rect x="404.7482014388494" y="1749" width="2.122302158273381" height="15.0" fill="rgb(212,88,49)" rx="2" ry="2" _orig_x="538.9" _orig_width="0.1"/>
<text x="407.7482014388494" y="1759.5" _orig_x="541.9"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="243.2" y="581" width="0.1" height="15.0" fill="rgb(252,172,35)" rx="2" ry="2"/>
<text x="246.2" y="591.5"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.01%)</title><rect x="244.0" y="1253" width="0.1" height="15.0" fill="rgb(249,42,5)" rx="2" ry="2"/>
<text x="247" y="1263.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (340 samples, 0.08%)</title><rect x="387.5" y="1989" width="0.9" height="15.0" fill="rgb(210,191,48)" rx="2" ry="2"/>
<text x="390.5" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.2" y="709" width="0.2" height="15.0" fill="rgb(207,71,44)" rx="2" ry="2"/>
<text x="247.2" y="719.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (172 samples, 0.04%)</title><rect x="244.0" y="1365" width="0.4" height="15.0" fill="rgb(231,12,52)" rx="2" ry="2"/>
<text x="247" y="1375.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.03%)</title><rect x="162.5" y="1909" width="0.3" height="15.0" fill="rgb(213,151,48)" rx="2" ry="2"/>
<text x="165.5" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (423 samples, 0.10%)</title><rect x="242.1" y="1109" width="1.2" height="15.0" fill="rgb(233,207,25)" rx="2" ry="2"/>
<text x="245.1" y="1119.5"/>
</g>
<g class="hide">
<title>[code] (73 samples, 0.02%)</title><rect x="209.8" y="1765" width="0.2" height="15.0" fill="rgb(218,199,41)" rx="2" ry="2"/>
<text x="212.8" y="1775.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (55 samples, 0.01%)</title><rect x="475.8" y="1829" width="0.1" height="15.0" fill="rgb(238,167,18)" rx="2" ry="2"/>
<text x="478.8" y="1839.5"/>
</g>
<g class="hide">
<title>__select (40 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.1" height="15.0" fill="rgb(228,56,33)" rx="2" ry="2"/>
<text x="1192.2" y="2047.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (179 samples, 0.04%)</title><rect x="359.8" y="2005" width="0.4" height="15.0" fill="rgb(207,85,49)" rx="2" ry="2"/>
<text x="362.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (767 samples, 0.18%)</title><rect x="337.6" y="1973" width="2.1" height="15.0" fill="rgb(245,182,46)" rx="2" ry="2"/>
<text x="340.6" y="1983.5"/>
</g>
<g class="hide">
<title>snd_pcm_status_set_audio_htstamp_config (119 samples, 0.03%)</title><rect x="186.2" y="2021" width="0.4" height="15.0" fill="rgb(212,33,24)" rx="2" ry="2"/>
<text x="189.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.03%)</title><rect x="390.0" y="1973" width="0.4" height="15.0" fill="rgb(224,116,14)" rx="2" ry="2"/>
<text x="393" y="1983.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (186 samples, 0.04%)</title><rect x="650.9" y="1893" width="0.6" height="15.0" fill="rgb(207,145,28)" rx="2" ry="2"/>
<text x="653.9" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="203.1" y="2005" width="0.2" height="15.0" fill="rgb(213,7,21)" rx="2" ry="2"/>
<text x="206.1" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (339 samples, 0.08%)</title><rect x="606.0" y="1781" width="0.9" height="15.0" fill="rgb(240,158,40)" rx="2" ry="2"/>
<text x="609" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.04%)</title><rect x="46.8" y="1989" width="0.4" height="15.0" fill="rgb(248,141,11)" rx="2" ry="2"/>
<text x="49.8" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="50.2" y="1941" width="0.2" height="15.0" fill="rgb(229,92,28)" rx="2" ry="2"/>
<text x="53.2" y="1951.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (72 samples, 0.02%)</title><rect x="926.8345323741016" y="1861" width="4.244604316546762" height="15.0" fill="rgb(249,65,21)" rx="2" ry="2" _orig_x="563.5" _orig_width="0.2"/>
<text x="929.8345323741016" y="1871.5" _orig_x="566.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,362 samples, 1.24%)</title><rect x="683.0" y="1909" width="14.6" height="15.0" fill="rgb(238,168,38)" rx="2" ry="2"/>
<text x="686" y="1919.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (41 samples, 0.01%)</title><rect x="471.8" y="1845" width="0.1" height="15.0" fill="rgb(238,103,33)" rx="2" ry="2"/>
<text x="474.8" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (456 samples, 0.11%)</title><rect x="444.3" y="1605" width="1.2" height="15.0" fill="rgb(254,41,9)" rx="2" ry="2"/>
<text x="447.3" y="1615.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="1189.2" y="1973" width="0.1" height="15.0" fill="rgb(238,198,35)" rx="2" ry="2"/>
<text x="1192.2" y="1983.5"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (53 samples, 0.01%)</title><rect x="346.0" y="2021" width="0.1" height="15.0" fill="rgb(207,187,44)" rx="2" ry="2"/>
<text x="349" y="2031.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (93 samples, 0.02%)</title><rect x="1098.7410071942459" y="1845" width="4.244604316546762" height="15.0" fill="rgb(206,191,13)" rx="2" ry="2" _orig_x="571.6" _orig_width="0.2"/>
<text x="1101.7410071942459" y="1855.5" _orig_x="574.6"/>
</g>
<g class="hide">
<title>std::__detail::_Mod_range_hashing::operator (41 samples, 0.01%)</title><rect x="465.8" y="1701" width="0.1" height="15.0" fill="rgb(215,59,9)" rx="2" ry="2"/>
<text x="468.8" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="391.8" y="1749" width="0.2" height="15.0" fill="rgb(224,46,42)" rx="2" ry="2"/>
<text x="394.8" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Row, std::allocator&lt;Row&gt; &gt;::_M_realloc_insert&lt;Row const&amp;&gt; (743 samples, 0.17%)</title><rect x="646.7" y="1941" width="2.1" height="15.0" fill="rgb(250,177,28)" rx="2" ry="2"/>
<text x="649.7" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (281 samples, 0.07%)</title><rect x="246.1" y="1557" width="0.8" height="15.0" fill="rgb(248,102,24)" rx="2" ry="2"/>
<text x="249.1" y="1567.5"/>
</g>
<g class="hide">
<title>[unknown] (119 samples, 0.03%)</title><rect x="16.5" y="2037" width="0.4" height="15.0" fill="rgb(212,127,10)" rx="2" ry="2"/>
<text x="19.5" y="2047.5"/>
</g>
<g class="hide">
<title>__libc_send (68 samples, 0.02%)</title><rect x="51.9" y="2037" width="0.2" height="15.0" fill="rgb(246,37,22)" rx="2" ry="2"/>
<text x="54.9" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="933" width="0.8" height="15.0" fill="rgb(248,148,22)" rx="2" ry="2"/>
<text x="57.8" y="943.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="48.9" y="1733" width="0.1" height="15.0" fill="rgb(231,71,51)" rx="2" ry="2"/>
<text x="51.9" y="1743.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (43 samples, 0.01%)</title><rect x="656.1" y="1941" width="0.1" height="15.0" fill="rgb(231,141,41)" rx="2" ry="2"/>
<text x="659.1" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="869" width="0.2" height="15.0" fill="rgb(230,81,29)" rx="2" ry="2"/>
<text x="30" y="879.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (490 samples, 0.11%)</title><rect x="444.2" y="1621" width="1.3" height="15.0" fill="rgb(248,78,0)" rx="2" ry="2"/>
<text x="447.2" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.05%)</title><rect x="56.3" y="1973" width="0.6" height="15.0" fill="rgb(226,113,15)" rx="2" ry="2"/>
<text x="59.3" y="1983.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (287 samples, 0.07%)</title><rect x="207.37410071942588" y="1717" width="16.978417266187048" height="15.0" fill="rgb(243,168,3)" rx="2" ry="2" _orig_x="529.6" _orig_width="0.8"/>
<text x="210.37410071942588" y="1727.5" _orig_x="532.6"/>
</g>
<g class="hide">
<title>pa_memblockq_prebuf_active (378 samples, 0.09%)</title><rect x="180.4" y="2021" width="1.1" height="15.0" fill="rgb(221,84,48)" rx="2" ry="2"/>
<text x="183.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::max_size (70 samples, 0.02%)</title><rect x="660.3" y="1925" width="0.2" height="15.0" fill="rgb(250,203,44)" rx="2" ry="2"/>
<text x="663.3" y="1935.5"/>
</g>
<g class="hide">
<title>malloc (52 samples, 0.01%)</title><rect x="594.6" y="1893" width="0.2" height="15.0" fill="rgb(249,76,43)" rx="2" ry="2"/>
<text x="597.6" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="373.4" y="1989" width="0.1" height="15.0" fill="rgb(249,224,38)" rx="2" ry="2"/>
<text x="376.4" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (38 samples, 0.01%)</title><rect x="426.1" y="1765" width="0.1" height="15.0" fill="rgb(242,136,4)" rx="2" ry="2"/>
<text x="429.1" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Field*&gt; (59 samples, 0.01%)</title><rect x="660.8" y="1925" width="0.2" height="15.0" fill="rgb(234,9,52)" rx="2" ry="2"/>
<text x="663.8" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (219 samples, 0.05%)</title><rect x="52.2" y="1813" width="0.6" height="15.0" fill="rgb(245,84,51)" rx="2" ry="2"/>
<text x="55.2" y="1823.5"/>
</g>
<g class="hide">
<title>irq/95-iwlwifi: (64 samples, 0.01%)</title><rect x="380.3" y="2053" width="0.2" height="15.0" fill="rgb(205,171,35)" rx="2" ry="2"/>
<text x="383.3" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,120 samples, 1.19%)</title><rect x="319.7" y="1989" width="14.0" height="15.0" fill="rgb(215,178,34)" rx="2" ry="2"/>
<text x="322.7" y="1999.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (157 samples, 0.04%)</title><rect x="473.9" y="1845" width="0.4" height="15.0" fill="rgb(237,145,49)" rx="2" ry="2"/>
<text x="476.9" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="245.6" y="1205" width="0.2" height="15.0" fill="rgb(205,114,34)" rx="2" ry="2"/>
<text x="248.6" y="1215.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1765" width="0.8" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2"/>
<text x="57.8" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (605 samples, 0.14%)</title><rect x="664.2" y="1973" width="1.7" height="15.0" fill="rgb(251,93,7)" rx="2" ry="2"/>
<text x="667.2" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (1,052 samples, 0.24%)</title><rect x="41.4" y="1957" width="2.9" height="15.0" fill="rgb(236,111,46)" rx="2" ry="2"/>
<text x="44.4" y="1967.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (52 samples, 0.01%)</title><rect x="76.5" y="2005" width="0.1" height="15.0" fill="rgb(230,169,9)" rx="2" ry="2"/>
<text x="79.5" y="2015.5"/>
</g>
<g class="">
<title>std::forward&lt;Field*&gt; (57 samples, 0.01%)</title><rect x="689.1366906474819" y="1829" width="2.122302158273381" height="15.0" fill="rgb(244,218,31)" rx="2" ry="2" _orig_x="552.3" _orig_width="0.1"/>
<text x="692.1366906474819" y="1839.5" _orig_x="555.3"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="245.1" y="885" width="0.2" height="15.0" fill="rgb(218,62,8)" rx="2" ry="2"/>
<text x="248.1" y="895.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (37 samples, 0.01%)</title><rect x="612.9" y="1877" width="0.1" height="15.0" fill="rgb(214,142,3)" rx="2" ry="2"/>
<text x="615.9" y="1887.5"/>
</g>
<g class="hide">
<title>Field::Field (48 samples, 0.01%)</title><rect x="464.1" y="1813" width="0.2" height="15.0" fill="rgb(216,181,0)" rx="2" ry="2"/>
<text x="467.1" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="421" width="0.2" height="15.0" fill="rgb(206,207,32)" rx="2" ry="2"/>
<text x="30" y="431.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (394 samples, 0.09%)</title><rect x="467.7" y="1733" width="1.1" height="15.0" fill="rgb(220,166,1)" rx="2" ry="2"/>
<text x="470.7" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (93 samples, 0.02%)</title><rect x="245.1" y="1253" width="0.2" height="15.0" fill="rgb(230,206,47)" rx="2" ry="2"/>
<text x="248.1" y="1263.5"/>
</g>
<g class="hide">
<title>Timer (163 samples, 0.04%)</title><rect x="44.4" y="2053" width="0.5" height="15.0" fill="rgb(208,139,34)" rx="2" ry="2"/>
<text x="47.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1429" width="0.2" height="15.0" fill="rgb(236,100,14)" rx="2" ry="2"/>
<text x="30" y="1439.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="261.1" y="2021" width="0.1" height="15.0" fill="rgb(245,23,18)" rx="2" ry="2"/>
<text x="264.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.02%)</title><rect x="16.9" y="2021" width="0.2" height="15.0" fill="rgb(207,190,28)" rx="2" ry="2"/>
<text x="19.9" y="2031.5"/>
</g>
<g class="hide">
<title>pa_sink_input_peek (179 samples, 0.04%)</title><rect x="176.2" y="2005" width="0.5" height="15.0" fill="rgb(254,66,42)" rx="2" ry="2"/>
<text x="179.2" y="2015.5"/>
</g>
<g class="hide">
<title>__GI___libc_write (52 samples, 0.01%)</title><rect x="347.5" y="2021" width="0.1" height="15.0" fill="rgb(220,162,8)" rx="2" ry="2"/>
<text x="350.5" y="2031.5"/>
</g>
<g class="">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (102 samples, 0.02%)</title><rect x="591.5107913669084" y="1861" width="4.244604316546762" height="15.0" fill="rgb(205,94,53)" rx="2" ry="2" _orig_x="547.7" _orig_width="0.2"/>
<text x="594.5107913669084" y="1871.5" _orig_x="550.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="795.1" y="1589" width="0.1" height="15.0" fill="rgb(233,138,14)" rx="2" ry="2"/>
<text x="798.1" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="374.7" y="1925" width="0.1" height="15.0" fill="rgb(240,62,1)" rx="2" ry="2"/>
<text x="377.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,981 samples, 0.92%)</title><rect x="399.9" y="1957" width="10.9" height="15.0" fill="rgb(242,214,1)" rx="2" ry="2"/>
<text x="402.9" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="32.2" y="1861" width="0.2" height="15.0" fill="rgb(253,89,32)" rx="2" ry="2"/>
<text x="35.2" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (573 samples, 0.13%)</title><rect x="583.9" y="1781" width="1.6" height="15.0" fill="rgb(229,176,15)" rx="2" ry="2"/>
<text x="586.9" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1173" width="0.8" height="15.0" fill="rgb(215,30,31)" rx="2" ry="2"/>
<text x="57.8" y="1183.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (52 samples, 0.01%)</title><rect x="357.6" y="1893" width="0.2" height="15.0" fill="rgb(217,206,43)" rx="2" ry="2"/>
<text x="360.6" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="115.3" y="1877" width="0.1" height="15.0" fill="rgb(205,85,17)" rx="2" ry="2"/>
<text x="118.3" y="1887.5"/>
</g>
<g class="hide">
<title>Field::CompareLessThan (38 samples, 0.01%)</title><rect x="451.1" y="1893" width="0.1" height="15.0" fill="rgb(238,72,16)" rx="2" ry="2"/>
<text x="454.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (899 samples, 0.21%)</title><rect x="18.0" y="1845" width="2.4" height="15.0" fill="rgb(252,67,21)" rx="2" ry="2"/>
<text x="21" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::operator!=&lt;void*, false&gt; (57 samples, 0.01%)</title><rect x="590.9" y="1861" width="0.1" height="15.0" fill="rgb(251,212,10)" rx="2" ry="2"/>
<text x="593.9" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="837" width="0.2" height="15.0" fill="rgb(216,8,52)" rx="2" ry="2"/>
<text x="30" y="847.5"/>
</g>
<g class="hide">
<title>pthread_mutex_unlock (54 samples, 0.01%)</title><rect x="1188.6" y="2021" width="0.1" height="15.0" fill="rgb(243,97,46)" rx="2" ry="2"/>
<text x="1191.6" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (108 samples, 0.03%)</title><rect x="706.7" y="1989" width="0.3" height="15.0" fill="rgb(207,213,41)" rx="2" ry="2"/>
<text x="709.7" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (425 samples, 0.10%)</title><rect x="632.3" y="1797" width="1.2" height="15.0" fill="rgb(210,111,23)" rx="2" ry="2"/>
<text x="635.3" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.03%)</title><rect x="56.5" y="1797" width="0.4" height="15.0" fill="rgb(250,180,4)" rx="2" ry="2"/>
<text x="59.5" y="1807.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (79 samples, 0.02%)</title><rect x="629.4" y="1845" width="0.2" height="15.0" fill="rgb(206,16,49)" rx="2" ry="2"/>
<text x="632.4" y="1855.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (40 samples, 0.01%)</title><rect x="656.7" y="1941" width="0.1" height="15.0" fill="rgb(234,58,13)" rx="2" ry="2"/>
<text x="659.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.03%)</title><rect x="388.7" y="1941" width="0.3" height="15.0" fill="rgb(223,189,25)" rx="2" ry="2"/>
<text x="391.7" y="1951.5"/>
</g>
<g class="hide">
<title>pa_cvolume_channels_equal_to (78 samples, 0.02%)</title><rect x="190.5" y="2037" width="0.3" height="15.0" fill="rgb(205,72,34)" rx="2" ry="2"/>
<text x="193.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,870 samples, 0.43%)</title><rect x="727.7" y="1701" width="5.1" height="15.0" fill="rgb(249,30,13)" rx="2" ry="2"/>
<text x="730.7" y="1711.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (64 samples, 0.01%)</title><rect x="418.5" y="1701" width="0.2" height="15.0" fill="rgb(243,112,44)" rx="2" ry="2"/>
<text x="421.5" y="1711.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (65 samples, 0.02%)</title><rect x="611.9" y="1781" width="0.2" height="15.0" fill="rgb(236,5,52)" rx="2" ry="2"/>
<text x="614.9" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="32.6" y="1861" width="0.1" height="15.0" fill="rgb(246,205,15)" rx="2" ry="2"/>
<text x="35.6" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (418 samples, 0.10%)</title><rect x="36.8" y="2021" width="1.1" height="15.0" fill="rgb(235,5,37)" rx="2" ry="2"/>
<text x="39.8" y="2031.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (345 samples, 0.08%)</title><rect x="598.2" y="1909" width="0.9" height="15.0" fill="rgb(228,23,21)" rx="2" ry="2"/>
<text x="601.2" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (129 samples, 0.03%)</title><rect x="383.0" y="1941" width="0.4" height="15.0" fill="rgb(229,213,16)" rx="2" ry="2"/>
<text x="386" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (49 samples, 0.01%)</title><rect x="604.8" y="1781" width="0.2" height="15.0" fill="rgb(243,160,33)" rx="2" ry="2"/>
<text x="607.8" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="160.8" y="1829" width="0.2" height="15.0" fill="rgb(253,113,48)" rx="2" ry="2"/>
<text x="163.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (167 samples, 0.04%)</title><rect x="390.0" y="1989" width="0.4" height="15.0" fill="rgb(212,51,7)" rx="2" ry="2"/>
<text x="393" y="1999.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (266 samples, 0.06%)</title><rect x="618.8" y="1813" width="0.7" height="15.0" fill="rgb(229,228,8)" rx="2" ry="2"/>
<text x="621.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::__fill_n_a&lt;unsigned long, char&gt; (39 samples, 0.01%)</title><rect x="428.8" y="1733" width="0.1" height="15.0" fill="rgb(249,196,19)" rx="2" ry="2"/>
<text x="431.8" y="1743.5"/>
</g>
<g class="hide">
<title>GC_Thread#3 (66 samples, 0.02%)</title><rect x="22.1" y="2053" width="0.2" height="15.0" fill="rgb(250,74,49)" rx="2" ry="2"/>
<text x="25.1" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (303 samples, 0.07%)</title><rect x="246.1" y="1637" width="0.8" height="15.0" fill="rgb(229,80,26)" rx="2" ry="2"/>
<text x="249.1" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,813 samples, 1.11%)</title><rect x="100.7" y="1877" width="13.2" height="15.0" fill="rgb(227,217,25)" rx="2" ry="2"/>
<text x="103.7" y="1887.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvent (16,509 samples, 3.82%)</title><rect x="263.0" y="1973" width="45.1" height="15.0" fill="rgb(218,151,40)" rx="2" ry="2"/>
<text x="266" y="1983.5">Inoti..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="348.0" y="1893" width="0.1" height="15.0" fill="rgb(226,196,16)" rx="2" ry="2"/>
<text x="351" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (244 samples, 0.06%)</title><rect x="248.2" y="1925" width="0.7" height="15.0" fill="rgb(214,32,3)" rx="2" ry="2"/>
<text x="251.2" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="373" width="0.8" height="15.0" fill="rgb(249,180,5)" rx="2" ry="2"/>
<text x="57.8" y="383.5"/>
</g>
<g class="hide">
<title>[code] (1,190 samples, 0.28%)</title><rect x="241.2" y="1445" width="3.2" height="15.0" fill="rgb(247,105,27)" rx="2" ry="2"/>
<text x="244.2" y="1455.5"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (133 samples, 0.03%)</title><rect x="358.7" y="2021" width="0.4" height="15.0" fill="rgb(225,4,45)" rx="2" ry="2"/>
<text x="361.7" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (89 samples, 0.02%)</title><rect x="245.6" y="1653" width="0.2" height="15.0" fill="rgb(227,37,26)" rx="2" ry="2"/>
<text x="248.6" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,844 samples, 1.59%)</title><rect x="746.8" y="1845" width="18.7" height="15.0" fill="rgb(206,62,6)" rx="2" ry="2"/>
<text x="749.8" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (315 samples, 0.07%)</title><rect x="246.1" y="1669" width="0.8" height="15.0" fill="rgb(248,205,38)" rx="2" ry="2"/>
<text x="249.1" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="56.7" y="1749" width="0.2" height="15.0" fill="rgb(244,227,12)" rx="2" ry="2"/>
<text x="59.7" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (48 samples, 0.01%)</title><rect x="371.8" y="2021" width="0.1" height="15.0" fill="rgb(223,198,27)" rx="2" ry="2"/>
<text x="374.8" y="2031.5"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (112 samples, 0.03%)</title><rect x="24.7" y="1989" width="0.3" height="15.0" fill="rgb(220,166,32)" rx="2" ry="2"/>
<text x="27.7" y="1999.5"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (66 samples, 0.02%)</title><rect x="267.7" y="1925" width="0.2" height="15.0" fill="rgb(208,221,29)" rx="2" ry="2"/>
<text x="270.7" y="1935.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvent (57 samples, 0.01%)</title><rect x="262.1" y="1989" width="0.2" height="15.0" fill="rgb(229,4,0)" rx="2" ry="2"/>
<text x="265.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="373.7" y="1957" width="0.1" height="15.0" fill="rgb(233,190,53)" rx="2" ry="2"/>
<text x="376.7" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (52 samples, 0.01%)</title><rect x="244.0" y="1141" width="0.1" height="15.0" fill="rgb(223,214,11)" rx="2" ry="2"/>
<text x="247" y="1151.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,865 samples, 1.13%)</title><rect x="719.5" y="1781" width="13.3" height="15.0" fill="rgb(221,218,44)" rx="2" ry="2"/>
<text x="722.5" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.02%)</title><rect x="237.9" y="1909" width="0.2" height="15.0" fill="rgb(213,37,31)" rx="2" ry="2"/>
<text x="240.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (188 samples, 0.04%)</title><rect x="597.4" y="1861" width="0.5" height="15.0" fill="rgb(217,114,48)" rx="2" ry="2"/>
<text x="600.4" y="1871.5"/>
</g>
<g class="hide">
<title>[[vdso]] (46 samples, 0.01%)</title><rect x="351.6" y="2037" width="0.1" height="15.0" fill="rgb(241,175,24)" rx="2" ry="2"/>
<text x="354.6" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,486 samples, 1.04%)</title><rect x="321.4" y="1941" width="12.3" height="15.0" fill="rgb(224,51,33)" rx="2" ry="2"/>
<text x="324.4" y="1951.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (145 samples, 0.03%)</title><rect x="356.0" y="1877" width="0.4" height="15.0" fill="rgb(249,4,29)" rx="2" ry="2"/>
<text x="359" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (58 samples, 0.01%)</title><rect x="609.3" y="1749" width="0.2" height="15.0" fill="rgb(235,207,51)" rx="2" ry="2"/>
<text x="612.3" y="1759.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (68 samples, 0.02%)</title><rect x="581.3" y="1829" width="0.2" height="15.0" fill="rgb(232,83,13)" rx="2" ry="2"/>
<text x="584.3" y="1839.5"/>
</g>
<g class="hide">
<title>hid_report_raw_event (48 samples, 0.01%)</title><rect x="1127.3" y="1733" width="0.1" height="15.0" fill="rgb(215,99,35)" rx="2" ry="2"/>
<text x="1130.3" y="1743.5"/>
</g>
<g class="hide">
<title>pa_bytes_per_second (56 samples, 0.01%)</title><rect x="174.2" y="2021" width="0.1" height="15.0" fill="rgb(248,21,45)" rx="2" ry="2"/>
<text x="177.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="370.7" y="1957" width="0.1" height="15.0" fill="rgb(222,165,27)" rx="2" ry="2"/>
<text x="373.7" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (67 samples, 0.02%)</title><rect x="245.6" y="1189" width="0.2" height="15.0" fill="rgb(217,79,35)" rx="2" ry="2"/>
<text x="248.6" y="1199.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.03%)</title><rect x="250.9" y="1941" width="0.3" height="15.0" fill="rgb(214,3,23)" rx="2" ry="2"/>
<text x="253.9" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (219 samples, 0.05%)</title><rect x="14.6" y="1797" width="0.6" height="15.0" fill="rgb(205,159,10)" rx="2" ry="2"/>
<text x="17.6" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="32.5" y="2005" width="0.2" height="15.0" fill="rgb(249,135,54)" rx="2" ry="2"/>
<text x="35.5" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (242 samples, 0.06%)</title><rect x="19.6" y="1685" width="0.7" height="15.0" fill="rgb(233,92,38)" rx="2" ry="2"/>
<text x="22.6" y="1695.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (118 samples, 0.03%)</title><rect x="882.2661870503601" y="1813" width="6.366906474820143" height="15.0" fill="rgb(244,220,30)" rx="2" ry="2" _orig_x="561.4" _orig_width="0.3"/>
<text x="885.2661870503601" y="1823.5" _orig_x="564.4"/>
</g>
<g class="hide">
<title>thread_native_entry (47 samples, 0.01%)</title><rect x="22.6" y="2021" width="0.1" height="15.0" fill="rgb(213,0,16)" rx="2" ry="2"/>
<text x="25.6" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,695 samples, 0.86%)</title><rect x="722.7" y="1733" width="10.1" height="15.0" fill="rgb(250,173,39)" rx="2" ry="2"/>
<text x="725.7" y="1743.5"/>
</g>
<g class="hide">
<title>IndexKeyComparator::operator (21,504 samples, 4.98%)</title><rect x="451.3" y="1893" width="58.8" height="15.0" fill="rgb(250,160,11)" rx="2" ry="2"/>
<text x="454.3" y="1903.5">Index..</text>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (110 samples, 0.03%)</title><rect x="514.6" y="1813" width="0.3" height="15.0" fill="rgb(244,183,35)" rx="2" ry="2"/>
<text x="517.6" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.02%)</title><rect x="26.5" y="1861" width="0.2" height="15.0" fill="rgb(238,95,20)" rx="2" ry="2"/>
<text x="29.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (40 samples, 0.01%)</title><rect x="641.5" y="1893" width="0.1" height="15.0" fill="rgb(248,161,12)" rx="2" ry="2"/>
<text x="644.5" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (660 samples, 0.15%)</title><rect x="432.5" y="1797" width="1.8" height="15.0" fill="rgb(224,1,24)" rx="2" ry="2"/>
<text x="435.5" y="1807.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::KeyAt (46 samples, 0.01%)</title><rect x="513.7" y="1909" width="0.1" height="15.0" fill="rgb(218,142,49)" rx="2" ry="2"/>
<text x="516.7" y="1919.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1221" width="0.6" height="15.0" fill="rgb(226,125,51)" rx="2" ry="2"/>
<text x="246.3" y="1231.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1541" width="0.2" height="15.0" fill="rgb(249,81,44)" rx="2" ry="2"/>
<text x="249.9" y="1551.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="203.1" y="1973" width="0.2" height="15.0" fill="rgb(225,83,24)" rx="2" ry="2"/>
<text x="206.1" y="1983.5"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (246 samples, 0.06%)</title><rect x="637.3" y="1893" width="0.6" height="15.0" fill="rgb(215,122,53)" rx="2" ry="2"/>
<text x="640.3" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,119 samples, 0.26%)</title><rect x="694.6" y="1749" width="3.0" height="15.0" fill="rgb(211,96,54)" rx="2" ry="2"/>
<text x="697.6" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="1941" width="0.2" height="15.0" fill="rgb(222,179,26)" rx="2" ry="2"/>
<text x="801" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.02%)</title><rect x="250.1" y="1957" width="0.2" height="15.0" fill="rgb(205,213,7)" rx="2" ry="2"/>
<text x="253.1" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1877" width="0.2" height="15.0" fill="rgb(219,42,16)" rx="2" ry="2"/>
<text x="30" y="1887.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (337 samples, 0.08%)</title><rect x="249.0" y="1925" width="0.9" height="15.0" fill="rgb(214,49,13)" rx="2" ry="2"/>
<text x="252" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (122 samples, 0.03%)</title><rect x="796.9" y="1925" width="0.3" height="15.0" fill="rgb(243,40,46)" rx="2" ry="2"/>
<text x="799.9" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1061" width="0.2" height="15.0" fill="rgb(221,79,1)" rx="2" ry="2"/>
<text x="247.2" y="1071.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="392.0" y="2005" width="0.2" height="15.0" fill="rgb(227,160,22)" rx="2" ry="2"/>
<text x="395" y="2015.5"/>
</g>
<g class="hide">
<title>__libc_write (37 samples, 0.01%)</title><rect x="347.7" y="2021" width="0.1" height="15.0" fill="rgb(239,91,51)" rx="2" ry="2"/>
<text x="350.7" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="244.2" y="853" width="0.2" height="15.0" fill="rgb(227,147,4)" rx="2" ry="2"/>
<text x="247.2" y="863.5"/>
</g>
<g class="hide">
<title>PtyGetProc (54 samples, 0.01%)</title><rect x="249.5" y="1781" width="0.1" height="15.0" fill="rgb(254,123,4)" rx="2" ry="2"/>
<text x="252.5" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.01%)</title><rect x="244.0" y="757" width="0.1" height="15.0" fill="rgb(227,68,1)" rx="2" ry="2"/>
<text x="247" y="767.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (153 samples, 0.04%)</title><rect x="246.5" y="1493" width="0.4" height="15.0" fill="rgb(236,150,17)" rx="2" ry="2"/>
<text x="249.5" y="1503.5"/>
</g>
<g class="hide">
<title>hid_input_report (48 samples, 0.01%)</title><rect x="1127.3" y="1749" width="0.1" height="15.0" fill="rgb(244,75,44)" rx="2" ry="2"/>
<text x="1130.3" y="1759.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (130 samples, 0.03%)</title><rect x="431.0" y="1829" width="0.3" height="15.0" fill="rgb(218,72,2)" rx="2" ry="2"/>
<text x="434" y="1839.5"/>
</g>
<g class="hide">
<title>pa_memblockq_seek (103 samples, 0.02%)</title><rect x="175.9" y="2005" width="0.3" height="15.0" fill="rgb(233,128,41)" rx="2" ry="2"/>
<text x="178.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="391.6" y="1925" width="0.2" height="15.0" fill="rgb(221,93,54)" rx="2" ry="2"/>
<text x="394.6" y="1935.5"/>
</g>
<g class="hide">
<title>snd_pcm_status_get_delay (45 samples, 0.01%)</title><rect x="186.1" y="2021" width="0.1" height="15.0" fill="rgb(241,181,33)" rx="2" ry="2"/>
<text x="189.1" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1877" width="0.8" height="15.0" fill="rgb(252,76,42)" rx="2" ry="2"/>
<text x="57.8" y="1887.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (45 samples, 0.01%)</title><rect x="611.2" y="1749" width="0.1" height="15.0" fill="rgb(240,166,43)" rx="2" ry="2"/>
<text x="614.2" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="245.2" y="773" width="0.1" height="15.0" fill="rgb(252,44,10)" rx="2" ry="2"/>
<text x="248.2" y="783.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="51.9" y="1989" width="0.2" height="15.0" fill="rgb(247,17,52)" rx="2" ry="2"/>
<text x="54.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.03%)</title><rect x="374.4" y="2037" width="0.4" height="15.0" fill="rgb(212,159,2)" rx="2" ry="2"/>
<text x="377.4" y="2047.5"/>
</g>
<g class="hide">
<title>Schema::GetColumns (60 samples, 0.01%)</title><rect x="493.0" y="1861" width="0.2" height="15.0" fill="rgb(216,186,41)" rx="2" ry="2"/>
<text x="496" y="1871.5"/>
</g>
<g class="hide">
<title>Page::WUnlatch (85 samples, 0.02%)</title><rect x="448.0" y="1877" width="0.2" height="15.0" fill="rgb(207,60,52)" rx="2" ry="2"/>
<text x="451" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="20.8" y="1829" width="0.5" height="15.0" fill="rgb(232,180,22)" rx="2" ry="2"/>
<text x="23.8" y="1839.5"/>
</g>
<g class="hide">
<title>g_slice_alloc (89 samples, 0.02%)</title><rect x="350.1" y="2037" width="0.2" height="15.0" fill="rgb(207,72,54)" rx="2" ry="2"/>
<text x="353.1" y="2047.5"/>
</g>
<g class="hide">
<title>pa_memblock_new_fixed (504 samples, 0.12%)</title><rect x="177.8" y="2021" width="1.4" height="15.0" fill="rgb(253,82,27)" rx="2" ry="2"/>
<text x="180.8" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1621" width="0.2" height="15.0" fill="rgb(225,28,29)" rx="2" ry="2"/>
<text x="249.9" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,447 samples, 1.96%)</title><rect x="709.8" y="1941" width="23.0" height="15.0" fill="rgb(247,225,28)" rx="2" ry="2"/>
<text x="712.8" y="1951.5">[..</text>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (67 samples, 0.02%)</title><rect x="431.4" y="1829" width="0.1" height="15.0" fill="rgb(218,42,38)" rx="2" ry="2"/>
<text x="434.4" y="1839.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (195 samples, 0.05%)</title><rect x="600.0000000000014" y="1861" width="10.611510791366905" height="15.0" fill="rgb(220,205,36)" rx="2" ry="2" _orig_x="548.1" _orig_width="0.5"/>
<text x="603.0000000000014" y="1871.5" _orig_x="551.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.04%)</title><rect x="515.4" y="1717" width="0.4" height="15.0" fill="rgb(228,131,25)" rx="2" ry="2"/>
<text x="518.4" y="1727.5"/>
</g>
<g class="hide">
<title>Field::CompareGreaterThan (162 samples, 0.04%)</title><rect x="451.6" y="1877" width="0.5" height="15.0" fill="rgb(253,171,46)" rx="2" ry="2"/>
<text x="454.6" y="1887.5"/>
</g>
<g class="hide">
<title>log_flusher (37 samples, 0.01%)</title><rect x="373.5" y="1957" width="0.1" height="15.0" fill="rgb(232,117,35)" rx="2" ry="2"/>
<text x="376.5" y="1967.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_copy_a&lt;Row const*, Row*, Row&gt; (596 samples, 0.14%)</title><rect x="647.1" y="1909" width="1.7" height="15.0" fill="rgb(247,187,13)" rx="2" ry="2"/>
<text x="650.1" y="1919.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (42 samples, 0.01%)</title><rect x="482.4" y="1797" width="0.2" height="15.0" fill="rgb(253,36,50)" rx="2" ry="2"/>
<text x="485.4" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="372.3" y="1973" width="0.2" height="15.0" fill="rgb(224,216,14)" rx="2" ry="2"/>
<text x="375.3" y="1983.5"/>
</g>
<g class="hide">
<title>TypeInt::DeserializeFrom (1,564 samples, 0.36%)</title><rect x="608.3" y="1861" width="4.3" height="15.0" fill="rgb(240,74,15)" rx="2" ry="2"/>
<text x="611.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.02%)</title><rect x="32.1" y="1941" width="0.3" height="15.0" fill="rgb(228,205,32)" rx="2" ry="2"/>
<text x="35.1" y="1951.5"/>
</g>
<g class="hide">
<title>kworker/u32:1-p (73 samples, 0.02%)</title><rect x="391.8" y="2053" width="0.2" height="15.0" fill="rgb(236,27,40)" rx="2" ry="2"/>
<text x="394.8" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (309 samples, 0.07%)</title><rect x="129.0" y="1909" width="0.8" height="15.0" fill="rgb(243,166,4)" rx="2" ry="2"/>
<text x="132" y="1919.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (62 samples, 0.01%)</title><rect x="613.8" y="1877" width="0.2" height="15.0" fill="rgb(220,13,31)" rx="2" ry="2"/>
<text x="616.8" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (82 samples, 0.02%)</title><rect x="44.0" y="1845" width="0.3" height="15.0" fill="rgb(218,117,20)" rx="2" ry="2"/>
<text x="47" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="47.3" y="1973" width="0.1" height="15.0" fill="rgb(229,210,20)" rx="2" ry="2"/>
<text x="50.3" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="469" width="0.2" height="15.0" fill="rgb(236,188,48)" rx="2" ry="2"/>
<text x="30" y="479.5"/>
</g>
<g class="hide">
<title>[code] (1,158 samples, 0.27%)</title><rect x="17.3" y="1925" width="3.1" height="15.0" fill="rgb(242,9,8)" rx="2" ry="2"/>
<text x="20.3" y="1935.5"/>
</g>
<g class="hide">
<title>GC_Thread#4 (52 samples, 0.01%)</title><rect x="22.3" y="2053" width="0.1" height="15.0" fill="rgb(225,122,4)" rx="2" ry="2"/>
<text x="25.3" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (320 samples, 0.07%)</title><rect x="40.0" y="1861" width="0.9" height="15.0" fill="rgb(225,113,28)" rx="2" ry="2"/>
<text x="43" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.03%)</title><rect x="237.5" y="1813" width="0.3" height="15.0" fill="rgb(205,190,45)" rx="2" ry="2"/>
<text x="240.5" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (83 samples, 0.02%)</title><rect x="614.7" y="1877" width="0.2" height="15.0" fill="rgb(244,89,7)" rx="2" ry="2"/>
<text x="617.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.03%)</title><rect x="391.0" y="1909" width="0.4" height="15.0" fill="rgb(217,169,18)" rx="2" ry="2"/>
<text x="394" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="391.8" y="1733" width="0.2" height="15.0" fill="rgb(228,115,51)" rx="2" ry="2"/>
<text x="394.8" y="1743.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (84 samples, 0.02%)</title><rect x="471.3" y="1845" width="0.2" height="15.0" fill="rgb(238,93,13)" rx="2" ry="2"/>
<text x="474.3" y="1855.5"/>
</g>
<g class="hide">
<title>VizCompositorTh (1,042 samples, 0.24%)</title><rect x="49.9" y="2053" width="2.9" height="15.0" fill="rgb(251,16,27)" rx="2" ry="2"/>
<text x="52.9" y="2063.5"/>
</g>
<g class="hide">
<title>start_thread (257 samples, 0.06%)</title><rect x="52.1" y="2037" width="0.7" height="15.0" fill="rgb(216,165,2)" rx="2" ry="2"/>
<text x="55.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="250.2" y="1813" width="0.1" height="15.0" fill="rgb(232,113,50)" rx="2" ry="2"/>
<text x="253.2" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (193 samples, 0.04%)</title><rect x="20.8" y="1861" width="0.5" height="15.0" fill="rgb(224,70,44)" rx="2" ry="2"/>
<text x="23.8" y="1871.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (48 samples, 0.01%)</title><rect x="611.3" y="1749" width="0.1" height="15.0" fill="rgb(223,128,0)" rx="2" ry="2"/>
<text x="614.3" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="37.3" y="1957" width="0.2" height="15.0" fill="rgb(247,171,15)" rx="2" ry="2"/>
<text x="40.3" y="1967.5"/>
</g>
<g class="hide">
<title>__GI___writev (76 samples, 0.02%)</title><rect x="364.5" y="2021" width="0.2" height="15.0" fill="rgb(207,162,18)" rx="2" ry="2"/>
<text x="367.5" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (38 samples, 0.01%)</title><rect x="198.88489208633285" y="1717" width="2.122302158273381" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" _orig_x="529.2" _orig_width="0.1"/>
<text x="201.88489208633285" y="1727.5" _orig_x="532.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="697.4" y="1701" width="0.2" height="15.0" fill="rgb(206,228,36)" rx="2" ry="2"/>
<text x="700.4" y="1711.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (61 samples, 0.01%)</title><rect x="651.7" y="1893" width="0.2" height="15.0" fill="rgb(210,85,48)" rx="2" ry="2"/>
<text x="654.7" y="1903.5"/>
</g>
<g class="hide">
<title>thread_native_entry (46 samples, 0.01%)</title><rect x="21.8" y="2021" width="0.1" height="15.0" fill="rgb(239,80,8)" rx="2" ry="2"/>
<text x="24.8" y="2031.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (57 samples, 0.01%)</title><rect x="258.30935251798655" y="1733" width="4.244604316546762" height="15.0" fill="rgb(221,1,54)" rx="2" ry="2" _orig_x="532.0" _orig_width="0.2"/>
<text x="261.30935251798655" y="1743.5" _orig_x="535"/>
</g>
<g class="hide">
<title>[code] (53 samples, 0.01%)</title><rect x="308.8" y="1973" width="0.2" height="15.0" fill="rgb(251,157,9)" rx="2" ry="2"/>
<text x="311.8" y="1983.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (140 samples, 0.03%)</title><rect x="646.3" y="1877" width="0.4" height="15.0" fill="rgb(222,208,15)" rx="2" ry="2"/>
<text x="649.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.02%)</title><rect x="379.8" y="1957" width="0.3" height="15.0" fill="rgb(208,193,9)" rx="2" ry="2"/>
<text x="382.8" y="1967.5"/>
</g>
<g class="hide">
<title>irq/112-nvidia (1,951 samples, 0.45%)</title><rect x="374.4" y="2053" width="5.4" height="15.0" fill="rgb(208,194,21)" rx="2" ry="2"/>
<text x="377.4" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="380.7" y="2005" width="0.2" height="15.0" fill="rgb(221,49,42)" rx="2" ry="2"/>
<text x="383.7" y="2015.5"/>
</g>
<g class="hide">
<title>__libc_write (40 samples, 0.01%)</title><rect x="795.2" y="1941" width="0.1" height="15.0" fill="rgb(228,89,6)" rx="2" ry="2"/>
<text x="798.2" y="1951.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (283 samples, 0.07%)</title><rect x="355.6" y="1941" width="0.8" height="15.0" fill="rgb(240,121,39)" rx="2" ry="2"/>
<text x="358.6" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (585 samples, 0.14%)</title><rect x="793.6" y="1781" width="1.6" height="15.0" fill="rgb(223,192,21)" rx="2" ry="2"/>
<text x="796.6" y="1791.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (349 samples, 0.08%)</title><rect x="490.2" y="1829" width="0.9" height="15.0" fill="rgb(240,174,39)" rx="2" ry="2"/>
<text x="493.2" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,651 samples, 2.00%)</title><rect x="709.2" y="1973" width="23.6" height="15.0" fill="rgb(217,202,48)" rx="2" ry="2"/>
<text x="712.2" y="1983.5">[..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (44 samples, 0.01%)</title><rect x="645.9" y="1813" width="0.1" height="15.0" fill="rgb(240,183,47)" rx="2" ry="2"/>
<text x="648.9" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (11,900 samples, 2.76%)</title><rect x="204.9" y="2037" width="32.5" height="15.0" fill="rgb(225,153,7)" rx="2" ry="2"/>
<text x="207.9" y="2047.5">[u..</text>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1621" width="0.2" height="15.0" fill="rgb(209,3,32)" rx="2" ry="2"/>
<text x="30" y="1631.5"/>
</g>
<g class="parent">
<title>BPlusTree::InternalRemove (67,523 samples, 15.64%)</title><rect x="10" y="1925" width="1180" height="15.0" fill="rgb(251,100,44)" rx="2" ry="2" _orig_x="411.7" _orig_width="184.5"/>
<text x="13" y="1935.5" _orig_x="414.7">BPlusTree::InternalRemove </text>
</g>
<g class="hide">
<title>[code] (192 samples, 0.04%)</title><rect x="51.2" y="1813" width="0.5" height="15.0" fill="rgb(244,145,0)" rx="2" ry="2"/>
<text x="54.2" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (108 samples, 0.03%)</title><rect x="597.5" y="1829" width="0.3" height="15.0" fill="rgb(206,5,49)" rx="2" ry="2"/>
<text x="600.5" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="792.9" y="1925" width="0.2" height="15.0" fill="rgb(239,123,37)" rx="2" ry="2"/>
<text x="795.9" y="1935.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (99 samples, 0.02%)</title><rect x="29.1" y="2005" width="0.2" height="15.0" fill="rgb(249,73,49)" rx="2" ry="2"/>
<text x="32.1" y="2015.5"/>
</g>
<g class="hide">
<title>snd_pcm_avail_update (73 samples, 0.02%)</title><rect x="184.7" y="2021" width="0.2" height="15.0" fill="rgb(249,167,20)" rx="2" ry="2"/>
<text x="187.7" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (342 samples, 0.08%)</title><rect x="270.9" y="1909" width="0.9" height="15.0" fill="rgb(209,202,37)" rx="2" ry="2"/>
<text x="273.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (106 samples, 0.02%)</title><rect x="305.8" y="1957" width="0.3" height="15.0" fill="rgb(240,186,30)" rx="2" ry="2"/>
<text x="308.8" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="14.9" y="1717" width="0.1" height="15.0" fill="rgb(210,200,47)" rx="2" ry="2"/>
<text x="17.9" y="1727.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="245.6" y="1269" width="0.2" height="15.0" fill="rgb(235,182,43)" rx="2" ry="2"/>
<text x="248.6" y="1279.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1173" width="0.6" height="15.0" fill="rgb(226,29,9)" rx="2" ry="2"/>
<text x="246.3" y="1183.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="388.3" y="1893" width="0.1" height="15.0" fill="rgb(235,63,17)" rx="2" ry="2"/>
<text x="391.3" y="1903.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (173 samples, 0.04%)</title><rect x="514.5" y="1845" width="0.5" height="15.0" fill="rgb(254,214,19)" rx="2" ry="2"/>
<text x="517.5" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (143 samples, 0.03%)</title><rect x="796.8" y="1941" width="0.4" height="15.0" fill="rgb(243,89,45)" rx="2" ry="2"/>
<text x="799.8" y="1951.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,247 samples, 0.52%)</title><rect x="464.4" y="1797" width="6.1" height="15.0" fill="rgb(251,29,52)" rx="2" ry="2"/>
<text x="467.4" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (55 samples, 0.01%)</title><rect x="30.4" y="2005" width="0.2" height="15.0" fill="rgb(250,70,51)" rx="2" ry="2"/>
<text x="33.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="15.4" y="1685" width="0.2" height="15.0" fill="rgb(237,52,13)" rx="2" ry="2"/>
<text x="18.4" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (226 samples, 0.05%)</title><rect x="515.2" y="1781" width="0.6" height="15.0" fill="rgb(220,197,49)" rx="2" ry="2"/>
<text x="518.2" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1045" width="0.1" height="15.0" fill="rgb(232,172,42)" rx="2" ry="2"/>
<text x="247" y="1055.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.03%)</title><rect x="237.1" y="1941" width="0.3" height="15.0" fill="rgb(230,59,18)" rx="2" ry="2"/>
<text x="240.1" y="1951.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (510 samples, 0.12%)</title><rect x="654.4" y="1941" width="1.4" height="15.0" fill="rgb(223,146,19)" rx="2" ry="2"/>
<text x="657.4" y="1951.5"/>
</g>
<g class="hide">
<title>pool-geoclue (82 samples, 0.02%)</title><rect x="795.5" y="2053" width="0.2" height="15.0" fill="rgb(231,34,37)" rx="2" ry="2"/>
<text x="798.5" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.01%)</title><rect x="364.6" y="1813" width="0.1" height="15.0" fill="rgb(230,23,17)" rx="2" ry="2"/>
<text x="367.6" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (308 samples, 0.07%)</title><rect x="209.0" y="1781" width="0.8" height="15.0" fill="rgb(226,13,41)" rx="2" ry="2"/>
<text x="212" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="347.5" y="1973" width="0.1" height="15.0" fill="rgb(229,202,39)" rx="2" ry="2"/>
<text x="350.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="32.6" y="1877" width="0.1" height="15.0" fill="rgb(233,208,38)" rx="2" ry="2"/>
<text x="35.6" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (147 samples, 0.03%)</title><rect x="46.8" y="1941" width="0.4" height="15.0" fill="rgb(243,50,21)" rx="2" ry="2"/>
<text x="49.8" y="1951.5"/>
</g>
<g class="hide">
<title>runtime.findrunnable (123 samples, 0.03%)</title><rect x="341.0" y="1925" width="0.3" height="15.0" fill="rgb(207,167,13)" rx="2" ry="2"/>
<text x="344" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (229 samples, 0.05%)</title><rect x="382.0" y="1957" width="0.7" height="15.0" fill="rgb(240,89,54)" rx="2" ry="2"/>
<text x="385" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (246 samples, 0.06%)</title><rect x="645.5" y="1845" width="0.6" height="15.0" fill="rgb(218,153,16)" rx="2" ry="2"/>
<text x="648.5" y="1855.5"/>
</g>
<g class="hide">
<title>kswapd0 (214 samples, 0.05%)</title><rect x="381.1" y="2053" width="0.6" height="15.0" fill="rgb(222,76,13)" rx="2" ry="2"/>
<text x="384.1" y="2063.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (272 samples, 0.06%)</title><rect x="367.3" y="2037" width="0.7" height="15.0" fill="rgb(224,18,14)" rx="2" ry="2"/>
<text x="370.3" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="1013" width="0.8" height="15.0" fill="rgb(238,229,26)" rx="2" ry="2"/>
<text x="57.8" y="1023.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (78 samples, 0.02%)</title><rect x="468.3" y="1717" width="0.3" height="15.0" fill="rgb(210,111,54)" rx="2" ry="2"/>
<text x="471.3" y="1727.5"/>
</g>
<g class="hide">
<title>TimerQueue (943 samples, 0.22%)</title><rect x="44.9" y="2053" width="2.5" height="15.0" fill="rgb(241,44,14)" rx="2" ry="2"/>
<text x="47.9" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.02%)</title><rect x="32.2" y="1893" width="0.2" height="15.0" fill="rgb(243,162,51)" rx="2" ry="2"/>
<text x="35.2" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (81 samples, 0.02%)</title><rect x="44.0" y="1813" width="0.3" height="15.0" fill="rgb(251,147,11)" rx="2" ry="2"/>
<text x="47" y="1823.5"/>
</g>
<g class="parent">
<title>IndexKeyComparator::operator (28,105 samples, 6.51%)</title><rect x="10" y="1909" width="1180" height="15.0" fill="rgb(209,58,50)" rx="2" ry="2" _orig_x="518.4" _orig_width="76.8"/>
<text x="13" y="1919.5" _orig_x="521.4">IndexKeyComparator::operator </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="27.3" y="1989" width="0.1" height="15.0" fill="rgb(233,164,7)" rx="2" ry="2"/>
<text x="30.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.02%)</title><rect x="365.0" y="1909" width="0.3" height="15.0" fill="rgb(244,141,20)" rx="2" ry="2"/>
<text x="368" y="1919.5"/>
</g>
<g class="hide">
<title>__pthread_getspecific (74 samples, 0.02%)</title><rect x="677.2" y="2005" width="0.2" height="15.0" fill="rgb(223,124,40)" rx="2" ry="2"/>
<text x="680.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (471 samples, 0.11%)</title><rect x="384.5" y="1973" width="1.3" height="15.0" fill="rgb(248,115,24)" rx="2" ry="2"/>
<text x="387.5" y="1983.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::new_allocator (65 samples, 0.02%)</title><rect x="578.5" y="1829" width="0.2" height="15.0" fill="rgb(223,139,46)" rx="2" ry="2"/>
<text x="581.5" y="1839.5"/>
</g>
<g class="hide">
<title>snapd (38 samples, 0.01%)</title><rect x="797.3" y="2053" width="0.1" height="15.0" fill="rgb(250,138,6)" rx="2" ry="2"/>
<text x="800.3" y="2063.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (43 samples, 0.01%)</title><rect x="22.4" y="1989" width="0.2" height="15.0" fill="rgb(232,123,23)" rx="2" ry="2"/>
<text x="25.4" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="20.6" y="1973" width="0.7" height="15.0" fill="rgb(206,28,42)" rx="2" ry="2"/>
<text x="23.6" y="1983.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (39 samples, 0.01%)</title><rect x="636.6" y="1925" width="0.1" height="15.0" fill="rgb(210,97,5)" rx="2" ry="2"/>
<text x="639.6" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (167 samples, 0.04%)</title><rect x="250.8" y="1957" width="0.5" height="15.0" fill="rgb(244,20,34)" rx="2" ry="2"/>
<text x="253.8" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (626 samples, 0.14%)</title><rect x="18.7" y="1781" width="1.7" height="15.0" fill="rgb(229,227,37)" rx="2" ry="2"/>
<text x="21.7" y="1791.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (155 samples, 0.04%)</title><rect x="243.5" y="1029" width="0.4" height="15.0" fill="rgb(216,185,46)" rx="2" ry="2"/>
<text x="246.5" y="1039.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="501" width="0.8" height="15.0" fill="rgb(221,185,3)" rx="2" ry="2"/>
<text x="57.8" y="511.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (243 samples, 0.06%)</title><rect x="249.2" y="1861" width="0.7" height="15.0" fill="rgb(247,9,51)" rx="2" ry="2"/>
<text x="252.2" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (180 samples, 0.04%)</title><rect x="607.0" y="1765" width="0.5" height="15.0" fill="rgb(250,200,36)" rx="2" ry="2"/>
<text x="610" y="1775.5"/>
</g>
<g class="hide">
<title>operator new[] (48 samples, 0.01%)</title><rect x="266.7" y="1909" width="0.1" height="15.0" fill="rgb(244,0,16)" rx="2" ry="2"/>
<text x="269.7" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="965" width="0.2" height="15.0" fill="rgb(225,226,1)" rx="2" ry="2"/>
<text x="247.2" y="975.5"/>
</g>
<g class="hide">
<title>[code] (294 samples, 0.07%)</title><rect x="51.0" y="1877" width="0.8" height="15.0" fill="rgb(234,88,29)" rx="2" ry="2"/>
<text x="54" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (40 samples, 0.01%)</title><rect x="27.0" y="181" width="0.1" height="15.0" fill="rgb(245,125,39)" rx="2" ry="2"/>
<text x="30" y="191.5"/>
</g>
<g class="hide">
<title>[code] (63 samples, 0.01%)</title><rect x="52.5" y="1669" width="0.2" height="15.0" fill="rgb(216,38,35)" rx="2" ry="2"/>
<text x="55.5" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="15.1" y="1733" width="0.1" height="15.0" fill="rgb(234,72,6)" rx="2" ry="2"/>
<text x="18.1" y="1743.5"/>
</g>
<g class="hide">
<title>pa_sink_check_type (69 samples, 0.02%)</title><rect x="198.2" y="2037" width="0.2" height="15.0" fill="rgb(217,97,49)" rx="2" ry="2"/>
<text x="201.2" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="48.2" y="1749" width="0.1" height="15.0" fill="rgb(239,94,40)" rx="2" ry="2"/>
<text x="51.2" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="381.1" y="1973" width="0.6" height="15.0" fill="rgb(236,216,9)" rx="2" ry="2"/>
<text x="384.1" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="392.0" y="1765" width="0.1" height="15.0" fill="rgb(249,190,11)" rx="2" ry="2"/>
<text x="395" y="1775.5"/>
</g>
<g class="hide">
<title>VM_Periodic_Tas (200 samples, 0.05%)</title><rect x="49.2" y="2053" width="0.6" height="15.0" fill="rgb(228,52,28)" rx="2" ry="2"/>
<text x="52.2" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (821 samples, 0.19%)</title><rect x="395.9" y="1893" width="2.2" height="15.0" fill="rgb(246,226,31)" rx="2" ry="2"/>
<text x="398.9" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (323 samples, 0.07%)</title><rect x="433.2" y="1781" width="0.9" height="15.0" fill="rgb(218,119,11)" rx="2" ry="2"/>
<text x="436.2" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="515.6" y="1669" width="0.2" height="15.0" fill="rgb(247,209,25)" rx="2" ry="2"/>
<text x="518.6" y="1679.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (48 samples, 0.01%)</title><rect x="22.3" y="1989" width="0.1" height="15.0" fill="rgb(221,210,39)" rx="2" ry="2"/>
<text x="25.3" y="1999.5"/>
</g>
<g class="hide">
<title>__sched_yield (257 samples, 0.06%)</title><rect x="360.3" y="2005" width="0.7" height="15.0" fill="rgb(205,120,14)" rx="2" ry="2"/>
<text x="363.3" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="266.7" y="1893" width="0.1" height="15.0" fill="rgb(229,129,42)" rx="2" ry="2"/>
<text x="269.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="49.3" y="1973" width="0.2" height="15.0" fill="rgb(210,146,42)" rx="2" ry="2"/>
<text x="52.3" y="1983.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1909" width="0.3" height="15.0" fill="rgb(216,36,47)" rx="2" ry="2"/>
<text x="16.5" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (1,185 samples, 0.27%)</title><rect x="17.2" y="1941" width="3.3" height="15.0" fill="rgb(218,166,20)" rx="2" ry="2"/>
<text x="20.2" y="1951.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (65 samples, 0.02%)</title><rect x="475.3" y="1829" width="0.2" height="15.0" fill="rgb(215,106,6)" rx="2" ry="2"/>
<text x="478.3" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (667 samples, 0.15%)</title><rect x="383.9" y="2037" width="1.9" height="15.0" fill="rgb(247,48,6)" rx="2" ry="2"/>
<text x="386.9" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;char*, char&gt; (41 samples, 0.01%)</title><rect x="429.3" y="1813" width="0.1" height="15.0" fill="rgb(218,110,22)" rx="2" ry="2"/>
<text x="432.3" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (45 samples, 0.01%)</title><rect x="431.4" y="1813" width="0.1" height="15.0" fill="rgb(231,11,31)" rx="2" ry="2"/>
<text x="434.4" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="14.9" y="1701" width="0.1" height="15.0" fill="rgb(221,124,31)" rx="2" ry="2"/>
<text x="17.9" y="1711.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_timer_elapsed (80 samples, 0.02%)</title><rect x="197.6" y="2037" width="0.2" height="15.0" fill="rgb(248,80,49)" rx="2" ry="2"/>
<text x="200.6" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (120 samples, 0.03%)</title><rect x="644.4" y="1861" width="0.3" height="15.0" fill="rgb(254,228,7)" rx="2" ry="2"/>
<text x="647.4" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (93 samples, 0.02%)</title><rect x="635.4" y="1861" width="0.2" height="15.0" fill="rgb(209,154,19)" rx="2" ry="2"/>
<text x="638.4" y="1871.5"/>
</g>
<g class="hide">
<title>gdbus (1,837 samples, 0.43%)</title><rect x="345.6" y="2053" width="5.0" height="15.0" fill="rgb(220,39,17)" rx="2" ry="2"/>
<text x="348.6" y="2063.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (67 samples, 0.02%)</title><rect x="676.4028776978436" y="1829" width="2.122302158273381" height="15.0" fill="rgb(236,71,1)" rx="2" ry="2" _orig_x="551.7" _orig_width="0.1"/>
<text x="679.4028776978436" y="1839.5" _orig_x="554.7"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (48 samples, 0.01%)</title><rect x="440.7" y="1781" width="0.1" height="15.0" fill="rgb(242,63,6)" rx="2" ry="2"/>
<text x="443.7" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="793.0" y="1797" width="0.1" height="15.0" fill="rgb(251,24,29)" rx="2" ry="2"/>
<text x="796" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="386.5" y="1893" width="0.1" height="15.0" fill="rgb(241,179,7)" rx="2" ry="2"/>
<text x="389.5" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (83 samples, 0.02%)</title><rect x="608.9" y="1781" width="0.2" height="15.0" fill="rgb(236,144,13)" rx="2" ry="2"/>
<text x="611.9" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (44 samples, 0.01%)</title><rect x="12.3" y="2021" width="0.1" height="15.0" fill="rgb(250,19,54)" rx="2" ry="2"/>
<text x="15.3" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="209.6" y="1621" width="0.1" height="15.0" fill="rgb(247,37,19)" rx="2" ry="2"/>
<text x="212.6" y="1631.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (64 samples, 0.01%)</title><rect x="425.5" y="1781" width="0.2" height="15.0" fill="rgb(244,35,18)" rx="2" ry="2"/>
<text x="428.5" y="1791.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (108 samples, 0.03%)</title><rect x="621.8" y="1877" width="0.3" height="15.0" fill="rgb(227,57,43)" rx="2" ry="2"/>
<text x="624.8" y="1887.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (97 samples, 0.02%)</title><rect x="907.7338129496417" y="1813" width="4.244604316546762" height="15.0" fill="rgb(219,90,36)" rx="2" ry="2" _orig_x="562.6" _orig_width="0.2"/>
<text x="910.7338129496417" y="1823.5" _orig_x="565.6"/>
</g>
<g class="hide">
<title>[unknown] (54 samples, 0.01%)</title><rect x="23.4" y="2037" width="0.2" height="15.0" fill="rgb(212,28,12)" rx="2" ry="2"/>
<text x="26.4" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (1,650 samples, 0.38%)</title><rect x="240.2" y="1589" width="4.5" height="15.0" fill="rgb(212,109,11)" rx="2" ry="2"/>
<text x="243.2" y="1599.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,211 samples, 0.51%)</title><rect x="169.1726618705036" y="1797" width="129.46043165467623" height="15.0" fill="rgb(253,4,9)" rx="2" ry="2" _orig_x="527.8" _orig_width="6.1"/>
<text x="172.1726618705036" y="1807.5" _orig_x="530.8">std::__detail::_Ins..</text>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (73 samples, 0.02%)</title><rect x="646.8" y="1797" width="0.2" height="15.0" fill="rgb(238,159,13)" rx="2" ry="2"/>
<text x="649.8" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (948 samples, 0.22%)</title><rect x="241.3" y="1381" width="2.6" height="15.0" fill="rgb(207,158,6)" rx="2" ry="2"/>
<text x="244.3" y="1391.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::EntryAt (706 samples, 0.16%)</title><rect x="511.7" y="1909" width="1.9" height="15.0" fill="rgb(248,192,15)" rx="2" ry="2"/>
<text x="514.7" y="1919.5"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (461 samples, 0.11%)</title><rect x="50.6" y="2021" width="1.2" height="15.0" fill="rgb(215,110,10)" rx="2" ry="2"/>
<text x="53.6" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (87 samples, 0.02%)</title><rect x="643.3" y="1829" width="0.2" height="15.0" fill="rgb(242,88,42)" rx="2" ry="2"/>
<text x="646.3" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="501" width="0.2" height="15.0" fill="rgb(240,74,6)" rx="2" ry="2"/>
<text x="30" y="511.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="341.0" y="1829" width="0.1" height="15.0" fill="rgb(206,219,40)" rx="2" ry="2"/>
<text x="344" y="1839.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (412 samples, 0.10%)</title><rect x="1102.9856115107912" y="1845" width="25.467625899280574" height="15.0" fill="rgb(238,214,11)" rx="2" ry="2" _orig_x="571.8" _orig_width="1.2"/>
<text x="1105.9856115107912" y="1855.5" _orig_x="574.8">s..</text>
</g>
<g class="hide">
<title>[code] (223 samples, 0.05%)</title><rect x="20.7" y="1909" width="0.6" height="15.0" fill="rgb(236,221,3)" rx="2" ry="2"/>
<text x="23.7" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (524 samples, 0.12%)</title><rect x="208.7" y="1845" width="1.4" height="15.0" fill="rgb(242,99,31)" rx="2" ry="2"/>
<text x="211.7" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (56 samples, 0.01%)</title><rect x="623.0" y="1845" width="0.2" height="15.0" fill="rgb(238,44,34)" rx="2" ry="2"/>
<text x="626" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="797.8" y="1893" width="0.1" height="15.0" fill="rgb(243,166,12)" rx="2" ry="2"/>
<text x="800.8" y="1903.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (79 samples, 0.02%)</title><rect x="588.6" y="1765" width="0.3" height="15.0" fill="rgb(205,56,8)" rx="2" ry="2"/>
<text x="591.6" y="1775.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (189 samples, 0.04%)</title><rect x="243.4" y="1093" width="0.5" height="15.0" fill="rgb(232,27,48)" rx="2" ry="2"/>
<text x="246.4" y="1103.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,294 samples, 0.99%)</title><rect x="721.1" y="1749" width="11.7" height="15.0" fill="rgb(234,74,20)" rx="2" ry="2"/>
<text x="724.1" y="1759.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (52 samples, 0.01%)</title><rect x="797.8" y="2021" width="0.1" height="15.0" fill="rgb(250,5,12)" rx="2" ry="2"/>
<text x="800.8" y="2031.5"/>
</g>
<g class="hide">
<title>__libc_write (45 samples, 0.01%)</title><rect x="15.1" y="1749" width="0.1" height="15.0" fill="rgb(242,151,32)" rx="2" ry="2"/>
<text x="18.1" y="1759.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (49 samples, 0.01%)</title><rect x="888.6330935251817" y="1813" width="4.244604316546762" height="15.0" fill="rgb(249,83,18)" rx="2" ry="2" _orig_x="561.7" _orig_width="0.2"/>
<text x="891.6330935251817" y="1823.5" _orig_x="564.7"/>
</g>
<g class="hide">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (79 samples, 0.02%)</title><rect x="614.2" y="1877" width="0.2" height="15.0" fill="rgb(211,130,42)" rx="2" ry="2"/>
<text x="617.2" y="1887.5"/>
</g>
<g class="hide">
<title>__pthread_enable_asynccancel (55 samples, 0.01%)</title><rect x="207.2" y="2021" width="0.2" height="15.0" fill="rgb(232,197,10)" rx="2" ry="2"/>
<text x="210.2" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (124 samples, 0.03%)</title><rect x="248.3" y="1893" width="0.3" height="15.0" fill="rgb(222,177,26)" rx="2" ry="2"/>
<text x="251.3" y="1903.5"/>
</g>
<g class="hide">
<title>start_thread (1,073 samples, 0.25%)</title><rect x="41.4" y="2037" width="2.9" height="15.0" fill="rgb(212,41,30)" rx="2" ry="2"/>
<text x="44.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_S_get (37 samples, 0.01%)</title><rect x="588.8" y="1749" width="0.1" height="15.0" fill="rgb(248,167,11)" rx="2" ry="2"/>
<text x="591.8" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (216 samples, 0.05%)</title><rect x="389.3" y="1957" width="0.6" height="15.0" fill="rgb(248,51,51)" rx="2" ry="2"/>
<text x="392.3" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,336 samples, 0.31%)</title><rect x="781.2" y="2005" width="3.7" height="15.0" fill="rgb(214,159,50)" rx="2" ry="2"/>
<text x="784.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,924 samples, 1.60%)</title><rect x="218.1" y="1941" width="18.9" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2"/>
<text x="221.1" y="1951.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (38 samples, 0.01%)</title><rect x="472.8" y="1829" width="0.1" height="15.0" fill="rgb(245,28,10)" rx="2" ry="2"/>
<text x="475.8" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1013" width="0.2" height="15.0" fill="rgb(235,139,27)" rx="2" ry="2"/>
<text x="30" y="1023.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (259 samples, 0.06%)</title><rect x="389.2" y="1973" width="0.7" height="15.0" fill="rgb(233,22,47)" rx="2" ry="2"/>
<text x="392.2" y="1983.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (168 samples, 0.04%)</title><rect x="931.0791366906493" y="1861" width="10.611510791366905" height="15.0" fill="rgb(220,137,47)" rx="2" ry="2" _orig_x="563.7" _orig_width="0.5"/>
<text x="934.0791366906493" y="1871.5" _orig_x="566.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,702 samples, 1.09%)</title><rect x="320.8" y="1973" width="12.9" height="15.0" fill="rgb(250,69,10)" rx="2" ry="2"/>
<text x="323.8" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="130.0" y="1925" width="0.1" height="15.0" fill="rgb(242,49,42)" rx="2" ry="2"/>
<text x="133" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,443 samples, 0.33%)</title><rect x="441.6" y="1781" width="3.9" height="15.0" fill="rgb(224,191,34)" rx="2" ry="2"/>
<text x="444.6" y="1791.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (81 samples, 0.02%)</title><rect x="911.978417266187" y="1813" width="6.366906474820143" height="15.0" fill="rgb(206,111,35)" rx="2" ry="2" _orig_x="562.8" _orig_width="0.3"/>
<text x="914.978417266187" y="1823.5" _orig_x="565.8"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (400 samples, 0.09%)</title><rect x="619.1007194244613" y="1861" width="23.345323741007192" height="15.0" fill="rgb(240,121,53)" rx="2" ry="2" _orig_x="549.0" _orig_width="1.1"/>
<text x="622.1007194244613" y="1871.5" _orig_x="552">s..</text>
</g>
<g class="hide">
<title>[perf-123031.map] (56 samples, 0.01%)</title><rect x="245.7" y="1125" width="0.1" height="15.0" fill="rgb(247,29,47)" rx="2" ry="2"/>
<text x="248.7" y="1135.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.03%)</title><rect x="374.5" y="2021" width="0.3" height="15.0" fill="rgb(254,24,52)" rx="2" ry="2"/>
<text x="377.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (588 samples, 0.14%)</title><rect x="338.1" y="1941" width="1.6" height="15.0" fill="rgb(216,81,38)" rx="2" ry="2"/>
<text x="341.1" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1621" width="0.8" height="15.0" fill="rgb(232,222,34)" rx="2" ry="2"/>
<text x="57.8" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (207 samples, 0.05%)</title><rect x="697.1" y="1733" width="0.5" height="15.0" fill="rgb(245,150,9)" rx="2" ry="2"/>
<text x="700.1" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (75 samples, 0.02%)</title><rect x="243.1" y="773" width="0.2" height="15.0" fill="rgb(213,109,9)" rx="2" ry="2"/>
<text x="246.1" y="783.5"/>
</g>
<g class="hide">
<title>kworker/1:0-eve (667 samples, 0.15%)</title><rect x="383.9" y="2053" width="1.9" height="15.0" fill="rgb(212,219,8)" rx="2" ry="2"/>
<text x="386.9" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="392.0" y="1893" width="0.1" height="15.0" fill="rgb(227,223,28)" rx="2" ry="2"/>
<text x="395" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (53 samples, 0.01%)</title><rect x="16.2" y="1781" width="0.1" height="15.0" fill="rgb(213,120,5)" rx="2" ry="2"/>
<text x="19.2" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (275 samples, 0.06%)</title><rect x="456.6" y="1733" width="0.7" height="15.0" fill="rgb(223,13,53)" rx="2" ry="2"/>
<text x="459.6" y="1743.5"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (37 samples, 0.01%)</title><rect x="266.6" y="1925" width="0.1" height="15.0" fill="rgb(227,70,26)" rx="2" ry="2"/>
<text x="269.6" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.03%)</title><rect x="381.3" y="1909" width="0.4" height="15.0" fill="rgb(235,150,20)" rx="2" ry="2"/>
<text x="384.3" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (356 samples, 0.08%)</title><rect x="576.9" y="1845" width="1.0" height="15.0" fill="rgb(215,226,2)" rx="2" ry="2"/>
<text x="579.9" y="1855.5"/>
</g>
<g class="hide">
<title>start_thread (47 samples, 0.01%)</title><rect x="22.6" y="2037" width="0.1" height="15.0" fill="rgb(243,122,45)" rx="2" ry="2"/>
<text x="25.6" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="364.6" y="1781" width="0.1" height="15.0" fill="rgb(222,150,18)" rx="2" ry="2"/>
<text x="367.6" y="1791.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (3,948 samples, 0.91%)</title><rect x="579.6" y="1861" width="10.8" height="15.0" fill="rgb(230,211,30)" rx="2" ry="2"/>
<text x="582.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (669 samples, 0.15%)</title><rect x="793.4" y="1845" width="1.8" height="15.0" fill="rgb(233,135,51)" rx="2" ry="2"/>
<text x="796.4" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (41 samples, 0.01%)</title><rect x="505.5" y="1765" width="0.1" height="15.0" fill="rgb(224,71,11)" rx="2" ry="2"/>
<text x="508.5" y="1775.5"/>
</g>
<g class="hide">
<title>pvclock_gtod_notify (54 samples, 0.01%)</title><rect x="1127.1" y="1733" width="0.2" height="15.0" fill="rgb(219,60,22)" rx="2" ry="2"/>
<text x="1130.1" y="1743.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (80 samples, 0.02%)</title><rect x="481.5" y="1749" width="0.2" height="15.0" fill="rgb(233,172,15)" rx="2" ry="2"/>
<text x="484.5" y="1759.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (37 samples, 0.01%)</title><rect x="448.6" y="1797" width="0.1" height="15.0" fill="rgb(215,20,31)" rx="2" ry="2"/>
<text x="451.6" y="1807.5"/>
</g>
<g class="hide">
<title>Row::DeserializeFrom (14,488 samples, 3.36%)</title><rect x="453.3" y="1861" width="39.6" height="15.0" fill="rgb(248,134,25)" rx="2" ry="2"/>
<text x="456.3" y="1871.5">Row..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (887 samples, 0.21%)</title><rect x="337.3" y="1989" width="2.4" height="15.0" fill="rgb(249,10,48)" rx="2" ry="2"/>
<text x="340.3" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (50 samples, 0.01%)</title><rect x="616.4" y="1845" width="0.2" height="15.0" fill="rgb(232,178,26)" rx="2" ry="2"/>
<text x="619.4" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.04%)</title><rect x="46.8" y="1973" width="0.4" height="15.0" fill="rgb(209,17,29)" rx="2" ry="2"/>
<text x="49.8" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="244.4" y="1445" width="0.2" height="15.0" fill="rgb(250,71,12)" rx="2" ry="2"/>
<text x="247.4" y="1455.5"/>
</g>
<g class="hide">
<title>kworker/0:2-eve (348 samples, 0.08%)</title><rect x="381.7" y="2053" width="1.0" height="15.0" fill="rgb(228,13,35)" rx="2" ry="2"/>
<text x="384.7" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="12.7" y="1893" width="0.2" height="15.0" fill="rgb(209,37,35)" rx="2" ry="2"/>
<text x="15.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.02%)</title><rect x="15.4" y="1781" width="0.2" height="15.0" fill="rgb(206,121,14)" rx="2" ry="2"/>
<text x="18.4" y="1791.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="2005" width="0.3" height="15.0" fill="rgb(214,59,4)" rx="2" ry="2"/>
<text x="16.5" y="2015.5"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (46 samples, 0.01%)</title><rect x="369.3" y="2021" width="0.1" height="15.0" fill="rgb(239,4,4)" rx="2" ry="2"/>
<text x="372.3" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (62 samples, 0.01%)</title><rect x="476.9" y="1813" width="0.2" height="15.0" fill="rgb(234,0,10)" rx="2" ry="2"/>
<text x="479.9" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (41 samples, 0.01%)</title><rect x="491.7" y="1829" width="0.1" height="15.0" fill="rgb(223,201,14)" rx="2" ry="2"/>
<text x="494.7" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (130 samples, 0.03%)</title><rect x="599.4" y="1877" width="0.4" height="15.0" fill="rgb(215,88,30)" rx="2" ry="2"/>
<text x="602.4" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="210.2" y="1925" width="0.2" height="15.0" fill="rgb(217,84,7)" rx="2" ry="2"/>
<text x="213.2" y="1935.5"/>
</g>
<g class="hide">
<title>record__write.isra.0 (40 samples, 0.01%)</title><rect x="795.2" y="1957" width="0.1" height="15.0" fill="rgb(231,223,25)" rx="2" ry="2"/>
<text x="798.2" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (77 samples, 0.02%)</title><rect x="629.9" y="1845" width="0.3" height="15.0" fill="rgb(208,107,24)" rx="2" ry="2"/>
<text x="632.9" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.02%)</title><rect x="245.6" y="1525" width="0.2" height="15.0" fill="rgb(234,174,24)" rx="2" ry="2"/>
<text x="248.6" y="1535.5"/>
</g>
<g class="hide">
<title>v8::internal::ConcurrentMarking::Run (616 samples, 0.14%)</title><rect x="42.3" y="1845" width="1.7" height="15.0" fill="rgb(209,144,51)" rx="2" ry="2"/>
<text x="45.3" y="1855.5"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (519 samples, 0.12%)</title><rect x="672.5" y="2037" width="1.4" height="15.0" fill="rgb(206,64,21)" rx="2" ry="2"/>
<text x="675.5" y="2047.5"/>
</g>
<g class="hide">
<title>JavaCalls::call_helper (66 samples, 0.02%)</title><rect x="25.6" y="1941" width="0.2" height="15.0" fill="rgb(225,97,38)" rx="2" ry="2"/>
<text x="28.6" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (49 samples, 0.01%)</title><rect x="514.7" y="1765" width="0.1" height="15.0" fill="rgb(228,154,33)" rx="2" ry="2"/>
<text x="517.7" y="1775.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (284 samples, 0.07%)</title><rect x="355.6" y="1989" width="0.8" height="15.0" fill="rgb(213,169,29)" rx="2" ry="2"/>
<text x="358.6" y="1999.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (53 samples, 0.01%)</title><rect x="364.4244604316556" y="1733" width="4.244604316546762" height="15.0" fill="rgb(249,50,51)" rx="2" ry="2" _orig_x="537.0" _orig_width="0.2"/>
<text x="367.4244604316556" y="1743.5" _orig_x="540"/>
</g>
<g class="hide">
<title>BPlusTreeInternalPage::EntryAt (59 samples, 0.01%)</title><rect x="511.3" y="1909" width="0.1" height="15.0" fill="rgb(210,178,3)" rx="2" ry="2"/>
<text x="514.3" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.03%)</title><rect x="237.1" y="1925" width="0.3" height="15.0" fill="rgb(238,172,50)" rx="2" ry="2"/>
<text x="240.1" y="1935.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_destroy (46 samples, 0.01%)</title><rect x="677.4" y="2005" width="0.2" height="15.0" fill="rgb(251,105,53)" rx="2" ry="2"/>
<text x="680.4" y="2015.5"/>
</g>
<g class="hide">
<title>g_slice_alloc (66 samples, 0.02%)</title><rect x="368.4" y="2037" width="0.1" height="15.0" fill="rgb(205,200,43)" rx="2" ry="2"/>
<text x="371.4" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (90 samples, 0.02%)</title><rect x="472.0" y="1845" width="0.2" height="15.0" fill="rgb(243,172,39)" rx="2" ry="2"/>
<text x="475" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="661" width="0.8" height="15.0" fill="rgb(229,163,12)" rx="2" ry="2"/>
<text x="57.8" y="671.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (551 samples, 0.13%)</title><rect x="1186.9" y="1925" width="1.5" height="15.0" fill="rgb(230,159,8)" rx="2" ry="2"/>
<text x="1189.9" y="1935.5"/>
</g>
<g class="hide">
<title>threaded-ml (96 samples, 0.02%)</title><rect x="1183.1" y="2053" width="0.3" height="15.0" fill="rgb(227,39,19)" rx="2" ry="2"/>
<text x="1186.1" y="2063.5"/>
</g>
<g class="hide">
<title>start_thread (701 samples, 0.16%)</title><rect x="14.1" y="2037" width="1.9" height="15.0" fill="rgb(206,40,16)" rx="2" ry="2"/>
<text x="17.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.03%)</title><rect x="391.4" y="1973" width="0.4" height="15.0" fill="rgb(240,132,20)" rx="2" ry="2"/>
<text x="394.4" y="1983.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (61 samples, 0.01%)</title><rect x="471.1" y="1845" width="0.2" height="15.0" fill="rgb(206,12,43)" rx="2" ry="2"/>
<text x="474.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="246.1" y="1493" width="0.2" height="15.0" fill="rgb(252,113,38)" rx="2" ry="2"/>
<text x="249.1" y="1503.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (261 samples, 0.06%)</title><rect x="444.8" y="1557" width="0.7" height="15.0" fill="rgb(233,95,0)" rx="2" ry="2"/>
<text x="447.8" y="1567.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="203.2" y="1941" width="0.1" height="15.0" fill="rgb(254,149,37)" rx="2" ry="2"/>
<text x="206.2" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (99 samples, 0.02%)</title><rect x="1184.8" y="2021" width="0.3" height="15.0" fill="rgb(234,187,5)" rx="2" ry="2"/>
<text x="1187.8" y="2031.5"/>
</g>
<g class="hide">
<title>Row::GetField (78 samples, 0.02%)</title><rect x="495.2" y="1877" width="0.2" height="15.0" fill="rgb(239,85,9)" rx="2" ry="2"/>
<text x="498.2" y="1887.5"/>
</g>
<g class="hide">
<title>__libc_pwrite64 (5,806 samples, 1.34%)</title><rect x="681.8" y="1989" width="15.8" height="15.0" fill="rgb(205,117,2)" rx="2" ry="2"/>
<text x="684.8" y="1999.5"/>
</g>
<g class="hide">
<title>ntfs_inode_close (42 samples, 0.01%)</title><rect x="791.1" y="2037" width="0.1" height="15.0" fill="rgb(242,184,27)" rx="2" ry="2"/>
<text x="794.1" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (112 samples, 0.03%)</title><rect x="461.1" y="1685" width="0.3" height="15.0" fill="rgb(252,118,46)" rx="2" ry="2"/>
<text x="464.1" y="1695.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (115 samples, 0.03%)</title><rect x="643.8" y="1861" width="0.3" height="15.0" fill="rgb(206,190,36)" rx="2" ry="2"/>
<text x="646.8" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1605" width="0.2" height="15.0" fill="rgb(251,148,45)" rx="2" ry="2"/>
<text x="249.9" y="1615.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="885" width="0.2" height="15.0" fill="rgb(253,199,49)" rx="2" ry="2"/>
<text x="30" y="895.5"/>
</g>
<g class="hide">
<title>[code] (135 samples, 0.03%)</title><rect x="41.8" y="1797" width="0.3" height="15.0" fill="rgb(242,132,8)" rx="2" ry="2"/>
<text x="44.8" y="1807.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (377 samples, 0.09%)</title><rect x="241.33093525180047" y="1749" width="21.22302158273381" height="15.0" fill="rgb(217,111,50)" rx="2" ry="2" _orig_x="531.2" _orig_width="1.0"/>
<text x="244.33093525180047" y="1759.5" _orig_x="534.2">s..</text>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (193 samples, 0.04%)</title><rect x="580.5" y="1845" width="0.6" height="15.0" fill="rgb(225,145,39)" rx="2" ry="2"/>
<text x="583.5" y="1855.5"/>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (68 samples, 0.02%)</title><rect x="47.2" y="2037" width="0.2" height="15.0" fill="rgb(218,84,26)" rx="2" ry="2"/>
<text x="50.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::__niter_base&lt;Field**&gt; (49 samples, 0.01%)</title><rect x="620.3" y="1781" width="0.2" height="15.0" fill="rgb(217,133,23)" rx="2" ry="2"/>
<text x="623.3" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.05%)</title><rect x="48.5" y="1925" width="0.5" height="15.0" fill="rgb(212,31,7)" rx="2" ry="2"/>
<text x="51.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.02%)</title><rect x="16.9" y="1957" width="0.2" height="15.0" fill="rgb(240,149,13)" rx="2" ry="2"/>
<text x="19.9" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (98 samples, 0.02%)</title><rect x="593.8" y="1845" width="0.3" height="15.0" fill="rgb(219,14,47)" rx="2" ry="2"/>
<text x="596.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (81 samples, 0.02%)</title><rect x="643.6" y="1829" width="0.2" height="15.0" fill="rgb(210,46,36)" rx="2" ry="2"/>
<text x="646.6" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="885" width="0.8" height="15.0" fill="rgb(230,65,45)" rx="2" ry="2"/>
<text x="57.8" y="895.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="346.9" y="1829" width="0.1" height="15.0" fill="rgb(231,113,29)" rx="2" ry="2"/>
<text x="349.9" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (134 samples, 0.03%)</title><rect x="648.3" y="1797" width="0.3" height="15.0" fill="rgb(226,113,19)" rx="2" ry="2"/>
<text x="651.3" y="1807.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (263 samples, 0.06%)</title><rect x="645.4" y="1877" width="0.8" height="15.0" fill="rgb(249,151,13)" rx="2" ry="2"/>
<text x="648.4" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (413 samples, 0.10%)</title><rect x="504.0" y="1749" width="1.1" height="15.0" fill="rgb(217,98,50)" rx="2" ry="2"/>
<text x="507" y="1759.5"/>
</g>
<g class="hide">
<title>__strlen_avx2 (769 samples, 0.18%)</title><rect x="769.1" y="2021" width="2.1" height="15.0" fill="rgb(236,48,33)" rx="2" ry="2"/>
<text x="772.1" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (122 samples, 0.03%)</title><rect x="485.8" y="1845" width="0.3" height="15.0" fill="rgb(246,40,24)" rx="2" ry="2"/>
<text x="488.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (344 samples, 0.08%)</title><rect x="598.2" y="1893" width="0.9" height="15.0" fill="rgb(222,21,2)" rx="2" ry="2"/>
<text x="601.2" y="1903.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (39 samples, 0.01%)</title><rect x="13.7" y="1813" width="0.1" height="15.0" fill="rgb(242,223,3)" rx="2" ry="2"/>
<text x="16.7" y="1823.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (2,147 samples, 0.50%)</title><rect x="956.5467625899284" y="1861" width="125.21582733812949" height="15.0" fill="rgb(250,96,32)" rx="2" ry="2" _orig_x="564.9" _orig_width="5.9"/>
<text x="959.5467625899284" y="1871.5" _orig_x="567.9">std::vector&lt;char, ..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="793.1" y="1893" width="0.1" height="15.0" fill="rgb(223,104,16)" rx="2" ry="2"/>
<text x="796.1" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="383.8" y="1925" width="0.1" height="15.0" fill="rgb(229,198,12)" rx="2" ry="2"/>
<text x="386.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (48 samples, 0.01%)</title><rect x="435.1" y="1797" width="0.2" height="15.0" fill="rgb(231,35,27)" rx="2" ry="2"/>
<text x="438.1" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="12.6" y="1989" width="0.3" height="15.0" fill="rgb(239,58,1)" rx="2" ry="2"/>
<text x="15.6" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="364.5" y="1957" width="0.2" height="15.0" fill="rgb(219,153,16)" rx="2" ry="2"/>
<text x="367.5" y="1967.5"/>
</g>
<g class="">
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (441 samples, 0.10%)</title><rect x="1022.3381294964038" y="1797" width="25.467625899280574" height="15.0" fill="rgb(231,88,28)" rx="2" ry="2" _orig_x="568.0" _orig_width="1.2"/>
<text x="1025.3381294964038" y="1807.5" _orig_x="571">s..</text>
</g>
<g class="hide">
<title>[code] (116 samples, 0.03%)</title><rect x="243.0" y="885" width="0.3" height="15.0" fill="rgb(249,110,36)" rx="2" ry="2"/>
<text x="246" y="895.5"/>
</g>
<g class="">
<title>operator new (57 samples, 0.01%)</title><rect x="746.4388489208642" y="1781" width="2.122302158273381" height="15.0" fill="rgb(245,123,7)" rx="2" ry="2" _orig_x="555.0" _orig_width="0.1"/>
<text x="749.4388489208642" y="1791.5" _orig_x="558"/>
</g>
<g class="hide">
<title>[libxul.so] (40 samples, 0.01%)</title><rect x="28.2" y="1989" width="0.1" height="15.0" fill="rgb(221,169,49)" rx="2" ry="2"/>
<text x="31.2" y="1999.5"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1·dwrap·1 (180 samples, 0.04%)</title><rect x="340.9" y="2021" width="0.5" height="15.0" fill="rgb(215,153,51)" rx="2" ry="2"/>
<text x="343.9" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="661" width="0.2" height="15.0" fill="rgb(226,137,10)" rx="2" ry="2"/>
<text x="30" y="671.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="15.1" y="1717" width="0.1" height="15.0" fill="rgb(234,12,46)" rx="2" ry="2"/>
<text x="18.1" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (199 samples, 0.05%)</title><rect x="250.7" y="1973" width="0.6" height="15.0" fill="rgb(238,124,8)" rx="2" ry="2"/>
<text x="253.7" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (136 samples, 0.03%)</title><rect x="243.5" y="981" width="0.4" height="15.0" fill="rgb(251,171,1)" rx="2" ry="2"/>
<text x="246.5" y="991.5"/>
</g>
<g class="hide">
<title>g_socket_send_message (40 samples, 0.01%)</title><rect x="348.8" y="2021" width="0.1" height="15.0" fill="rgb(209,145,45)" rx="2" ry="2"/>
<text x="351.8" y="2031.5"/>
</g>
<g class="hide">
<title>alsa-sink-ALC25 (53,241 samples, 12.33%)</title><rect x="57.4" y="2053" width="145.5" height="15.0" fill="rgb(227,150,26)" rx="2" ry="2"/>
<text x="60.4" y="2063.5">alsa-sink-ALC25 </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,605 samples, 0.37%)</title><rect x="256.6" y="1909" width="4.4" height="15.0" fill="rgb(225,203,35)" rx="2" ry="2"/>
<text x="259.6" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (87 samples, 0.02%)</title><rect x="650.5" y="1845" width="0.2" height="15.0" fill="rgb(221,222,50)" rx="2" ry="2"/>
<text x="653.5" y="1855.5"/>
</g>
<g class="hide">
<title>std::min&lt;unsigned long&gt; (40 samples, 0.01%)</title><rect x="491.0" y="1797" width="0.1" height="15.0" fill="rgb(252,187,20)" rx="2" ry="2"/>
<text x="494" y="1807.5"/>
</g>
<g class="hide">
<title>operator delete (38 samples, 0.01%)</title><rect x="507.3" y="1861" width="0.1" height="15.0" fill="rgb(206,75,45)" rx="2" ry="2"/>
<text x="510.3" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (142 samples, 0.03%)</title><rect x="627.8" y="1861" width="0.4" height="15.0" fill="rgb(215,89,20)" rx="2" ry="2"/>
<text x="630.8" y="1871.5"/>
</g>
<g class="hide">
<title>Field::DeserializeFrom (324 samples, 0.08%)</title><rect x="643.3" y="1893" width="0.8" height="15.0" fill="rgb(251,33,5)" rx="2" ry="2"/>
<text x="646.3" y="1903.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (56 samples, 0.01%)</title><rect x="503.8" y="1749" width="0.2" height="15.0" fill="rgb(223,81,19)" rx="2" ry="2"/>
<text x="506.8" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.01%)</title><rect x="348.0" y="1909" width="0.1" height="15.0" fill="rgb(242,206,38)" rx="2" ry="2"/>
<text x="351" y="1919.5"/>
</g>
<g class="hide">
<title>TablePage::ApplyDelete (194 samples, 0.04%)</title><rect x="657.0" y="1957" width="0.6" height="15.0" fill="rgb(235,106,42)" rx="2" ry="2"/>
<text x="660" y="1967.5"/>
</g>
<g class="hide">
<title>std::fill_n&lt;char*, unsigned long, char&gt; (215 samples, 0.05%)</title><rect x="489.5" y="1765" width="0.5" height="15.0" fill="rgb(205,38,24)" rx="2" ry="2"/>
<text x="492.5" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1989" width="0.4" height="15.0" fill="rgb(219,88,20)" rx="2" ry="2"/>
<text x="240.4" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="237.1" y="1861" width="0.3" height="15.0" fill="rgb(238,94,43)" rx="2" ry="2"/>
<text x="240.1" y="1871.5"/>
</g>
<g class="hide">
<title>pa_memblockq_peek (85 samples, 0.02%)</title><rect x="179.9" y="2021" width="0.3" height="15.0" fill="rgb(232,71,46)" rx="2" ry="2"/>
<text x="182.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.02%)</title><rect x="32.9" y="1893" width="0.2" height="15.0" fill="rgb(247,64,48)" rx="2" ry="2"/>
<text x="35.9" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="798.3" y="1957" width="0.2" height="15.0" fill="rgb(250,204,1)" rx="2" ry="2"/>
<text x="801.3" y="1967.5"/>
</g>
<g class="hide">
<title>read (127 samples, 0.03%)</title><rect x="237.0" y="2021" width="0.4" height="15.0" fill="rgb(206,120,51)" rx="2" ry="2"/>
<text x="240" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (65 samples, 0.02%)</title><rect x="633.6" y="1829" width="0.2" height="15.0" fill="rgb(247,202,1)" rx="2" ry="2"/>
<text x="636.6" y="1839.5"/>
</g>
<g class="hide">
<title>hid_input_report (75 samples, 0.02%)</title><rect x="380.1" y="1957" width="0.2" height="15.0" fill="rgb(253,129,31)" rx="2" ry="2"/>
<text x="383.1" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (43 samples, 0.01%)</title><rect x="27.0" y="213" width="0.1" height="15.0" fill="rgb(240,23,30)" rx="2" ry="2"/>
<text x="30" y="223.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="346.9" y="1781" width="0.1" height="15.0" fill="rgb(215,47,13)" rx="2" ry="2"/>
<text x="349.9" y="1791.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;Row const*, Row*&gt; (595 samples, 0.14%)</title><rect x="647.1" y="1877" width="1.7" height="15.0" fill="rgb(233,15,44)" rx="2" ry="2"/>
<text x="650.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,118 samples, 0.26%)</title><rect x="781.8" y="1925" width="3.1" height="15.0" fill="rgb(215,63,39)" rx="2" ry="2"/>
<text x="784.8" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,637 samples, 4.32%)</title><rect x="1127.8" y="1957" width="51.0" height="15.0" fill="rgb(240,65,0)" rx="2" ry="2"/>
<text x="1130.8" y="1967.5">[[kern..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="366.9" y="1989" width="0.2" height="15.0" fill="rgb(223,106,49)" rx="2" ry="2"/>
<text x="369.9" y="1999.5"/>
</g>
<g class="hide">
<title>pa_timeval_add (74 samples, 0.02%)</title><rect x="201.3" y="2037" width="0.2" height="15.0" fill="rgb(208,177,25)" rx="2" ry="2"/>
<text x="204.3" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;char*&gt; (37 samples, 0.01%)</title><rect x="491.5" y="1813" width="0.1" height="15.0" fill="rgb(232,159,12)" rx="2" ry="2"/>
<text x="494.5" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (482 samples, 0.11%)</title><rect x="618.4" y="1829" width="1.3" height="15.0" fill="rgb(214,60,41)" rx="2" ry="2"/>
<text x="621.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,052 samples, 0.24%)</title><rect x="762.6" y="1765" width="2.9" height="15.0" fill="rgb(223,97,19)" rx="2" ry="2"/>
<text x="765.6" y="1775.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (67 samples, 0.02%)</title><rect x="630.2" y="1861" width="0.1" height="15.0" fill="rgb(229,41,36)" rx="2" ry="2"/>
<text x="633.2" y="1871.5"/>
</g>
<g class="hide">
<title>[Xorg] (63 samples, 0.01%)</title><rect x="54.6" y="1925" width="0.2" height="15.0" fill="rgb(219,184,26)" rx="2" ry="2"/>
<text x="57.6" y="1935.5"/>
</g>
<g class="hide">
<title>kworker/11:2 (198 samples, 0.05%)</title><rect x="383.4" y="2053" width="0.5" height="15.0" fill="rgb(227,78,52)" rx="2" ry="2"/>
<text x="386.4" y="2063.5"/>
</g>
<g class="">
<title>std::__fill_a&lt;char&gt; (57 samples, 0.01%)</title><rect x="1041.4388489208636" y="1749" width="2.122302158273381" height="15.0" fill="rgb(239,12,45)" rx="2" ry="2" _orig_x="568.9" _orig_width="0.1"/>
<text x="1044.4388489208636" y="1759.5" _orig_x="571.9"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (3,749 samples, 0.87%)</title><rect x="440.3" y="1893" width="10.2" height="15.0" fill="rgb(216,143,40)" rx="2" ry="2"/>
<text x="443.3" y="1903.5"/>
</g>
<g class="hide">
<title>Field::CompareGreaterThan (81 samples, 0.02%)</title><rect x="415.7" y="1861" width="0.2" height="15.0" fill="rgb(243,47,1)" rx="2" ry="2"/>
<text x="418.7" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (94 samples, 0.02%)</title><rect x="650.2" y="1877" width="0.2" height="15.0" fill="rgb(215,94,42)" rx="2" ry="2"/>
<text x="653.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="49.3" y="1957" width="0.2" height="15.0" fill="rgb(224,26,3)" rx="2" ry="2"/>
<text x="52.3" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1573" width="0.8" height="15.0" fill="rgb(235,190,47)" rx="2" ry="2"/>
<text x="57.8" y="1583.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1509" width="0.2" height="15.0" fill="rgb(253,30,29)" rx="2" ry="2"/>
<text x="30" y="1519.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="346.8" y="1957" width="0.2" height="15.0" fill="rgb(235,199,32)" rx="2" ry="2"/>
<text x="349.8" y="1967.5"/>
</g>
<g class="hide">
<title>runtime.notetsleep_internal (42 samples, 0.01%)</title><rect x="340.7" y="1941" width="0.1" height="15.0" fill="rgb(218,118,15)" rx="2" ry="2"/>
<text x="343.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="12.7" y="1877" width="0.2" height="15.0" fill="rgb(245,189,9)" rx="2" ry="2"/>
<text x="15.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.03%)</title><rect x="360.6" y="1925" width="0.4" height="15.0" fill="rgb(216,181,19)" rx="2" ry="2"/>
<text x="363.6" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (269 samples, 0.06%)</title><rect x="54.8" y="229" width="0.7" height="15.0" fill="rgb(244,227,4)" rx="2" ry="2"/>
<text x="57.8" y="239.5"/>
</g>
<g class="hide">
<title>__poll (67 samples, 0.02%)</title><rect x="370.7" y="2021" width="0.1" height="15.0" fill="rgb(247,68,4)" rx="2" ry="2"/>
<text x="373.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="32.8" y="1941" width="0.3" height="15.0" fill="rgb(240,92,45)" rx="2" ry="2"/>
<text x="35.8" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.02%)</title><rect x="366.9" y="2021" width="0.2" height="15.0" fill="rgb(206,111,4)" rx="2" ry="2"/>
<text x="369.9" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (70 samples, 0.02%)</title><rect x="243.1" y="741" width="0.2" height="15.0" fill="rgb(220,9,50)" rx="2" ry="2"/>
<text x="246.1" y="751.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="246.1" y="1477" width="0.2" height="15.0" fill="rgb(221,144,3)" rx="2" ry="2"/>
<text x="249.1" y="1487.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="341.0" y="1861" width="0.1" height="15.0" fill="rgb(233,54,36)" rx="2" ry="2"/>
<text x="344" y="1871.5"/>
</g>
<g class="hide">
<title>Row::Row (479 samples, 0.11%)</title><rect x="645.4" y="1909" width="1.3" height="15.0" fill="rgb(212,219,39)" rx="2" ry="2"/>
<text x="648.4" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="597" width="0.2" height="15.0" fill="rgb(227,167,7)" rx="2" ry="2"/>
<text x="30" y="607.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1189" width="0.6" height="15.0" fill="rgb(226,192,51)" rx="2" ry="2"/>
<text x="246.3" y="1199.5"/>
</g>
<g class="hide">
<title>[code] (78 samples, 0.02%)</title><rect x="16.2" y="1813" width="0.2" height="15.0" fill="rgb(244,116,19)" rx="2" ry="2"/>
<text x="19.2" y="1823.5"/>
</g>
<g class="hide">
<title>__errno_location (98 samples, 0.02%)</title><rect x="732.8" y="2005" width="0.3" height="15.0" fill="rgb(207,217,54)" rx="2" ry="2"/>
<text x="735.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,210 samples, 0.28%)</title><rect x="442.2" y="1717" width="3.3" height="15.0" fill="rgb(219,137,45)" rx="2" ry="2"/>
<text x="445.2" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (266 samples, 0.06%)</title><rect x="248.2" y="1941" width="0.7" height="15.0" fill="rgb(205,21,41)" rx="2" ry="2"/>
<text x="251.2" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="15.7" y="1861" width="0.3" height="15.0" fill="rgb(253,87,33)" rx="2" ry="2"/>
<text x="18.7" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1413" width="0.2" height="15.0" fill="rgb(219,218,43)" rx="2" ry="2"/>
<text x="247.4" y="1423.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="206.9" y="2005" width="0.3" height="15.0" fill="rgb(208,115,7)" rx="2" ry="2"/>
<text x="209.9" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (330 samples, 0.08%)</title><rect x="654.8" y="1909" width="0.9" height="15.0" fill="rgb(229,114,6)" rx="2" ry="2"/>
<text x="657.8" y="1919.5"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (41 samples, 0.01%)</title><rect x="373.8" y="1989" width="0.1" height="15.0" fill="rgb(234,184,6)" rx="2" ry="2"/>
<text x="376.8" y="1999.5"/>
</g>
<g class="hide">
<title>ntfs_rl_vcn_to_lcn (69 samples, 0.02%)</title><rect x="792.5" y="2037" width="0.2" height="15.0" fill="rgb(243,124,12)" rx="2" ry="2"/>
<text x="795.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (282 samples, 0.07%)</title><rect x="386.7" y="2005" width="0.7" height="15.0" fill="rgb(243,161,30)" rx="2" ry="2"/>
<text x="389.7" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="1185.4" y="1957" width="0.1" height="15.0" fill="rgb(238,183,23)" rx="2" ry="2"/>
<text x="1188.4" y="1967.5"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (71 samples, 0.02%)</title><rect x="203.1" y="2037" width="0.2" height="15.0" fill="rgb(219,219,43)" rx="2" ry="2"/>
<text x="206.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (675 samples, 0.16%)</title><rect x="793.4" y="1861" width="1.8" height="15.0" fill="rgb(248,156,38)" rx="2" ry="2"/>
<text x="796.4" y="1871.5"/>
</g>
<g class="hide">
<title>snd_pcm_status_user64 (3,131 samples, 0.73%)</title><rect x="162.3" y="1925" width="8.6" height="15.0" fill="rgb(223,191,30)" rx="2" ry="2"/>
<text x="165.3" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (43 samples, 0.01%)</title><rect x="26.2" y="2005" width="0.1" height="15.0" fill="rgb(228,89,6)" rx="2" ry="2"/>
<text x="29.2" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (116 samples, 0.03%)</title><rect x="517.7" y="1861" width="0.3" height="15.0" fill="rgb(243,165,9)" rx="2" ry="2"/>
<text x="520.7" y="1871.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__rehash (151 samples, 0.03%)</title><rect x="307.5" y="1941" width="0.4" height="15.0" fill="rgb(242,44,36)" rx="2" ry="2"/>
<text x="310.5" y="1951.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (37 samples, 0.01%)</title><rect x="506.4" y="1845" width="0.1" height="15.0" fill="rgb(219,109,21)" rx="2" ry="2"/>
<text x="509.4" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (1,021 samples, 0.24%)</title><rect x="41.5" y="1909" width="2.8" height="15.0" fill="rgb(209,64,37)" rx="2" ry="2"/>
<text x="44.5" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (334 samples, 0.08%)</title><rect x="381.7" y="2021" width="1.0" height="15.0" fill="rgb(241,49,54)" rx="2" ry="2"/>
<text x="384.7" y="2031.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (79 samples, 0.02%)</title><rect x="661.4" y="1861" width="0.2" height="15.0" fill="rgb(212,115,48)" rx="2" ry="2"/>
<text x="664.4" y="1871.5"/>
</g>
<g class="hide">
<title>TypeInt::DeserializeFrom (123 samples, 0.03%)</title><rect x="643.8" y="1877" width="0.3" height="15.0" fill="rgb(210,81,0)" rx="2" ry="2"/>
<text x="646.8" y="1887.5"/>
</g>
<g class="hide">
<title>kworker/5:1-eve (223 samples, 0.05%)</title><rect x="388.4" y="2053" width="0.6" height="15.0" fill="rgb(233,163,35)" rx="2" ry="2"/>
<text x="391.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="645" width="0.2" height="15.0" fill="rgb(205,91,17)" rx="2" ry="2"/>
<text x="30" y="655.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="206.5" y="1845" width="0.2" height="15.0" fill="rgb(245,82,48)" rx="2" ry="2"/>
<text x="209.5" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (128 samples, 0.03%)</title><rect x="464.9" y="1733" width="0.4" height="15.0" fill="rgb(245,99,25)" rx="2" ry="2"/>
<text x="467.9" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (250 samples, 0.06%)</title><rect x="51.1" y="1845" width="0.6" height="15.0" fill="rgb(216,84,5)" rx="2" ry="2"/>
<text x="54.1" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (38 samples, 0.01%)</title><rect x="247.0" y="1509" width="0.1" height="15.0" fill="rgb(227,202,42)" rx="2" ry="2"/>
<text x="250" y="1519.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1717" width="0.8" height="15.0" fill="rgb(218,187,32)" rx="2" ry="2"/>
<text x="57.8" y="1727.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (38 samples, 0.01%)</title><rect x="459.0" y="1749" width="0.1" height="15.0" fill="rgb(213,46,34)" rx="2" ry="2"/>
<text x="462" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="366.9" y="1909" width="0.2" height="15.0" fill="rgb(243,220,17)" rx="2" ry="2"/>
<text x="369.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (2,677 samples, 0.62%)</title><rect x="582.8" y="1829" width="7.4" height="15.0" fill="rgb(234,114,44)" rx="2" ry="2"/>
<text x="585.8" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (2,468 samples, 0.57%)</title><rect x="239.2" y="1701" width="6.8" height="15.0" fill="rgb(236,106,41)" rx="2" ry="2"/>
<text x="242.2" y="1711.5"/>
</g>
<g class="">
<title>std::_Destroy&lt;char*, char&gt; (133 samples, 0.03%)</title><rect x="1083.8848920863313" y="1845" width="8.489208633093524" height="15.0" fill="rgb(229,93,39)" rx="2" ry="2" _orig_x="570.9" _orig_width="0.4"/>
<text x="1086.8848920863313" y="1855.5" _orig_x="573.9"/>
</g>
<g class="hide">
<title>uv_run (834 samples, 0.19%)</title><rect x="248.0" y="1989" width="2.3" height="15.0" fill="rgb(231,196,12)" rx="2" ry="2"/>
<text x="251" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (230 samples, 0.05%)</title><rect x="209.2" y="1733" width="0.6" height="15.0" fill="rgb(226,195,47)" rx="2" ry="2"/>
<text x="212.2" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="391.8" y="1781" width="0.2" height="15.0" fill="rgb(237,159,18)" rx="2" ry="2"/>
<text x="394.8" y="1791.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::IsPageFree (290 samples, 0.07%)</title><rect x="514.3" y="1893" width="0.8" height="15.0" fill="rgb(238,134,14)" rx="2" ry="2"/>
<text x="517.3" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (62 samples, 0.01%)</title><rect x="29.2" y="1941" width="0.1" height="15.0" fill="rgb(226,82,0)" rx="2" ry="2"/>
<text x="32.2" y="1951.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (41 samples, 0.01%)</title><rect x="373.8" y="1973" width="0.1" height="15.0" fill="rgb(244,131,26)" rx="2" ry="2"/>
<text x="376.8" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1989" width="0.2" height="15.0" fill="rgb(244,189,23)" rx="2" ry="2"/>
<text x="36.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (154 samples, 0.04%)</title><rect x="48.6" y="1861" width="0.4" height="15.0" fill="rgb(209,8,25)" rx="2" ry="2"/>
<text x="51.6" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="869" width="0.1" height="15.0" fill="rgb(210,198,18)" rx="2" ry="2"/>
<text x="247" y="879.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1477" width="0.2" height="15.0" fill="rgb(243,195,11)" rx="2" ry="2"/>
<text x="30" y="1487.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (151 samples, 0.03%)</title><rect x="646.2" y="1893" width="0.5" height="15.0" fill="rgb(228,101,48)" rx="2" ry="2"/>
<text x="649.2" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (87 samples, 0.02%)</title><rect x="243.1" y="821" width="0.2" height="15.0" fill="rgb(251,146,2)" rx="2" ry="2"/>
<text x="246.1" y="831.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,556 samples, 0.59%)</title><rect x="230.0" y="1845" width="7.0" height="15.0" fill="rgb(236,115,38)" rx="2" ry="2"/>
<text x="233" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (39 samples, 0.01%)</title><rect x="431.9" y="1813" width="0.2" height="15.0" fill="rgb(252,138,44)" rx="2" ry="2"/>
<text x="434.9" y="1823.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (132 samples, 0.03%)</title><rect x="593.5" y="1829" width="0.3" height="15.0" fill="rgb(227,144,10)" rx="2" ry="2"/>
<text x="596.5" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1381" width="0.2" height="15.0" fill="rgb(209,88,38)" rx="2" ry="2"/>
<text x="30" y="1391.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (188 samples, 0.04%)</title><rect x="243.4" y="1077" width="0.5" height="15.0" fill="rgb(212,42,18)" rx="2" ry="2"/>
<text x="246.4" y="1087.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (44 samples, 0.01%)</title><rect x="457.0" y="1669" width="0.1" height="15.0" fill="rgb(229,64,18)" rx="2" ry="2"/>
<text x="460" y="1679.5"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (83 samples, 0.02%)</title><rect x="812.2302158273395" y="1765" width="4.244604316546762" height="15.0" fill="rgb(225,132,50)" rx="2" ry="2" _orig_x="558.1" _orig_width="0.2"/>
<text x="815.2302158273395" y="1775.5" _orig_x="561.1"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (78 samples, 0.02%)</title><rect x="643.6" y="1813" width="0.2" height="15.0" fill="rgb(224,35,19)" rx="2" ry="2"/>
<text x="646.6" y="1823.5"/>
</g>
<g class="hide">
<title>pa_object_unref (52 samples, 0.01%)</title><rect x="81.6" y="2005" width="0.1" height="15.0" fill="rgb(231,164,35)" rx="2" ry="2"/>
<text x="84.6" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (271 samples, 0.06%)</title><rect x="20.6" y="2021" width="0.7" height="15.0" fill="rgb(253,28,9)" rx="2" ry="2"/>
<text x="23.6" y="2031.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (67 samples, 0.02%)</title><rect x="937.4460431654685" y="1845" width="4.244604316546762" height="15.0" fill="rgb(210,72,28)" rx="2" ry="2" _orig_x="564.0" _orig_width="0.2"/>
<text x="940.4460431654685" y="1855.5" _orig_x="567"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,724 samples, 1.79%)</title><rect x="283.3" y="1797" width="21.1" height="15.0" fill="rgb(243,212,24)" rx="2" ry="2"/>
<text x="286.3" y="1807.5">[..</text>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (50 samples, 0.01%)</title><rect x="661.5" y="1845" width="0.1" height="15.0" fill="rgb(214,185,15)" rx="2" ry="2"/>
<text x="664.5" y="1855.5"/>
</g>
<g class="">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,281 samples, 0.30%)</title><rect x="84.28057553956833" y="1813" width="74.28057553956833" height="15.0" fill="rgb(240,64,26)" rx="2" ry="2" _orig_x="523.8" _orig_width="3.5"/>
<text x="87.28057553956833" y="1823.5" _orig_x="526.8">std::unor..</text>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (706 samples, 0.16%)</title><rect x="841.9424460431663" y="1813" width="40.323741007194236" height="15.0" fill="rgb(206,209,13)" rx="2" ry="2" _orig_x="559.5" _orig_width="1.9"/>
<text x="844.9424460431663" y="1823.5" _orig_x="562.5">std:..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="796.3" y="1973" width="0.1" height="15.0" fill="rgb(243,187,33)" rx="2" ry="2"/>
<text x="799.3" y="1983.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (43 samples, 0.01%)</title><rect x="544.820143884893" y="1861" width="2.122302158273381" height="15.0" fill="rgb(218,174,34)" rx="2" ry="2" _orig_x="545.5" _orig_width="0.1"/>
<text x="547.820143884893" y="1871.5" _orig_x="548.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (985 samples, 0.23%)</title><rect x="605.6" y="1813" width="2.7" height="15.0" fill="rgb(221,210,17)" rx="2" ry="2"/>
<text x="608.6" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (234 samples, 0.05%)</title><rect x="14.6" y="1813" width="0.6" height="15.0" fill="rgb(236,66,17)" rx="2" ry="2"/>
<text x="17.6" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="12.7" y="1941" width="0.2" height="15.0" fill="rgb(211,181,20)" rx="2" ry="2"/>
<text x="15.7" y="1951.5"/>
</g>
<g class="hide">
<title>ib_log_flush (85 samples, 0.02%)</title><rect x="373.4" y="2053" width="0.2" height="15.0" fill="rgb(244,65,47)" rx="2" ry="2"/>
<text x="376.4" y="2063.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (78 samples, 0.02%)</title><rect x="582.0" y="1813" width="0.2" height="15.0" fill="rgb(238,156,33)" rx="2" ry="2"/>
<text x="585" y="1823.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (88 samples, 0.02%)</title><rect x="631.4" y="1781" width="0.2" height="15.0" fill="rgb(231,105,39)" rx="2" ry="2"/>
<text x="634.4" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (202 samples, 0.05%)</title><rect x="209.2" y="1717" width="0.6" height="15.0" fill="rgb(214,52,14)" rx="2" ry="2"/>
<text x="212.2" y="1727.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::~_Vector_base (81 samples, 0.02%)</title><rect x="661.1" y="1957" width="0.2" height="15.0" fill="rgb(210,14,33)" rx="2" ry="2"/>
<text x="664.1" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::operator!=&lt;void*, false&gt; (64 samples, 0.01%)</title><rect x="499.3" y="1829" width="0.2" height="15.0" fill="rgb(232,156,41)" rx="2" ry="2"/>
<text x="502.3" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1381" width="0.8" height="15.0" fill="rgb(242,206,47)" rx="2" ry="2"/>
<text x="57.8" y="1391.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="2021" width="0.2" height="15.0" fill="rgb(243,33,49)" rx="2" ry="2"/>
<text x="801" y="2031.5"/>
</g>
<g class="hide">
<title>stat64 (74 samples, 0.02%)</title><rect x="304.7" y="1957" width="0.2" height="15.0" fill="rgb(242,102,52)" rx="2" ry="2"/>
<text x="307.7" y="1967.5"/>
</g>
<g class="hide">
<title>_int_malloc (1,229 samples, 0.28%)</title><rect x="662.5" y="2037" width="3.4" height="15.0" fill="rgb(253,6,54)" rx="2" ry="2"/>
<text x="665.5" y="2047.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (442 samples, 0.10%)</title><rect x="1052.0503597122306" y="1845" width="25.467625899280574" height="15.0" fill="rgb(210,95,13)" rx="2" ry="2" _orig_x="569.4" _orig_width="1.2"/>
<text x="1055.0503597122306" y="1855.5" _orig_x="572.4">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (516 samples, 0.12%)</title><rect x="409.3" y="1669" width="1.5" height="15.0" fill="rgb(231,59,8)" rx="2" ry="2"/>
<text x="412.3" y="1679.5"/>
</g>
<g class="hide">
<title>IndexKeyComparator::operator (13,280 samples, 3.08%)</title><rect x="600.1" y="1925" width="36.3" height="15.0" fill="rgb(215,148,28)" rx="2" ry="2"/>
<text x="603.1" y="1935.5">In..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (257 samples, 0.06%)</title><rect x="390.7" y="1957" width="0.7" height="15.0" fill="rgb(252,127,14)" rx="2" ry="2"/>
<text x="393.7" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,019 samples, 0.70%)</title><rect x="310.4" y="1973" width="8.2" height="15.0" fill="rgb(221,164,40)" rx="2" ry="2"/>
<text x="313.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1941" width="0.2" height="15.0" fill="rgb(236,64,29)" rx="2" ry="2"/>
<text x="36.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="391.8" y="1797" width="0.2" height="15.0" fill="rgb(220,101,29)" rx="2" ry="2"/>
<text x="394.8" y="1807.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_run (45 samples, 0.01%)</title><rect x="74.5" y="1989" width="0.1" height="15.0" fill="rgb(232,58,16)" rx="2" ry="2"/>
<text x="77.5" y="1999.5"/>
</g>
<g class="hide">
<title>pa_frame_size (190 samples, 0.04%)</title><rect x="177.2" y="2021" width="0.6" height="15.0" fill="rgb(211,10,37)" rx="2" ry="2"/>
<text x="180.2" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1717" width="0.2" height="15.0" fill="rgb(224,6,5)" rx="2" ry="2"/>
<text x="30" y="1727.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (271 samples, 0.06%)</title><rect x="205.0" y="2021" width="0.8" height="15.0" fill="rgb(219,88,2)" rx="2" ry="2"/>
<text x="208" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="645" width="0.8" height="15.0" fill="rgb(248,49,19)" rx="2" ry="2"/>
<text x="57.8" y="655.5"/>
</g>
<g class="hide">
<title>[code] (104 samples, 0.02%)</title><rect x="245.1" y="1397" width="0.2" height="15.0" fill="rgb(224,148,34)" rx="2" ry="2"/>
<text x="248.1" y="1407.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (232 samples, 0.05%)</title><rect x="515.2" y="1829" width="0.6" height="15.0" fill="rgb(247,35,12)" rx="2" ry="2"/>
<text x="518.2" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1477" width="0.8" height="15.0" fill="rgb(245,187,36)" rx="2" ry="2"/>
<text x="57.8" y="1487.5"/>
</g>
<g class="hide">
<title>ntfs_pathname_to_inode (75 samples, 0.02%)</title><rect x="780.2" y="2021" width="0.2" height="15.0" fill="rgb(232,138,29)" rx="2" ry="2"/>
<text x="783.2" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (237 samples, 0.05%)</title><rect x="52.1" y="1877" width="0.7" height="15.0" fill="rgb(237,55,49)" rx="2" ry="2"/>
<text x="55.1" y="1887.5"/>
</g>
<g class="hide">
<title>IndexKey::DeserializeToKey (9,595 samples, 2.22%)</title><rect x="601.1" y="1909" width="26.2" height="15.0" fill="rgb(221,103,1)" rx="2" ry="2"/>
<text x="604.1" y="1919.5">I..</text>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (67 samples, 0.02%)</title><rect x="529.9640287769784" y="1861" width="2.122302158273381" height="15.0" fill="rgb(226,55,14)" rx="2" ry="2" _orig_x="544.8" _orig_width="0.1"/>
<text x="532.9640287769784" y="1871.5" _orig_x="547.8"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.03%)</title><rect x="794.9" y="1637" width="0.3" height="15.0" fill="rgb(226,132,23)" rx="2" ry="2"/>
<text x="797.9" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (246 samples, 0.06%)</title><rect x="360.3" y="1989" width="0.7" height="15.0" fill="rgb(245,185,21)" rx="2" ry="2"/>
<text x="363.3" y="1999.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (41 samples, 0.01%)</title><rect x="471.6" y="1845" width="0.1" height="15.0" fill="rgb(234,41,16)" rx="2" ry="2"/>
<text x="474.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.02%)</title><rect x="1178.5" y="1573" width="0.3" height="15.0" fill="rgb(251,177,32)" rx="2" ry="2"/>
<text x="1181.5" y="1583.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (132 samples, 0.03%)</title><rect x="582.3" y="1845" width="0.3" height="15.0" fill="rgb(236,162,30)" rx="2" ry="2"/>
<text x="585.3" y="1855.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (56 samples, 0.01%)</title><rect x="373.6" y="2021" width="0.2" height="15.0" fill="rgb(223,116,37)" rx="2" ry="2"/>
<text x="376.6" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="1957" width="0.2" height="15.0" fill="rgb(211,222,12)" rx="2" ry="2"/>
<text x="240.9" y="1967.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (577 samples, 0.13%)</title><rect x="654.4" y="1957" width="1.5" height="15.0" fill="rgb(252,110,19)" rx="2" ry="2"/>
<text x="657.4" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (215 samples, 0.05%)</title><rect x="635.2" y="1877" width="0.6" height="15.0" fill="rgb(226,164,19)" rx="2" ry="2"/>
<text x="638.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,475 samples, 0.34%)</title><rect x="441.5" y="1813" width="4.0" height="15.0" fill="rgb(214,44,49)" rx="2" ry="2"/>
<text x="444.5" y="1823.5"/>
</g>
<g class="hide">
<title>ntfs_ucsnlen (46 samples, 0.01%)</title><rect x="780.6" y="2021" width="0.1" height="15.0" fill="rgb(244,57,38)" rx="2" ry="2"/>
<text x="783.6" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (285 samples, 0.07%)</title><rect x="14.5" y="1845" width="0.8" height="15.0" fill="rgb(229,77,43)" rx="2" ry="2"/>
<text x="17.5" y="1855.5"/>
</g>
<g class="hide">
<title>start_thread (1,215 samples, 0.28%)</title><rect x="17.2" y="2037" width="3.3" height="15.0" fill="rgb(241,70,10)" rx="2" ry="2"/>
<text x="20.2" y="2047.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (284 samples, 0.07%)</title><rect x="1107.230215827339" y="1829" width="16.978417266187048" height="15.0" fill="rgb(244,128,48)" rx="2" ry="2" _orig_x="572.0" _orig_width="0.8"/>
<text x="1110.230215827339" y="1839.5" _orig_x="575"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,626 samples, 1.07%)</title><rect x="321.0" y="1957" width="12.7" height="15.0" fill="rgb(224,22,1)" rx="2" ry="2"/>
<text x="324" y="1967.5"/>
</g>
<g class="hide">
<title>snd_pcm_hwsync (142 samples, 0.03%)</title><rect x="185.2" y="2021" width="0.3" height="15.0" fill="rgb(225,182,32)" rx="2" ry="2"/>
<text x="188.2" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="243.3" y="1157" width="0.6" height="15.0" fill="rgb(236,96,47)" rx="2" ry="2"/>
<text x="246.3" y="1167.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (201 samples, 0.05%)</title><rect x="243.3" y="1109" width="0.6" height="15.0" fill="rgb(205,195,16)" rx="2" ry="2"/>
<text x="246.3" y="1119.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1509" width="0.8" height="15.0" fill="rgb(230,63,13)" rx="2" ry="2"/>
<text x="57.8" y="1519.5"/>
</g>
<g class="hide">
<title>[code] (71 samples, 0.02%)</title><rect x="51.5" y="1733" width="0.2" height="15.0" fill="rgb(224,157,34)" rx="2" ry="2"/>
<text x="54.5" y="1743.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (47 samples, 0.01%)</title><rect x="670.035971223022" y="1829" width="4.244604316546762" height="15.0" fill="rgb(254,9,18)" rx="2" ry="2" _orig_x="551.4" _orig_width="0.2"/>
<text x="673.035971223022" y="1839.5" _orig_x="554.4"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (46 samples, 0.01%)</title><rect x="633.6" y="1813" width="0.2" height="15.0" fill="rgb(249,16,16)" rx="2" ry="2"/>
<text x="636.6" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1573" width="0.2" height="15.0" fill="rgb(228,67,1)" rx="2" ry="2"/>
<text x="30" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.03%)</title><rect x="374.5" y="2005" width="0.3" height="15.0" fill="rgb(234,134,25)" rx="2" ry="2"/>
<text x="377.5" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="597" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2"/>
<text x="57.8" y="607.5"/>
</g>
<g class="hide">
<title>[libxul.so] (39 samples, 0.01%)</title><rect x="345.2" y="2037" width="0.1" height="15.0" fill="rgb(231,209,21)" rx="2" ry="2"/>
<text x="348.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (89 samples, 0.02%)</title><rect x="429.7" y="1797" width="0.2" height="15.0" fill="rgb(215,201,30)" rx="2" ry="2"/>
<text x="432.7" y="1807.5"/>
</g>
<g class="hide">
<title>GC_Thread#7 (40 samples, 0.01%)</title><rect x="22.7" y="2053" width="0.1" height="15.0" fill="rgb(238,68,15)" rx="2" ry="2"/>
<text x="25.7" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (592 samples, 0.14%)</title><rect x="396.5" y="1845" width="1.6" height="15.0" fill="rgb(229,37,20)" rx="2" ry="2"/>
<text x="399.5" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field const&amp;&gt; (448 samples, 0.10%)</title><rect x="659.3" y="1957" width="1.2" height="15.0" fill="rgb(226,6,24)" rx="2" ry="2"/>
<text x="662.3" y="1967.5"/>
</g>
<g class="hide">
<title>ntfs_enter_cache (38 samples, 0.01%)</title><rect x="777.0" y="2021" width="0.1" height="15.0" fill="rgb(237,161,49)" rx="2" ry="2"/>
<text x="780" y="2031.5"/>
</g>
<g class="hide">
<title>pa_resampler_max_block_size (434 samples, 0.10%)</title><rect x="195.2" y="2037" width="1.1" height="15.0" fill="rgb(254,123,40)" rx="2" ry="2"/>
<text x="198.2" y="2047.5"/>
</g>
<g class="hide">
<title>DBStorageEngine::~DBStorageEngine (43 samples, 0.01%)</title><rect x="662.4" y="1989" width="0.1" height="15.0" fill="rgb(226,105,18)" rx="2" ry="2"/>
<text x="665.4" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (303 samples, 0.07%)</title><rect x="609.6" y="1765" width="0.8" height="15.0" fill="rgb(221,222,31)" rx="2" ry="2"/>
<text x="612.6" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (163 samples, 0.04%)</title><rect x="508.6" y="1829" width="0.4" height="15.0" fill="rgb(251,99,28)" rx="2" ry="2"/>
<text x="511.6" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1605" width="0.8" height="15.0" fill="rgb(208,17,46)" rx="2" ry="2"/>
<text x="57.8" y="1615.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (80 samples, 0.02%)</title><rect x="346.8" y="1973" width="0.2" height="15.0" fill="rgb(246,129,5)" rx="2" ry="2"/>
<text x="349.8" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (185 samples, 0.04%)</title><rect x="639.0" y="1909" width="0.5" height="15.0" fill="rgb(226,218,21)" rx="2" ry="2"/>
<text x="642" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="757" width="0.2" height="15.0" fill="rgb(223,122,25)" rx="2" ry="2"/>
<text x="30" y="767.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="354.4" y="1781" width="0.1" height="15.0" fill="rgb(211,191,37)" rx="2" ry="2"/>
<text x="357.4" y="1791.5"/>
</g>
<g class="hide">
<title>__xstat64 (106 samples, 0.02%)</title><rect x="32.1" y="2005" width="0.3" height="15.0" fill="rgb(244,223,24)" rx="2" ry="2"/>
<text x="35.1" y="2015.5"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarking::AdvanceWithDeadline (59 samples, 0.01%)</title><rect x="247.8" y="1829" width="0.2" height="15.0" fill="rgb(225,54,13)" rx="2" ry="2"/>
<text x="250.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,559 samples, 0.36%)</title><rect x="693.4" y="1781" width="4.2" height="15.0" fill="rgb(214,31,25)" rx="2" ry="2"/>
<text x="696.4" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="391.3" y="1877" width="0.1" height="15.0" fill="rgb(206,209,28)" rx="2" ry="2"/>
<text x="394.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.03%)</title><rect x="391.4" y="2037" width="0.4" height="15.0" fill="rgb(208,136,33)" rx="2" ry="2"/>
<text x="394.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="1178.6" y="1509" width="0.2" height="15.0" fill="rgb(211,126,5)" rx="2" ry="2"/>
<text x="1181.6" y="1519.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (171 samples, 0.04%)</title><rect x="622.5" y="1845" width="0.5" height="15.0" fill="rgb(230,6,40)" rx="2" ry="2"/>
<text x="625.5" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (113 samples, 0.03%)</title><rect x="24.0" y="2021" width="0.3" height="15.0" fill="rgb(213,45,6)" rx="2" ry="2"/>
<text x="27" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row&gt; (105 samples, 0.02%)</title><rect x="661.4" y="1909" width="0.3" height="15.0" fill="rgb(251,78,21)" rx="2" ry="2"/>
<text x="664.4" y="1919.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (37 samples, 0.01%)</title><rect x="503.9" y="1733" width="0.1" height="15.0" fill="rgb(250,144,18)" rx="2" ry="2"/>
<text x="506.9" y="1743.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (50 samples, 0.01%)</title><rect x="954.4244604316546" y="1861" width="2.122302158273381" height="15.0" fill="rgb(211,110,23)" rx="2" ry="2" _orig_x="564.8" _orig_width="0.1"/>
<text x="957.4244604316546" y="1871.5" _orig_x="567.8"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,401 samples, 0.32%)</title><rect x="460.0" y="1765" width="3.8" height="15.0" fill="rgb(239,158,33)" rx="2" ry="2"/>
<text x="463" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (78 samples, 0.02%)</title><rect x="643.3" y="1813" width="0.2" height="15.0" fill="rgb(217,92,39)" rx="2" ry="2"/>
<text x="646.3" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (502 samples, 0.12%)</title><rect x="427.9" y="1829" width="1.4" height="15.0" fill="rgb(206,148,41)" rx="2" ry="2"/>
<text x="430.9" y="1839.5"/>
</g>
<g class="hide">
<title>MemHeap::MemHeap (42 samples, 0.01%)</title><rect x="576.7" y="1861" width="0.1" height="15.0" fill="rgb(214,81,1)" rx="2" ry="2"/>
<text x="579.7" y="1871.5"/>
</g>
<g class="hide">
<title>record__mmap_read_evlist.constprop.0 (772 samples, 0.18%)</title><rect x="793.2" y="1973" width="2.1" height="15.0" fill="rgb(224,34,0)" rx="2" ry="2"/>
<text x="796.2" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="364.6" y="1861" width="0.1" height="15.0" fill="rgb(211,157,1)" rx="2" ry="2"/>
<text x="367.6" y="1871.5"/>
</g>
<g class="hide">
<title>pa_sink_process_input_underruns (70 samples, 0.02%)</title><rect x="183.0" y="2021" width="0.2" height="15.0" fill="rgb(248,45,53)" rx="2" ry="2"/>
<text x="186" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (43 samples, 0.01%)</title><rect x="650.3" y="1845" width="0.1" height="15.0" fill="rgb(227,62,45)" rx="2" ry="2"/>
<text x="653.3" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (94 samples, 0.02%)</title><rect x="27.0" y="1989" width="0.2" height="15.0" fill="rgb(246,191,23)" rx="2" ry="2"/>
<text x="30" y="1999.5"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (107 samples, 0.02%)</title><rect x="440.6" y="1845" width="0.3" height="15.0" fill="rgb(246,77,52)" rx="2" ry="2"/>
<text x="443.6" y="1855.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__emplace_unique_key_args&lt;Watcher*, Watcher* const&amp;&gt; (322 samples, 0.07%)</title><rect x="304.9" y="1957" width="0.9" height="15.0" fill="rgb(216,216,50)" rx="2" ry="2"/>
<text x="307.9" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="244.0" y="1173" width="0.1" height="15.0" fill="rgb(224,21,1)" rx="2" ry="2"/>
<text x="247" y="1183.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.02%)</title><rect x="15.7" y="1829" width="0.3" height="15.0" fill="rgb(247,114,43)" rx="2" ry="2"/>
<text x="18.7" y="1839.5"/>
</g>
<g class="">
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (42 samples, 0.01%)</title><rect x="455.68345323741005" y="1749" width="2.122302158273381" height="15.0" fill="rgb(229,221,46)" rx="2" ry="2" _orig_x="541.3" _orig_width="0.1"/>
<text x="458.68345323741005" y="1759.5" _orig_x="544.3"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.02%)</title><rect x="44.0" y="1797" width="0.2" height="15.0" fill="rgb(215,144,42)" rx="2" ry="2"/>
<text x="47" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="485" width="0.2" height="15.0" fill="rgb(225,50,36)" rx="2" ry="2"/>
<text x="30" y="495.5"/>
</g>
<g class="hide">
<title>Chrome_IOThread (179 samples, 0.04%)</title><rect x="16.0" y="2053" width="0.5" height="15.0" fill="rgb(234,21,9)" rx="2" ry="2"/>
<text x="19" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="245.1" y="949" width="0.2" height="15.0" fill="rgb(237,204,31)" rx="2" ry="2"/>
<text x="248.1" y="959.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1317" width="0.2" height="15.0" fill="rgb(244,215,28)" rx="2" ry="2"/>
<text x="248.6" y="1327.5"/>
</g>
<g class="hide">
<title>Thread::call_run (46 samples, 0.01%)</title><rect x="21.8" y="2005" width="0.1" height="15.0" fill="rgb(219,164,37)" rx="2" ry="2"/>
<text x="24.8" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="245.6" y="1237" width="0.2" height="15.0" fill="rgb(227,99,45)" rx="2" ry="2"/>
<text x="248.6" y="1247.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (123 samples, 0.03%)</title><rect x="617.5" y="1829" width="0.3" height="15.0" fill="rgb(253,60,51)" rx="2" ry="2"/>
<text x="620.5" y="1839.5"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (60 samples, 0.01%)</title><rect x="345.7" y="2037" width="0.1" height="15.0" fill="rgb(245,14,27)" rx="2" ry="2"/>
<text x="348.7" y="2047.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (37 samples, 0.01%)</title><rect x="641.9" y="1941" width="0.1" height="15.0" fill="rgb(251,221,51)" rx="2" ry="2"/>
<text x="644.9" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (40 samples, 0.01%)</title><rect x="248.4" y="1637" width="0.1" height="15.0" fill="rgb(245,64,41)" rx="2" ry="2"/>
<text x="251.4" y="1647.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (191 samples, 0.04%)</title><rect x="599.3" y="1893" width="0.6" height="15.0" fill="rgb(238,5,42)" rx="2" ry="2"/>
<text x="602.3" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (1,836 samples, 0.43%)</title><rect x="674.5" y="2021" width="5.0" height="15.0" fill="rgb(215,95,48)" rx="2" ry="2"/>
<text x="677.5" y="2031.5"/>
</g>
<g class="hide">
<title>__tls_get_addr (76 samples, 0.02%)</title><rect x="76.8" y="2005" width="0.2" height="15.0" fill="rgb(211,171,52)" rx="2" ry="2"/>
<text x="79.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (179 samples, 0.04%)</title><rect x="609.7" y="1733" width="0.5" height="15.0" fill="rgb(244,1,11)" rx="2" ry="2"/>
<text x="612.7" y="1743.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (62 samples, 0.01%)</title><rect x="603.0" y="1781" width="0.1" height="15.0" fill="rgb(251,46,10)" rx="2" ry="2"/>
<text x="606" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="347.5" y="1989" width="0.1" height="15.0" fill="rgb(225,74,31)" rx="2" ry="2"/>
<text x="350.5" y="1999.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (148 samples, 0.03%)</title><rect x="499.5" y="1829" width="0.4" height="15.0" fill="rgb(213,134,11)" rx="2" ry="2"/>
<text x="502.5" y="1839.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (38 samples, 0.01%)</title><rect x="590.4" y="1861" width="0.1" height="15.0" fill="rgb(237,16,52)" rx="2" ry="2"/>
<text x="593.4" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="379.9" y="1845" width="0.2" height="15.0" fill="rgb(219,135,7)" rx="2" ry="2"/>
<text x="382.9" y="1855.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (123 samples, 0.03%)</title><rect x="488.0" y="1781" width="0.4" height="15.0" fill="rgb(227,35,13)" rx="2" ry="2"/>
<text x="491" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="56.8" y="1717" width="0.1" height="15.0" fill="rgb(211,92,3)" rx="2" ry="2"/>
<text x="59.8" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (1,209 samples, 0.28%)</title><rect x="17.2" y="1957" width="3.3" height="15.0" fill="rgb(231,15,21)" rx="2" ry="2"/>
<text x="20.2" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="16.9" y="1941" width="0.2" height="15.0" fill="rgb(236,200,51)" rx="2" ry="2"/>
<text x="19.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="792.9" y="1877" width="0.2" height="15.0" fill="rgb(247,145,47)" rx="2" ry="2"/>
<text x="795.9" y="1887.5"/>
</g>
<g class="hide">
<title>g_type_check_instance_cast (50 samples, 0.01%)</title><rect x="366.3" y="2021" width="0.1" height="15.0" fill="rgb(252,151,31)" rx="2" ry="2"/>
<text x="369.3" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="244.0" y="693" width="0.1" height="15.0" fill="rgb(206,45,16)" rx="2" ry="2"/>
<text x="247" y="703.5"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.01%)</title><rect x="244.2" y="917" width="0.2" height="15.0" fill="rgb(230,79,48)" rx="2" ry="2"/>
<text x="247.2" y="927.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="373.2" y="2005" width="0.1" height="15.0" fill="rgb(233,11,25)" rx="2" ry="2"/>
<text x="376.2" y="2015.5"/>
</g>
<g class="hide">
<title>start_thread (39 samples, 0.01%)</title><rect x="22.8" y="2037" width="0.1" height="15.0" fill="rgb(219,222,20)" rx="2" ry="2"/>
<text x="25.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,611 samples, 2.46%)</title><rect x="275.4" y="1925" width="29.0" height="15.0" fill="rgb(219,40,6)" rx="2" ry="2"/>
<text x="278.4" y="1935.5">[[..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (40 samples, 0.01%)</title><rect x="584.4" y="1765" width="0.1" height="15.0" fill="rgb(220,194,28)" rx="2" ry="2"/>
<text x="587.4" y="1775.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (56 samples, 0.01%)</title><rect x="248.4" y="1749" width="0.1" height="15.0" fill="rgb(211,21,25)" rx="2" ry="2"/>
<text x="251.4" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (330 samples, 0.08%)</title><rect x="578.2" y="1877" width="0.9" height="15.0" fill="rgb(238,51,12)" rx="2" ry="2"/>
<text x="581.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.03%)</title><rect x="56.5" y="1845" width="0.4" height="15.0" fill="rgb(206,100,36)" rx="2" ry="2"/>
<text x="59.5" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="796.3" y="2005" width="0.1" height="15.0" fill="rgb(227,193,14)" rx="2" ry="2"/>
<text x="799.3" y="2015.5"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (377 samples, 0.09%)</title><rect x="72.2" y="2005" width="1.1" height="15.0" fill="rgb(250,108,49)" rx="2" ry="2"/>
<text x="75.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="32.2" y="1909" width="0.2" height="15.0" fill="rgb(208,61,37)" rx="2" ry="2"/>
<text x="35.2" y="1919.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1365" width="0.2" height="15.0" fill="rgb(236,38,31)" rx="2" ry="2"/>
<text x="247.4" y="1375.5"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.02%)</title><rect x="205.8" y="2021" width="0.2" height="15.0" fill="rgb(247,162,12)" rx="2" ry="2"/>
<text x="208.8" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1333" width="0.2" height="15.0" fill="rgb(237,164,23)" rx="2" ry="2"/>
<text x="247.4" y="1343.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (45 samples, 0.01%)</title><rect x="434.1" y="1781" width="0.1" height="15.0" fill="rgb(211,69,18)" rx="2" ry="2"/>
<text x="437.1" y="1791.5"/>
</g>
<g class="">
<title>Row::DeserializeFrom (19,064 samples, 4.42%)</title><rect x="22.733812949640768" y="1877" width="1105.7194244604316" height="15.0" fill="rgb(234,17,1)" rx="2" ry="2" _orig_x="520.9" _orig_width="52.1"/>
<text x="25.733812949640768" y="1887.5" _orig_x="523.9">Row::DeserializeFrom </text>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="485" width="0.8" height="15.0" fill="rgb(240,184,47)" rx="2" ry="2"/>
<text x="57.8" y="495.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (55 samples, 0.01%)</title><rect x="13.7" y="1845" width="0.1" height="15.0" fill="rgb(240,161,37)" rx="2" ry="2"/>
<text x="16.7" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (279 samples, 0.06%)</title><rect x="54.8" y="245" width="0.7" height="15.0" fill="rgb(206,116,39)" rx="2" ry="2"/>
<text x="57.8" y="255.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (273 samples, 0.06%)</title><rect x="610.7" y="1765" width="0.7" height="15.0" fill="rgb(236,99,2)" rx="2" ry="2"/>
<text x="613.7" y="1775.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (4,869 samples, 1.13%)</title><rect x="642.446043165469" y="1861" width="282.2661870503597" height="15.0" fill="rgb(224,77,4)" rx="2" ry="2" _orig_x="550.1" _orig_width="13.3"/>
<text x="645.446043165469" y="1871.5" _orig_x="553.1">std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;..</text>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (1,185 samples, 0.27%)</title><rect x="345.3237410071957" y="1765" width="70.03597122302158" height="15.0" fill="rgb(216,72,23)" rx="2" ry="2" _orig_x="536.1" _orig_width="3.3"/>
<text x="348.3237410071957" y="1775.5" _orig_x="539.1">std::_Ha..</text>
</g>
<g class="hide">
<title>__pthread_mutex_lock (95 samples, 0.02%)</title><rect x="172.2" y="2021" width="0.2" height="15.0" fill="rgb(240,14,8)" rx="2" ry="2"/>
<text x="175.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.03%)</title><rect x="15.3" y="1829" width="0.3" height="15.0" fill="rgb(251,133,7)" rx="2" ry="2"/>
<text x="18.3" y="1839.5"/>
</g>
<g class="hide">
<title>runtime.sysmon (71 samples, 0.02%)</title><rect x="340.7" y="1973" width="0.2" height="15.0" fill="rgb(218,19,12)" rx="2" ry="2"/>
<text x="343.7" y="1983.5"/>
</g>
<g class="hide">
<title>__strdup (56 samples, 0.01%)</title><rect x="765.5" y="2005" width="0.2" height="15.0" fill="rgb(239,79,46)" rx="2" ry="2"/>
<text x="768.5" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="383.8" y="1909" width="0.1" height="15.0" fill="rgb(221,200,18)" rx="2" ry="2"/>
<text x="386.8" y="1919.5"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (866 samples, 0.20%)</title><rect x="63.4" y="2021" width="2.3" height="15.0" fill="rgb(228,22,42)" rx="2" ry="2"/>
<text x="66.4" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (265 samples, 0.06%)</title><rect x="1187.6" y="1829" width="0.8" height="15.0" fill="rgb(233,217,35)" rx="2" ry="2"/>
<text x="1190.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (335 samples, 0.08%)</title><rect x="516.4" y="1893" width="0.9" height="15.0" fill="rgb(243,158,15)" rx="2" ry="2"/>
<text x="519.4" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (169 samples, 0.04%)</title><rect x="47.8" y="1893" width="0.5" height="15.0" fill="rgb(213,44,30)" rx="2" ry="2"/>
<text x="50.8" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.02%)</title><rect x="32.1" y="1957" width="0.3" height="15.0" fill="rgb(229,73,41)" rx="2" ry="2"/>
<text x="35.1" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (89 samples, 0.02%)</title><rect x="245.1" y="1125" width="0.2" height="15.0" fill="rgb(218,104,5)" rx="2" ry="2"/>
<text x="248.1" y="1135.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="341.0" y="1893" width="0.1" height="15.0" fill="rgb(241,8,9)" rx="2" ry="2"/>
<text x="344" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (50 samples, 0.01%)</title><rect x="244.0" y="981" width="0.1" height="15.0" fill="rgb(251,101,17)" rx="2" ry="2"/>
<text x="247" y="991.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (695 samples, 0.16%)</title><rect x="352.6" y="1973" width="1.9" height="15.0" fill="rgb(253,136,21)" rx="2" ry="2"/>
<text x="355.6" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="373.2" y="1941" width="0.1" height="15.0" fill="rgb(236,38,14)" rx="2" ry="2"/>
<text x="376.2" y="1951.5"/>
</g>
<g class="hide">
<title>pa_asyncq_write_after_poll (64 samples, 0.01%)</title><rect x="77.8" y="2005" width="0.2" height="15.0" fill="rgb(210,67,50)" rx="2" ry="2"/>
<text x="80.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (64 samples, 0.01%)</title><rect x="418.0" y="1717" width="0.2" height="15.0" fill="rgb(207,153,4)" rx="2" ry="2"/>
<text x="421" y="1727.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (68 samples, 0.02%)</title><rect x="816.4748201438848" y="1765" width="4.244604316546762" height="15.0" fill="rgb(221,54,44)" rx="2" ry="2" _orig_x="558.3" _orig_width="0.2"/>
<text x="819.4748201438848" y="1775.5" _orig_x="561.3"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="347.5" y="1925" width="0.1" height="15.0" fill="rgb(222,89,10)" rx="2" ry="2"/>
<text x="350.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (467 samples, 0.11%)</title><rect x="338.5" y="1925" width="1.2" height="15.0" fill="rgb(254,82,43)" rx="2" ry="2"/>
<text x="341.5" y="1935.5"/>
</g>
<g class="hide">
<title>swapper (140,600 samples, 32.57%)</title><rect x="798.6" y="2053" width="384.3" height="15.0" fill="rgb(211,61,41)" rx="2" ry="2"/>
<text x="801.6" y="2063.5">swapper </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="390.3" y="1909" width="0.1" height="15.0" fill="rgb(216,32,40)" rx="2" ry="2"/>
<text x="393.3" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.02%)</title><rect x="55.7" y="1989" width="0.2" height="15.0" fill="rgb(240,216,43)" rx="2" ry="2"/>
<text x="58.7" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="1957" width="0.4" height="15.0" fill="rgb(234,62,11)" rx="2" ry="2"/>
<text x="19.1" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (243 samples, 0.06%)</title><rect x="244.8" y="1605" width="0.7" height="15.0" fill="rgb(239,190,4)" rx="2" ry="2"/>
<text x="247.8" y="1615.5"/>
</g>
<g class="hide">
<title>[code] (713 samples, 0.17%)</title><rect x="248.1" y="1973" width="1.9" height="15.0" fill="rgb(214,91,33)" rx="2" ry="2"/>
<text x="251.1" y="1983.5"/>
</g>
<g class="hide">
<title>sogoupinyinServ (438 samples, 0.10%)</title><rect x="797.4" y="2053" width="1.2" height="15.0" fill="rgb(229,33,7)" rx="2" ry="2"/>
<text x="800.4" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,979 samples, 0.46%)</title><rect x="313.2" y="1877" width="5.4" height="15.0" fill="rgb(249,137,49)" rx="2" ry="2"/>
<text x="316.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="12.9" y="2021" width="0.2" height="15.0" fill="rgb(210,173,13)" rx="2" ry="2"/>
<text x="15.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (498 samples, 0.12%)</title><rect x="467.6" y="1749" width="1.3" height="15.0" fill="rgb(224,6,6)" rx="2" ry="2"/>
<text x="470.6" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="757" width="0.8" height="15.0" fill="rgb(222,35,42)" rx="2" ry="2"/>
<text x="57.8" y="767.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="342.7" y="1797" width="0.1" height="15.0" fill="rgb(225,215,8)" rx="2" ry="2"/>
<text x="345.7" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="32.2" y="1845" width="0.2" height="15.0" fill="rgb(226,89,27)" rx="2" ry="2"/>
<text x="35.2" y="1855.5"/>
</g>
<g class="">
<title>TypeInt::DeserializeFrom (3,645 samples, 0.84%)</title><rect x="300.7553956834542" y="1845" width="212.2302158273381" height="15.0" fill="rgb(244,74,6)" rx="2" ry="2" _orig_x="534.0" _orig_width="10.0"/>
<text x="303.7553956834542" y="1855.5" _orig_x="537">TypeInt::DeserializeFrom </text>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1605" width="0.2" height="15.0" fill="rgb(232,195,25)" rx="2" ry="2"/>
<text x="30" y="1615.5"/>
</g>
<g class="hide">
<title>[code] (49 samples, 0.01%)</title><rect x="245.2" y="805" width="0.1" height="15.0" fill="rgb(231,21,24)" rx="2" ry="2"/>
<text x="248.2" y="815.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="373.9" y="2005" width="0.2" height="15.0" fill="rgb(248,29,3)" rx="2" ry="2"/>
<text x="376.9" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (93 samples, 0.02%)</title><rect x="591.2" y="1861" width="0.3" height="15.0" fill="rgb(219,82,5)" rx="2" ry="2"/>
<text x="594.2" y="1871.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="2021" width="0.1" height="15.0" fill="rgb(223,197,38)" rx="2" ry="2"/>
<text x="357.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (89 samples, 0.02%)</title><rect x="582.3" y="1829" width="0.3" height="15.0" fill="rgb(205,190,33)" rx="2" ry="2"/>
<text x="585.3" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (63 samples, 0.01%)</title><rect x="485.1" y="1797" width="0.2" height="15.0" fill="rgb(209,221,48)" rx="2" ry="2"/>
<text x="488.1" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="115.2" y="1893" width="0.2" height="15.0" fill="rgb(230,14,28)" rx="2" ry="2"/>
<text x="118.2" y="1903.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (45 samples, 0.01%)</title><rect x="99.13669064748296" y="1749" width="2.122302158273381" height="15.0" fill="rgb(211,24,50)" rx="2" ry="2" _orig_x="524.5" _orig_width="0.1"/>
<text x="102.13669064748296" y="1759.5" _orig_x="527.5"/>
</g>
<g class="hide">
<title>[unknown] (718 samples, 0.17%)</title><rect x="73.3" y="2005" width="1.9" height="15.0" fill="rgb(223,29,35)" rx="2" ry="2"/>
<text x="76.3" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (177 samples, 0.04%)</title><rect x="385.3" y="1925" width="0.5" height="15.0" fill="rgb(226,15,33)" rx="2" ry="2"/>
<text x="388.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="237.9" y="1925" width="0.2" height="15.0" fill="rgb(223,80,49)" rx="2" ry="2"/>
<text x="240.9" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1109" width="0.2" height="15.0" fill="rgb(220,205,16)" rx="2" ry="2"/>
<text x="30" y="1119.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="32.5" y="1941" width="0.2" height="15.0" fill="rgb(251,35,20)" rx="2" ry="2"/>
<text x="35.5" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1685" width="0.2" height="15.0" fill="rgb(245,148,7)" rx="2" ry="2"/>
<text x="30" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (681 samples, 0.16%)</title><rect x="14.1" y="1925" width="1.9" height="15.0" fill="rgb(250,170,9)" rx="2" ry="2"/>
<text x="17.1" y="1935.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (45 samples, 0.01%)</title><rect x="427.3" y="1797" width="0.1" height="15.0" fill="rgb(242,206,53)" rx="2" ry="2"/>
<text x="430.3" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="47.1" y="1813" width="0.1" height="15.0" fill="rgb(243,169,47)" rx="2" ry="2"/>
<text x="50.1" y="1823.5"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (48 samples, 0.01%)</title><rect x="369.6" y="1989" width="0.1" height="15.0" fill="rgb(249,118,42)" rx="2" ry="2"/>
<text x="372.6" y="1999.5"/>
</g>
<g class="hide">
<title>pa_memblockq_get_length (61 samples, 0.01%)</title><rect x="179.7" y="2021" width="0.1" height="15.0" fill="rgb(246,12,29)" rx="2" ry="2"/>
<text x="182.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.03%)</title><rect x="47.9" y="1845" width="0.4" height="15.0" fill="rgb(231,86,29)" rx="2" ry="2"/>
<text x="50.9" y="1855.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (3,448 samples, 0.80%)</title><rect x="497.6" y="1861" width="9.4" height="15.0" fill="rgb(237,214,7)" rx="2" ry="2"/>
<text x="500.6" y="1871.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (387 samples, 0.09%)</title><rect x="805.863309352518" y="1781" width="23.345323741007192" height="15.0" fill="rgb(206,52,16)" rx="2" ry="2" _orig_x="557.8" _orig_width="1.1"/>
<text x="808.863309352518" y="1791.5" _orig_x="560.8">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.02%)</title><rect x="206.9" y="1973" width="0.3" height="15.0" fill="rgb(252,89,29)" rx="2" ry="2"/>
<text x="209.9" y="1983.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (303 samples, 0.07%)</title><rect x="75.6" y="2005" width="0.9" height="15.0" fill="rgb(222,217,22)" rx="2" ry="2"/>
<text x="78.6" y="2015.5"/>
</g>
<g class="hide">
<title>Type::GetInstance (47 samples, 0.01%)</title><rect x="455.2" y="1829" width="0.1" height="15.0" fill="rgb(236,125,30)" rx="2" ry="2"/>
<text x="458.2" y="1839.5"/>
</g>
<g class="hide">
<title>GC_Thread#9 (37 samples, 0.01%)</title><rect x="22.9" y="2053" width="0.1" height="15.0" fill="rgb(236,26,46)" rx="2" ry="2"/>
<text x="25.9" y="2063.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (44 samples, 0.01%)</title><rect x="618.1" y="1813" width="0.1" height="15.0" fill="rgb(233,118,37)" rx="2" ry="2"/>
<text x="621.1" y="1823.5"/>
</g>
<g class="hide">
<title>operator new[] (406 samples, 0.09%)</title><rect x="270.7" y="1925" width="1.1" height="15.0" fill="rgb(209,19,1)" rx="2" ry="2"/>
<text x="273.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="380.3" y="2021" width="0.2" height="15.0" fill="rgb(239,53,32)" rx="2" ry="2"/>
<text x="383.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (20,875 samples, 4.84%)</title><rect x="1070.8" y="1861" width="57.0" height="15.0" fill="rgb(252,195,2)" rx="2" ry="2"/>
<text x="1073.8" y="1871.5">[[kerne..</text>
</g>
<g class="hide">
<title>[unknown] (3,482 samples, 0.81%)</title><rect x="357.3" y="2037" width="9.5" height="15.0" fill="rgb(239,136,34)" rx="2" ry="2"/>
<text x="360.3" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="14.0" y="1973" width="0.1" height="15.0" fill="rgb(218,136,39)" rx="2" ry="2"/>
<text x="17" y="1983.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (141 samples, 0.03%)</title><rect x="26.3" y="2021" width="0.4" height="15.0" fill="rgb(245,136,13)" rx="2" ry="2"/>
<text x="29.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,250 samples, 0.98%)</title><rect x="686.0" y="1861" width="11.6" height="15.0" fill="rgb(216,211,24)" rx="2" ry="2"/>
<text x="689" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="12.9" y="1973" width="0.2" height="15.0" fill="rgb(251,80,1)" rx="2" ry="2"/>
<text x="15.9" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.01%)</title><rect x="374.7" y="1941" width="0.1" height="15.0" fill="rgb(245,28,44)" rx="2" ry="2"/>
<text x="377.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="237.2" y="1829" width="0.2" height="15.0" fill="rgb(226,210,49)" rx="2" ry="2"/>
<text x="240.2" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (497 samples, 0.12%)</title><rect x="19.0" y="1749" width="1.3" height="15.0" fill="rgb(240,15,42)" rx="2" ry="2"/>
<text x="22" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (98 samples, 0.02%)</title><rect x="429.0" y="1813" width="0.2" height="15.0" fill="rgb(233,108,23)" rx="2" ry="2"/>
<text x="432" y="1823.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::GetEntrySize (141 samples, 0.03%)</title><rect x="512.9" y="1893" width="0.4" height="15.0" fill="rgb(210,98,35)" rx="2" ry="2"/>
<text x="515.9" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="40.8" y="1781" width="0.1" height="15.0" fill="rgb(211,62,10)" rx="2" ry="2"/>
<text x="43.8" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (114 samples, 0.03%)</title><rect x="603.5" y="1733" width="0.4" height="15.0" fill="rgb(242,128,20)" rx="2" ry="2"/>
<text x="606.5" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="370.7" y="1941" width="0.1" height="15.0" fill="rgb(208,138,23)" rx="2" ry="2"/>
<text x="373.7" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1973" width="9.7" height="15.0" fill="rgb(238,134,33)" rx="2" ry="2"/>
<text x="241.3" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="565" width="0.8" height="15.0" fill="rgb(209,151,54)" rx="2" ry="2"/>
<text x="57.8" y="575.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="15.9" y="1749" width="0.1" height="15.0" fill="rgb(225,178,28)" rx="2" ry="2"/>
<text x="18.9" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="1989" width="0.2" height="15.0" fill="rgb(206,40,26)" rx="2" ry="2"/>
<text x="240.9" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (72 samples, 0.02%)</title><rect x="31.5" y="2037" width="0.2" height="15.0" fill="rgb(225,110,6)" rx="2" ry="2"/>
<text x="34.5" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="405" width="0.8" height="15.0" fill="rgb(215,169,25)" rx="2" ry="2"/>
<text x="57.8" y="415.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="32.8" y="1957" width="0.3" height="15.0" fill="rgb(221,97,0)" rx="2" ry="2"/>
<text x="35.8" y="1967.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (273 samples, 0.06%)</title><rect x="986.2589928057553" y="1813" width="14.856115107913666" height="15.0" fill="rgb(252,179,33)" rx="2" ry="2" _orig_x="566.3" _orig_width="0.7"/>
<text x="989.2589928057553" y="1823.5" _orig_x="569.3"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (65 samples, 0.02%)</title><rect x="588.2" y="1733" width="0.1" height="15.0" fill="rgb(243,201,45)" rx="2" ry="2"/>
<text x="591.2" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (305 samples, 0.07%)</title><rect x="54.8" y="1909" width="0.8" height="15.0" fill="rgb(246,152,27)" rx="2" ry="2"/>
<text x="57.8" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="355.0" y="1941" width="0.2" height="15.0" fill="rgb(232,183,40)" rx="2" ry="2"/>
<text x="358" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (44 samples, 0.01%)</title><rect x="587.6" y="1749" width="0.1" height="15.0" fill="rgb(217,222,19)" rx="2" ry="2"/>
<text x="590.6" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (193 samples, 0.04%)</title><rect x="648.1" y="1829" width="0.6" height="15.0" fill="rgb(228,124,44)" rx="2" ry="2"/>
<text x="651.1" y="1839.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (62 samples, 0.01%)</title><rect x="1185.755395683455" y="1877" width="4.244604316546762" height="15.0" fill="rgb(232,197,40)" rx="2" ry="2" _orig_x="575.7" _orig_width="0.2"/>
<text x="1188.755395683455" y="1887.5" _orig_x="578.7"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row*&gt; (106 samples, 0.02%)</title><rect x="661.4" y="1941" width="0.3" height="15.0" fill="rgb(252,62,43)" rx="2" ry="2"/>
<text x="664.4" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,521 samples, 2.44%)</title><rect x="275.7" y="1909" width="28.7" height="15.0" fill="rgb(224,168,20)" rx="2" ry="2"/>
<text x="278.7" y="1919.5">[[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="798.3" y="1925" width="0.2" height="15.0" fill="rgb(218,83,24)" rx="2" ry="2"/>
<text x="801.3" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Construct&lt;Row, Row const&amp;&gt; (594 samples, 0.14%)</title><rect x="647.1" y="1861" width="1.7" height="15.0" fill="rgb(226,40,29)" rx="2" ry="2"/>
<text x="650.1" y="1871.5"/>
</g>
<g class="hide">
<title>CompositorTileW (307 samples, 0.07%)</title><rect x="20.5" y="2053" width="0.9" height="15.0" fill="rgb(232,99,20)" rx="2" ry="2"/>
<text x="23.5" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="16.7" y="1909" width="0.2" height="15.0" fill="rgb(215,150,23)" rx="2" ry="2"/>
<text x="19.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="515.5" y="1701" width="0.3" height="15.0" fill="rgb(214,136,21)" rx="2" ry="2"/>
<text x="518.5" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="14.0" y="2005" width="0.1" height="15.0" fill="rgb(244,86,18)" rx="2" ry="2"/>
<text x="17" y="2015.5"/>
</g>
<g class="">
<title>[libminisql_shared.so] (136 samples, 0.03%)</title><rect x="1136.9424460431658" y="1877" width="6.366906474820143" height="15.0" fill="rgb(233,20,22)" rx="2" ry="2" _orig_x="573.4" _orig_width="0.3"/>
<text x="1139.9424460431658" y="1887.5" _orig_x="576.4"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (93 samples, 0.02%)</title><rect x="661.4" y="1877" width="0.2" height="15.0" fill="rgb(240,220,22)" rx="2" ry="2"/>
<text x="664.4" y="1887.5"/>
</g>
<g class="hide">
<title>_int_free (605 samples, 0.14%)</title><rect x="772.3" y="2021" width="1.6" height="15.0" fill="rgb(215,190,22)" rx="2" ry="2"/>
<text x="775.3" y="2031.5"/>
</g>
<g class="hide">
<title>operator new[] (141 samples, 0.03%)</title><rect x="307.5" y="1925" width="0.4" height="15.0" fill="rgb(220,216,18)" rx="2" ry="2"/>
<text x="310.5" y="1935.5"/>
</g>
<g class="hide">
<title>snd_pcm_mmap_begin (64 samples, 0.01%)</title><rect x="116.5" y="2005" width="0.2" height="15.0" fill="rgb(238,23,29)" rx="2" ry="2"/>
<text x="119.5" y="2015.5"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (118 samples, 0.03%)</title><rect x="707.3" y="1989" width="0.3" height="15.0" fill="rgb(224,199,5)" rx="2" ry="2"/>
<text x="710.3" y="1999.5"/>
</g>
<g class="hide">
<title>v8::internal::IncrementalMarking::Step (59 samples, 0.01%)</title><rect x="247.8" y="1813" width="0.2" height="15.0" fill="rgb(226,159,25)" rx="2" ry="2"/>
<text x="250.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (3,703 samples, 0.86%)</title><rect x="475.5" y="1845" width="10.1" height="15.0" fill="rgb(244,13,40)" rx="2" ry="2"/>
<text x="478.5" y="1855.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (187 samples, 0.04%)</title><rect x="354.7" y="2037" width="0.5" height="15.0" fill="rgb(207,39,28)" rx="2" ry="2"/>
<text x="357.7" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (857 samples, 0.20%)</title><rect x="395.8" y="1909" width="2.3" height="15.0" fill="rgb(228,187,47)" rx="2" ry="2"/>
<text x="398.8" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (93 samples, 0.02%)</title><rect x="245.1" y="1269" width="0.2" height="15.0" fill="rgb(235,155,35)" rx="2" ry="2"/>
<text x="248.1" y="1279.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (801 samples, 0.19%)</title><rect x="782.7" y="1877" width="2.2" height="15.0" fill="rgb(237,11,48)" rx="2" ry="2"/>
<text x="785.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="16.9" y="1989" width="0.2" height="15.0" fill="rgb(233,158,33)" rx="2" ry="2"/>
<text x="19.9" y="1999.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (47 samples, 0.01%)</title><rect x="50.0" y="2021" width="0.2" height="15.0" fill="rgb(253,84,34)" rx="2" ry="2"/>
<text x="53" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="792.9" y="1861" width="0.2" height="15.0" fill="rgb(223,150,34)" rx="2" ry="2"/>
<text x="795.9" y="1871.5"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (278 samples, 0.06%)</title><rect x="53.0" y="2037" width="0.8" height="15.0" fill="rgb(233,176,48)" rx="2" ry="2"/>
<text x="56" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,646 samples, 0.61%)</title><rect x="253.8" y="2021" width="7.2" height="15.0" fill="rgb(215,212,24)" rx="2" ry="2"/>
<text x="256.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="374.0" y="1941" width="0.1" height="15.0" fill="rgb(215,152,8)" rx="2" ry="2"/>
<text x="377" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,200 samples, 0.51%)</title><rect x="298.4" y="1717" width="6.0" height="15.0" fill="rgb(213,93,20)" rx="2" ry="2"/>
<text x="301.4" y="1727.5"/>
</g>
<g class="hide">
<title>pa_sink_input_peek (287 samples, 0.07%)</title><rect x="199.2" y="2037" width="0.8" height="15.0" fill="rgb(220,204,48)" rx="2" ry="2"/>
<text x="202.2" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (127 samples, 0.03%)</title><rect x="242.9" y="901" width="0.4" height="15.0" fill="rgb(210,49,27)" rx="2" ry="2"/>
<text x="245.9" y="911.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (119 samples, 0.03%)</title><rect x="496.9" y="1829" width="0.4" height="15.0" fill="rgb(251,41,15)" rx="2" ry="2"/>
<text x="499.9" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (287 samples, 0.07%)</title><rect x="260.2" y="1845" width="0.8" height="15.0" fill="rgb(249,41,31)" rx="2" ry="2"/>
<text x="263.2" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,545 samples, 0.59%)</title><rect x="403.8" y="1845" width="7.0" height="15.0" fill="rgb(209,189,10)" rx="2" ry="2"/>
<text x="406.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (412 samples, 0.10%)</title><rect x="418.7" y="1717" width="1.1" height="15.0" fill="rgb(248,52,16)" rx="2" ry="2"/>
<text x="421.7" y="1727.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (9,710 samples, 2.25%)</title><rect x="210.4" y="2021" width="26.6" height="15.0" fill="rgb(209,27,4)" rx="2" ry="2"/>
<text x="213.4" y="2031.5">p..</text>
</g>
<g class="hide">
<title>[libjvm.so] (90 samples, 0.02%)</title><rect x="49.5" y="2021" width="0.3" height="15.0" fill="rgb(230,42,46)" rx="2" ry="2"/>
<text x="52.5" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="565" width="0.2" height="15.0" fill="rgb(246,178,51)" rx="2" ry="2"/>
<text x="30" y="575.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (48 samples, 0.01%)</title><rect x="479.3" y="1797" width="0.1" height="15.0" fill="rgb(205,58,37)" rx="2" ry="2"/>
<text x="482.3" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="318.5" y="1781" width="0.1" height="15.0" fill="rgb(227,16,20)" rx="2" ry="2"/>
<text x="321.5" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="1973" width="0.2" height="15.0" fill="rgb(215,131,6)" rx="2" ry="2"/>
<text x="240.9" y="1983.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (98 samples, 0.02%)</title><rect x="1149.6762589928067" y="1877" width="6.366906474820143" height="15.0" fill="rgb(250,159,44)" rx="2" ry="2" _orig_x="574.0" _orig_width="0.3"/>
<text x="1152.6762589928067" y="1887.5" _orig_x="577"/>
</g>
<g class="hide">
<title>MemHeap::MemHeap (41 samples, 0.01%)</title><rect x="576.5" y="1877" width="0.2" height="15.0" fill="rgb(206,8,20)" rx="2" ry="2"/>
<text x="579.5" y="1887.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (45 samples, 0.01%)</title><rect x="580.7" y="1813" width="0.1" height="15.0" fill="rgb(249,211,19)" rx="2" ry="2"/>
<text x="583.7" y="1823.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="2005" width="0.1" height="15.0" fill="rgb(230,80,49)" rx="2" ry="2"/>
<text x="357.5" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (789 samples, 0.18%)</title><rect x="341.7" y="2037" width="2.2" height="15.0" fill="rgb(225,130,47)" rx="2" ry="2"/>
<text x="344.7" y="2047.5"/>
</g>
<g class="hide">
<title>__libc_start_main (44 samples, 0.01%)</title><rect x="354.5" y="2037" width="0.1" height="15.0" fill="rgb(254,139,4)" rx="2" ry="2"/>
<text x="357.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (200 samples, 0.05%)</title><rect x="48.4" y="1941" width="0.6" height="15.0" fill="rgb(216,82,41)" rx="2" ry="2"/>
<text x="51.4" y="1951.5"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (802 samples, 0.19%)</title><rect x="208.2" y="2021" width="2.2" height="15.0" fill="rgb(249,32,4)" rx="2" ry="2"/>
<text x="211.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,824 samples, 0.89%)</title><rect x="1168.3" y="1813" width="10.5" height="15.0" fill="rgb(225,199,38)" rx="2" ry="2"/>
<text x="1171.3" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,519 samples, 0.82%)</title><rect x="1169.2" y="1797" width="9.6" height="15.0" fill="rgb(232,52,17)" rx="2" ry="2"/>
<text x="1172.2" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (1,065 samples, 0.25%)</title><rect x="41.4" y="2005" width="2.9" height="15.0" fill="rgb(212,202,44)" rx="2" ry="2"/>
<text x="44.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (122 samples, 0.03%)</title><rect x="508.7" y="1813" width="0.3" height="15.0" fill="rgb(210,192,32)" rx="2" ry="2"/>
<text x="511.7" y="1823.5"/>
</g>
<g class="hide">
<title>unlink_chunk.isra.0 (67 samples, 0.02%)</title><rect x="671.9" y="2037" width="0.2" height="15.0" fill="rgb(242,171,44)" rx="2" ry="2"/>
<text x="674.9" y="2047.5"/>
</g>
<g class="hide">
<title>Field::DeserializeFrom (51 samples, 0.01%)</title><rect x="453.2" y="1861" width="0.1" height="15.0" fill="rgb(235,178,34)" rx="2" ry="2"/>
<text x="456.2" y="1871.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (394 samples, 0.09%)</title><rect x="624.8" y="1877" width="1.0" height="15.0" fill="rgb(226,151,51)" rx="2" ry="2"/>
<text x="627.8" y="1887.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (813 samples, 0.19%)</title><rect x="1186.1" y="2021" width="2.3" height="15.0" fill="rgb(229,179,52)" rx="2" ry="2"/>
<text x="1189.1" y="2031.5"/>
</g>
<g class="hide">
<title>start_thread (46 samples, 0.01%)</title><rect x="21.8" y="2037" width="0.1" height="15.0" fill="rgb(224,200,48)" rx="2" ry="2"/>
<text x="24.8" y="2047.5"/>
</g>
<g class="hide">
<title>Row::GetField (50 samples, 0.01%)</title><rect x="627.3" y="1909" width="0.2" height="15.0" fill="rgb(249,194,2)" rx="2" ry="2"/>
<text x="630.3" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (141 samples, 0.03%)</title><rect x="517.7" y="1877" width="0.4" height="15.0" fill="rgb(218,226,31)" rx="2" ry="2"/>
<text x="520.7" y="1887.5"/>
</g>
<g class="hide">
<title>ib_log_fl_notif (86 samples, 0.02%)</title><rect x="373.1" y="2053" width="0.3" height="15.0" fill="rgb(228,45,49)" rx="2" ry="2"/>
<text x="376.1" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (82 samples, 0.02%)</title><rect x="1183.1" y="2037" width="0.3" height="15.0" fill="rgb(213,161,30)" rx="2" ry="2"/>
<text x="1186.1" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (177 samples, 0.04%)</title><rect x="615.1" y="1877" width="0.5" height="15.0" fill="rgb(205,3,14)" rx="2" ry="2"/>
<text x="618.1" y="1887.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (403 samples, 0.09%)</title><rect x="372.91366906474866" y="1717" width="23.345323741007192" height="15.0" fill="rgb(236,169,48)" rx="2" ry="2" _orig_x="537.4" _orig_width="1.1"/>
<text x="375.91366906474866" y="1727.5" _orig_x="540.4">s..</text>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (76 samples, 0.02%)</title><rect x="642.6" y="1861" width="0.2" height="15.0" fill="rgb(227,149,19)" rx="2" ry="2"/>
<text x="645.6" y="1871.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (118 samples, 0.03%)</title><rect x="426.2" y="1765" width="0.3" height="15.0" fill="rgb(235,176,38)" rx="2" ry="2"/>
<text x="429.2" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (659 samples, 0.15%)</title><rect x="783.1" y="1861" width="1.8" height="15.0" fill="rgb(222,100,28)" rx="2" ry="2"/>
<text x="786.1" y="1871.5"/>
</g>
<g class="parent">
<title>BPlusTree::Remove (83,566 samples, 19.36%)</title><rect x="10" y="1957" width="1180" height="15.0" fill="rgb(232,77,53)" rx="2" ry="2" _orig_x="411.3" _orig_width="228.4"/>
<text x="13" y="1967.5" _orig_x="414.3">BPlusTree::Remove </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="797.8" y="1909" width="0.1" height="15.0" fill="rgb(248,156,17)" rx="2" ry="2"/>
<text x="800.8" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (159 samples, 0.04%)</title><rect x="389.5" y="1941" width="0.4" height="15.0" fill="rgb(243,144,27)" rx="2" ry="2"/>
<text x="392.5" y="1951.5"/>
</g>
<g class="hide">
<title>std::__fill_n_a&lt;unsigned long, char&gt; (84 samples, 0.02%)</title><rect x="623.8" y="1781" width="0.2" height="15.0" fill="rgb(235,15,0)" rx="2" ry="2"/>
<text x="626.8" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="244.0" y="709" width="0.1" height="15.0" fill="rgb(220,17,22)" rx="2" ry="2"/>
<text x="247" y="719.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="243.1" y="661" width="0.2" height="15.0" fill="rgb(208,12,3)" rx="2" ry="2"/>
<text x="246.1" y="671.5"/>
</g>
<g class="hide">
<title>GC_Thread#2 (71 samples, 0.02%)</title><rect x="21.9" y="2053" width="0.2" height="15.0" fill="rgb(247,179,8)" rx="2" ry="2"/>
<text x="24.9" y="2063.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (279 samples, 0.06%)</title><rect x="433.4" y="1765" width="0.7" height="15.0" fill="rgb(240,97,40)" rx="2" ry="2"/>
<text x="436.4" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (147 samples, 0.03%)</title><rect x="260.6" y="1829" width="0.4" height="15.0" fill="rgb(250,45,47)" rx="2" ry="2"/>
<text x="263.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="392.0" y="1989" width="0.2" height="15.0" fill="rgb(237,62,16)" rx="2" ry="2"/>
<text x="395" y="1999.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (256 samples, 0.06%)</title><rect x="334.7" y="1989" width="0.7" height="15.0" fill="rgb(234,213,35)" rx="2" ry="2"/>
<text x="337.7" y="1999.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (65 samples, 0.02%)</title><rect x="1003.2374100719438" y="1813" width="4.244604316546762" height="15.0" fill="rgb(247,220,24)" rx="2" ry="2" _orig_x="567.1" _orig_width="0.2"/>
<text x="1006.2374100719438" y="1823.5" _orig_x="570.1"/>
</g>
<g class="hide">
<title>[code] (392 samples, 0.09%)</title><rect x="19.2" y="1717" width="1.1" height="15.0" fill="rgb(224,55,20)" rx="2" ry="2"/>
<text x="22.2" y="1727.5"/>
</g>
<g class="hide">
<title>__GI___writev (207 samples, 0.05%)</title><rect x="56.3" y="2037" width="0.6" height="15.0" fill="rgb(234,173,26)" rx="2" ry="2"/>
<text x="59.3" y="2047.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (283 samples, 0.07%)</title><rect x="449.7" y="1877" width="0.8" height="15.0" fill="rgb(210,173,9)" rx="2" ry="2"/>
<text x="452.7" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (43 samples, 0.01%)</title><rect x="248.4" y="1685" width="0.1" height="15.0" fill="rgb(227,53,31)" rx="2" ry="2"/>
<text x="251.4" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (3,560 samples, 0.82%)</title><rect x="238.3" y="1877" width="9.7" height="15.0" fill="rgb(250,16,7)" rx="2" ry="2"/>
<text x="241.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,611 samples, 4.31%)</title><rect x="1127.9" y="1925" width="50.9" height="15.0" fill="rgb(212,224,46)" rx="2" ry="2"/>
<text x="1130.9" y="1935.5">[[kern..</text>
</g>
<g class="">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,252 samples, 0.29%)</title><rect x="84.28057553956833" y="1797" width="74.28057553956833" height="15.0" fill="rgb(237,92,8)" rx="2" ry="2" _orig_x="523.8" _orig_width="3.5"/>
<text x="87.28057553956833" y="1807.5" _orig_x="526.8">std::__de..</text>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1109" width="0.8" height="15.0" fill="rgb(226,190,14)" rx="2" ry="2"/>
<text x="57.8" y="1119.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (89 samples, 0.02%)</title><rect x="643.3" y="1845" width="0.2" height="15.0" fill="rgb(247,131,24)" rx="2" ry="2"/>
<text x="646.3" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="797.8" y="1941" width="0.1" height="15.0" fill="rgb(237,176,13)" rx="2" ry="2"/>
<text x="800.8" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1685" width="0.8" height="15.0" fill="rgb(243,175,4)" rx="2" ry="2"/>
<text x="57.8" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="50.2" y="2005" width="0.2" height="15.0" fill="rgb(248,78,24)" rx="2" ry="2"/>
<text x="53.2" y="2015.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (174 samples, 0.04%)</title><rect x="244.0" y="1429" width="0.4" height="15.0" fill="rgb(250,43,8)" rx="2" ry="2"/>
<text x="247" y="1439.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (174 samples, 0.04%)</title><rect x="466.3" y="1685" width="0.5" height="15.0" fill="rgb(253,192,29)" rx="2" ry="2"/>
<text x="469.3" y="1695.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (60 samples, 0.01%)</title><rect x="427.7" y="1829" width="0.2" height="15.0" fill="rgb(241,46,20)" rx="2" ry="2"/>
<text x="430.7" y="1839.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (1,407 samples, 0.33%)</title><rect x="702.5" y="2005" width="3.8" height="15.0" fill="rgb(220,61,11)" rx="2" ry="2"/>
<text x="705.5" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,223 samples, 0.51%)</title><rect x="464.4" y="1781" width="6.1" height="15.0" fill="rgb(253,37,7)" rx="2" ry="2"/>
<text x="467.4" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="237.0" y="1957" width="0.4" height="15.0" fill="rgb(254,120,23)" rx="2" ry="2"/>
<text x="240" y="1967.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,417 samples, 0.33%)</title><rect x="455.5" y="1797" width="3.9" height="15.0" fill="rgb(231,149,40)" rx="2" ry="2"/>
<text x="458.5" y="1807.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.02%)</title><rect x="245.6" y="1509" width="0.2" height="15.0" fill="rgb(254,73,36)" rx="2" ry="2"/>
<text x="248.6" y="1519.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.04%)</title><rect x="382.1" y="1941" width="0.6" height="15.0" fill="rgb(218,95,39)" rx="2" ry="2"/>
<text x="385.1" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="210.2" y="1909" width="0.2" height="15.0" fill="rgb(253,61,1)" rx="2" ry="2"/>
<text x="213.2" y="1919.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (52 samples, 0.01%)</title><rect x="627.9" y="1845" width="0.2" height="15.0" fill="rgb(205,90,15)" rx="2" ry="2"/>
<text x="630.9" y="1855.5"/>
</g>
<g class="hide">
<title>std::__1::chrono::steady_clock::now (369 samples, 0.09%)</title><rect x="335.6" y="1989" width="1.0" height="15.0" fill="rgb(237,77,2)" rx="2" ry="2"/>
<text x="338.6" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1061" width="0.1" height="15.0" fill="rgb(236,94,18)" rx="2" ry="2"/>
<text x="247" y="1071.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (37 samples, 0.01%)</title><rect x="40.9" y="2037" width="0.1" height="15.0" fill="rgb(240,185,46)" rx="2" ry="2"/>
<text x="43.9" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="853" width="0.1" height="15.0" fill="rgb(252,108,1)" rx="2" ry="2"/>
<text x="247" y="863.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.2" y="757" width="0.2" height="15.0" fill="rgb(250,149,39)" rx="2" ry="2"/>
<text x="247.2" y="767.5"/>
</g>
<g class="hide">
<title>Row::DeserializeFrom (608 samples, 0.14%)</title><rect x="643.2" y="1909" width="1.7" height="15.0" fill="rgb(217,203,0)" rx="2" ry="2"/>
<text x="646.2" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="52.1" y="1957" width="0.7" height="15.0" fill="rgb(251,13,32)" rx="2" ry="2"/>
<text x="55.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,391 samples, 0.32%)</title><rect x="120.8" y="1957" width="3.8" height="15.0" fill="rgb(229,62,45)" rx="2" ry="2"/>
<text x="123.8" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.04%)</title><rect x="360.5" y="1973" width="0.5" height="15.0" fill="rgb(230,38,7)" rx="2" ry="2"/>
<text x="363.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.04%)</title><rect x="56.4" y="1877" width="0.5" height="15.0" fill="rgb(250,180,53)" rx="2" ry="2"/>
<text x="59.4" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (202 samples, 0.05%)</title><rect x="243.3" y="1253" width="0.6" height="15.0" fill="rgb(253,95,24)" rx="2" ry="2"/>
<text x="246.3" y="1263.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (57 samples, 0.01%)</title><rect x="658.4" y="1973" width="0.1" height="15.0" fill="rgb(238,138,12)" rx="2" ry="2"/>
<text x="661.4" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (70 samples, 0.02%)</title><rect x="706.8" y="1973" width="0.2" height="15.0" fill="rgb(218,36,38)" rx="2" ry="2"/>
<text x="709.8" y="1983.5"/>
</g>
<g class="hide">
<title>operator new[] (361 samples, 0.08%)</title><rect x="306.5" y="1941" width="1.0" height="15.0" fill="rgb(225,73,32)" rx="2" ry="2"/>
<text x="309.5" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (72 samples, 0.02%)</title><rect x="247.5" y="1541" width="0.2" height="15.0" fill="rgb(219,67,2)" rx="2" ry="2"/>
<text x="250.5" y="1551.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,072 samples, 0.25%)</title><rect x="1175.8" y="1685" width="3.0" height="15.0" fill="rgb(245,153,24)" rx="2" ry="2"/>
<text x="1178.8" y="1695.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (104 samples, 0.02%)</title><rect x="632.9" y="1765" width="0.2" height="15.0" fill="rgb(241,215,35)" rx="2" ry="2"/>
<text x="635.9" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="15.1" y="1701" width="0.1" height="15.0" fill="rgb(250,169,28)" rx="2" ry="2"/>
<text x="18.1" y="1711.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (248 samples, 0.06%)</title><rect x="419.0" y="1685" width="0.6" height="15.0" fill="rgb(240,134,54)" rx="2" ry="2"/>
<text x="422" y="1695.5"/>
</g>
<g class="hide">
<title>__libc_read (11,612 samples, 2.69%)</title><rect x="733.7" y="2005" width="31.8" height="15.0" fill="rgb(244,208,36)" rx="2" ry="2"/>
<text x="736.7" y="2015.5">__..</text>
</g>
<g class="hide">
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (48 samples, 0.01%)</title><rect x="588.5" y="1733" width="0.1" height="15.0" fill="rgb(205,179,24)" rx="2" ry="2"/>
<text x="591.5" y="1743.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (48 samples, 0.01%)</title><rect x="619.1" y="1781" width="0.2" height="15.0" fill="rgb(250,64,18)" rx="2" ry="2"/>
<text x="622.1" y="1791.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (101 samples, 0.02%)</title><rect x="1001.1151079136699" y="1829" width="6.366906474820143" height="15.0" fill="rgb(250,199,49)" rx="2" ry="2" _orig_x="567.0" _orig_width="0.3"/>
<text x="1004.1151079136699" y="1839.5" _orig_x="570"/>
</g>
<g class="hide">
<title>containerd (302 samples, 0.07%)</title><rect x="340.7" y="2053" width="0.8" height="15.0" fill="rgb(235,65,40)" rx="2" ry="2"/>
<text x="343.7" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="796.9" y="1909" width="0.3" height="15.0" fill="rgb(227,212,20)" rx="2" ry="2"/>
<text x="799.9" y="1919.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (608 samples, 0.14%)</title><rect x="359.3" y="2021" width="1.7" height="15.0" fill="rgb(247,20,16)" rx="2" ry="2"/>
<text x="362.3" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (72 samples, 0.02%)</title><rect x="639.3" y="1861" width="0.2" height="15.0" fill="rgb(222,139,16)" rx="2" ry="2"/>
<text x="642.3" y="1871.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::EntryAt (52 samples, 0.01%)</title><rect x="415.2" y="1877" width="0.1" height="15.0" fill="rgb(229,141,37)" rx="2" ry="2"/>
<text x="418.2" y="1887.5"/>
</g>
<g class="hide">
<title>pa_alsa_safe_delay (38 samples, 0.01%)</title><rect x="173.8" y="2021" width="0.1" height="15.0" fill="rgb(243,151,2)" rx="2" ry="2"/>
<text x="176.8" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="725" width="0.8" height="15.0" fill="rgb(240,5,43)" rx="2" ry="2"/>
<text x="57.8" y="735.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (4,632 samples, 1.07%)</title><rect x="655.1798561151098" y="1845" width="269.5323741007194" height="15.0" fill="rgb(209,191,20)" rx="2" ry="2" _orig_x="550.7" _orig_width="12.7"/>
<text x="658.1798561151098" y="1855.5" _orig_x="553.7">std::vector&lt;Field*, std::allocator&lt;Field*&gt;..</text>
</g>
<g class="hide">
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (231 samples, 0.05%)</title><rect x="483.4" y="1765" width="0.6" height="15.0" fill="rgb(249,160,27)" rx="2" ry="2"/>
<text x="486.4" y="1775.5"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (295 samples, 0.07%)</title><rect x="342.0" y="2021" width="0.8" height="15.0" fill="rgb(240,87,18)" rx="2" ry="2"/>
<text x="345" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="44.7" y="1973" width="0.1" height="15.0" fill="rgb(209,51,38)" rx="2" ry="2"/>
<text x="47.7" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (214 samples, 0.05%)</title><rect x="20.7" y="1893" width="0.6" height="15.0" fill="rgb(253,185,45)" rx="2" ry="2"/>
<text x="23.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (210 samples, 0.05%)</title><rect x="665.3" y="1893" width="0.6" height="15.0" fill="rgb(219,157,15)" rx="2" ry="2"/>
<text x="668.3" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (651 samples, 0.15%)</title><rect x="241.5" y="1285" width="1.8" height="15.0" fill="rgb(247,131,30)" rx="2" ry="2"/>
<text x="244.5" y="1295.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="798.3" y="1973" width="0.2" height="15.0" fill="rgb(214,227,35)" rx="2" ry="2"/>
<text x="801.3" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="380.1" y="1893" width="0.2" height="15.0" fill="rgb(236,216,15)" rx="2" ry="2"/>
<text x="383.1" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (75 samples, 0.02%)</title><rect x="39.0" y="2005" width="0.2" height="15.0" fill="rgb(245,205,2)" rx="2" ry="2"/>
<text x="42" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (679 samples, 0.16%)</title><rect x="664.0" y="2021" width="1.9" height="15.0" fill="rgb(224,39,24)" rx="2" ry="2"/>
<text x="667" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="374.0" y="1973" width="0.1" height="15.0" fill="rgb(219,212,18)" rx="2" ry="2"/>
<text x="377" y="1983.5"/>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (277 samples, 0.06%)</title><rect x="514.3" y="1877" width="0.8" height="15.0" fill="rgb(219,228,12)" rx="2" ry="2"/>
<text x="517.3" y="1887.5"/>
</g>
<g class="hide">
<title>VM_G1CollectFull::doit (45 samples, 0.01%)</title><rect x="49.8" y="1925" width="0.1" height="15.0" fill="rgb(244,223,36)" rx="2" ry="2"/>
<text x="52.8" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,039 samples, 1.40%)</title><rect x="97.4" y="1909" width="16.5" height="15.0" fill="rgb(228,74,28)" rx="2" ry="2"/>
<text x="100.4" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="15.1" y="1669" width="0.1" height="15.0" fill="rgb(219,71,2)" rx="2" ry="2"/>
<text x="18.1" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="250.2" y="1861" width="0.1" height="15.0" fill="rgb(241,221,19)" rx="2" ry="2"/>
<text x="253.2" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (364 samples, 0.08%)</title><rect x="387.4" y="2037" width="1.0" height="15.0" fill="rgb(221,25,54)" rx="2" ry="2"/>
<text x="390.4" y="2047.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (105 samples, 0.02%)</title><rect x="642.5" y="1893" width="0.3" height="15.0" fill="rgb(252,55,29)" rx="2" ry="2"/>
<text x="645.5" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="821" width="0.2" height="15.0" fill="rgb(254,144,13)" rx="2" ry="2"/>
<text x="30" y="831.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (328 samples, 0.08%)</title><rect x="390.5" y="2005" width="0.9" height="15.0" fill="rgb(212,12,47)" rx="2" ry="2"/>
<text x="393.5" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.03%)</title><rect x="1178.5" y="1589" width="0.3" height="15.0" fill="rgb(205,59,1)" rx="2" ry="2"/>
<text x="1181.5" y="1599.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="1941" width="0.4" height="15.0" fill="rgb(219,154,7)" rx="2" ry="2"/>
<text x="19.1" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1941" width="0.4" height="15.0" fill="rgb(216,213,8)" rx="2" ry="2"/>
<text x="240.4" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (180 samples, 0.04%)</title><rect x="515.3" y="1733" width="0.5" height="15.0" fill="rgb(247,75,9)" rx="2" ry="2"/>
<text x="518.3" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="1178.5" y="1525" width="0.3" height="15.0" fill="rgb(206,130,5)" rx="2" ry="2"/>
<text x="1181.5" y="1535.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (251 samples, 0.06%)</title><rect x="135.8" y="1861" width="0.7" height="15.0" fill="rgb(218,85,49)" rx="2" ry="2"/>
<text x="138.8" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="380.7" y="2021" width="0.2" height="15.0" fill="rgb(225,52,52)" rx="2" ry="2"/>
<text x="383.7" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (111 samples, 0.03%)</title><rect x="643.8" y="1829" width="0.3" height="15.0" fill="rgb(239,11,23)" rx="2" ry="2"/>
<text x="646.8" y="1839.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (243 samples, 0.06%)</title><rect x="244.8" y="1637" width="0.7" height="15.0" fill="rgb(232,10,19)" rx="2" ry="2"/>
<text x="247.8" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="26.6" y="1845" width="0.1" height="15.0" fill="rgb(238,82,21)" rx="2" ry="2"/>
<text x="29.6" y="1855.5"/>
</g>
<g class="hide">
<title>TypeChar::CompareLessThan (75 samples, 0.02%)</title><rect x="600.8" y="1893" width="0.2" height="15.0" fill="rgb(209,68,17)" rx="2" ry="2"/>
<text x="603.8" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (864 samples, 0.20%)</title><rect x="241.5" y="1301" width="2.4" height="15.0" fill="rgb(240,59,9)" rx="2" ry="2"/>
<text x="244.5" y="1311.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (37 samples, 0.01%)</title><rect x="748.5611510791381" y="1813" width="2.122302158273381" height="15.0" fill="rgb(226,220,29)" rx="2" ry="2" _orig_x="555.1" _orig_width="0.1"/>
<text x="751.5611510791381" y="1823.5" _orig_x="558.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.02%)</title><rect x="32.2" y="1877" width="0.2" height="15.0" fill="rgb(237,17,3)" rx="2" ry="2"/>
<text x="35.2" y="1887.5"/>
</g>
<g class="hide">
<title>Xorg (1,629 samples, 0.38%)</title><rect x="52.8" y="2053" width="4.5" height="15.0" fill="rgb(249,111,11)" rx="2" ry="2"/>
<text x="55.8" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="821" width="0.8" height="15.0" fill="rgb(242,50,23)" rx="2" ry="2"/>
<text x="57.8" y="831.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (261 samples, 0.06%)</title><rect x="386.7" y="1989" width="0.7" height="15.0" fill="rgb(243,57,28)" rx="2" ry="2"/>
<text x="389.7" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,428 samples, 1.26%)</title><rect x="222.1" y="1909" width="14.9" height="15.0" fill="rgb(241,227,8)" rx="2" ry="2"/>
<text x="225.1" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="453" width="0.2" height="15.0" fill="rgb(215,171,46)" rx="2" ry="2"/>
<text x="30" y="463.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.03%)</title><rect x="389.6" y="1925" width="0.3" height="15.0" fill="rgb(238,114,45)" rx="2" ry="2"/>
<text x="392.6" y="1935.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_run (447 samples, 0.10%)</title><rect x="82.1" y="2005" width="1.2" height="15.0" fill="rgb(239,195,15)" rx="2" ry="2"/>
<text x="85.1" y="2015.5"/>
</g>
<g class="hide">
<title>__poll (43 samples, 0.01%)</title><rect x="793.1" y="1973" width="0.1" height="15.0" fill="rgb(205,7,23)" rx="2" ry="2"/>
<text x="796.1" y="1983.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (47 samples, 0.01%)</title><rect x="76.6" y="2005" width="0.2" height="15.0" fill="rgb(238,80,42)" rx="2" ry="2"/>
<text x="79.6" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,806 samples, 0.42%)</title><rect x="256.1" y="1925" width="4.9" height="15.0" fill="rgb(212,187,0)" rx="2" ry="2"/>
<text x="259.1" y="1935.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_item_get_pollfd (51 samples, 0.01%)</title><rect x="197.2" y="2037" width="0.2" height="15.0" fill="rgb(223,45,36)" rx="2" ry="2"/>
<text x="200.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (352 samples, 0.08%)</title><rect x="610.6" y="1781" width="1.0" height="15.0" fill="rgb(220,99,48)" rx="2" ry="2"/>
<text x="613.6" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (191 samples, 0.04%)</title><rect x="318.1" y="1797" width="0.5" height="15.0" fill="rgb(213,215,4)" rx="2" ry="2"/>
<text x="321.1" y="1807.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (188 samples, 0.04%)</title><rect x="578.4" y="1845" width="0.6" height="15.0" fill="rgb(238,207,19)" rx="2" ry="2"/>
<text x="581.4" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (184 samples, 0.04%)</title><rect x="655.2" y="1893" width="0.5" height="15.0" fill="rgb(223,187,19)" rx="2" ry="2"/>
<text x="658.2" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,442 samples, 0.57%)</title><rect x="311.9" y="1893" width="6.7" height="15.0" fill="rgb(233,221,40)" rx="2" ry="2"/>
<text x="314.9" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (369 samples, 0.09%)</title><rect x="38.0" y="2021" width="1.0" height="15.0" fill="rgb(241,116,22)" rx="2" ry="2"/>
<text x="41" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="373.2" y="1989" width="0.1" height="15.0" fill="rgb(220,96,6)" rx="2" ry="2"/>
<text x="376.2" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.02%)</title><rect x="245.6" y="1557" width="0.2" height="15.0" fill="rgb(208,20,33)" rx="2" ry="2"/>
<text x="248.6" y="1567.5"/>
</g>
<g class="hide">
<title>[code] (934 samples, 0.22%)</title><rect x="41.5" y="1877" width="2.5" height="15.0" fill="rgb(225,13,42)" rx="2" ry="2"/>
<text x="44.5" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (39 samples, 0.01%)</title><rect x="606.1" y="1749" width="0.1" height="15.0" fill="rgb(244,185,3)" rx="2" ry="2"/>
<text x="609.1" y="1759.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (46 samples, 0.01%)</title><rect x="358.0" y="1797" width="0.2" height="15.0" fill="rgb(242,180,41)" rx="2" ry="2"/>
<text x="361" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="725" width="0.2" height="15.0" fill="rgb(210,188,23)" rx="2" ry="2"/>
<text x="30" y="735.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (90 samples, 0.02%)</title><rect x="424.1" y="1829" width="0.2" height="15.0" fill="rgb(221,152,35)" rx="2" ry="2"/>
<text x="427.1" y="1839.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (62 samples, 0.01%)</title><rect x="478.1" y="1797" width="0.2" height="15.0" fill="rgb(218,101,41)" rx="2" ry="2"/>
<text x="481.1" y="1807.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (54 samples, 0.01%)</title><rect x="494.4" y="1861" width="0.1" height="15.0" fill="rgb(243,132,12)" rx="2" ry="2"/>
<text x="497.4" y="1871.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (116 samples, 0.03%)</title><rect x="493.2" y="1861" width="0.3" height="15.0" fill="rgb(221,138,18)" rx="2" ry="2"/>
<text x="496.2" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.04%)</title><rect x="206.2" y="1957" width="0.5" height="15.0" fill="rgb(225,27,46)" rx="2" ry="2"/>
<text x="209.2" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1141" width="0.2" height="15.0" fill="rgb(222,176,30)" rx="2" ry="2"/>
<text x="247.2" y="1151.5"/>
</g>
<g class="hide">
<title>[libpulsecommon-13.99.so] (703 samples, 0.16%)</title><rect x="66.9" y="2021" width="1.9" height="15.0" fill="rgb(211,185,10)" rx="2" ry="2"/>
<text x="69.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.02%)</title><rect x="32.8" y="1989" width="0.3" height="15.0" fill="rgb(253,144,6)" rx="2" ry="2"/>
<text x="35.8" y="1999.5"/>
</g>
<g class="hide">
<title>pa_memblockq_pop_missing (99 samples, 0.02%)</title><rect x="180.2" y="2021" width="0.2" height="15.0" fill="rgb(225,143,10)" rx="2" ry="2"/>
<text x="183.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,439 samples, 1.26%)</title><rect x="682.8" y="1925" width="14.8" height="15.0" fill="rgb(216,90,20)" rx="2" ry="2"/>
<text x="685.8" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (3,000 samples, 0.69%)</title><rect x="238.9" y="1765" width="8.2" height="15.0" fill="rgb(229,215,24)" rx="2" ry="2"/>
<text x="241.9" y="1775.5"/>
</g>
<g class="hide">
<title>ntfs_xattr_system_type (63 samples, 0.01%)</title><rect x="780.7" y="2021" width="0.2" height="15.0" fill="rgb(205,146,41)" rx="2" ry="2"/>
<text x="783.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,780 samples, 0.41%)</title><rect x="124.9" y="1941" width="4.9" height="15.0" fill="rgb(222,81,12)" rx="2" ry="2"/>
<text x="127.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.04%)</title><rect x="206.2" y="1909" width="0.5" height="15.0" fill="rgb(207,192,33)" rx="2" ry="2"/>
<text x="209.2" y="1919.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (44 samples, 0.01%)</title><rect x="597.8776978417275" y="1861" width="2.122302158273381" height="15.0" fill="rgb(228,117,16)" rx="2" ry="2" _orig_x="548.0" _orig_width="0.1"/>
<text x="600.8776978417275" y="1871.5" _orig_x="551"/>
</g>
<g class="hide">
<title>[code] (45 samples, 0.01%)</title><rect x="245.2" y="789" width="0.1" height="15.0" fill="rgb(238,0,19)" rx="2" ry="2"/>
<text x="248.2" y="799.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (580 samples, 0.13%)</title><rect x="443.9" y="1637" width="1.6" height="15.0" fill="rgb(225,132,51)" rx="2" ry="2"/>
<text x="446.9" y="1647.5"/>
</g>
<g class="hide">
<title>Row::~Row (709 samples, 0.16%)</title><rect x="654.3" y="1973" width="1.9" height="15.0" fill="rgb(244,110,21)" rx="2" ry="2"/>
<text x="657.3" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (38 samples, 0.01%)</title><rect x="373.5" y="2005" width="0.1" height="15.0" fill="rgb(237,19,29)" rx="2" ry="2"/>
<text x="376.5" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (119 samples, 0.03%)</title><rect x="450.7" y="1877" width="0.3" height="15.0" fill="rgb(217,63,0)" rx="2" ry="2"/>
<text x="453.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (635 samples, 0.15%)</title><rect x="112.1" y="1797" width="1.8" height="15.0" fill="rgb(205,50,6)" rx="2" ry="2"/>
<text x="115.1" y="1807.5"/>
</g>
<g class="hide">
<title>ppoll (11,088 samples, 2.57%)</title><rect x="86.1" y="2005" width="30.3" height="15.0" fill="rgb(249,129,9)" rx="2" ry="2"/>
<text x="89.1" y="2015.5">ppoll </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="32.3" y="1813" width="0.1" height="15.0" fill="rgb(231,30,53)" rx="2" ry="2"/>
<text x="35.3" y="1823.5"/>
</g>
<g class="hide">
<title>TypeInt::DeserializeFrom (2,419 samples, 0.56%)</title><rect x="464.1" y="1829" width="6.6" height="15.0" fill="rgb(206,36,44)" rx="2" ry="2"/>
<text x="467.1" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (745 samples, 0.17%)</title><rect x="1125.1" y="1669" width="2.0" height="15.0" fill="rgb(244,65,39)" rx="2" ry="2"/>
<text x="1128.1" y="1679.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (54 samples, 0.01%)</title><rect x="480.6" y="1781" width="0.1" height="15.0" fill="rgb(231,44,5)" rx="2" ry="2"/>
<text x="483.6" y="1791.5"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (54 samples, 0.01%)</title><rect x="368.9" y="2037" width="0.1" height="15.0" fill="rgb(231,49,3)" rx="2" ry="2"/>
<text x="371.9" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (81 samples, 0.02%)</title><rect x="474.9" y="1829" width="0.2" height="15.0" fill="rgb(239,107,42)" rx="2" ry="2"/>
<text x="477.9" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (522 samples, 0.12%)</title><rect x="793.8" y="1765" width="1.4" height="15.0" fill="rgb(244,223,10)" rx="2" ry="2"/>
<text x="796.8" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="20.1" y="1589" width="0.1" height="15.0" fill="rgb(234,137,53)" rx="2" ry="2"/>
<text x="23.1" y="1599.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,258 samples, 0.52%)</title><rect x="167.05035971223214" y="1813" width="131.58273381294964" height="15.0" fill="rgb(217,77,38)" rx="2" ry="2" _orig_x="527.7" _orig_width="6.2"/>
<text x="170.05035971223214" y="1823.5" _orig_x="530.7">std::unordered_se..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="798.3" y="1941" width="0.2" height="15.0" fill="rgb(223,105,15)" rx="2" ry="2"/>
<text x="801.3" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.03%)</title><rect x="206.3" y="1877" width="0.4" height="15.0" fill="rgb(236,223,32)" rx="2" ry="2"/>
<text x="209.3" y="1887.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (42 samples, 0.01%)</title><rect x="188.27338129496593" y="1765" width="2.122302158273381" height="15.0" fill="rgb(218,110,29)" rx="2" ry="2" _orig_x="528.7" _orig_width="0.1"/>
<text x="191.27338129496593" y="1775.5" _orig_x="531.7"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (38 samples, 0.01%)</title><rect x="445.8" y="1845" width="0.1" height="15.0" fill="rgb(218,94,6)" rx="2" ry="2"/>
<text x="448.8" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (82 samples, 0.02%)</title><rect x="245.6" y="1477" width="0.2" height="15.0" fill="rgb(218,168,22)" rx="2" ry="2"/>
<text x="248.6" y="1487.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (1,099 samples, 0.25%)</title><rect x="431.6" y="1845" width="3.0" height="15.0" fill="rgb(212,102,26)" rx="2" ry="2"/>
<text x="434.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="346.8" y="1909" width="0.2" height="15.0" fill="rgb(241,198,9)" rx="2" ry="2"/>
<text x="349.8" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.02%)</title><rect x="381.5" y="1861" width="0.2" height="15.0" fill="rgb(230,196,25)" rx="2" ry="2"/>
<text x="384.5" y="1871.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (37 samples, 0.01%)</title><rect x="432.33812949640475" y="1733" width="2.122302158273381" height="15.0" fill="rgb(214,88,24)" rx="2" ry="2" _orig_x="540.2" _orig_width="0.1"/>
<text x="435.33812949640475" y="1743.5" _orig_x="543.2"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,731 samples, 0.40%)</title><rect x="417.7" y="1749" width="4.7" height="15.0" fill="rgb(222,208,16)" rx="2" ry="2"/>
<text x="420.7" y="1759.5"/>
</g>
<g class="hide">
<title>TypeChar::CompareLessThan (154 samples, 0.04%)</title><rect x="416.1" y="1845" width="0.4" height="15.0" fill="rgb(239,79,40)" rx="2" ry="2"/>
<text x="419.1" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (141 samples, 0.03%)</title><rect x="432.7" y="1749" width="0.4" height="15.0" fill="rgb(226,30,28)" rx="2" ry="2"/>
<text x="435.7" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (115 samples, 0.03%)</title><rect x="248.3" y="1877" width="0.3" height="15.0" fill="rgb(213,3,38)" rx="2" ry="2"/>
<text x="251.3" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (234 samples, 0.05%)</title><rect x="246.3" y="1541" width="0.6" height="15.0" fill="rgb(249,63,42)" rx="2" ry="2"/>
<text x="249.3" y="1551.5"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (52 samples, 0.01%)</title><rect x="447.19424460431696" y="1717" width="4.244604316546762" height="15.0" fill="rgb(246,21,29)" rx="2" ry="2" _orig_x="540.9" _orig_width="0.2"/>
<text x="450.19424460431696" y="1727.5" _orig_x="543.9"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (128 samples, 0.03%)</title><rect x="650.4" y="1877" width="0.4" height="15.0" fill="rgb(243,115,45)" rx="2" ry="2"/>
<text x="653.4" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (923 samples, 0.21%)</title><rect x="649.6" y="1925" width="2.6" height="15.0" fill="rgb(239,192,53)" rx="2" ry="2"/>
<text x="652.6" y="1935.5"/>
</g>
<g class="hide">
<title>fcitx (225 samples, 0.05%)</title><rect x="344.5" y="2053" width="0.6" height="15.0" fill="rgb(218,0,23)" rx="2" ry="2"/>
<text x="347.5" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (173 samples, 0.04%)</title><rect x="784.4" y="1845" width="0.5" height="15.0" fill="rgb(235,190,14)" rx="2" ry="2"/>
<text x="787.4" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (736 samples, 0.17%)</title><rect x="1186.4" y="2005" width="2.0" height="15.0" fill="rgb(233,156,22)" rx="2" ry="2"/>
<text x="1189.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="797.8" y="1925" width="0.1" height="15.0" fill="rgb(254,204,14)" rx="2" ry="2"/>
<text x="800.8" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (302 samples, 0.07%)</title><rect x="54.8" y="1893" width="0.8" height="15.0" fill="rgb(218,51,17)" rx="2" ry="2"/>
<text x="57.8" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1125" width="0.1" height="15.0" fill="rgb(246,146,3)" rx="2" ry="2"/>
<text x="247" y="1135.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="392.0" y="1941" width="0.1" height="15.0" fill="rgb(220,56,16)" rx="2" ry="2"/>
<text x="395" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1829" width="0.2" height="15.0" fill="rgb(219,62,30)" rx="2" ry="2"/>
<text x="30" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (300 samples, 0.07%)</title><rect x="387.6" y="1973" width="0.8" height="15.0" fill="rgb(249,124,29)" rx="2" ry="2"/>
<text x="390.6" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="249.6" y="1765" width="0.1" height="15.0" fill="rgb(222,19,51)" rx="2" ry="2"/>
<text x="252.6" y="1775.5"/>
</g>
<g class="hide">
<title>__poll (98 samples, 0.02%)</title><rect x="206.9" y="2021" width="0.3" height="15.0" fill="rgb(236,206,7)" rx="2" ry="2"/>
<text x="209.9" y="2031.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (307 samples, 0.07%)</title><rect x="272.6" y="1957" width="0.9" height="15.0" fill="rgb(224,178,50)" rx="2" ry="2"/>
<text x="275.6" y="1967.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (151 samples, 0.03%)</title><rect x="105.50359712230215" y="1717" width="8.489208633093524" height="15.0" fill="rgb(233,74,3)" rx="2" ry="2" _orig_x="524.8" _orig_width="0.4"/>
<text x="108.50359712230215" y="1727.5" _orig_x="527.8"/>
</g>
<g class="hide">
<title>std::fill_n&lt;char*, unsigned long, char&gt; (60 samples, 0.01%)</title><rect x="428.8" y="1749" width="0.1" height="15.0" fill="rgb(233,58,41)" rx="2" ry="2"/>
<text x="431.8" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (39 samples, 0.01%)</title><rect x="245.7" y="1029" width="0.1" height="15.0" fill="rgb(221,21,0)" rx="2" ry="2"/>
<text x="248.7" y="1039.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="55.7" y="1973" width="0.2" height="15.0" fill="rgb(212,134,52)" rx="2" ry="2"/>
<text x="58.7" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1285" width="0.2" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2"/>
<text x="248.6" y="1295.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="26.5" y="1893" width="0.2" height="15.0" fill="rgb(230,204,10)" rx="2" ry="2"/>
<text x="29.5" y="1903.5"/>
</g>
<g class="hide">
<title>pa_rtclock_get (67 samples, 0.02%)</title><rect x="182.1" y="2021" width="0.1" height="15.0" fill="rgb(213,82,6)" rx="2" ry="2"/>
<text x="185.1" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (39 samples, 0.01%)</title><rect x="590.1" y="1813" width="0.1" height="15.0" fill="rgb(244,50,40)" rx="2" ry="2"/>
<text x="593.1" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="246.1" y="1509" width="0.2" height="15.0" fill="rgb(223,129,22)" rx="2" ry="2"/>
<text x="249.1" y="1519.5"/>
</g>
<g class="hide">
<title>[unknown] (66 samples, 0.02%)</title><rect x="355.3" y="2037" width="0.2" height="15.0" fill="rgb(228,111,10)" rx="2" ry="2"/>
<text x="358.3" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (886 samples, 0.21%)</title><rect x="241.5" y="1317" width="2.4" height="15.0" fill="rgb(205,104,10)" rx="2" ry="2"/>
<text x="244.5" y="1327.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (290 samples, 0.07%)</title><rect x="11.5" y="2021" width="0.8" height="15.0" fill="rgb(241,166,49)" rx="2" ry="2"/>
<text x="14.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.04%)</title><rect x="383.4" y="1989" width="0.5" height="15.0" fill="rgb(231,200,34)" rx="2" ry="2"/>
<text x="386.4" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.02%)</title><rect x="16.7" y="1925" width="0.2" height="15.0" fill="rgb(216,200,14)" rx="2" ry="2"/>
<text x="19.7" y="1935.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (46 samples, 0.01%)</title><rect x="793.1294964028796" y="1797" width="2.122302158273381" height="15.0" fill="rgb(248,88,38)" rx="2" ry="2" _orig_x="557.2" _orig_width="0.1"/>
<text x="796.1294964028796" y="1807.5" _orig_x="560.2"/>
</g>
<g class="hide">
<title>_dl_update_slotinfo (258 samples, 0.06%)</title><rect x="173.0" y="2021" width="0.7" height="15.0" fill="rgb(239,42,5)" rx="2" ry="2"/>
<text x="176" y="2031.5"/>
</g>
<g class="hide">
<title>__xstat64 (81 samples, 0.02%)</title><rect x="33.5" y="2021" width="0.2" height="15.0" fill="rgb(224,56,4)" rx="2" ry="2"/>
<text x="36.5" y="2031.5"/>
</g>
<g class="hide">
<title>__pthread_rwlock_rdlock (45 samples, 0.01%)</title><rect x="678.7" y="2005" width="0.1" height="15.0" fill="rgb(226,29,34)" rx="2" ry="2"/>
<text x="681.7" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="243.2" y="629" width="0.1" height="15.0" fill="rgb(250,114,13)" rx="2" ry="2"/>
<text x="246.2" y="639.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1797" width="0.2" height="15.0" fill="rgb(240,140,11)" rx="2" ry="2"/>
<text x="30" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="15.3" y="1813" width="0.3" height="15.0" fill="rgb(226,205,33)" rx="2" ry="2"/>
<text x="18.3" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (210 samples, 0.05%)</title><rect x="248.2" y="1909" width="0.6" height="15.0" fill="rgb(236,64,18)" rx="2" ry="2"/>
<text x="251.2" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="732.7" y="1637" width="0.1" height="15.0" fill="rgb(211,198,37)" rx="2" ry="2"/>
<text x="735.7" y="1647.5"/>
</g>
<g class="hide">
<title>pa_cvolume_channels_equal_to (87 samples, 0.02%)</title><rect x="174.6" y="2021" width="0.2" height="15.0" fill="rgb(213,65,15)" rx="2" ry="2"/>
<text x="177.6" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="374.9" y="2021" width="0.2" height="15.0" fill="rgb(247,51,16)" rx="2" ry="2"/>
<text x="377.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (40 samples, 0.01%)</title><rect x="463.0" y="1749" width="0.2" height="15.0" fill="rgb(223,29,46)" rx="2" ry="2"/>
<text x="466" y="1759.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (138 samples, 0.03%)</title><rect x="419.1" y="1669" width="0.4" height="15.0" fill="rgb(242,109,12)" rx="2" ry="2"/>
<text x="422.1" y="1679.5"/>
</g>
<g class="hide">
<title>[code] (61 samples, 0.01%)</title><rect x="244.2" y="1205" width="0.2" height="15.0" fill="rgb(214,151,1)" rx="2" ry="2"/>
<text x="247.2" y="1215.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.02%)</title><rect x="56.6" y="1765" width="0.3" height="15.0" fill="rgb(251,48,52)" rx="2" ry="2"/>
<text x="59.6" y="1775.5"/>
</g>
<g class="hide">
<title>Thread::call_run (56 samples, 0.01%)</title><rect x="21.6" y="2005" width="0.2" height="15.0" fill="rgb(215,213,0)" rx="2" ry="2"/>
<text x="24.6" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.03%)</title><rect x="354.9" y="1973" width="0.3" height="15.0" fill="rgb(233,179,52)" rx="2" ry="2"/>
<text x="357.9" y="1983.5"/>
</g>
<g class="hide">
<title>pa_timeval_cmp (54 samples, 0.01%)</title><rect x="85.9" y="2005" width="0.1" height="15.0" fill="rgb(248,217,20)" rx="2" ry="2"/>
<text x="88.9" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (144 samples, 0.03%)</title><rect x="242.9" y="933" width="0.4" height="15.0" fill="rgb(253,195,34)" rx="2" ry="2"/>
<text x="245.9" y="943.5"/>
</g>
<g class="hide">
<title>std::__fill_n_a&lt;unsigned long, char&gt; (121 samples, 0.03%)</title><rect x="489.6" y="1749" width="0.3" height="15.0" fill="rgb(235,210,50)" rx="2" ry="2"/>
<text x="492.6" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="405" width="0.2" height="15.0" fill="rgb(228,139,38)" rx="2" ry="2"/>
<text x="30" y="415.5"/>
</g>
<g class="hide">
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (46 samples, 0.01%)</title><rect x="585.6" y="1781" width="0.1" height="15.0" fill="rgb(217,22,53)" rx="2" ry="2"/>
<text x="588.6" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1221" width="0.2" height="15.0" fill="rgb(239,172,23)" rx="2" ry="2"/>
<text x="30" y="1231.5"/>
</g>
<g class="hide">
<title>__libc_disable_asynccancel (100 samples, 0.02%)</title><rect x="318.8" y="2005" width="0.3" height="15.0" fill="rgb(209,115,32)" rx="2" ry="2"/>
<text x="321.8" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="805" width="0.8" height="15.0" fill="rgb(220,123,9)" rx="2" ry="2"/>
<text x="57.8" y="815.5"/>
</g>
<g class="hide">
<title>Clone_persist_gtid::periodic_write (45 samples, 0.01%)</title><rect x="372.5" y="1957" width="0.1" height="15.0" fill="rgb(240,35,15)" rx="2" ry="2"/>
<text x="375.5" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (63 samples, 0.01%)</title><rect x="496.3" y="1797" width="0.1" height="15.0" fill="rgb(232,163,19)" rx="2" ry="2"/>
<text x="499.3" y="1807.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (75 samples, 0.02%)</title><rect x="32.5" y="2021" width="0.2" height="15.0" fill="rgb(208,38,28)" rx="2" ry="2"/>
<text x="35.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="379.8" y="1989" width="0.5" height="15.0" fill="rgb(222,63,20)" rx="2" ry="2"/>
<text x="382.8" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="372.3" y="2005" width="0.2" height="15.0" fill="rgb(251,113,21)" rx="2" ry="2"/>
<text x="375.3" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (46 samples, 0.01%)</title><rect x="244.0" y="837" width="0.1" height="15.0" fill="rgb(229,118,51)" rx="2" ry="2"/>
<text x="247" y="847.5"/>
</g>
<g class="hide">
<title>[unknown] (18,637 samples, 4.32%)</title><rect x="1127.8" y="2021" width="51.0" height="15.0" fill="rgb(213,33,17)" rx="2" ry="2"/>
<text x="1130.8" y="2031.5">[unk..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (113 samples, 0.03%)</title><rect x="433.6" y="1733" width="0.3" height="15.0" fill="rgb(216,179,53)" rx="2" ry="2"/>
<text x="436.6" y="1743.5"/>
</g>
<g class="hide">
<title>git (68 samples, 0.02%)</title><rect x="351.4" y="2053" width="0.2" height="15.0" fill="rgb(252,204,39)" rx="2" ry="2"/>
<text x="354.4" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (236 samples, 0.05%)</title><rect x="249.2" y="1845" width="0.7" height="15.0" fill="rgb(224,30,1)" rx="2" ry="2"/>
<text x="252.2" y="1855.5"/>
</g>
<g class="hide">
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (63 samples, 0.01%)</title><rect x="426.9" y="1749" width="0.2" height="15.0" fill="rgb(208,108,3)" rx="2" ry="2"/>
<text x="429.9" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (185 samples, 0.04%)</title><rect x="113.4" y="1765" width="0.5" height="15.0" fill="rgb(246,122,31)" rx="2" ry="2"/>
<text x="116.4" y="1775.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (88 samples, 0.02%)</title><rect x="248.4" y="1797" width="0.2" height="15.0" fill="rgb(225,62,34)" rx="2" ry="2"/>
<text x="251.4" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (317 samples, 0.07%)</title><rect x="50.9" y="1893" width="0.9" height="15.0" fill="rgb(220,47,0)" rx="2" ry="2"/>
<text x="53.9" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Row*&gt; (145 samples, 0.03%)</title><rect x="646.7" y="1893" width="0.4" height="15.0" fill="rgb(239,171,1)" rx="2" ry="2"/>
<text x="649.7" y="1903.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (243 samples, 0.06%)</title><rect x="375.0359712230225" y="1701" width="14.856115107913666" height="15.0" fill="rgb(247,96,1)" rx="2" ry="2" _orig_x="537.5" _orig_width="0.7"/>
<text x="378.0359712230225" y="1711.5" _orig_x="540.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (405 samples, 0.09%)</title><rect x="652.9" y="1925" width="1.1" height="15.0" fill="rgb(241,66,50)" rx="2" ry="2"/>
<text x="655.9" y="1935.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (577 samples, 0.13%)</title><rect x="368.6690647482033" y="1733" width="33.956834532374096" height="15.0" fill="rgb(243,172,25)" rx="2" ry="2" _orig_x="537.2" _orig_width="1.6"/>
<text x="371.6690647482033" y="1743.5" _orig_x="540.2">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.04%)</title><rect x="410.3" y="1605" width="0.5" height="15.0" fill="rgb(220,65,14)" rx="2" ry="2"/>
<text x="413.3" y="1615.5"/>
</g>
<g class="hide">
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (44 samples, 0.01%)</title><rect x="398.9" y="1989" width="0.1" height="15.0" fill="rgb(243,193,4)" rx="2" ry="2"/>
<text x="401.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="388.5" y="2021" width="0.5" height="15.0" fill="rgb(213,116,1)" rx="2" ry="2"/>
<text x="391.5" y="2031.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (104 samples, 0.02%)</title><rect x="466.2949640287769" y="1765" width="4.244604316546762" height="15.0" fill="rgb(246,51,48)" rx="2" ry="2" _orig_x="541.8" _orig_width="0.2"/>
<text x="469.2949640287769" y="1775.5" _orig_x="544.8"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (215 samples, 0.05%)</title><rect x="161.2" y="1845" width="0.6" height="15.0" fill="rgb(210,204,15)" rx="2" ry="2"/>
<text x="164.2" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.04%)</title><rect x="47.9" y="1861" width="0.4" height="15.0" fill="rgb(217,173,8)" rx="2" ry="2"/>
<text x="50.9" y="1871.5"/>
</g>
<g class="hide">
<title>pa_rtclock_now (82 samples, 0.02%)</title><rect x="197.0" y="2037" width="0.2" height="15.0" fill="rgb(254,158,43)" rx="2" ry="2"/>
<text x="200" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (39 samples, 0.01%)</title><rect x="244.4" y="1317" width="0.2" height="15.0" fill="rgb(230,120,18)" rx="2" ry="2"/>
<text x="247.4" y="1327.5"/>
</g>
<g class="">
<title>std::allocator&lt;char&gt;::~allocator (43 samples, 0.01%)</title><rect x="1158.1654676258997" y="1877" width="2.122302158273381" height="15.0" fill="rgb(223,17,39)" rx="2" ry="2" _orig_x="574.4" _orig_width="0.1"/>
<text x="1161.1654676258997" y="1887.5" _orig_x="577.4"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="51.9" y="1909" width="0.2" height="15.0" fill="rgb(205,185,25)" rx="2" ry="2"/>
<text x="54.9" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="805" width="0.2" height="15.0" fill="rgb(236,70,50)" rx="2" ry="2"/>
<text x="30" y="815.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1221" width="0.8" height="15.0" fill="rgb(237,147,3)" rx="2" ry="2"/>
<text x="57.8" y="1231.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,253 samples, 0.29%)</title><rect x="781.5" y="1957" width="3.4" height="15.0" fill="rgb(250,30,34)" rx="2" ry="2"/>
<text x="784.5" y="1967.5"/>
</g>
<g class="hide">
<title>ib_log_wr_notif (109 samples, 0.03%)</title><rect x="373.6" y="2053" width="0.3" height="15.0" fill="rgb(248,60,7)" rx="2" ry="2"/>
<text x="376.6" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,044 samples, 0.47%)</title><rect x="692.0" y="1797" width="5.6" height="15.0" fill="rgb(217,216,1)" rx="2" ry="2"/>
<text x="695" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1797" width="0.8" height="15.0" fill="rgb(212,67,46)" rx="2" ry="2"/>
<text x="57.8" y="1807.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,445 samples, 0.33%)</title><rect x="608.6" y="1829" width="3.9" height="15.0" fill="rgb(243,81,21)" rx="2" ry="2"/>
<text x="611.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (626 samples, 0.14%)</title><rect x="1186.7" y="1941" width="1.7" height="15.0" fill="rgb(226,83,49)" rx="2" ry="2"/>
<text x="1189.7" y="1951.5"/>
</g>
<g class="hide">
<title>Row::GetSerializedSize (154 samples, 0.04%)</title><rect x="639.7" y="1941" width="0.5" height="15.0" fill="rgb(232,194,21)" rx="2" ry="2"/>
<text x="642.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="249.6" y="1733" width="0.1" height="15.0" fill="rgb(205,211,27)" rx="2" ry="2"/>
<text x="252.6" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (744 samples, 0.17%)</title><rect x="352.5" y="2005" width="2.0" height="15.0" fill="rgb(249,110,42)" rx="2" ry="2"/>
<text x="355.5" y="2015.5"/>
</g>
<g class="">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (57 samples, 0.01%)</title><rect x="145.82733812949832" y="1765" width="4.244604316546762" height="15.0" fill="rgb(221,140,7)" rx="2" ry="2" _orig_x="526.7" _orig_width="0.2"/>
<text x="148.82733812949832" y="1775.5" _orig_x="529.7"/>
</g>
<g class="hide">
<title>start_thread (29,131 samples, 6.75%)</title><rect x="261.1" y="2037" width="79.6" height="15.0" fill="rgb(237,217,21)" rx="2" ry="2"/>
<text x="264.1" y="2047.5">start_thread </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (682 samples, 0.16%)</title><rect x="352.6" y="1957" width="1.9" height="15.0" fill="rgb(214,215,52)" rx="2" ry="2"/>
<text x="355.6" y="1967.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (68 samples, 0.02%)</title><rect x="420.7" y="1701" width="0.2" height="15.0" fill="rgb(219,141,11)" rx="2" ry="2"/>
<text x="423.7" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="48.8" y="1813" width="0.2" height="15.0" fill="rgb(235,85,45)" rx="2" ry="2"/>
<text x="51.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::__niter_base&lt;Field**&gt; (90 samples, 0.02%)</title><rect x="483.1" y="1765" width="0.3" height="15.0" fill="rgb(227,157,50)" rx="2" ry="2"/>
<text x="486.1" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (55 samples, 0.01%)</title><rect x="364.6" y="1829" width="0.1" height="15.0" fill="rgb(232,154,22)" rx="2" ry="2"/>
<text x="367.6" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (798 samples, 0.18%)</title><rect x="208.2" y="1973" width="2.2" height="15.0" fill="rgb(249,163,33)" rx="2" ry="2"/>
<text x="211.2" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="44.7" y="2005" width="0.1" height="15.0" fill="rgb(250,161,14)" rx="2" ry="2"/>
<text x="47.7" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (128 samples, 0.03%)</title><rect x="1189.4" y="2037" width="0.4" height="15.0" fill="rgb(246,30,2)" rx="2" ry="2"/>
<text x="1192.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[vdso]] (386 samples, 0.09%)</title><rect x="252.3" y="2021" width="1.1" height="15.0" fill="rgb(230,60,23)" rx="2" ry="2"/>
<text x="255.3" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (85 samples, 0.02%)</title><rect x="653.7" y="1909" width="0.3" height="15.0" fill="rgb(240,55,37)" rx="2" ry="2"/>
<text x="656.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="381.2" y="1925" width="0.5" height="15.0" fill="rgb(232,211,2)" rx="2" ry="2"/>
<text x="384.2" y="1935.5"/>
</g>
<g class="hide">
<title>SimBridge::WdbSharedMemMgr::getPackets (43 samples, 0.01%)</title><rect x="1184.5" y="2037" width="0.2" height="15.0" fill="rgb(241,37,39)" rx="2" ry="2"/>
<text x="1187.5" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (99 samples, 0.02%)</title><rect x="637.6" y="1829" width="0.2" height="15.0" fill="rgb(217,29,45)" rx="2" ry="2"/>
<text x="640.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (174 samples, 0.04%)</title><rect x="619.0" y="1797" width="0.5" height="15.0" fill="rgb(240,86,43)" rx="2" ry="2"/>
<text x="622" y="1807.5"/>
</g>
<g class="parent">
<title>BPlusTree::InternalRemove (82,457 samples, 19.10%)</title><rect x="10" y="1941" width="1180" height="15.0" fill="rgb(231,65,7)" rx="2" ry="2" _orig_x="411.4" _orig_width="225.4"/>
<text x="13" y="1951.5" _orig_x="414.4">BPlusTree::InternalRemove </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="16.7" y="1861" width="0.2" height="15.0" fill="rgb(224,105,17)" rx="2" ry="2"/>
<text x="19.7" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="2021" width="1.9" height="15.0" fill="rgb(240,6,52)" rx="2" ry="2"/>
<text x="17.1" y="2031.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (117 samples, 0.03%)</title><rect x="204.2" y="2037" width="0.3" height="15.0" fill="rgb(223,99,27)" rx="2" ry="2"/>
<text x="207.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (321 samples, 0.07%)</title><rect x="489.2" y="1781" width="0.8" height="15.0" fill="rgb(208,200,21)" rx="2" ry="2"/>
<text x="492.2" y="1791.5"/>
</g>
<g class="hide">
<title>Compositor (1,456 samples, 0.34%)</title><rect x="16.5" y="2053" width="4.0" height="15.0" fill="rgb(209,151,24)" rx="2" ry="2"/>
<text x="19.5" y="2063.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (188 samples, 0.04%)</title><rect x="627.7" y="1877" width="0.6" height="15.0" fill="rgb(208,137,21)" rx="2" ry="2"/>
<text x="630.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="765.4" y="1733" width="0.1" height="15.0" fill="rgb(215,204,3)" rx="2" ry="2"/>
<text x="768.4" y="1743.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (837 samples, 0.19%)</title><rect x="480.2" y="1797" width="2.2" height="15.0" fill="rgb(208,143,35)" rx="2" ry="2"/>
<text x="483.2" y="1807.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (78 samples, 0.02%)</title><rect x="484.4" y="1797" width="0.2" height="15.0" fill="rgb(236,178,12)" rx="2" ry="2"/>
<text x="487.4" y="1807.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (194 samples, 0.04%)</title><rect x="604.1" y="1781" width="0.5" height="15.0" fill="rgb(224,104,52)" rx="2" ry="2"/>
<text x="607.1" y="1791.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (256 samples, 0.06%)</title><rect x="357.5" y="1973" width="0.7" height="15.0" fill="rgb(227,42,12)" rx="2" ry="2"/>
<text x="360.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.04%)</title><rect x="386.2" y="1941" width="0.4" height="15.0" fill="rgb(226,61,32)" rx="2" ry="2"/>
<text x="389.2" y="1951.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (118 samples, 0.03%)</title><rect x="482.1" y="1781" width="0.3" height="15.0" fill="rgb(223,28,36)" rx="2" ry="2"/>
<text x="485.1" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="798.0" y="1925" width="0.2" height="15.0" fill="rgb(220,196,53)" rx="2" ry="2"/>
<text x="801" y="1935.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (179 samples, 0.04%)</title><rect x="587.9" y="1749" width="0.4" height="15.0" fill="rgb(218,79,43)" rx="2" ry="2"/>
<text x="590.9" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="798.3" y="1861" width="0.2" height="15.0" fill="rgb(219,15,19)" rx="2" ry="2"/>
<text x="801.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,543 samples, 0.82%)</title><rect x="688.0" y="1829" width="9.6" height="15.0" fill="rgb(224,184,35)" rx="2" ry="2"/>
<text x="691" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (847 samples, 0.20%)</title><rect x="18.1" y="1829" width="2.3" height="15.0" fill="rgb(217,62,41)" rx="2" ry="2"/>
<text x="21.1" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_allocate (43 samples, 0.01%)</title><rect x="659.6" y="1941" width="0.1" height="15.0" fill="rgb(248,124,24)" rx="2" ry="2"/>
<text x="662.6" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1829" width="0.8" height="15.0" fill="rgb(239,217,21)" rx="2" ry="2"/>
<text x="57.8" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (641 samples, 0.15%)</title><rect x="241.6" y="1269" width="1.7" height="15.0" fill="rgb(247,158,50)" rx="2" ry="2"/>
<text x="244.6" y="1279.5"/>
</g>
<g class="hide">
<title>[unknown] (97 samples, 0.02%)</title><rect x="49.2" y="2037" width="0.3" height="15.0" fill="rgb(238,37,2)" rx="2" ry="2"/>
<text x="52.2" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (96 samples, 0.02%)</title><rect x="243.6" y="949" width="0.3" height="15.0" fill="rgb(236,47,24)" rx="2" ry="2"/>
<text x="246.6" y="959.5"/>
</g>
<g class="hide">
<title>[code] (222 samples, 0.05%)</title><rect x="51.1" y="1829" width="0.6" height="15.0" fill="rgb(235,14,25)" rx="2" ry="2"/>
<text x="54.1" y="1839.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (284 samples, 0.07%)</title><rect x="733.7050359712234" y="1813" width="14.856115107913666" height="15.0" fill="rgb(237,110,32)" rx="2" ry="2" _orig_x="554.4" _orig_width="0.7"/>
<text x="736.7050359712234" y="1823.5" _orig_x="557.4"/>
</g>
<g class="hide">
<title>pa_frame_aligned (95 samples, 0.02%)</title><rect x="79.4" y="2005" width="0.2" height="15.0" fill="rgb(237,105,29)" rx="2" ry="2"/>
<text x="82.4" y="2015.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (913 samples, 0.21%)</title><rect x="674.5" y="2005" width="2.5" height="15.0" fill="rgb(229,222,10)" rx="2" ry="2"/>
<text x="677.5" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (377 samples, 0.09%)</title><rect x="242.3" y="1093" width="1.0" height="15.0" fill="rgb(207,159,32)" rx="2" ry="2"/>
<text x="245.3" y="1103.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="797.8" y="1957" width="0.1" height="15.0" fill="rgb(213,67,31)" rx="2" ry="2"/>
<text x="800.8" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (49 samples, 0.01%)</title><rect x="245.3" y="1413" width="0.2" height="15.0" fill="rgb(229,116,51)" rx="2" ry="2"/>
<text x="248.3" y="1423.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="1127.0" y="1541" width="0.1" height="15.0" fill="rgb(213,29,18)" rx="2" ry="2"/>
<text x="1130" y="1551.5"/>
</g>
<g class="hide">
<title>[code] (468 samples, 0.11%)</title><rect x="14.4" y="1893" width="1.2" height="15.0" fill="rgb(227,46,23)" rx="2" ry="2"/>
<text x="17.4" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="917" width="0.8" height="15.0" fill="rgb(246,97,4)" rx="2" ry="2"/>
<text x="57.8" y="927.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (80 samples, 0.02%)</title><rect x="265.3" y="1925" width="0.2" height="15.0" fill="rgb(238,149,28)" rx="2" ry="2"/>
<text x="268.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="115.2" y="1909" width="0.2" height="15.0" fill="rgb(240,216,22)" rx="2" ry="2"/>
<text x="118.2" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (181 samples, 0.04%)</title><rect x="464.8" y="1749" width="0.5" height="15.0" fill="rgb(240,142,5)" rx="2" ry="2"/>
<text x="467.8" y="1759.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (120 samples, 0.03%)</title><rect x="243.5" y="965" width="0.4" height="15.0" fill="rgb(211,223,37)" rx="2" ry="2"/>
<text x="246.5" y="975.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (100 samples, 0.02%)</title><rect x="16.6" y="2021" width="0.3" height="15.0" fill="rgb(236,113,1)" rx="2" ry="2"/>
<text x="19.6" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1109" width="0.2" height="15.0" fill="rgb(222,142,31)" rx="2" ry="2"/>
<text x="247.2" y="1119.5"/>
</g>
<g class="hide">
<title>gmain (82 samples, 0.02%)</title><rect x="355.3" y="2053" width="0.2" height="15.0" fill="rgb(239,43,22)" rx="2" ry="2"/>
<text x="358.3" y="2063.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (79 samples, 0.02%)</title><rect x="642.6" y="1877" width="0.2" height="15.0" fill="rgb(209,26,30)" rx="2" ry="2"/>
<text x="645.6" y="1887.5"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (61 samples, 0.01%)</title><rect x="368.1" y="2037" width="0.2" height="15.0" fill="rgb(220,106,31)" rx="2" ry="2"/>
<text x="371.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (299 samples, 0.07%)</title><rect x="385.8" y="1989" width="0.8" height="15.0" fill="rgb(252,102,24)" rx="2" ry="2"/>
<text x="388.8" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (744 samples, 0.17%)</title><rect x="503.5" y="1765" width="2.0" height="15.0" fill="rgb(250,228,28)" rx="2" ry="2"/>
<text x="506.5" y="1775.5"/>
</g>
<g class="hide">
<title>Thread::call_run (66 samples, 0.02%)</title><rect x="22.1" y="2005" width="0.2" height="15.0" fill="rgb(243,35,26)" rx="2" ry="2"/>
<text x="25.1" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (68 samples, 0.02%)</title><rect x="243.1" y="725" width="0.2" height="15.0" fill="rgb(215,103,19)" rx="2" ry="2"/>
<text x="246.1" y="735.5"/>
</g>
<g class="hide">
<title>[code] (927 samples, 0.21%)</title><rect x="241.4" y="1349" width="2.5" height="15.0" fill="rgb(207,95,40)" rx="2" ry="2"/>
<text x="244.4" y="1359.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="410.6" y="1589" width="0.2" height="15.0" fill="rgb(236,109,11)" rx="2" ry="2"/>
<text x="413.6" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,476 samples, 1.27%)</title><rect x="682.7" y="1941" width="14.9" height="15.0" fill="rgb(244,207,27)" rx="2" ry="2"/>
<text x="685.7" y="1951.5"/>
</g>
<g class="hide">
<title>__xstat64 (248 samples, 0.06%)</title><rect x="515.2" y="1861" width="0.6" height="15.0" fill="rgb(225,30,40)" rx="2" ry="2"/>
<text x="518.2" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (160 samples, 0.04%)</title><rect x="514.6" y="1829" width="0.4" height="15.0" fill="rgb(224,46,20)" rx="2" ry="2"/>
<text x="517.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (613 samples, 0.14%)</title><rect x="507.7" y="1861" width="1.7" height="15.0" fill="rgb(241,0,50)" rx="2" ry="2"/>
<text x="510.7" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (296 samples, 0.07%)</title><rect x="54.8" y="261" width="0.8" height="15.0" fill="rgb(250,96,27)" rx="2" ry="2"/>
<text x="57.8" y="271.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="32.9" y="1877" width="0.2" height="15.0" fill="rgb(251,109,45)" rx="2" ry="2"/>
<text x="35.9" y="1887.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::SimpleMemHeap (76 samples, 0.02%)</title><rect x="652.2" y="1957" width="0.2" height="15.0" fill="rgb(242,146,42)" rx="2" ry="2"/>
<text x="655.2" y="1967.5"/>
</g>
<g class="">
<title>Type::GetTypeSize (42 samples, 0.01%)</title><rect x="506.6187050359731" y="1829" width="2.122302158273381" height="15.0" fill="rgb(224,51,20)" rx="2" ry="2" _orig_x="543.7" _orig_width="0.1"/>
<text x="509.6187050359731" y="1839.5" _orig_x="546.7"/>
</g>
<g class="hide">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (49 samples, 0.01%)</title><rect x="614.4" y="1877" width="0.2" height="15.0" fill="rgb(248,46,2)" rx="2" ry="2"/>
<text x="617.4" y="1887.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (58 samples, 0.01%)</title><rect x="750.6834532374119" y="1813" width="4.244604316546762" height="15.0" fill="rgb(239,44,53)" rx="2" ry="2" _orig_x="555.2" _orig_width="0.2"/>
<text x="753.6834532374119" y="1823.5" _orig_x="558.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.02%)</title><rect x="32.1" y="1925" width="0.3" height="15.0" fill="rgb(227,1,28)" rx="2" ry="2"/>
<text x="35.1" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (107 samples, 0.02%)</title><rect x="16.1" y="1861" width="0.3" height="15.0" fill="rgb(211,1,36)" rx="2" ry="2"/>
<text x="19.1" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (49 samples, 0.01%)</title><rect x="500.0" y="1797" width="0.1" height="15.0" fill="rgb(238,49,20)" rx="2" ry="2"/>
<text x="503" y="1807.5"/>
</g>
<g class="hide">
<title>do_pcm_hwsync (9,881 samples, 2.29%)</title><rect x="135.0" y="1909" width="27.0" height="15.0" fill="rgb(220,59,50)" rx="2" ry="2"/>
<text x="138" y="1919.5">d..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,446 samples, 1.72%)</title><rect x="712.5" y="1877" width="20.3" height="15.0" fill="rgb(211,20,53)" rx="2" ry="2"/>
<text x="715.5" y="1887.5">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,392 samples, 0.55%)</title><rect x="404.2" y="1829" width="6.6" height="15.0" fill="rgb(237,172,10)" rx="2" ry="2"/>
<text x="407.2" y="1839.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (45 samples, 0.01%)</title><rect x="372.5" y="2021" width="0.1" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2"/>
<text x="375.5" y="2031.5"/>
</g>
<g class="hide">
<title>G1CollectedHeap::do_full_collection (45 samples, 0.01%)</title><rect x="49.8" y="1909" width="0.1" height="15.0" fill="rgb(208,57,43)" rx="2" ry="2"/>
<text x="52.8" y="1919.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (78 samples, 0.02%)</title><rect x="1170.8992805755404" y="1877" width="4.244604316546762" height="15.0" fill="rgb(210,138,19)" rx="2" ry="2" _orig_x="575.0" _orig_width="0.2"/>
<text x="1173.8992805755404" y="1887.5" _orig_x="578"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,845 samples, 2.28%)</title><rect x="738.6" y="1925" width="26.9" height="15.0" fill="rgb(232,188,4)" rx="2" ry="2"/>
<text x="741.6" y="1935.5">[..</text>
</g>
<g class="hide">
<title>Row::DeserializeFrom (8,951 samples, 2.07%)</title><rect x="601.4" y="1893" width="24.4" height="15.0" fill="rgb(252,168,45)" rx="2" ry="2"/>
<text x="604.4" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (363 samples, 0.08%)</title><rect x="794.2" y="1717" width="1.0" height="15.0" fill="rgb(248,207,30)" rx="2" ry="2"/>
<text x="797.2" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="27.3" y="1957" width="0.1" height="15.0" fill="rgb(211,9,36)" rx="2" ry="2"/>
<text x="30.3" y="1967.5"/>
</g>
<g class="hide">
<title>TypeChar::DeserializeFrom (1,564 samples, 0.36%)</title><rect x="455.3" y="1829" width="4.3" height="15.0" fill="rgb(206,85,27)" rx="2" ry="2"/>
<text x="458.3" y="1839.5"/>
</g>
<g class="hide">
<title>ksoftirqd/0 (76 samples, 0.02%)</title><rect x="380.7" y="2053" width="0.2" height="15.0" fill="rgb(227,144,24)" rx="2" ry="2"/>
<text x="383.7" y="2063.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (98 samples, 0.02%)</title><rect x="472.6" y="1845" width="0.3" height="15.0" fill="rgb(230,125,12)" rx="2" ry="2"/>
<text x="475.6" y="1855.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (39 samples, 0.01%)</title><rect x="22.8" y="1989" width="0.1" height="15.0" fill="rgb(236,9,39)" rx="2" ry="2"/>
<text x="25.8" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="33.5" y="1861" width="0.2" height="15.0" fill="rgb(225,77,16)" rx="2" ry="2"/>
<text x="36.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (321 samples, 0.07%)</title><rect x="622.3" y="1861" width="0.9" height="15.0" fill="rgb(221,114,44)" rx="2" ry="2"/>
<text x="625.3" y="1871.5"/>
</g>
<g class="hide">
<title>ntfs_attr_pwrite (350 samples, 0.08%)</title><rect x="775.9" y="2021" width="1.0" height="15.0" fill="rgb(247,99,43)" rx="2" ry="2"/>
<text x="778.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="304.2" y="1589" width="0.2" height="15.0" fill="rgb(250,29,33)" rx="2" ry="2"/>
<text x="307.2" y="1599.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (50 samples, 0.01%)</title><rect x="422.0" y="1733" width="0.2" height="15.0" fill="rgb(209,134,27)" rx="2" ry="2"/>
<text x="425" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.14%)</title><rect x="54.3" y="2021" width="1.7" height="15.0" fill="rgb(247,102,46)" rx="2" ry="2"/>
<text x="57.3" y="2031.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (39 samples, 0.01%)</title><rect x="430.1" y="1845" width="0.1" height="15.0" fill="rgb(206,92,24)" rx="2" ry="2"/>
<text x="433.1" y="1855.5"/>
</g>
<g class="hide">
<title>std::__1::mutex::unlock (50 samples, 0.01%)</title><rect x="340.5" y="2005" width="0.2" height="15.0" fill="rgb(232,104,39)" rx="2" ry="2"/>
<text x="343.5" y="2015.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::~BufferPoolManager (43 samples, 0.01%)</title><rect x="662.4" y="1973" width="0.1" height="15.0" fill="rgb(209,119,43)" rx="2" ry="2"/>
<text x="665.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (388 samples, 0.09%)</title><rect x="1126.1" y="1605" width="1.0" height="15.0" fill="rgb(216,99,33)" rx="2" ry="2"/>
<text x="1129.1" y="1615.5"/>
</g>
<g class="hide">
<title>code (50,232 samples, 11.63%)</title><rect x="203.4" y="2053" width="137.3" height="15.0" fill="rgb(211,21,15)" rx="2" ry="2"/>
<text x="206.4" y="2063.5">code </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="237.0" y="1973" width="0.4" height="15.0" fill="rgb(213,5,24)" rx="2" ry="2"/>
<text x="240" y="1983.5"/>
</g>
<g class="hide">
<title>Isolated_Web_Co (540 samples, 0.13%)</title><rect x="27.5" y="2053" width="1.5" height="15.0" fill="rgb(252,9,24)" rx="2" ry="2"/>
<text x="30.5" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (93 samples, 0.02%)</title><rect x="245.1" y="1285" width="0.2" height="15.0" fill="rgb(254,87,54)" rx="2" ry="2"/>
<text x="248.1" y="1295.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (94 samples, 0.02%)</title><rect x="617.6" y="1813" width="0.2" height="15.0" fill="rgb(219,121,49)" rx="2" ry="2"/>
<text x="620.6" y="1823.5"/>
</g>
<g class="hide">
<title>pa_memblock_is_silence (102 samples, 0.02%)</title><rect x="193.9" y="2037" width="0.3" height="15.0" fill="rgb(211,134,2)" rx="2" ry="2"/>
<text x="196.9" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1397" width="0.2" height="15.0" fill="rgb(254,27,51)" rx="2" ry="2"/>
<text x="247.4" y="1407.5"/>
</g>
<g class="hide">
<title>[code] (56 samples, 0.01%)</title><rect x="43.8" y="1813" width="0.1" height="15.0" fill="rgb(224,206,40)" rx="2" ry="2"/>
<text x="46.8" y="1823.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (51 samples, 0.01%)</title><rect x="650.935251798562" y="1845" width="2.122302158273381" height="15.0" fill="rgb(248,41,24)" rx="2" ry="2" _orig_x="550.5" _orig_width="0.1"/>
<text x="653.935251798562" y="1855.5" _orig_x="553.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1973" width="0.2" height="15.0" fill="rgb(234,124,47)" rx="2" ry="2"/>
<text x="36.5" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (142 samples, 0.03%)</title><rect x="16.1" y="1893" width="0.4" height="15.0" fill="rgb(251,109,12)" rx="2" ry="2"/>
<text x="19.1" y="1903.5"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (67 samples, 0.02%)</title><rect x="725.2158273381303" y="1813" width="2.122302158273381" height="15.0" fill="rgb(232,46,17)" rx="2" ry="2" _orig_x="554.0" _orig_width="0.1"/>
<text x="728.2158273381303" y="1823.5" _orig_x="557"/>
</g>
<g class="hide">
<title>Row::GetSerializedSize (53 samples, 0.01%)</title><rect x="640.4" y="1941" width="0.2" height="15.0" fill="rgb(209,163,30)" rx="2" ry="2"/>
<text x="643.4" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="798.3" y="1989" width="0.2" height="15.0" fill="rgb(241,97,23)" rx="2" ry="2"/>
<text x="801.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (198 samples, 0.05%)</title><rect x="383.4" y="2037" width="0.5" height="15.0" fill="rgb(243,3,15)" rx="2" ry="2"/>
<text x="386.4" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (56 samples, 0.01%)</title><rect x="621.1" y="1829" width="0.1" height="15.0" fill="rgb(219,217,5)" rx="2" ry="2"/>
<text x="624.1" y="1839.5"/>
</g>
<g class="hide">
<title>pa_cvolume_valid (237 samples, 0.05%)</title><rect x="190.9" y="2037" width="0.6" height="15.0" fill="rgb(220,208,54)" rx="2" ry="2"/>
<text x="193.9" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (218 samples, 0.05%)</title><rect x="410.2" y="1621" width="0.6" height="15.0" fill="rgb(223,219,36)" rx="2" ry="2"/>
<text x="413.2" y="1631.5"/>
</g>
<g class="hide">
<title>[code] (63 samples, 0.01%)</title><rect x="16.2" y="1797" width="0.2" height="15.0" fill="rgb(232,227,6)" rx="2" ry="2"/>
<text x="19.2" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="793.1" y="1909" width="0.1" height="15.0" fill="rgb(222,33,4)" rx="2" ry="2"/>
<text x="796.1" y="1919.5"/>
</g>
<g class="hide">
<title>pa_object_ref (44 samples, 0.01%)</title><rect x="81.4" y="2005" width="0.2" height="15.0" fill="rgb(225,130,24)" rx="2" ry="2"/>
<text x="84.4" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="453" width="0.8" height="15.0" fill="rgb(227,133,12)" rx="2" ry="2"/>
<text x="57.8" y="463.5"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (64 samples, 0.01%)</title><rect x="343.1" y="2021" width="0.2" height="15.0" fill="rgb(209,6,45)" rx="2" ry="2"/>
<text x="346.1" y="2031.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (89 samples, 0.02%)</title><rect x="248.4" y="1845" width="0.2" height="15.0" fill="rgb(218,22,45)" rx="2" ry="2"/>
<text x="251.4" y="1855.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (128 samples, 0.03%)</title><rect x="646.7" y="1845" width="0.4" height="15.0" fill="rgb(220,100,28)" rx="2" ry="2"/>
<text x="649.7" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="346.8" y="1925" width="0.2" height="15.0" fill="rgb(227,62,41)" rx="2" ry="2"/>
<text x="349.8" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="250.1" y="1893" width="0.2" height="15.0" fill="rgb(239,84,23)" rx="2" ry="2"/>
<text x="253.1" y="1903.5"/>
</g>
<g class="">
<title>Type::GetInstance (74 samples, 0.02%)</title><rect x="75.79136690647529" y="1845" width="4.244604316546762" height="15.0" fill="rgb(249,0,43)" rx="2" ry="2" _orig_x="523.4" _orig_width="0.2"/>
<text x="78.79136690647529" y="1855.5" _orig_x="526.4"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (643 samples, 0.15%)</title><rect x="443.7" y="1653" width="1.8" height="15.0" fill="rgb(254,139,22)" rx="2" ry="2"/>
<text x="446.7" y="1663.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="917" width="0.2" height="15.0" fill="rgb(219,219,37)" rx="2" ry="2"/>
<text x="30" y="927.5"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (51 samples, 0.01%)</title><rect x="441.0" y="1845" width="0.2" height="15.0" fill="rgb(247,63,54)" rx="2" ry="2"/>
<text x="444" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="48.0" y="1829" width="0.3" height="15.0" fill="rgb(222,36,5)" rx="2" ry="2"/>
<text x="51" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="207.0" y="1925" width="0.2" height="15.0" fill="rgb(237,76,23)" rx="2" ry="2"/>
<text x="210" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.02%)</title><rect x="380.7" y="2037" width="0.2" height="15.0" fill="rgb(216,30,13)" rx="2" ry="2"/>
<text x="383.7" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (135 samples, 0.03%)</title><rect x="628.3" y="1893" width="0.4" height="15.0" fill="rgb(250,41,6)" rx="2" ry="2"/>
<text x="631.3" y="1903.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (259 samples, 0.06%)</title><rect x="647.3" y="1797" width="0.7" height="15.0" fill="rgb(216,18,53)" rx="2" ry="2"/>
<text x="650.3" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,731 samples, 0.63%)</title><rect x="311.1" y="1925" width="7.5" height="15.0" fill="rgb(237,94,13)" rx="2" ry="2"/>
<text x="314.1" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="14.0" y="2021" width="0.1" height="15.0" fill="rgb(209,125,28)" rx="2" ry="2"/>
<text x="17" y="2031.5"/>
</g>
<g class="hide">
<title>start_thread (170 samples, 0.04%)</title><rect x="16.1" y="2037" width="0.4" height="15.0" fill="rgb(220,193,42)" rx="2" ry="2"/>
<text x="19.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,015 samples, 0.93%)</title><rect x="399.8" y="1989" width="11.0" height="15.0" fill="rgb(206,35,3)" rx="2" ry="2"/>
<text x="402.8" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (75 samples, 0.02%)</title><rect x="245.1" y="1077" width="0.2" height="15.0" fill="rgb(223,84,38)" rx="2" ry="2"/>
<text x="248.1" y="1087.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.02%)</title><rect x="798.3" y="1877" width="0.2" height="15.0" fill="rgb(247,229,5)" rx="2" ry="2"/>
<text x="801.3" y="1887.5"/>
</g>
<g class="hide">
<title>LRUReplacer::Victim (546 samples, 0.13%)</title><rect x="446.2" y="1877" width="1.5" height="15.0" fill="rgb(205,80,10)" rx="2" ry="2"/>
<text x="449.2" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (183 samples, 0.04%)</title><rect x="242.8" y="997" width="0.5" height="15.0" fill="rgb(228,177,30)" rx="2" ry="2"/>
<text x="245.8" y="1007.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (86 samples, 0.02%)</title><rect x="245.6" y="1493" width="0.2" height="15.0" fill="rgb(237,86,27)" rx="2" ry="2"/>
<text x="248.6" y="1503.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (170 samples, 0.04%)</title><rect x="244.0" y="1301" width="0.4" height="15.0" fill="rgb(207,26,21)" rx="2" ry="2"/>
<text x="247" y="1311.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1093" width="0.1" height="15.0" fill="rgb(223,69,1)" rx="2" ry="2"/>
<text x="247" y="1103.5"/>
</g>
<g class="">
<title>std::_Destroy&lt;char*&gt; (44 samples, 0.01%)</title><rect x="1086.0071942446052" y="1829" width="2.122302158273381" height="15.0" fill="rgb(238,7,54)" rx="2" ry="2" _orig_x="571.0" _orig_width="0.1"/>
<text x="1089.0071942446052" y="1839.5" _orig_x="574"/>
</g>
<g class="hide">
<title>[code] (349 samples, 0.08%)</title><rect x="43.0" y="1829" width="1.0" height="15.0" fill="rgb(251,5,12)" rx="2" ry="2"/>
<text x="46" y="1839.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned (64 samples, 0.01%)</title><rect x="766.9" y="2021" width="0.2" height="15.0" fill="rgb(213,40,38)" rx="2" ry="2"/>
<text x="769.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="391.8" y="1845" width="0.2" height="15.0" fill="rgb(248,101,17)" rx="2" ry="2"/>
<text x="394.8" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.03%)</title><rect x="56.5" y="1813" width="0.4" height="15.0" fill="rgb(236,20,34)" rx="2" ry="2"/>
<text x="59.5" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (73 samples, 0.02%)</title><rect x="650.2" y="1861" width="0.2" height="15.0" fill="rgb(206,15,37)" rx="2" ry="2"/>
<text x="653.2" y="1871.5"/>
</g>
<g class="hide">
<title>os::sleep (249 samples, 0.06%)</title><rect x="37.1" y="1989" width="0.7" height="15.0" fill="rgb(213,120,13)" rx="2" ry="2"/>
<text x="40.1" y="1999.5"/>
</g>
<g class="hide">
<title>Row::~Row (2,612 samples, 0.60%)</title><rect x="628.7" y="1909" width="7.1" height="15.0" fill="rgb(247,58,37)" rx="2" ry="2"/>
<text x="631.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="792.9" y="1845" width="0.2" height="15.0" fill="rgb(253,197,19)" rx="2" ry="2"/>
<text x="795.9" y="1855.5"/>
</g>
<g class="hide">
<title>ntfs_pathname_to_inode (55 samples, 0.01%)</title><rect x="679.3" y="2005" width="0.2" height="15.0" fill="rgb(236,199,40)" rx="2" ry="2"/>
<text x="682.3" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (1,068 samples, 0.25%)</title><rect x="38.0" y="2037" width="2.9" height="15.0" fill="rgb(243,21,3)" rx="2" ry="2"/>
<text x="41" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="12.7" y="1925" width="0.2" height="15.0" fill="rgb(220,199,29)" rx="2" ry="2"/>
<text x="15.7" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (77 samples, 0.02%)</title><rect x="491.8" y="1829" width="0.2" height="15.0" fill="rgb(239,109,43)" rx="2" ry="2"/>
<text x="494.8" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (225 samples, 0.05%)</title><rect x="456.7" y="1717" width="0.6" height="15.0" fill="rgb(242,98,45)" rx="2" ry="2"/>
<text x="459.7" y="1727.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (617 samples, 0.14%)</title><rect x="419.604316546764" y="1749" width="33.956834532374096" height="15.0" fill="rgb(231,114,3)" rx="2" ry="2" _orig_x="539.6" _orig_width="1.6"/>
<text x="422.604316546764" y="1759.5" _orig_x="542.6">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (315 samples, 0.07%)</title><rect x="390.5" y="1989" width="0.9" height="15.0" fill="rgb(239,52,35)" rx="2" ry="2"/>
<text x="393.5" y="1999.5"/>
</g>
<g class="hide">
<title>Field::SerializeTo (39 samples, 0.01%)</title><rect x="640.7" y="1925" width="0.1" height="15.0" fill="rgb(223,31,0)" rx="2" ry="2"/>
<text x="643.7" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (70 samples, 0.02%)</title><rect x="14.9" y="1733" width="0.2" height="15.0" fill="rgb(230,113,26)" rx="2" ry="2"/>
<text x="17.9" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="392.0" y="1829" width="0.1" height="15.0" fill="rgb(237,4,9)" rx="2" ry="2"/>
<text x="395" y="1839.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (71 samples, 0.02%)</title><rect x="245.6" y="1381" width="0.2" height="15.0" fill="rgb(229,51,47)" rx="2" ry="2"/>
<text x="248.6" y="1391.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (49 samples, 0.01%)</title><rect x="366.9" y="1893" width="0.2" height="15.0" fill="rgb(236,74,30)" rx="2" ry="2"/>
<text x="369.9" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (1,749 samples, 0.41%)</title><rect x="239.9" y="1605" width="4.8" height="15.0" fill="rgb(219,119,22)" rx="2" ry="2"/>
<text x="242.9" y="1615.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (248 samples, 0.06%)</title><rect x="632.6" y="1781" width="0.7" height="15.0" fill="rgb(251,138,54)" rx="2" ry="2"/>
<text x="635.6" y="1791.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (63 samples, 0.01%)</title><rect x="358.0" y="1829" width="0.2" height="15.0" fill="rgb(242,182,13)" rx="2" ry="2"/>
<text x="361" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (282 samples, 0.07%)</title><rect x="386.7" y="2021" width="0.7" height="15.0" fill="rgb(221,113,53)" rx="2" ry="2"/>
<text x="389.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[vdso]] (260 samples, 0.06%)</title><rect x="203.4" y="2037" width="0.7" height="15.0" fill="rgb(205,212,11)" rx="2" ry="2"/>
<text x="206.4" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (45 samples, 0.01%)</title><rect x="614.7" y="1861" width="0.1" height="15.0" fill="rgb(240,90,47)" rx="2" ry="2"/>
<text x="617.7" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="365.1" y="1893" width="0.2" height="15.0" fill="rgb(238,159,9)" rx="2" ry="2"/>
<text x="368.1" y="1903.5"/>
</g>
<g class="hide">
<title>ExecuteEngine::~ExecuteEngine (43 samples, 0.01%)</title><rect x="662.4" y="2005" width="0.1" height="15.0" fill="rgb(244,203,54)" rx="2" ry="2"/>
<text x="665.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (190 samples, 0.04%)</title><rect x="639.0" y="1925" width="0.5" height="15.0" fill="rgb(242,229,42)" rx="2" ry="2"/>
<text x="642" y="1935.5"/>
</g>
<g class="hide">
<title>std::__1::mutex::lock (38 samples, 0.01%)</title><rect x="309.4" y="1973" width="0.1" height="15.0" fill="rgb(241,222,43)" rx="2" ry="2"/>
<text x="312.4" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (40 samples, 0.01%)</title><rect x="248.4" y="1621" width="0.1" height="15.0" fill="rgb(206,135,9)" rx="2" ry="2"/>
<text x="251.4" y="1631.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (55 samples, 0.01%)</title><rect x="217.98561151079278" y="1685" width="2.122302158273381" height="15.0" fill="rgb(227,64,33)" rx="2" ry="2" _orig_x="530.1" _orig_width="0.1"/>
<text x="220.98561151079278" y="1695.5" _orig_x="533.1"/>
</g>
<g class="hide">
<title>[unknown] (429 samples, 0.10%)</title><rect x="54.4" y="2005" width="1.2" height="15.0" fill="rgb(207,202,32)" rx="2" ry="2"/>
<text x="57.4" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (134 samples, 0.03%)</title><rect x="246.5" y="1477" width="0.4" height="15.0" fill="rgb(223,126,34)" rx="2" ry="2"/>
<text x="249.5" y="1487.5"/>
</g>
<g class="hide">
<title>Row::Row (1,892 samples, 0.44%)</title><rect x="649.1" y="1973" width="5.2" height="15.0" fill="rgb(233,18,4)" rx="2" ry="2"/>
<text x="652.1" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,511 samples, 0.58%)</title><rect x="254.1" y="1989" width="6.9" height="15.0" fill="rgb(238,204,16)" rx="2" ry="2"/>
<text x="257.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="12.8" y="1861" width="0.1" height="15.0" fill="rgb(217,53,49)" rx="2" ry="2"/>
<text x="15.8" y="1871.5"/>
</g>
<g class="hide">
<title>Row::Row (1,053 samples, 0.24%)</title><rect x="576.3" y="1893" width="2.8" height="15.0" fill="rgb(217,98,37)" rx="2" ry="2"/>
<text x="579.3" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="1061" width="0.8" height="15.0" fill="rgb(225,0,12)" rx="2" ry="2"/>
<text x="57.8" y="1071.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (526 samples, 0.12%)</title><rect x="1186.9" y="1909" width="1.5" height="15.0" fill="rgb(220,151,40)" rx="2" ry="2"/>
<text x="1189.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (78 samples, 0.02%)</title><rect x="449.5" y="1797" width="0.2" height="15.0" fill="rgb(207,190,24)" rx="2" ry="2"/>
<text x="452.5" y="1807.5"/>
</g>
<g class="hide">
<title>__libc_fork (103 samples, 0.02%)</title><rect x="237.9" y="2037" width="0.2" height="15.0" fill="rgb(210,91,26)" rx="2" ry="2"/>
<text x="240.9" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (1,209 samples, 0.28%)</title><rect x="17.2" y="2021" width="3.3" height="15.0" fill="rgb(239,134,3)" rx="2" ry="2"/>
<text x="20.2" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (260 samples, 0.06%)</title><rect x="645.4" y="1861" width="0.8" height="15.0" fill="rgb(214,220,41)" rx="2" ry="2"/>
<text x="648.4" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="390.3" y="1925" width="0.1" height="15.0" fill="rgb(209,111,8)" rx="2" ry="2"/>
<text x="393.3" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (1,018 samples, 0.24%)</title><rect x="41.5" y="1893" width="2.8" height="15.0" fill="rgb(241,80,35)" rx="2" ry="2"/>
<text x="44.5" y="1903.5"/>
</g>
<g class="hide">
<title>runtime.goexit.abi0 (45 samples, 0.01%)</title><rect x="344.1" y="2037" width="0.1" height="15.0" fill="rgb(210,3,48)" rx="2" ry="2"/>
<text x="347.1" y="2047.5"/>
</g>
<g class="hide">
<title>pa_rtpoll_set_timer_relative (59 samples, 0.01%)</title><rect x="197.4" y="2037" width="0.2" height="15.0" fill="rgb(217,124,23)" rx="2" ry="2"/>
<text x="200.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (253 samples, 0.06%)</title><rect x="461.0" y="1717" width="0.7" height="15.0" fill="rgb(233,94,29)" rx="2" ry="2"/>
<text x="464" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="388.2" y="1909" width="0.2" height="15.0" fill="rgb(221,99,14)" rx="2" ry="2"/>
<text x="391.2" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (1,026 samples, 0.24%)</title><rect x="41.5" y="1925" width="2.8" height="15.0" fill="rgb(249,149,15)" rx="2" ry="2"/>
<text x="44.5" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (84 samples, 0.02%)</title><rect x="245.1" y="1109" width="0.2" height="15.0" fill="rgb(219,189,33)" rx="2" ry="2"/>
<text x="248.1" y="1119.5"/>
</g>
<g class="hide">
<title>snd_pcm_stream_unlock_irq (49 samples, 0.01%)</title><rect x="162.0" y="1909" width="0.2" height="15.0" fill="rgb(205,151,31)" rx="2" ry="2"/>
<text x="165" y="1919.5"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (99 samples, 0.02%)</title><rect x="359.1" y="2021" width="0.2" height="15.0" fill="rgb(245,101,27)" rx="2" ry="2"/>
<text x="362.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,187 samples, 1.66%)</title><rect x="1159.1" y="1845" width="19.7" height="15.0" fill="rgb(209,56,51)" rx="2" ry="2"/>
<text x="1162.1" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.03%)</title><rect x="163.5" y="1861" width="0.3" height="15.0" fill="rgb(205,38,46)" rx="2" ry="2"/>
<text x="166.5" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (47 samples, 0.01%)</title><rect x="506.2" y="1813" width="0.1" height="15.0" fill="rgb(235,117,43)" rx="2" ry="2"/>
<text x="509.2" y="1823.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (254 samples, 0.06%)</title><rect x="357.5" y="1941" width="0.7" height="15.0" fill="rgb(226,6,18)" rx="2" ry="2"/>
<text x="360.5" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1349" width="0.2" height="15.0" fill="rgb(237,89,33)" rx="2" ry="2"/>
<text x="247.4" y="1359.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="32.5" y="1989" width="0.2" height="15.0" fill="rgb(236,139,35)" rx="2" ry="2"/>
<text x="35.5" y="1999.5"/>
</g>
<g class="hide">
<title>ntfs_mst_post_write_fixup (49 samples, 0.01%)</title><rect x="779.8" y="2021" width="0.1" height="15.0" fill="rgb(208,167,12)" rx="2" ry="2"/>
<text x="782.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (452 samples, 0.10%)</title><rect x="1187.1" y="1861" width="1.3" height="15.0" fill="rgb(229,107,7)" rx="2" ry="2"/>
<text x="1190.1" y="1871.5"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (50 samples, 0.01%)</title><rect x="370.0" y="1989" width="0.1" height="15.0" fill="rgb(209,187,27)" rx="2" ry="2"/>
<text x="373" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="380.7" y="1989" width="0.2" height="15.0" fill="rgb(211,80,37)" rx="2" ry="2"/>
<text x="383.7" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (57 samples, 0.01%)</title><rect x="245.7" y="1141" width="0.1" height="15.0" fill="rgb(226,12,33)" rx="2" ry="2"/>
<text x="248.7" y="1151.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="203.2" y="1909" width="0.1" height="15.0" fill="rgb(231,145,5)" rx="2" ry="2"/>
<text x="206.2" y="1919.5"/>
</g>
<g class="hide">
<title>_nv033085rm (541 samples, 0.13%)</title><rect x="1180.6" y="2037" width="1.5" height="15.0" fill="rgb(223,50,24)" rx="2" ry="2"/>
<text x="1183.6" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-3666.map] (83 samples, 0.02%)</title><rect x="358.0" y="1925" width="0.2" height="15.0" fill="rgb(253,209,26)" rx="2" ry="2"/>
<text x="361" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="209.8" y="1717" width="0.1" height="15.0" fill="rgb(242,44,21)" rx="2" ry="2"/>
<text x="212.8" y="1727.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (147 samples, 0.03%)</title><rect x="428.1" y="1813" width="0.4" height="15.0" fill="rgb(243,179,11)" rx="2" ry="2"/>
<text x="431.1" y="1823.5"/>
</g>
<g class="hide">
<title>pa_smoother_translate (65 samples, 0.02%)</title><rect x="200.2" y="2037" width="0.2" height="15.0" fill="rgb(205,181,25)" rx="2" ry="2"/>
<text x="203.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (179 samples, 0.04%)</title><rect x="434.9" y="1845" width="0.5" height="15.0" fill="rgb(212,68,35)" rx="2" ry="2"/>
<text x="437.9" y="1855.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (151 samples, 0.03%)</title><rect x="273.5" y="1957" width="0.4" height="15.0" fill="rgb(225,146,13)" rx="2" ry="2"/>
<text x="276.5" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,464 samples, 0.57%)</title><rect x="254.3" y="1973" width="6.7" height="15.0" fill="rgb(205,47,50)" rx="2" ry="2"/>
<text x="257.3" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (68 samples, 0.02%)</title><rect x="245.1" y="997" width="0.2" height="15.0" fill="rgb(252,206,1)" rx="2" ry="2"/>
<text x="248.1" y="1007.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (227 samples, 0.05%)</title><rect x="735.8273381294973" y="1797" width="12.733812949640287" height="15.0" fill="rgb(228,214,46)" rx="2" ry="2" _orig_x="554.5" _orig_width="0.6"/>
<text x="738.8273381294973" y="1807.5" _orig_x="557.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="51.9" y="1941" width="0.2" height="15.0" fill="rgb(205,195,36)" rx="2" ry="2"/>
<text x="54.9" y="1951.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (68 samples, 0.02%)</title><rect x="504.6" y="1717" width="0.2" height="15.0" fill="rgb(214,227,24)" rx="2" ry="2"/>
<text x="507.6" y="1727.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (92 samples, 0.02%)</title><rect x="473.3" y="1845" width="0.3" height="15.0" fill="rgb(227,62,27)" rx="2" ry="2"/>
<text x="476.3" y="1855.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::SimpleMemHeap (147 samples, 0.03%)</title><rect x="430.9" y="1845" width="0.4" height="15.0" fill="rgb(214,121,41)" rx="2" ry="2"/>
<text x="433.9" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="243.2" y="501" width="0.1" height="15.0" fill="rgb(245,219,47)" rx="2" ry="2"/>
<text x="246.2" y="511.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,833 samples, 2.05%)</title><rect x="741.3" y="1877" width="24.2" height="15.0" fill="rgb(235,149,15)" rx="2" ry="2"/>
<text x="744.3" y="1887.5">[..</text>
</g>
<g class="hide">
<title>kworker/9:2-eve (138 samples, 0.03%)</title><rect x="391.4" y="2053" width="0.4" height="15.0" fill="rgb(231,54,5)" rx="2" ry="2"/>
<text x="394.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1061" width="0.2" height="15.0" fill="rgb(206,214,40)" rx="2" ry="2"/>
<text x="30" y="1071.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="114.3" y="1877" width="0.2" height="15.0" fill="rgb(221,86,6)" rx="2" ry="2"/>
<text x="117.3" y="1887.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (39 samples, 0.01%)</title><rect x="667.9136690647481" y="1829" width="2.122302158273381" height="15.0" fill="rgb(243,29,40)" rx="2" ry="2" _orig_x="551.3" _orig_width="0.1"/>
<text x="670.9136690647481" y="1839.5" _orig_x="554.3"/>
</g>
<g class="hide">
<title>kworker/8:2-eve (342 samples, 0.08%)</title><rect x="390.4" y="2053" width="1.0" height="15.0" fill="rgb(238,13,36)" rx="2" ry="2"/>
<text x="393.4" y="2063.5"/>
</g>
<g class="hide">
<title>_pthread_cleanup_push (53 samples, 0.01%)</title><rect x="207.9" y="2021" width="0.1" height="15.0" fill="rgb(239,197,13)" rx="2" ry="2"/>
<text x="210.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (312 samples, 0.07%)</title><rect x="385.8" y="2005" width="0.8" height="15.0" fill="rgb(225,37,53)" rx="2" ry="2"/>
<text x="388.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="364.6" y="1877" width="0.1" height="15.0" fill="rgb(251,173,13)" rx="2" ry="2"/>
<text x="367.6" y="1887.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (519 samples, 0.12%)</title><rect x="268.9" y="1941" width="1.4" height="15.0" fill="rgb(217,203,34)" rx="2" ry="2"/>
<text x="271.9" y="1951.5"/>
</g>
<g class="hide">
<title>__libc_write (54 samples, 0.01%)</title><rect x="27.3" y="2021" width="0.1" height="15.0" fill="rgb(231,52,53)" rx="2" ry="2"/>
<text x="30.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (930 samples, 0.22%)</title><rect x="316.1" y="1845" width="2.5" height="15.0" fill="rgb(225,124,24)" rx="2" ry="2"/>
<text x="319.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (346 samples, 0.08%)</title><rect x="50.8" y="1909" width="1.0" height="15.0" fill="rgb(248,18,28)" rx="2" ry="2"/>
<text x="53.8" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (747 samples, 0.17%)</title><rect x="500.8" y="1797" width="2.0" height="15.0" fill="rgb(212,149,24)" rx="2" ry="2"/>
<text x="503.8" y="1807.5"/>
</g>
<g class="hide">
<title>isl::iostreams::detail::file_lock::g_mutexPool (81 samples, 0.02%)</title><rect x="33.5" y="2037" width="0.2" height="15.0" fill="rgb(235,73,21)" rx="2" ry="2"/>
<text x="36.5" y="2047.5"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (37 samples, 0.01%)</title><rect x="356.6" y="2037" width="0.1" height="15.0" fill="rgb(243,140,44)" rx="2" ry="2"/>
<text x="359.6" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,502 samples, 1.27%)</title><rect x="750.4" y="1829" width="15.1" height="15.0" fill="rgb(218,122,23)" rx="2" ry="2"/>
<text x="753.4" y="1839.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (61 samples, 0.01%)</title><rect x="419.3" y="1653" width="0.2" height="15.0" fill="rgb(210,68,8)" rx="2" ry="2"/>
<text x="422.3" y="1663.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (89 samples, 0.02%)</title><rect x="626.1" y="1893" width="0.2" height="15.0" fill="rgb(221,75,37)" rx="2" ry="2"/>
<text x="629.1" y="1903.5"/>
</g>
<g class="hide">
<title>_int_free (45 samples, 0.01%)</title><rect x="785.2" y="2037" width="0.1" height="15.0" fill="rgb(218,54,33)" rx="2" ry="2"/>
<text x="788.2" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (456 samples, 0.11%)</title><rect x="19.1" y="1733" width="1.2" height="15.0" fill="rgb(205,201,8)" rx="2" ry="2"/>
<text x="22.1" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="245.2" y="757" width="0.1" height="15.0" fill="rgb(253,41,8)" rx="2" ry="2"/>
<text x="248.2" y="767.5"/>
</g>
<g class="hide">
<title>[code] (154 samples, 0.04%)</title><rect x="20.9" y="1813" width="0.4" height="15.0" fill="rgb(233,192,11)" rx="2" ry="2"/>
<text x="23.9" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (164 samples, 0.04%)</title><rect x="54.8" y="117" width="0.4" height="15.0" fill="rgb(242,93,16)" rx="2" ry="2"/>
<text x="57.8" y="127.5"/>
</g>
<g class="hide">
<title>[code] (3,575 samples, 0.83%)</title><rect x="238.3" y="1989" width="9.7" height="15.0" fill="rgb(235,94,27)" rx="2" ry="2"/>
<text x="241.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.02%)</title><rect x="795.0" y="1621" width="0.2" height="15.0" fill="rgb(222,229,43)" rx="2" ry="2"/>
<text x="798" y="1631.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (97 samples, 0.02%)</title><rect x="396.2589928057563" y="1717" width="6.366906474820143" height="15.0" fill="rgb(212,75,11)" rx="2" ry="2" _orig_x="538.5" _orig_width="0.3"/>
<text x="399.2589928057563" y="1727.5" _orig_x="541.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="2021" width="0.4" height="15.0" fill="rgb(218,188,44)" rx="2" ry="2"/>
<text x="19.1" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (151 samples, 0.03%)</title><rect x="604.2" y="1765" width="0.4" height="15.0" fill="rgb(208,189,16)" rx="2" ry="2"/>
<text x="607.2" y="1775.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (135 samples, 0.03%)</title><rect x="357.6" y="1925" width="0.3" height="15.0" fill="rgb(233,26,44)" rx="2" ry="2"/>
<text x="360.6" y="1935.5"/>
</g>
<g class="hide">
<title>__libc_send (37 samples, 0.01%)</title><rect x="13.9" y="2037" width="0.1" height="15.0" fill="rgb(231,202,38)" rx="2" ry="2"/>
<text x="16.9" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="244.2" y="869" width="0.2" height="15.0" fill="rgb(238,224,19)" rx="2" ry="2"/>
<text x="247.2" y="879.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (163 samples, 0.04%)</title><rect x="206.2" y="2021" width="0.5" height="15.0" fill="rgb(227,38,9)" rx="2" ry="2"/>
<text x="209.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.03%)</title><rect x="374.5" y="1989" width="0.3" height="15.0" fill="rgb(209,96,14)" rx="2" ry="2"/>
<text x="377.5" y="1999.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_state (128 samples, 0.03%)</title><rect x="160.6" y="1861" width="0.4" height="15.0" fill="rgb(219,88,6)" rx="2" ry="2"/>
<text x="163.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="342.5" y="1957" width="0.1" height="15.0" fill="rgb(246,27,30)" rx="2" ry="2"/>
<text x="345.5" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1429" width="0.2" height="15.0" fill="rgb(225,89,36)" rx="2" ry="2"/>
<text x="247.4" y="1439.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111 samples, 0.03%)</title><rect x="26.4" y="1941" width="0.3" height="15.0" fill="rgb(235,49,10)" rx="2" ry="2"/>
<text x="29.4" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (322 samples, 0.07%)</title><rect x="14.4" y="1877" width="0.9" height="15.0" fill="rgb(220,136,13)" rx="2" ry="2"/>
<text x="17.4" y="1887.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (266 samples, 0.06%)</title><rect x="355.6" y="1893" width="0.8" height="15.0" fill="rgb(241,228,17)" rx="2" ry="2"/>
<text x="358.6" y="1903.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (81 samples, 0.02%)</title><rect x="1164.5323741007212" y="1877" width="6.366906474820143" height="15.0" fill="rgb(253,227,4)" rx="2" ry="2" _orig_x="574.7" _orig_width="0.3"/>
<text x="1167.5323741007212" y="1887.5" _orig_x="577.7"/>
</g>
<g class="">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::allocate (39 samples, 0.01%)</title><rect x="440.82733812949783" y="1717" width="2.122302158273381" height="15.0" fill="rgb(241,108,25)" rx="2" ry="2" _orig_x="540.6" _orig_width="0.1"/>
<text x="443.82733812949783" y="1727.5" _orig_x="543.6"/>
</g>
<g class="hide">
<title>IndexKey::SerializeFromKey (651 samples, 0.15%)</title><rect x="640.3" y="1957" width="1.8" height="15.0" fill="rgb(213,14,38)" rx="2" ry="2"/>
<text x="643.3" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (114 samples, 0.03%)</title><rect x="246.6" y="1461" width="0.3" height="15.0" fill="rgb(245,167,9)" rx="2" ry="2"/>
<text x="249.6" y="1471.5"/>
</g>
<g class="hide">
<title>iwl_pcie_irq_rx_msix_handler (48 samples, 0.01%)</title><rect x="380.3" y="1973" width="0.2" height="15.0" fill="rgb(212,182,27)" rx="2" ry="2"/>
<text x="383.3" y="1983.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::SimpleMemHeap (232 samples, 0.05%)</title><rect x="627.6" y="1893" width="0.7" height="15.0" fill="rgb(248,42,3)" rx="2" ry="2"/>
<text x="630.6" y="1903.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (188 samples, 0.04%)</title><rect x="486.1" y="1845" width="0.5" height="15.0" fill="rgb(242,180,50)" rx="2" ry="2"/>
<text x="489.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="21.1" y="1685" width="0.1" height="15.0" fill="rgb(237,191,33)" rx="2" ry="2"/>
<text x="24.1" y="1695.5"/>
</g>
<g class="hide">
<title>kworker/2:1-eve (320 samples, 0.07%)</title><rect x="385.8" y="2053" width="0.8" height="15.0" fill="rgb(217,85,40)" rx="2" ry="2"/>
<text x="388.8" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,007 samples, 0.46%)</title><rect x="328.2" y="1861" width="5.5" height="15.0" fill="rgb(252,173,5)" rx="2" ry="2"/>
<text x="331.2" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.02%)</title><rect x="347.9" y="1973" width="0.2" height="15.0" fill="rgb(231,120,38)" rx="2" ry="2"/>
<text x="350.9" y="1983.5"/>
</g>
<g class="">
<title>std::__niter_wrap&lt;char*&gt; (46 samples, 0.01%)</title><rect x="1045.6834532374114" y="1765" width="2.122302158273381" height="15.0" fill="rgb(240,82,2)" rx="2" ry="2" _orig_x="569.1" _orig_width="0.1"/>
<text x="1048.6834532374114" y="1775.5" _orig_x="572.1"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (504 samples, 0.12%)</title><rect x="237.08633093525273" y="1765" width="29.712230215827333" height="15.0" fill="rgb(211,75,52)" rx="2" ry="2" _orig_x="531.0" _orig_width="1.4"/>
<text x="240.08633093525273" y="1775.5" _orig_x="534">st..</text>
</g>
<g class="hide">
<title>[perf-123109.map] (40 samples, 0.01%)</title><rect x="248.4" y="1653" width="0.1" height="15.0" fill="rgb(247,164,5)" rx="2" ry="2"/>
<text x="251.4" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.03%)</title><rect x="354.8" y="1989" width="0.4" height="15.0" fill="rgb(215,207,7)" rx="2" ry="2"/>
<text x="357.8" y="1999.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (42 samples, 0.01%)</title><rect x="594.5" y="1893" width="0.1" height="15.0" fill="rgb(219,34,53)" rx="2" ry="2"/>
<text x="597.5" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1301" width="0.2" height="15.0" fill="rgb(222,220,13)" rx="2" ry="2"/>
<text x="248.6" y="1311.5"/>
</g>
<g class="hide">
<title>systemd-resolve (39 samples, 0.01%)</title><rect x="1182.9" y="2053" width="0.2" height="15.0" fill="rgb(241,203,18)" rx="2" ry="2"/>
<text x="1185.9" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="379.9" y="1877" width="0.2" height="15.0" fill="rgb(219,220,30)" rx="2" ry="2"/>
<text x="382.9" y="1887.5"/>
</g>
<g class="hide">
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Row*&gt; (106 samples, 0.02%)</title><rect x="661.4" y="1925" width="0.3" height="15.0" fill="rgb(216,105,42)" rx="2" ry="2"/>
<text x="664.4" y="1935.5"/>
</g>
<g class="hide">
<title>Field::Field (46 samples, 0.01%)</title><rect x="455.1" y="1829" width="0.1" height="15.0" fill="rgb(209,91,10)" rx="2" ry="2"/>
<text x="458.1" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="245.1" y="1205" width="0.2" height="15.0" fill="rgb(205,83,15)" rx="2" ry="2"/>
<text x="248.1" y="1215.5"/>
</g>
<g class="hide">
<title>runtime.park_m (155 samples, 0.04%)</title><rect x="341.0" y="1957" width="0.4" height="15.0" fill="rgb(241,100,35)" rx="2" ry="2"/>
<text x="344" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (50 samples, 0.01%)</title><rect x="244.2" y="693" width="0.2" height="15.0" fill="rgb(234,46,32)" rx="2" ry="2"/>
<text x="247.2" y="703.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="917" width="0.1" height="15.0" fill="rgb(252,191,10)" rx="2" ry="2"/>
<text x="247" y="927.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (257 samples, 0.06%)</title><rect x="382.7" y="2037" width="0.7" height="15.0" fill="rgb(224,224,36)" rx="2" ry="2"/>
<text x="385.7" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (245 samples, 0.06%)</title><rect x="647.3" y="1781" width="0.7" height="15.0" fill="rgb(215,46,18)" rx="2" ry="2"/>
<text x="650.3" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.03%)</title><rect x="46.9" y="1909" width="0.3" height="15.0" fill="rgb(220,139,20)" rx="2" ry="2"/>
<text x="49.9" y="1919.5"/>
</g>
<g class="">
<title>[libminisql_shared.so] (99 samples, 0.02%)</title><rect x="659.4244604316551" y="1829" width="6.366906474820143" height="15.0" fill="rgb(224,43,9)" rx="2" ry="2" _orig_x="550.9" _orig_width="0.3"/>
<text x="662.4244604316551" y="1839.5" _orig_x="553.9"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (41 samples, 0.01%)</title><rect x="230.71942446043357" y="1749" width="2.122302158273381" height="15.0" fill="rgb(217,109,35)" rx="2" ry="2" _orig_x="530.7" _orig_width="0.1"/>
<text x="233.71942446043357" y="1759.5" _orig_x="533.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="249.6" y="1717" width="0.1" height="15.0" fill="rgb(223,65,35)" rx="2" ry="2"/>
<text x="252.6" y="1727.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="245.1" y="933" width="0.2" height="15.0" fill="rgb(238,34,21)" rx="2" ry="2"/>
<text x="248.1" y="943.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,654 samples, 1.31%)</title><rect x="98.4" y="1893" width="15.5" height="15.0" fill="rgb(227,220,40)" rx="2" ry="2"/>
<text x="101.4" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1845" width="0.8" height="15.0" fill="rgb(213,80,28)" rx="2" ry="2"/>
<text x="57.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::__detail::_Identity::operator (40 samples, 0.01%)</title><rect x="421.6" y="1733" width="0.1" height="15.0" fill="rgb(250,88,16)" rx="2" ry="2"/>
<text x="424.6" y="1743.5"/>
</g>
<g class="hide">
<title>Row::Row (737 samples, 0.17%)</title><rect x="495.4" y="1877" width="2.0" height="15.0" fill="rgb(221,198,42)" rx="2" ry="2"/>
<text x="498.4" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (215 samples, 0.05%)</title><rect x="1187.8" y="1813" width="0.6" height="15.0" fill="rgb(208,184,21)" rx="2" ry="2"/>
<text x="1190.8" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="51.9" y="2021" width="0.2" height="15.0" fill="rgb(216,12,12)" rx="2" ry="2"/>
<text x="54.9" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (209 samples, 0.05%)</title><rect x="496.9" y="1861" width="0.5" height="15.0" fill="rgb(235,119,51)" rx="2" ry="2"/>
<text x="499.9" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1461" width="0.8" height="15.0" fill="rgb(239,146,26)" rx="2" ry="2"/>
<text x="57.8" y="1471.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (71 samples, 0.02%)</title><rect x="455.9" y="1733" width="0.2" height="15.0" fill="rgb(216,208,39)" rx="2" ry="2"/>
<text x="458.9" y="1743.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (128 samples, 0.03%)</title><rect x="620.9" y="1845" width="0.4" height="15.0" fill="rgb(228,226,17)" rx="2" ry="2"/>
<text x="623.9" y="1855.5"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (189 samples, 0.04%)</title><rect x="702.0" y="2005" width="0.5" height="15.0" fill="rgb(237,109,23)" rx="2" ry="2"/>
<text x="705" y="2015.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (245 samples, 0.06%)</title><rect x="429.3" y="1829" width="0.7" height="15.0" fill="rgb(221,173,7)" rx="2" ry="2"/>
<text x="432.3" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (366 samples, 0.08%)</title><rect x="508.4" y="1845" width="1.0" height="15.0" fill="rgb(229,142,23)" rx="2" ry="2"/>
<text x="511.4" y="1855.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (1,489 samples, 0.34%)</title><rect x="697.9" y="2021" width="4.1" height="15.0" fill="rgb(233,150,31)" rx="2" ry="2"/>
<text x="700.9" y="2031.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (110 samples, 0.03%)</title><rect x="383.5251798561155" y="1685" width="6.366906474820143" height="15.0" fill="rgb(230,91,10)" rx="2" ry="2" _orig_x="537.9" _orig_width="0.3"/>
<text x="386.5251798561155" y="1695.5" _orig_x="540.9"/>
</g>
<g class="hide">
<title>JVM_GetStackAccessControlContext (119 samples, 0.03%)</title><rect x="45.9" y="1989" width="0.4" height="15.0" fill="rgb(225,0,46)" rx="2" ry="2"/>
<text x="48.9" y="1999.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (51 samples, 0.01%)</title><rect x="661.9" y="1989" width="0.2" height="15.0" fill="rgb(250,10,7)" rx="2" ry="2"/>
<text x="664.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="379.8" y="1941" width="0.3" height="15.0" fill="rgb(218,206,48)" rx="2" ry="2"/>
<text x="382.8" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (243 samples, 0.06%)</title><rect x="244.8" y="1589" width="0.7" height="15.0" fill="rgb(228,188,29)" rx="2" ry="2"/>
<text x="247.8" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (599 samples, 0.14%)</title><rect x="384.1" y="1989" width="1.7" height="15.0" fill="rgb(208,85,31)" rx="2" ry="2"/>
<text x="387.1" y="1999.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (98 samples, 0.02%)</title><rect x="517.0" y="1829" width="0.3" height="15.0" fill="rgb(210,115,0)" rx="2" ry="2"/>
<text x="520" y="1839.5"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (43 samples, 0.01%)</title><rect x="347.2" y="2005" width="0.1" height="15.0" fill="rgb(250,223,31)" rx="2" ry="2"/>
<text x="350.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="797.8" y="1973" width="0.1" height="15.0" fill="rgb(207,192,35)" rx="2" ry="2"/>
<text x="800.8" y="1983.5"/>
</g>
<g class="hide">
<title>std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (114 samples, 0.03%)</title><rect x="267.1" y="1909" width="0.3" height="15.0" fill="rgb(230,130,3)" rx="2" ry="2"/>
<text x="270.1" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (327 samples, 0.08%)</title><rect x="516.4" y="1877" width="0.9" height="15.0" fill="rgb(252,188,48)" rx="2" ry="2"/>
<text x="519.4" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (71 samples, 0.02%)</title><rect x="469.8" y="1749" width="0.2" height="15.0" fill="rgb(207,159,16)" rx="2" ry="2"/>
<text x="472.8" y="1759.5"/>
</g>
<g class="hide">
<title>snd_pcm_hwsync (9,988 samples, 2.31%)</title><rect x="134.9" y="1925" width="27.3" height="15.0" fill="rgb(209,88,36)" rx="2" ry="2"/>
<text x="137.9" y="1935.5">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (491 samples, 0.11%)</title><rect x="39.6" y="1989" width="1.3" height="15.0" fill="rgb(242,171,38)" rx="2" ry="2"/>
<text x="42.6" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="981" width="0.2" height="15.0" fill="rgb(226,32,23)" rx="2" ry="2"/>
<text x="247.2" y="991.5"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.02%)</title><rect x="27.0" y="1893" width="0.2" height="15.0" fill="rgb(221,137,2)" rx="2" ry="2"/>
<text x="30" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,101 samples, 0.72%)</title><rect x="295.9" y="1749" width="8.5" height="15.0" fill="rgb(245,110,10)" rx="2" ry="2"/>
<text x="298.9" y="1759.5"/>
</g>
<g class="hide">
<title>snd_ctl_poll (216 samples, 0.05%)</title><rect x="113.9" y="1925" width="0.6" height="15.0" fill="rgb(240,141,30)" rx="2" ry="2"/>
<text x="116.9" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,971 samples, 0.46%)</title><rect x="405.4" y="1797" width="5.4" height="15.0" fill="rgb(235,161,6)" rx="2" ry="2"/>
<text x="408.4" y="1807.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (93 samples, 0.02%)</title><rect x="479.6" y="1781" width="0.2" height="15.0" fill="rgb(218,224,30)" rx="2" ry="2"/>
<text x="482.6" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row*, Row&gt; (106 samples, 0.02%)</title><rect x="661.4" y="1957" width="0.3" height="15.0" fill="rgb(240,219,52)" rx="2" ry="2"/>
<text x="664.4" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="370.7" y="1925" width="0.1" height="15.0" fill="rgb(220,174,0)" rx="2" ry="2"/>
<text x="373.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (440 samples, 0.10%)</title><rect x="303.2" y="1637" width="1.2" height="15.0" fill="rgb(242,218,35)" rx="2" ry="2"/>
<text x="306.2" y="1647.5"/>
</g>
<g class="hide">
<title>[code] (1,218 samples, 0.28%)</title><rect x="241.1" y="1461" width="3.3" height="15.0" fill="rgb(212,129,8)" rx="2" ry="2"/>
<text x="244.1" y="1471.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="237.3" y="1813" width="0.1" height="15.0" fill="rgb(221,40,35)" rx="2" ry="2"/>
<text x="240.3" y="1823.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (793 samples, 0.18%)</title><rect x="1081.7625899280574" y="1861" width="46.690647482014384" height="15.0" fill="rgb(209,42,50)" rx="2" ry="2" _orig_x="570.8" _orig_width="2.2"/>
<text x="1084.7625899280574" y="1871.5" _orig_x="573.8">std::..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (220 samples, 0.05%)</title><rect x="433.5" y="1749" width="0.6" height="15.0" fill="rgb(247,179,51)" rx="2" ry="2"/>
<text x="436.5" y="1759.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (45 samples, 0.01%)</title><rect x="372.5" y="1973" width="0.1" height="15.0" fill="rgb(210,5,53)" rx="2" ry="2"/>
<text x="375.5" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,005 samples, 0.93%)</title><rect x="399.8" y="1973" width="11.0" height="15.0" fill="rgb(234,133,3)" rx="2" ry="2"/>
<text x="402.8" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (341 samples, 0.08%)</title><rect x="409.8" y="1637" width="1.0" height="15.0" fill="rgb(205,144,19)" rx="2" ry="2"/>
<text x="412.8" y="1647.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (47 samples, 0.01%)</title><rect x="462.6" y="1717" width="0.2" height="15.0" fill="rgb(254,62,35)" rx="2" ry="2"/>
<text x="465.6" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="12.7" y="1957" width="0.2" height="15.0" fill="rgb(211,13,46)" rx="2" ry="2"/>
<text x="15.7" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (53 samples, 0.01%)</title><rect x="645.6" y="1813" width="0.2" height="15.0" fill="rgb(250,27,36)" rx="2" ry="2"/>
<text x="648.6" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (508 samples, 0.12%)</title><rect x="45.2" y="2021" width="1.4" height="15.0" fill="rgb(208,228,16)" rx="2" ry="2"/>
<text x="48.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,484 samples, 1.73%)</title><rect x="93.4" y="1925" width="20.5" height="15.0" fill="rgb(228,192,27)" rx="2" ry="2"/>
<text x="96.4" y="1935.5">[..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (51 samples, 0.01%)</title><rect x="642.6" y="1829" width="0.2" height="15.0" fill="rgb(240,58,21)" rx="2" ry="2"/>
<text x="645.6" y="1839.5"/>
</g>
<g class="hide">
<title>kworker/6:2-eve (324 samples, 0.08%)</title><rect x="389.0" y="2053" width="0.9" height="15.0" fill="rgb(228,168,1)" rx="2" ry="2"/>
<text x="392" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="792.9" y="1941" width="0.2" height="15.0" fill="rgb(226,57,24)" rx="2" ry="2"/>
<text x="795.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="27.3" y="1925" width="0.1" height="15.0" fill="rgb(221,176,54)" rx="2" ry="2"/>
<text x="30.3" y="1935.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (137 samples, 0.03%)</title><rect x="472.2" y="1845" width="0.4" height="15.0" fill="rgb(230,51,6)" rx="2" ry="2"/>
<text x="475.2" y="1855.5"/>
</g>
<g class="">
<title>std::__detail::_Mod_range_hashing::operator (72 samples, 0.02%)</title><rect x="358.05755395683644" y="1717" width="4.244604316546762" height="15.0" fill="rgb(211,14,50)" rx="2" ry="2" _orig_x="536.7" _orig_width="0.2"/>
<text x="361.05755395683644" y="1727.5" _orig_x="539.7"/>
</g>
<g class="hide">
<title>[unknown] (198 samples, 0.05%)</title><rect x="797.4" y="2037" width="0.6" height="15.0" fill="rgb(233,104,46)" rx="2" ry="2"/>
<text x="800.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (106 samples, 0.02%)</title><rect x="455.8" y="1749" width="0.3" height="15.0" fill="rgb(253,9,39)" rx="2" ry="2"/>
<text x="458.8" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (153 samples, 0.04%)</title><rect x="426.7" y="1781" width="0.4" height="15.0" fill="rgb(208,93,50)" rx="2" ry="2"/>
<text x="429.7" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (232 samples, 0.05%)</title><rect x="250.6" y="2021" width="0.7" height="15.0" fill="rgb(208,195,18)" rx="2" ry="2"/>
<text x="253.6" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (65 samples, 0.02%)</title><rect x="475.1" y="1829" width="0.2" height="15.0" fill="rgb(245,171,45)" rx="2" ry="2"/>
<text x="478.1" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.03%)</title><rect x="247.3" y="1701" width="0.4" height="15.0" fill="rgb(208,65,25)" rx="2" ry="2"/>
<text x="250.3" y="1711.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="244.0" y="1205" width="0.1" height="15.0" fill="rgb(230,151,27)" rx="2" ry="2"/>
<text x="247" y="1215.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (315 samples, 0.07%)</title><rect x="381.8" y="1989" width="0.9" height="15.0" fill="rgb(240,177,26)" rx="2" ry="2"/>
<text x="384.8" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (377 samples, 0.09%)</title><rect x="54.6" y="1957" width="1.0" height="15.0" fill="rgb(224,74,19)" rx="2" ry="2"/>
<text x="57.6" y="1967.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (74 samples, 0.02%)</title><rect x="646.8" y="1813" width="0.2" height="15.0" fill="rgb(229,88,53)" rx="2" ry="2"/>
<text x="649.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_base::_Hash_node_base (44 samples, 0.01%)</title><rect x="496.1" y="1813" width="0.1" height="15.0" fill="rgb(235,48,14)" rx="2" ry="2"/>
<text x="499.1" y="1823.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="2021" width="0.3" height="15.0" fill="rgb(210,153,10)" rx="2" ry="2"/>
<text x="16.5" y="2031.5"/>
</g>
<g class="hide">
<title>azx_get_pos_fifo (8,317 samples, 1.93%)</title><rect x="137.9" y="1829" width="22.7" height="15.0" fill="rgb(233,222,47)" rx="2" ry="2"/>
<text x="140.9" y="1839.5"/>
</g>
<g class="hide">
<title>TablePage::GetTuple (651 samples, 0.15%)</title><rect x="643.2" y="1925" width="1.8" height="15.0" fill="rgb(222,86,51)" rx="2" ry="2"/>
<text x="646.2" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="1925" width="0.4" height="15.0" fill="rgb(233,66,12)" rx="2" ry="2"/>
<text x="19.1" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,297 samples, 0.30%)</title><rect x="781.3" y="1989" width="3.6" height="15.0" fill="rgb(230,124,45)" rx="2" ry="2"/>
<text x="784.3" y="1999.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (44 samples, 0.01%)</title><rect x="643.0" y="1925" width="0.1" height="15.0" fill="rgb(234,45,52)" rx="2" ry="2"/>
<text x="646" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::operator!=&lt;void*, false&gt; (69 samples, 0.02%)</title><rect x="581.5" y="1845" width="0.2" height="15.0" fill="rgb(241,217,26)" rx="2" ry="2"/>
<text x="584.5" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (2,214 samples, 0.51%)</title><rect x="239.4" y="1669" width="6.1" height="15.0" fill="rgb(224,82,38)" rx="2" ry="2"/>
<text x="242.4" y="1679.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (110 samples, 0.03%)</title><rect x="421.7" y="1733" width="0.3" height="15.0" fill="rgb(235,125,43)" rx="2" ry="2"/>
<text x="424.7" y="1743.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="244.9" y="1429" width="0.1" height="15.0" fill="rgb(231,208,3)" rx="2" ry="2"/>
<text x="247.9" y="1439.5"/>
</g>
<g class="hide">
<title>pa_sink_process_input_underruns (109 samples, 0.03%)</title><rect x="84.1" y="2005" width="0.3" height="15.0" fill="rgb(212,11,35)" rx="2" ry="2"/>
<text x="87.1" y="2015.5"/>
</g>
<g class="hide">
<title>TableIterator::operator++ (130 samples, 0.03%)</title><rect x="645.0" y="1957" width="0.3" height="15.0" fill="rgb(212,170,49)" rx="2" ry="2"/>
<text x="648" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (726 samples, 0.17%)</title><rect x="18.4" y="1797" width="2.0" height="15.0" fill="rgb(253,197,7)" rx="2" ry="2"/>
<text x="21.4" y="1807.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (2,023 samples, 0.47%)</title><rect x="673.9" y="2037" width="5.6" height="15.0" fill="rgb(217,199,27)" rx="2" ry="2"/>
<text x="676.9" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="237.2" y="1845" width="0.2" height="15.0" fill="rgb(219,46,43)" rx="2" ry="2"/>
<text x="240.2" y="1855.5"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (41 samples, 0.01%)</title><rect x="361.2" y="2005" width="0.1" height="15.0" fill="rgb(250,37,20)" rx="2" ry="2"/>
<text x="364.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.03%)</title><rect x="26.4" y="1989" width="0.3" height="15.0" fill="rgb(220,202,13)" rx="2" ry="2"/>
<text x="29.4" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (168 samples, 0.04%)</title><rect x="581.8" y="1829" width="0.4" height="15.0" fill="rgb(235,152,47)" rx="2" ry="2"/>
<text x="584.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="391.8" y="1829" width="0.2" height="15.0" fill="rgb(214,51,34)" rx="2" ry="2"/>
<text x="394.8" y="1839.5"/>
</g>
<g class="hide">
<title>_nv022966rm (37 samples, 0.01%)</title><rect x="375.9" y="2037" width="0.1" height="15.0" fill="rgb(219,23,7)" rx="2" ry="2"/>
<text x="378.9" y="2047.5"/>
</g>
<g class="hide">
<title>clutter_actor_paint (58 samples, 0.01%)</title><rect x="362.9" y="1989" width="0.1" height="15.0" fill="rgb(221,67,47)" rx="2" ry="2"/>
<text x="365.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (162 samples, 0.04%)</title><rect x="206.2" y="2005" width="0.5" height="15.0" fill="rgb(252,102,28)" rx="2" ry="2"/>
<text x="209.2" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1461" width="0.2" height="15.0" fill="rgb(207,101,32)" rx="2" ry="2"/>
<text x="30" y="1471.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="203.1" y="2021" width="0.2" height="15.0" fill="rgb(206,223,52)" rx="2" ry="2"/>
<text x="206.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="237.1" y="1893" width="0.3" height="15.0" fill="rgb(209,12,14)" rx="2" ry="2"/>
<text x="240.1" y="1903.5"/>
</g>
<g class="hide">
<title>__tls_get_addr (55 samples, 0.01%)</title><rect x="187.3" y="2037" width="0.2" height="15.0" fill="rgb(232,191,15)" rx="2" ry="2"/>
<text x="190.3" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="342.5" y="1941" width="0.1" height="15.0" fill="rgb(242,149,26)" rx="2" ry="2"/>
<text x="345.5" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1845" width="0.2" height="15.0" fill="rgb(229,1,31)" rx="2" ry="2"/>
<text x="30" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (42 samples, 0.01%)</title><rect x="246.9" y="1685" width="0.2" height="15.0" fill="rgb(228,88,5)" rx="2" ry="2"/>
<text x="249.9" y="1695.5"/>
</g>
<g class="hide">
<title>Thread::call_run (69 samples, 0.02%)</title><rect x="21.9" y="2005" width="0.2" height="15.0" fill="rgb(245,22,48)" rx="2" ry="2"/>
<text x="24.9" y="2015.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (41 samples, 0.01%)</title><rect x="615.4" y="1861" width="0.2" height="15.0" fill="rgb(218,79,44)" rx="2" ry="2"/>
<text x="618.4" y="1871.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (62 samples, 0.01%)</title><rect x="1094.4964028776983" y="1845" width="4.244604316546762" height="15.0" fill="rgb(246,168,10)" rx="2" ry="2" _orig_x="571.4" _orig_width="0.2"/>
<text x="1097.4964028776983" y="1855.5" _orig_x="574.4"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.03%)</title><rect x="237.1" y="1909" width="0.3" height="15.0" fill="rgb(222,192,8)" rx="2" ry="2"/>
<text x="240.1" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,340 samples, 2.16%)</title><rect x="278.9" y="1829" width="25.5" height="15.0" fill="rgb(209,57,37)" rx="2" ry="2"/>
<text x="281.9" y="1839.5">[..</text>
</g>
<g class="hide">
<title>[code] (3,546 samples, 0.82%)</title><rect x="238.3" y="1861" width="9.7" height="15.0" fill="rgb(251,191,6)" rx="2" ry="2"/>
<text x="241.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.02%)</title><rect x="383.7" y="1941" width="0.2" height="15.0" fill="rgb(237,143,50)" rx="2" ry="2"/>
<text x="386.7" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (151 samples, 0.03%)</title><rect x="581.1" y="1845" width="0.4" height="15.0" fill="rgb(211,191,29)" rx="2" ry="2"/>
<text x="584.1" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.02%)</title><rect x="387.2" y="1925" width="0.2" height="15.0" fill="rgb(238,99,15)" rx="2" ry="2"/>
<text x="390.2" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,065 samples, 0.25%)</title><rect x="782.0" y="1909" width="2.9" height="15.0" fill="rgb(250,158,17)" rx="2" ry="2"/>
<text x="785" y="1919.5"/>
</g>
<g class="hide">
<title>Watcher::notify (46 samples, 0.01%)</title><rect x="309.5" y="1989" width="0.1" height="15.0" fill="rgb(225,91,54)" rx="2" ry="2"/>
<text x="312.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="445.4" y="1493" width="0.1" height="15.0" fill="rgb(246,163,49)" rx="2" ry="2"/>
<text x="448.4" y="1503.5"/>
</g>
<g class="hide">
<title>[code] (230 samples, 0.05%)</title><rect x="52.1" y="1829" width="0.7" height="15.0" fill="rgb(247,80,43)" rx="2" ry="2"/>
<text x="55.1" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (176 samples, 0.04%)</title><rect x="247.3" y="1765" width="0.5" height="15.0" fill="rgb(218,183,29)" rx="2" ry="2"/>
<text x="250.3" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;char*&gt; (39 samples, 0.01%)</title><rect x="491.4" y="1813" width="0.1" height="15.0" fill="rgb(208,130,14)" rx="2" ry="2"/>
<text x="494.4" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (54 samples, 0.01%)</title><rect x="450.8" y="1829" width="0.1" height="15.0" fill="rgb(233,81,12)" rx="2" ry="2"/>
<text x="453.8" y="1839.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (60 samples, 0.01%)</title><rect x="801.6187050359725" y="1781" width="2.122302158273381" height="15.0" fill="rgb(245,114,1)" rx="2" ry="2" _orig_x="557.6" _orig_width="0.1"/>
<text x="804.6187050359725" y="1791.5" _orig_x="560.6"/>
</g>
<g class="hide">
<title>__pthread_rwlock_unlock (72 samples, 0.02%)</title><rect x="678.8" y="2005" width="0.2" height="15.0" fill="rgb(232,224,46)" rx="2" ry="2"/>
<text x="681.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (944 samples, 0.22%)</title><rect x="649.6" y="1941" width="2.6" height="15.0" fill="rgb(211,212,29)" rx="2" ry="2"/>
<text x="652.6" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="48.8" y="1765" width="0.2" height="15.0" fill="rgb(230,154,35)" rx="2" ry="2"/>
<text x="51.8" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (51 samples, 0.01%)</title><rect x="507.5" y="1861" width="0.2" height="15.0" fill="rgb(250,137,44)" rx="2" ry="2"/>
<text x="510.5" y="1871.5"/>
</g>
<g class="hide">
<title>__xstat64 (199 samples, 0.05%)</title><rect x="47.7" y="2005" width="0.6" height="15.0" fill="rgb(215,72,11)" rx="2" ry="2"/>
<text x="50.7" y="2015.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (75 samples, 0.02%)</title><rect x="254.06474820143882" y="1733" width="4.244604316546762" height="15.0" fill="rgb(238,90,23)" rx="2" ry="2" _orig_x="531.8" _orig_width="0.2"/>
<text x="257.0647482014388" y="1743.5" _orig_x="534.8"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="244.3" y="597" width="0.1" height="15.0" fill="rgb(206,119,35)" rx="2" ry="2"/>
<text x="247.3" y="607.5"/>
</g>
<g class="hide">
<title>[code] (196 samples, 0.05%)</title><rect x="52.2" y="1781" width="0.6" height="15.0" fill="rgb(232,216,41)" rx="2" ry="2"/>
<text x="55.2" y="1791.5"/>
</g>
<g class="hide">
<title>github-desktop (1,336 samples, 0.31%)</title><rect x="351.6" y="2053" width="3.6" height="15.0" fill="rgb(207,151,53)" rx="2" ry="2"/>
<text x="354.6" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (46 samples, 0.01%)</title><rect x="23.1" y="2021" width="0.2" height="15.0" fill="rgb(218,142,12)" rx="2" ry="2"/>
<text x="26.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,735 samples, 1.56%)</title><rect x="286.0" y="1781" width="18.4" height="15.0" fill="rgb(205,213,43)" rx="2" ry="2"/>
<text x="289" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (49 samples, 0.01%)</title><rect x="795.5" y="2037" width="0.1" height="15.0" fill="rgb(232,16,4)" rx="2" ry="2"/>
<text x="798.5" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (193 samples, 0.04%)</title><rect x="249.3" y="1829" width="0.6" height="15.0" fill="rgb(248,43,14)" rx="2" ry="2"/>
<text x="252.3" y="1839.5"/>
</g>
<g class="hide">
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (239 samples, 0.06%)</title><rect x="623.5" y="1829" width="0.6" height="15.0" fill="rgb(230,65,10)" rx="2" ry="2"/>
<text x="626.5" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,239 samples, 1.21%)</title><rect x="1164.5" y="1829" width="14.3" height="15.0" fill="rgb(207,103,20)" rx="2" ry="2"/>
<text x="1167.5" y="1839.5"/>
</g>
<g class="hide">
<title>Row::~Row (144 samples, 0.03%)</title><rect x="646.7" y="1861" width="0.4" height="15.0" fill="rgb(221,206,28)" rx="2" ry="2"/>
<text x="649.7" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (88 samples, 0.02%)</title><rect x="647.5" y="1765" width="0.2" height="15.0" fill="rgb(241,99,51)" rx="2" ry="2"/>
<text x="650.5" y="1775.5"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (62 samples, 0.01%)</title><rect x="681.2" y="1989" width="0.2" height="15.0" fill="rgb(220,57,54)" rx="2" ry="2"/>
<text x="684.2" y="1999.5"/>
</g>
<g class="hide">
<title>rcu_sched (288 samples, 0.07%)</title><rect x="796.4" y="2053" width="0.8" height="15.0" fill="rgb(236,125,15)" rx="2" ry="2"/>
<text x="799.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1333" width="0.2" height="15.0" fill="rgb(223,130,12)" rx="2" ry="2"/>
<text x="30" y="1343.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="55.7" y="1941" width="0.2" height="15.0" fill="rgb(215,54,45)" rx="2" ry="2"/>
<text x="58.7" y="1951.5"/>
</g>
<g class="hide">
<title>snd_power_wait (37 samples, 0.01%)</title><rect x="133.5" y="1941" width="0.1" height="15.0" fill="rgb(244,189,14)" rx="2" ry="2"/>
<text x="136.5" y="1951.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1989" width="0.1" height="15.0" fill="rgb(218,133,37)" rx="2" ry="2"/>
<text x="357.5" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (2,962 samples, 0.69%)</title><rect x="239.0" y="1749" width="8.1" height="15.0" fill="rgb(217,202,1)" rx="2" ry="2"/>
<text x="242" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="346.9" y="1797" width="0.1" height="15.0" fill="rgb(249,196,54)" rx="2" ry="2"/>
<text x="349.9" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1957" width="0.4" height="15.0" fill="rgb(215,27,0)" rx="2" ry="2"/>
<text x="240.4" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,332 samples, 2.16%)</title><rect x="740.0" y="1909" width="25.5" height="15.0" fill="rgb(243,85,30)" rx="2" ry="2"/>
<text x="743" y="1919.5">[..</text>
</g>
<g class="hide">
<title>node::MakeCallback (75 samples, 0.02%)</title><rect x="209.8" y="1781" width="0.2" height="15.0" fill="rgb(230,115,10)" rx="2" ry="2"/>
<text x="212.8" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="677" width="0.2" height="15.0" fill="rgb(208,76,37)" rx="2" ry="2"/>
<text x="30" y="687.5"/>
</g>
<g class="hide">
<title>vframeStreamCommon::security_get_caller_frame (45 samples, 0.01%)</title><rect x="24.9" y="1973" width="0.1" height="15.0" fill="rgb(222,133,1)" rx="2" ry="2"/>
<text x="27.9" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (50 samples, 0.01%)</title><rect x="428.2" y="1781" width="0.2" height="15.0" fill="rgb(250,169,41)" rx="2" ry="2"/>
<text x="431.2" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1269" width="0.8" height="15.0" fill="rgb(224,79,40)" rx="2" ry="2"/>
<text x="57.8" y="1279.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="380.7" y="1941" width="0.2" height="15.0" fill="rgb(231,55,16)" rx="2" ry="2"/>
<text x="383.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="379.9" y="1909" width="0.2" height="15.0" fill="rgb(224,143,38)" rx="2" ry="2"/>
<text x="382.9" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="792.9" y="1893" width="0.2" height="15.0" fill="rgb(253,115,43)" rx="2" ry="2"/>
<text x="795.9" y="1903.5"/>
</g>
<g class="hide">
<title>MemHeap::~MemHeap (75 samples, 0.02%)</title><rect x="580.1" y="1845" width="0.2" height="15.0" fill="rgb(239,63,31)" rx="2" ry="2"/>
<text x="583.1" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,051 samples, 0.24%)</title><rect x="442.6" y="1701" width="2.9" height="15.0" fill="rgb(222,190,45)" rx="2" ry="2"/>
<text x="445.6" y="1711.5"/>
</g>
<g class="hide">
<title>EventList::update (62 samples, 0.01%)</title><rect x="264.1" y="1957" width="0.2" height="15.0" fill="rgb(229,13,16)" rx="2" ry="2"/>
<text x="267.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.02%)</title><rect x="236.7" y="1781" width="0.3" height="15.0" fill="rgb(232,118,18)" rx="2" ry="2"/>
<text x="239.7" y="1791.5"/>
</g>
<g class="hide">
<title>gnome-terminal- (996 samples, 0.23%)</title><rect x="368.9" y="2053" width="2.7" height="15.0" fill="rgb(213,64,46)" rx="2" ry="2"/>
<text x="371.9" y="2063.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (55 samples, 0.01%)</title><rect x="421.3" y="1733" width="0.2" height="15.0" fill="rgb(250,144,46)" rx="2" ry="2"/>
<text x="424.3" y="1743.5"/>
</g>
<g class="hide">
<title>llseek@GLIBC_2.2.5 (196 samples, 0.05%)</title><rect x="665.9" y="2037" width="0.5" height="15.0" fill="rgb(248,57,41)" rx="2" ry="2"/>
<text x="668.9" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1445" width="0.2" height="15.0" fill="rgb(221,109,45)" rx="2" ry="2"/>
<text x="30" y="1455.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (159 samples, 0.04%)</title><rect x="249.4" y="1813" width="0.5" height="15.0" fill="rgb(254,199,19)" rx="2" ry="2"/>
<text x="252.4" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (59 samples, 0.01%)</title><rect x="646.9" y="1781" width="0.1" height="15.0" fill="rgb(212,118,17)" rx="2" ry="2"/>
<text x="649.9" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (302 samples, 0.07%)</title><rect x="460.9" y="1733" width="0.8" height="15.0" fill="rgb(237,9,45)" rx="2" ry="2"/>
<text x="463.9" y="1743.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (162 samples, 0.04%)</title><rect x="398.3" y="1989" width="0.5" height="15.0" fill="rgb(228,98,14)" rx="2" ry="2"/>
<text x="401.3" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (404 samples, 0.09%)</title><rect x="466.1" y="1717" width="1.1" height="15.0" fill="rgb(249,197,49)" rx="2" ry="2"/>
<text x="469.1" y="1727.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,179 samples, 0.27%)</title><rect x="424.3" y="1829" width="3.2" height="15.0" fill="rgb(242,24,36)" rx="2" ry="2"/>
<text x="427.3" y="1839.5"/>
</g>
<g class="hide">
<title>pa_fdsem_after_poll (139 samples, 0.03%)</title><rect x="78.7" y="2005" width="0.3" height="15.0" fill="rgb(238,227,54)" rx="2" ry="2"/>
<text x="81.7" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (577 samples, 0.13%)</title><rect x="241.7" y="1205" width="1.6" height="15.0" fill="rgb(234,152,48)" rx="2" ry="2"/>
<text x="244.7" y="1215.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (357 samples, 0.08%)</title><rect x="249.0" y="1941" width="0.9" height="15.0" fill="rgb(228,16,18)" rx="2" ry="2"/>
<text x="252" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="203.1" y="1989" width="0.2" height="15.0" fill="rgb(220,217,13)" rx="2" ry="2"/>
<text x="206.1" y="1999.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::GetEntrySize (39 samples, 0.01%)</title><rect x="513.6" y="1909" width="0.1" height="15.0" fill="rgb(230,3,13)" rx="2" ry="2"/>
<text x="516.6" y="1919.5"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (267 samples, 0.06%)</title><rect x="73.4" y="1989" width="0.8" height="15.0" fill="rgb(209,113,13)" rx="2" ry="2"/>
<text x="76.4" y="1999.5"/>
</g>
<g class="hide">
<title>iwl_pcie_rx_handle (44 samples, 0.01%)</title><rect x="380.3" y="1957" width="0.2" height="15.0" fill="rgb(227,32,5)" rx="2" ry="2"/>
<text x="383.3" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (213 samples, 0.05%)</title><rect x="1126.5" y="1573" width="0.6" height="15.0" fill="rgb(253,151,47)" rx="2" ry="2"/>
<text x="1129.5" y="1583.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1973" width="0.3" height="15.0" fill="rgb(227,84,18)" rx="2" ry="2"/>
<text x="16.5" y="1983.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (258 samples, 0.06%)</title><rect x="495.9" y="1829" width="0.7" height="15.0" fill="rgb(250,138,40)" rx="2" ry="2"/>
<text x="498.9" y="1839.5"/>
</g>
<g class="hide">
<title>runtime.mcall (155 samples, 0.04%)</title><rect x="341.0" y="1973" width="0.4" height="15.0" fill="rgb(251,13,20)" rx="2" ry="2"/>
<text x="344" y="1983.5"/>
</g>
<g class="hide">
<title>[libpulsecommon-13.99.so] (141 samples, 0.03%)</title><rect x="61.1" y="2037" width="0.4" height="15.0" fill="rgb(238,208,14)" rx="2" ry="2"/>
<text x="64.1" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (676 samples, 0.16%)</title><rect x="793.4" y="1893" width="1.8" height="15.0" fill="rgb(205,113,52)" rx="2" ry="2"/>
<text x="796.4" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (130 samples, 0.03%)</title><rect x="639.1" y="1877" width="0.4" height="15.0" fill="rgb(235,196,44)" rx="2" ry="2"/>
<text x="642.1" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (53 samples, 0.01%)</title><rect x="369.6" y="2005" width="0.2" height="15.0" fill="rgb(240,116,23)" rx="2" ry="2"/>
<text x="372.6" y="2015.5"/>
</g>
<g class="">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (141 samples, 0.03%)</title><rect x="583.0215827338129" y="1861" width="8.489208633093524" height="15.0" fill="rgb(209,27,38)" rx="2" ry="2" _orig_x="547.3" _orig_width="0.4"/>
<text x="586.0215827338129" y="1871.5" _orig_x="550.3"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="207.0" y="1941" width="0.2" height="15.0" fill="rgb(234,186,38)" rx="2" ry="2"/>
<text x="210" y="1951.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (495 samples, 0.11%)</title><rect x="576.8" y="1861" width="1.4" height="15.0" fill="rgb(211,196,51)" rx="2" ry="2"/>
<text x="579.8" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (425 samples, 0.10%)</title><rect x="794.0" y="1733" width="1.2" height="15.0" fill="rgb(229,158,45)" rx="2" ry="2"/>
<text x="797" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="360.5" y="1957" width="0.5" height="15.0" fill="rgb(216,81,11)" rx="2" ry="2"/>
<text x="363.5" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="773" width="0.8" height="15.0" fill="rgb(253,55,21)" rx="2" ry="2"/>
<text x="57.8" y="783.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="709" width="0.2" height="15.0" fill="rgb(213,132,26)" rx="2" ry="2"/>
<text x="30" y="719.5"/>
</g>
<g class="hide">
<title>Schema::GetColumnCount (43 samples, 0.01%)</title><rect x="625.8" y="1893" width="0.2" height="15.0" fill="rgb(225,173,53)" rx="2" ry="2"/>
<text x="628.8" y="1903.5"/>
</g>
<g class="hide">
<title>pa_alsa_safe_mmap_begin (58 samples, 0.01%)</title><rect x="77.0" y="2005" width="0.2" height="15.0" fill="rgb(218,125,23)" rx="2" ry="2"/>
<text x="80" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (244 samples, 0.06%)</title><rect x="606.9" y="1781" width="0.7" height="15.0" fill="rgb(225,24,16)" rx="2" ry="2"/>
<text x="609.9" y="1791.5"/>
</g>
<g class="hide">
<title>perf_mmap__push (727 samples, 0.17%)</title><rect x="793.2" y="1957" width="2.0" height="15.0" fill="rgb(238,154,3)" rx="2" ry="2"/>
<text x="796.2" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (50 samples, 0.01%)</title><rect x="244.2" y="677" width="0.2" height="15.0" fill="rgb(229,124,13)" rx="2" ry="2"/>
<text x="247.2" y="687.5"/>
</g>
<g class="hide">
<title>[unknown] (214 samples, 0.05%)</title><rect x="54.8" y="181" width="0.6" height="15.0" fill="rgb(245,227,12)" rx="2" ry="2"/>
<text x="57.8" y="191.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (65 samples, 0.02%)</title><rect x="476.6" y="1813" width="0.2" height="15.0" fill="rgb(213,104,14)" rx="2" ry="2"/>
<text x="479.6" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (112 samples, 0.03%)</title><rect x="26.9" y="2021" width="0.3" height="15.0" fill="rgb(228,57,48)" rx="2" ry="2"/>
<text x="29.9" y="2031.5"/>
</g>
<g class="hide">
<title>InputThread (268 samples, 0.06%)</title><rect x="26.8" y="2053" width="0.7" height="15.0" fill="rgb(243,163,4)" rx="2" ry="2"/>
<text x="29.8" y="2063.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,088 samples, 0.48%)</title><rect x="464.5" y="1765" width="5.7" height="15.0" fill="rgb(248,182,32)" rx="2" ry="2"/>
<text x="467.5" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.02%)</title><rect x="798.3" y="1909" width="0.2" height="15.0" fill="rgb(246,223,5)" rx="2" ry="2"/>
<text x="801.3" y="1919.5"/>
</g>
<g class="hide">
<title>start_thread (69 samples, 0.02%)</title><rect x="21.9" y="2037" width="0.2" height="15.0" fill="rgb(242,211,2)" rx="2" ry="2"/>
<text x="24.9" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="709" width="0.8" height="15.0" fill="rgb(243,134,15)" rx="2" ry="2"/>
<text x="57.8" y="719.5"/>
</g>
<g class="hide">
<title>__libc_calloc (228 samples, 0.05%)</title><rect x="733.1" y="2005" width="0.6" height="15.0" fill="rgb(227,42,14)" rx="2" ry="2"/>
<text x="736.1" y="2015.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (47 samples, 0.01%)</title><rect x="22.6" y="1989" width="0.1" height="15.0" fill="rgb(214,156,46)" rx="2" ry="2"/>
<text x="25.6" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="773" width="0.2" height="15.0" fill="rgb(240,220,26)" rx="2" ry="2"/>
<text x="30" y="783.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (95 samples, 0.02%)</title><rect x="629.3" y="1861" width="0.3" height="15.0" fill="rgb(209,111,9)" rx="2" ry="2"/>
<text x="632.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="373.7" y="1989" width="0.1" height="15.0" fill="rgb(206,156,52)" rx="2" ry="2"/>
<text x="376.7" y="1999.5"/>
</g>
<g class="">
<title>SimpleMemHeap::Allocate (3,443 samples, 0.80%)</title><rect x="307.1223021582733" y="1829" width="199.49640287769782" height="15.0" fill="rgb(251,68,10)" rx="2" ry="2" _orig_x="534.3" _orig_width="9.4"/>
<text x="310.1223021582733" y="1839.5" _orig_x="537.3">SimpleMemHeap::Allocate </text>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (92 samples, 0.02%)</title><rect x="680.6474820143889" y="1829" width="6.366906474820143" height="15.0" fill="rgb(219,12,50)" rx="2" ry="2" _orig_x="551.9" _orig_width="0.3"/>
<text x="683.6474820143889" y="1839.5" _orig_x="554.9"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1045" width="0.2" height="15.0" fill="rgb(249,17,3)" rx="2" ry="2"/>
<text x="247.2" y="1055.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.04%)</title><rect x="206.2" y="1973" width="0.5" height="15.0" fill="rgb(205,180,38)" rx="2" ry="2"/>
<text x="209.2" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="114.2" y="1909" width="0.3" height="15.0" fill="rgb(226,4,41)" rx="2" ry="2"/>
<text x="117.2" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (252 samples, 0.06%)</title><rect x="209.1" y="1749" width="0.7" height="15.0" fill="rgb(235,8,9)" rx="2" ry="2"/>
<text x="212.1" y="1759.5"/>
</g>
<g class="hide">
<title>std::__1::chrono::steady_clock::now (208 samples, 0.05%)</title><rect x="339.8" y="2005" width="0.5" height="15.0" fill="rgb(249,180,35)" rx="2" ry="2"/>
<text x="342.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="347.8" y="2005" width="0.3" height="15.0" fill="rgb(225,134,35)" rx="2" ry="2"/>
<text x="350.8" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (81 samples, 0.02%)</title><rect x="243.1" y="789" width="0.2" height="15.0" fill="rgb(247,165,24)" rx="2" ry="2"/>
<text x="246.1" y="799.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (283 samples, 0.07%)</title><rect x="462.0" y="1733" width="0.8" height="15.0" fill="rgb(231,66,34)" rx="2" ry="2"/>
<text x="465" y="1743.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (163 samples, 0.04%)</title><rect x="211.6187050359712" y="1701" width="8.489208633093524" height="15.0" fill="rgb(252,95,23)" rx="2" ry="2" _orig_x="529.8" _orig_width="0.4"/>
<text x="214.6187050359712" y="1711.5" _orig_x="532.8"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (245 samples, 0.06%)</title><rect x="387.8" y="1957" width="0.6" height="15.0" fill="rgb(205,146,37)" rx="2" ry="2"/>
<text x="390.8" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,325 samples, 1.93%)</title><rect x="710.1" y="1925" width="22.7" height="15.0" fill="rgb(221,135,39)" rx="2" ry="2"/>
<text x="713.1" y="1935.5">[..</text>
</g>
<g class="hide">
<title>vivado (1,657 samples, 0.38%)</title><rect x="1184.4" y="2053" width="4.6" height="15.0" fill="rgb(242,126,19)" rx="2" ry="2"/>
<text x="1187.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1269" width="0.2" height="15.0" fill="rgb(252,22,29)" rx="2" ry="2"/>
<text x="30" y="1279.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (90 samples, 0.02%)</title><rect x="466.6" y="1669" width="0.2" height="15.0" fill="rgb(207,169,35)" rx="2" ry="2"/>
<text x="469.6" y="1679.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="677" width="0.8" height="15.0" fill="rgb(228,92,8)" rx="2" ry="2"/>
<text x="57.8" y="687.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="48.1" y="1781" width="0.2" height="15.0" fill="rgb(207,12,29)" rx="2" ry="2"/>
<text x="51.1" y="1791.5"/>
</g>
<g class="hide">
<title>[libxul.so] (156 samples, 0.04%)</title><rect x="27.9" y="2021" width="0.5" height="15.0" fill="rgb(240,134,7)" rx="2" ry="2"/>
<text x="30.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="49.4" y="1861" width="0.1" height="15.0" fill="rgb(219,144,38)" rx="2" ry="2"/>
<text x="52.4" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1445" width="0.8" height="15.0" fill="rgb(245,154,26)" rx="2" ry="2"/>
<text x="57.8" y="1455.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="342.6" y="1845" width="0.2" height="15.0" fill="rgb(230,136,20)" rx="2" ry="2"/>
<text x="345.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,398 samples, 1.02%)</title><rect x="224.9" y="1877" width="12.1" height="15.0" fill="rgb(247,216,50)" rx="2" ry="2"/>
<text x="227.9" y="1887.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (96 samples, 0.02%)</title><rect x="1185.3" y="2021" width="0.2" height="15.0" fill="rgb(250,10,2)" rx="2" ry="2"/>
<text x="1188.3" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (865 samples, 0.20%)</title><rect x="649.7" y="1909" width="2.3" height="15.0" fill="rgb(253,135,0)" rx="2" ry="2"/>
<text x="652.7" y="1919.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (45 samples, 0.01%)</title><rect x="837.6978417266187" y="1813" width="4.244604316546762" height="15.0" fill="rgb(224,149,16)" rx="2" ry="2" _orig_x="559.3" _orig_width="0.2"/>
<text x="840.6978417266187" y="1823.5" _orig_x="562.3"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (52 samples, 0.01%)</title><rect x="460.7" y="1717" width="0.1" height="15.0" fill="rgb(217,28,36)" rx="2" ry="2"/>
<text x="463.7" y="1727.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (37 samples, 0.01%)</title><rect x="593.6330935251798" y="1845" width="2.122302158273381" height="15.0" fill="rgb(245,57,47)" rx="2" ry="2" _orig_x="547.8" _orig_width="0.1"/>
<text x="596.6330935251798" y="1855.5" _orig_x="550.8"/>
</g>
<g class="hide">
<title>[unknown] (73 samples, 0.02%)</title><rect x="350.8" y="2021" width="0.2" height="15.0" fill="rgb(245,24,2)" rx="2" ry="2"/>
<text x="353.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="383.1" y="1925" width="0.3" height="15.0" fill="rgb(225,119,38)" rx="2" ry="2"/>
<text x="386.1" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (123 samples, 0.03%)</title><rect x="19.9" y="1637" width="0.3" height="15.0" fill="rgb(216,28,15)" rx="2" ry="2"/>
<text x="22.9" y="1647.5"/>
</g>
<g class="hide">
<title>[code] (90 samples, 0.02%)</title><rect x="245.1" y="1141" width="0.2" height="15.0" fill="rgb(244,116,6)" rx="2" ry="2"/>
<text x="248.1" y="1151.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (50 samples, 0.01%)</title><rect x="639.3" y="1845" width="0.1" height="15.0" fill="rgb(220,119,35)" rx="2" ry="2"/>
<text x="642.3" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="244.0" y="965" width="0.1" height="15.0" fill="rgb(212,58,4)" rx="2" ry="2"/>
<text x="247" y="975.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (38 samples, 0.01%)</title><rect x="578.0" y="1845" width="0.1" height="15.0" fill="rgb(251,138,49)" rx="2" ry="2"/>
<text x="581" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field**&gt; (47 samples, 0.01%)</title><rect x="592.5" y="1845" width="0.1" height="15.0" fill="rgb(226,87,37)" rx="2" ry="2"/>
<text x="595.5" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (134 samples, 0.03%)</title><rect x="304.0" y="1605" width="0.4" height="15.0" fill="rgb(224,129,28)" rx="2" ry="2"/>
<text x="307" y="1615.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (226 samples, 0.05%)</title><rect x="244.9" y="1477" width="0.6" height="15.0" fill="rgb(214,185,37)" rx="2" ry="2"/>
<text x="247.9" y="1487.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (158 samples, 0.04%)</title><rect x="553.309352517986" y="1861" width="8.489208633093524" height="15.0" fill="rgb(214,92,20)" rx="2" ry="2" _orig_x="545.9" _orig_width="0.4"/>
<text x="556.309352517986" y="1871.5" _orig_x="548.9"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1333" width="0.8" height="15.0" fill="rgb(208,184,35)" rx="2" ry="2"/>
<text x="57.8" y="1343.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,817 samples, 0.65%)</title><rect x="326.0" y="1909" width="7.7" height="15.0" fill="rgb(226,132,49)" rx="2" ry="2"/>
<text x="329" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (45 samples, 0.01%)</title><rect x="372.5" y="2005" width="0.1" height="15.0" fill="rgb(243,172,47)" rx="2" ry="2"/>
<text x="375.5" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (87 samples, 0.02%)</title><rect x="448.6" y="1829" width="0.2" height="15.0" fill="rgb(243,42,13)" rx="2" ry="2"/>
<text x="451.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (200 samples, 0.05%)</title><rect x="623.5" y="1813" width="0.6" height="15.0" fill="rgb(212,96,11)" rx="2" ry="2"/>
<text x="626.5" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="244.9" y="1413" width="0.1" height="15.0" fill="rgb(214,54,27)" rx="2" ry="2"/>
<text x="247.9" y="1423.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (450 samples, 0.10%)</title><rect x="794.0" y="1749" width="1.2" height="15.0" fill="rgb(220,161,31)" rx="2" ry="2"/>
<text x="797" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (223 samples, 0.05%)</title><rect x="388.4" y="2037" width="0.6" height="15.0" fill="rgb(238,206,7)" rx="2" ry="2"/>
<text x="391.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (41 samples, 0.01%)</title><rect x="634.3" y="1877" width="0.1" height="15.0" fill="rgb(227,211,16)" rx="2" ry="2"/>
<text x="637.3" y="1887.5"/>
</g>
<g class="hide">
<title>azx_get_delay_from_fifo (70 samples, 0.02%)</title><rect x="136.8" y="1845" width="0.2" height="15.0" fill="rgb(211,70,36)" rx="2" ry="2"/>
<text x="139.8" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="237.9" y="2021" width="0.2" height="15.0" fill="rgb(205,134,16)" rx="2" ry="2"/>
<text x="240.9" y="2031.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (54 samples, 0.01%)</title><rect x="372.3" y="2021" width="0.2" height="15.0" fill="rgb(243,2,1)" rx="2" ry="2"/>
<text x="375.3" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (895 samples, 0.21%)</title><rect x="302.0" y="1653" width="2.4" height="15.0" fill="rgb(231,85,41)" rx="2" ry="2"/>
<text x="305" y="1663.5"/>
</g>
<g class="hide">
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (45 samples, 0.01%)</title><rect x="585.4" y="1749" width="0.1" height="15.0" fill="rgb(217,48,13)" rx="2" ry="2"/>
<text x="588.4" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (381 samples, 0.09%)</title><rect x="1187.3" y="1845" width="1.1" height="15.0" fill="rgb(244,196,6)" rx="2" ry="2"/>
<text x="1190.3" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="49.4" y="1877" width="0.1" height="15.0" fill="rgb(216,76,45)" rx="2" ry="2"/>
<text x="52.4" y="1887.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (74 samples, 0.02%)</title><rect x="1145.4316546762589" y="1877" width="4.244604316546762" height="15.0" fill="rgb(234,214,40)" rx="2" ry="2" _orig_x="573.8" _orig_width="0.2"/>
<text x="1148.4316546762589" y="1887.5" _orig_x="576.8"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (180 samples, 0.04%)</title><rect x="593.3" y="1845" width="0.5" height="15.0" fill="rgb(252,215,49)" rx="2" ry="2"/>
<text x="596.3" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1733" width="0.2" height="15.0" fill="rgb(216,140,38)" rx="2" ry="2"/>
<text x="30" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1669" width="0.8" height="15.0" fill="rgb(235,201,15)" rx="2" ry="2"/>
<text x="57.8" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="366.9" y="1941" width="0.2" height="15.0" fill="rgb(207,197,50)" rx="2" ry="2"/>
<text x="369.9" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (103 samples, 0.02%)</title><rect x="245.1" y="1365" width="0.2" height="15.0" fill="rgb(219,69,12)" rx="2" ry="2"/>
<text x="248.1" y="1375.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (75 samples, 0.02%)</title><rect x="335.4" y="1989" width="0.2" height="15.0" fill="rgb(236,219,2)" rx="2" ry="2"/>
<text x="338.4" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (60 samples, 0.01%)</title><rect x="450.8" y="1845" width="0.1" height="15.0" fill="rgb(214,36,53)" rx="2" ry="2"/>
<text x="453.8" y="1855.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::GetEntrySize (70 samples, 0.02%)</title><rect x="439.6" y="1893" width="0.2" height="15.0" fill="rgb(226,107,52)" rx="2" ry="2"/>
<text x="442.6" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (635 samples, 0.15%)</title><rect x="208.4" y="1909" width="1.8" height="15.0" fill="rgb(244,82,13)" rx="2" ry="2"/>
<text x="211.4" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="517" width="0.2" height="15.0" fill="rgb(227,202,18)" rx="2" ry="2"/>
<text x="30" y="527.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (456 samples, 0.11%)</title><rect x="39.7" y="1941" width="1.2" height="15.0" fill="rgb(250,32,42)" rx="2" ry="2"/>
<text x="42.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="47.3" y="1957" width="0.1" height="15.0" fill="rgb(247,110,53)" rx="2" ry="2"/>
<text x="50.3" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,537 samples, 1.28%)</title><rect x="682.5" y="1957" width="15.1" height="15.0" fill="rgb(220,167,17)" rx="2" ry="2"/>
<text x="685.5" y="1967.5"/>
</g>
<g class="hide">
<title>[libprotocol-native.so] (427 samples, 0.10%)</title><rect x="65.7" y="2021" width="1.2" height="15.0" fill="rgb(247,226,3)" rx="2" ry="2"/>
<text x="68.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.02%)</title><rect x="16.6" y="2005" width="0.3" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2"/>
<text x="19.6" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.03%)</title><rect x="397.7" y="1829" width="0.4" height="15.0" fill="rgb(224,111,0)" rx="2" ry="2"/>
<text x="400.7" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (326 samples, 0.08%)</title><rect x="420.2" y="1717" width="0.9" height="15.0" fill="rgb(253,83,22)" rx="2" ry="2"/>
<text x="423.2" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="33.6" y="1829" width="0.1" height="15.0" fill="rgb(251,181,28)" rx="2" ry="2"/>
<text x="36.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="1178.5" y="1541" width="0.3" height="15.0" fill="rgb(223,158,41)" rx="2" ry="2"/>
<text x="1181.5" y="1551.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (60 samples, 0.01%)</title><rect x="356.2" y="1861" width="0.2" height="15.0" fill="rgb(237,54,28)" rx="2" ry="2"/>
<text x="359.2" y="1871.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (54 samples, 0.01%)</title><rect x="29.2" y="1909" width="0.1" height="15.0" fill="rgb(219,7,10)" rx="2" ry="2"/>
<text x="32.2" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (394 samples, 0.09%)</title><rect x="664.8" y="1925" width="1.1" height="15.0" fill="rgb(223,197,26)" rx="2" ry="2"/>
<text x="667.8" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (776 samples, 0.18%)</title><rect x="208.2" y="1957" width="2.2" height="15.0" fill="rgb(210,105,35)" rx="2" ry="2"/>
<text x="211.2" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (44 samples, 0.01%)</title><rect x="647.5" y="1733" width="0.1" height="15.0" fill="rgb(250,80,2)" rx="2" ry="2"/>
<text x="650.5" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (132 samples, 0.03%)</title><rect x="445.1" y="1525" width="0.4" height="15.0" fill="rgb(210,203,44)" rx="2" ry="2"/>
<text x="448.1" y="1535.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="114.3" y="1893" width="0.2" height="15.0" fill="rgb(220,55,23)" rx="2" ry="2"/>
<text x="117.3" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1637" width="0.2" height="15.0" fill="rgb(229,76,30)" rx="2" ry="2"/>
<text x="249.9" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="50.2" y="1957" width="0.2" height="15.0" fill="rgb(251,28,35)" rx="2" ry="2"/>
<text x="53.2" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="250.1" y="1941" width="0.2" height="15.0" fill="rgb(225,223,43)" rx="2" ry="2"/>
<text x="253.1" y="1951.5"/>
</g>
<g class="hide">
<title>operator new[] (80 samples, 0.02%)</title><rect x="305.5" y="1925" width="0.3" height="15.0" fill="rgb(236,67,25)" rx="2" ry="2"/>
<text x="308.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (208 samples, 0.05%)</title><rect x="381.1" y="1957" width="0.6" height="15.0" fill="rgb(230,60,30)" rx="2" ry="2"/>
<text x="384.1" y="1967.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (215 samples, 0.05%)</title><rect x="334.1" y="1989" width="0.6" height="15.0" fill="rgb(217,51,14)" rx="2" ry="2"/>
<text x="337.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="382.4" y="1909" width="0.3" height="15.0" fill="rgb(232,102,6)" rx="2" ry="2"/>
<text x="385.4" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1893" width="0.2" height="15.0" fill="rgb(233,96,45)" rx="2" ry="2"/>
<text x="36.5" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (43 samples, 0.01%)</title><rect x="248.4" y="1669" width="0.1" height="15.0" fill="rgb(246,50,16)" rx="2" ry="2"/>
<text x="251.4" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114,302 samples, 26.47%)</title><rect x="815.4" y="1973" width="312.4" height="15.0" fill="rgb(219,53,10)" rx="2" ry="2"/>
<text x="818.4" y="1983.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (45 samples, 0.01%)</title><rect x="372.5" y="1989" width="0.1" height="15.0" fill="rgb(214,211,48)" rx="2" ry="2"/>
<text x="375.5" y="1999.5"/>
</g>
<g class="hide">
<title>[github-desktop] (37 samples, 0.01%)</title><rect x="354.5" y="1845" width="0.1" height="15.0" fill="rgb(222,86,43)" rx="2" ry="2"/>
<text x="357.5" y="1855.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (202 samples, 0.05%)</title><rect x="244.9" y="1445" width="0.6" height="15.0" fill="rgb(246,163,13)" rx="2" ry="2"/>
<text x="247.9" y="1455.5"/>
</g>
<g class="hide">
<title>DiskManager::FetchMetaPage (229 samples, 0.05%)</title><rect x="597.2" y="1877" width="0.7" height="15.0" fill="rgb(240,20,47)" rx="2" ry="2"/>
<text x="600.2" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (65 samples, 0.02%)</title><rect x="246.7" y="1429" width="0.2" height="15.0" fill="rgb(208,181,33)" rx="2" ry="2"/>
<text x="249.7" y="1439.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (357 samples, 0.08%)</title><rect x="387.5" y="2005" width="0.9" height="15.0" fill="rgb(236,123,42)" rx="2" ry="2"/>
<text x="390.5" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="1941" width="1.9" height="15.0" fill="rgb(225,124,15)" rx="2" ry="2"/>
<text x="17.1" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (71 samples, 0.02%)</title><rect x="52.5" y="1685" width="0.2" height="15.0" fill="rgb(215,9,42)" rx="2" ry="2"/>
<text x="55.5" y="1695.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::IsLeafPage (45 samples, 0.01%)</title><rect x="440.1" y="1893" width="0.1" height="15.0" fill="rgb(252,51,43)" rx="2" ry="2"/>
<text x="443.1" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="51.9" y="1973" width="0.2" height="15.0" fill="rgb(215,168,35)" rx="2" ry="2"/>
<text x="54.9" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,777 samples, 0.41%)</title><rect x="299.6" y="1701" width="4.8" height="15.0" fill="rgb(212,95,50)" rx="2" ry="2"/>
<text x="302.6" y="1711.5"/>
</g>
<g class="hide">
<title>Process_Message (106 samples, 0.02%)</title><rect x="31.4" y="2053" width="0.3" height="15.0" fill="rgb(213,177,26)" rx="2" ry="2"/>
<text x="34.4" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1557" width="0.2" height="15.0" fill="rgb(221,154,44)" rx="2" ry="2"/>
<text x="30" y="1567.5"/>
</g>
<g class="hide">
<title>[code] (250 samples, 0.06%)</title><rect x="242.6" y="1045" width="0.7" height="15.0" fill="rgb(216,28,8)" rx="2" ry="2"/>
<text x="245.6" y="1055.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (910 samples, 0.21%)</title><rect x="395.7" y="1957" width="2.4" height="15.0" fill="rgb(244,35,47)" rx="2" ry="2"/>
<text x="398.7" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.03%)</title><rect x="15.3" y="1845" width="0.3" height="15.0" fill="rgb(226,150,9)" rx="2" ry="2"/>
<text x="18.3" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1909" width="0.4" height="15.0" fill="rgb(215,112,24)" rx="2" ry="2"/>
<text x="240.4" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="243.2" y="565" width="0.1" height="15.0" fill="rgb(215,78,43)" rx="2" ry="2"/>
<text x="246.2" y="575.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1637" width="0.8" height="15.0" fill="rgb(250,138,47)" rx="2" ry="2"/>
<text x="57.8" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.03%)</title><rect x="170.5" y="1845" width="0.3" height="15.0" fill="rgb(225,92,9)" rx="2" ry="2"/>
<text x="173.5" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (67 samples, 0.02%)</title><rect x="653.8" y="1893" width="0.2" height="15.0" fill="rgb(249,93,35)" rx="2" ry="2"/>
<text x="656.8" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="341.0" y="1813" width="0.1" height="15.0" fill="rgb(236,188,7)" rx="2" ry="2"/>
<text x="344" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (170 samples, 0.04%)</title><rect x="794.7" y="1669" width="0.5" height="15.0" fill="rgb(217,158,46)" rx="2" ry="2"/>
<text x="797.7" y="1679.5"/>
</g>
<g class="hide">
<title>[code] (84 samples, 0.02%)</title><rect x="243.1" y="805" width="0.2" height="15.0" fill="rgb(205,43,54)" rx="2" ry="2"/>
<text x="246.1" y="815.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="549" width="0.2" height="15.0" fill="rgb(244,82,8)" rx="2" ry="2"/>
<text x="30" y="559.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (917 samples, 0.21%)</title><rect x="395.6" y="1973" width="2.5" height="15.0" fill="rgb(249,196,43)" rx="2" ry="2"/>
<text x="398.6" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="613" width="0.8" height="15.0" fill="rgb(221,88,23)" rx="2" ry="2"/>
<text x="57.8" y="623.5"/>
</g>
<g class="hide">
<title>[code] (45 samples, 0.01%)</title><rect x="246.3" y="1509" width="0.1" height="15.0" fill="rgb(237,192,11)" rx="2" ry="2"/>
<text x="249.3" y="1519.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1557" width="0.8" height="15.0" fill="rgb(222,73,36)" rx="2" ry="2"/>
<text x="57.8" y="1567.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="347.7" y="1989" width="0.1" height="15.0" fill="rgb(219,28,0)" rx="2" ry="2"/>
<text x="350.7" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (105 samples, 0.02%)</title><rect x="15.7" y="1877" width="0.3" height="15.0" fill="rgb(237,51,23)" rx="2" ry="2"/>
<text x="18.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="795.2" y="1861" width="0.1" height="15.0" fill="rgb(228,94,45)" rx="2" ry="2"/>
<text x="798.2" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (45 samples, 0.01%)</title><rect x="642.7" y="1813" width="0.1" height="15.0" fill="rgb(238,139,27)" rx="2" ry="2"/>
<text x="645.7" y="1823.5"/>
</g>
<g class="hide">
<title>ntfs_attr_find_vcn (55 samples, 0.01%)</title><rect x="766.0" y="2005" width="0.2" height="15.0" fill="rgb(217,204,42)" rx="2" ry="2"/>
<text x="769" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.04%)</title><rect x="206.2" y="1941" width="0.5" height="15.0" fill="rgb(222,176,43)" rx="2" ry="2"/>
<text x="209.2" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (138 samples, 0.03%)</title><rect x="307.6" y="1909" width="0.3" height="15.0" fill="rgb(225,146,6)" rx="2" ry="2"/>
<text x="310.6" y="1919.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (210 samples, 0.05%)</title><rect x="581.7" y="1845" width="0.6" height="15.0" fill="rgb(254,126,25)" rx="2" ry="2"/>
<text x="584.7" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="613" width="0.2" height="15.0" fill="rgb(211,114,0)" rx="2" ry="2"/>
<text x="30" y="623.5"/>
</g>
<g class="hide">
<title>InotifyBackend::start (20,902 samples, 4.84%)</title><rect x="261.7" y="2005" width="57.1" height="15.0" fill="rgb(225,165,54)" rx="2" ry="2"/>
<text x="264.7" y="2015.5">Inotify..</text>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (76 samples, 0.02%)</title><rect x="441.0" y="1861" width="0.2" height="15.0" fill="rgb(217,22,51)" rx="2" ry="2"/>
<text x="444" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="549" width="0.8" height="15.0" fill="rgb(205,129,11)" rx="2" ry="2"/>
<text x="57.8" y="559.5"/>
</g>
<g class="hide">
<title>TypeChar::CompareLessThan (93 samples, 0.02%)</title><rect x="519.8" y="1877" width="0.3" height="15.0" fill="rgb(238,6,18)" rx="2" ry="2"/>
<text x="522.8" y="1887.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (82 samples, 0.02%)</title><rect x="643.6" y="1845" width="0.2" height="15.0" fill="rgb(249,30,19)" rx="2" ry="2"/>
<text x="646.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="250.1" y="1909" width="0.2" height="15.0" fill="rgb(233,26,47)" rx="2" ry="2"/>
<text x="253.1" y="1919.5"/>
</g>
<g class="hide">
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (374 samples, 0.09%)</title><rect x="398.2" y="2021" width="1.0" height="15.0" fill="rgb(237,18,49)" rx="2" ry="2"/>
<text x="401.2" y="2031.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock_usercnt (51 samples, 0.01%)</title><rect x="207.5" y="2021" width="0.2" height="15.0" fill="rgb(218,13,6)" rx="2" ry="2"/>
<text x="210.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (160 samples, 0.04%)</title><rect x="456.8" y="1701" width="0.4" height="15.0" fill="rgb(206,38,15)" rx="2" ry="2"/>
<text x="459.8" y="1711.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1637" width="0.2" height="15.0" fill="rgb(250,113,54)" rx="2" ry="2"/>
<text x="30" y="1647.5"/>
</g>
<g class="hide">
<title>pa_silence_memory (106 samples, 0.02%)</title><rect x="83.6" y="2005" width="0.3" height="15.0" fill="rgb(224,220,5)" rx="2" ry="2"/>
<text x="86.6" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (46 samples, 0.01%)</title><rect x="592.1" y="1877" width="0.1" height="15.0" fill="rgb(249,52,54)" rx="2" ry="2"/>
<text x="595.1" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.02%)</title><rect x="797.0" y="1893" width="0.2" height="15.0" fill="rgb(219,208,19)" rx="2" ry="2"/>
<text x="800" y="1903.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (44 samples, 0.01%)</title><rect x="631.6" y="1781" width="0.1" height="15.0" fill="rgb(242,227,48)" rx="2" ry="2"/>
<text x="634.6" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.05%)</title><rect x="56.3" y="1989" width="0.6" height="15.0" fill="rgb(225,142,49)" rx="2" ry="2"/>
<text x="59.3" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,281 samples, 1.69%)</title><rect x="217.1" y="1957" width="19.9" height="15.0" fill="rgb(249,119,11)" rx="2" ry="2"/>
<text x="220.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="55.8" y="1877" width="0.1" height="15.0" fill="rgb(249,139,8)" rx="2" ry="2"/>
<text x="58.8" y="1887.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (243 samples, 0.06%)</title><rect x="244.8" y="1541" width="0.7" height="15.0" fill="rgb(223,118,28)" rx="2" ry="2"/>
<text x="247.8" y="1551.5"/>
</g>
<g class="hide">
<title>std::__detail::_Identity::operator (39 samples, 0.01%)</title><rect x="458.7" y="1749" width="0.1" height="15.0" fill="rgb(249,0,37)" rx="2" ry="2"/>
<text x="461.7" y="1759.5"/>
</g>
<g class="">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (39 samples, 0.01%)</title><rect x="678.5251798561151" y="1829" width="2.122302158273381" height="15.0" fill="rgb(248,36,53)" rx="2" ry="2" _orig_x="551.8" _orig_width="0.1"/>
<text x="681.5251798561151" y="1839.5" _orig_x="554.8"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (91 samples, 0.02%)</title><rect x="488.4" y="1813" width="0.2" height="15.0" fill="rgb(234,14,34)" rx="2" ry="2"/>
<text x="491.4" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (169 samples, 0.04%)</title><rect x="247.3" y="1749" width="0.5" height="15.0" fill="rgb(238,14,44)" rx="2" ry="2"/>
<text x="250.3" y="1759.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (1,462 samples, 0.34%)</title><rect x="34.0" y="2037" width="4.0" height="15.0" fill="rgb(228,49,29)" rx="2" ry="2"/>
<text x="37" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (44 samples, 0.01%)</title><rect x="493.5" y="1861" width="0.2" height="15.0" fill="rgb(220,83,24)" rx="2" ry="2"/>
<text x="496.5" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (282 samples, 0.07%)</title><rect x="209.0" y="1765" width="0.8" height="15.0" fill="rgb(226,39,31)" rx="2" ry="2"/>
<text x="212" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1925" width="0.4" height="15.0" fill="rgb(224,51,52)" rx="2" ry="2"/>
<text x="240.4" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (88 samples, 0.02%)</title><rect x="248.4" y="1781" width="0.2" height="15.0" fill="rgb(251,82,40)" rx="2" ry="2"/>
<text x="251.4" y="1791.5"/>
</g>
<g class="">
<title>std::__niter_base&lt;Field**&gt; (110 samples, 0.03%)</title><rect x="867.4100719424479" y="1765" width="6.366906474820143" height="15.0" fill="rgb(218,74,12)" rx="2" ry="2" _orig_x="560.7" _orig_width="0.3"/>
<text x="870.4100719424479" y="1775.5" _orig_x="563.7"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (51 samples, 0.01%)</title><rect x="610.2" y="1733" width="0.2" height="15.0" fill="rgb(215,49,14)" rx="2" ry="2"/>
<text x="613.2" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="250.2" y="1877" width="0.1" height="15.0" fill="rgb(222,76,46)" rx="2" ry="2"/>
<text x="253.2" y="1887.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (112 samples, 0.03%)</title><rect x="642.5" y="1909" width="0.3" height="15.0" fill="rgb(240,207,37)" rx="2" ry="2"/>
<text x="645.5" y="1919.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (42 samples, 0.01%)</title><rect x="342.5" y="2005" width="0.1" height="15.0" fill="rgb(219,221,9)" rx="2" ry="2"/>
<text x="345.5" y="2015.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (271 samples, 0.06%)</title><rect x="599.1" y="1925" width="0.8" height="15.0" fill="rgb(245,184,10)" rx="2" ry="2"/>
<text x="602.1" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="517" width="0.8" height="15.0" fill="rgb(233,49,41)" rx="2" ry="2"/>
<text x="57.8" y="527.5"/>
</g>
<g class="hide">
<title>snd_pcm_poll (76 samples, 0.02%)</title><rect x="116.2" y="1941" width="0.2" height="15.0" fill="rgb(221,34,13)" rx="2" ry="2"/>
<text x="119.2" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1669" width="0.2" height="15.0" fill="rgb(226,16,45)" rx="2" ry="2"/>
<text x="30" y="1679.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1733" width="0.8" height="15.0" fill="rgb(240,30,49)" rx="2" ry="2"/>
<text x="57.8" y="1743.5"/>
</g>
<g class="hide">
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (41 samples, 0.01%)</title><rect x="399.0" y="1989" width="0.1" height="15.0" fill="rgb(228,160,26)" rx="2" ry="2"/>
<text x="402" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (80 samples, 0.02%)</title><rect x="340.7" y="2037" width="0.2" height="15.0" fill="rgb(212,128,39)" rx="2" ry="2"/>
<text x="343.7" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="16.2" y="1749" width="0.1" height="15.0" fill="rgb(231,61,2)" rx="2" ry="2"/>
<text x="19.2" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (47 samples, 0.01%)</title><rect x="615.3" y="1861" width="0.1" height="15.0" fill="rgb(247,58,11)" rx="2" ry="2"/>
<text x="618.3" y="1871.5"/>
</g>
<g class="hide">
<title>TableHeap::ApplyDelete (487 samples, 0.11%)</title><rect x="656.4" y="1973" width="1.3" height="15.0" fill="rgb(251,106,4)" rx="2" ry="2"/>
<text x="659.4" y="1983.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (38 samples, 0.01%)</title><rect x="22.7" y="1989" width="0.1" height="15.0" fill="rgb(206,118,13)" rx="2" ry="2"/>
<text x="25.7" y="1999.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::IsPageFree (336 samples, 0.08%)</title><rect x="597.1" y="1909" width="0.9" height="15.0" fill="rgb(212,94,6)" rx="2" ry="2"/>
<text x="600.1" y="1919.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (133 samples, 0.03%)</title><rect x="505.7" y="1797" width="0.4" height="15.0" fill="rgb(242,205,46)" rx="2" ry="2"/>
<text x="508.7" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (68 samples, 0.02%)</title><rect x="245.1" y="1013" width="0.2" height="15.0" fill="rgb(222,94,44)" rx="2" ry="2"/>
<text x="248.1" y="1023.5"/>
</g>
<g class="hide">
<title>__poll (92 samples, 0.02%)</title><rect x="50.2" y="2021" width="0.2" height="15.0" fill="rgb(251,85,15)" rx="2" ry="2"/>
<text x="53.2" y="2031.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (184 samples, 0.04%)</title><rect x="510.7" y="1893" width="0.5" height="15.0" fill="rgb(222,170,34)" rx="2" ry="2"/>
<text x="513.7" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="245.1" y="901" width="0.2" height="15.0" fill="rgb(208,194,18)" rx="2" ry="2"/>
<text x="248.1" y="911.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (39 samples, 0.01%)</title><rect x="490.8" y="1797" width="0.1" height="15.0" fill="rgb(242,56,5)" rx="2" ry="2"/>
<text x="493.8" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111,877 samples, 25.91%)</title><rect x="822.1" y="1957" width="305.7" height="15.0" fill="rgb(231,123,10)" rx="2" ry="2"/>
<text x="825.1" y="1967.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::erase (172 samples, 0.04%)</title><rect x="448.4" y="1877" width="0.5" height="15.0" fill="rgb(211,41,20)" rx="2" ry="2"/>
<text x="451.4" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (946 samples, 0.22%)</title><rect x="17.8" y="1861" width="2.6" height="15.0" fill="rgb(251,38,51)" rx="2" ry="2"/>
<text x="20.8" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (37 samples, 0.01%)</title><rect x="597.6" y="1781" width="0.1" height="15.0" fill="rgb(221,8,14)" rx="2" ry="2"/>
<text x="600.6" y="1791.5"/>
</g>
<g class="">
<title>Field::Field (40 samples, 0.01%)</title><rect x="162.8057553956844" y="1829" width="4.244604316546762" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" _orig_x="527.5" _orig_width="0.2"/>
<text x="165.8057553956844" y="1839.5" _orig_x="530.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (698 samples, 0.16%)</title><rect x="396.2" y="1861" width="1.9" height="15.0" fill="rgb(245,151,36)" rx="2" ry="2"/>
<text x="399.2" y="1871.5"/>
</g>
<g class="hide">
<title>pa_mempool_unref (52 samples, 0.01%)</title><rect x="81.2" y="2005" width="0.2" height="15.0" fill="rgb(252,131,13)" rx="2" ry="2"/>
<text x="84.2" y="2015.5"/>
</g>
<g class="hide">
<title>boost::this_thread::interruption_point (45 samples, 0.01%)</title><rect x="1185.7" y="2021" width="0.1" height="15.0" fill="rgb(208,115,42)" rx="2" ry="2"/>
<text x="1188.7" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Mod_range_hashing::operator (58 samples, 0.01%)</title><rect x="465.1" y="1717" width="0.2" height="15.0" fill="rgb(207,79,1)" rx="2" ry="2"/>
<text x="468.1" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1893" width="0.4" height="15.0" fill="rgb(251,106,40)" rx="2" ry="2"/>
<text x="240.4" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (284 samples, 0.07%)</title><rect x="355.6" y="1973" width="0.8" height="15.0" fill="rgb(235,123,39)" rx="2" ry="2"/>
<text x="358.6" y="1983.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (37 samples, 0.01%)</title><rect x="578.1" y="1845" width="0.1" height="15.0" fill="rgb(237,157,3)" rx="2" ry="2"/>
<text x="581.1" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (46 samples, 0.01%)</title><rect x="614.9" y="1877" width="0.1" height="15.0" fill="rgb(232,122,40)" rx="2" ry="2"/>
<text x="617.9" y="1887.5"/>
</g>
<g class="hide">
<title>pa_source_check_type (115 samples, 0.03%)</title><rect x="200.4" y="2037" width="0.3" height="15.0" fill="rgb(244,69,14)" rx="2" ry="2"/>
<text x="203.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (257 samples, 0.06%)</title><rect x="425.9" y="1781" width="0.7" height="15.0" fill="rgb(209,25,10)" rx="2" ry="2"/>
<text x="428.9" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,050 samples, 2.10%)</title><rect x="740.7" y="1893" width="24.8" height="15.0" fill="rgb(224,10,27)" rx="2" ry="2"/>
<text x="743.7" y="1903.5">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,302 samples, 0.30%)</title><rect x="1123.6" y="1685" width="3.5" height="15.0" fill="rgb(213,44,19)" rx="2" ry="2"/>
<text x="1126.6" y="1695.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (171 samples, 0.04%)</title><rect x="246.4" y="1509" width="0.5" height="15.0" fill="rgb(205,18,46)" rx="2" ry="2"/>
<text x="249.4" y="1519.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.02%)</title><rect x="15.4" y="1733" width="0.2" height="15.0" fill="rgb(205,96,20)" rx="2" ry="2"/>
<text x="18.4" y="1743.5"/>
</g>
<g class="hide">
<title>read (1,017 samples, 0.24%)</title><rect x="395.4" y="2021" width="2.7" height="15.0" fill="rgb(252,199,26)" rx="2" ry="2"/>
<text x="398.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (216 samples, 0.05%)</title><rect x="484.7" y="1813" width="0.6" height="15.0" fill="rgb(207,94,13)" rx="2" ry="2"/>
<text x="487.7" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (450 samples, 0.10%)</title><rect x="50.6" y="1989" width="1.2" height="15.0" fill="rgb(221,107,38)" rx="2" ry="2"/>
<text x="53.6" y="1999.5"/>
</g>
<g class="hide">
<title>Refresh_Fileset (742 samples, 0.17%)</title><rect x="31.9" y="2053" width="2.0" height="15.0" fill="rgb(254,159,26)" rx="2" ry="2"/>
<text x="34.9" y="2063.5"/>
</g>
<g class="hide">
<title>pa_memblock_acquire (39 samples, 0.01%)</title><rect x="80.0" y="2005" width="0.1" height="15.0" fill="rgb(246,186,26)" rx="2" ry="2"/>
<text x="83" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,397 samples, 0.32%)</title><rect x="455.6" y="1781" width="3.8" height="15.0" fill="rgb(224,18,11)" rx="2" ry="2"/>
<text x="458.6" y="1791.5"/>
</g>
<g class="hide">
<title>ntfs_pathname_to_inode (53 samples, 0.01%)</title><rect x="792.3" y="2037" width="0.1" height="15.0" fill="rgb(253,211,16)" rx="2" ry="2"/>
<text x="795.3" y="2047.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (53 samples, 0.01%)</title><rect x="551.1870503597122" y="1845" width="2.122302158273381" height="15.0" fill="rgb(249,151,40)" rx="2" ry="2" _orig_x="545.8" _orig_width="0.1"/>
<text x="554.1870503597122" y="1855.5" _orig_x="548.8"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (90 samples, 0.02%)</title><rect x="718.8489208633112" y="1813" width="6.366906474820143" height="15.0" fill="rgb(243,21,38)" rx="2" ry="2" _orig_x="553.7" _orig_width="0.3"/>
<text x="721.8489208633112" y="1823.5" _orig_x="556.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="342.6" y="1973" width="0.2" height="15.0" fill="rgb(219,42,53)" rx="2" ry="2"/>
<text x="345.6" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="533" width="0.8" height="15.0" fill="rgb(233,141,21)" rx="2" ry="2"/>
<text x="57.8" y="543.5"/>
</g>
<g class="hide">
<title>[code] (1,063 samples, 0.25%)</title><rect x="41.4" y="1973" width="2.9" height="15.0" fill="rgb(247,212,5)" rx="2" ry="2"/>
<text x="44.4" y="1983.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,821 samples, 0.42%)</title><rect x="417.6" y="1765" width="5.0" height="15.0" fill="rgb(211,34,22)" rx="2" ry="2"/>
<text x="420.6" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (43 samples, 0.01%)</title><rect x="57.3" y="2037" width="0.1" height="15.0" fill="rgb(217,8,11)" rx="2" ry="2"/>
<text x="60.3" y="2047.5"/>
</g>
<g class="hide">
<title>pa_asyncq_read_after_poll (67 samples, 0.02%)</title><rect x="77.6" y="2005" width="0.2" height="15.0" fill="rgb(237,23,4)" rx="2" ry="2"/>
<text x="80.6" y="2015.5"/>
</g>
<g class="">
<title>std::min&lt;unsigned long&gt; (125 samples, 0.03%)</title><rect x="820.7194244604325" y="1765" width="8.489208633093524" height="15.0" fill="rgb(253,150,23)" rx="2" ry="2" _orig_x="558.5" _orig_width="0.4"/>
<text x="823.7194244604325" y="1775.5" _orig_x="561.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="342.7" y="1765" width="0.1" height="15.0" fill="rgb(229,228,44)" rx="2" ry="2"/>
<text x="345.7" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="1189.2" y="2021" width="0.1" height="15.0" fill="rgb(220,59,42)" rx="2" ry="2"/>
<text x="1192.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="515.7" y="1637" width="0.1" height="15.0" fill="rgb(207,68,51)" rx="2" ry="2"/>
<text x="518.7" y="1647.5"/>
</g>
<g class="hide">
<title>[code] (151 samples, 0.03%)</title><rect x="51.3" y="1781" width="0.4" height="15.0" fill="rgb(237,41,31)" rx="2" ry="2"/>
<text x="54.3" y="1791.5"/>
</g>
<g class="hide">
<title>TableHeap::GetTuple (775 samples, 0.18%)</title><rect x="642.8" y="1941" width="2.2" height="15.0" fill="rgb(238,226,46)" rx="2" ry="2"/>
<text x="645.8" y="1951.5"/>
</g>
<g class="">
<title>Field::Field (76 samples, 0.02%)</title><rect x="71.54676258992998" y="1845" width="4.244604316546762" height="15.0" fill="rgb(208,156,6)" rx="2" ry="2" _orig_x="523.2" _orig_width="0.2"/>
<text x="74.54676258992998" y="1855.5" _orig_x="526.2"/>
</g>
<g class="hide">
<title>GC_Thread#5 (44 samples, 0.01%)</title><rect x="22.4" y="2053" width="0.2" height="15.0" fill="rgb(253,89,37)" rx="2" ry="2"/>
<text x="25.4" y="2063.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (920 samples, 0.21%)</title><rect x="605.6" y="1797" width="2.6" height="15.0" fill="rgb(212,168,4)" rx="2" ry="2"/>
<text x="608.6" y="1807.5"/>
</g>
<g class="hide">
<title>uv_run (48 samples, 0.01%)</title><rect x="210.2" y="1941" width="0.2" height="15.0" fill="rgb(235,117,44)" rx="2" ry="2"/>
<text x="213.2" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.03%)</title><rect x="360.7" y="1893" width="0.3" height="15.0" fill="rgb(214,33,6)" rx="2" ry="2"/>
<text x="363.7" y="1903.5"/>
</g>
<g class="">
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (68 samples, 0.02%)</title><rect x="487.51798561151077" y="1765" width="4.244604316546762" height="15.0" fill="rgb(234,172,0)" rx="2" ry="2" _orig_x="542.8" _orig_width="0.2"/>
<text x="490.51798561151077" y="1775.5" _orig_x="545.8"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="795.2" y="1925" width="0.1" height="15.0" fill="rgb(249,127,3)" rx="2" ry="2"/>
<text x="798.2" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="50.2" y="1973" width="0.2" height="15.0" fill="rgb(217,108,33)" rx="2" ry="2"/>
<text x="53.2" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (243 samples, 0.06%)</title><rect x="515.2" y="1845" width="0.6" height="15.0" fill="rgb(241,224,44)" rx="2" ry="2"/>
<text x="518.2" y="1855.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (98 samples, 0.02%)</title><rect x="29.1" y="1989" width="0.2" height="15.0" fill="rgb(207,16,31)" rx="2" ry="2"/>
<text x="32.1" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="981" width="0.8" height="15.0" fill="rgb(250,68,2)" rx="2" ry="2"/>
<text x="57.8" y="991.5"/>
</g>
<g class="hide">
<title>JVM_Sleep (333 samples, 0.08%)</title><rect x="36.9" y="2005" width="0.9" height="15.0" fill="rgb(216,20,4)" rx="2" ry="2"/>
<text x="39.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,509 samples, 1.04%)</title><rect x="101.6" y="1861" width="12.3" height="15.0" fill="rgb(213,58,41)" rx="2" ry="2"/>
<text x="104.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="342.6" y="1909" width="0.2" height="15.0" fill="rgb(211,94,10)" rx="2" ry="2"/>
<text x="345.6" y="1919.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (63 samples, 0.01%)</title><rect x="428.093525179857" y="1733" width="4.244604316546762" height="15.0" fill="rgb(237,30,12)" rx="2" ry="2" _orig_x="540.0" _orig_width="0.2"/>
<text x="431.093525179857" y="1743.5" _orig_x="543"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (187 samples, 0.04%)</title><rect x="379.8" y="2037" width="0.5" height="15.0" fill="rgb(244,88,19)" rx="2" ry="2"/>
<text x="382.8" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="56.7" y="1733" width="0.2" height="15.0" fill="rgb(253,61,34)" rx="2" ry="2"/>
<text x="59.7" y="1743.5"/>
</g>
<g class="parent">
<title>ExecuteEngine::Execute (92,066 samples, 21.32%)</title><rect x="10" y="2005" width="1180" height="15.0" fill="rgb(222,23,24)" rx="2" ry="2" _orig_x="410.8" _orig_width="251.6"/>
<text x="13" y="2015.5" _orig_x="413.8">ExecuteEngine::Execute </text>
</g>
<g class="hide">
<title>[libjvm.so] (94 samples, 0.02%)</title><rect x="13.6" y="1861" width="0.2" height="15.0" fill="rgb(206,96,13)" rx="2" ry="2"/>
<text x="16.6" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="357" width="0.2" height="15.0" fill="rgb(244,163,20)" rx="2" ry="2"/>
<text x="30" y="367.5"/>
</g>
<g class="hide">
<title>TableIterator::operator* (918 samples, 0.21%)</title><rect x="642.5" y="1957" width="2.5" height="15.0" fill="rgb(226,54,44)" rx="2" ry="2"/>
<text x="645.5" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (539 samples, 0.12%)</title><rect x="652.7" y="1941" width="1.5" height="15.0" fill="rgb(205,184,30)" rx="2" ry="2"/>
<text x="655.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="367.0" y="1877" width="0.1" height="15.0" fill="rgb(231,173,2)" rx="2" ry="2"/>
<text x="370" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.02%)</title><rect x="342.6" y="1861" width="0.2" height="15.0" fill="rgb(205,78,42)" rx="2" ry="2"/>
<text x="345.6" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,333 samples, 0.31%)</title><rect x="608.7" y="1797" width="3.6" height="15.0" fill="rgb(241,115,49)" rx="2" ry="2"/>
<text x="611.7" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="244.3" y="581" width="0.1" height="15.0" fill="rgb(215,185,37)" rx="2" ry="2"/>
<text x="247.3" y="591.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (90 samples, 0.02%)</title><rect x="49.5" y="1989" width="0.3" height="15.0" fill="rgb(234,112,36)" rx="2" ry="2"/>
<text x="52.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,680 samples, 0.39%)</title><rect x="329.1" y="1845" width="4.6" height="15.0" fill="rgb(207,188,9)" rx="2" ry="2"/>
<text x="332.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (173 samples, 0.04%)</title><rect x="244.0" y="1397" width="0.4" height="15.0" fill="rgb(221,85,26)" rx="2" ry="2"/>
<text x="247" y="1407.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (58 samples, 0.01%)</title><rect x="434.4604316546762" y="1733" width="4.244604316546762" height="15.0" fill="rgb(245,82,41)" rx="2" ry="2" _orig_x="540.3" _orig_width="0.2"/>
<text x="437.4604316546762" y="1743.5" _orig_x="543.3"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.02%)</title><rect x="389.7" y="1909" width="0.2" height="15.0" fill="rgb(237,120,8)" rx="2" ry="2"/>
<text x="392.7" y="1919.5"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (43 samples, 0.01%)</title><rect x="184.02877697841822" y="1733" width="2.122302158273381" height="15.0" fill="rgb(249,103,43)" rx="2" ry="2" _orig_x="528.5" _orig_width="0.1"/>
<text x="187.02877697841822" y="1743.5" _orig_x="531.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1653" width="0.2" height="15.0" fill="rgb(236,160,13)" rx="2" ry="2"/>
<text x="30" y="1663.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="261.1" y="2005" width="0.1" height="15.0" fill="rgb(254,76,44)" rx="2" ry="2"/>
<text x="264.1" y="2015.5"/>
</g>
<g class="hide">
<title>pa_thread_mq_get (59 samples, 0.01%)</title><rect x="85.7" y="2005" width="0.2" height="15.0" fill="rgb(251,209,45)" rx="2" ry="2"/>
<text x="88.7" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (66 samples, 0.02%)</title><rect x="245.6" y="1173" width="0.2" height="15.0" fill="rgb(242,11,2)" rx="2" ry="2"/>
<text x="248.6" y="1183.5"/>
</g>
<g class="hide">
<title>ib_clone_gtid (108 samples, 0.03%)</title><rect x="372.3" y="2053" width="0.3" height="15.0" fill="rgb(239,45,13)" rx="2" ry="2"/>
<text x="375.3" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (132 samples, 0.03%)</title><rect x="20.9" y="1765" width="0.4" height="15.0" fill="rgb(230,30,18)" rx="2" ry="2"/>
<text x="23.9" y="1775.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (48 samples, 0.01%)</title><rect x="656.7" y="1957" width="0.1" height="15.0" fill="rgb(246,206,11)" rx="2" ry="2"/>
<text x="659.7" y="1967.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (61 samples, 0.01%)</title><rect x="622.8" y="1813" width="0.2" height="15.0" fill="rgb(220,185,35)" rx="2" ry="2"/>
<text x="625.8" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1893" width="9.7" height="15.0" fill="rgb(205,224,20)" rx="2" ry="2"/>
<text x="241.3" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (49 samples, 0.01%)</title><rect x="209.6" y="1637" width="0.1" height="15.0" fill="rgb(250,0,22)" rx="2" ry="2"/>
<text x="212.6" y="1647.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="52.1" y="1973" width="0.7" height="15.0" fill="rgb(224,227,26)" rx="2" ry="2"/>
<text x="55.1" y="1983.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1941" width="0.3" height="15.0" fill="rgb(244,211,35)" rx="2" ry="2"/>
<text x="16.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (213 samples, 0.05%)</title><rect x="386.1" y="1957" width="0.5" height="15.0" fill="rgb(246,123,36)" rx="2" ry="2"/>
<text x="389.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (278 samples, 0.06%)</title><rect x="796.4" y="2021" width="0.8" height="15.0" fill="rgb(220,181,18)" rx="2" ry="2"/>
<text x="799.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (65 samples, 0.02%)</title><rect x="603.6" y="1717" width="0.2" height="15.0" fill="rgb(237,94,45)" rx="2" ry="2"/>
<text x="606.6" y="1727.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr0 (2,721 samples, 0.63%)</title><rect x="163.4" y="1877" width="7.4" height="15.0" fill="rgb(227,151,36)" rx="2" ry="2"/>
<text x="166.4" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (56 samples, 0.01%)</title><rect x="647.7" y="1749" width="0.2" height="15.0" fill="rgb(210,95,33)" rx="2" ry="2"/>
<text x="650.7" y="1759.5"/>
</g>
<g class="hide">
<title>[dbus-daemon] (42 samples, 0.01%)</title><rect x="341.6" y="2037" width="0.1" height="15.0" fill="rgb(229,13,51)" rx="2" ry="2"/>
<text x="344.6" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (124 samples, 0.03%)</title><rect x="44.9" y="2037" width="0.3" height="15.0" fill="rgb(224,124,36)" rx="2" ry="2"/>
<text x="47.9" y="2047.5"/>
</g>
<g class="hide">
<title>gnome-shell (4,897 samples, 1.13%)</title><rect x="355.5" y="2053" width="13.4" height="15.0" fill="rgb(227,51,2)" rx="2" ry="2"/>
<text x="358.5" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="2005" width="0.4" height="15.0" fill="rgb(217,51,43)" rx="2" ry="2"/>
<text x="240.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;int const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (44 samples, 0.01%)</title><rect x="450.2" y="1829" width="0.1" height="15.0" fill="rgb(230,227,31)" rx="2" ry="2"/>
<text x="453.2" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.02%)</title><rect x="391.8" y="1957" width="0.2" height="15.0" fill="rgb(245,204,30)" rx="2" ry="2"/>
<text x="394.8" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (41 samples, 0.01%)</title><rect x="244.4" y="1381" width="0.2" height="15.0" fill="rgb(247,197,41)" rx="2" ry="2"/>
<text x="247.4" y="1391.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (37 samples, 0.01%)</title><rect x="636.0791366906474" y="1829" width="2.122302158273381" height="15.0" fill="rgb(208,222,8)" rx="2" ry="2" _orig_x="549.8" _orig_width="0.1"/>
<text x="639.0791366906474" y="1839.5" _orig_x="552.8"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="901" width="0.1" height="15.0" fill="rgb(253,141,19)" rx="2" ry="2"/>
<text x="247" y="911.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.04%)</title><rect x="354.8" y="2005" width="0.4" height="15.0" fill="rgb(217,83,54)" rx="2" ry="2"/>
<text x="357.8" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1653" width="0.8" height="15.0" fill="rgb(241,71,50)" rx="2" ry="2"/>
<text x="57.8" y="1663.5"/>
</g>
<g class="hide">
<title>Unsafe_Park (60 samples, 0.01%)</title><rect x="12.1" y="1989" width="0.2" height="15.0" fill="rgb(221,192,37)" rx="2" ry="2"/>
<text x="15.1" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1013" width="0.1" height="15.0" fill="rgb(233,74,31)" rx="2" ry="2"/>
<text x="247" y="1023.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="981" width="0.2" height="15.0" fill="rgb(221,98,16)" rx="2" ry="2"/>
<text x="30" y="991.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (51 samples, 0.01%)</title><rect x="245.7" y="1109" width="0.1" height="15.0" fill="rgb(247,121,10)" rx="2" ry="2"/>
<text x="248.7" y="1119.5"/>
</g>
<g class="hide">
<title>operator new[] (47 samples, 0.01%)</title><rect x="268.7" y="1941" width="0.1" height="15.0" fill="rgb(247,42,15)" rx="2" ry="2"/>
<text x="271.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.03%)</title><rect x="48.6" y="1845" width="0.4" height="15.0" fill="rgb(212,133,11)" rx="2" ry="2"/>
<text x="51.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="665.9" y="2021" width="0.5" height="15.0" fill="rgb(254,22,36)" rx="2" ry="2"/>
<text x="668.9" y="2031.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (68 samples, 0.02%)</title><rect x="355.8" y="1861" width="0.2" height="15.0" fill="rgb(238,178,47)" rx="2" ry="2"/>
<text x="358.8" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (940 samples, 0.22%)</title><rect x="241.3" y="1365" width="2.6" height="15.0" fill="rgb(245,71,13)" rx="2" ry="2"/>
<text x="244.3" y="1375.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (51 samples, 0.01%)</title><rect x="652.2" y="1925" width="0.1" height="15.0" fill="rgb(211,16,6)" rx="2" ry="2"/>
<text x="655.2" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (104 samples, 0.02%)</title><rect x="654.9" y="1893" width="0.3" height="15.0" fill="rgb(211,85,6)" rx="2" ry="2"/>
<text x="657.9" y="1903.5"/>
</g>
<g class="hide">
<title>[libpulsecommon-13.99.so] (321 samples, 0.07%)</title><rect x="71.4" y="2005" width="0.8" height="15.0" fill="rgb(207,139,42)" rx="2" ry="2"/>
<text x="74.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="47.3" y="1989" width="0.1" height="15.0" fill="rgb(249,71,39)" rx="2" ry="2"/>
<text x="50.3" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (97 samples, 0.02%)</title><rect x="52.5" y="1717" width="0.2" height="15.0" fill="rgb(219,205,31)" rx="2" ry="2"/>
<text x="55.5" y="1727.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (65 samples, 0.02%)</title><rect x="358.0" y="1861" width="0.2" height="15.0" fill="rgb(247,193,4)" rx="2" ry="2"/>
<text x="361" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (179 samples, 0.04%)</title><rect x="247.3" y="1781" width="0.5" height="15.0" fill="rgb(251,113,35)" rx="2" ry="2"/>
<text x="250.3" y="1791.5"/>
</g>
<g class="hide">
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (123 samples, 0.03%)</title><rect x="428.6" y="1781" width="0.4" height="15.0" fill="rgb(222,16,10)" rx="2" ry="2"/>
<text x="431.6" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (185 samples, 0.04%)</title><rect x="247.3" y="1813" width="0.5" height="15.0" fill="rgb(217,103,44)" rx="2" ry="2"/>
<text x="250.3" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (181 samples, 0.04%)</title><rect x="47.8" y="1973" width="0.5" height="15.0" fill="rgb(236,31,21)" rx="2" ry="2"/>
<text x="50.8" y="1983.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (66 samples, 0.02%)</title><rect x="59.5" y="2021" width="0.2" height="15.0" fill="rgb(236,55,32)" rx="2" ry="2"/>
<text x="62.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (177 samples, 0.04%)</title><rect x="479.5" y="1797" width="0.5" height="15.0" fill="rgb(219,93,36)" rx="2" ry="2"/>
<text x="482.5" y="1807.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (46 samples, 0.01%)</title><rect x="475.0" y="1813" width="0.1" height="15.0" fill="rgb(207,205,23)" rx="2" ry="2"/>
<text x="478" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="533" width="0.2" height="15.0" fill="rgb(254,112,14)" rx="2" ry="2"/>
<text x="30" y="543.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="374.5" y="1973" width="0.3" height="15.0" fill="rgb(223,64,37)" rx="2" ry="2"/>
<text x="377.5" y="1983.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (49 samples, 0.01%)</title><rect x="585.1" y="1749" width="0.1" height="15.0" fill="rgb(246,153,5)" rx="2" ry="2"/>
<text x="588.1" y="1759.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (46 samples, 0.01%)</title><rect x="248.4" y="1701" width="0.1" height="15.0" fill="rgb(229,149,41)" rx="2" ry="2"/>
<text x="251.4" y="1711.5"/>
</g>
<g class="hide">
<title>Row::~Row (43 samples, 0.01%)</title><rect x="636.4" y="1925" width="0.2" height="15.0" fill="rgb(217,212,22)" rx="2" ry="2"/>
<text x="639.4" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (51 samples, 0.01%)</title><rect x="247.5" y="1525" width="0.2" height="15.0" fill="rgb(226,130,50)" rx="2" ry="2"/>
<text x="250.5" y="1535.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (144 samples, 0.03%)</title><rect x="625.3" y="1845" width="0.4" height="15.0" fill="rgb(219,161,16)" rx="2" ry="2"/>
<text x="628.3" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,461 samples, 0.80%)</title><rect x="1117.7" y="1717" width="9.4" height="15.0" fill="rgb(213,146,27)" rx="2" ry="2"/>
<text x="1120.7" y="1727.5"/>
</g>
<g class="hide">
<title>malloc (557 samples, 0.13%)</title><rect x="788.0" y="2037" width="1.5" height="15.0" fill="rgb(212,174,6)" rx="2" ry="2"/>
<text x="791" y="2047.5"/>
</g>
<g class="hide">
<title>pa_smoother_translate (69 samples, 0.02%)</title><rect x="183.2" y="2021" width="0.2" height="15.0" fill="rgb(221,176,10)" rx="2" ry="2"/>
<text x="186.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="51.9" y="1893" width="0.2" height="15.0" fill="rgb(234,39,6)" rx="2" ry="2"/>
<text x="54.9" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (691 samples, 0.16%)</title><rect x="14.1" y="2005" width="1.9" height="15.0" fill="rgb(214,189,26)" rx="2" ry="2"/>
<text x="17.1" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (108 samples, 0.03%)</title><rect x="244.1" y="1253" width="0.3" height="15.0" fill="rgb(241,14,19)" rx="2" ry="2"/>
<text x="247.1" y="1263.5"/>
</g>
<g class="hide">
<title>[code] (62 samples, 0.01%)</title><rect x="243.1" y="709" width="0.2" height="15.0" fill="rgb(232,168,51)" rx="2" ry="2"/>
<text x="246.1" y="719.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="47.3" y="2005" width="0.1" height="15.0" fill="rgb(238,20,23)" rx="2" ry="2"/>
<text x="50.3" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (70 samples, 0.02%)</title><rect x="706.8" y="1957" width="0.2" height="15.0" fill="rgb(253,220,18)" rx="2" ry="2"/>
<text x="709.8" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (511 samples, 0.12%)</title><rect x="1177.4" y="1669" width="1.4" height="15.0" fill="rgb(208,160,28)" rx="2" ry="2"/>
<text x="1180.4" y="1679.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (45 samples, 0.01%)</title><rect x="486.6" y="1845" width="0.2" height="15.0" fill="rgb(252,68,20)" rx="2" ry="2"/>
<text x="489.6" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (49 samples, 0.01%)</title><rect x="494.9" y="1861" width="0.2" height="15.0" fill="rgb(213,185,17)" rx="2" ry="2"/>
<text x="497.9" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (417 samples, 0.10%)</title><rect x="1126.0" y="1621" width="1.1" height="15.0" fill="rgb(226,37,27)" rx="2" ry="2"/>
<text x="1129" y="1631.5"/>
</g>
<g class="hide">
<title>std::min&lt;unsigned long&gt; (99 samples, 0.02%)</title><rect x="481.9" y="1749" width="0.2" height="15.0" fill="rgb(229,52,0)" rx="2" ry="2"/>
<text x="484.9" y="1759.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (260 samples, 0.06%)</title><rect x="619.9" y="1813" width="0.7" height="15.0" fill="rgb(211,126,10)" rx="2" ry="2"/>
<text x="622.9" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (68 samples, 0.02%)</title><rect x="677.0" y="2005" width="0.2" height="15.0" fill="rgb(224,15,13)" rx="2" ry="2"/>
<text x="680" y="2015.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (75 samples, 0.02%)</title><rect x="635.4" y="1845" width="0.2" height="15.0" fill="rgb(244,79,11)" rx="2" ry="2"/>
<text x="638.4" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (75 samples, 0.02%)</title><rect x="39.0" y="2021" width="0.2" height="15.0" fill="rgb(237,133,38)" rx="2" ry="2"/>
<text x="42" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (182 samples, 0.04%)</title><rect x="389.9" y="2037" width="0.5" height="15.0" fill="rgb(226,9,31)" rx="2" ry="2"/>
<text x="392.9" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="15.1" y="1653" width="0.1" height="15.0" fill="rgb(240,34,13)" rx="2" ry="2"/>
<text x="18.1" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="796.3" y="1957" width="0.1" height="15.0" fill="rgb(250,118,4)" rx="2" ry="2"/>
<text x="799.3" y="1967.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (175 samples, 0.04%)</title><rect x="637.4" y="1861" width="0.5" height="15.0" fill="rgb(211,132,33)" rx="2" ry="2"/>
<text x="640.4" y="1871.5"/>
</g>
<g class="hide">
<title>snd_pcm_status64 (2,924 samples, 0.68%)</title><rect x="162.8" y="1909" width="8.0" height="15.0" fill="rgb(231,72,18)" rx="2" ry="2"/>
<text x="165.8" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (147 samples, 0.03%)</title><rect x="387.0" y="1941" width="0.4" height="15.0" fill="rgb(211,151,1)" rx="2" ry="2"/>
<text x="390" y="1951.5"/>
</g>
<g class="hide">
<title>ntfs_attr_get_search_ctx (105 samples, 0.02%)</title><rect x="774.6" y="2021" width="0.3" height="15.0" fill="rgb(213,63,28)" rx="2" ry="2"/>
<text x="777.6" y="2031.5"/>
</g>
<g class="hide">
<title>__strdup (79 samples, 0.02%)</title><rect x="679.0" y="2005" width="0.3" height="15.0" fill="rgb(245,44,10)" rx="2" ry="2"/>
<text x="682" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (100 samples, 0.02%)</title><rect x="243.0" y="853" width="0.3" height="15.0" fill="rgb(212,125,48)" rx="2" ry="2"/>
<text x="246" y="863.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (331 samples, 0.08%)</title><rect x="332.8" y="1781" width="0.9" height="15.0" fill="rgb(250,25,31)" rx="2" ry="2"/>
<text x="335.8" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (288 samples, 0.07%)</title><rect x="796.4" y="2037" width="0.8" height="15.0" fill="rgb(250,125,3)" rx="2" ry="2"/>
<text x="799.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (474 samples, 0.11%)</title><rect x="270.5" y="1941" width="1.3" height="15.0" fill="rgb(251,117,14)" rx="2" ry="2"/>
<text x="273.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.04%)</title><rect x="354.8" y="2021" width="0.4" height="15.0" fill="rgb(234,203,12)" rx="2" ry="2"/>
<text x="357.8" y="2031.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (52 samples, 0.01%)</title><rect x="432.9" y="1733" width="0.2" height="15.0" fill="rgb(235,229,53)" rx="2" ry="2"/>
<text x="435.9" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1317" width="0.8" height="15.0" fill="rgb(212,76,32)" rx="2" ry="2"/>
<text x="57.8" y="1327.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="209.8" y="1701" width="0.1" height="15.0" fill="rgb(229,179,48)" rx="2" ry="2"/>
<text x="212.8" y="1711.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,593 samples, 0.60%)</title><rect x="326.6" y="1893" width="7.1" height="15.0" fill="rgb(236,69,14)" rx="2" ry="2"/>
<text x="329.6" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="693" width="0.8" height="15.0" fill="rgb(210,128,48)" rx="2" ry="2"/>
<text x="57.8" y="703.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (49 samples, 0.01%)</title><rect x="248.4" y="1717" width="0.1" height="15.0" fill="rgb(222,225,54)" rx="2" ry="2"/>
<text x="251.4" y="1727.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::GetKeySize (174 samples, 0.04%)</title><rect x="438.6" y="1861" width="0.5" height="15.0" fill="rgb(228,219,11)" rx="2" ry="2"/>
<text x="441.6" y="1871.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (394 samples, 0.09%)</title><rect x="767.2" y="2021" width="1.0" height="15.0" fill="rgb(232,46,42)" rx="2" ry="2"/>
<text x="770.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (381 samples, 0.09%)</title><rect x="39.9" y="1909" width="1.0" height="15.0" fill="rgb(228,46,48)" rx="2" ry="2"/>
<text x="42.9" y="1919.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (47 samples, 0.01%)</title><rect x="432.2" y="1813" width="0.2" height="15.0" fill="rgb(217,75,43)" rx="2" ry="2"/>
<text x="435.2" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,781 samples, 0.88%)</title><rect x="755.1" y="1813" width="10.4" height="15.0" fill="rgb(241,41,17)" rx="2" ry="2"/>
<text x="758.1" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (193 samples, 0.04%)</title><rect x="589.5" y="1813" width="0.6" height="15.0" fill="rgb(237,218,53)" rx="2" ry="2"/>
<text x="592.5" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1541" width="0.8" height="15.0" fill="rgb(242,218,52)" rx="2" ry="2"/>
<text x="57.8" y="1551.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (73 samples, 0.02%)</title><rect x="458.8" y="1749" width="0.2" height="15.0" fill="rgb(241,147,38)" rx="2" ry="2"/>
<text x="461.8" y="1759.5"/>
</g>
<g class="hide">
<title>update_audio_tstamp.isra.0 (292 samples, 0.07%)</title><rect x="161.0" y="1861" width="0.8" height="15.0" fill="rgb(242,140,42)" rx="2" ry="2"/>
<text x="164" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,165 samples, 0.96%)</title><rect x="399.4" y="2021" width="11.4" height="15.0" fill="rgb(246,203,54)" rx="2" ry="2"/>
<text x="402.4" y="2031.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (59 samples, 0.01%)</title><rect x="478.3" y="1797" width="0.2" height="15.0" fill="rgb(222,218,46)" rx="2" ry="2"/>
<text x="481.3" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="949" width="0.8" height="15.0" fill="rgb(225,226,18)" rx="2" ry="2"/>
<text x="57.8" y="959.5"/>
</g>
<g class="hide">
<title>[unknown] (18,637 samples, 4.32%)</title><rect x="1127.8" y="1989" width="51.0" height="15.0" fill="rgb(208,36,15)" rx="2" ry="2"/>
<text x="1130.8" y="1999.5">[unk..</text>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (3,507 samples, 0.81%)</title><rect x="693.3812949640296" y="1829" width="203.7410071942446" height="15.0" fill="rgb(241,212,31)" rx="2" ry="2" _orig_x="552.5" _orig_width="9.6"/>
<text x="696.3812949640296" y="1839.5" _orig_x="555.5">std::vector&lt;Field*, std::allocat..</text>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1413" width="0.2" height="15.0" fill="rgb(206,144,13)" rx="2" ry="2"/>
<text x="30" y="1423.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (87 samples, 0.02%)</title><rect x="55.7" y="2005" width="0.2" height="15.0" fill="rgb(237,197,12)" rx="2" ry="2"/>
<text x="58.7" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1349" width="0.8" height="15.0" fill="rgb(233,47,1)" rx="2" ry="2"/>
<text x="57.8" y="1359.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,005 samples, 0.93%)</title><rect x="686.7" y="1845" width="10.9" height="15.0" fill="rgb(250,122,32)" rx="2" ry="2"/>
<text x="689.7" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (40 samples, 0.01%)</title><rect x="203.0" y="2037" width="0.1" height="15.0" fill="rgb(249,194,33)" rx="2" ry="2"/>
<text x="206" y="2047.5"/>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (144 samples, 0.03%)</title><rect x="440.6" y="1861" width="0.3" height="15.0" fill="rgb(224,184,39)" rx="2" ry="2"/>
<text x="443.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="366.9" y="2005" width="0.2" height="15.0" fill="rgb(208,94,6)" rx="2" ry="2"/>
<text x="369.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="387.3" y="1893" width="0.1" height="15.0" fill="rgb(212,92,44)" rx="2" ry="2"/>
<text x="390.3" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17,186 samples, 3.98%)</title><rect x="1080.5" y="1813" width="47.0" height="15.0" fill="rgb(237,167,32)" rx="2" ry="2"/>
<text x="1083.5" y="1823.5">[[ker..</text>
</g>
<g class="hide">
<title>[unknown] (121 samples, 0.03%)</title><rect x="54.8" y="101" width="0.3" height="15.0" fill="rgb(209,102,53)" rx="2" ry="2"/>
<text x="57.8" y="111.5"/>
</g>
<g class="hide">
<title>[code] (63 samples, 0.01%)</title><rect x="20.0" y="1605" width="0.2" height="15.0" fill="rgb(233,120,51)" rx="2" ry="2"/>
<text x="23" y="1615.5"/>
</g>
<g class="hide">
<title>[unknown] (43 samples, 0.01%)</title><rect x="350.8" y="2005" width="0.1" height="15.0" fill="rgb(246,196,40)" rx="2" ry="2"/>
<text x="353.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (910 samples, 0.21%)</title><rect x="503.2" y="1781" width="2.5" height="15.0" fill="rgb(253,17,31)" rx="2" ry="2"/>
<text x="506.2" y="1791.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (86 samples, 0.02%)</title><rect x="589.7" y="1781" width="0.2" height="15.0" fill="rgb(232,166,35)" rx="2" ry="2"/>
<text x="592.7" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="48.1" y="1765" width="0.2" height="15.0" fill="rgb(237,81,18)" rx="2" ry="2"/>
<text x="51.1" y="1775.5"/>
</g>
<g class="">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (145 samples, 0.03%)</title><rect x="353.8129496402887" y="1733" width="8.489208633093524" height="15.0" fill="rgb(244,107,34)" rx="2" ry="2" _orig_x="536.5" _orig_width="0.4"/>
<text x="356.8129496402887" y="1743.5" _orig_x="539.5"/>
</g>
<g class="hide">
<title>[unknown] (102 samples, 0.02%)</title><rect x="372.3" y="2037" width="0.3" height="15.0" fill="rgb(238,127,31)" rx="2" ry="2"/>
<text x="375.3" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (430 samples, 0.10%)</title><rect x="482.9" y="1781" width="1.2" height="15.0" fill="rgb(237,200,7)" rx="2" ry="2"/>
<text x="485.9" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row*&gt; (146 samples, 0.03%)</title><rect x="646.7" y="1909" width="0.4" height="15.0" fill="rgb(223,126,53)" rx="2" ry="2"/>
<text x="649.7" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="346.9" y="1845" width="0.1" height="15.0" fill="rgb(232,150,17)" rx="2" ry="2"/>
<text x="349.9" y="1855.5"/>
</g>
<g class="">
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (165 samples, 0.04%)</title><rect x="479.0287769784177" y="1765" width="8.489208633093524" height="15.0" fill="rgb(219,69,2)" rx="2" ry="2" _orig_x="542.4" _orig_width="0.4"/>
<text x="482.0287769784177" y="1775.5" _orig_x="545.4"/>
</g>
<g class="hide">
<title>[code] (512 samples, 0.12%)</title><rect x="14.2" y="1909" width="1.4" height="15.0" fill="rgb(254,156,41)" rx="2" ry="2"/>
<text x="17.2" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="48.9" y="1749" width="0.1" height="15.0" fill="rgb(246,100,16)" rx="2" ry="2"/>
<text x="51.9" y="1759.5"/>
</g>
<g class="hide">
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (73 samples, 0.02%)</title><rect x="483.8" y="1749" width="0.2" height="15.0" fill="rgb(218,114,7)" rx="2" ry="2"/>
<text x="486.8" y="1759.5"/>
</g>
<g class="">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (218 samples, 0.05%)</title><rect x="105.50359712230215" y="1733" width="12.733812949640287" height="15.0" fill="rgb(210,73,33)" rx="2" ry="2" _orig_x="524.8" _orig_width="0.6"/>
<text x="108.50359712230215" y="1743.5" _orig_x="527.8"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (140 samples, 0.03%)</title><rect x="768.5" y="2021" width="0.4" height="15.0" fill="rgb(222,15,13)" rx="2" ry="2"/>
<text x="771.5" y="2031.5"/>
</g>
<g class="hide">
<title>pa_silence_memchunk (74 samples, 0.02%)</title><rect x="83.4" y="2005" width="0.2" height="15.0" fill="rgb(247,77,37)" rx="2" ry="2"/>
<text x="86.4" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (521 samples, 0.12%)</title><rect x="460.5" y="1749" width="1.5" height="15.0" fill="rgb(242,229,49)" rx="2" ry="2"/>
<text x="463.5" y="1759.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (170 samples, 0.04%)</title><rect x="992.6258992805768" y="1797" width="8.489208633093524" height="15.0" fill="rgb(212,182,4)" rx="2" ry="2" _orig_x="566.6" _orig_width="0.4"/>
<text x="995.6258992805768" y="1807.5" _orig_x="569.6"/>
</g>
<g class="hide">
<title>BufferPoolManager::IsPageFree (365 samples, 0.08%)</title><rect x="637.1" y="1925" width="1.0" height="15.0" fill="rgb(206,80,12)" rx="2" ry="2"/>
<text x="640.1" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (105 samples, 0.02%)</title><rect x="643.8" y="1813" width="0.3" height="15.0" fill="rgb(221,145,26)" rx="2" ry="2"/>
<text x="646.8" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (41 samples, 0.01%)</title><rect x="603.0" y="1765" width="0.1" height="15.0" fill="rgb(215,153,8)" rx="2" ry="2"/>
<text x="606" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (1,259 samples, 0.29%)</title><rect x="241.0" y="1477" width="3.4" height="15.0" fill="rgb(210,141,14)" rx="2" ry="2"/>
<text x="244" y="1487.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="27.3" y="1909" width="0.1" height="15.0" fill="rgb(235,95,34)" rx="2" ry="2"/>
<text x="30.3" y="1919.5"/>
</g>
<g class="hide">
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (82 samples, 0.02%)</title><rect x="44.0" y="1861" width="0.3" height="15.0" fill="rgb(208,141,43)" rx="2" ry="2"/>
<text x="47" y="1871.5"/>
</g>
<g class="hide">
<title>tracker-store (118 samples, 0.03%)</title><rect x="1184.1" y="2053" width="0.3" height="15.0" fill="rgb(237,205,30)" rx="2" ry="2"/>
<text x="1187.1" y="2063.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (39 samples, 0.01%)</title><rect x="472.9" y="1845" width="0.1" height="15.0" fill="rgb(238,198,16)" rx="2" ry="2"/>
<text x="475.9" y="1855.5"/>
</g>
<g class="hide">
<title>EventList::internalUpdate (204 samples, 0.05%)</title><rect x="266.9" y="1925" width="0.5" height="15.0" fill="rgb(218,143,5)" rx="2" ry="2"/>
<text x="269.9" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (66 samples, 0.02%)</title><rect x="245.1" y="965" width="0.2" height="15.0" fill="rgb(228,111,53)" rx="2" ry="2"/>
<text x="248.1" y="975.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,654 samples, 1.31%)</title><rect x="717.4" y="1813" width="15.4" height="15.0" fill="rgb(209,124,25)" rx="2" ry="2"/>
<text x="720.4" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (711 samples, 0.16%)</title><rect x="408.8" y="1685" width="2.0" height="15.0" fill="rgb(245,197,25)" rx="2" ry="2"/>
<text x="411.8" y="1695.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1349" width="0.2" height="15.0" fill="rgb(207,141,40)" rx="2" ry="2"/>
<text x="30" y="1359.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (202 samples, 0.05%)</title><rect x="243.3" y="1285" width="0.6" height="15.0" fill="rgb(235,185,21)" rx="2" ry="2"/>
<text x="246.3" y="1295.5"/>
</g>
<g class="hide">
<title>[code] (118 samples, 0.03%)</title><rect x="52.4" y="1733" width="0.3" height="15.0" fill="rgb(215,10,47)" rx="2" ry="2"/>
<text x="55.4" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (187 samples, 0.04%)</title><rect x="379.8" y="2021" width="0.5" height="15.0" fill="rgb(220,130,53)" rx="2" ry="2"/>
<text x="382.8" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (3,572 samples, 0.83%)</title><rect x="238.3" y="1957" width="9.7" height="15.0" fill="rgb(238,188,48)" rx="2" ry="2"/>
<text x="241.3" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (170 samples, 0.04%)</title><rect x="244.0" y="1285" width="0.4" height="15.0" fill="rgb(218,48,0)" rx="2" ry="2"/>
<text x="247" y="1295.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (273 samples, 0.06%)</title><rect x="355.6" y="1909" width="0.8" height="15.0" fill="rgb(223,142,38)" rx="2" ry="2"/>
<text x="358.6" y="1919.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned (38 samples, 0.01%)</title><rect x="459.4" y="1813" width="0.1" height="15.0" fill="rgb(222,18,15)" rx="2" ry="2"/>
<text x="462.4" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (42 samples, 0.01%)</title><rect x="456.1" y="1749" width="0.1" height="15.0" fill="rgb(212,139,14)" rx="2" ry="2"/>
<text x="459.1" y="1759.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (1,108 samples, 0.26%)</title><rect x="774.0287769784172" y="1813" width="63.669064748201436" height="15.0" fill="rgb(238,173,50)" rx="2" ry="2" _orig_x="556.3" _orig_width="3.0"/>
<text x="777.0287769784172" y="1823.5" _orig_x="559.3">std::vec..</text>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1413" width="0.8" height="15.0" fill="rgb(206,4,6)" rx="2" ry="2"/>
<text x="57.8" y="1423.5"/>
</g>
<g class="hide">
<title>thread_native_entry (39 samples, 0.01%)</title><rect x="13.1" y="2021" width="0.1" height="15.0" fill="rgb(208,68,42)" rx="2" ry="2"/>
<text x="16.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (318 samples, 0.07%)</title><rect x="764.6" y="1749" width="0.9" height="15.0" fill="rgb(230,49,18)" rx="2" ry="2"/>
<text x="767.6" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1189" width="0.2" height="15.0" fill="rgb(220,81,53)" rx="2" ry="2"/>
<text x="247.2" y="1199.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (53 samples, 0.01%)</title><rect x="49.3" y="1909" width="0.2" height="15.0" fill="rgb(209,120,43)" rx="2" ry="2"/>
<text x="52.3" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (84 samples, 0.02%)</title><rect x="52.5" y="1701" width="0.2" height="15.0" fill="rgb(206,194,25)" rx="2" ry="2"/>
<text x="55.5" y="1711.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (93 samples, 0.02%)</title><rect x="107.62589928057601" y="1701" width="4.244604316546762" height="15.0" fill="rgb(237,104,37)" rx="2" ry="2" _orig_x="524.9" _orig_width="0.2"/>
<text x="110.62589928057601" y="1711.5" _orig_x="527.9"/>
</g>
<g class="hide">
<title>_nv009678rm (68 samples, 0.02%)</title><rect x="374.9" y="2037" width="0.2" height="15.0" fill="rgb(236,13,21)" rx="2" ry="2"/>
<text x="377.9" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,148 samples, 0.27%)</title><rect x="233.8" y="1813" width="3.2" height="15.0" fill="rgb(243,117,33)" rx="2" ry="2"/>
<text x="236.8" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="380.3" y="2037" width="0.2" height="15.0" fill="rgb(251,94,5)" rx="2" ry="2"/>
<text x="383.3" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (95 samples, 0.02%)</title><rect x="654.9" y="1877" width="0.3" height="15.0" fill="rgb(248,157,41)" rx="2" ry="2"/>
<text x="657.9" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1957" width="0.2" height="15.0" fill="rgb(207,149,9)" rx="2" ry="2"/>
<text x="36.5" y="1967.5"/>
</g>
<g class="hide">
<title>pa_cvolume_set (120 samples, 0.03%)</title><rect x="175.5" y="2005" width="0.3" height="15.0" fill="rgb(251,126,33)" rx="2" ry="2"/>
<text x="178.5" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.02%)</title><rect x="16.6" y="1973" width="0.3" height="15.0" fill="rgb(243,29,50)" rx="2" ry="2"/>
<text x="19.6" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="391.8" y="1893" width="0.2" height="15.0" fill="rgb(224,207,24)" rx="2" ry="2"/>
<text x="394.8" y="1903.5"/>
</g>
<g class="hide">
<title>__xstat64 (1,539 samples, 0.36%)</title><rect x="441.3" y="1845" width="4.2" height="15.0" fill="rgb(225,15,42)" rx="2" ry="2"/>
<text x="444.3" y="1855.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (38 samples, 0.01%)</title><rect x="358.0" y="1781" width="0.2" height="15.0" fill="rgb(234,13,27)" rx="2" ry="2"/>
<text x="361" y="1791.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (206 samples, 0.05%)</title><rect x="599.3" y="1909" width="0.6" height="15.0" fill="rgb(221,114,1)" rx="2" ry="2"/>
<text x="602.3" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1541" width="0.2" height="15.0" fill="rgb(253,216,22)" rx="2" ry="2"/>
<text x="30" y="1551.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (512 samples, 0.12%)</title><rect x="609.2" y="1781" width="1.4" height="15.0" fill="rgb(239,12,7)" rx="2" ry="2"/>
<text x="612.2" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (202 samples, 0.05%)</title><rect x="54.8" y="149" width="0.5" height="15.0" fill="rgb(215,227,5)" rx="2" ry="2"/>
<text x="57.8" y="159.5"/>
</g>
<g class="hide">
<title>[code] (39 samples, 0.01%)</title><rect x="245.7" y="1045" width="0.1" height="15.0" fill="rgb(214,214,15)" rx="2" ry="2"/>
<text x="248.7" y="1055.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="693" width="0.2" height="15.0" fill="rgb(206,114,39)" rx="2" ry="2"/>
<text x="30" y="703.5"/>
</g>
<g class="">
<title>std::__detail::_Mod_range_hashing::operator (71 samples, 0.02%)</title><rect x="334.71223021582875" y="1733" width="4.244604316546762" height="15.0" fill="rgb(210,26,38)" rx="2" ry="2" _orig_x="535.6" _orig_width="0.2"/>
<text x="337.71223021582875" y="1743.5" _orig_x="538.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (219 samples, 0.05%)</title><rect x="250.7" y="1989" width="0.6" height="15.0" fill="rgb(216,177,52)" rx="2" ry="2"/>
<text x="253.7" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (61 samples, 0.01%)</title><rect x="283.7769784172681" y="1765" width="4.244604316546762" height="15.0" fill="rgb(206,26,40)" rx="2" ry="2" _orig_x="533.2" _orig_width="0.2"/>
<text x="286.7769784172681" y="1775.5" _orig_x="536.2"/>
</g>
<g class="hide">
<title>[unknown] (128 samples, 0.03%)</title><rect x="30.4" y="2021" width="0.3" height="15.0" fill="rgb(207,154,5)" rx="2" ry="2"/>
<text x="33.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (119 samples, 0.03%)</title><rect x="622.7" y="1829" width="0.3" height="15.0" fill="rgb(230,44,24)" rx="2" ry="2"/>
<text x="625.7" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="949" width="0.2" height="15.0" fill="rgb(241,126,14)" rx="2" ry="2"/>
<text x="30" y="959.5"/>
</g>
<g class="hide">
<title>LRUReplacer::Victim (72 samples, 0.02%)</title><rect x="516.0" y="1893" width="0.2" height="15.0" fill="rgb(253,39,18)" rx="2" ry="2"/>
<text x="519" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field**, Field*&gt; (120 samples, 0.03%)</title><rect x="507.8" y="1845" width="0.3" height="15.0" fill="rgb(251,120,22)" rx="2" ry="2"/>
<text x="510.8" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (38 samples, 0.01%)</title><rect x="246.1" y="1525" width="0.2" height="15.0" fill="rgb(212,222,22)" rx="2" ry="2"/>
<text x="249.1" y="1535.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="47.3" y="1941" width="0.1" height="15.0" fill="rgb(242,72,21)" rx="2" ry="2"/>
<text x="50.3" y="1951.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (124 samples, 0.03%)</title><rect x="561.7985611510791" y="1861" width="8.489208633093524" height="15.0" fill="rgb(237,185,4)" rx="2" ry="2" _orig_x="546.3" _orig_width="0.4"/>
<text x="564.7985611510791" y="1871.5" _orig_x="549.3"/>
</g>
<g class="hide">
<title>Update_Runs_Swi (643 samples, 0.15%)</title><rect x="47.4" y="2053" width="1.8" height="15.0" fill="rgb(229,12,36)" rx="2" ry="2"/>
<text x="50.4" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.02%)</title><rect x="347.9" y="1957" width="0.2" height="15.0" fill="rgb(226,7,37)" rx="2" ry="2"/>
<text x="350.9" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.02%)</title><rect x="248.4" y="1829" width="0.2" height="15.0" fill="rgb(246,208,4)" rx="2" ry="2"/>
<text x="251.4" y="1839.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (256 samples, 0.06%)</title><rect x="357.5" y="1989" width="0.7" height="15.0" fill="rgb(249,2,24)" rx="2" ry="2"/>
<text x="360.5" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (257 samples, 0.06%)</title><rect x="794.5" y="1685" width="0.7" height="15.0" fill="rgb(235,100,44)" rx="2" ry="2"/>
<text x="797.5" y="1695.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (316 samples, 0.07%)</title><rect x="246.1" y="1685" width="0.8" height="15.0" fill="rgb(242,66,43)" rx="2" ry="2"/>
<text x="249.1" y="1695.5"/>
</g>
<g class="hide">
<title>[code] (44 samples, 0.01%)</title><rect x="246.1" y="1541" width="0.2" height="15.0" fill="rgb(238,118,44)" rx="2" ry="2"/>
<text x="249.1" y="1551.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (107 samples, 0.02%)</title><rect x="364.2" y="2021" width="0.3" height="15.0" fill="rgb(244,65,13)" rx="2" ry="2"/>
<text x="367.2" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (62 samples, 0.01%)</title><rect x="245.7" y="1157" width="0.1" height="15.0" fill="rgb(246,40,4)" rx="2" ry="2"/>
<text x="248.7" y="1167.5"/>
</g>
<g class="hide">
<title>pa_memblockq_peek (88 samples, 0.02%)</title><rect x="80.8" y="2005" width="0.2" height="15.0" fill="rgb(235,220,7)" rx="2" ry="2"/>
<text x="83.8" y="2015.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (90 samples, 0.02%)</title><rect x="643.3" y="1861" width="0.2" height="15.0" fill="rgb(234,43,22)" rx="2" ry="2"/>
<text x="646.3" y="1871.5"/>
</g>
<g class="hide">
<title>TypeChar::CompareLessThan (99 samples, 0.02%)</title><rect x="452.4" y="1861" width="0.3" height="15.0" fill="rgb(219,78,39)" rx="2" ry="2"/>
<text x="455.4" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (105 samples, 0.02%)</title><rect x="54.8" y="69" width="0.3" height="15.0" fill="rgb(213,82,1)" rx="2" ry="2"/>
<text x="57.8" y="79.5"/>
</g>
<g class="hide">
<title>[github-desktop] (44 samples, 0.01%)</title><rect x="354.5" y="1941" width="0.1" height="15.0" fill="rgb(232,93,10)" rx="2" ry="2"/>
<text x="357.5" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1317" width="0.2" height="15.0" fill="rgb(227,142,50)" rx="2" ry="2"/>
<text x="30" y="1327.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="796.3" y="2021" width="0.1" height="15.0" fill="rgb(241,74,5)" rx="2" ry="2"/>
<text x="799.3" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (182 samples, 0.04%)</title><rect x="20.8" y="1845" width="0.5" height="15.0" fill="rgb(233,164,42)" rx="2" ry="2"/>
<text x="23.8" y="1855.5"/>
</g>
<g class="hide">
<title>snd_pcm_status (152 samples, 0.04%)</title><rect x="185.5" y="2021" width="0.5" height="15.0" fill="rgb(251,51,2)" rx="2" ry="2"/>
<text x="188.5" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (55 samples, 0.01%)</title><rect x="419.7" y="1685" width="0.1" height="15.0" fill="rgb(219,222,8)" rx="2" ry="2"/>
<text x="422.7" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.02%)</title><rect x="32.8" y="2005" width="0.3" height="15.0" fill="rgb(226,72,10)" rx="2" ry="2"/>
<text x="35.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.02%)</title><rect x="1178.5" y="1557" width="0.3" height="15.0" fill="rgb(221,42,4)" rx="2" ry="2"/>
<text x="1181.5" y="1567.5"/>
</g>
<g class="hide">
<title>[code] (1,429 samples, 0.33%)</title><rect x="240.7" y="1525" width="3.9" height="15.0" fill="rgb(216,142,32)" rx="2" ry="2"/>
<text x="243.7" y="1535.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (89 samples, 0.02%)</title><rect x="496.2" y="1813" width="0.3" height="15.0" fill="rgb(205,38,24)" rx="2" ry="2"/>
<text x="499.2" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1077" width="0.2" height="15.0" fill="rgb(224,125,35)" rx="2" ry="2"/>
<text x="30" y="1087.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.04%)</title><rect x="48.5" y="1909" width="0.5" height="15.0" fill="rgb(222,147,2)" rx="2" ry="2"/>
<text x="51.5" y="1919.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (164 samples, 0.04%)</title><rect x="478.8" y="1781" width="0.4" height="15.0" fill="rgb(252,91,49)" rx="2" ry="2"/>
<text x="481.8" y="1791.5"/>
</g>
<g class="">
<title>[libminisql_shared.so] (90 samples, 0.02%)</title><rect x="523.5971223021592" y="1861" width="4.244604316546762" height="15.0" fill="rgb(215,210,20)" rx="2" ry="2" _orig_x="544.5" _orig_width="0.2"/>
<text x="526.5971223021592" y="1871.5" _orig_x="547.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (71 samples, 0.02%)</title><rect x="478.5" y="1797" width="0.1" height="15.0" fill="rgb(251,12,0)" rx="2" ry="2"/>
<text x="481.5" y="1807.5"/>
</g>
<g class="hide">
<title>azx_get_position (2,339 samples, 0.54%)</title><rect x="164.0" y="1845" width="6.4" height="15.0" fill="rgb(246,226,16)" rx="2" ry="2"/>
<text x="167" y="1855.5"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (74 samples, 0.02%)</title><rect x="247.5" y="1685" width="0.2" height="15.0" fill="rgb(230,34,13)" rx="2" ry="2"/>
<text x="250.5" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="47.3" y="2021" width="0.1" height="15.0" fill="rgb(223,49,41)" rx="2" ry="2"/>
<text x="50.3" y="2031.5"/>
</g>
<g class="hide">
<title>pa_asyncmsgq_read_after_poll (79 samples, 0.02%)</title><rect x="77.2" y="2005" width="0.2" height="15.0" fill="rgb(246,168,54)" rx="2" ry="2"/>
<text x="80.2" y="2015.5"/>
</g>
<g class="hide">
<title>operator new (42 samples, 0.01%)</title><rect x="470.8" y="1829" width="0.1" height="15.0" fill="rgb(218,212,40)" rx="2" ry="2"/>
<text x="473.8" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (253 samples, 0.06%)</title><rect x="52.1" y="1925" width="0.7" height="15.0" fill="rgb(213,61,42)" rx="2" ry="2"/>
<text x="55.1" y="1935.5"/>
</g>
<g class="hide">
<title>BLeafEntry::operator= (175 samples, 0.04%)</title><rect x="412.4" y="1909" width="0.5" height="15.0" fill="rgb(254,225,39)" rx="2" ry="2"/>
<text x="415.4" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (83 samples, 0.02%)</title><rect x="373.9" y="2037" width="0.2" height="15.0" fill="rgb(227,166,21)" rx="2" ry="2"/>
<text x="376.9" y="2047.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (174 samples, 0.04%)</title><rect x="244.0" y="1413" width="0.4" height="15.0" fill="rgb(207,198,18)" rx="2" ry="2"/>
<text x="247" y="1423.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (72 samples, 0.02%)</title><rect x="247.5" y="1557" width="0.2" height="15.0" fill="rgb(238,190,4)" rx="2" ry="2"/>
<text x="250.5" y="1567.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,204 samples, 0.28%)</title><rect x="301.1" y="1669" width="3.3" height="15.0" fill="rgb(244,82,52)" rx="2" ry="2"/>
<text x="304.1" y="1679.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (82 samples, 0.02%)</title><rect x="727.3381294964042" y="1813" width="6.366906474820143" height="15.0" fill="rgb(230,146,9)" rx="2" ry="2" _orig_x="554.1" _orig_width="0.3"/>
<text x="730.3381294964042" y="1823.5" _orig_x="557.1"/>
</g>
<g class="hide">
<title>BPlusTreePage::GetKeySize (96 samples, 0.02%)</title><rect x="513.3" y="1893" width="0.3" height="15.0" fill="rgb(247,22,10)" rx="2" ry="2"/>
<text x="516.3" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="341.0" y="1877" width="0.1" height="15.0" fill="rgb(211,117,28)" rx="2" ry="2"/>
<text x="344" y="1887.5"/>
</g>
<g class="hide">
<title>pulseaudio (111 samples, 0.03%)</title><rect x="796.1" y="2053" width="0.3" height="15.0" fill="rgb(247,146,24)" rx="2" ry="2"/>
<text x="799.1" y="2063.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (770 samples, 0.18%)</title><rect x="465.5" y="1749" width="2.1" height="15.0" fill="rgb(231,194,8)" rx="2" ry="2"/>
<text x="468.5" y="1759.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (64 samples, 0.01%)</title><rect x="460.7" y="1733" width="0.1" height="15.0" fill="rgb(210,17,5)" rx="2" ry="2"/>
<text x="463.7" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,594 samples, 1.99%)</title><rect x="213.5" y="2005" width="23.5" height="15.0" fill="rgb(225,148,28)" rx="2" ry="2"/>
<text x="216.5" y="2015.5">[..</text>
</g>
<g class="hide">
<title>snd_pcm_mmap_commit (96 samples, 0.02%)</title><rect x="116.7" y="2005" width="0.2" height="15.0" fill="rgb(211,191,16)" rx="2" ry="2"/>
<text x="119.7" y="2015.5"/>
</g>
<g class="hide">
<title>runtime.mstart.abi0 (76 samples, 0.02%)</title><rect x="340.7" y="2021" width="0.2" height="15.0" fill="rgb(209,75,12)" rx="2" ry="2"/>
<text x="343.7" y="2031.5"/>
</g>
<g class="">
<title>[libminisql_shared.so] (42 samples, 0.01%)</title><rect x="324.10071942446183" y="1765" width="2.122302158273381" height="15.0" fill="rgb(220,60,42)" rx="2" ry="2" _orig_x="535.1" _orig_width="0.1"/>
<text x="327.10071942446183" y="1775.5" _orig_x="538.1"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,632 samples, 2.93%)</title><rect x="1092.9" y="1781" width="34.5" height="15.0" fill="rgb(226,149,4)" rx="2" ry="2"/>
<text x="1095.9" y="1791.5">[[k..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.03%)</title><rect x="206.3" y="1893" width="0.4" height="15.0" fill="rgb(214,46,5)" rx="2" ry="2"/>
<text x="209.3" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (135 samples, 0.03%)</title><rect x="639.1" y="1893" width="0.4" height="15.0" fill="rgb(251,126,7)" rx="2" ry="2"/>
<text x="642.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (37 samples, 0.01%)</title><rect x="246.1" y="1461" width="0.2" height="15.0" fill="rgb(220,20,29)" rx="2" ry="2"/>
<text x="249.1" y="1471.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (489 samples, 0.11%)</title><rect x="488.8" y="1829" width="1.4" height="15.0" fill="rgb(242,136,0)" rx="2" ry="2"/>
<text x="491.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,904 samples, 2.53%)</title><rect x="86.6" y="1989" width="29.8" height="15.0" fill="rgb(219,131,16)" rx="2" ry="2"/>
<text x="89.6" y="1999.5">[[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,573 samples, 0.36%)</title><rect x="406.5" y="1749" width="4.3" height="15.0" fill="rgb(250,39,38)" rx="2" ry="2"/>
<text x="409.5" y="1759.5"/>
</g>
<g class="hide">
<title>[github-desktop] (42 samples, 0.01%)</title><rect x="354.5" y="1877" width="0.1" height="15.0" fill="rgb(216,75,33)" rx="2" ry="2"/>
<text x="357.5" y="1887.5"/>
</g>
<g class="hide">
<title>ntfs_attr_pread (107 samples, 0.02%)</title><rect x="790.5" y="2037" width="0.3" height="15.0" fill="rgb(250,138,23)" rx="2" ry="2"/>
<text x="793.5" y="2047.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::UnpinPage (234 samples, 0.05%)</title><rect x="517.4" y="1909" width="0.7" height="15.0" fill="rgb(237,208,2)" rx="2" ry="2"/>
<text x="520.4" y="1919.5"/>
</g>
<g class="hide">
<title>std::__1::condition_variable::__do_timed_wait (41 samples, 0.01%)</title><rect x="336.7" y="1989" width="0.1" height="15.0" fill="rgb(213,223,50)" rx="2" ry="2"/>
<text x="339.7" y="1999.5"/>
</g>
<g class="hide">
<title>Monitor_File_Ti (39 samples, 0.01%)</title><rect x="30.0" y="2053" width="0.1" height="15.0" fill="rgb(220,67,47)" rx="2" ry="2"/>
<text x="33" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,877 samples, 2.29%)</title><rect x="89.4" y="1957" width="27.0" height="15.0" fill="rgb(249,87,51)" rx="2" ry="2"/>
<text x="92.4" y="1967.5">[[..</text>
</g>
<g class="hide">
<title>[code] (114 samples, 0.03%)</title><rect x="209.4" y="1669" width="0.3" height="15.0" fill="rgb(254,185,28)" rx="2" ry="2"/>
<text x="212.4" y="1679.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (192 samples, 0.04%)</title><rect x="638.3" y="1893" width="0.5" height="15.0" fill="rgb(211,76,41)" rx="2" ry="2"/>
<text x="641.3" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (927 samples, 0.21%)</title><rect x="53.8" y="2037" width="2.5" height="15.0" fill="rgb(208,102,6)" rx="2" ry="2"/>
<text x="56.8" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (68 samples, 0.02%)</title><rect x="460.2" y="1733" width="0.2" height="15.0" fill="rgb(216,144,21)" rx="2" ry="2"/>
<text x="463.2" y="1743.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (74 samples, 0.02%)</title><rect x="485.3" y="1813" width="0.2" height="15.0" fill="rgb(220,194,43)" rx="2" ry="2"/>
<text x="488.3" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (250 samples, 0.06%)</title><rect x="249.2" y="1877" width="0.7" height="15.0" fill="rgb(223,75,26)" rx="2" ry="2"/>
<text x="252.2" y="1887.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (597 samples, 0.14%)</title><rect x="632.0" y="1829" width="1.6" height="15.0" fill="rgb(215,102,2)" rx="2" ry="2"/>
<text x="635" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.02%)</title><rect x="364.5" y="1989" width="0.2" height="15.0" fill="rgb(234,8,41)" rx="2" ry="2"/>
<text x="367.5" y="1999.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (458 samples, 0.11%)</title><rect x="466.0" y="1733" width="1.2" height="15.0" fill="rgb(217,114,39)" rx="2" ry="2"/>
<text x="469" y="1743.5"/>
</g>
<g class="hide">
<title>ntfs_inode_close (82 samples, 0.02%)</title><rect x="778.0" y="2021" width="0.2" height="15.0" fill="rgb(218,72,40)" rx="2" ry="2"/>
<text x="781" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="245.7" y="1077" width="0.1" height="15.0" fill="rgb(216,93,3)" rx="2" ry="2"/>
<text x="248.7" y="1087.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,979 samples, 0.69%)</title><rect x="402.6" y="1861" width="8.2" height="15.0" fill="rgb(217,146,24)" rx="2" ry="2"/>
<text x="405.6" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="32.9" y="1861" width="0.2" height="15.0" fill="rgb(243,123,10)" rx="2" ry="2"/>
<text x="35.9" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,277 samples, 0.30%)</title><rect x="126.3" y="1925" width="3.5" height="15.0" fill="rgb(227,97,9)" rx="2" ry="2"/>
<text x="129.3" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="357" width="0.8" height="15.0" fill="rgb(224,89,46)" rx="2" ry="2"/>
<text x="57.8" y="367.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="797.8" y="2005" width="0.1" height="15.0" fill="rgb(221,194,53)" rx="2" ry="2"/>
<text x="800.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (511 samples, 0.12%)</title><rect x="1187.0" y="1893" width="1.4" height="15.0" fill="rgb(214,73,14)" rx="2" ry="2"/>
<text x="1190" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (47 samples, 0.01%)</title><rect x="244.0" y="933" width="0.1" height="15.0" fill="rgb(228,170,52)" rx="2" ry="2"/>
<text x="247" y="943.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (66 samples, 0.02%)</title><rect x="22.1" y="1989" width="0.2" height="15.0" fill="rgb(233,24,22)" rx="2" ry="2"/>
<text x="25.1" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,988 samples, 1.39%)</title><rect x="716.5" y="1829" width="16.3" height="15.0" fill="rgb(220,21,47)" rx="2" ry="2"/>
<text x="719.5" y="1839.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (192 samples, 0.04%)</title><rect x="637.4" y="1877" width="0.5" height="15.0" fill="rgb(209,20,43)" rx="2" ry="2"/>
<text x="640.4" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="13.0" y="1941" width="0.1" height="15.0" fill="rgb(228,124,3)" rx="2" ry="2"/>
<text x="16" y="1951.5"/>
</g>
<g class="">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (243 samples, 0.06%)</title><rect x="122.48201438849064" y="1749" width="14.856115107913666" height="15.0" fill="rgb(246,85,30)" rx="2" ry="2" _orig_x="525.6" _orig_width="0.7"/>
<text x="125.48201438849064" y="1759.5" _orig_x="528.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1925" width="0.2" height="15.0" fill="rgb(215,160,17)" rx="2" ry="2"/>
<text x="36.5" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="245.1" y="917" width="0.2" height="15.0" fill="rgb(246,173,6)" rx="2" ry="2"/>
<text x="248.1" y="927.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="14.0" y="1941" width="0.1" height="15.0" fill="rgb(245,152,20)" rx="2" ry="2"/>
<text x="17" y="1951.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (38 samples, 0.01%)</title><rect x="474.4" y="1829" width="0.1" height="15.0" fill="rgb(241,151,7)" rx="2" ry="2"/>
<text x="477.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="47.8" y="1941" width="0.5" height="15.0" fill="rgb(216,118,54)" rx="2" ry="2"/>
<text x="50.8" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (96 samples, 0.02%)</title><rect x="243.0" y="837" width="0.3" height="15.0" fill="rgb(237,161,25)" rx="2" ry="2"/>
<text x="246" y="847.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (63 samples, 0.01%)</title><rect x="469.1" y="1749" width="0.1" height="15.0" fill="rgb(217,73,24)" rx="2" ry="2"/>
<text x="472.1" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (242 samples, 0.06%)</title><rect x="54.8" y="213" width="0.6" height="15.0" fill="rgb(230,51,25)" rx="2" ry="2"/>
<text x="57.8" y="223.5"/>
</g>
<g class="hide">
<title>[unknown] (701 samples, 0.16%)</title><rect x="369.3" y="2037" width="1.9" height="15.0" fill="rgb(229,93,21)" rx="2" ry="2"/>
<text x="372.3" y="2047.5"/>
</g>
<g class="hide">
<title>Image_Animator (1,131 samples, 0.26%)</title><rect x="23.7" y="2053" width="3.1" height="15.0" fill="rgb(242,22,2)" rx="2" ry="2"/>
<text x="26.7" y="2063.5"/>
</g>
<g class="hide">
<title>pa_hashmap_iterate (432 samples, 0.10%)</title><rect x="192.2" y="2037" width="1.2" height="15.0" fill="rgb(231,42,9)" rx="2" ry="2"/>
<text x="195.2" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (74 samples, 0.02%)</title><rect x="484.1" y="1797" width="0.2" height="15.0" fill="rgb(228,103,16)" rx="2" ry="2"/>
<text x="487.1" y="1807.5"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (45 samples, 0.01%)</title><rect x="358.4" y="2021" width="0.1" height="15.0" fill="rgb(209,192,49)" rx="2" ry="2"/>
<text x="361.4" y="2031.5"/>
</g>
<g class="hide">
<title>start_thread (43 samples, 0.01%)</title><rect x="22.4" y="2037" width="0.2" height="15.0" fill="rgb(252,66,7)" rx="2" ry="2"/>
<text x="25.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (134 samples, 0.03%)</title><rect x="448.5" y="1845" width="0.4" height="15.0" fill="rgb(209,62,49)" rx="2" ry="2"/>
<text x="451.5" y="1855.5"/>
</g>
<g class="hide">
<title>runtime.notetsleep (42 samples, 0.01%)</title><rect x="340.7" y="1957" width="0.1" height="15.0" fill="rgb(247,194,15)" rx="2" ry="2"/>
<text x="343.7" y="1967.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (256 samples, 0.06%)</title><rect x="357.5" y="1957" width="0.7" height="15.0" fill="rgb(226,117,45)" rx="2" ry="2"/>
<text x="360.5" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,727 samples, 0.40%)</title><rect x="406.0" y="1765" width="4.8" height="15.0" fill="rgb(225,224,2)" rx="2" ry="2"/>
<text x="409" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (46 samples, 0.01%)</title><rect x="244.3" y="613" width="0.1" height="15.0" fill="rgb(249,7,25)" rx="2" ry="2"/>
<text x="247.3" y="623.5"/>
</g>
<g class="hide">
<title>[code] (1,065 samples, 0.25%)</title><rect x="41.4" y="2021" width="2.9" height="15.0" fill="rgb(249,50,26)" rx="2" ry="2"/>
<text x="44.4" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="50.3" y="1925" width="0.1" height="15.0" fill="rgb(232,173,28)" rx="2" ry="2"/>
<text x="53.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="15.9" y="1781" width="0.1" height="15.0" fill="rgb(251,168,31)" rx="2" ry="2"/>
<text x="18.9" y="1791.5"/>
</g>
<g class="hide">
<title>os::PlatformEvent::park (45 samples, 0.01%)</title><rect x="37.6" y="1973" width="0.1" height="15.0" fill="rgb(254,208,20)" rx="2" ry="2"/>
<text x="40.6" y="1983.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (49 samples, 0.01%)</title><rect x="507.2" y="1861" width="0.1" height="15.0" fill="rgb(222,186,40)" rx="2" ry="2"/>
<text x="510.2" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (603 samples, 0.14%)</title><rect x="241.7" y="1221" width="1.6" height="15.0" fill="rgb(231,171,16)" rx="2" ry="2"/>
<text x="244.7" y="1231.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (44 samples, 0.01%)</title><rect x="13.7" y="1829" width="0.1" height="15.0" fill="rgb(233,45,32)" rx="2" ry="2"/>
<text x="16.7" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (45,338 samples, 10.50%)</title><rect x="62.9" y="2037" width="124.0" height="15.0" fill="rgb(214,140,43)" rx="2" ry="2"/>
<text x="65.9" y="2047.5">[unknown] </text>
</g>
<g class="hide">
<title>[code] (278 samples, 0.06%)</title><rect x="41.5" y="1845" width="0.8" height="15.0" fill="rgb(243,140,7)" rx="2" ry="2"/>
<text x="44.5" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (523 samples, 0.12%)</title><rect x="353.1" y="1909" width="1.4" height="15.0" fill="rgb(219,202,49)" rx="2" ry="2"/>
<text x="356.1" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="949" width="0.2" height="15.0" fill="rgb(228,63,54)" rx="2" ry="2"/>
<text x="247.2" y="959.5"/>
</g>
<g class="hide">
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (45 samples, 0.01%)</title><rect x="620.5" y="1781" width="0.1" height="15.0" fill="rgb(240,27,33)" rx="2" ry="2"/>
<text x="623.5" y="1791.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (684 samples, 0.16%)</title><rect x="1011.7266187050368" y="1845" width="40.323741007194236" height="15.0" fill="rgb(242,137,25)" rx="2" ry="2" _orig_x="567.5" _orig_width="1.9"/>
<text x="1014.7266187050368" y="1855.5" _orig_x="570.5">std:..</text>
</g>
<g class="hide">
<title>[unknown] (54 samples, 0.01%)</title><rect x="706.8" y="1941" width="0.1" height="15.0" fill="rgb(243,92,22)" rx="2" ry="2"/>
<text x="709.8" y="1951.5"/>
</g>
<g class="hide">
<title>snd_pcm_avail (185 samples, 0.04%)</title><rect x="184.2" y="2021" width="0.5" height="15.0" fill="rgb(241,109,17)" rx="2" ry="2"/>
<text x="187.2" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.02%)</title><rect x="366.9" y="1973" width="0.2" height="15.0" fill="rgb(224,4,29)" rx="2" ry="2"/>
<text x="369.9" y="1983.5"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (39 samples, 0.01%)</title><rect x="345.8" y="2037" width="0.1" height="15.0" fill="rgb(229,161,17)" rx="2" ry="2"/>
<text x="348.8" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (56 samples, 0.01%)</title><rect x="28.2" y="2005" width="0.2" height="15.0" fill="rgb(228,89,5)" rx="2" ry="2"/>
<text x="31.2" y="2015.5"/>
</g>
<g class="hide">
<title>ntfs_mft_records_write (98 samples, 0.02%)</title><rect x="791.4" y="2037" width="0.3" height="15.0" fill="rgb(214,44,49)" rx="2" ry="2"/>
<text x="794.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="347.9" y="1941" width="0.2" height="15.0" fill="rgb(242,126,39)" rx="2" ry="2"/>
<text x="350.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="346.8" y="1941" width="0.2" height="15.0" fill="rgb(219,153,34)" rx="2" ry="2"/>
<text x="349.8" y="1951.5"/>
</g>
<g class="hide">
<title>Thread::call_run (39 samples, 0.01%)</title><rect x="22.8" y="2005" width="0.1" height="15.0" fill="rgb(229,162,31)" rx="2" ry="2"/>
<text x="25.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111 samples, 0.03%)</title><rect x="48.7" y="1829" width="0.3" height="15.0" fill="rgb(215,154,39)" rx="2" ry="2"/>
<text x="51.7" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (475 samples, 0.11%)</title><rect x="664.6" y="1941" width="1.3" height="15.0" fill="rgb(206,169,25)" rx="2" ry="2"/>
<text x="667.6" y="1951.5"/>
</g>
<g class="hide">
<title>TableHeap::MarkDelete (199 samples, 0.05%)</title><rect x="657.7" y="1973" width="0.6" height="15.0" fill="rgb(241,195,3)" rx="2" ry="2"/>
<text x="660.7" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1077" width="0.8" height="15.0" fill="rgb(238,169,44)" rx="2" ry="2"/>
<text x="57.8" y="1087.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (324 samples, 0.08%)</title><rect x="619.8" y="1829" width="0.8" height="15.0" fill="rgb(246,203,7)" rx="2" ry="2"/>
<text x="622.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (54 samples, 0.01%)</title><rect x="15.5" y="1653" width="0.1" height="15.0" fill="rgb(227,225,33)" rx="2" ry="2"/>
<text x="18.5" y="1663.5"/>
</g>
<g class="hide">
<title>[unknown] (82 samples, 0.02%)</title><rect x="373.1" y="2037" width="0.3" height="15.0" fill="rgb(211,175,16)" rx="2" ry="2"/>
<text x="376.1" y="2047.5"/>
</g>
<g class="hide">
<title>__strlen_avx2 (38 samples, 0.01%)</title><rect x="343.3" y="2021" width="0.1" height="15.0" fill="rgb(205,148,44)" rx="2" ry="2"/>
<text x="346.3" y="2031.5"/>
</g>
<g class="">
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (112 samples, 0.03%)</title><rect x="873.7769784172671" y="1765" width="6.366906474820143" height="15.0" fill="rgb(251,217,3)" rx="2" ry="2" _orig_x="561.0" _orig_width="0.3"/>
<text x="876.7769784172671" y="1775.5" _orig_x="564"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="13.0" y="1957" width="0.1" height="15.0" fill="rgb(211,105,38)" rx="2" ry="2"/>
<text x="16" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.03%)</title><rect x="383.6" y="1957" width="0.3" height="15.0" fill="rgb(230,178,24)" rx="2" ry="2"/>
<text x="386.6" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (54 samples, 0.01%)</title><rect x="641.4" y="1909" width="0.2" height="15.0" fill="rgb(245,41,23)" rx="2" ry="2"/>
<text x="644.4" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="250.2" y="1797" width="0.1" height="15.0" fill="rgb(220,225,3)" rx="2" ry="2"/>
<text x="253.2" y="1807.5"/>
</g>
<g class="hide">
<title>__ceilf_sse41 (54 samples, 0.01%)</title><rect x="272.4" y="1957" width="0.2" height="15.0" fill="rgb(225,119,39)" rx="2" ry="2"/>
<text x="275.4" y="1967.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (144 samples, 0.03%)</title><rect x="589.6" y="1797" width="0.4" height="15.0" fill="rgb(216,11,20)" rx="2" ry="2"/>
<text x="592.6" y="1807.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (71 samples, 0.02%)</title><rect x="792.9" y="1957" width="0.2" height="15.0" fill="rgb(224,146,10)" rx="2" ry="2"/>
<text x="795.9" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.03%)</title><rect x="15.3" y="1861" width="0.3" height="15.0" fill="rgb(232,47,23)" rx="2" ry="2"/>
<text x="18.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23,504 samples, 5.44%)</title><rect x="1063.6" y="1877" width="64.2" height="15.0" fill="rgb(246,138,30)" rx="2" ry="2"/>
<text x="1066.6" y="1887.5">[[kernel..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="15.8" y="1797" width="0.2" height="15.0" fill="rgb(206,222,47)" rx="2" ry="2"/>
<text x="18.8" y="1807.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (38 samples, 0.01%)</title><rect x="481.1" y="1765" width="0.1" height="15.0" fill="rgb(241,193,28)" rx="2" ry="2"/>
<text x="484.1" y="1775.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (520 samples, 0.12%)</title><rect x="852.5539568345332" y="1797" width="29.712230215827333" height="15.0" fill="rgb(239,31,7)" rx="2" ry="2" _orig_x="560.0" _orig_width="1.4"/>
<text x="855.5539568345332" y="1807.5" _orig_x="563">st..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,044 samples, 2.56%)</title><rect x="274.2" y="1941" width="30.2" height="15.0" fill="rgb(224,117,8)" rx="2" ry="2"/>
<text x="277.2" y="1951.5">[[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="348.0" y="1877" width="0.1" height="15.0" fill="rgb(252,32,9)" rx="2" ry="2"/>
<text x="351" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="1188.2" y="1781" width="0.2" height="15.0" fill="rgb(213,9,26)" rx="2" ry="2"/>
<text x="1191.2" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (194 samples, 0.04%)</title><rect x="383.4" y="2005" width="0.5" height="15.0" fill="rgb(207,204,13)" rx="2" ry="2"/>
<text x="386.4" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (1,472 samples, 0.34%)</title><rect x="240.6" y="1541" width="4.0" height="15.0" fill="rgb(227,40,20)" rx="2" ry="2"/>
<text x="243.6" y="1551.5"/>
</g>
<g class="hide">
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (73 samples, 0.02%)</title><rect x="629.6" y="1861" width="0.2" height="15.0" fill="rgb(237,134,20)" rx="2" ry="2"/>
<text x="632.6" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (53 samples, 0.01%)</title><rect x="248.4" y="1733" width="0.1" height="15.0" fill="rgb(246,83,20)" rx="2" ry="2"/>
<text x="251.4" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.03%)</title><rect x="237.4" y="1861" width="0.4" height="15.0" fill="rgb(205,110,11)" rx="2" ry="2"/>
<text x="240.4" y="1871.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (2,282 samples, 0.53%)</title><rect x="464.3" y="1813" width="6.2" height="15.0" fill="rgb(242,84,38)" rx="2" ry="2"/>
<text x="467.3" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (249 samples, 0.06%)</title><rect x="20.6" y="1957" width="0.7" height="15.0" fill="rgb(244,202,25)" rx="2" ry="2"/>
<text x="23.6" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (317 samples, 0.07%)</title><rect x="303.5" y="1621" width="0.9" height="15.0" fill="rgb(254,133,26)" rx="2" ry="2"/>
<text x="306.5" y="1631.5"/>
</g>
<g class="hide">
<title>[unknown] (53 samples, 0.01%)</title><rect x="345.7" y="2021" width="0.1" height="15.0" fill="rgb(209,26,52)" rx="2" ry="2"/>
<text x="348.7" y="2031.5"/>
</g>
<g class="hide">
<title>pool-tracker-ex (44 samples, 0.01%)</title><rect x="795.7" y="2053" width="0.1" height="15.0" fill="rgb(214,162,2)" rx="2" ry="2"/>
<text x="798.7" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,034 samples, 0.70%)</title><rect x="757.2" y="1797" width="8.3" height="15.0" fill="rgb(229,129,18)" rx="2" ry="2"/>
<text x="760.2" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="207.0" y="1909" width="0.2" height="15.0" fill="rgb(214,119,33)" rx="2" ry="2"/>
<text x="210" y="1919.5"/>
</g>
<g class="hide">
<title>pa_once_begin (53 samples, 0.01%)</title><rect x="81.7" y="2005" width="0.2" height="15.0" fill="rgb(236,163,2)" rx="2" ry="2"/>
<text x="84.7" y="2015.5"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (43 samples, 0.01%)</title><rect x="175.4" y="2005" width="0.1" height="15.0" fill="rgb(245,75,20)" rx="2" ry="2"/>
<text x="178.4" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (174 samples, 0.04%)</title><rect x="19.8" y="1653" width="0.4" height="15.0" fill="rgb(234,124,28)" rx="2" ry="2"/>
<text x="22.8" y="1663.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (186 samples, 0.04%)</title><rect x="243.4" y="1061" width="0.5" height="15.0" fill="rgb(249,125,1)" rx="2" ry="2"/>
<text x="246.4" y="1071.5"/>
</g>
<g class="hide">
<title>[code] (251 samples, 0.06%)</title><rect x="52.1" y="1909" width="0.7" height="15.0" fill="rgb(242,183,28)" rx="2" ry="2"/>
<text x="55.1" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="27.0" y="261" width="0.2" height="15.0" fill="rgb(216,154,20)" rx="2" ry="2"/>
<text x="30" y="271.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (248 samples, 0.06%)</title><rect x="23.7" y="2037" width="0.6" height="15.0" fill="rgb(246,63,22)" rx="2" ry="2"/>
<text x="26.7" y="2047.5"/>
</g>
<g class="hide">
<title>GangWorker::loop (56 samples, 0.01%)</title><rect x="21.6" y="1989" width="0.2" height="15.0" fill="rgb(246,113,17)" rx="2" ry="2"/>
<text x="24.6" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (288 samples, 0.07%)</title><rect x="665.1" y="1909" width="0.8" height="15.0" fill="rgb(208,21,14)" rx="2" ry="2"/>
<text x="668.1" y="1919.5"/>
</g>
<g class="hide">
<title>do_pcm_hwsync (85 samples, 0.02%)</title><rect x="134.7" y="1925" width="0.2" height="15.0" fill="rgb(215,66,53)" rx="2" ry="2"/>
<text x="137.7" y="1935.5"/>
</g>
<g class="hide">
<title>VMThread::loop (50 samples, 0.01%)</title><rect x="49.8" y="1973" width="0.1" height="15.0" fill="rgb(217,90,3)" rx="2" ry="2"/>
<text x="52.8" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (42 samples, 0.01%)</title><rect x="244.0" y="725" width="0.1" height="15.0" fill="rgb(250,226,42)" rx="2" ry="2"/>
<text x="247" y="735.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (69 samples, 0.02%)</title><rect x="494.7" y="1861" width="0.2" height="15.0" fill="rgb(252,54,25)" rx="2" ry="2"/>
<text x="497.7" y="1871.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (113 samples, 0.03%)</title><rect x="426.8" y="1765" width="0.3" height="15.0" fill="rgb(245,109,30)" rx="2" ry="2"/>
<text x="429.8" y="1775.5"/>
</g>
<g class="hide">
<title>DiskManager::ReadPage (1,747 samples, 0.40%)</title><rect x="441.0" y="1877" width="4.8" height="15.0" fill="rgb(239,219,7)" rx="2" ry="2"/>
<text x="444" y="1887.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (50 samples, 0.01%)</title><rect x="456.4" y="1717" width="0.1" height="15.0" fill="rgb(228,38,24)" rx="2" ry="2"/>
<text x="459.4" y="1727.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (98 samples, 0.02%)</title><rect x="181.90647482014435" y="1749" width="4.244604316546762" height="15.0" fill="rgb(219,142,15)" rx="2" ry="2" _orig_x="528.4" _orig_width="0.2"/>
<text x="184.90647482014435" y="1759.5" _orig_x="531.4"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="391.6" y="1941" width="0.2" height="15.0" fill="rgb(232,60,27)" rx="2" ry="2"/>
<text x="394.6" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="12.9" y="2005" width="0.2" height="15.0" fill="rgb(220,190,39)" rx="2" ry="2"/>
<text x="15.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,390 samples, 0.32%)</title><rect x="781.1" y="2021" width="3.8" height="15.0" fill="rgb(209,226,46)" rx="2" ry="2"/>
<text x="784.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (487 samples, 0.11%)</title><rect x="39.6" y="1973" width="1.3" height="15.0" fill="rgb(218,54,14)" rx="2" ry="2"/>
<text x="42.6" y="1983.5"/>
</g>
<g class="hide">
<title>[libalsa-util.so] (1,012 samples, 0.23%)</title><rect x="57.5" y="2037" width="2.7" height="15.0" fill="rgb(244,148,4)" rx="2" ry="2"/>
<text x="60.5" y="2047.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (58 samples, 0.01%)</title><rect x="590.6" y="1861" width="0.2" height="15.0" fill="rgb(224,35,42)" rx="2" ry="2"/>
<text x="593.6" y="1871.5"/>
</g>
<g class="hide">
<title>pa_memblock_ref (104 samples, 0.02%)</title><rect x="80.3" y="2005" width="0.2" height="15.0" fill="rgb(210,49,30)" rx="2" ry="2"/>
<text x="83.3" y="2015.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (246 samples, 0.06%)</title><rect x="638.2" y="1925" width="0.6" height="15.0" fill="rgb(219,139,50)" rx="2" ry="2"/>
<text x="641.2" y="1935.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (322 samples, 0.07%)</title><rect x="448.9" y="1877" width="0.8" height="15.0" fill="rgb(234,164,49)" rx="2" ry="2"/>
<text x="451.9" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="798.0" y="1909" width="0.2" height="15.0" fill="rgb(233,199,26)" rx="2" ry="2"/>
<text x="801" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (173 samples, 0.04%)</title><rect x="606.3" y="1749" width="0.5" height="15.0" fill="rgb(211,158,11)" rx="2" ry="2"/>
<text x="609.3" y="1759.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="965" width="0.2" height="15.0" fill="rgb(232,136,39)" rx="2" ry="2"/>
<text x="30" y="975.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (312 samples, 0.07%)</title><rect x="448.9" y="1861" width="0.8" height="15.0" fill="rgb(222,16,52)" rx="2" ry="2"/>
<text x="451.9" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.04%)</title><rect x="47.8" y="1925" width="0.5" height="15.0" fill="rgb(216,226,8)" rx="2" ry="2"/>
<text x="50.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (41 samples, 0.01%)</title><rect x="599.6" y="1829" width="0.1" height="15.0" fill="rgb(226,141,38)" rx="2" ry="2"/>
<text x="602.6" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.02%)</title><rect x="237.9" y="1877" width="0.2" height="15.0" fill="rgb(254,51,49)" rx="2" ry="2"/>
<text x="240.9" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.02%)</title><rect x="46.9" y="1877" width="0.3" height="15.0" fill="rgb(240,72,3)" rx="2" ry="2"/>
<text x="49.9" y="1887.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (2,061 samples, 0.48%)</title><rect x="628.8" y="1893" width="5.6" height="15.0" fill="rgb(208,162,46)" rx="2" ry="2"/>
<text x="631.8" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (173 samples, 0.04%)</title><rect x="48.5" y="1877" width="0.5" height="15.0" fill="rgb(245,195,45)" rx="2" ry="2"/>
<text x="51.5" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="392.0" y="2021" width="0.2" height="15.0" fill="rgb(254,79,0)" rx="2" ry="2"/>
<text x="395" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,115 samples, 1.18%)</title><rect x="223.0" y="1893" width="14.0" height="15.0" fill="rgb(249,99,20)" rx="2" ry="2"/>
<text x="226" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="32.5" y="1893" width="0.2" height="15.0" fill="rgb(237,39,53)" rx="2" ry="2"/>
<text x="35.5" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (99 samples, 0.02%)</title><rect x="29.1" y="2021" width="0.2" height="15.0" fill="rgb(213,218,27)" rx="2" ry="2"/>
<text x="32.1" y="2031.5"/>
</g>
<g class="hide">
<title>pa_bytes_to_usec (116 samples, 0.03%)</title><rect x="78.1" y="2005" width="0.3" height="15.0" fill="rgb(208,43,36)" rx="2" ry="2"/>
<text x="81.1" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="392.0" y="1813" width="0.1" height="15.0" fill="rgb(215,227,20)" rx="2" ry="2"/>
<text x="395" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (48 samples, 0.01%)</title><rect x="244.3" y="645" width="0.1" height="15.0" fill="rgb(205,215,14)" rx="2" ry="2"/>
<text x="247.3" y="655.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (90 samples, 0.02%)</title><rect x="612.7338129496421" y="1861" width="6.366906474820143" height="15.0" fill="rgb(235,78,50)" rx="2" ry="2" _orig_x="548.7" _orig_width="0.3"/>
<text x="615.7338129496421" y="1871.5" _orig_x="551.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (37 samples, 0.01%)</title><rect x="27.3" y="1877" width="0.1" height="15.0" fill="rgb(235,203,19)" rx="2" ry="2"/>
<text x="30.3" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (796 samples, 0.18%)</title><rect x="18.2" y="1813" width="2.2" height="15.0" fill="rgb(232,197,5)" rx="2" ry="2"/>
<text x="21.2" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (252 samples, 0.06%)</title><rect x="40.2" y="1845" width="0.7" height="15.0" fill="rgb(237,224,9)" rx="2" ry="2"/>
<text x="43.2" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="515.7" y="1653" width="0.1" height="15.0" fill="rgb(210,165,15)" rx="2" ry="2"/>
<text x="518.7" y="1663.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (264 samples, 0.06%)</title><rect x="647.3" y="1813" width="0.7" height="15.0" fill="rgb(205,5,31)" rx="2" ry="2"/>
<text x="650.3" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (298 samples, 0.07%)</title><rect x="54.8" y="309" width="0.8" height="15.0" fill="rgb(216,3,40)" rx="2" ry="2"/>
<text x="57.8" y="319.5"/>
</g>
<g class="">
<title>TypeFloat::DeserializeFrom (2,399 samples, 0.56%)</title><rect x="162.8057553956844" y="1845" width="137.94964028776977" height="15.0" fill="rgb(221,68,20)" rx="2" ry="2" _orig_x="527.5" _orig_width="6.5"/>
<text x="165.8057553956844" y="1855.5" _orig_x="530.5">TypeFloat::Deseriali..</text>
</g>
<g class="hide">
<title>[code] (208 samples, 0.05%)</title><rect x="19.7" y="1669" width="0.6" height="15.0" fill="rgb(234,105,12)" rx="2" ry="2"/>
<text x="22.7" y="1679.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (98 samples, 0.02%)</title><rect x="707.7" y="1989" width="0.3" height="15.0" fill="rgb(214,99,33)" rx="2" ry="2"/>
<text x="710.7" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="243.7" y="933" width="0.2" height="15.0" fill="rgb(231,189,39)" rx="2" ry="2"/>
<text x="246.7" y="943.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="370.7" y="1989" width="0.1" height="15.0" fill="rgb(217,178,12)" rx="2" ry="2"/>
<text x="373.7" y="1999.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (86 samples, 0.02%)</title><rect x="431.3" y="1845" width="0.3" height="15.0" fill="rgb(236,196,37)" rx="2" ry="2"/>
<text x="434.3" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="373.4" y="1973" width="0.1" height="15.0" fill="rgb(214,26,8)" rx="2" ry="2"/>
<text x="376.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="40.7" y="1797" width="0.2" height="15.0" fill="rgb(242,5,4)" rx="2" ry="2"/>
<text x="43.7" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (251 samples, 0.06%)</title><rect x="382.7" y="2005" width="0.7" height="15.0" fill="rgb(228,80,21)" rx="2" ry="2"/>
<text x="385.7" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (213 samples, 0.05%)</title><rect x="244.9" y="1461" width="0.6" height="15.0" fill="rgb(231,149,16)" rx="2" ry="2"/>
<text x="247.9" y="1471.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="795.2" y="1893" width="0.1" height="15.0" fill="rgb(250,41,13)" rx="2" ry="2"/>
<text x="798.2" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,330 samples, 0.31%)</title><rect x="407.1" y="1733" width="3.7" height="15.0" fill="rgb(207,216,13)" rx="2" ry="2"/>
<text x="410.1" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="33.6" y="1797" width="0.1" height="15.0" fill="rgb(212,118,5)" rx="2" ry="2"/>
<text x="36.6" y="1807.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="246.3" y="1493" width="0.1" height="15.0" fill="rgb(219,180,32)" rx="2" ry="2"/>
<text x="249.3" y="1503.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="372.3" y="1925" width="0.2" height="15.0" fill="rgb(223,184,43)" rx="2" ry="2"/>
<text x="375.3" y="1935.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (143 samples, 0.03%)</title><rect x="787.2" y="2037" width="0.4" height="15.0" fill="rgb(211,87,1)" rx="2" ry="2"/>
<text x="790.2" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (172 samples, 0.04%)</title><rect x="244.0" y="1333" width="0.4" height="15.0" fill="rgb(244,11,50)" rx="2" ry="2"/>
<text x="247" y="1343.5"/>
</g>
<g class="hide">
<title>[code] (998 samples, 0.23%)</title><rect x="241.2" y="1429" width="2.7" height="15.0" fill="rgb(231,205,52)" rx="2" ry="2"/>
<text x="244.2" y="1439.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (49 samples, 0.01%)</title><rect x="486.0" y="1829" width="0.1" height="15.0" fill="rgb(240,146,46)" rx="2" ry="2"/>
<text x="489" y="1839.5"/>
</g>
<g class="hide">
<title>Row::~Row (62 samples, 0.01%)</title><rect x="595.4" y="1909" width="0.2" height="15.0" fill="rgb(222,190,37)" rx="2" ry="2"/>
<text x="598.4" y="1919.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (241 samples, 0.06%)</title><rect x="244.8" y="1509" width="0.7" height="15.0" fill="rgb(208,84,23)" rx="2" ry="2"/>
<text x="247.8" y="1519.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (2,028 samples, 0.47%)</title><rect x="615.9" y="1861" width="5.5" height="15.0" fill="rgb(221,113,38)" rx="2" ry="2"/>
<text x="618.9" y="1871.5"/>
</g>
<g class="hide">
<title>ntfs_index_lookup (78 samples, 0.02%)</title><rect x="777.8" y="2021" width="0.2" height="15.0" fill="rgb(213,88,2)" rx="2" ry="2"/>
<text x="780.8" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="965" width="0.8" height="15.0" fill="rgb(227,21,21)" rx="2" ry="2"/>
<text x="57.8" y="975.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,151 samples, 0.73%)</title><rect x="1170.2" y="1765" width="8.6" height="15.0" fill="rgb(226,42,45)" rx="2" ry="2"/>
<text x="1173.2" y="1775.5"/>
</g>
<g class="hide">
<title>__GI___execve (131 samples, 0.03%)</title><rect x="237.4" y="2037" width="0.4" height="15.0" fill="rgb(247,220,34)" rx="2" ry="2"/>
<text x="240.4" y="2047.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::GetEntrySize (285 samples, 0.07%)</title><rect x="438.3" y="1877" width="0.8" height="15.0" fill="rgb(205,91,46)" rx="2" ry="2"/>
<text x="441.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (194 samples, 0.04%)</title><rect x="796.7" y="1973" width="0.5" height="15.0" fill="rgb(225,152,34)" rx="2" ry="2"/>
<text x="799.7" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-3666.map] (79 samples, 0.02%)</title><rect x="358.0" y="1893" width="0.2" height="15.0" fill="rgb(237,216,7)" rx="2" ry="2"/>
<text x="361" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (598 samples, 0.14%)</title><rect x="731.2" y="1685" width="1.6" height="15.0" fill="rgb(208,61,43)" rx="2" ry="2"/>
<text x="734.2" y="1695.5"/>
</g>
<g class="hide">
<title>v8::Object::Set (45 samples, 0.01%)</title><rect x="248.6" y="1893" width="0.2" height="15.0" fill="rgb(221,32,29)" rx="2" ry="2"/>
<text x="251.6" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="380.2" y="1877" width="0.1" height="15.0" fill="rgb(228,167,53)" rx="2" ry="2"/>
<text x="383.2" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.03%)</title><rect x="381.4" y="1893" width="0.3" height="15.0" fill="rgb(235,144,37)" rx="2" ry="2"/>
<text x="384.4" y="1903.5"/>
</g>
<g class="hide">
<title>GC_Thread#6 (49 samples, 0.01%)</title><rect x="22.6" y="2053" width="0.1" height="15.0" fill="rgb(209,110,10)" rx="2" ry="2"/>
<text x="25.6" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (54 samples, 0.01%)</title><rect x="706.8" y="1925" width="0.1" height="15.0" fill="rgb(237,212,25)" rx="2" ry="2"/>
<text x="709.8" y="1935.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (112 samples, 0.03%)</title><rect x="588.3" y="1749" width="0.3" height="15.0" fill="rgb(237,75,32)" rx="2" ry="2"/>
<text x="591.3" y="1759.5"/>
</g>
<g class="hide">
<title>__libc_recvmsg (76 samples, 0.02%)</title><rect x="366.9" y="2037" width="0.2" height="15.0" fill="rgb(211,188,10)" rx="2" ry="2"/>
<text x="369.9" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (473 samples, 0.11%)</title><rect x="242.0" y="1141" width="1.3" height="15.0" fill="rgb(214,40,28)" rx="2" ry="2"/>
<text x="245" y="1151.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.02%)</title><rect x="206.9" y="1957" width="0.3" height="15.0" fill="rgb(232,194,43)" rx="2" ry="2"/>
<text x="209.9" y="1967.5"/>
</g>
<g class="hide">
<title>snd_pcm_update_hw_ptr (9,852 samples, 2.28%)</title><rect x="135.0" y="1893" width="27.0" height="15.0" fill="rgb(254,66,37)" rx="2" ry="2"/>
<text x="138" y="1903.5">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,400 samples, 2.41%)</title><rect x="276.0" y="1877" width="28.4" height="15.0" fill="rgb(215,199,0)" rx="2" ry="2"/>
<text x="279" y="1887.5">[[..</text>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (49 samples, 0.01%)</title><rect x="635.6" y="1861" width="0.1" height="15.0" fill="rgb(236,27,0)" rx="2" ry="2"/>
<text x="638.6" y="1871.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1573" width="0.2" height="15.0" fill="rgb(251,83,10)" rx="2" ry="2"/>
<text x="249.9" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="388.5" y="2005" width="0.5" height="15.0" fill="rgb(249,217,45)" rx="2" ry="2"/>
<text x="391.5" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (46 samples, 0.01%)</title><rect x="392.0" y="1877" width="0.1" height="15.0" fill="rgb(245,144,42)" rx="2" ry="2"/>
<text x="395" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="342.6" y="1925" width="0.2" height="15.0" fill="rgb(246,205,4)" rx="2" ry="2"/>
<text x="345.6" y="1935.5"/>
</g>
<g class="hide">
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (64 samples, 0.01%)</title><rect x="577.7" y="1829" width="0.2" height="15.0" fill="rgb(210,83,43)" rx="2" ry="2"/>
<text x="580.7" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (791 samples, 0.18%)</title><rect x="396.0" y="1877" width="2.1" height="15.0" fill="rgb(223,206,45)" rx="2" ry="2"/>
<text x="399" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (648 samples, 0.15%)</title><rect x="338.0" y="1957" width="1.7" height="15.0" fill="rgb(217,153,16)" rx="2" ry="2"/>
<text x="341" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="342.5" y="1909" width="0.1" height="15.0" fill="rgb(217,183,42)" rx="2" ry="2"/>
<text x="345.5" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="997" width="0.1" height="15.0" fill="rgb(224,179,38)" rx="2" ry="2"/>
<text x="247" y="1007.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (3,502 samples, 0.81%)</title><rect x="476.0" y="1829" width="9.5" height="15.0" fill="rgb(238,169,3)" rx="2" ry="2"/>
<text x="479" y="1839.5"/>
</g>
<g class="hide">
<title>Row::GetField (121 samples, 0.03%)</title><rect x="575.9" y="1893" width="0.4" height="15.0" fill="rgb(221,199,41)" rx="2" ry="2"/>
<text x="578.9" y="1903.5"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (54 samples, 0.01%)</title><rect x="361.4" y="2005" width="0.2" height="15.0" fill="rgb(209,185,44)" rx="2" ry="2"/>
<text x="364.4" y="2015.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (250 samples, 0.06%)</title><rect x="249.2" y="1893" width="0.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2"/>
<text x="252.2" y="1903.5"/>
</g>
<g class="hide">
<title>Schema::GetColumnCount (43 samples, 0.01%)</title><rect x="612.7" y="1877" width="0.1" height="15.0" fill="rgb(212,67,29)" rx="2" ry="2"/>
<text x="615.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,527 samples, 0.35%)</title><rect x="441.3" y="1829" width="4.2" height="15.0" fill="rgb(253,120,15)" rx="2" ry="2"/>
<text x="444.3" y="1839.5"/>
</g>
<g class="hide">
<title>snd_ctl_elem_user_get (108 samples, 0.03%)</title><rect x="133.1" y="1941" width="0.3" height="15.0" fill="rgb(239,158,11)" rx="2" ry="2"/>
<text x="136.1" y="1951.5"/>
</g>
<g class="hide">
<title>v8::internal::Object::GetProperty (61 samples, 0.01%)</title><rect x="244.2" y="1221" width="0.2" height="15.0" fill="rgb(217,142,25)" rx="2" ry="2"/>
<text x="247.2" y="1231.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="391.8" y="2021" width="0.2" height="15.0" fill="rgb(211,185,11)" rx="2" ry="2"/>
<text x="394.8" y="2031.5"/>
</g>
<g class="hide">
<title>ntfs_attr_open (138 samples, 0.03%)</title><rect x="775.5" y="2021" width="0.4" height="15.0" fill="rgb(211,100,11)" rx="2" ry="2"/>
<text x="778.5" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (73 samples, 0.02%)</title><rect x="247.5" y="1573" width="0.2" height="15.0" fill="rgb(209,41,15)" rx="2" ry="2"/>
<text x="250.5" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,505 samples, 1.97%)</title><rect x="709.6" y="1957" width="23.2" height="15.0" fill="rgb(248,73,7)" rx="2" ry="2"/>
<text x="712.6" y="1967.5">[..</text>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (371 samples, 0.09%)</title><rect x="634.8" y="1893" width="1.0" height="15.0" fill="rgb(234,187,0)" rx="2" ry="2"/>
<text x="637.8" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91,201 samples, 21.12%)</title><rect x="878.6" y="1925" width="249.2" height="15.0" fill="rgb(206,157,2)" rx="2" ry="2"/>
<text x="881.6" y="1935.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,597 samples, 0.37%)</title><rect x="232.6" y="1829" width="4.4" height="15.0" fill="rgb(227,97,2)" rx="2" ry="2"/>
<text x="235.6" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1,230 samples, 0.28%)</title><rect x="630.5" y="1845" width="3.3" height="15.0" fill="rgb(232,97,38)" rx="2" ry="2"/>
<text x="633.5" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (562 samples, 0.13%)</title><rect x="659.0" y="1973" width="1.6" height="15.0" fill="rgb(220,229,48)" rx="2" ry="2"/>
<text x="662" y="1983.5"/>
</g>
<g class="hide">
<title>snd_pcm_stream_lock_irq (59 samples, 0.01%)</title><rect x="115.5" y="1925" width="0.2" height="15.0" fill="rgb(205,72,41)" rx="2" ry="2"/>
<text x="118.5" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,535 samples, 0.82%)</title><rect x="227.3" y="1861" width="9.7" height="15.0" fill="rgb(248,166,13)" rx="2" ry="2"/>
<text x="230.3" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="20.0" y="1621" width="0.2" height="15.0" fill="rgb(237,108,39)" rx="2" ry="2"/>
<text x="23" y="1631.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (177 samples, 0.04%)</title><rect x="584.7" y="1765" width="0.5" height="15.0" fill="rgb(232,90,4)" rx="2" ry="2"/>
<text x="587.7" y="1775.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (225 samples, 0.05%)</title><rect x="941.6906474820162" y="1861" width="12.733812949640287" height="15.0" fill="rgb(223,113,12)" rx="2" ry="2" _orig_x="564.2" _orig_width="0.6"/>
<text x="944.6906474820162" y="1871.5" _orig_x="567.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,074 samples, 0.48%)</title><rect x="405.1" y="1813" width="5.7" height="15.0" fill="rgb(226,197,12)" rx="2" ry="2"/>
<text x="408.1" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (230 samples, 0.05%)</title><rect x="250.6" y="2005" width="0.7" height="15.0" fill="rgb(226,59,51)" rx="2" ry="2"/>
<text x="253.6" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (74 samples, 0.02%)</title><rect x="247.5" y="1653" width="0.2" height="15.0" fill="rgb(244,134,24)" rx="2" ry="2"/>
<text x="250.5" y="1663.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (122 samples, 0.03%)</title><rect x="237.0" y="1989" width="0.4" height="15.0" fill="rgb(210,1,47)" rx="2" ry="2"/>
<text x="240" y="1999.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (161 samples, 0.04%)</title><rect x="517.6" y="1893" width="0.5" height="15.0" fill="rgb(226,204,29)" rx="2" ry="2"/>
<text x="520.6" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="1189.2" y="1989" width="0.1" height="15.0" fill="rgb(213,166,11)" rx="2" ry="2"/>
<text x="1192.2" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (90 samples, 0.02%)</title><rect x="16.1" y="1829" width="0.3" height="15.0" fill="rgb(221,69,0)" rx="2" ry="2"/>
<text x="19.1" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (62 samples, 0.01%)</title><rect x="488.5" y="1797" width="0.1" height="15.0" fill="rgb(224,109,43)" rx="2" ry="2"/>
<text x="491.5" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (216 samples, 0.05%)</title><rect x="48.4" y="2005" width="0.6" height="15.0" fill="rgb(238,207,45)" rx="2" ry="2"/>
<text x="51.4" y="2015.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::SimpleMemHeap (565 samples, 0.13%)</title><rect x="576.7" y="1877" width="1.5" height="15.0" fill="rgb(232,96,41)" rx="2" ry="2"/>
<text x="579.7" y="1887.5"/>
</g>
<g class="hide">
<title>Parker::park (43 samples, 0.01%)</title><rect x="46.3" y="1973" width="0.1" height="15.0" fill="rgb(231,157,20)" rx="2" ry="2"/>
<text x="49.3" y="1983.5"/>
</g>
<g class="hide">
<title>Schema::GetColumnCount (38 samples, 0.01%)</title><rect x="594.3" y="1893" width="0.1" height="15.0" fill="rgb(205,74,28)" rx="2" ry="2"/>
<text x="597.3" y="1903.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (45 samples, 0.01%)</title><rect x="638.6" y="1845" width="0.2" height="15.0" fill="rgb(208,216,4)" rx="2" ry="2"/>
<text x="641.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (44 samples, 0.01%)</title><rect x="796.3" y="1989" width="0.1" height="15.0" fill="rgb(206,139,8)" rx="2" ry="2"/>
<text x="799.3" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (930 samples, 0.22%)</title><rect x="41.5" y="1861" width="2.5" height="15.0" fill="rgb(225,8,11)" rx="2" ry="2"/>
<text x="44.5" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (48 samples, 0.01%)</title><rect x="795.9" y="2037" width="0.1" height="15.0" fill="rgb(215,11,34)" rx="2" ry="2"/>
<text x="798.9" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1237" width="0.8" height="15.0" fill="rgb(247,150,25)" rx="2" ry="2"/>
<text x="57.8" y="1247.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,483 samples, 2.43%)</title><rect x="275.8" y="1893" width="28.6" height="15.0" fill="rgb(209,88,45)" rx="2" ry="2"/>
<text x="278.8" y="1903.5">[[..</text>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (43 samples, 0.01%)</title><rect x="648.4" y="1781" width="0.1" height="15.0" fill="rgb(253,130,45)" rx="2" ry="2"/>
<text x="651.4" y="1791.5"/>
</g>
<g class="hide">
<title>[unknown] (374 samples, 0.09%)</title><rect x="398.2" y="2005" width="1.0" height="15.0" fill="rgb(215,153,52)" rx="2" ry="2"/>
<text x="401.2" y="2015.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (66 samples, 0.02%)</title><rect x="357.6" y="1909" width="0.2" height="15.0" fill="rgb(223,12,26)" rx="2" ry="2"/>
<text x="360.6" y="1919.5"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (72 samples, 0.02%)</title><rect x="11.9" y="1989" width="0.2" height="15.0" fill="rgb(221,202,31)" rx="2" ry="2"/>
<text x="14.9" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.02%)</title><rect x="32.8" y="1909" width="0.3" height="15.0" fill="rgb(240,152,54)" rx="2" ry="2"/>
<text x="35.8" y="1919.5"/>
</g>
<g class="hide">
<title>pthread_cond_wait@@GLIBC_2.3.2 (99 samples, 0.02%)</title><rect x="12.6" y="2021" width="0.3" height="15.0" fill="rgb(245,165,7)" rx="2" ry="2"/>
<text x="15.6" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139,101 samples, 32.22%)</title><rect x="798.6" y="2037" width="380.2" height="15.0" fill="rgb(224,162,47)" rx="2" ry="2"/>
<text x="801.6" y="2047.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>pa_sink_check_type (83 samples, 0.02%)</title><rect x="83.9" y="2005" width="0.2" height="15.0" fill="rgb(251,221,42)" rx="2" ry="2"/>
<text x="86.9" y="2015.5"/>
</g>
<g class="hide">
<title>GC_Thread#1 (46 samples, 0.01%)</title><rect x="21.8" y="2053" width="0.1" height="15.0" fill="rgb(224,215,48)" rx="2" ry="2"/>
<text x="24.8" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (73 samples, 0.02%)</title><rect x="245.6" y="1445" width="0.2" height="15.0" fill="rgb(222,66,49)" rx="2" ry="2"/>
<text x="248.6" y="1455.5"/>
</g>
<g class="hide">
<title>[unknown] (378 samples, 0.09%)</title><rect x="54.6" y="1973" width="1.0" height="15.0" fill="rgb(254,150,15)" rx="2" ry="2"/>
<text x="57.6" y="1983.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (351 samples, 0.08%)</title><rect x="654.8" y="1925" width="1.0" height="15.0" fill="rgb(251,87,17)" rx="2" ry="2"/>
<text x="657.8" y="1935.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (79 samples, 0.02%)</title><rect x="774.0" y="2021" width="0.2" height="15.0" fill="rgb(243,51,43)" rx="2" ry="2"/>
<text x="777" y="2031.5"/>
</g>
<g class="hide">
<title>DedicatedWorker (42 samples, 0.01%)</title><rect x="21.4" y="2053" width="0.1" height="15.0" fill="rgb(217,148,9)" rx="2" ry="2"/>
<text x="24.4" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.04%)</title><rect x="364.9" y="1957" width="0.4" height="15.0" fill="rgb(214,80,51)" rx="2" ry="2"/>
<text x="367.9" y="1967.5"/>
</g>
<g class="hide">
<title>_int_malloc (54 samples, 0.01%)</title><rect x="349.6" y="2037" width="0.2" height="15.0" fill="rgb(238,14,21)" rx="2" ry="2"/>
<text x="352.6" y="2047.5"/>
</g>
<g class="hide">
<title>IndexKey::DeserializeToKey (44 samples, 0.01%)</title><rect x="518.3" y="1909" width="0.1" height="15.0" fill="rgb(234,16,5)" rx="2" ry="2"/>
<text x="521.3" y="1919.5"/>
</g>
<g class="hide">
<title>Field::IsNull (43 samples, 0.01%)</title><rect x="519.6" y="1877" width="0.1" height="15.0" fill="rgb(210,46,11)" rx="2" ry="2"/>
<text x="522.6" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,657 samples, 0.38%)</title><rect x="1174.2" y="1701" width="4.6" height="15.0" fill="rgb(234,106,25)" rx="2" ry="2"/>
<text x="1177.2" y="1711.5"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="270.5" y="1925" width="0.2" height="15.0" fill="rgb(251,0,29)" rx="2" ry="2"/>
<text x="273.5" y="1935.5"/>
</g>
<g class="hide">
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (93 samples, 0.02%)</title><rect x="585.2" y="1765" width="0.3" height="15.0" fill="rgb(234,91,15)" rx="2" ry="2"/>
<text x="588.2" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,827 samples, 0.42%)</title><rect x="405.8" y="1781" width="5.0" height="15.0" fill="rgb(230,175,24)" rx="2" ry="2"/>
<text x="408.8" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (301 samples, 0.07%)</title><rect x="317.8" y="1813" width="0.8" height="15.0" fill="rgb(223,20,5)" rx="2" ry="2"/>
<text x="320.8" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.02%)</title><rect x="245.6" y="1365" width="0.2" height="15.0" fill="rgb(248,60,45)" rx="2" ry="2"/>
<text x="248.6" y="1375.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (42 samples, 0.01%)</title><rect x="32.3" y="1797" width="0.1" height="15.0" fill="rgb(253,115,31)" rx="2" ry="2"/>
<text x="35.3" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (299 samples, 0.07%)</title><rect x="54.8" y="437" width="0.8" height="15.0" fill="rgb(246,6,9)" rx="2" ry="2"/>
<text x="57.8" y="447.5"/>
</g>
<g class="">
<title>std::fill_n&lt;char*, unsigned long, char&gt; (310 samples, 0.07%)</title><rect x="1030.8273381294966" y="1781" width="16.978417266187048" height="15.0" fill="rgb(224,4,47)" rx="2" ry="2" _orig_x="568.4" _orig_width="0.8"/>
<text x="1033.8273381294966" y="1791.5" _orig_x="571.4"/>
</g>
<g class="">
<title>TypeChar::DeserializeFrom (1,419 samples, 0.33%)</title><rect x="80.03597122302303" y="1845" width="82.76978417266186" height="15.0" fill="rgb(250,171,17)" rx="2" ry="2" _orig_x="523.6" _orig_width="3.9"/>
<text x="83.03597122302303" y="1855.5" _orig_x="526.6">TypeChar:..</text>
</g>
<g class="hide">
<title>SimBridge::WdbCircularBuffer::canRead (81 samples, 0.02%)</title><rect x="1184.8" y="2005" width="0.2" height="15.0" fill="rgb(211,139,44)" rx="2" ry="2"/>
<text x="1187.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="12.6" y="2005" width="0.3" height="15.0" fill="rgb(205,56,20)" rx="2" ry="2"/>
<text x="15.6" y="2015.5"/>
</g>
<g class="hide">
<title>_int_free (1,026 samples, 0.24%)</title><rect x="392.6" y="2021" width="2.8" height="15.0" fill="rgb(230,27,38)" rx="2" ry="2"/>
<text x="395.6" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (60 samples, 0.01%)</title><rect x="645.8" y="1829" width="0.2" height="15.0" fill="rgb(232,194,15)" rx="2" ry="2"/>
<text x="648.8" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (257 samples, 0.06%)</title><rect x="52.1" y="1989" width="0.7" height="15.0" fill="rgb(223,57,45)" rx="2" ry="2"/>
<text x="55.1" y="1999.5"/>
</g>
<g class="hide">
<title>__libc_start_main (893 samples, 0.21%)</title><rect x="792.9" y="2037" width="2.4" height="15.0" fill="rgb(220,167,25)" rx="2" ry="2"/>
<text x="795.9" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (347 samples, 0.08%)</title><rect x="242.4" y="1077" width="0.9" height="15.0" fill="rgb(222,183,35)" rx="2" ry="2"/>
<text x="245.4" y="1087.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (103 samples, 0.02%)</title><rect x="706.5" y="1989" width="0.2" height="15.0" fill="rgb(217,108,41)" rx="2" ry="2"/>
<text x="709.5" y="1999.5"/>
</g>
<g class="hide">
<title>[Xorg] (70 samples, 0.02%)</title><rect x="53.9" y="2021" width="0.2" height="15.0" fill="rgb(249,19,3)" rx="2" ry="2"/>
<text x="56.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.02%)</title><rect x="391.8" y="1989" width="0.2" height="15.0" fill="rgb(208,159,51)" rx="2" ry="2"/>
<text x="394.8" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (89 samples, 0.02%)</title><rect x="245.6" y="1621" width="0.2" height="15.0" fill="rgb(218,31,3)" rx="2" ry="2"/>
<text x="248.6" y="1631.5"/>
</g>
<g class="hide">
<title>runtime.schedule (153 samples, 0.04%)</title><rect x="341.0" y="1941" width="0.4" height="15.0" fill="rgb(211,175,22)" rx="2" ry="2"/>
<text x="344" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (218 samples, 0.05%)</title><rect x="242.7" y="1029" width="0.6" height="15.0" fill="rgb(250,41,19)" rx="2" ry="2"/>
<text x="245.7" y="1039.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,747 samples, 1.33%)</title><rect x="681.9" y="1973" width="15.7" height="15.0" fill="rgb(215,65,12)" rx="2" ry="2"/>
<text x="684.9" y="1983.5"/>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (323 samples, 0.07%)</title><rect x="597.1" y="1893" width="0.9" height="15.0" fill="rgb(242,120,28)" rx="2" ry="2"/>
<text x="600.1" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (80 samples, 0.02%)</title><rect x="245.1" y="1093" width="0.2" height="15.0" fill="rgb(245,59,50)" rx="2" ry="2"/>
<text x="248.1" y="1103.5"/>
</g>
<g class="hide">
<title>[code] (173 samples, 0.04%)</title><rect x="51.3" y="1797" width="0.4" height="15.0" fill="rgb(237,19,20)" rx="2" ry="2"/>
<text x="54.3" y="1807.5"/>
</g>
<g class="hide">
<title>pa_asyncq_pop (73 samples, 0.02%)</title><rect x="173.9" y="2021" width="0.2" height="15.0" fill="rgb(221,121,18)" rx="2" ry="2"/>
<text x="176.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.02%)</title><rect x="15.7" y="1845" width="0.3" height="15.0" fill="rgb(229,80,30)" rx="2" ry="2"/>
<text x="18.7" y="1855.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__rehash (101 samples, 0.02%)</title><rect x="305.5" y="1941" width="0.3" height="15.0" fill="rgb(248,40,51)" rx="2" ry="2"/>
<text x="308.5" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (601 samples, 0.14%)</title><rect x="1125.5" y="1653" width="1.6" height="15.0" fill="rgb(254,24,30)" rx="2" ry="2"/>
<text x="1128.5" y="1663.5"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.02%)</title><rect x="27.0" y="1941" width="0.2" height="15.0" fill="rgb(217,87,20)" rx="2" ry="2"/>
<text x="30" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="32.2" y="1829" width="0.2" height="15.0" fill="rgb(241,203,50)" rx="2" ry="2"/>
<text x="35.2" y="1839.5"/>
</g>
<g class="hide">
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (93 samples, 0.02%)</title><rect x="517.0" y="1813" width="0.3" height="15.0" fill="rgb(247,173,41)" rx="2" ry="2"/>
<text x="520" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (444 samples, 0.10%)</title><rect x="593.1" y="1861" width="1.2" height="15.0" fill="rgb(244,73,36)" rx="2" ry="2"/>
<text x="596.1" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (101 samples, 0.02%)</title><rect x="450.7" y="1861" width="0.3" height="15.0" fill="rgb(230,43,48)" rx="2" ry="2"/>
<text x="453.7" y="1871.5"/>
</g>
<g class="hide">
<title>expressvpnd (109 samples, 0.03%)</title><rect x="344.2" y="2053" width="0.3" height="15.0" fill="rgb(254,109,43)" rx="2" ry="2"/>
<text x="347.2" y="2063.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (61 samples, 0.01%)</title><rect x="268.3" y="1941" width="0.2" height="15.0" fill="rgb(234,39,49)" rx="2" ry="2"/>
<text x="271.3" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.0" y="1077" width="0.1" height="15.0" fill="rgb(233,82,25)" rx="2" ry="2"/>
<text x="247" y="1087.5"/>
</g>
<g class="hide">
<title>[code] (45 samples, 0.01%)</title><rect x="52.6" y="1653" width="0.1" height="15.0" fill="rgb(240,187,17)" rx="2" ry="2"/>
<text x="55.6" y="1663.5"/>
</g>
<g class="hide">
<title>BLeafEntry::operator= (397 samples, 0.09%)</title><rect x="413.9" y="1893" width="1.1" height="15.0" fill="rgb(247,110,41)" rx="2" ry="2"/>
<text x="416.9" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (51 samples, 0.01%)</title><rect x="244.2" y="741" width="0.2" height="15.0" fill="rgb(223,66,26)" rx="2" ry="2"/>
<text x="247.2" y="751.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="243.2" y="549" width="0.1" height="15.0" fill="rgb(231,52,34)" rx="2" ry="2"/>
<text x="246.2" y="559.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (44 samples, 0.01%)</title><rect x="1177.2661870503596" y="1877" width="2.122302158273381" height="15.0" fill="rgb(249,12,5)" rx="2" ry="2" _orig_x="575.3" _orig_width="0.1"/>
<text x="1180.2661870503596" y="1887.5" _orig_x="578.3"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="27.3" y="1941" width="0.1" height="15.0" fill="rgb(205,35,45)" rx="2" ry="2"/>
<text x="30.3" y="1951.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::new_allocator (44 samples, 0.01%)</title><rect x="497.0" y="1813" width="0.1" height="15.0" fill="rgb(219,69,27)" rx="2" ry="2"/>
<text x="500" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (37 samples, 0.01%)</title><rect x="499.2" y="1797" width="0.1" height="15.0" fill="rgb(228,115,16)" rx="2" ry="2"/>
<text x="502.2" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="1184.1" y="2037" width="0.2" height="15.0" fill="rgb(238,155,42)" rx="2" ry="2"/>
<text x="1187.1" y="2047.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (46 samples, 0.01%)</title><rect x="373.4" y="2021" width="0.1" height="15.0" fill="rgb(207,142,11)" rx="2" ry="2"/>
<text x="376.4" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (303 samples, 0.07%)</title><rect x="14.5" y="1861" width="0.8" height="15.0" fill="rgb(215,184,41)" rx="2" ry="2"/>
<text x="17.5" y="1871.5"/>
</g>
<g class="hide">
<title>snd_pcm_format_physical_width (92 samples, 0.02%)</title><rect x="184.9" y="2021" width="0.3" height="15.0" fill="rgb(210,39,44)" rx="2" ry="2"/>
<text x="187.9" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (45 samples, 0.01%)</title><rect x="247.5" y="1509" width="0.2" height="15.0" fill="rgb(235,190,36)" rx="2" ry="2"/>
<text x="250.5" y="1519.5"/>
</g>
<g class="hide">
<title>ReaderWriterLatch::WLock (43 samples, 0.01%)</title><rect x="447.9" y="1861" width="0.1" height="15.0" fill="rgb(205,78,49)" rx="2" ry="2"/>
<text x="450.9" y="1871.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (364 samples, 0.08%)</title><rect x="462.0" y="1749" width="1.0" height="15.0" fill="rgb(210,104,19)" rx="2" ry="2"/>
<text x="465" y="1759.5"/>
</g>
<g class="hide">
<title>vframeStream::vframeStream (37 samples, 0.01%)</title><rect x="11.1" y="1989" width="0.1" height="15.0" fill="rgb(228,109,31)" rx="2" ry="2"/>
<text x="14.1" y="1999.5"/>
</g>
<g class="hide">
<title>pa_frame_aligned (85 samples, 0.02%)</title><rect x="191.7" y="2037" width="0.3" height="15.0" fill="rgb(210,122,3)" rx="2" ry="2"/>
<text x="194.7" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field*&gt; (78 samples, 0.02%)</title><rect x="660.8" y="1941" width="0.2" height="15.0" fill="rgb(218,94,35)" rx="2" ry="2"/>
<text x="663.8" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,553 samples, 0.82%)</title><rect x="104.2" y="1845" width="9.7" height="15.0" fill="rgb(234,220,27)" rx="2" ry="2"/>
<text x="107.2" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (1,064 samples, 0.25%)</title><rect x="41.4" y="1989" width="2.9" height="15.0" fill="rgb(245,203,12)" rx="2" ry="2"/>
<text x="44.4" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (136 samples, 0.03%)</title><rect x="16.1" y="1877" width="0.4" height="15.0" fill="rgb(218,157,54)" rx="2" ry="2"/>
<text x="19.1" y="1887.5"/>
</g>
<g class="hide">
<title>Unsafe_Park (102 samples, 0.02%)</title><rect x="46.3" y="1989" width="0.3" height="15.0" fill="rgb(217,3,39)" rx="2" ry="2"/>
<text x="49.3" y="1999.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (1,882 samples, 0.44%)</title><rect x="417.4" y="1797" width="5.2" height="15.0" fill="rgb(232,125,46)" rx="2" ry="2"/>
<text x="420.4" y="1807.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (811 samples, 0.19%)</title><rect x="190.39568345323738" y="1765" width="46.690647482014384" height="15.0" fill="rgb(207,35,14)" rx="2" ry="2" _orig_x="528.8" _orig_width="2.2"/>
<text x="193.39568345323738" y="1775.5" _orig_x="531.8">std:..</text>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (224 samples, 0.05%)</title><rect x="757.050359712231" y="1813" width="12.733812949640287" height="15.0" fill="rgb(219,137,15)" rx="2" ry="2" _orig_x="555.5" _orig_width="0.6"/>
<text x="760.050359712231" y="1823.5" _orig_x="558.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="244.2" y="821" width="0.2" height="15.0" fill="rgb(240,134,17)" rx="2" ry="2"/>
<text x="247.2" y="831.5"/>
</g>
<g class="hide">
<title>update_audio_tstamp.isra.0 (155 samples, 0.04%)</title><rect x="170.4" y="1861" width="0.4" height="15.0" fill="rgb(215,43,16)" rx="2" ry="2"/>
<text x="173.4" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (442 samples, 0.10%)</title><rect x="50.6" y="1973" width="1.2" height="15.0" fill="rgb(248,151,5)" rx="2" ry="2"/>
<text x="53.6" y="1983.5"/>
</g>
<g class="">
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (100 samples, 0.02%)</title><rect x="625.4676258992805" y="1845" width="6.366906474820143" height="15.0" fill="rgb(242,176,13)" rx="2" ry="2" _orig_x="549.3" _orig_width="0.3"/>
<text x="628.4676258992805" y="1855.5" _orig_x="552.3"/>
</g>
<g class="hide">
<title>AWT-XAWT (82 samples, 0.02%)</title><rect x="13.2" y="2053" width="0.2" height="15.0" fill="rgb(241,3,32)" rx="2" ry="2"/>
<text x="16.2" y="2063.5"/>
</g>
<g class="hide">
<title>jni_GetPrimitiveArrayCritical (46 samples, 0.01%)</title><rect x="25.9" y="1973" width="0.2" height="15.0" fill="rgb(223,85,28)" rx="2" ry="2"/>
<text x="28.9" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (66 samples, 0.02%)</title><rect x="28.4" y="2005" width="0.2" height="15.0" fill="rgb(247,145,44)" rx="2" ry="2"/>
<text x="31.4" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1237" width="0.2" height="15.0" fill="rgb(229,97,15)" rx="2" ry="2"/>
<text x="30" y="1247.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="380.2" y="1829" width="0.1" height="15.0" fill="rgb(254,97,18)" rx="2" ry="2"/>
<text x="383.2" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (99 samples, 0.02%)</title><rect x="16.1" y="1845" width="0.3" height="15.0" fill="rgb(230,115,46)" rx="2" ry="2"/>
<text x="19.1" y="1855.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (94 samples, 0.02%)</title><rect x="49.2" y="2021" width="0.3" height="15.0" fill="rgb(206,165,5)" rx="2" ry="2"/>
<text x="52.2" y="2031.5"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (53 samples, 0.01%)</title><rect x="266.7" y="1925" width="0.1" height="15.0" fill="rgb(246,182,1)" rx="2" ry="2"/>
<text x="269.7" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="249.6" y="1749" width="0.1" height="15.0" fill="rgb(230,130,10)" rx="2" ry="2"/>
<text x="252.6" y="1759.5"/>
</g>
<g class="hide">
<title>pa_sample_spec_valid (109 samples, 0.03%)</title><rect x="197.9" y="2037" width="0.3" height="15.0" fill="rgb(240,216,11)" rx="2" ry="2"/>
<text x="200.9" y="2047.5"/>
</g>
<g class="">
<title>Schema::GetColumnCount (56 samples, 0.01%)</title><rect x="1128.4532374100727" y="1877" width="2.122302158273381" height="15.0" fill="rgb(251,206,28)" rx="2" ry="2" _orig_x="573.0" _orig_width="0.1"/>
<text x="1131.4532374100727" y="1887.5" _orig_x="576"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="365.0" y="1925" width="0.3" height="15.0" fill="rgb(239,206,6)" rx="2" ry="2"/>
<text x="368" y="1935.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (69 samples, 0.02%)</title><rect x="467.0" y="1701" width="0.2" height="15.0" fill="rgb(207,112,33)" rx="2" ry="2"/>
<text x="470" y="1711.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (109 samples, 0.03%)</title><rect x="625.4" y="1829" width="0.3" height="15.0" fill="rgb(205,59,38)" rx="2" ry="2"/>
<text x="628.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,041 samples, 0.24%)</title><rect x="330.8" y="1829" width="2.9" height="15.0" fill="rgb(206,14,54)" rx="2" ry="2"/>
<text x="333.8" y="1839.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (61 samples, 0.01%)</title><rect x="502.0" y="1733" width="0.2" height="15.0" fill="rgb(253,219,10)" rx="2" ry="2"/>
<text x="505" y="1743.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (1,297 samples, 0.30%)</title><rect x="586.0" y="1813" width="3.5" height="15.0" fill="rgb(224,199,39)" rx="2" ry="2"/>
<text x="589" y="1823.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (47 samples, 0.01%)</title><rect x="605.8" y="1765" width="0.1" height="15.0" fill="rgb(248,29,48)" rx="2" ry="2"/>
<text x="608.8" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (264 samples, 0.06%)</title><rect x="449.0" y="1829" width="0.7" height="15.0" fill="rgb(237,142,26)" rx="2" ry="2"/>
<text x="452" y="1839.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (65 samples, 0.02%)</title><rect x="652.2" y="1941" width="0.2" height="15.0" fill="rgb(230,76,53)" rx="2" ry="2"/>
<text x="655.2" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,559 samples, 0.59%)</title><rect x="106.9" y="1829" width="7.0" height="15.0" fill="rgb(211,189,42)" rx="2" ry="2"/>
<text x="109.9" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="325" width="0.2" height="15.0" fill="rgb(224,40,22)" rx="2" ry="2"/>
<text x="30" y="335.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (644 samples, 0.15%)</title><rect x="384.0" y="2005" width="1.8" height="15.0" fill="rgb(226,142,13)" rx="2" ry="2"/>
<text x="387" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.04%)</title><rect x="206.2" y="1989" width="0.5" height="15.0" fill="rgb(237,34,22)" rx="2" ry="2"/>
<text x="209.2" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (54 samples, 0.01%)</title><rect x="245.2" y="837" width="0.1" height="15.0" fill="rgb(209,229,51)" rx="2" ry="2"/>
<text x="248.2" y="847.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.02%)</title><rect x="15.4" y="1717" width="0.2" height="15.0" fill="rgb(210,164,48)" rx="2" ry="2"/>
<text x="18.4" y="1727.5"/>
</g>
<g class="hide">
<title>thread_native_entry (39 samples, 0.01%)</title><rect x="22.8" y="2021" width="0.1" height="15.0" fill="rgb(244,161,21)" rx="2" ry="2"/>
<text x="25.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="380.7" y="1957" width="0.2" height="15.0" fill="rgb(236,25,23)" rx="2" ry="2"/>
<text x="383.7" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (663 samples, 0.15%)</title><rect x="208.4" y="1925" width="1.8" height="15.0" fill="rgb(223,195,5)" rx="2" ry="2"/>
<text x="211.4" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="380.2" y="1845" width="0.1" height="15.0" fill="rgb(229,16,14)" rx="2" ry="2"/>
<text x="383.2" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (802 samples, 0.19%)</title><rect x="208.2" y="2005" width="2.2" height="15.0" fill="rgb(234,54,1)" rx="2" ry="2"/>
<text x="211.2" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (105 samples, 0.02%)</title><rect x="29.6" y="2037" width="0.2" height="15.0" fill="rgb(226,88,24)" rx="2" ry="2"/>
<text x="32.6" y="2047.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (53 samples, 0.01%)</title><rect x="642.6" y="1845" width="0.2" height="15.0" fill="rgb(229,101,26)" rx="2" ry="2"/>
<text x="645.6" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (139 samples, 0.03%)</title><rect x="242.9" y="917" width="0.4" height="15.0" fill="rgb(220,53,46)" rx="2" ry="2"/>
<text x="245.9" y="927.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Row&gt; (144 samples, 0.03%)</title><rect x="646.7" y="1877" width="0.4" height="15.0" fill="rgb(250,29,20)" rx="2" ry="2"/>
<text x="649.7" y="1887.5"/>
</g>
<g class="">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (38 samples, 0.01%)</title><rect x="1175.1438848920882" y="1877" width="2.122302158273381" height="15.0" fill="rgb(249,168,35)" rx="2" ry="2" _orig_x="575.2" _orig_width="0.1"/>
<text x="1178.1438848920882" y="1887.5" _orig_x="578.2"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (175 samples, 0.04%)</title><rect x="829.2086330935256" y="1797" width="8.489208633093524" height="15.0" fill="rgb(235,114,17)" rx="2" ry="2" _orig_x="558.9" _orig_width="0.4"/>
<text x="832.2086330935256" y="1807.5" _orig_x="561.9"/>
</g>
<g class="hide">
<title>pa_thread_mq_get (89 samples, 0.02%)</title><rect x="183.4" y="2021" width="0.3" height="15.0" fill="rgb(214,212,28)" rx="2" ry="2"/>
<text x="186.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (37 samples, 0.01%)</title><rect x="461.3" y="1669" width="0.1" height="15.0" fill="rgb(235,39,0)" rx="2" ry="2"/>
<text x="464.3" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="237.9" y="1893" width="0.2" height="15.0" fill="rgb(230,97,22)" rx="2" ry="2"/>
<text x="240.9" y="1903.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,087 samples, 0.48%)</title><rect x="171.29496402877746" y="1781" width="120.97122302158273" height="15.0" fill="rgb(233,123,28)" rx="2" ry="2" _orig_x="527.9" _orig_width="5.7"/>
<text x="174.29496402877746" y="1791.5" _orig_x="530.9">std::_Hashtable..</text>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (190 samples, 0.04%)</title><rect x="638.3" y="1877" width="0.5" height="15.0" fill="rgb(247,12,48)" rx="2" ry="2"/>
<text x="641.3" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.02%)</title><rect x="797.0" y="1877" width="0.2" height="15.0" fill="rgb(242,52,21)" rx="2" ry="2"/>
<text x="800" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,865 samples, 0.66%)</title><rect x="1119.3" y="1701" width="7.8" height="15.0" fill="rgb(213,59,20)" rx="2" ry="2"/>
<text x="1122.3" y="1711.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (89 samples, 0.02%)</title><rect x="245.6" y="1589" width="0.2" height="15.0" fill="rgb(252,126,37)" rx="2" ry="2"/>
<text x="248.6" y="1599.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (52 samples, 0.01%)</title><rect x="250.2" y="1845" width="0.1" height="15.0" fill="rgb(217,214,39)" rx="2" ry="2"/>
<text x="253.2" y="1855.5"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string (75 samples, 0.02%)</title><rect x="271.9" y="1941" width="0.2" height="15.0" fill="rgb(241,25,44)" rx="2" ry="2"/>
<text x="274.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,258 samples, 2.38%)</title><rect x="737.4" y="1973" width="28.1" height="15.0" fill="rgb(236,1,23)" rx="2" ry="2"/>
<text x="740.4" y="1983.5">[[..</text>
</g>
<g class="hide">
<title>__pthread_mutex_lock (141 samples, 0.03%)</title><rect x="186.9" y="2037" width="0.3" height="15.0" fill="rgb(241,87,3)" rx="2" ry="2"/>
<text x="189.9" y="2047.5"/>
</g>
<g class="hide">
<title>__libc_calloc (161 samples, 0.04%)</title><rect x="766.5" y="2021" width="0.4" height="15.0" fill="rgb(250,161,32)" rx="2" ry="2"/>
<text x="769.5" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (38 samples, 0.01%)</title><rect x="247.69784172661966" y="1733" width="2.122302158273381" height="15.0" fill="rgb(234,211,30)" rx="2" ry="2" _orig_x="531.5" _orig_width="0.1"/>
<text x="250.69784172661966" y="1743.5" _orig_x="534.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="372.3" y="1941" width="0.2" height="15.0" fill="rgb(212,18,38)" rx="2" ry="2"/>
<text x="375.3" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.03%)</title><rect x="237.4" y="1973" width="0.4" height="15.0" fill="rgb(217,216,14)" rx="2" ry="2"/>
<text x="240.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,748 samples, 1.10%)</title><rect x="684.7" y="1877" width="12.9" height="15.0" fill="rgb(209,77,25)" rx="2" ry="2"/>
<text x="687.7" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.02%)</title><rect x="346.8" y="1877" width="0.2" height="15.0" fill="rgb(238,146,11)" rx="2" ry="2"/>
<text x="349.8" y="1887.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (570 samples, 0.13%)</title><rect x="795.251798561151" y="1797" width="33.956834532374096" height="15.0" fill="rgb(224,168,30)" rx="2" ry="2" _orig_x="557.3" _orig_width="1.6"/>
<text x="798.251798561151" y="1807.5" _orig_x="560.3">std..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (345 samples, 0.08%)</title><rect x="731.9" y="1669" width="0.9" height="15.0" fill="rgb(239,6,46)" rx="2" ry="2"/>
<text x="734.9" y="1679.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.02%)</title><rect x="364.5" y="2005" width="0.2" height="15.0" fill="rgb(206,23,21)" rx="2" ry="2"/>
<text x="367.5" y="2015.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field&gt; &gt;::construct&lt;Field, Field const&amp;&gt; (86 samples, 0.02%)</title><rect x="660.0" y="1941" width="0.2" height="15.0" fill="rgb(227,217,19)" rx="2" ry="2"/>
<text x="663" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="244.2" y="1029" width="0.2" height="15.0" fill="rgb(230,64,0)" rx="2" ry="2"/>
<text x="247.2" y="1039.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1813" width="0.8" height="15.0" fill="rgb(238,65,40)" rx="2" ry="2"/>
<text x="57.8" y="1823.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (185 samples, 0.04%)</title><rect x="678.2" y="2005" width="0.5" height="15.0" fill="rgb(205,170,25)" rx="2" ry="2"/>
<text x="681.2" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (406 samples, 0.09%)</title><rect x="630.8" y="1813" width="1.2" height="15.0" fill="rgb(245,15,19)" rx="2" ry="2"/>
<text x="633.8" y="1823.5"/>
</g>
<g class="hide">
<title>IndexKeyComparator::operator (7,341 samples, 1.70%)</title><rect x="415.6" y="1877" width="20.0" height="15.0" fill="rgb(230,57,5)" rx="2" ry="2"/>
<text x="418.6" y="1887.5"/>
</g>
<g class="">
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (294 samples, 0.07%)</title><rect x="863.1654676259002" y="1781" width="16.978417266187048" height="15.0" fill="rgb(226,25,16)" rx="2" ry="2" _orig_x="560.5" _orig_width="0.8"/>
<text x="866.1654676259002" y="1791.5" _orig_x="563.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.02%)</title><rect x="346.9" y="1861" width="0.1" height="15.0" fill="rgb(236,23,19)" rx="2" ry="2"/>
<text x="349.9" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (329 samples, 0.08%)</title><rect x="603.2" y="1781" width="0.9" height="15.0" fill="rgb(219,36,27)" rx="2" ry="2"/>
<text x="606.2" y="1791.5"/>
</g>
<g class="hide">
<title>tracker-extract (236 samples, 0.05%)</title><rect x="1183.4" y="2053" width="0.6" height="15.0" fill="rgb(214,105,15)" rx="2" ry="2"/>
<text x="1186.4" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="797.8" y="1877" width="0.1" height="15.0" fill="rgb(226,195,10)" rx="2" ry="2"/>
<text x="800.8" y="1887.5"/>
</g>
<g class="">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (3,340 samples, 0.77%)</title><rect x="313.48920863309496" y="1797" width="193.12949640287766" height="15.0" fill="rgb(210,168,11)" rx="2" ry="2" _orig_x="534.6" _orig_width="9.1"/>
<text x="316.48920863309496" y="1807.5" _orig_x="537.6">std::__detail::_Insert_base&lt;..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.02%)</title><rect x="15.3" y="1797" width="0.3" height="15.0" fill="rgb(232,39,45)" rx="2" ry="2"/>
<text x="18.3" y="1807.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (62 samples, 0.01%)</title><rect x="456.4" y="1733" width="0.1" height="15.0" fill="rgb(207,162,41)" rx="2" ry="2"/>
<text x="459.4" y="1743.5"/>
</g>
<g class="hide">
<title>pa_channels_valid (44 samples, 0.01%)</title><rect x="190.4" y="2037" width="0.1" height="15.0" fill="rgb(229,126,33)" rx="2" ry="2"/>
<text x="193.4" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (259 samples, 0.06%)</title><rect x="449.8" y="1861" width="0.7" height="15.0" fill="rgb(253,52,36)" rx="2" ry="2"/>
<text x="452.8" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (165 samples, 0.04%)</title><rect x="47.8" y="1877" width="0.5" height="15.0" fill="rgb(219,3,51)" rx="2" ry="2"/>
<text x="50.8" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (275 samples, 0.06%)</title><rect x="381.9" y="1973" width="0.8" height="15.0" fill="rgb(215,137,22)" rx="2" ry="2"/>
<text x="384.9" y="1983.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (135 samples, 0.03%)</title><rect x="13.5" y="1989" width="0.3" height="15.0" fill="rgb(235,214,8)" rx="2" ry="2"/>
<text x="16.5" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (160 samples, 0.04%)</title><rect x="247.3" y="1717" width="0.5" height="15.0" fill="rgb(242,120,21)" rx="2" ry="2"/>
<text x="250.3" y="1727.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1125" width="0.8" height="15.0" fill="rgb(206,224,27)" rx="2" ry="2"/>
<text x="57.8" y="1135.5"/>
</g>
<g class="hide">
<title>malloc (1,792 samples, 0.42%)</title><rect x="666.4" y="2037" width="4.9" height="15.0" fill="rgb(243,79,11)" rx="2" ry="2"/>
<text x="669.4" y="2047.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (40 samples, 0.01%)</title><rect x="621.9" y="1861" width="0.2" height="15.0" fill="rgb(230,120,26)" rx="2" ry="2"/>
<text x="624.9" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,279 samples, 0.30%)</title><rect x="781.4" y="1973" width="3.5" height="15.0" fill="rgb(206,32,36)" rx="2" ry="2"/>
<text x="784.4" y="1983.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (81 samples, 0.02%)</title><rect x="645.0" y="1941" width="0.2" height="15.0" fill="rgb(221,60,39)" rx="2" ry="2"/>
<text x="648" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="901" width="0.2" height="15.0" fill="rgb(249,111,25)" rx="2" ry="2"/>
<text x="30" y="911.5"/>
</g>
<g class="hide">
<title>irq/32-MSFT0001 (187 samples, 0.04%)</title><rect x="379.8" y="2053" width="0.5" height="15.0" fill="rgb(232,156,49)" rx="2" ry="2"/>
<text x="382.8" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,389 samples, 0.32%)</title><rect x="300.6" y="1685" width="3.8" height="15.0" fill="rgb(221,67,41)" rx="2" ry="2"/>
<text x="303.6" y="1695.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (100 samples, 0.02%)</title><rect x="246.6" y="1445" width="0.3" height="15.0" fill="rgb(250,39,9)" rx="2" ry="2"/>
<text x="249.6" y="1455.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (65 samples, 0.02%)</title><rect x="498.8" y="1797" width="0.2" height="15.0" fill="rgb(238,209,29)" rx="2" ry="2"/>
<text x="501.8" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.03%)</title><rect x="1178.4" y="1605" width="0.4" height="15.0" fill="rgb(227,127,6)" rx="2" ry="2"/>
<text x="1181.4" y="1615.5"/>
</g>
<g class="hide">
<title>Chrome_ChildIOT (808 samples, 0.19%)</title><rect x="13.8" y="2053" width="2.2" height="15.0" fill="rgb(230,214,23)" rx="2" ry="2"/>
<text x="16.8" y="2063.5"/>
</g>
<g class="hide">
<title>std::max&lt;unsigned long&gt; (50 samples, 0.01%)</title><rect x="480.7" y="1781" width="0.1" height="15.0" fill="rgb(248,118,21)" rx="2" ry="2"/>
<text x="483.7" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="380.7" y="1973" width="0.2" height="15.0" fill="rgb(226,110,42)" rx="2" ry="2"/>
<text x="383.7" y="1983.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (548 samples, 0.13%)</title><rect x="482.6" y="1797" width="1.5" height="15.0" fill="rgb(252,93,34)" rx="2" ry="2"/>
<text x="485.6" y="1807.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (63 samples, 0.01%)</title><rect x="358.0" y="1845" width="0.2" height="15.0" fill="rgb(210,182,33)" rx="2" ry="2"/>
<text x="361" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.02%)</title><rect x="364.5" y="1941" width="0.2" height="15.0" fill="rgb(220,215,29)" rx="2" ry="2"/>
<text x="367.5" y="1951.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (56 samples, 0.01%)</title><rect x="641.3" y="1909" width="0.1" height="15.0" fill="rgb(251,201,38)" rx="2" ry="2"/>
<text x="644.3" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (325 samples, 0.08%)</title><rect x="353.6" y="1845" width="0.9" height="15.0" fill="rgb(223,49,29)" rx="2" ry="2"/>
<text x="356.6" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1589" width="0.2" height="15.0" fill="rgb(227,176,13)" rx="2" ry="2"/>
<text x="30" y="1599.5"/>
</g>
<g class="hide">
<title>snd_ctl_elem_read (94 samples, 0.02%)</title><rect x="183.8" y="2021" width="0.3" height="15.0" fill="rgb(214,216,15)" rx="2" ry="2"/>
<text x="186.8" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (40 samples, 0.01%)</title><rect x="245.3" y="1365" width="0.2" height="15.0" fill="rgb(208,179,5)" rx="2" ry="2"/>
<text x="248.3" y="1375.5"/>
</g>
<g class="hide">
<title>[unknown] (17,666 samples, 4.09%)</title><rect x="68.9" y="2021" width="48.3" height="15.0" fill="rgb(253,151,23)" rx="2" ry="2"/>
<text x="71.9" y="2031.5">[unk..</text>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (72 samples, 0.02%)</title><rect x="656.0" y="1957" width="0.2" height="15.0" fill="rgb(224,147,44)" rx="2" ry="2"/>
<text x="659" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.02%)</title><rect x="27.0" y="1925" width="0.2" height="15.0" fill="rgb(240,8,54)" rx="2" ry="2"/>
<text x="30" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,459 samples, 0.34%)</title><rect x="441.5" y="1797" width="4.0" height="15.0" fill="rgb(243,162,49)" rx="2" ry="2"/>
<text x="444.5" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (45 samples, 0.01%)</title><rect x="47.3" y="1925" width="0.1" height="15.0" fill="rgb(245,14,7)" rx="2" ry="2"/>
<text x="50.3" y="1935.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (3,114 samples, 0.72%)</title><rect x="497.8" y="1845" width="8.5" height="15.0" fill="rgb(249,220,7)" rx="2" ry="2"/>
<text x="500.8" y="1855.5"/>
</g>
<g class="parent">
<title>main (102,426 samples, 23.72%)</title><rect x="10" y="2053" width="1180" height="15.0" fill="rgb(225,170,40)" rx="2" ry="2" _orig_x="392.2" _orig_width="279.9"/>
<text x="13" y="2063.5" _orig_x="395.2">main </text>
</g>
<g class="hide">
<title>[code] (328 samples, 0.08%)</title><rect x="249.0" y="1909" width="0.9" height="15.0" fill="rgb(212,222,31)" rx="2" ry="2"/>
<text x="252" y="1919.5"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (89 samples, 0.02%)</title><rect x="245.6" y="1669" width="0.2" height="15.0" fill="rgb(246,122,43)" rx="2" ry="2"/>
<text x="248.6" y="1679.5"/>
</g>
<g class="hide">
<title>main (893 samples, 0.21%)</title><rect x="792.9" y="2021" width="2.4" height="15.0" fill="rgb(234,153,7)" rx="2" ry="2"/>
<text x="795.9" y="2031.5"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (311 samples, 0.07%)</title><rect x="60.2" y="2037" width="0.9" height="15.0" fill="rgb(246,26,32)" rx="2" ry="2"/>
<text x="63.2" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (300 samples, 0.07%)</title><rect x="54.8" y="901" width="0.8" height="15.0" fill="rgb(249,57,5)" rx="2" ry="2"/>
<text x="57.8" y="911.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (461 samples, 0.11%)</title><rect x="501.1" y="1765" width="1.3" height="15.0" fill="rgb(243,199,18)" rx="2" ry="2"/>
<text x="504.1" y="1775.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1125" width="0.2" height="15.0" fill="rgb(247,229,27)" rx="2" ry="2"/>
<text x="30" y="1135.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="50.3" y="1909" width="0.1" height="15.0" fill="rgb(222,57,50)" rx="2" ry="2"/>
<text x="53.3" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="666.2" y="1957" width="0.2" height="15.0" fill="rgb(228,104,45)" rx="2" ry="2"/>
<text x="669.2" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1589" width="0.8" height="15.0" fill="rgb(239,12,8)" rx="2" ry="2"/>
<text x="57.8" y="1599.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (473 samples, 0.11%)</title><rect x="630.7" y="1829" width="1.3" height="15.0" fill="rgb(240,66,2)" rx="2" ry="2"/>
<text x="633.7" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="16.9" y="1925" width="0.2" height="15.0" fill="rgb(233,157,25)" rx="2" ry="2"/>
<text x="19.9" y="1935.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (42 samples, 0.01%)</title><rect x="423.4" y="1829" width="0.1" height="15.0" fill="rgb(234,187,19)" rx="2" ry="2"/>
<text x="426.4" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (278 samples, 0.06%)</title><rect x="796.4" y="2005" width="0.8" height="15.0" fill="rgb(215,186,5)" rx="2" ry="2"/>
<text x="799.4" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (655 samples, 0.15%)</title><rect x="352.7" y="1941" width="1.8" height="15.0" fill="rgb(237,102,29)" rx="2" ry="2"/>
<text x="355.7" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="392.0" y="1781" width="0.1" height="15.0" fill="rgb(232,137,28)" rx="2" ry="2"/>
<text x="395" y="1791.5"/>
</g>
<g class="hide">
<title>[code] (1,533 samples, 0.36%)</title><rect x="240.5" y="1557" width="4.2" height="15.0" fill="rgb(232,137,37)" rx="2" ry="2"/>
<text x="243.5" y="1567.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (111 samples, 0.03%)</title><rect x="277.4100719424465" y="1765" width="6.366906474820143" height="15.0" fill="rgb(246,223,19)" rx="2" ry="2" _orig_x="532.9" _orig_width="0.3"/>
<text x="280.4100719424465" y="1775.5" _orig_x="535.9"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="797.8" y="1989" width="0.1" height="15.0" fill="rgb(243,204,22)" rx="2" ry="2"/>
<text x="800.8" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (565 samples, 0.13%)</title><rect x="241.8" y="1189" width="1.5" height="15.0" fill="rgb(208,40,51)" rx="2" ry="2"/>
<text x="244.8" y="1199.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1813" width="0.2" height="15.0" fill="rgb(246,2,24)" rx="2" ry="2"/>
<text x="30" y="1823.5"/>
</g>
<g class="hide">
<title>snd_pcm_areas_copy (54 samples, 0.01%)</title><rect x="184.1" y="2021" width="0.1" height="15.0" fill="rgb(216,205,52)" rx="2" ry="2"/>
<text x="187.1" y="2031.5"/>
</g>
<g class="hide">
<title>__poll (166 samples, 0.04%)</title><rect x="364.8" y="2021" width="0.5" height="15.0" fill="rgb(210,220,34)" rx="2" ry="2"/>
<text x="367.8" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (98 samples, 0.02%)</title><rect x="245.1" y="1317" width="0.2" height="15.0" fill="rgb(244,200,24)" rx="2" ry="2"/>
<text x="248.1" y="1327.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (172 samples, 0.04%)</title><rect x="244.0" y="1381" width="0.4" height="15.0" fill="rgb(217,85,21)" rx="2" ry="2"/>
<text x="247" y="1391.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (93 samples, 0.02%)</title><rect x="597.5" y="1813" width="0.2" height="15.0" fill="rgb(235,170,2)" rx="2" ry="2"/>
<text x="600.5" y="1823.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (55 samples, 0.01%)</title><rect x="775.3" y="2005" width="0.2" height="15.0" fill="rgb(221,182,43)" rx="2" ry="2"/>
<text x="778.3" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (1,440 samples, 0.33%)</title><rect x="1184.8" y="2037" width="3.9" height="15.0" fill="rgb(213,144,29)" rx="2" ry="2"/>
<text x="1187.8" y="2047.5"/>
</g>
<g class="hide">
<title>operator new[] (124 samples, 0.03%)</title><rect x="305.1" y="1941" width="0.4" height="15.0" fill="rgb(248,39,52)" rx="2" ry="2"/>
<text x="308.1" y="1951.5"/>
</g>
<g class="hide">
<title>BPlusTreeLeafPage::KeyAt (95 samples, 0.02%)</title><rect x="439.8" y="1893" width="0.2" height="15.0" fill="rgb(230,98,10)" rx="2" ry="2"/>
<text x="442.8" y="1903.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (2,155 samples, 0.50%)</title><rect x="615.6" y="1877" width="5.9" height="15.0" fill="rgb(254,57,23)" rx="2" ry="2"/>
<text x="618.6" y="1887.5"/>
</g>
<g class="hide">
<title>[unknown] (183 samples, 0.04%)</title><rect x="54.8" y="133" width="0.5" height="15.0" fill="rgb(245,74,30)" rx="2" ry="2"/>
<text x="57.8" y="143.5"/>
</g>
<g class="hide">
<title>std::_Destroy&lt;Field*, Field&gt; (98 samples, 0.02%)</title><rect x="660.8" y="1957" width="0.2" height="15.0" fill="rgb(212,50,8)" rx="2" ry="2"/>
<text x="663.8" y="1967.5"/>
</g>
<g class="hide">
<title>Field::CompareLessThan (229 samples, 0.05%)</title><rect x="415.9" y="1861" width="0.6" height="15.0" fill="rgb(239,58,35)" rx="2" ry="2"/>
<text x="418.9" y="1871.5"/>
</g>
<g class="hide">
<title>thread_native_entry (66 samples, 0.02%)</title><rect x="22.1" y="2021" width="0.2" height="15.0" fill="rgb(246,29,14)" rx="2" ry="2"/>
<text x="25.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (472 samples, 0.11%)</title><rect x="332.4" y="1797" width="1.3" height="15.0" fill="rgb(212,44,24)" rx="2" ry="2"/>
<text x="335.4" y="1807.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (70 samples, 0.02%)</title><rect x="605.8" y="1781" width="0.2" height="15.0" fill="rgb(213,44,40)" rx="2" ry="2"/>
<text x="608.8" y="1791.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::Allocate (1,474 samples, 0.34%)</title><rect x="608.5" y="1845" width="4.0" height="15.0" fill="rgb(222,117,3)" rx="2" ry="2"/>
<text x="611.5" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (56 samples, 0.01%)</title><rect x="389.8" y="1893" width="0.1" height="15.0" fill="rgb(252,182,0)" rx="2" ry="2"/>
<text x="392.8" y="1903.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (89 samples, 0.02%)</title><rect x="29.1" y="1957" width="0.2" height="15.0" fill="rgb(253,219,52)" rx="2" ry="2"/>
<text x="32.1" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.03%)</title><rect x="390.1" y="1957" width="0.3" height="15.0" fill="rgb(242,41,39)" rx="2" ry="2"/>
<text x="393.1" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (125 samples, 0.03%)</title><rect x="653.4" y="1909" width="0.3" height="15.0" fill="rgb(236,86,40)" rx="2" ry="2"/>
<text x="656.4" y="1919.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (813 samples, 0.19%)</title><rect x="425.0" y="1797" width="2.3" height="15.0" fill="rgb(243,151,50)" rx="2" ry="2"/>
<text x="428" y="1807.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (41 samples, 0.01%)</title><rect x="244.4" y="1461" width="0.2" height="15.0" fill="rgb(243,111,40)" rx="2" ry="2"/>
<text x="247.4" y="1471.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (61 samples, 0.01%)</title><rect x="420.9" y="1701" width="0.2" height="15.0" fill="rgb(232,199,34)" rx="2" ry="2"/>
<text x="423.9" y="1711.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (2,847 samples, 0.66%)</title><rect x="582.6" y="1845" width="7.8" height="15.0" fill="rgb(215,226,0)" rx="2" ry="2"/>
<text x="585.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (19,923 samples, 4.61%)</title><rect x="117.7" y="2005" width="54.4" height="15.0" fill="rgb(206,170,30)" rx="2" ry="2"/>
<text x="120.7" y="2015.5">[[kerne..</text>
</g>
<g class="hide">
<title>DiskManager::IsPageFree (337 samples, 0.08%)</title><rect x="637.1" y="1909" width="0.9" height="15.0" fill="rgb(239,24,41)" rx="2" ry="2"/>
<text x="640.1" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (323 samples, 0.07%)</title><rect x="30.3" y="2037" width="0.9" height="15.0" fill="rgb(219,127,15)" rx="2" ry="2"/>
<text x="33.3" y="2047.5"/>
</g>
<g class="hide">
<title>graphene_vec3_dot (37 samples, 0.01%)</title><rect x="366.6" y="2021" width="0.1" height="15.0" fill="rgb(208,107,44)" rx="2" ry="2"/>
<text x="369.6" y="2031.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (46 samples, 0.01%)</title><rect x="206.1" y="2021" width="0.1" height="15.0" fill="rgb(233,54,41)" rx="2" ry="2"/>
<text x="209.1" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (704 samples, 0.16%)</title><rect x="49.9" y="2037" width="2.0" height="15.0" fill="rgb(216,20,10)" rx="2" ry="2"/>
<text x="52.9" y="2047.5"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Backend::run (26,492 samples, 6.14%)</title><rect x="261.3" y="2021" width="72.4" height="15.0" fill="rgb(238,25,23)" rx="2" ry="2"/>
<text x="264.3" y="2031.5">std::__1..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="515.7" y="1621" width="0.1" height="15.0" fill="rgb(231,158,31)" rx="2" ry="2"/>
<text x="518.7" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="387.2" y="1909" width="0.2" height="15.0" fill="rgb(239,109,13)" rx="2" ry="2"/>
<text x="390.2" y="1919.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (60 samples, 0.01%)</title><rect x="903.4892086330939" y="1813" width="4.244604316546762" height="15.0" fill="rgb(254,32,48)" rx="2" ry="2" _orig_x="562.4" _orig_width="0.2"/>
<text x="906.4892086330939" y="1823.5" _orig_x="565.4"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (46 samples, 0.01%)</title><rect x="606.1" y="1765" width="0.1" height="15.0" fill="rgb(211,84,52)" rx="2" ry="2"/>
<text x="609.1" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="1185.4" y="1941" width="0.1" height="15.0" fill="rgb(208,159,43)" rx="2" ry="2"/>
<text x="1188.4" y="1951.5"/>
</g>
<g class="hide">
<title>snd_power_wait (124 samples, 0.03%)</title><rect x="171.0" y="1925" width="0.3" height="15.0" fill="rgb(231,40,26)" rx="2" ry="2"/>
<text x="174" y="1935.5"/>
</g>
<g class="hide">
<title>update_get_addr (105 samples, 0.02%)</title><rect x="186.6" y="2021" width="0.3" height="15.0" fill="rgb(221,35,26)" rx="2" ry="2"/>
<text x="189.6" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="49.4" y="1845" width="0.1" height="15.0" fill="rgb(207,58,0)" rx="2" ry="2"/>
<text x="52.4" y="1855.5"/>
</g>
<g class="hide">
<title>std::__fill_a&lt;char&gt; (48 samples, 0.01%)</title><rect x="489.8" y="1733" width="0.1" height="15.0" fill="rgb(213,134,49)" rx="2" ry="2"/>
<text x="492.8" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="374.6" y="1957" width="0.2" height="15.0" fill="rgb(215,151,3)" rx="2" ry="2"/>
<text x="377.6" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.02%)</title><rect x="55.8" y="1893" width="0.1" height="15.0" fill="rgb(215,65,39)" rx="2" ry="2"/>
<text x="58.8" y="1903.5"/>
</g>
<g class="">
<title>operator new (47 samples, 0.01%)</title><rect x="761.2949640287788" y="1781" width="4.244604316546762" height="15.0" fill="rgb(247,86,50)" rx="2" ry="2" _orig_x="555.7" _orig_width="0.2"/>
<text x="764.2949640287788" y="1791.5" _orig_x="558.7"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (478 samples, 0.11%)</title><rect x="1187.1" y="1877" width="1.3" height="15.0" fill="rgb(232,32,51)" rx="2" ry="2"/>
<text x="1190.1" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (234 samples, 0.05%)</title><rect x="52.1" y="1845" width="0.7" height="15.0" fill="rgb(251,90,46)" rx="2" ry="2"/>
<text x="55.1" y="1855.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (41 samples, 0.01%)</title><rect x="626.7" y="1893" width="0.2" height="15.0" fill="rgb(205,207,18)" rx="2" ry="2"/>
<text x="629.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="366.9" y="1925" width="0.2" height="15.0" fill="rgb(238,77,5)" rx="2" ry="2"/>
<text x="369.9" y="1935.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (305 samples, 0.07%)</title><rect x="481.3" y="1765" width="0.8" height="15.0" fill="rgb(239,187,36)" rx="2" ry="2"/>
<text x="484.3" y="1775.5"/>
</g>
<g class="hide">
<title>_int_free (38 samples, 0.01%)</title><rect x="585.0" y="1749" width="0.1" height="15.0" fill="rgb(233,162,3)" rx="2" ry="2"/>
<text x="588" y="1759.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (143 samples, 0.03%)</title><rect x="492.4" y="1797" width="0.4" height="15.0" fill="rgb(252,175,44)" rx="2" ry="2"/>
<text x="495.4" y="1807.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (243 samples, 0.06%)</title><rect x="244.8" y="1557" width="0.7" height="15.0" fill="rgb(254,195,4)" rx="2" ry="2"/>
<text x="247.8" y="1567.5"/>
</g>
<g class="hide">
<title>_nv035303rm (44 samples, 0.01%)</title><rect x="1182.3" y="2037" width="0.1" height="15.0" fill="rgb(223,171,26)" rx="2" ry="2"/>
<text x="1185.3" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (904 samples, 0.21%)</title><rect x="395.7" y="1941" width="2.4" height="15.0" fill="rgb(217,194,17)" rx="2" ry="2"/>
<text x="398.7" y="1951.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (219 samples, 0.05%)</title><rect x="625.2" y="1861" width="0.6" height="15.0" fill="rgb(232,28,35)" rx="2" ry="2"/>
<text x="628.2" y="1871.5"/>
</g>
<g class="hide">
<title>__poll (5,287 samples, 1.22%)</title><rect x="319.2" y="2005" width="14.5" height="15.0" fill="rgb(208,112,33)" rx="2" ry="2"/>
<text x="322.2" y="2015.5"/>
</g>
<g class="hide">
<title>Row::Row (567 samples, 0.13%)</title><rect x="647.1" y="1845" width="1.6" height="15.0" fill="rgb(209,180,0)" rx="2" ry="2"/>
<text x="650.1" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="246.9" y="1669" width="0.2" height="15.0" fill="rgb(248,206,51)" rx="2" ry="2"/>
<text x="249.9" y="1679.5"/>
</g>
<g class="hide">
<title>ExecuteEngine::SelectTuples (2,310 samples, 0.54%)</title><rect x="642.4" y="1973" width="6.4" height="15.0" fill="rgb(209,57,33)" rx="2" ry="2"/>
<text x="645.4" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="55.8" y="1829" width="0.1" height="15.0" fill="rgb(244,90,3)" rx="2" ry="2"/>
<text x="58.8" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="347.9" y="1989" width="0.2" height="15.0" fill="rgb(214,73,34)" rx="2" ry="2"/>
<text x="350.9" y="1999.5"/>
</g>
<g class="hide">
<title>firefox (151 samples, 0.03%)</title><rect x="345.1" y="2053" width="0.5" height="15.0" fill="rgb(207,42,44)" rx="2" ry="2"/>
<text x="348.1" y="2063.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (757 samples, 0.18%)</title><rect x="251.3" y="2037" width="2.1" height="15.0" fill="rgb(233,120,9)" rx="2" ry="2"/>
<text x="254.3" y="2047.5"/>
</g>
<g class="hide">
<title>malloc_consolidate (200 samples, 0.05%)</title><rect x="789.5" y="2037" width="0.6" height="15.0" fill="rgb(227,168,23)" rx="2" ry="2"/>
<text x="792.5" y="2047.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,490 samples, 0.35%)</title><rect x="459.9" y="1781" width="4.1" height="15.0" fill="rgb(254,209,20)" rx="2" ry="2"/>
<text x="462.9" y="1791.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (134 samples, 0.03%)</title><rect x="13.5" y="1893" width="0.3" height="15.0" fill="rgb(210,78,1)" rx="2" ry="2"/>
<text x="16.5" y="1903.5"/>
</g>
<g class="hide">
<title>runtime.goexit.abi0 (222 samples, 0.05%)</title><rect x="340.9" y="2037" width="0.6" height="15.0" fill="rgb(215,42,41)" rx="2" ry="2"/>
<text x="343.9" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (23,591 samples, 5.46%)</title><rect x="702.0" y="2021" width="64.4" height="15.0" fill="rgb(228,175,42)" rx="2" ry="2"/>
<text x="705" y="2031.5">[unkno..</text>
</g>
<g class="parent">
<title>BPlusTreeIndex::RemoveEntry (84,584 samples, 19.59%)</title><rect x="10" y="1973" width="1180" height="15.0" fill="rgb(242,26,40)" rx="2" ry="2" _orig_x="411.2" _orig_width="231.2"/>
<text x="13" y="1983.5" _orig_x="414.2">BPlusTreeIndex::RemoveEntry </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.03%)</title><rect x="26.4" y="1973" width="0.3" height="15.0" fill="rgb(215,16,21)" rx="2" ry="2"/>
<text x="29.4" y="1983.5"/>
</g>
<g>
<title>std::__detail::_Identity::operator (38 samples, 0.01%)</title><rect x="275.2877697841726" y="1765" width="2.122302158273381" height="15.0" fill="rgb(226,123,35)" rx="2" ry="2" _orig_x="532.8" _orig_width="0.1"/>
<text x="278.2877697841726" y="1775.5" _orig_x="535.8"/>
</g>
<g class="hide">
<title>ntfs_index_ctx_get (106 samples, 0.02%)</title><rect x="777.4" y="2021" width="0.3" height="15.0" fill="rgb(245,25,50)" rx="2" ry="2"/>
<text x="780.4" y="2031.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (81 samples, 0.02%)</title><rect x="440.7" y="1813" width="0.2" height="15.0" fill="rgb(213,224,47)" rx="2" ry="2"/>
<text x="443.7" y="1823.5"/>
</g>
<g class="hide">
<title>[libpulsecore-13.99.so] (42 samples, 0.01%)</title><rect x="68.8" y="2021" width="0.1" height="15.0" fill="rgb(222,66,12)" rx="2" ry="2"/>
<text x="71.8" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,190 samples, 0.28%)</title><rect x="781.6" y="1941" width="3.3" height="15.0" fill="rgb(214,37,41)" rx="2" ry="2"/>
<text x="784.6" y="1951.5"/>
</g>
<g class="hide">
<title>start_thread (135 samples, 0.03%)</title><rect x="13.5" y="2037" width="0.3" height="15.0" fill="rgb(228,65,32)" rx="2" ry="2"/>
<text x="16.5" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (48 samples, 0.01%)</title><rect x="392.0" y="1957" width="0.1" height="15.0" fill="rgb(227,227,51)" rx="2" ry="2"/>
<text x="395" y="1967.5"/>
</g>
<g class="hide">
<title>TypeFloat::CompareGreaterThan (38 samples, 0.01%)</title><rect x="519.3" y="1877" width="0.1" height="15.0" fill="rgb(246,40,8)" rx="2" ry="2"/>
<text x="522.3" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (103 samples, 0.02%)</title><rect x="14.8" y="1749" width="0.3" height="15.0" fill="rgb(212,152,51)" rx="2" ry="2"/>
<text x="17.8" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (1,209 samples, 0.28%)</title><rect x="17.2" y="2005" width="3.3" height="15.0" fill="rgb(208,174,12)" rx="2" ry="2"/>
<text x="20.2" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.02%)</title><rect x="379.9" y="1925" width="0.2" height="15.0" fill="rgb(242,175,33)" rx="2" ry="2"/>
<text x="382.9" y="1935.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (441 samples, 0.10%)</title><rect x="480.9" y="1781" width="1.2" height="15.0" fill="rgb(253,28,34)" rx="2" ry="2"/>
<text x="483.9" y="1791.5"/>
</g>
<g class="hide">
<title>MemHeap::~MemHeap (38 samples, 0.01%)</title><rect x="497.7" y="1845" width="0.1" height="15.0" fill="rgb(243,193,11)" rx="2" ry="2"/>
<text x="500.7" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="437" width="0.2" height="15.0" fill="rgb(222,135,46)" rx="2" ry="2"/>
<text x="30" y="447.5"/>
</g>
<g class="hide">
<title>g_main_context_check (42 samples, 0.01%)</title><rect x="50.5" y="2021" width="0.1" height="15.0" fill="rgb(227,88,17)" rx="2" ry="2"/>
<text x="53.5" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117,467 samples, 27.21%)</title><rect x="806.8" y="1989" width="321.0" height="15.0" fill="rgb(218,38,2)" rx="2" ry="2"/>
<text x="809.8" y="1999.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>IPC_I/O_Parent (77 samples, 0.02%)</title><rect x="23.4" y="2053" width="0.2" height="15.0" fill="rgb(244,19,33)" rx="2" ry="2"/>
<text x="26.4" y="2063.5"/>
</g>
<g class="hide">
<title>v8::Function::Call (42 samples, 0.01%)</title><rect x="244.4" y="1477" width="0.2" height="15.0" fill="rgb(226,103,54)" rx="2" ry="2"/>
<text x="247.4" y="1487.5"/>
</g>
<g class="hide">
<title>Page::RUnlatch (37 samples, 0.01%)</title><rect x="447.8" y="1877" width="0.1" height="15.0" fill="rgb(214,22,42)" rx="2" ry="2"/>
<text x="450.8" y="1887.5"/>
</g>
<g class="hide">
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (37 samples, 0.01%)</title><rect x="502.3" y="1733" width="0.1" height="15.0" fill="rgb(232,168,13)" rx="2" ry="2"/>
<text x="505.3" y="1743.5"/>
</g>
<g class="hide">
<title>Thread::call_run (50 samples, 0.01%)</title><rect x="49.8" y="2005" width="0.1" height="15.0" fill="rgb(250,33,40)" rx="2" ry="2"/>
<text x="52.8" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,427 samples, 0.33%)</title><rect x="608.6" y="1813" width="3.9" height="15.0" fill="rgb(245,92,15)" rx="2" ry="2"/>
<text x="611.6" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="244.0" y="1189" width="0.1" height="15.0" fill="rgb(208,57,31)" rx="2" ry="2"/>
<text x="247" y="1199.5"/>
</g>
<g class="hide">
<title>azx_get_delay_from_fifo (61 samples, 0.01%)</title><rect x="137.7" y="1829" width="0.2" height="15.0" fill="rgb(242,109,8)" rx="2" ry="2"/>
<text x="140.7" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (52 samples, 0.01%)</title><rect x="244.2" y="773" width="0.2" height="15.0" fill="rgb(233,31,36)" rx="2" ry="2"/>
<text x="247.2" y="783.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,466 samples, 0.57%)</title><rect x="297.7" y="1733" width="6.7" height="15.0" fill="rgb(205,109,51)" rx="2" ry="2"/>
<text x="300.7" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (319 samples, 0.07%)</title><rect x="389.1" y="2005" width="0.8" height="15.0" fill="rgb(206,84,17)" rx="2" ry="2"/>
<text x="392.1" y="2015.5"/>
</g>
<g class="hide">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (309 samples, 0.07%)</title><rect x="457.6" y="1749" width="0.8" height="15.0" fill="rgb(221,136,12)" rx="2" ry="2"/>
<text x="460.6" y="1759.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (96 samples, 0.02%)</title><rect x="765.7" y="2005" width="0.3" height="15.0" fill="rgb(242,112,19)" rx="2" ry="2"/>
<text x="768.7" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (62 samples, 0.01%)</title><rect x="245.2" y="853" width="0.1" height="15.0" fill="rgb(249,165,21)" rx="2" ry="2"/>
<text x="248.2" y="863.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1141" width="0.2" height="15.0" fill="rgb(240,97,20)" rx="2" ry="2"/>
<text x="30" y="1151.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (340 samples, 0.08%)</title><rect x="390.4" y="2037" width="1.0" height="15.0" fill="rgb(205,3,5)" rx="2" ry="2"/>
<text x="393.4" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.02%)</title><rect x="245.1" y="1061" width="0.2" height="15.0" fill="rgb(237,182,9)" rx="2" ry="2"/>
<text x="248.1" y="1071.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (15,745 samples, 3.65%)</title><rect x="1135.7" y="1861" width="43.1" height="15.0" fill="rgb(253,203,27)" rx="2" ry="2"/>
<text x="1138.7" y="1871.5">[[ke..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.04%)</title><rect x="389.9" y="2021" width="0.5" height="15.0" fill="rgb(233,57,35)" rx="2" ry="2"/>
<text x="392.9" y="2031.5"/>
</g>
<g class="hide">
<title>pa_fdsem_before_poll (143 samples, 0.03%)</title><rect x="176.7" y="2021" width="0.4" height="15.0" fill="rgb(234,58,43)" rx="2" ry="2"/>
<text x="179.7" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.02%)</title><rect x="16.9" y="1973" width="0.2" height="15.0" fill="rgb(229,145,52)" rx="2" ry="2"/>
<text x="19.9" y="1983.5"/>
</g>
<g class="hide">
<title>pa_channel_map_valid (53 samples, 0.01%)</title><rect x="190.3" y="2037" width="0.1" height="15.0" fill="rgb(215,25,32)" rx="2" ry="2"/>
<text x="193.3" y="2047.5"/>
</g>
<g class="hide">
<title>EventList::update (376 samples, 0.09%)</title><rect x="266.9" y="1941" width="1.0" height="15.0" fill="rgb(225,207,38)" rx="2" ry="2"/>
<text x="269.9" y="1951.5"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.02%)</title><rect x="27.0" y="1365" width="0.2" height="15.0" fill="rgb(236,69,12)" rx="2" ry="2"/>
<text x="30" y="1375.5"/>
</g>
<g class="hide">
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (102 samples, 0.02%)</title><rect x="428.7" y="1765" width="0.2" height="15.0" fill="rgb(233,184,17)" rx="2" ry="2"/>
<text x="431.7" y="1775.5"/>
</g>
<g class="hide">
<title>MemHeap::~MemHeap (60 samples, 0.01%)</title><rect x="498.2" y="1829" width="0.2" height="15.0" fill="rgb(233,215,1)" rx="2" ry="2"/>
<text x="501.2" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (79 samples, 0.02%)</title><rect x="305.5" y="1909" width="0.3" height="15.0" fill="rgb(226,100,47)" rx="2" ry="2"/>
<text x="308.5" y="1919.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (166 samples, 0.04%)</title><rect x="448.4" y="1861" width="0.5" height="15.0" fill="rgb(225,117,6)" rx="2" ry="2"/>
<text x="451.4" y="1871.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (38 samples, 0.01%)</title><rect x="586.3" y="1797" width="0.1" height="15.0" fill="rgb(220,147,45)" rx="2" ry="2"/>
<text x="589.3" y="1807.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (202 samples, 0.05%)</title><rect x="243.3" y="1269" width="0.6" height="15.0" fill="rgb(237,11,18)" rx="2" ry="2"/>
<text x="246.3" y="1279.5"/>
</g>
<g class="hide">
<title>[perf-123126.map] (74 samples, 0.02%)</title><rect x="247.5" y="1605" width="0.2" height="15.0" fill="rgb(236,62,34)" rx="2" ry="2"/>
<text x="250.5" y="1615.5"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (52 samples, 0.01%)</title><rect x="706.3" y="1989" width="0.2" height="15.0" fill="rgb(241,188,28)" rx="2" ry="2"/>
<text x="709.3" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (41 samples, 0.01%)</title><rect x="245.3" y="1397" width="0.2" height="15.0" fill="rgb(250,60,4)" rx="2" ry="2"/>
<text x="248.3" y="1407.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (43 samples, 0.01%)</title><rect x="620.6" y="1829" width="0.2" height="15.0" fill="rgb(253,77,8)" rx="2" ry="2"/>
<text x="623.6" y="1839.5"/>
</g>
<g class="hide">
<title>Thread::call_run (38 samples, 0.01%)</title><rect x="22.7" y="2005" width="0.1" height="15.0" fill="rgb(252,23,45)" rx="2" ry="2"/>
<text x="25.7" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (296 samples, 0.07%)</title><rect x="444.7" y="1573" width="0.8" height="15.0" fill="rgb(250,192,8)" rx="2" ry="2"/>
<text x="447.7" y="1583.5"/>
</g>
<g class="hide">
<title>Nan::imp::FunctionCallbackWrapper (139 samples, 0.03%)</title><rect x="249.5" y="1797" width="0.3" height="15.0" fill="rgb(221,197,6)" rx="2" ry="2"/>
<text x="252.5" y="1807.5"/>
</g>
<g class="hide">
<title>Field::Field (69 samples, 0.02%)</title><rect x="649.3" y="1957" width="0.2" height="15.0" fill="rgb(221,188,52)" rx="2" ry="2"/>
<text x="652.3" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (40 samples, 0.01%)</title><rect x="246.9" y="1589" width="0.2" height="15.0" fill="rgb(217,90,10)" rx="2" ry="2"/>
<text x="249.9" y="1599.5"/>
</g>
<g class="hide">
<title>BPlusTreePage::GetKeySize (85 samples, 0.02%)</title><rect x="513.1" y="1877" width="0.2" height="15.0" fill="rgb(216,150,53)" rx="2" ry="2"/>
<text x="516.1" y="1887.5"/>
</g>
<g class="hide">
<title>[libminisql_shared.so] (39 samples, 0.01%)</title><rect x="424.6" y="1797" width="0.1" height="15.0" fill="rgb(206,176,40)" rx="2" ry="2"/>
<text x="427.6" y="1807.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (310 samples, 0.07%)</title><rect x="10.6" y="2021" width="0.9" height="15.0" fill="rgb(211,203,0)" rx="2" ry="2"/>
<text x="13.6" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1365" width="0.8" height="15.0" fill="rgb(226,225,13)" rx="2" ry="2"/>
<text x="57.8" y="1375.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (39 samples, 0.01%)</title><rect x="448.6" y="1813" width="0.1" height="15.0" fill="rgb(211,29,19)" rx="2" ry="2"/>
<text x="451.6" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (50 samples, 0.01%)</title><rect x="49.3" y="1893" width="0.2" height="15.0" fill="rgb(252,57,25)" rx="2" ry="2"/>
<text x="52.3" y="1903.5"/>
</g>
<g class="hide">
<title>[unknown] (301 samples, 0.07%)</title><rect x="54.8" y="1141" width="0.8" height="15.0" fill="rgb(227,72,52)" rx="2" ry="2"/>
<text x="57.8" y="1151.5"/>
</g>
<g class="hide">
<title>pa_cvolume_valid (703 samples, 0.16%)</title><rect x="174.8" y="2021" width="1.9" height="15.0" fill="rgb(231,156,10)" rx="2" ry="2"/>
<text x="177.8" y="2031.5"/>
</g>
<g class="hide">
<title>VM_Thread (65 samples, 0.02%)</title><rect x="49.8" y="2053" width="0.1" height="15.0" fill="rgb(246,179,17)" rx="2" ry="2"/>
<text x="52.8" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.02%)</title><rect x="390.2" y="1941" width="0.2" height="15.0" fill="rgb(225,226,29)" rx="2" ry="2"/>
<text x="393.2" y="1951.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,011 samples, 0.23%)</title><rect x="605.5" y="1829" width="2.8" height="15.0" fill="rgb(241,113,10)" rx="2" ry="2"/>
<text x="608.5" y="1839.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (290 samples, 0.07%)</title><rect x="516.5" y="1845" width="0.8" height="15.0" fill="rgb(209,41,54)" rx="2" ry="2"/>
<text x="519.5" y="1855.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (717 samples, 0.17%)</title><rect x="636.9" y="1941" width="1.9" height="15.0" fill="rgb(220,24,34)" rx="2" ry="2"/>
<text x="639.9" y="1951.5"/>
</g>
<g class="">
<title>std::__fill_n_a&lt;unsigned long, char&gt; (177 samples, 0.04%)</title><rect x="1035.0719424460444" y="1765" width="8.489208633093524" height="15.0" fill="rgb(209,199,53)" rx="2" ry="2" _orig_x="568.6" _orig_width="0.4"/>
<text x="1038.0719424460444" y="1775.5" _orig_x="571.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.05%)</title><rect x="381.1" y="2021" width="0.6" height="15.0" fill="rgb(212,23,25)" rx="2" ry="2"/>
<text x="384.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (40 samples, 0.01%)</title><rect x="373.2" y="1957" width="0.1" height="15.0" fill="rgb(205,59,32)" rx="2" ry="2"/>
<text x="376.2" y="1967.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (165 samples, 0.04%)</title><rect x="644.3" y="1893" width="0.5" height="15.0" fill="rgb(210,112,37)" rx="2" ry="2"/>
<text x="647.3" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="370.7" y="2005" width="0.1" height="15.0" fill="rgb(246,129,20)" rx="2" ry="2"/>
<text x="373.7" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.05%)</title><rect x="47.8" y="1989" width="0.5" height="15.0" fill="rgb(211,220,20)" rx="2" ry="2"/>
<text x="50.8" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123109.map] (85 samples, 0.02%)</title><rect x="248.4" y="1765" width="0.2" height="15.0" fill="rgb(251,30,22)" rx="2" ry="2"/>
<text x="251.4" y="1775.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (108 samples, 0.03%)</title><rect x="460.2" y="1749" width="0.3" height="15.0" fill="rgb(236,27,24)" rx="2" ry="2"/>
<text x="463.2" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,560 samples, 0.59%)</title><rect x="725.8" y="1717" width="7.0" height="15.0" fill="rgb(213,18,31)" rx="2" ry="2"/>
<text x="728.8" y="1727.5"/>
</g>
<g class="hide">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (37 samples, 0.01%)</title><rect x="441.1" y="1829" width="0.1" height="15.0" fill="rgb(222,38,53)" rx="2" ry="2"/>
<text x="444.1" y="1839.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.01%)</title><rect x="244.0" y="789" width="0.1" height="15.0" fill="rgb(223,134,36)" rx="2" ry="2"/>
<text x="247" y="799.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (39 samples, 0.01%)</title><rect x="617.4" y="1829" width="0.1" height="15.0" fill="rgb(226,163,28)" rx="2" ry="2"/>
<text x="620.4" y="1839.5"/>
</g>
<g class="hide">
<title>VMThread::run (50 samples, 0.01%)</title><rect x="49.8" y="1989" width="0.1" height="15.0" fill="rgb(217,165,1)" rx="2" ry="2"/>
<text x="52.8" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="51.9" y="1877" width="0.2" height="15.0" fill="rgb(243,138,12)" rx="2" ry="2"/>
<text x="54.9" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.02%)</title><rect x="55.7" y="1957" width="0.2" height="15.0" fill="rgb(227,91,26)" rx="2" ry="2"/>
<text x="58.7" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (100 samples, 0.02%)</title><rect x="245.1" y="1333" width="0.2" height="15.0" fill="rgb(231,58,25)" rx="2" ry="2"/>
<text x="248.1" y="1343.5"/>
</g>
<g class="hide">
<title>[code] (129 samples, 0.03%)</title><rect x="51.4" y="1765" width="0.3" height="15.0" fill="rgb(209,94,9)" rx="2" ry="2"/>
<text x="54.4" y="1775.5"/>
</g>
<g class="hide">
<title>[code] (56 samples, 0.01%)</title><rect x="267.7" y="1893" width="0.2" height="15.0" fill="rgb(227,124,13)" rx="2" ry="2"/>
<text x="270.7" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.02%)</title><rect x="16.6" y="1957" width="0.3" height="15.0" fill="rgb(212,119,24)" rx="2" ry="2"/>
<text x="19.6" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (215 samples, 0.05%)</title><rect x="515.2" y="1765" width="0.6" height="15.0" fill="rgb(206,22,10)" rx="2" ry="2"/>
<text x="518.2" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117,733 samples, 27.27%)</title><rect x="806.1" y="2021" width="321.7" height="15.0" fill="rgb(214,121,48)" rx="2" ry="2"/>
<text x="809.1" y="2031.5">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>__xstat64 (99 samples, 0.02%)</title><rect x="32.8" y="2021" width="0.3" height="15.0" fill="rgb(253,191,9)" rx="2" ry="2"/>
<text x="35.8" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.04%)</title><rect x="16.1" y="2005" width="0.4" height="15.0" fill="rgb(252,176,52)" rx="2" ry="2"/>
<text x="19.1" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (673 samples, 0.16%)</title><rect x="316.8" y="1829" width="1.8" height="15.0" fill="rgb(215,27,39)" rx="2" ry="2"/>
<text x="319.8" y="1839.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (844 samples, 0.20%)</title><rect x="352.2" y="2021" width="2.3" height="15.0" fill="rgb(209,87,31)" rx="2" ry="2"/>
<text x="355.2" y="2031.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (4,428 samples, 1.03%)</title><rect x="579.4" y="1877" width="12.1" height="15.0" fill="rgb(212,51,48)" rx="2" ry="2"/>
<text x="582.4" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (403 samples, 0.09%)</title><rect x="50.7" y="1941" width="1.1" height="15.0" fill="rgb(236,11,46)" rx="2" ry="2"/>
<text x="53.7" y="1951.5"/>
</g>
<g class="hide">
<title>[code] (369 samples, 0.09%)</title><rect x="50.8" y="1925" width="1.0" height="15.0" fill="rgb(219,199,37)" rx="2" ry="2"/>
<text x="53.8" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.02%)</title><rect x="364.5" y="1925" width="0.2" height="15.0" fill="rgb(221,35,12)" rx="2" ry="2"/>
<text x="367.5" y="1935.5"/>
</g>
<g class="hide">
<title>ReaderWriterLatch::WUnlock (45 samples, 0.01%)</title><rect x="448.0" y="1861" width="0.1" height="15.0" fill="rgb(252,196,46)" rx="2" ry="2"/>
<text x="451" y="1871.5"/>
</g>
<g class="hide">
<title>[code] (254 samples, 0.06%)</title><rect x="52.1" y="1941" width="0.7" height="15.0" fill="rgb(253,90,12)" rx="2" ry="2"/>
<text x="55.1" y="1951.5"/>
</g>
<g class="hide">
<title>pa_memblock_unref (83 samples, 0.02%)</title><rect x="194.2" y="2037" width="0.2" height="15.0" fill="rgb(209,159,42)" rx="2" ry="2"/>
<text x="197.2" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (206 samples, 0.05%)</title><rect x="31.9" y="2021" width="0.6" height="15.0" fill="rgb(251,139,18)" rx="2" ry="2"/>
<text x="34.9" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.02%)</title><rect x="342.6" y="1989" width="0.2" height="15.0" fill="rgb(207,32,39)" rx="2" ry="2"/>
<text x="345.6" y="1999.5"/>
</g>
<g class="hide">
<title>pa_hashmap_size (178 samples, 0.04%)</title><rect x="193.4" y="2037" width="0.5" height="15.0" fill="rgb(245,147,40)" rx="2" ry="2"/>
<text x="196.4" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (489 samples, 0.11%)</title><rect x="201.0071942446043" y="1749" width="29.712230215827333" height="15.0" fill="rgb(245,119,44)" rx="2" ry="2" _orig_x="529.3" _orig_width="1.4"/>
<text x="204.0071942446043" y="1759.5" _orig_x="532.3">st..</text>
</g>
<g class="hide">
<title>[code] (92 samples, 0.02%)</title><rect x="245.1" y="1189" width="0.2" height="15.0" fill="rgb(217,132,41)" rx="2" ry="2"/>
<text x="248.1" y="1199.5"/>
</g>
<g class="hide">
<title>[code] (166 samples, 0.04%)</title><rect x="242.8" y="965" width="0.5" height="15.0" fill="rgb(246,222,20)" rx="2" ry="2"/>
<text x="245.8" y="975.5"/>
</g>
<g class="hide">
<title>hid_report_raw_event (73 samples, 0.02%)</title><rect x="380.1" y="1941" width="0.2" height="15.0" fill="rgb(245,137,48)" rx="2" ry="2"/>
<text x="383.1" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (51 samples, 0.01%)</title><rect x="381.6" y="1845" width="0.1" height="15.0" fill="rgb(214,1,13)" rx="2" ry="2"/>
<text x="384.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,399 samples, 1.25%)</title><rect x="718.1" y="1797" width="14.7" height="15.0" fill="rgb(220,172,30)" rx="2" ry="2"/>
<text x="721.1" y="1807.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (81 samples, 0.02%)</title><rect x="428.2" y="1797" width="0.2" height="15.0" fill="rgb(237,142,36)" rx="2" ry="2"/>
<text x="431.2" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,814 samples, 1.81%)</title><rect x="711.5" y="1893" width="21.3" height="15.0" fill="rgb(225,114,24)" rx="2" ry="2"/>
<text x="714.5" y="1903.5">[..</text>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (133 samples, 0.03%)</title><rect x="655.3" y="1861" width="0.3" height="15.0" fill="rgb(238,119,12)" rx="2" ry="2"/>
<text x="658.3" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (129 samples, 0.03%)</title><rect x="666.1" y="1989" width="0.3" height="15.0" fill="rgb(253,51,45)" rx="2" ry="2"/>
<text x="669.1" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (427 samples, 0.10%)</title><rect x="208.9" y="1813" width="1.1" height="15.0" fill="rgb(225,172,22)" rx="2" ry="2"/>
<text x="211.9" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (18,296 samples, 4.24%)</title><rect x="1128.8" y="1909" width="50.0" height="15.0" fill="rgb(209,147,31)" rx="2" ry="2"/>
<text x="1131.8" y="1919.5">[[kern..</text>
</g>
<g class="hide">
<title>JSScript::traceChildren (69 samples, 0.02%)</title><rect x="355.8" y="1877" width="0.2" height="15.0" fill="rgb(209,94,41)" rx="2" ry="2"/>
<text x="358.8" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (1,892 samples, 0.44%)</title><rect x="239.6" y="1637" width="5.2" height="15.0" fill="rgb(248,69,23)" rx="2" ry="2"/>
<text x="242.6" y="1647.5"/>
</g>
<g class="">
<title>Schema::GetColumns (85 samples, 0.02%)</title><rect x="1130.5755395683466" y="1877" width="6.366906474820143" height="15.0" fill="rgb(224,99,52)" rx="2" ry="2" _orig_x="573.1" _orig_width="0.3"/>
<text x="1133.5755395683466" y="1887.5" _orig_x="576.1"/>
</g>
<g class="hide">
<title>BufferPoolManager::FetchPage (108 samples, 0.03%)</title><rect x="657.7" y="1957" width="0.3" height="15.0" fill="rgb(213,6,31)" rx="2" ry="2"/>
<text x="660.7" y="1967.5"/>
</g>
<g class="hide">
<title>kworker/u32:7-e (59 samples, 0.01%)</title><rect x="392.0" y="2053" width="0.2" height="15.0" fill="rgb(234,47,32)" rx="2" ry="2"/>
<text x="395" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.03%)</title><rect x="364.9" y="1941" width="0.4" height="15.0" fill="rgb(234,4,42)" rx="2" ry="2"/>
<text x="367.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.04%)</title><rect x="354.1" y="1813" width="0.4" height="15.0" fill="rgb(215,210,11)" rx="2" ry="2"/>
<text x="357.1" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (71 samples, 0.02%)</title><rect x="245.6" y="1413" width="0.2" height="15.0" fill="rgb(206,167,11)" rx="2" ry="2"/>
<text x="248.6" y="1423.5"/>
</g>
<g class="hide">
<title>[unknown] (128 samples, 0.03%)</title><rect x="681.4" y="1989" width="0.4" height="15.0" fill="rgb(231,125,36)" rx="2" ry="2"/>
<text x="684.4" y="1999.5"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (76 samples, 0.02%)</title><rect x="54.1" y="2021" width="0.2" height="15.0" fill="rgb(215,78,23)" rx="2" ry="2"/>
<text x="57.1" y="2031.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (84 samples, 0.02%)</title><rect x="514.7" y="1781" width="0.2" height="15.0" fill="rgb(216,181,13)" rx="2" ry="2"/>
<text x="517.7" y="1791.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_cond_lock (40 samples, 0.01%)</title><rect x="207.4" y="2021" width="0.1" height="15.0" fill="rgb(237,61,30)" rx="2" ry="2"/>
<text x="210.4" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (111 samples, 0.03%)</title><rect x="20.9" y="1733" width="0.3" height="15.0" fill="rgb(216,8,25)" rx="2" ry="2"/>
<text x="23.9" y="1743.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (44 samples, 0.01%)</title><rect x="777.1" y="2021" width="0.1" height="15.0" fill="rgb(228,196,46)" rx="2" ry="2"/>
<text x="780.1" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.02%)</title><rect x="26.5" y="1909" width="0.2" height="15.0" fill="rgb(209,206,5)" rx="2" ry="2"/>
<text x="29.5" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (171 samples, 0.04%)</title><rect x="46.7" y="2005" width="0.5" height="15.0" fill="rgb(236,66,16)" rx="2" ry="2"/>
<text x="49.7" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (52 samples, 0.01%)</title><rect x="244.0" y="1157" width="0.1" height="15.0" fill="rgb(251,228,0)" rx="2" ry="2"/>
<text x="247" y="1167.5"/>
</g>
<g class="hide">
<title>[unknown] (41 samples, 0.01%)</title><rect x="351.4" y="2037" width="0.1" height="15.0" fill="rgb(207,102,12)" rx="2" ry="2"/>
<text x="354.4" y="2047.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (304 samples, 0.07%)</title><rect x="899.2446043165486" y="1829" width="19.10071942446043" height="15.0" fill="rgb(207,150,19)" rx="2" ry="2" _orig_x="562.2" _orig_width="0.9"/>
<text x="902.2446043165486" y="1839.5" _orig_x="565.2"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="12.9" y="1989" width="0.2" height="15.0" fill="rgb(215,47,19)" rx="2" ry="2"/>
<text x="15.9" y="1999.5"/>
</g>
<g class="hide">
<title>ntfs_names_full_collate (166 samples, 0.04%)</title><rect x="791.8" y="2037" width="0.5" height="15.0" fill="rgb(242,72,0)" rx="2" ry="2"/>
<text x="794.8" y="2047.5"/>
</g>
<g class="hide">
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (82 samples, 0.02%)</title><rect x="44.0" y="1877" width="0.3" height="15.0" fill="rgb(245,51,4)" rx="2" ry="2"/>
<text x="47" y="1887.5"/>
</g>
<g class="hide">
<title>BPlusTreeInternalPage::KeyAt (38 samples, 0.01%)</title><rect x="596.4" y="1925" width="0.1" height="15.0" fill="rgb(242,80,52)" rx="2" ry="2"/>
<text x="599.4" y="1935.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.02%)</title><rect x="245.6" y="1541" width="0.2" height="15.0" fill="rgb(251,211,37)" rx="2" ry="2"/>
<text x="248.6" y="1551.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="16.7" y="1893" width="0.2" height="15.0" fill="rgb(210,210,44)" rx="2" ry="2"/>
<text x="19.7" y="1903.5"/>
</g>
<g class="hide">
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (52 samples, 0.01%)</title><rect x="580.9" y="1797" width="0.1" height="15.0" fill="rgb(225,175,13)" rx="2" ry="2"/>
<text x="583.9" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,991 samples, 2.31%)</title><rect x="738.2" y="1941" width="27.3" height="15.0" fill="rgb(248,102,14)" rx="2" ry="2"/>
<text x="741.2" y="1951.5">[[..</text>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_Vector_base (52 samples, 0.01%)</title><rect x="660.6" y="1957" width="0.1" height="15.0" fill="rgb(212,170,34)" rx="2" ry="2"/>
<text x="663.6" y="1967.5"/>
</g>
<g class="hide">
<title>pa_memblock_get_length (56 samples, 0.01%)</title><rect x="80.1" y="2005" width="0.1" height="15.0" fill="rgb(231,122,9)" rx="2" ry="2"/>
<text x="83.1" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (3,133 samples, 0.73%)</title><rect x="238.6" y="1813" width="8.6" height="15.0" fill="rgb(250,16,21)" rx="2" ry="2"/>
<text x="241.6" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (649 samples, 0.15%)</title><rect x="1186.6" y="1957" width="1.8" height="15.0" fill="rgb(249,33,18)" rx="2" ry="2"/>
<text x="1189.6" y="1967.5"/>
</g>
<g class="hide">
<title>std::fill_n&lt;char*, unsigned long, char&gt; (146 samples, 0.03%)</title><rect x="623.7" y="1797" width="0.4" height="15.0" fill="rgb(232,44,40)" rx="2" ry="2"/>
<text x="626.7" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (452 samples, 0.10%)</title><rect x="235.7" y="1797" width="1.3" height="15.0" fill="rgb(242,169,9)" rx="2" ry="2"/>
<text x="238.7" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="348.0" y="1925" width="0.1" height="15.0" fill="rgb(237,220,16)" rx="2" ry="2"/>
<text x="351" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (300 samples, 0.07%)</title><rect x="384.9" y="1941" width="0.9" height="15.0" fill="rgb(228,148,32)" rx="2" ry="2"/>
<text x="387.9" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.03%)</title><rect x="385.5" y="1909" width="0.3" height="15.0" fill="rgb(235,19,52)" rx="2" ry="2"/>
<text x="388.5" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (55 samples, 0.01%)</title><rect x="244.2" y="885" width="0.2" height="15.0" fill="rgb(251,55,2)" rx="2" ry="2"/>
<text x="247.2" y="895.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (69 samples, 0.02%)</title><rect x="473.6" y="1845" width="0.2" height="15.0" fill="rgb(220,46,45)" rx="2" ry="2"/>
<text x="476.6" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (134 samples, 0.03%)</title><rect x="382.3" y="1925" width="0.4" height="15.0" fill="rgb(230,69,5)" rx="2" ry="2"/>
<text x="385.3" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,320 samples, 0.77%)</title><rect x="401.7" y="1877" width="9.1" height="15.0" fill="rgb(229,15,47)" rx="2" ry="2"/>
<text x="404.7" y="1887.5"/>
</g>
<g class="hide">
<title>NetworkManager (468 samples, 0.11%)</title><rect x="30.2" y="2053" width="1.2" height="15.0" fill="rgb(212,64,31)" rx="2" ry="2"/>
<text x="33.2" y="2063.5"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (113 samples, 0.03%)</title><rect x="499.9" y="1829" width="0.3" height="15.0" fill="rgb(219,82,32)" rx="2" ry="2"/>
<text x="502.9" y="1839.5"/>
</g>
<g class="hide">
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (97 samples, 0.02%)</title><rect x="618.0" y="1829" width="0.3" height="15.0" fill="rgb(245,15,45)" rx="2" ry="2"/>
<text x="621" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (53 samples, 0.01%)</title><rect x="358.9" y="2005" width="0.1" height="15.0" fill="rgb(213,159,19)" rx="2" ry="2"/>
<text x="361.9" y="2015.5"/>
</g>
<g class="hide">
<title>JS_CallFunction (256 samples, 0.06%)</title><rect x="357.5" y="2005" width="0.7" height="15.0" fill="rgb(236,76,5)" rx="2" ry="2"/>
<text x="360.5" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (287 samples, 0.07%)</title><rect x="355.6" y="2021" width="0.8" height="15.0" fill="rgb(216,148,4)" rx="2" ry="2"/>
<text x="358.6" y="2031.5"/>
</g>
<g class="">
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (42 samples, 0.01%)</title><rect x="886.5107913669078" y="1797" width="2.122302158273381" height="15.0" fill="rgb(214,5,50)" rx="2" ry="2" _orig_x="561.6" _orig_width="0.1"/>
<text x="889.5107913669078" y="1807.5" _orig_x="564.6"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (169 samples, 0.04%)</title><rect x="603.5" y="1749" width="0.5" height="15.0" fill="rgb(223,171,0)" rx="2" ry="2"/>
<text x="606.5" y="1759.5"/>
</g>
<g class="hide">
<title>ntfs_attr_lookup (106 samples, 0.02%)</title><rect x="774.9" y="2021" width="0.3" height="15.0" fill="rgb(243,94,1)" rx="2" ry="2"/>
<text x="777.9" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (298 samples, 0.07%)</title><rect x="54.8" y="325" width="0.8" height="15.0" fill="rgb(238,199,54)" rx="2" ry="2"/>
<text x="57.8" y="335.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (38 samples, 0.01%)</title><rect x="592.0" y="1877" width="0.1" height="15.0" fill="rgb(217,61,39)" rx="2" ry="2"/>
<text x="595" y="1887.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (60 samples, 0.01%)</title><rect x="494.2" y="1861" width="0.2" height="15.0" fill="rgb(208,0,46)" rx="2" ry="2"/>
<text x="497.2" y="1871.5"/>
</g>
<g class="hide">
<title>pa_memblock_unref (162 samples, 0.04%)</title><rect x="179.2" y="2021" width="0.5" height="15.0" fill="rgb(252,93,9)" rx="2" ry="2"/>
<text x="182.2" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (107 samples, 0.02%)</title><rect x="28.4" y="2021" width="0.3" height="15.0" fill="rgb(207,97,50)" rx="2" ry="2"/>
<text x="31.4" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (187 samples, 0.04%)</title><rect x="14.7" y="1781" width="0.5" height="15.0" fill="rgb(247,40,29)" rx="2" ry="2"/>
<text x="17.7" y="1791.5"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (6,655 samples, 1.54%)</title><rect x="679.7" y="2021" width="18.2" height="15.0" fill="rgb(209,117,12)" rx="2" ry="2"/>
<text x="682.7" y="2031.5">[..</text>
</g>
<g class="hide">
<title>[code] (74 samples, 0.02%)</title><rect x="247.5" y="1637" width="0.2" height="15.0" fill="rgb(222,107,7)" rx="2" ry="2"/>
<text x="250.5" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,045 samples, 0.47%)</title><rect x="759.9" y="1781" width="5.6" height="15.0" fill="rgb(226,159,12)" rx="2" ry="2"/>
<text x="762.9" y="1791.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (99 samples, 0.02%)</title><rect x="505.8" y="1781" width="0.3" height="15.0" fill="rgb(253,76,37)" rx="2" ry="2"/>
<text x="508.8" y="1791.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (2,131 samples, 0.49%)</title><rect x="500.4" y="1813" width="5.8" height="15.0" fill="rgb(218,119,45)" rx="2" ry="2"/>
<text x="503.4" y="1823.5"/>
</g>
<g class="hide">
<title>[code] (43 samples, 0.01%)</title><rect x="244.0" y="805" width="0.1" height="15.0" fill="rgb(228,177,36)" rx="2" ry="2"/>
<text x="247" y="815.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (47 samples, 0.01%)</title><rect x="793.0" y="1813" width="0.1" height="15.0" fill="rgb(249,167,43)" rx="2" ry="2"/>
<text x="796" y="1823.5"/>
</g>
<g class="hide">
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (208 samples, 0.05%)</title><rect x="487.8" y="1797" width="0.6" height="15.0" fill="rgb(237,208,30)" rx="2" ry="2"/>
<text x="490.8" y="1807.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.02%)</title><rect x="346.8" y="1893" width="0.2" height="15.0" fill="rgb(242,57,25)" rx="2" ry="2"/>
<text x="349.8" y="1903.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (38 samples, 0.01%)</title><rect x="581.9" y="1813" width="0.1" height="15.0" fill="rgb(219,112,31)" rx="2" ry="2"/>
<text x="584.9" y="1823.5"/>
</g>
<g class="hide">
<title>runtime.mstart0 (76 samples, 0.02%)</title><rect x="340.7" y="2005" width="0.2" height="15.0" fill="rgb(244,161,12)" rx="2" ry="2"/>
<text x="343.7" y="2015.5"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (42 samples, 0.01%)</title><rect x="246.9" y="1701" width="0.2" height="15.0" fill="rgb(210,120,22)" rx="2" ry="2"/>
<text x="249.9" y="1711.5"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Debounce::Debounce (2,559 samples, 0.59%)</title><rect x="333.7" y="2021" width="7.0" height="15.0" fill="rgb(221,105,9)" rx="2" ry="2"/>
<text x="336.7" y="2031.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::~SimpleMemHeap (107 samples, 0.02%)</title><rect x="646.7" y="1829" width="0.3" height="15.0" fill="rgb(234,67,32)" rx="2" ry="2"/>
<text x="649.7" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,015 samples, 0.24%)</title><rect x="782.1" y="1893" width="2.8" height="15.0" fill="rgb(248,106,17)" rx="2" ry="2"/>
<text x="785.1" y="1903.5"/>
</g>
<g class="">
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (38 samples, 0.01%)</title><rect x="109.74820143884988" y="1685" width="2.122302158273381" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" _orig_x="525.0" _orig_width="0.1"/>
<text x="112.74820143884988" y="1695.5" _orig_x="528"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (41 samples, 0.01%)</title><rect x="15.5" y="1637" width="0.1" height="15.0" fill="rgb(218,79,3)" rx="2" ry="2"/>
<text x="18.5" y="1647.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,044 samples, 2.33%)</title><rect x="738.0" y="1957" width="27.5" height="15.0" fill="rgb(224,63,27)" rx="2" ry="2"/>
<text x="741" y="1967.5">[[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.02%)</title><rect x="360.8" y="1877" width="0.2" height="15.0" fill="rgb(239,104,18)" rx="2" ry="2"/>
<text x="363.8" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.02%)</title><rect x="33.5" y="1909" width="0.2" height="15.0" fill="rgb(206,60,36)" rx="2" ry="2"/>
<text x="36.5" y="1919.5"/>
</g>
<g class="hide">
<title>Row::~Row (125 samples, 0.03%)</title><rect x="642.5" y="1925" width="0.3" height="15.0" fill="rgb(231,108,26)" rx="2" ry="2"/>
<text x="645.5" y="1935.5"/>
</g>
<g class="">
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (312 samples, 0.07%)</title><rect x="122.48201438849064" y="1765" width="16.978417266187048" height="15.0" fill="rgb(241,35,43)" rx="2" ry="2" _orig_x="525.6" _orig_width="0.8"/>
<text x="125.48201438849064" y="1775.5" _orig_x="528.6"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.03%)</title><rect x="237.0" y="2005" width="0.4" height="15.0" fill="rgb(221,47,51)" rx="2" ry="2"/>
<text x="240" y="2015.5"/>
</g>
<g class="hide">
<title>BufferPoolManager::IsPageFree (158 samples, 0.04%)</title><rect x="440.5" y="1877" width="0.5" height="15.0" fill="rgb(233,78,31)" rx="2" ry="2"/>
<text x="443.5" y="1887.5"/>
</g>
<g class="hide">
<title>std::__niter_base&lt;Field**&gt; (66 samples, 0.02%)</title><rect x="620.1" y="1797" width="0.1" height="15.0" fill="rgb(247,22,52)" rx="2" ry="2"/>
<text x="623.1" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (53 samples, 0.01%)</title><rect x="27.0" y="245" width="0.1" height="15.0" fill="rgb(217,1,5)" rx="2" ry="2"/>
<text x="30" y="255.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (69 samples, 0.02%)</title><rect x="245.6" y="1253" width="0.2" height="15.0" fill="rgb(234,108,51)" rx="2" ry="2"/>
<text x="248.6" y="1263.5"/>
</g>
<g class="">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (100 samples, 0.02%)</title><rect x="631.8345323741021" y="1845" width="6.366906474820143" height="15.0" fill="rgb(247,176,9)" rx="2" ry="2" _orig_x="549.6" _orig_width="0.3"/>
<text x="634.8345323741021" y="1855.5" _orig_x="552.6"/>
</g>
<g class="hide">
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,858 samples, 0.43%)</title><rect x="417.5" y="1781" width="5.1" height="15.0" fill="rgb(238,161,52)" rx="2" ry="2"/>
<text x="420.5" y="1791.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Row, std::allocator&lt;Row&gt; &gt;::push_back (1,247 samples, 0.29%)</title><rect x="645.3" y="1957" width="3.5" height="15.0" fill="rgb(233,66,46)" rx="2" ry="2"/>
<text x="648.3" y="1967.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (53 samples, 0.01%)</title><rect x="243.7" y="917" width="0.2" height="15.0" fill="rgb(232,68,46)" rx="2" ry="2"/>
<text x="246.7" y="927.5"/>
</g>
<g class="hide">
<title>azx_get_position (8,597 samples, 1.99%)</title><rect x="137.1" y="1845" width="23.5" height="15.0" fill="rgb(220,80,0)" rx="2" ry="2"/>
<text x="140.1" y="1855.5">a..</text>
</g>
<g class="hide">
<title>[code] (3,524 samples, 0.82%)</title><rect x="238.4" y="1845" width="9.6" height="15.0" fill="rgb(227,171,35)" rx="2" ry="2"/>
<text x="241.4" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (162 samples, 0.04%)</title><rect x="333.2" y="1765" width="0.5" height="15.0" fill="rgb(248,43,46)" rx="2" ry="2"/>
<text x="336.2" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (891 samples, 0.21%)</title><rect x="443.1" y="1685" width="2.4" height="15.0" fill="rgb(209,21,3)" rx="2" ry="2"/>
<text x="446.1" y="1695.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,234 samples, 0.29%)</title><rect x="257.6" y="1893" width="3.4" height="15.0" fill="rgb(225,22,17)" rx="2" ry="2"/>
<text x="260.6" y="1903.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (1,074 samples, 0.25%)</title><rect x="336.8" y="2005" width="2.9" height="15.0" fill="rgb(208,50,2)" rx="2" ry="2"/>
<text x="339.8" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43 samples, 0.01%)</title><rect x="14.0" y="1989" width="0.1" height="15.0" fill="rgb(240,196,46)" rx="2" ry="2"/>
<text x="17" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,374 samples, 0.55%)</title><rect x="254.5" y="1957" width="6.5" height="15.0" fill="rgb(252,159,1)" rx="2" ry="2"/>
<text x="257.5" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (84 samples, 0.02%)</title><rect x="373.4" y="2037" width="0.2" height="15.0" fill="rgb(247,101,4)" rx="2" ry="2"/>
<text x="376.4" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="798.3" y="2005" width="0.2" height="15.0" fill="rgb(212,225,39)" rx="2" ry="2"/>
<text x="801.3" y="2015.5"/>
</g>
<g class="hide">
<title>IndexKey::DeserializeToKey (15,489 samples, 3.59%)</title><rect x="452.8" y="1877" width="42.3" height="15.0" fill="rgb(233,65,50)" rx="2" ry="2"/>
<text x="455.8" y="1887.5">Ind..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.02%)</title><rect x="32.5" y="1909" width="0.2" height="15.0" fill="rgb(211,145,49)" rx="2" ry="2"/>
<text x="35.5" y="1919.5"/>
</g>
<g class="hide">
<title>[libasound.so.2.0.0] (233 samples, 0.05%)</title><rect x="70.7" y="2005" width="0.7" height="15.0" fill="rgb(216,120,51)" rx="2" ry="2"/>
<text x="73.7" y="2015.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (172 samples, 0.04%)</title><rect x="597.4" y="1845" width="0.5" height="15.0" fill="rgb(229,130,8)" rx="2" ry="2"/>
<text x="600.4" y="1855.5"/>
</g>
<g class="hide">
<title>snd_pcm_ioctl (145 samples, 0.03%)</title><rect x="171.7" y="1973" width="0.4" height="15.0" fill="rgb(207,204,39)" rx="2" ry="2"/>
<text x="174.7" y="1983.5"/>
</g>
<g class="hide">
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (1,635 samples, 0.38%)</title><rect x="486.8" y="1845" width="4.4" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2"/>
<text x="489.8" y="1855.5"/>
</g>
<g class="hide">
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (645 samples, 0.15%)</title><rect x="501.0" y="1781" width="1.7" height="15.0" fill="rgb(205,69,21)" rx="2" ry="2"/>
<text x="504" y="1791.5"/>
</g>
<g class="hide">
<title>BitmapPage&lt;4096ul&gt;::IsPageFree (46 samples, 0.01%)</title><rect x="637.1" y="1893" width="0.2" height="15.0" fill="rgb(216,225,24)" rx="2" ry="2"/>
<text x="640.1" y="1903.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (237 samples, 0.05%)</title><rect x="244.8" y="1493" width="0.7" height="15.0" fill="rgb(219,70,24)" rx="2" ry="2"/>
<text x="247.8" y="1503.5"/>
</g>
<g class="hide">
<title>AWT-EventQueue- (1,161 samples, 0.27%)</title><rect x="10.0" y="2053" width="3.2" height="15.0" fill="rgb(250,196,19)" rx="2" ry="2"/>
<text x="13" y="2063.5"/>
</g>
<g class="hide">
<title>Row::~Row (4,363 samples, 1.01%)</title><rect x="497.4" y="1877" width="12.0" height="15.0" fill="rgb(227,23,29)" rx="2" ry="2"/>
<text x="500.4" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.02%)</title><rect x="798.0" y="2005" width="0.2" height="15.0" fill="rgb(205,39,27)" rx="2" ry="2"/>
<text x="801" y="2015.5"/>
</g>
<g class="hide">
<title>__libc_disable_asynccancel (110 samples, 0.03%)</title><rect x="75.2" y="2005" width="0.3" height="15.0" fill="rgb(240,192,36)" rx="2" ry="2"/>
<text x="78.2" y="2015.5"/>
</g>
<g class="hide">
<title>SimpleMemHeap::SimpleMemHeap (403 samples, 0.09%)</title><rect x="495.7" y="1861" width="1.1" height="15.0" fill="rgb(237,89,43)" rx="2" ry="2"/>
<text x="498.7" y="1871.5"/>
</g>
<g class="hide">
<title>Thread::call_run (47 samples, 0.01%)</title><rect x="22.6" y="2005" width="0.1" height="15.0" fill="rgb(240,76,52)" rx="2" ry="2"/>
<text x="25.6" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.05%)</title><rect x="382.8" y="1973" width="0.6" height="15.0" fill="rgb(242,189,35)" rx="2" ry="2"/>
<text x="385.8" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="50.3" y="1893" width="0.1" height="15.0" fill="rgb(234,49,29)" rx="2" ry="2"/>
<text x="53.3" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (39 samples, 0.01%)</title><rect x="373.7" y="1941" width="0.1" height="15.0" fill="rgb(229,215,44)" rx="2" ry="2"/>
<text x="376.7" y="1951.5"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (2,274 samples, 0.53%)</title><rect x="167.05035971223214" y="1829" width="131.58273381294964" height="15.0" fill="rgb(232,210,0)" rx="2" ry="2" _orig_x="527.7" _orig_width="6.2"/>
<text x="170.05035971223214" y="1839.5" _orig_x="530.7">SimpleMemHeap::A..</text>
</g>
<g class="hide">
<title>[unknown] (197 samples, 0.05%)</title><rect x="369.9" y="2005" width="0.6" height="15.0" fill="rgb(234,69,24)" rx="2" ry="2"/>
<text x="372.9" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (38 samples, 0.01%)</title><rect x="51.9" y="1861" width="0.2" height="15.0" fill="rgb(235,42,54)" rx="2" ry="2"/>
<text x="54.9" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (18,637 samples, 4.32%)</title><rect x="1127.8" y="1973" width="51.0" height="15.0" fill="rgb(228,68,21)" rx="2" ry="2"/>
<text x="1130.8" y="1983.5">[unk..</text>
</g>
<g class="hide">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (113 samples, 0.03%)</title><rect x="517.7" y="1845" width="0.3" height="15.0" fill="rgb(206,2,53)" rx="2" ry="2"/>
<text x="520.7" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (320 samples, 0.07%)</title><rect x="385.8" y="2037" width="0.8" height="15.0" fill="rgb(247,162,36)" rx="2" ry="2"/>
<text x="388.8" y="2047.5"/>
</g>
<g class="hide">
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (49 samples, 0.01%)</title><rect x="595.1" y="1893" width="0.1" height="15.0" fill="rgb(215,204,1)" rx="2" ry="2"/>
<text x="598.1" y="1903.5"/>
</g>
<g class="hide">
<title>runtime.mstart1 (76 samples, 0.02%)</title><rect x="340.7" y="1989" width="0.2" height="15.0" fill="rgb(226,30,49)" rx="2" ry="2"/>
<text x="343.7" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (57 samples, 0.01%)</title><rect x="15.5" y="1669" width="0.1" height="15.0" fill="rgb(208,192,51)" rx="2" ry="2"/>
<text x="18.5" y="1679.5"/>
</g>
<g class="hide">
<title>[code] (702 samples, 0.16%)</title><rect x="208.3" y="1941" width="1.9" height="15.0" fill="rgb(250,107,25)" rx="2" ry="2"/>
<text x="211.3" y="1951.5"/>
</g>
<g class="hide">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (80 samples, 0.02%)</title><rect x="450.1" y="1845" width="0.2" height="15.0" fill="rgb(206,37,24)" rx="2" ry="2"/>
<text x="453.1" y="1855.5"/>
</g>
<g class="parent">
<title>__libc_start_main (92,115 samples, 21.34%)</title><rect x="10" y="2037" width="1180" height="15.0" fill="rgb(253,47,15)" rx="2" ry="2" _orig_x="410.8" _orig_width="251.7"/>
<text x="13" y="2047.5" _orig_x="413.8">__libc_start_main </text>
</g>
<g class="hide">
<title>__pthread_rwlock_rdlock (45 samples, 0.01%)</title><rect x="707.1" y="1989" width="0.1" height="15.0" fill="rgb(234,12,5)" rx="2" ry="2"/>
<text x="710.1" y="1999.5"/>
</g>
</g>
</svg>
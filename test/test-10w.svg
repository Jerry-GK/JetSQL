<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
		<stop stop-color="#eeeeee" offset="5%"/>
		<stop stop-color="#eeeeb0" offset="95%"/>
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"/>
<text id="title" x="600.00" y="24">Flame Graph</text>
<text id="details" x="10.00" y="2117">Function: Row::DeserializeFrom (32,689 samples, 4.85%)</text>
<text id="unzoom" x="10.00" y="24" class="">Reset Zoom</text>
<text id="search" x="1090.00" y="24">Search</text>
<text id="ignorecase" x="1174.00" y="24">ic</text>
<text id="matched" x="1090.00" y="2117"> </text>
<g id="frames">
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.01%)</title><rect x="809.2100205902539" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(228,148,6)" rx="2" ry="2" _orig_x="802.1" _orig_width="0.2"/>
<text x="812.2100205902539" y="1887.5" _orig_x="805.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="332.9739190116677" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(245,215,29)" rx="2" ry="2" _orig_x="365.7" _orig_width="0.1"/>
<text x="335.9739190116677" y="1887.5" _orig_x="368.67"/>
</g>
<g>
<title>_int_free (79 samples, 0.01%)</title><rect x="1037.336993822924" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(243,70,8)" rx="2" ry="2" _orig_x="660.5" _orig_width="0.1"/>
<text x="1040.336993822924" y="1775.5" _orig_x="663.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,687 samples, 0.99%)</title><rect x="716.1235415236787" y="1925" width="12.768016472203156" height="15.0" fill="rgb(221,109,0)" rx="2" ry="2" _orig_x="716.8" _orig_width="11.7"/>
<text x="719.1235415236787" y="1935.5" _orig_x="719.76"/>
</g>
<g class="hide">
<title>ntfs_attr_pwrite (459 samples, 0.07%)</title><rect x="787.3843514070006" y="2037" width="0.8730267673301304" height="15.0" fill="rgb(218,65,35)" rx="2" ry="2" _orig_x="782.1" _orig_width="0.8"/>
<text x="790.3843514070006" y="2047.5" _orig_x="785.12"/>
</g>
<g>
<title>BPlusTreeIndex::InsertEntry (41,983 samples, 6.23%)</title><rect x="12.024708304735757" y="1957" width="297.6321207961565" height="15.0" fill="rgb(248,144,34)" rx="2" ry="2" _orig_x="407.3" _orig_width="73.5"/>
<text x="15.024708304735757" y="1967.5" _orig_x="410.28">BPlusTreeIndex::InsertEntry </text>
</g>
<g class="hide">
<title>[code] (67 samples, 0.01%)</title><rect x="87.54426904598482" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(236,153,6)" rx="2" ry="2" _orig_x="140.8" _orig_width="0.2"/>
<text x="90.54426904598482" y="1919.5" _orig_x="143.83"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (58 samples, 0.01%)</title><rect x="453.0061770761841" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(248,57,34)" rx="2" ry="2" _orig_x="516.2" _orig_width="0.1"/>
<text x="456.0061770761841" y="1743.5" _orig_x="519.22"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (61 samples, 0.01%)</title><rect x="1108.6067261496225" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(214,151,20)" rx="2" ry="2" _orig_x="678.1" _orig_width="0.1"/>
<text x="1111.6067261496225" y="1823.5" _orig_x="681.08"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (505 samples, 0.07%)</title><rect x="709.2" y="2053" width="0.9" height="15.0" fill="rgb(253,173,16)" rx="2" ry="2"/>
<text x="712.21" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,054 samples, 0.45%)</title><rect x="125.30267673301294" y="1749" width="5.783802333562114" height="15.0" fill="rgb(245,28,0)" rx="2" ry="2" _orig_x="175.4" _orig_width="5.3"/>
<text x="128.30267673301296" y="1759.5" _orig_x="178.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.01%)</title><rect x="809.9739190116677" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(224,4,14)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="2031.5" _orig_x="805.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (81 samples, 0.01%)</title><rect x="1026.8085106382978" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(227,83,13)" rx="2" ry="2" _orig_x="657.9" _orig_width="0.2"/>
<text x="1029.8085106382978" y="1855.5" _orig_x="660.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (586 samples, 0.09%)</title><rect x="330.9004804392587" y="2037" width="1.091283459162663" height="15.0" fill="rgb(249,31,5)" rx="2" ry="2" _orig_x="363.8" _orig_width="1.0"/>
<text x="333.9004804392587" y="2047.5" _orig_x="366.78"/>
</g>
<g class="hide">
<title>[unknown] (58 samples, 0.01%)</title><rect x="31.0" y="1733" width="0.1" height="15.0" fill="rgb(219,216,15)" rx="2" ry="2"/>
<text x="33.98" y="1743.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="773" width="2.182566918325326" height="15.0" fill="rgb(254,91,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="783.5" _orig_x="117.41"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (690 samples, 0.10%)</title><rect x="397.5291695264241" y="1813" width="4.85929993136582" height="15.0" fill="rgb(245,20,12)" rx="2" ry="2" _orig_x="502.5" _orig_width="1.2"/>
<text x="400.5291695264241" y="1823.5" _orig_x="505.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (652 samples, 0.10%)</title><rect x="329.5909402882635" y="2021" width="1.3095401509951956" height="15.0" fill="rgb(252,64,7)" rx="2" ry="2" _orig_x="362.6" _orig_width="1.2"/>
<text x="332.5909402882635" y="2031.5" _orig_x="365.63"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (273 samples, 0.04%)</title><rect x="22.95813315030881" y="1717" width="2.0247083047357584" height="15.0" fill="rgb(216,44,20)" rx="2" ry="2" _orig_x="410.0" _orig_width="0.5"/>
<text x="25.95813315030881" y="1727.5" _orig_x="413.01"/>
</g>
<g class="hide">
<title>g_ptr_array_remove_range (101 samples, 0.01%)</title><rect x="55.3" y="2053" width="0.2" height="15.0" fill="rgb(206,88,8)" rx="2" ry="2"/>
<text x="58.33" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (110 samples, 0.02%)</title><rect x="103.54152367879189" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(239,153,16)" rx="2" ry="2" _orig_x="429.9" _orig_width="0.1"/>
<text x="106.54152367879189" y="1791.5" _orig_x="432.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="66.15511324639661" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(212,206,17)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1919.5" _orig_x="124.20"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1141" width="2.182566918325326" height="15.0" fill="rgb(211,209,45)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1151.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (73 samples, 0.01%)</title><rect x="975.3809196980098" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(218,120,39)" rx="2" ry="2" _orig_x="645.2" _orig_width="0.1"/>
<text x="978.3809196980098" y="1871.5" _orig_x="648.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (199 samples, 0.03%)</title><rect x="20.761006289308305" y="1749" width="1.4842767295597485" height="15.0" fill="rgb(254,98,25)" rx="2" ry="2" _orig_x="393.6" _orig_width="0.4"/>
<text x="23.761006289308305" y="1759.5" _orig_x="396.64"/>
</g>
<g class="hide">
<title>[unknown] (147 samples, 0.02%)</title><rect x="342.3" y="2053" width="0.2" height="15.0" fill="rgb(237,161,36)" rx="2" ry="2"/>
<text x="345.28" y="2063.5"/>
</g>
<g>
<title>Row::~Row (398 samples, 0.06%)</title><rect x="331.92862045298557" y="1941" width="2.8345916266300617" height="15.0" fill="rgb(251,4,41)" rx="2" ry="2" _orig_x="486.3" _orig_width="0.7"/>
<text x="334.92862045298557" y="1951.5" _orig_x="489.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,936 samples, 0.29%)</title><rect x="349.67055593685643" y="1957" width="3.710363761153054" height="15.0" fill="rgb(247,68,43)" rx="2" ry="2" _orig_x="381.0" _orig_width="3.4"/>
<text x="352.67055593685643" y="1967.5" _orig_x="384.01"/>
</g>
<g class="hide">
<title>[code] (106 samples, 0.02%)</title><rect x="66.7" y="1957" width="0.1" height="15.0" fill="rgb(247,226,46)" rx="2" ry="2"/>
<text x="69.66" y="1967.5"/>
</g>
<g class="hide">
<title>[github-desktop] (247 samples, 0.04%)</title><rect x="178.22992450240213" y="1861" width="0.5456417295813315" height="15.0" fill="rgb(230,128,53)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1871.5" _orig_x="226.95"/>
</g>
<g class="hide">
<title>gnome-terminal- (41,090 samples, 6.10%)</title><rect x="268.2" y="2069" width="72.0" height="15.0" fill="rgb(251,21,50)" rx="2" ry="2"/>
<text x="271.21" y="2079.5">gnome-te..</text>
</g>
<g>
<title>[[kernel.kallsyms]] (91 samples, 0.01%)</title><rect x="57.783115991763935" y="1541" width="0.8098833218943035" height="15.0" fill="rgb(242,75,46)" rx="2" ry="2" _orig_x="418.6" _orig_width="0.2"/>
<text x="60.783115991763935" y="1551.5" _orig_x="421.62"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::emplace_back&lt;Field&gt; (353 samples, 0.05%)</title><rect x="1102.127659574468" y="1925" width="2.42964996568291" height="15.0" fill="rgb(205,162,43)" rx="2" ry="2" _orig_x="676.5" _orig_width="0.6"/>
<text x="1105.127659574468" y="1935.5" _orig_x="679.49"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.01%)</title><rect x="135.01509951956066" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(228,55,8)" rx="2" ry="2" _orig_x="184.3" _orig_width="0.2"/>
<text x="138.01509951956066" y="1999.5" _orig_x="187.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.02%)</title><rect x="62.22649279341102" y="1781" width="0.2182566918325326" height="15.0" fill="rgb(242,102,17)" rx="2" ry="2" _orig_x="117.6" _orig_width="0.2"/>
<text x="65.22649279341101" y="1791.5" _orig_x="120.56"/>
</g>
<g class="hide">
<title>[code] (68 samples, 0.01%)</title><rect x="15.9" y="1669" width="0.2" height="15.0" fill="rgb(216,196,35)" rx="2" ry="2"/>
<text x="18.95" y="1679.5"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (249 samples, 0.04%)</title><rect x="117.30954015099519" y="1797" width="1.619766643788607" height="15.0" fill="rgb(249,5,18)" rx="2" ry="2" _orig_x="433.3" _orig_width="0.4"/>
<text x="120.30954015099519" y="1807.5" _orig_x="436.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (648 samples, 0.10%)</title><rect x="211.18668496911454" y="1861" width="1.3095401509951956" height="15.0" fill="rgb(212,36,23)" rx="2" ry="2" _orig_x="254.1" _orig_width="1.2"/>
<text x="214.18668496911454" y="1871.5" _orig_x="257.15"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (66 samples, 0.01%)</title><rect x="244.4612216884007" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(244,77,41)" rx="2" ry="2" _orig_x="464.7" _orig_width="0.1"/>
<text x="247.4612216884007" y="1791.5" _orig_x="467.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,296 samples, 0.19%)</title><rect x="61.57861635220139" y="1749" width="8.163522012578618" height="15.0" fill="rgb(223,81,30)" rx="2" ry="2" _orig_x="404.6" _orig_width="2.2"/>
<text x="64.57861635220138" y="1759.5" _orig_x="407.55"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (125 samples, 0.02%)</title><rect x="67.57378174330807" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(213,115,33)" rx="2" ry="2" _orig_x="122.5" _orig_width="0.2"/>
<text x="70.57378174330807" y="2047.5" _orig_x="125.47"/>
</g>
<g>
<title>[libminisql_shared.so] (66 samples, 0.01%)</title><rect x="566.3898421413866" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(247,100,30)" rx="2" ry="2" _orig_x="544.2" _orig_width="0.1"/>
<text x="569.3898421413866" y="1823.5" _orig_x="547.19"/>
</g>
<g class="hide">
<title>[code] (197 samples, 0.03%)</title><rect x="85.90734385724082" y="1429" width="0.4365133836650652" height="15.0" fill="rgb(221,44,47)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1439.5" _orig_x="142.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="13.336993822923718" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(243,117,43)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1935.5" _orig_x="75.81"/>
</g>
<g class="hide">
<title>[libz.so.1.2.11] (850 samples, 0.13%)</title><rect x="278.4" y="2053" width="1.5" height="15.0" fill="rgb(253,120,29)" rx="2" ry="2"/>
<text x="281.43" y="2063.5"/>
</g>
<g class="hide">
<title>vpnagentd (375 samples, 0.06%)</title><rect x="1186.2" y="2069" width="0.7" height="15.0" fill="rgb(242,21,49)" rx="2" ry="2"/>
<text x="1189.22" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (180 samples, 0.03%)</title><rect x="339.30336307481116" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(243,113,37)" rx="2" ry="2" _orig_x="371.5" _orig_width="0.3"/>
<text x="342.30336307481116" y="1935.5" _orig_x="374.53"/>
</g>
<g>
<title>std::_Destroy&lt;char*&gt; (69 samples, 0.01%)</title><rect x="973.3562113932741" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(235,67,17)" rx="2" ry="2" _orig_x="644.7" _orig_width="0.1"/>
<text x="976.3562113932741" y="1855.5" _orig_x="647.68"/>
</g>
<g class="hide">
<title>[unknown] (81 samples, 0.01%)</title><rect x="736.6396705559367" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(237,142,0)" rx="2" ry="2" _orig_x="735.6" _orig_width="0.2"/>
<text x="739.6396705559367" y="1983.5" _orig_x="738.62"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (339 samples, 0.05%)</title><rect x="155.3129718599862" y="2005" width="0.6547700754975978" height="15.0" fill="rgb(247,219,32)" rx="2" ry="2" _orig_x="202.9" _orig_width="0.6"/>
<text x="158.3129718599862" y="2015.5" _orig_x="205.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (395 samples, 0.06%)</title><rect x="11.263555250514667" y="1957" width="0.7638984214138641" height="15.0" fill="rgb(237,28,5)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1967.5" _orig_x="73.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (354 samples, 0.05%)</title><rect x="581.7776252573781" y="1781" width="2.42964996568291" height="15.0" fill="rgb(229,35,18)" rx="2" ry="2" _orig_x="548.0" _orig_width="0.6"/>
<text x="584.7776252573781" y="1791.5" _orig_x="551.00"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,301 samples, 0.19%)</title><rect x="18.098833218943025" y="1765" width="9.313658201784488" height="15.0" fill="rgb(217,144,29)" rx="2" ry="2" _orig_x="408.8" _orig_width="2.3"/>
<text x="21.098833218943025" y="1775.5" _orig_x="411.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (799 samples, 0.12%)</title><rect x="298.05284831846245" y="1925" width="1.5277968428277282" height="15.0" fill="rgb(215,137,14)" rx="2" ry="2" _orig_x="333.7" _orig_width="1.4"/>
<text x="301.05284831846245" y="1935.5" _orig_x="336.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (315 samples, 0.05%)</title><rect x="525.085792724777" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(208,157,38)" rx="2" ry="2" _orig_x="534.0" _orig_width="0.5"/>
<text x="528.085792724777" y="1743.5" _orig_x="536.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (927 samples, 0.14%)</title><rect x="1183.8" y="2005" width="1.6" height="15.0" fill="rgb(212,33,10)" rx="2" ry="2"/>
<text x="1186.76" y="2015.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (61 samples, 0.01%)</title><rect x="308.092656142759" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(233,27,54)" rx="2" ry="2" _orig_x="342.9" _orig_width="0.1"/>
<text x="311.092656142759" y="2047.5" _orig_x="345.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (592 samples, 0.09%)</title><rect x="363.8" y="2053" width="1.0" height="15.0" fill="rgb(212,152,48)" rx="2" ry="2"/>
<text x="366.77" y="2063.5"/>
</g>
<g class="hide">
<title>graphene_vec3_init (68 samples, 0.01%)</title><rect x="219.26218256691823" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(252,111,4)" rx="2" ry="2" _orig_x="261.5" _orig_width="0.1"/>
<text x="222.26218256691823" y="2047.5" _orig_x="264.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (298 samples, 0.04%)</title><rect x="1165.1383647798743" y="1989" width="2.2264150943396226" height="15.0" fill="rgb(254,160,4)" rx="2" ry="2" _orig_x="702.0" _orig_width="0.6"/>
<text x="1168.1383647798743" y="1999.5" _orig_x="705.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (170 samples, 0.03%)</title><rect x="13.227865477007457" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(245,28,49)" rx="2" ry="2" _orig_x="72.7" _orig_width="0.3"/>
<text x="16.227865477007455" y="2031.5" _orig_x="75.71"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1429" width="1.091283459162663" height="15.0" fill="rgb(213,111,22)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1439.5" _orig_x="301.96"/>
</g>
<g>
<title>Field::DeserializeFrom (13,699 samples, 2.03%)</title><rect x="760.3568977350722" y="1877" width="97.18599862731641" height="15.0" fill="rgb(237,221,52)" rx="2" ry="2" _orig_x="592.1" _orig_width="24.0"/>
<text x="763.3568977350722" y="1887.5" _orig_x="595.14">Field::Deserial..</text>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (3,056 samples, 0.45%)</title><rect x="614.5778997940976" y="1861" width="21.866849691146193" height="15.0" fill="rgb(209,59,16)" rx="2" ry="2" _orig_x="556.1" _orig_width="5.4"/>
<text x="617.5778997940976" y="1871.5" _orig_x="559.10"/>
</g>
<g class="hide">
<title>kworker/u32:1-p (2,829 samples, 0.42%)</title><rect x="379.5" y="2069" width="4.9" height="15.0" fill="rgb(242,8,14)" rx="2" ry="2"/>
<text x="382.46" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (130 samples, 0.02%)</title><rect x="1096.0535346602608" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(251,177,35)" rx="2" ry="2" _orig_x="675.0" _orig_width="0.2"/>
<text x="1099.0535346602608" y="1903.5" _orig_x="678.00"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (190 samples, 0.03%)</title><rect x="1003.7268359643103" y="1829" width="1.214824982841455" height="15.0" fill="rgb(249,172,25)" rx="2" ry="2" _orig_x="652.2" _orig_width="0.3"/>
<text x="1006.7268359643103" y="1839.5" _orig_x="655.17"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (153 samples, 0.02%)</title><rect x="863.6170212765958" y="1877" width="1.214824982841455" height="15.0" fill="rgb(227,199,1)" rx="2" ry="2" _orig_x="617.6" _orig_width="0.3"/>
<text x="866.6170212765958" y="1887.5" _orig_x="620.64"/>
</g>
<g class="hide">
<title>runtime.mstart.abi0 (151 samples, 0.02%)</title><rect x="159.24159231297176" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(216,89,15)" rx="2" ry="2" _orig_x="206.5" _orig_width="0.3"/>
<text x="162.24159231297176" y="2047.5" _orig_x="209.53"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (961 samples, 0.14%)</title><rect x="85.31914893617008" y="1749" width="6.884008236101578" height="15.0" fill="rgb(223,105,38)" rx="2" ry="2" _orig_x="425.4" _orig_width="1.7"/>
<text x="88.31914893617008" y="1759.5" _orig_x="428.39"/>
</g>
<g class="hide">
<title>[libst-1.0.so] (164 samples, 0.02%)</title><rect x="201.14687714481803" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(233,205,10)" rx="2" ry="2" _orig_x="244.9" _orig_width="0.3"/>
<text x="204.14687714481803" y="2015.5" _orig_x="247.91"/>
</g>
<g>
<title>[[kernel.kallsyms]] (740 samples, 0.11%)</title><rect x="720.2676733013042" y="1829" width="5.264241592312972" height="15.0" fill="rgb(253,161,35)" rx="2" ry="2" _orig_x="582.2" _orig_width="1.3"/>
<text x="723.2676733013042" y="1839.5" _orig_x="585.19"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (67 samples, 0.01%)</title><rect x="605.2642415923128" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(217,89,40)" rx="2" ry="2" _orig_x="553.8" _orig_width="0.1"/>
<text x="608.2642415923128" y="1871.5" _orig_x="556.83"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (91 samples, 0.01%)</title><rect x="540.0686341798217" y="1669" width="0.8098833218943035" height="15.0" fill="rgb(245,135,19)" rx="2" ry="2" _orig_x="537.7" _orig_width="0.2"/>
<text x="543.0686341798217" y="1679.5" _orig_x="540.75"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="229" width="1.091283459162663" height="15.0" fill="rgb(235,120,27)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="239.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (80 samples, 0.01%)</title><rect x="22.4" y="1941" width="0.2" height="15.0" fill="rgb(217,189,16)" rx="2" ry="2"/>
<text x="25.42" y="1951.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (116 samples, 0.02%)</title><rect x="386.19080301990385" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(219,205,25)" rx="2" ry="2" _orig_x="499.7" _orig_width="0.2"/>
<text x="389.19080301990385" y="1759.5" _orig_x="502.69"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (661 samples, 0.10%)</title><rect x="1135.3328757721347" y="1797" width="4.454358270418669" height="15.0" fill="rgb(243,85,43)" rx="2" ry="2" _orig_x="684.7" _orig_width="1.1"/>
<text x="1138.3328757721347" y="1807.5" _orig_x="687.68"/>
</g>
<g class="hide">
<title>gsd-sharing (661 samples, 0.10%)</title><rect x="340.3" y="2069" width="1.2" height="15.0" fill="rgb(206,192,49)" rx="2" ry="2"/>
<text x="343.32" y="2079.5"/>
</g>
<g class="hide">
<title>ksoftirqd/1 (64 samples, 0.01%)</title><rect x="362.0" y="2069" width="0.2" height="15.0" fill="rgb(231,73,24)" rx="2" ry="2"/>
<text x="365.05" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (68 samples, 0.01%)</title><rect x="57.315717227179036" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(226,13,40)" rx="2" ry="2" _orig_x="113.1" _orig_width="0.1"/>
<text x="60.315717227179036" y="1999.5" _orig_x="116.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="66.2" y="1813" width="0.2" height="15.0" fill="rgb(213,173,1)" rx="2" ry="2"/>
<text x="69.23" y="1823.5"/>
</g>
<g>
<title>yylex (508 samples, 0.08%)</title><rect x="1179.4715168153741" y="1973" width="3.644474948524365" height="15.0" fill="rgb(234,69,28)" rx="2" ry="2" _orig_x="695.6" _orig_width="0.9"/>
<text x="1182.4715168153741" y="1983.5" _orig_x="698.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (273 samples, 0.04%)</title><rect x="68.01029512697315" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(206,38,43)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="1983.5" _orig_x="125.92"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (263 samples, 0.04%)</title><rect x="1007.7762525737819" y="1861" width="2.0247083047357584" height="15.0" fill="rgb(223,205,21)" rx="2" ry="2" _orig_x="653.2" _orig_width="0.5"/>
<text x="1010.7762525737819" y="1871.5" _orig_x="656.19"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,049 samples, 0.16%)</title><rect x="659.5264241592314" y="1813" width="7.28894989704873" height="15.0" fill="rgb(215,159,4)" rx="2" ry="2" _orig_x="567.2" _orig_width="1.8"/>
<text x="662.5264241592314" y="1823.5" _orig_x="570.20"/>
</g>
<g>
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (84 samples, 0.01%)</title><rect x="1175.4221002059028" y="1957" width="0.8098833218943035" height="15.0" fill="rgb(208,97,20)" rx="2" ry="2" _orig_x="694.6" _orig_width="0.2"/>
<text x="1178.4221002059028" y="1967.5" _orig_x="697.64"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (61 samples, 0.01%)</title><rect x="335.1681537405628" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(226,205,16)" rx="2" ry="2" _orig_x="487.1" _orig_width="0.1"/>
<text x="338.1681537405628" y="1871.5" _orig_x="490.09"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (61 samples, 0.01%)</title><rect x="308.092656142759" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(246,165,48)" rx="2" ry="2" _orig_x="342.9" _orig_width="0.1"/>
<text x="311.092656142759" y="1999.5" _orig_x="345.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (617 samples, 0.09%)</title><rect x="806.9183253260122" y="1733" width="1.2004118050789294" height="15.0" fill="rgb(242,155,37)" rx="2" ry="2" _orig_x="800.0" _orig_width="1.1"/>
<text x="809.9183253260122" y="1743.5" _orig_x="802.99"/>
</g>
<g>
<title>__GI___printf_fp_l (272 samples, 0.04%)</title><rect x="1185.9505833905287" y="1973" width="1.619766643788607" height="15.0" fill="rgb(214,169,43)" rx="2" ry="2" _orig_x="697.2" _orig_width="0.4"/>
<text x="1188.9505833905287" y="1983.5" _orig_x="700.16"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (122 samples, 0.02%)</title><rect x="128.6479066575155" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(231,116,30)" rx="2" ry="2" _orig_x="436.1" _orig_width="0.2"/>
<text x="131.6479066575155" y="1855.5" _orig_x="439.09"/>
</g>
<g class="hide">
<title>[code] (194 samples, 0.03%)</title><rect x="14.1" y="1893" width="0.4" height="15.0" fill="rgb(234,69,13)" rx="2" ry="2"/>
<text x="17.14" y="1903.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (77 samples, 0.01%)</title><rect x="254.1798215511325" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(219,123,38)" rx="2" ry="2" _orig_x="467.1" _orig_width="0.2"/>
<text x="257.1798215511325" y="1871.5" _orig_x="470.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="13.1" y="1861" width="0.2" height="15.0" fill="rgb(205,162,21)" rx="2" ry="2"/>
<text x="16.14" y="1871.5"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (217 samples, 0.03%)</title><rect x="989.1489361702129" y="1893" width="1.214824982841455" height="15.0" fill="rgb(221,85,11)" rx="2" ry="2" _orig_x="648.6" _orig_width="0.3"/>
<text x="992.1489361702129" y="1903.5" _orig_x="651.56"/>
</g>
<g class="hide">
<title>std::__1::chrono::steady_clock::now (244 samples, 0.04%)</title><rect x="158.4776938915579" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(242,166,25)" rx="2" ry="2" _orig_x="205.8" _orig_width="0.4"/>
<text x="161.4776938915579" y="2031.5" _orig_x="208.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.02%)</title><rect x="753.8819492107068" y="1669" width="0.2182566918325326" height="15.0" fill="rgb(206,87,29)" rx="2" ry="2" _orig_x="751.4" _orig_width="0.2"/>
<text x="756.8819492107068" y="1679.5" _orig_x="754.38"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (137 samples, 0.02%)</title><rect x="111.64035689773495" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(250,36,29)" rx="2" ry="2" _orig_x="431.9" _orig_width="0.2"/>
<text x="114.64035689773495" y="1807.5" _orig_x="434.88"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="757" width="1.091283459162663" height="15.0" fill="rgb(227,98,36)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="767.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[code] (334 samples, 0.05%)</title><rect x="15.5" y="1813" width="0.6" height="15.0" fill="rgb(248,212,5)" rx="2" ry="2"/>
<text x="18.52" y="1823.5"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (230 samples, 0.03%)</title><rect x="359.869595058339" y="1957" width="1.619766643788607" height="15.0" fill="rgb(225,175,45)" rx="2" ry="2" _orig_x="493.2" _orig_width="0.4"/>
<text x="362.869595058339" y="1967.5" _orig_x="496.23"/>
</g>
<g class="hide">
<title>[unknown] (766 samples, 0.11%)</title><rect x="58.73438572409051" y="149" width="1.5277968428277282" height="15.0" fill="rgb(237,90,39)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.4"/>
<text x="61.73438572409051" y="159.5" _orig_x="117.42"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (295 samples, 0.04%)</title><rect x="736.8702814001371" y="1861" width="2.42964996568291" height="15.0" fill="rgb(225,218,29)" rx="2" ry="2" _orig_x="586.3" _orig_width="0.6"/>
<text x="739.8702814001371" y="1871.5" _orig_x="589.35"/>
</g>
<g>
<title>Row::GetField (65 samples, 0.01%)</title><rect x="226.23884694577887" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(213,129,38)" rx="2" ry="2" _orig_x="460.2" _orig_width="0.1"/>
<text x="229.23884694577887" y="1887.5" _orig_x="463.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="53.71448181194225" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(253,42,40)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="1935.5" _orig_x="112.85"/>
</g>
<g class="hide">
<title>[unknown] (1,076 samples, 0.16%)</title><rect x="58.73438572409051" y="261" width="2.0734385724090596" height="15.0" fill="rgb(242,13,35)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.9"/>
<text x="61.73438572409051" y="271.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (639 samples, 0.09%)</title><rect x="35.9748427672956" y="2005" width="4.452830188679245" height="15.0" fill="rgb(208,226,2)" rx="2" ry="2" _orig_x="397.7" _orig_width="1.2"/>
<text x="38.9748427672956" y="2015.5" _orig_x="400.73"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (98 samples, 0.01%)</title><rect x="289.0048043925874" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(241,42,22)" rx="2" ry="2" _orig_x="475.7" _orig_width="0.2"/>
<text x="292.0048043925874" y="1839.5" _orig_x="478.69"/>
</g>
<g class="hide">
<title>[code] (140 samples, 0.02%)</title><rect x="14.2" y="1813" width="0.3" height="15.0" fill="rgb(249,218,27)" rx="2" ry="2"/>
<text x="17.22" y="1823.5"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (495 samples, 0.07%)</title><rect x="264.3033630748113" y="1845" width="3.239533287577214" height="15.0" fill="rgb(223,70,30)" rx="2" ry="2" _orig_x="469.6" _orig_width="0.8"/>
<text x="267.3033630748113" y="1855.5" _orig_x="472.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,177 samples, 0.17%)</title><rect x="297.3980782429649" y="1973" width="2.182566918325326" height="15.0" fill="rgb(221,13,21)" rx="2" ry="2" _orig_x="333.1" _orig_width="2.0"/>
<text x="300.3980782429649" y="1983.5" _orig_x="336.08"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (67 samples, 0.01%)</title><rect x="456.2457103637611" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(223,191,22)" rx="2" ry="2" _orig_x="517.0" _orig_width="0.2"/>
<text x="459.2457103637611" y="1807.5" _orig_x="520.04"/>
</g>
<g class="hide">
<title>dbus_connection_get_dispatch_status (99 samples, 0.01%)</title><rect x="267.93342484557303" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(228,24,39)" rx="2" ry="2" _orig_x="306.1" _orig_width="0.1"/>
<text x="270.93342484557303" y="2031.5" _orig_x="309.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="328.8270418668496" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(219,52,5)" rx="2" ry="2" _orig_x="361.9" _orig_width="0.1"/>
<text x="331.8270418668496" y="1951.5" _orig_x="364.93"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (68 samples, 0.01%)</title><rect x="876.1702127659576" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(242,23,19)" rx="2" ry="2" _orig_x="620.7" _orig_width="0.1"/>
<text x="879.1702127659576" y="1887.5" _orig_x="623.69"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (86 samples, 0.01%)</title><rect x="508.0782429649964" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(246,216,10)" rx="2" ry="2" _orig_x="529.8" _orig_width="0.1"/>
<text x="511.0782429649964" y="1855.5" _orig_x="532.77"/>
</g>
<g class="hide">
<title>[code] (400 samples, 0.06%)</title><rect x="16.5" y="1861" width="0.7" height="15.0" fill="rgb(224,81,20)" rx="2" ry="2"/>
<text x="19.46" y="1871.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (59 samples, 0.01%)</title><rect x="71.14619080301978" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(237,14,53)" rx="2" ry="2" _orig_x="421.9" _orig_width="0.1"/>
<text x="74.14619080301978" y="1743.5" _orig_x="424.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (282 samples, 0.04%)</title><rect x="369.9931365820177" y="1717" width="2.0247083047357584" height="15.0" fill="rgb(238,158,1)" rx="2" ry="2" _orig_x="495.7" _orig_width="0.5"/>
<text x="372.9931365820177" y="1727.5" _orig_x="498.67"/>
</g>
<g class="hide">
<title>nvkms_alloc (105 samples, 0.02%)</title><rect x="209.87714481811935" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(222,193,38)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="2015.5" _orig_x="255.93"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned (374 samples, 0.06%)</title><rect x="779.1997254632806" y="2037" width="0.7638984214138641" height="15.0" fill="rgb(224,76,10)" rx="2" ry="2" _orig_x="774.6" _orig_width="0.7"/>
<text x="782.1997254632806" y="2047.5" _orig_x="777.60"/>
</g>
<g>
<title>[[kernel.kallsyms]] (726 samples, 0.11%)</title><rect x="720.2676733013042" y="1813" width="5.264241592312972" height="15.0" fill="rgb(222,17,27)" rx="2" ry="2" _orig_x="582.2" _orig_width="1.3"/>
<text x="723.2676733013042" y="1823.5" _orig_x="585.21"/>
</g>
<g>
<title>Row::SerializeTo (245 samples, 0.04%)</title><rect x="1089.5744680851062" y="1925" width="1.619766643788607" height="15.0" fill="rgb(227,97,32)" rx="2" ry="2" _orig_x="673.4" _orig_width="0.4"/>
<text x="1092.5744680851062" y="1935.5" _orig_x="676.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (132 samples, 0.02%)</title><rect x="161.86067261496217" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(253,97,8)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1919.5" _orig_x="211.89"/>
</g>
<g class="hide">
<title>[code] (309 samples, 0.05%)</title><rect x="69.64722031571714" y="1893" width="0.5456417295813315" height="15.0" fill="rgb(230,103,33)" rx="2" ry="2" _orig_x="124.4" _orig_width="0.5"/>
<text x="72.64722031571714" y="1903.5" _orig_x="127.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.02%)</title><rect x="353.16266300617696" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(224,184,47)" rx="2" ry="2" _orig_x="384.2" _orig_width="0.2"/>
<text x="356.16266300617696" y="1759.5" _orig_x="387.17"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (103 samples, 0.02%)</title><rect x="72.36101578586127" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(225,122,27)" rx="2" ry="2" _orig_x="422.2" _orig_width="0.2"/>
<text x="75.36101578586127" y="1695.5" _orig_x="425.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (664 samples, 0.10%)</title><rect x="129.88606726149612" y="1653" width="1.2004118050789294" height="15.0" fill="rgb(217,136,18)" rx="2" ry="2" _orig_x="179.6" _orig_width="1.1"/>
<text x="132.88606726149612" y="1663.5" _orig_x="182.57"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (84 samples, 0.01%)</title><rect x="357.8448867536032" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(214,204,23)" rx="2" ry="2" _orig_x="492.7" _orig_width="0.1"/>
<text x="360.8448867536032" y="1951.5" _orig_x="495.68"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,452 samples, 0.22%)</title><rect x="174.0013726835964" y="1781" width="10.123541523678792" height="15.0" fill="rgb(221,157,36)" rx="2" ry="2" _orig_x="447.3" _orig_width="2.5"/>
<text x="177.0013726835964" y="1791.5" _orig_x="450.29"/>
</g>
<g>
<title>std::unordered_map&lt;unsigned int, TableInfo*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt; &gt;::find (125 samples, 0.02%)</title><rect x="1093.6238846945778" y="1941" width="0.8098833218943035" height="15.0" fill="rgb(216,220,44)" rx="2" ry="2" _orig_x="674.4" _orig_width="0.2"/>
<text x="1096.6238846945778" y="1951.5" _orig_x="677.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (236 samples, 0.04%)</title><rect x="68.1194234728894" y="1909" width="0.4365133836650652" height="15.0" fill="rgb(229,67,37)" rx="2" ry="2" _orig_x="123.0" _orig_width="0.4"/>
<text x="71.1194234728894" y="1919.5" _orig_x="125.99"/>
</g>
<g class="hide">
<title>[perf-123151.map] (342 samples, 0.05%)</title><rect x="88.19903912148241" y="1877" width="0.6547700754975978" height="15.0" fill="rgb(220,30,51)" rx="2" ry="2" _orig_x="141.4" _orig_width="0.6"/>
<text x="91.19903912148241" y="1887.5" _orig_x="144.43"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (346 samples, 0.05%)</title><rect x="876.9800960878516" y="1877" width="2.42964996568291" height="15.0" fill="rgb(207,102,15)" rx="2" ry="2" _orig_x="620.9" _orig_width="0.6"/>
<text x="879.9800960878516" y="1887.5" _orig_x="623.90"/>
</g>
<g class="hide">
<title>[github-desktop] (60 samples, 0.01%)</title><rect x="14.8" y="1877" width="0.1" height="15.0" fill="rgb(225,113,24)" rx="2" ry="2"/>
<text x="17.76" y="1887.5"/>
</g>
<g class="hide">
<title>[libgdk-3.so.0.2404.16] (86 samples, 0.01%)</title><rect x="269.0" y="2053" width="0.2" height="15.0" fill="rgb(216,144,35)" rx="2" ry="2"/>
<text x="272.01" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__ops::_Iter_comp_val&lt;TableHeap::cmp&gt;::operator (241 samples, 0.04%)</title><rect x="1143.8366506520244" y="1861" width="1.619766643788607" height="15.0" fill="rgb(209,33,41)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.4"/>
<text x="1146.8366506520244" y="1871.5" _orig_x="689.79"/>
</g>
<g class="hide">
<title>CompositorTileW (556 samples, 0.08%)</title><rect x="16.3" y="2069" width="1.0" height="15.0" fill="rgb(222,183,50)" rx="2" ry="2"/>
<text x="19.29" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="581" width="1.091283459162663" height="15.0" fill="rgb(211,162,39)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="591.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.02%)</title><rect x="161.86067261496217" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(216,147,32)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1983.5" _orig_x="211.86"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="821" width="2.182566918325326" height="15.0" fill="rgb(240,82,0)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="831.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (614 samples, 0.09%)</title><rect x="260.1853122855181" y="1285" width="1.091283459162663" height="15.0" fill="rgb(243,173,27)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1295.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (108 samples, 0.02%)</title><rect x="424.66026080988325" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(215,190,21)" rx="2" ry="2" _orig_x="509.2" _orig_width="0.2"/>
<text x="427.66026080988325" y="1743.5" _orig_x="512.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="328.8270418668496" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(234,56,23)" rx="2" ry="2" _orig_x="361.9" _orig_width="0.1"/>
<text x="331.8270418668496" y="1983.5" _orig_x="364.89"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (238 samples, 0.04%)</title><rect x="228.4" y="2053" width="0.4" height="15.0" fill="rgb(251,174,17)" rx="2" ry="2"/>
<text x="231.38" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (247 samples, 0.04%)</title><rect x="601.2148249828412" y="1813" width="1.619766643788607" height="15.0" fill="rgb(207,15,53)" rx="2" ry="2" _orig_x="552.8" _orig_width="0.4"/>
<text x="604.2148249828412" y="1823.5" _orig_x="555.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (180 samples, 0.03%)</title><rect x="12.9" y="2021" width="0.4" height="15.0" fill="rgb(226,17,40)" rx="2" ry="2"/>
<text x="15.94" y="2031.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (3,037 samples, 0.45%)</title><rect x="565.9849004804393" y="1829" width="21.46190803019904" height="15.0" fill="rgb(247,23,27)" rx="2" ry="2" _orig_x="544.1" _orig_width="5.3"/>
<text x="568.9849004804393" y="1839.5" _orig_x="547.09">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (303 samples, 0.04%)</title><rect x="12.245710363761054" y="1893" width="0.6547700754975978" height="15.0" fill="rgb(238,168,17)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1903.5" _orig_x="74.84"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (365 samples, 0.05%)</title><rect x="376.87714481811923" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(251,20,11)" rx="2" ry="2" _orig_x="497.4" _orig_width="0.7"/>
<text x="379.87714481811923" y="1791.5" _orig_x="500.42"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (193 samples, 0.03%)</title><rect x="1132.9032258064517" y="1765" width="1.214824982841455" height="15.0" fill="rgb(209,207,15)" rx="2" ry="2" _orig_x="684.1" _orig_width="0.3"/>
<text x="1135.9032258064517" y="1775.5" _orig_x="687.09"/>
</g>
<g class="hide">
<title>_dbus_message_loader_queue_messages (105 samples, 0.02%)</title><rect x="289.75909402882627" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(231,178,7)" rx="2" ry="2" _orig_x="326.1" _orig_width="0.2"/>
<text x="292.75909402882627" y="2047.5" _orig_x="329.12"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (74 samples, 0.01%)</title><rect x="292.2443376801647" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(229,103,1)" rx="2" ry="2" _orig_x="476.5" _orig_width="0.2"/>
<text x="295.2443376801647" y="1855.5" _orig_x="479.53"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1605" width="2.182566918325326" height="15.0" fill="rgb(237,71,52)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1615.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(211,65,6)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1951.5" _orig_x="77.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,057 samples, 0.16%)</title><rect x="271.31640356897725" y="2021" width="2.0734385724090596" height="15.0" fill="rgb(224,144,45)" rx="2" ry="2" _orig_x="309.2" _orig_width="1.9"/>
<text x="274.31640356897725" y="2031.5" _orig_x="312.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="361.3" y="2053" width="0.1" height="15.0" fill="rgb(239,62,41)" rx="2" ry="2"/>
<text x="364.28" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,418 samples, 0.95%)</title><rect x="716.5600549073438" y="1909" width="12.331503088538092" height="15.0" fill="rgb(221,114,50)" rx="2" ry="2" _orig_x="717.2" _orig_width="11.3"/>
<text x="719.5600549073438" y="1919.5" _orig_x="720.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (185 samples, 0.03%)</title><rect x="341.4859299931365" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(225,1,23)" rx="2" ry="2" _orig_x="373.5" _orig_width="0.4"/>
<text x="344.4859299931365" y="1935.5" _orig_x="376.54"/>
</g>
<g class="hide">
<title>[code] (109 samples, 0.02%)</title><rect x="69.97460535346593" y="1733" width="0.1091283459162663" height="15.0" fill="rgb(228,9,4)" rx="2" ry="2" _orig_x="124.7" _orig_width="0.1"/>
<text x="72.97460535346593" y="1743.5" _orig_x="127.66"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (294 samples, 0.04%)</title><rect x="116.90459849004795" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(232,17,44)" rx="2" ry="2" _orig_x="433.2" _orig_width="0.5"/>
<text x="119.90459849004795" y="1823.5" _orig_x="436.22"/>
</g>
<g class="hide">
<title>[perf-123031.map] (68 samples, 0.01%)</title><rect x="86.45298558682215" y="1157" width="0.1091283459162663" height="15.0" fill="rgb(212,155,46)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1167.5" _orig_x="142.80"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (65 samples, 0.01%)</title><rect x="308.4200411805078" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(237,63,42)" rx="2" ry="2" _orig_x="343.2" _orig_width="0.1"/>
<text x="311.4200411805078" y="2047.5" _orig_x="346.19"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (79 samples, 0.01%)</title><rect x="285.3603294440631" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(252,36,9)" rx="2" ry="2" _orig_x="474.8" _orig_width="0.1"/>
<text x="288.3603294440631" y="1823.5" _orig_x="477.80"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (230 samples, 0.03%)</title><rect x="187.61496225120098" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(248,141,29)" rx="2" ry="2" _orig_x="232.5" _orig_width="0.4"/>
<text x="190.61496225120098" y="2047.5" _orig_x="235.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (785 samples, 0.12%)</title><rect x="156.9498970487302" y="2005" width="1.5277968428277282" height="15.0" fill="rgb(220,62,7)" rx="2" ry="2" _orig_x="204.4" _orig_width="1.4"/>
<text x="159.9498970487302" y="2015.5" _orig_x="207.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,724 samples, 1.74%)</title><rect x="108.71516815374045" y="1877" width="22.37131091283459" height="15.0" fill="rgb(208,17,37)" rx="2" ry="2" _orig_x="160.2" _orig_width="20.5"/>
<text x="111.71516815374045" y="1887.5" _orig_x="163.19">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (100 samples, 0.01%)</title><rect x="344.8867536032944" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(243,167,46)" rx="2" ry="2" _orig_x="489.5" _orig_width="0.2"/>
<text x="347.8867536032944" y="1791.5" _orig_x="492.51"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (1,970 samples, 0.29%)</title><rect x="620.2470830473576" y="1829" width="14.17295813315031" height="15.0" fill="rgb(237,117,54)" rx="2" ry="2" _orig_x="557.5" _orig_width="3.5"/>
<text x="623.2470830473576" y="1839.5" _orig_x="560.53"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="421" width="2.182566918325326" height="15.0" fill="rgb(248,225,39)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="431.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>g_utf8_pointer_to_offset (219 samples, 0.03%)</title><rect x="339.3" y="2053" width="0.4" height="15.0" fill="rgb(249,200,24)" rx="2" ry="2"/>
<text x="342.27" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (442 samples, 0.07%)</title><rect x="65.6" y="1877" width="0.8" height="15.0" fill="rgb(216,66,34)" rx="2" ry="2"/>
<text x="68.59" y="1887.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (1,116 samples, 0.17%)</title><rect x="950.2745367192862" y="1861" width="7.693891557995882" height="15.0" fill="rgb(245,202,43)" rx="2" ry="2" _orig_x="639.0" _orig_width="1.9"/>
<text x="953.2745367192862" y="1871.5" _orig_x="641.97"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (333 samples, 0.05%)</title><rect x="1076.2113932738505" y="1861" width="2.42964996568291" height="15.0" fill="rgb(252,189,21)" rx="2" ry="2" _orig_x="670.1" _orig_width="0.6"/>
<text x="1079.2113932738505" y="1871.5" _orig_x="673.14"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (8,041 samples, 1.19%)</title><rect x="885.888812628689" y="1877" width="56.69183253260124" height="15.0" fill="rgb(252,63,37)" rx="2" ry="2" _orig_x="623.1" _orig_width="14.0"/>
<text x="888.888812628689" y="1887.5" _orig_x="626.05">std::ve..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (83 samples, 0.01%)</title><rect x="340.0274536719286" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(209,86,6)" rx="2" ry="2" _orig_x="488.3" _orig_width="0.1"/>
<text x="343.0274536719286" y="1807.5" _orig_x="491.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (341 samples, 0.05%)</title><rect x="211.8414550446121" y="1781" width="0.6547700754975978" height="15.0" fill="rgb(251,9,3)" rx="2" ry="2" _orig_x="254.7" _orig_width="0.6"/>
<text x="214.8414550446121" y="1791.5" _orig_x="257.69"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,322 samples, 0.20%)</title><rect x="18.098833218943025" y="1781" width="9.313658201784488" height="15.0" fill="rgb(228,116,29)" rx="2" ry="2" _orig_x="408.8" _orig_width="2.3"/>
<text x="21.098833218943025" y="1791.5" _orig_x="411.80"/>
</g>
<g class="hide">
<title>[unknown] (860 samples, 0.13%)</title><rect x="58.73438572409051" y="165" width="1.6369251887439944" height="15.0" fill="rgb(238,178,26)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.5"/>
<text x="61.73438572409051" y="175.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (689 samples, 0.10%)</title><rect x="1184.2" y="1925" width="1.2" height="15.0" fill="rgb(223,46,26)" rx="2" ry="2"/>
<text x="1187.18" y="1935.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (7,586 samples, 1.13%)</title><rect x="888.7234042553189" y="1861" width="53.857240905971175" height="15.0" fill="rgb(237,116,5)" rx="2" ry="2" _orig_x="623.8" _orig_width="13.3"/>
<text x="891.7234042553189" y="1871.5" _orig_x="626.78">std::v..</text>
</g>
<g class="hide">
<title>JavaThread::pd_last_frame (59 samples, 0.01%)</title><rect x="68.3" y="1973" width="0.1" height="15.0" fill="rgb(247,42,20)" rx="2" ry="2"/>
<text x="71.26" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,982 samples, 0.74%)</title><rect x="744.6060398078241" y="1813" width="9.494166094715167" height="15.0" fill="rgb(236,122,36)" rx="2" ry="2" _orig_x="742.9" _orig_width="8.7"/>
<text x="747.6060398078241" y="1823.5" _orig_x="745.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,188 samples, 1.66%)</title><rect x="1156.4" y="1861" width="19.6" height="15.0" fill="rgb(217,148,15)" rx="2" ry="2"/>
<text x="1159.37" y="1871.5"/>
</g>
<g class="hide">
<title>[github-desktop] (93 samples, 0.01%)</title><rect x="175.6108442004117" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(248,50,8)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="2015.5" _orig_x="224.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="212.605353466026" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(236,223,27)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1903.5" _orig_x="258.45"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1845" width="0.1" height="15.0" fill="rgb(235,212,41)" rx="2" ry="2"/>
<text x="33.98" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (147 samples, 0.02%)</title><rect x="58.0" y="1957" width="0.2" height="15.0" fill="rgb(235,59,33)" rx="2" ry="2"/>
<text x="60.97" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (495 samples, 0.07%)</title><rect x="340.94028826355515" y="2005" width="0.9821551132463967" height="15.0" fill="rgb(245,134,37)" rx="2" ry="2" _orig_x="373.0" _orig_width="0.9"/>
<text x="343.94028826355515" y="2015.5" _orig_x="375.99"/>
</g>
<g>
<title>DiskManager::IsPageFree (146 samples, 0.02%)</title><rect x="705.6897735072066" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(248,16,32)" rx="2" ry="2" _orig_x="578.6" _orig_width="0.2"/>
<text x="708.6897735072066" y="1903.5" _orig_x="581.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="810.083047357584" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(214,185,25)" rx="2" ry="2" _orig_x="802.9" _orig_width="0.1"/>
<text x="813.083047357584" y="1903.5" _orig_x="805.86"/>
</g>
<g class="hide">
<title>vnstatd (67 samples, 0.01%)</title><rect x="1186.1" y="2069" width="0.1" height="15.0" fill="rgb(230,202,20)" rx="2" ry="2"/>
<text x="1189.10" y="2079.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (133 samples, 0.02%)</title><rect x="229.0734385724089" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(229,132,39)" rx="2" ry="2" _orig_x="460.9" _orig_width="0.2"/>
<text x="232.0734385724089" y="1855.5" _orig_x="463.88"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (1,227 samples, 0.18%)</title><rect x="925.1681537405626" y="1829" width="8.503774879890186" height="15.0" fill="rgb(236,37,29)" rx="2" ry="2" _orig_x="632.8" _orig_width="2.1"/>
<text x="928.1681537405626" y="1839.5" _orig_x="635.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (89 samples, 0.01%)</title><rect x="385.38091969800956" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(244,78,32)" rx="2" ry="2" _orig_x="499.5" _orig_width="0.2"/>
<text x="388.38091969800956" y="1775.5" _orig_x="502.52"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (94 samples, 0.01%)</title><rect x="130.67261496225126" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(245,108,19)" rx="2" ry="2" _orig_x="436.6" _orig_width="0.2"/>
<text x="133.67261496225126" y="1823.5" _orig_x="439.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="328.172271791352" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(226,120,22)" rx="2" ry="2" _orig_x="361.3" _orig_width="0.1"/>
<text x="331.172271791352" y="2047.5" _orig_x="364.28"/>
</g>
<g class="hide">
<title>__GI___libc_write (1,408 samples, 0.21%)</title><rect x="12.968553459119539" y="2037" width="9.276729559748428" height="15.0" fill="rgb(236,188,37)" rx="2" ry="2" _orig_x="391.5" _orig_width="2.5"/>
<text x="15.968553459119539" y="2047.5" _orig_x="394.52"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (294 samples, 0.04%)</title><rect x="236.76733013040496" y="1765" width="2.0247083047357584" height="15.0" fill="rgb(215,210,37)" rx="2" ry="2" _orig_x="462.8" _orig_width="0.5"/>
<text x="239.76733013040496" y="1775.5" _orig_x="465.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,576 samples, 0.53%)</title><rect x="46.735849056603904" y="1925" width="23.0062893081761" height="15.0" fill="rgb(253,123,41)" rx="2" ry="2" _orig_x="400.6" _orig_width="6.2"/>
<text x="49.735849056603904" y="1935.5" _orig_x="403.56">[..</text>
</g>
<g>
<title>IndexKeyComparator::operator (14,138 samples, 2.10%)</title><rect x="151.32463967055585" y="1893" width="100.42553191489361" height="15.0" fill="rgb(233,215,54)" rx="2" ry="2" _orig_x="441.7" _orig_width="24.8"/>
<text x="154.32463967055585" y="1903.5" _orig_x="444.69">IndexKeyCom..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="168.5175017158544" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(228,56,31)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1919.5" _orig_x="218.00"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (202 samples, 0.03%)</title><rect x="1132.9032258064517" y="1781" width="1.214824982841455" height="15.0" fill="rgb(225,51,5)" rx="2" ry="2" _orig_x="684.1" _orig_width="0.3"/>
<text x="1135.9032258064517" y="1791.5" _orig_x="687.08"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (82 samples, 0.01%)</title><rect x="218.4" y="2053" width="0.2" height="15.0" fill="rgb(250,126,31)" rx="2" ry="2"/>
<text x="221.45" y="2063.5"/>
</g>
<g>
<title>std::__fill_n_a&lt;unsigned long, char&gt; (85 samples, 0.01%)</title><rect x="464.34454358270415" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(229,41,9)" rx="2" ry="2" _orig_x="519.0" _orig_width="0.2"/>
<text x="467.34454358270415" y="1743.5" _orig_x="522.02"/>
</g>
<g>
<title>Row::~Row (1,082 samples, 0.16%)</title><rect x="44.01509951956065" y="1845" width="7.693891557995882" height="15.0" fill="rgb(237,23,34)" rx="2" ry="2" _orig_x="415.2" _orig_width="1.9"/>
<text x="47.01509951956065" y="1855.5" _orig_x="418.23"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (313 samples, 0.05%)</title><rect x="159.56897735072056" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(238,205,7)" rx="2" ry="2" _orig_x="206.8" _orig_width="0.5"/>
<text x="162.56897735072056" y="2031.5" _orig_x="209.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (455 samples, 0.07%)</title><rect x="19.718599862731544" y="1717" width="3.239533287577214" height="15.0" fill="rgb(216,169,41)" rx="2" ry="2" _orig_x="409.2" _orig_width="0.8"/>
<text x="22.718599862731544" y="1727.5" _orig_x="412.21"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (765 samples, 0.11%)</title><rect x="320.99519560741254" y="1925" width="5.669183253260123" height="15.0" fill="rgb(241,170,42)" rx="2" ry="2" _orig_x="483.6" _orig_width="1.4"/>
<text x="323.99519560741254" y="1935.5" _orig_x="486.63"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (127 samples, 0.02%)</title><rect x="717.8380233356212" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(210,106,30)" rx="2" ry="2" _orig_x="581.6" _orig_width="0.2"/>
<text x="720.8380233356212" y="1839.5" _orig_x="584.57"/>
</g>
<g class="hide">
<title>[code] (61 samples, 0.01%)</title><rect x="14.42827728208638" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(244,43,10)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1807.5" _orig_x="76.81"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="42.654088050314506" y="2021" width="0.37106918238993714" height="15.0" fill="rgb(249,89,38)" rx="2" ry="2" _orig_x="399.5" _orig_width="0.1"/>
<text x="45.654088050314506" y="2031.5" _orig_x="402.51"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (220 samples, 0.03%)</title><rect x="166.71242278654768" y="1733" width="1.619766643788607" height="15.0" fill="rgb(227,54,10)" rx="2" ry="2" _orig_x="445.5" _orig_width="0.4"/>
<text x="169.71242278654768" y="1743.5" _orig_x="448.54"/>
</g>
<g>
<title>Field::CompareLessThan (205 samples, 0.03%)</title><rect x="510.10295126973216" y="1877" width="1.619766643788607" height="15.0" fill="rgb(220,150,19)" rx="2" ry="2" _orig_x="530.3" _orig_width="0.4"/>
<text x="513.1029512697321" y="1887.5" _orig_x="533.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (571 samples, 0.08%)</title><rect x="339.7398764584762" y="2005" width="1.091283459162663" height="15.0" fill="rgb(216,153,21)" rx="2" ry="2" _orig_x="371.9" _orig_width="1.0"/>
<text x="342.7398764584762" y="2015.5" _orig_x="374.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (917 samples, 0.14%)</title><rect x="63.426904598489955" y="1941" width="1.7460535346602608" height="15.0" fill="rgb(206,33,45)" rx="2" ry="2" _orig_x="118.7" _orig_width="1.6"/>
<text x="66.42690459848995" y="1951.5" _orig_x="121.65"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (70 samples, 0.01%)</title><rect x="881.8393960192176" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(238,81,25)" rx="2" ry="2" _orig_x="622.1" _orig_width="0.1"/>
<text x="884.8393960192176" y="1871.5" _orig_x="625.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (625 samples, 0.09%)</title><rect x="329.7000686341797" y="2005" width="1.2004118050789294" height="15.0" fill="rgb(250,65,24)" rx="2" ry="2" _orig_x="362.7" _orig_width="1.1"/>
<text x="332.7000686341797" y="2015.5" _orig_x="365.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="165" width="0.2182566918325326" height="15.0" fill="rgb(209,13,6)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="175.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,419 samples, 0.21%)</title><rect x="296.9615648592998" y="2021" width="2.619080301990391" height="15.0" fill="rgb(241,206,30)" rx="2" ry="2" _orig_x="332.7" _orig_width="2.4"/>
<text x="299.9615648592998" y="2031.5" _orig_x="335.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,916 samples, 0.58%)</title><rect x="76.95881949210697" y="1909" width="7.420727522306108" height="15.0" fill="rgb(244,217,22)" rx="2" ry="2" _orig_x="131.1" _orig_width="6.8"/>
<text x="79.95881949210697" y="1919.5" _orig_x="134.08"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (69 samples, 0.01%)</title><rect x="524.2759094028823" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(219,170,9)" rx="2" ry="2" _orig_x="533.8" _orig_width="0.2"/>
<text x="527.2759094028823" y="1743.5" _orig_x="536.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,026 samples, 0.15%)</title><rect x="176.26561427590931" y="1957" width="1.9643102264927934" height="15.0" fill="rgb(223,166,23)" rx="2" ry="2" _orig_x="222.1" _orig_width="1.8"/>
<text x="179.26561427590931" y="1967.5" _orig_x="225.11"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (83 samples, 0.01%)</title><rect x="1065.6829100892244" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(216,150,35)" rx="2" ry="2" _orig_x="667.5" _orig_width="0.1"/>
<text x="1068.6829100892244" y="1887.5" _orig_x="670.47"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (109 samples, 0.02%)</title><rect x="265.92312971859985" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(245,33,37)" rx="2" ry="2" _orig_x="470.0" _orig_width="0.2"/>
<text x="268.92312971859985" y="1775.5" _orig_x="472.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (610 samples, 0.09%)</title><rect x="36.345911949685615" y="1941" width="4.081761006289309" height="15.0" fill="rgb(238,176,47)" rx="2" ry="2" _orig_x="397.8" _orig_width="1.1"/>
<text x="39.345911949685615" y="1951.5" _orig_x="400.78"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,211 samples, 0.18%)</title><rect x="164.6877144818119" y="1813" width="8.503774879890186" height="15.0" fill="rgb(243,81,33)" rx="2" ry="2" _orig_x="445.0" _orig_width="2.1"/>
<text x="167.6877144818119" y="1823.5" _orig_x="447.97"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (632 samples, 0.09%)</title><rect x="348.5312285518187" y="1877" width="4.454358270418669" height="15.0" fill="rgb(219,163,50)" rx="2" ry="2" _orig_x="490.4" _orig_width="1.1"/>
<text x="351.5312285518187" y="1887.5" _orig_x="493.37"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (168 samples, 0.02%)</title><rect x="844.9897048730268" y="1781" width="1.214824982841455" height="15.0" fill="rgb(206,57,16)" rx="2" ry="2" _orig_x="613.0" _orig_width="0.3"/>
<text x="847.9897048730268" y="1791.5" _orig_x="616.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,156 samples, 0.32%)</title><rect x="261.49485243651327" y="1957" width="4.146877144818119" height="15.0" fill="rgb(233,84,51)" rx="2" ry="2" _orig_x="300.2" _orig_width="3.8"/>
<text x="264.49485243651327" y="1967.5" _orig_x="303.18"/>
</g>
<g>
<title>TablePage::InsertTuple (256 samples, 0.04%)</title><rect x="1126.4241592312972" y="1941" width="1.619766643788607" height="15.0" fill="rgb(237,204,37)" rx="2" ry="2" _orig_x="682.5" _orig_width="0.4"/>
<text x="1129.4241592312972" y="1951.5" _orig_x="685.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="179.2120796156485" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(210,143,31)" rx="2" ry="2" _orig_x="224.8" _orig_width="0.2"/>
<text x="182.2120796156485" y="1967.5" _orig_x="227.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,079 samples, 0.46%)</title><rect x="49.70440251572323" y="1893" width="20.037735849056606" height="15.0" fill="rgb(212,209,29)" rx="2" ry="2" _orig_x="401.4" _orig_width="5.4"/>
<text x="52.70440251572323" y="1903.5" _orig_x="404.43">[..</text>
</g>
<g>
<title>Schema::GetColumns (113 samples, 0.02%)</title><rect x="983.4797529169529" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(245,58,2)" rx="2" ry="2" _orig_x="647.2" _orig_width="0.2"/>
<text x="986.4797529169529" y="1903.5" _orig_x="650.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="10.60878517501706" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(232,174,26)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="2031.5" _orig_x="73.30"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (131 samples, 0.02%)</title><rect x="132.286890871654" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(242,135,30)" rx="2" ry="2" _orig_x="181.8" _orig_width="0.2"/>
<text x="135.286890871654" y="1983.5" _orig_x="184.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.02%)</title><rect x="21.7" y="1909" width="0.2" height="15.0" fill="rgb(215,203,19)" rx="2" ry="2"/>
<text x="24.67" y="1919.5"/>
</g>
<g>
<title>Row::GetField (66 samples, 0.01%)</title><rect x="475.2779684282774" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(207,149,19)" rx="2" ry="2" _orig_x="521.7" _orig_width="0.1"/>
<text x="478.2779684282774" y="1871.5" _orig_x="524.66"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (1,169 samples, 0.17%)</title><rect x="133.10226492793402" y="1813" width="8.503774879890186" height="15.0" fill="rgb(220,212,21)" rx="2" ry="2" _orig_x="437.2" _orig_width="2.1"/>
<text x="136.10226492793402" y="1823.5" _orig_x="440.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.02%)</title><rect x="11.700068634179724" y="1781" width="0.3273850377487989" height="15.0" fill="rgb(208,28,36)" rx="2" ry="2" _orig_x="71.3" _orig_width="0.3"/>
<text x="14.700068634179724" y="1791.5" _orig_x="74.34"/>
</g>
<g class="hide">
<title>[perf-123031.map] (78 samples, 0.01%)</title><rect x="86.45298558682215" y="1269" width="0.1091283459162663" height="15.0" fill="rgb(235,35,33)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1279.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (69 samples, 0.01%)</title><rect x="181.83115991763887" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(253,23,34)" rx="2" ry="2" _orig_x="227.2" _orig_width="0.1"/>
<text x="184.83115991763887" y="1871.5" _orig_x="230.22"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::~allocator (77 samples, 0.01%)</title><rect x="1035.7172271791353" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(250,95,21)" rx="2" ry="2" _orig_x="660.1" _orig_width="0.2"/>
<text x="1038.7172271791353" y="1791.5" _orig_x="663.12"/>
</g>
<g class="hide">
<title>_nv035303rm (105 samples, 0.02%)</title><rect x="1180.6" y="2053" width="0.2" height="15.0" fill="rgb(216,144,13)" rx="2" ry="2"/>
<text x="1183.65" y="2063.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (479 samples, 0.07%)</title><rect x="327.0693205216198" y="1941" width="3.239533287577214" height="15.0" fill="rgb(234,8,9)" rx="2" ry="2" _orig_x="485.1" _orig_width="0.8"/>
<text x="330.0693205216198" y="1951.5" _orig_x="488.08"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (69 samples, 0.01%)</title><rect x="100.96705559368556" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(218,24,2)" rx="2" ry="2" _orig_x="153.1" _orig_width="0.1"/>
<text x="103.96705559368556" y="1935.5" _orig_x="156.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (451 samples, 0.07%)</title><rect x="334.17433081674665" y="1989" width="0.8730267673301304" height="15.0" fill="rgb(218,173,44)" rx="2" ry="2" _orig_x="366.8" _orig_width="0.8"/>
<text x="337.17433081674665" y="1999.5" _orig_x="369.76"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (67 samples, 0.01%)</title><rect x="249.3205216197665" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(205,92,22)" rx="2" ry="2" _orig_x="465.9" _orig_width="0.1"/>
<text x="252.3205216197665" y="1823.5" _orig_x="468.90"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,036 samples, 0.30%)</title><rect x="412.10706932052165" y="1749" width="14.57789979409746" height="15.0" fill="rgb(234,174,52)" rx="2" ry="2" _orig_x="506.1" _orig_width="3.6"/>
<text x="415.10706932052165" y="1759.5" _orig_x="509.12"/>
</g>
<g class="hide">
<title>[code] (488 samples, 0.07%)</title><rect x="16.4" y="2037" width="0.8" height="15.0" fill="rgb(249,72,10)" rx="2" ry="2"/>
<text x="19.35" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (177 samples, 0.03%)</title><rect x="353.0535346602607" y="1765" width="0.3273850377487989" height="15.0" fill="rgb(252,138,38)" rx="2" ry="2" _orig_x="384.1" _orig_width="0.3"/>
<text x="356.0535346602607" y="1775.5" _orig_x="387.09"/>
</g>
<g class="hide">
<title>[perf-123031.map] (160 samples, 0.02%)</title><rect x="86.78037062457093" y="1557" width="0.3273850377487989" height="15.0" fill="rgb(252,224,12)" rx="2" ry="2" _orig_x="140.1" _orig_width="0.3"/>
<text x="89.78037062457093" y="1567.5" _orig_x="143.09"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="245" width="1.091283459162663" height="15.0" fill="rgb(211,222,37)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="255.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (510 samples, 0.08%)</title><rect x="1163.2738503774879" y="1957" width="3.644474948524365" height="15.0" fill="rgb(218,166,45)" rx="2" ry="2" _orig_x="691.6" _orig_width="0.9"/>
<text x="1166.2738503774879" y="1967.5" _orig_x="694.63"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1045" width="2.182566918325326" height="15.0" fill="rgb(206,120,41)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1055.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (73 samples, 0.01%)</title><rect x="311.681537405628" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(212,220,7)" rx="2" ry="2" _orig_x="481.3" _orig_width="0.2"/>
<text x="314.681537405628" y="1887.5" _orig_x="484.34"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (110 samples, 0.02%)</title><rect x="619.0322580645162" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(216,183,23)" rx="2" ry="2" _orig_x="557.2" _orig_width="0.2"/>
<text x="622.0322580645162" y="1823.5" _orig_x="560.17"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (251 samples, 0.04%)</title><rect x="215.7103637611531" y="1797" width="1.619766643788607" height="15.0" fill="rgb(213,165,30)" rx="2" ry="2" _orig_x="457.6" _orig_width="0.4"/>
<text x="218.7103637611531" y="1807.5" _orig_x="460.59"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (69 samples, 0.01%)</title><rect x="551.0020590253945" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(231,151,25)" rx="2" ry="2" _orig_x="540.4" _orig_width="0.2"/>
<text x="554.0020590253945" y="1759.5" _orig_x="543.44"/>
</g>
<g class="hide">
<title>start_thread (64 samples, 0.01%)</title><rect x="13.5" y="2053" width="0.1" height="15.0" fill="rgb(240,118,6)" rx="2" ry="2"/>
<text x="16.48" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (357 samples, 0.05%)</title><rect x="211.1" y="2053" width="0.6" height="15.0" fill="rgb(234,36,39)" rx="2" ry="2"/>
<text x="214.11" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (75 samples, 0.01%)</title><rect x="30.652024708304598" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(247,36,11)" rx="2" ry="2" _orig_x="411.9" _orig_width="0.2"/>
<text x="33.652024708304594" y="1823.5" _orig_x="414.94"/>
</g>
<g class="hide">
<title>[code] (269 samples, 0.04%)</title><rect x="85.79821551132453" y="1525" width="0.5456417295813315" height="15.0" fill="rgb(222,57,44)" rx="2" ry="2" _orig_x="139.2" _orig_width="0.5"/>
<text x="88.79821551132453" y="1535.5" _orig_x="142.24"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (787 samples, 0.12%)</title><rect x="695.1612903225806" y="1829" width="5.264241592312972" height="15.0" fill="rgb(219,157,1)" rx="2" ry="2" _orig_x="576.0" _orig_width="1.3"/>
<text x="698.1612903225806" y="1839.5" _orig_x="578.97"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (203 samples, 0.03%)</title><rect x="260.2539464653398" y="1765" width="1.214824982841455" height="15.0" fill="rgb(239,47,45)" rx="2" ry="2" _orig_x="468.6" _orig_width="0.3"/>
<text x="263.2539464653398" y="1775.5" _orig_x="471.56"/>
</g>
<g class="hide">
<title>g_source_ref (100 samples, 0.01%)</title><rect x="295.5428963623883" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(221,61,16)" rx="2" ry="2" _orig_x="331.4" _orig_width="0.2"/>
<text x="298.5428963623883" y="2047.5" _orig_x="334.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (942 samples, 0.14%)</title><rect x="271.53466026080974" y="1989" width="1.855181880576527" height="15.0" fill="rgb(220,84,35)" rx="2" ry="2" _orig_x="309.4" _orig_width="1.7"/>
<text x="274.53466026080974" y="1999.5" _orig_x="312.44"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (91 samples, 0.01%)</title><rect x="617.4124914207273" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(231,2,52)" rx="2" ry="2" _orig_x="556.8" _orig_width="0.2"/>
<text x="620.4124914207273" y="1839.5" _orig_x="559.85"/>
</g>
<g class="hide">
<title>read (195 samples, 0.03%)</title><rect x="84.48867536032935" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(235,135,25)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="2047.5" _orig_x="140.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (629 samples, 0.09%)</title><rect x="35.9748427672956" y="1989" width="4.452830188679245" height="15.0" fill="rgb(215,104,52)" rx="2" ry="2" _orig_x="397.7" _orig_width="1.2"/>
<text x="38.9748427672956" y="1999.5" _orig_x="400.75"/>
</g>
<g class="hide">
<title>__strrchr_avx2 (111 samples, 0.02%)</title><rect x="783.4557309540149" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(208,44,21)" rx="2" ry="2" _orig_x="778.5" _orig_width="0.2"/>
<text x="786.4557309540149" y="2047.5" _orig_x="781.49"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (144 samples, 0.02%)</title><rect x="519.821551132464" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(228,59,32)" rx="2" ry="2" _orig_x="532.7" _orig_width="0.2"/>
<text x="522.821551132464" y="1759.5" _orig_x="535.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (875 samples, 0.13%)</title><rect x="1166.277968428277" y="1637" width="1.6369251887439944" height="15.0" fill="rgb(214,156,36)" rx="2" ry="2" _orig_x="1129.3" _orig_width="1.5"/>
<text x="1169.277968428277" y="1647.5" _orig_x="1132.28"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (315 samples, 0.05%)</title><rect x="819.073438572409" y="1765" width="2.42964996568291" height="15.0" fill="rgb(221,157,9)" rx="2" ry="2" _orig_x="606.6" _orig_width="0.6"/>
<text x="822.073438572409" y="1775.5" _orig_x="609.60"/>
</g>
<g class="hide">
<title>[code] (144 samples, 0.02%)</title><rect x="14.2" y="1829" width="0.3" height="15.0" fill="rgb(252,25,27)" rx="2" ry="2"/>
<text x="17.21" y="1839.5"/>
</g>
<g class="hide">
<title>[unknown] (9,534 samples, 1.42%)</title><rect x="251.3459162663005" y="2037" width="18.22443376801647" height="15.0" fill="rgb(244,89,16)" rx="2" ry="2" _orig_x="290.9" _orig_width="16.7"/>
<text x="254.3459162663005" y="2047.5" _orig_x="293.88">[unknown] </text>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,034 samples, 0.15%)</title><rect x="659.5264241592314" y="1797" width="7.28894989704873" height="15.0" fill="rgb(241,11,29)" rx="2" ry="2" _orig_x="567.2" _orig_width="1.8"/>
<text x="662.5264241592314" y="1807.5" _orig_x="570.22"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1365" width="0.1091283459162663" height="15.0" fill="rgb(206,210,25)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1375.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>record__pushfn (1,144 samples, 0.17%)</title><rect x="805.9361702127659" y="1957" width="2.182566918325326" height="15.0" fill="rgb(208,30,46)" rx="2" ry="2" _orig_x="799.1" _orig_width="2.0"/>
<text x="808.9361702127659" y="1967.5" _orig_x="802.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.01%)</title><rect x="89.1811942347288" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(226,107,6)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1903.5" _orig_x="145.29"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (108 samples, 0.02%)</title><rect x="1148.6959505833904" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(218,40,34)" rx="2" ry="2" _orig_x="688.0" _orig_width="0.2"/>
<text x="1151.6959505833904" y="1759.5" _orig_x="691.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="337.3390528483183" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(233,191,16)" rx="2" ry="2" _orig_x="369.7" _orig_width="0.1"/>
<text x="340.3390528483183" y="1919.5" _orig_x="372.73"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (85 samples, 0.01%)</title><rect x="630.7755662319836" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(252,229,32)" rx="2" ry="2" _orig_x="560.1" _orig_width="0.2"/>
<text x="633.7755662319836" y="1743.5" _orig_x="563.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.03%)</title><rect x="808.9917638984213" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(238,91,47)" rx="2" ry="2" _orig_x="801.9" _orig_width="0.4"/>
<text x="811.9917638984213" y="1935.5" _orig_x="804.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (527 samples, 0.08%)</title><rect x="337.6664378860672" y="1989" width="1.091283459162663" height="15.0" fill="rgb(229,145,49)" rx="2" ry="2" _orig_x="370.0" _orig_width="1.0"/>
<text x="340.6664378860672" y="1999.5" _orig_x="373.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (350 samples, 0.05%)</title><rect x="808.6643788606725" y="1989" width="0.7638984214138641" height="15.0" fill="rgb(232,211,17)" rx="2" ry="2" _orig_x="801.6" _orig_width="0.7"/>
<text x="811.6643788606725" y="1999.5" _orig_x="804.64"/>
</g>
<g class="hide">
<title>[code] (166 samples, 0.02%)</title><rect x="14.2" y="1861" width="0.3" height="15.0" fill="rgb(249,174,54)" rx="2" ry="2"/>
<text x="17.18" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (263 samples, 0.04%)</title><rect x="64.62731640356887" y="1749" width="0.5456417295813315" height="15.0" fill="rgb(224,54,11)" rx="2" ry="2" _orig_x="119.8" _orig_width="0.5"/>
<text x="67.62731640356887" y="1759.5" _orig_x="122.80"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (138 samples, 0.02%)</title><rect x="61.832532601235464" y="1813" width="1.214824982841455" height="15.0" fill="rgb(242,72,53)" rx="2" ry="2" _orig_x="419.6" _orig_width="0.3"/>
<text x="64.83253260123547" y="1823.5" _orig_x="422.62"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (260 samples, 0.04%)</title><rect x="342.05216197666437" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(222,104,25)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.5"/>
<text x="345.05216197666437" y="1839.5" _orig_x="491.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="53.71448181194225" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(216,14,51)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="2031.5" _orig_x="112.80"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (60 samples, 0.01%)</title><rect x="477.30267673301313" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(222,63,24)" rx="2" ry="2" _orig_x="522.2" _orig_width="0.1"/>
<text x="480.30267673301313" y="1807.5" _orig_x="525.19"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (83 samples, 0.01%)</title><rect x="875.360329444063" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(231,8,33)" rx="2" ry="2" _orig_x="620.5" _orig_width="0.2"/>
<text x="878.360329444063" y="1871.5" _orig_x="623.54"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,645 samples, 0.24%)</title><rect x="129.86273164035674" y="1829" width="11.743308167467399" height="15.0" fill="rgb(239,131,10)" rx="2" ry="2" _orig_x="436.4" _orig_width="2.9"/>
<text x="132.86273164035674" y="1839.5" _orig_x="439.39"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (108 samples, 0.02%)</title><rect x="325.04461221688405" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(238,81,53)" rx="2" ry="2" _orig_x="484.6" _orig_width="0.2"/>
<text x="328.04461221688405" y="1887.5" _orig_x="487.58"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (503 samples, 0.07%)</title><rect x="235.95744680851067" y="1797" width="3.644474948524365" height="15.0" fill="rgb(221,31,36)" rx="2" ry="2" _orig_x="462.6" _orig_width="0.9"/>
<text x="238.95744680851067" y="1807.5" _orig_x="465.59"/>
</g>
<g class="hide">
<title>[github-desktop] (77 samples, 0.01%)</title><rect x="16.2" y="1957" width="0.1" height="15.0" fill="rgb(210,28,44)" rx="2" ry="2"/>
<text x="19.15" y="1967.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (144 samples, 0.02%)</title><rect x="646.1633493479751" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(238,35,6)" rx="2" ry="2" _orig_x="563.9" _orig_width="0.2"/>
<text x="649.1633493479751" y="1903.5" _orig_x="566.88"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (107 samples, 0.02%)</title><rect x="717.8380233356212" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(213,45,53)" rx="2" ry="2" _orig_x="581.6" _orig_width="0.2"/>
<text x="720.8380233356212" y="1807.5" _orig_x="584.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (173 samples, 0.03%)</title><rect x="47.8" y="1781" width="0.3" height="15.0" fill="rgb(225,73,0)" rx="2" ry="2"/>
<text x="50.77" y="1791.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (61 samples, 0.01%)</title><rect x="562.7453671928619" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(211,188,20)" rx="2" ry="2" _orig_x="543.3" _orig_width="0.1"/>
<text x="565.7453671928619" y="1855.5" _orig_x="546.26"/>
</g>
<g class="hide">
<title>ntfs_mapping_pairs_decompress (1,198 samples, 0.18%)</title><rect x="790.003431708991" y="2037" width="2.2916952642415924" height="15.0" fill="rgb(208,56,30)" rx="2" ry="2" _orig_x="784.5" _orig_width="2.1"/>
<text x="793.003431708991" y="2047.5" _orig_x="787.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="69" width="0.2182566918325326" height="15.0" fill="rgb(233,82,28)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="79.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>[[vdso]] (66 samples, 0.01%)</title><rect x="268.3" y="2053" width="0.1" height="15.0" fill="rgb(205,145,11)" rx="2" ry="2"/>
<text x="271.30" y="2063.5"/>
</g>
<g class="hide">
<title>JS_Helper (243 samples, 0.04%)</title><rect x="22.2" y="2069" width="0.4" height="15.0" fill="rgb(208,146,20)" rx="2" ry="2"/>
<text x="25.17" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,588 samples, 0.24%)</title><rect x="128.1400137268359" y="1685" width="2.9464653397391904" height="15.0" fill="rgb(228,179,39)" rx="2" ry="2" _orig_x="178.0" _orig_width="2.7"/>
<text x="131.1400137268359" y="1695.5" _orig_x="180.95"/>
</g>
<g class="hide">
<title>__poll (78 samples, 0.01%)</title><rect x="805.7179135209333" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(237,226,23)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1999.5" _orig_x="801.87"/>
</g>
<g class="hide">
<title>[github-desktop] (197 samples, 0.03%)</title><rect x="178.33905284831835" y="1813" width="0.4365133836650652" height="15.0" fill="rgb(238,228,14)" rx="2" ry="2" _orig_x="224.0" _orig_width="0.4"/>
<text x="181.33905284831835" y="1823.5" _orig_x="227.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (282 samples, 0.04%)</title><rect x="337.0116678105695" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(238,59,0)" rx="2" ry="2" _orig_x="369.4" _orig_width="0.4"/>
<text x="340.0116678105695" y="2047.5" _orig_x="372.35"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="437" width="1.091283459162663" height="15.0" fill="rgb(233,218,22)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="447.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>ntfs_attr_find_vcn (101 samples, 0.01%)</title><rect x="778.1084420041179" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(248,80,17)" rx="2" ry="2" _orig_x="773.6" _orig_width="0.2"/>
<text x="781.1084420041179" y="2031.5" _orig_x="776.65"/>
</g>
<g class="hide">
<title>__GI___ioctl (66 samples, 0.01%)</title><rect x="805.4996568291008" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(245,202,2)" rx="2" ry="2" _orig_x="798.7" _orig_width="0.2"/>
<text x="808.4996568291008" y="1983.5" _orig_x="801.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.02%)</title><rect x="1186.6" y="1973" width="0.3" height="15.0" fill="rgb(238,85,5)" rx="2" ry="2"/>
<text x="1189.63" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,087 samples, 0.16%)</title><rect x="806.0452985586821" y="1893" width="2.0734385724090596" height="15.0" fill="rgb(215,88,7)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1903.5" _orig_x="802.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (2,071 samples, 0.31%)</title><rect x="1044.2210020590255" y="1813" width="14.982841455044612" height="15.0" fill="rgb(205,219,45)" rx="2" ry="2" _orig_x="662.2" _orig_width="3.7"/>
<text x="1047.2210020590255" y="1823.5" _orig_x="665.23"/>
</g>
<g class="hide">
<title>clutter_actor_get_parent (67 samples, 0.01%)</title><rect x="202.67467398764575" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(233,169,35)" rx="2" ry="2" _orig_x="246.3" _orig_width="0.2"/>
<text x="205.67467398764575" y="2015.5" _orig_x="249.34"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="981" width="1.091283459162663" height="15.0" fill="rgb(247,63,23)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="991.5" _orig_x="301.96"/>
</g>
<g>
<title>Column::GetType (90 samples, 0.01%)</title><rect x="759.951956074125" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(249,176,34)" rx="2" ry="2" _orig_x="592.0" _orig_width="0.1"/>
<text x="762.951956074125" y="1887.5" _orig_x="594.98"/>
</g>
<g>
<title>DiskManager::IsPageFree (58 samples, 0.01%)</title><rect x="53.73369938229243" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(213,188,30)" rx="2" ry="2" _orig_x="417.6" _orig_width="0.1"/>
<text x="56.73369938229243" y="1855.5" _orig_x="420.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (291 samples, 0.04%)</title><rect x="335.15648592999304" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(230,131,18)" rx="2" ry="2" _orig_x="367.7" _orig_width="0.5"/>
<text x="338.15648592999304" y="1999.5" _orig_x="370.66"/>
</g>
<g class="hide">
<title>[code] (563 samples, 0.08%)</title><rect x="15.2" y="1973" width="1.0" height="15.0" fill="rgb(212,157,26)" rx="2" ry="2"/>
<text x="18.17" y="1983.5"/>
</g>
<g class="hide">
<title>kworker/3:3-eve (352 samples, 0.05%)</title><rect x="367.6" y="2069" width="0.6" height="15.0" fill="rgb(240,57,53)" rx="2" ry="2"/>
<text x="370.55" y="2079.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (89 samples, 0.01%)</title><rect x="771.290322580645" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(229,217,13)" rx="2" ry="2" _orig_x="594.8" _orig_width="0.1"/>
<text x="774.290322580645" y="1711.5" _orig_x="597.76"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (61 samples, 0.01%)</title><rect x="805.7103637611528" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(249,28,32)" rx="2" ry="2" _orig_x="603.3" _orig_width="0.1"/>
<text x="808.7103637611528" y="1791.5" _orig_x="606.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (709 samples, 0.11%)</title><rect x="1166.605353466026" y="1605" width="1.3095401509951956" height="15.0" fill="rgb(223,145,8)" rx="2" ry="2" _orig_x="1129.6" _orig_width="1.2"/>
<text x="1169.605353466026" y="1615.5" _orig_x="1132.56"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="549" width="2.182566918325326" height="15.0" fill="rgb(213,67,25)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="559.5" _orig_x="117.41"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (72 samples, 0.01%)</title><rect x="242.8414550446122" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(224,217,9)" rx="2" ry="2" _orig_x="464.3" _orig_width="0.1"/>
<text x="245.8414550446122" y="1743.5" _orig_x="467.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (265 samples, 0.04%)</title><rect x="68.01029512697315" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(222,132,13)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="1951.5" _orig_x="125.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="159.78723404255308" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(227,220,4)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1839.5" _orig_x="210.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="159.78723404255308" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(218,93,30)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1919.5" _orig_x="209.98"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (7,073 samples, 1.05%)</title><rect x="1012.6355525051474" y="1877" width="50.212765957446805" height="15.0" fill="rgb(245,48,38)" rx="2" ry="2" _orig_x="654.4" _orig_width="12.4"/>
<text x="1015.6355525051474" y="1887.5" _orig_x="657.41">Simp..</text>
</g>
<g>
<title>[libstdc++.so.6.0.28] (73 samples, 0.01%)</title><rect x="978.2155113246395" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(237,168,10)" rx="2" ry="2" _orig_x="645.9" _orig_width="0.1"/>
<text x="981.2155113246395" y="1823.5" _orig_x="648.86"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (208 samples, 0.03%)</title><rect x="288.19492107069317" y="1861" width="1.619766643788607" height="15.0" fill="rgb(211,100,21)" rx="2" ry="2" _orig_x="475.5" _orig_width="0.4"/>
<text x="291.19492107069317" y="1871.5" _orig_x="478.53"/>
</g>
<g class="hide">
<title>[unknown] (539 samples, 0.08%)</title><rect x="58.73438572409051" y="117" width="1.091283459162663" height="15.0" fill="rgb(211,54,53)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.0"/>
<text x="61.73438572409051" y="127.5" _orig_x="117.42"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (179 samples, 0.03%)</title><rect x="1095.6485929993135" y="1925" width="1.619766643788607" height="15.0" fill="rgb(246,10,54)" rx="2" ry="2" _orig_x="674.9" _orig_width="0.4"/>
<text x="1098.6485929993135" y="1935.5" _orig_x="677.95"/>
</g>
<g>
<title>CatalogManager::GetTable (315 samples, 0.05%)</title><rect x="1092.4090597117365" y="1957" width="2.0247083047357584" height="15.0" fill="rgb(229,27,3)" rx="2" ry="2" _orig_x="674.1" _orig_width="0.5"/>
<text x="1095.4090597117365" y="1967.5" _orig_x="677.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.02%)</title><rect x="167.535346602608" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(240,149,34)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1871.5" _orig_x="217.09"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (203 samples, 0.03%)</title><rect x="186.74193548387083" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(242,65,50)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="1983.5" _orig_x="234.71"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (101 samples, 0.01%)</title><rect x="307.4378860672614" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(231,214,21)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="2047.5" _orig_x="345.28"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (157 samples, 0.02%)</title><rect x="900.0617707618395" y="1829" width="1.214824982841455" height="15.0" fill="rgb(222,28,51)" rx="2" ry="2" _orig_x="626.6" _orig_width="0.3"/>
<text x="903.0617707618395" y="1839.5" _orig_x="629.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (199 samples, 0.03%)</title><rect x="10.172271791352005" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(248,21,41)" rx="2" ry="2" _orig_x="69.9" _orig_width="0.3"/>
<text x="13.172271791352005" y="1935.5" _orig_x="72.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (898 samples, 0.13%)</title><rect x="626.726149622512" y="1797" width="6.0741249142072755" height="15.0" fill="rgb(244,16,54)" rx="2" ry="2" _orig_x="559.1" _orig_width="1.5"/>
<text x="629.726149622512" y="1807.5" _orig_x="562.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,103 samples, 1.35%)</title><rect x="760.3205216197665" y="1893" width="17.460535346602608" height="15.0" fill="rgb(240,179,0)" rx="2" ry="2" _orig_x="757.3" _orig_width="16.0"/>
<text x="763.3205216197665" y="1903.5" _orig_x="760.33">[[kernel.kallsyms]] </text>
</g>
<g>
<title>DiskManager::IsPageFree (118 samples, 0.02%)</title><rect x="355.0102951269732" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(240,202,48)" rx="2" ry="2" _orig_x="492.0" _orig_width="0.2"/>
<text x="358.0102951269732" y="1919.5" _orig_x="494.99"/>
</g>
<g class="hide">
<title>[Xorg] (312 samples, 0.05%)</title><rect x="54.36925188743986" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(246,64,41)" rx="2" ry="2" _orig_x="110.4" _orig_width="0.5"/>
<text x="57.36925188743986" y="2047.5" _orig_x="113.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (711 samples, 0.11%)</title><rect x="157.1681537405627" y="1989" width="1.3095401509951956" height="15.0" fill="rgb(208,17,35)" rx="2" ry="2" _orig_x="204.6" _orig_width="1.2"/>
<text x="160.1681537405627" y="1999.5" _orig_x="207.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="88.63555250514749" y="1765" width="0.1091283459162663" height="15.0" fill="rgb(215,56,42)" rx="2" ry="2" _orig_x="141.8" _orig_width="0.1"/>
<text x="91.63555250514749" y="1775.5" _orig_x="144.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183,143 samples, 27.20%)</title><rect x="818.3768016472202" y="2005" width="350.1928620452985" height="15.0" fill="rgb(245,110,30)" rx="2" ry="2" _orig_x="810.5" _orig_width="320.9"/>
<text x="821.3768016472202" y="2015.5" _orig_x="813.47">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (14,998 samples, 2.23%)</title><rect x="27.8" y="2053" width="26.2" height="15.0" fill="rgb(251,177,44)" rx="2" ry="2"/>
<text x="30.76" y="2063.5">[..</text>
</g>
<g>
<title>std::vector&lt;IndexInfo*, std::allocator&lt;IndexInfo*&gt; &gt;::_M_realloc_insert&lt;IndexInfo* const&amp;&gt; (148 samples, 0.02%)</title><rect x="1100.1029512697323" y="1925" width="1.214824982841455" height="15.0" fill="rgb(238,169,42)" rx="2" ry="2" _orig_x="676.0" _orig_width="0.3"/>
<text x="1103.1029512697323" y="1935.5" _orig_x="679.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,394 samples, 0.21%)</title><rect x="12.968553459119539" y="2021" width="9.276729559748428" height="15.0" fill="rgb(245,127,30)" rx="2" ry="2" _orig_x="391.5" _orig_width="2.5"/>
<text x="15.968553459119539" y="2031.5" _orig_x="394.54"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (78 samples, 0.01%)</title><rect x="1142.2168840082359" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(240,219,16)" rx="2" ry="2" _orig_x="686.4" _orig_width="0.1"/>
<text x="1145.2168840082359" y="1759.5" _orig_x="689.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (217 samples, 0.03%)</title><rect x="339.30336307481116" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(229,193,19)" rx="2" ry="2" _orig_x="371.5" _orig_width="0.3"/>
<text x="342.30336307481116" y="1951.5" _orig_x="374.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.02%)</title><rect x="57.2" y="1893" width="0.3" height="15.0" fill="rgb(209,117,47)" rx="2" ry="2"/>
<text x="60.25" y="1903.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (75 samples, 0.01%)</title><rect x="635.6348661633491" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(220,169,8)" rx="2" ry="2" _orig_x="561.3" _orig_width="0.2"/>
<text x="638.6348661633491" y="1855.5" _orig_x="564.32"/>
</g>
<g>
<title>[[kernel.kallsyms]] (100 samples, 0.01%)</title><rect x="355.82017844886747" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(210,198,18)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1887.5" _orig_x="495.23"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (66 samples, 0.01%)</title><rect x="207.2065888812628" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(243,163,20)" rx="2" ry="2" _orig_x="455.5" _orig_width="0.1"/>
<text x="210.2065888812628" y="1759.5" _orig_x="458.46"/>
</g>
<g>
<title>[[kernel.kallsyms]] (314 samples, 0.05%)</title><rect x="56.1633493479752" y="1669" width="2.42964996568291" height="15.0" fill="rgb(210,0,22)" rx="2" ry="2" _orig_x="418.2" _orig_width="0.6"/>
<text x="59.1633493479752" y="1679.5" _orig_x="421.23"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1493" width="2.182566918325326" height="15.0" fill="rgb(242,110,29)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1503.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="805.608785175017" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(229,139,46)" rx="2" ry="2" _orig_x="798.8" _orig_width="0.1"/>
<text x="808.608785175017" y="1919.5" _orig_x="801.76"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (65 samples, 0.01%)</title><rect x="308.4200411805078" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(221,57,4)" rx="2" ry="2" _orig_x="343.2" _orig_width="0.1"/>
<text x="311.4200411805078" y="2015.5" _orig_x="346.19"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (63 samples, 0.01%)</title><rect x="418.5861358956759" y="1685" width="0.4049416609471517" height="15.0" fill="rgb(219,128,8)" rx="2" ry="2" _orig_x="507.7" _orig_width="0.1"/>
<text x="421.5861358956759" y="1695.5" _orig_x="510.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176 samples, 0.03%)</title><rect x="1165.8805031446543" y="1941" width="1.4842767295597485" height="15.0" fill="rgb(236,115,1)" rx="2" ry="2" _orig_x="702.2" _orig_width="0.4"/>
<text x="1168.8805031446543" y="1951.5" _orig_x="705.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="307.4378860672614" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(226,165,42)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="2015.5" _orig_x="345.32"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (120 samples, 0.02%)</title><rect x="286.57515442690465" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(247,220,45)" rx="2" ry="2" _orig_x="475.1" _orig_width="0.2"/>
<text x="289.57515442690465" y="1823.5" _orig_x="478.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="169.17227179135202" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(243,56,44)" rx="2" ry="2" _orig_x="215.6" _orig_width="0.2"/>
<text x="172.17227179135202" y="1871.5" _orig_x="218.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (199 samples, 0.03%)</title><rect x="68.22855181880567" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(212,91,52)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="71.22855181880567" y="1903.5" _orig_x="126.05"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="2021" width="0.7" height="15.0" fill="rgb(232,180,23)" rx="2" ry="2"/>
<text x="17.04" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (447 samples, 0.07%)</title><rect x="359.3829787234041" y="1781" width="0.8730267673301304" height="15.0" fill="rgb(240,41,46)" rx="2" ry="2" _orig_x="389.9" _orig_width="0.8"/>
<text x="362.3829787234041" y="1791.5" _orig_x="392.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (194 samples, 0.03%)</title><rect x="12.46396705559359" y="1845" width="0.4365133836650652" height="15.0" fill="rgb(232,174,31)" rx="2" ry="2" _orig_x="72.0" _orig_width="0.4"/>
<text x="15.46396705559359" y="1855.5" _orig_x="75.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (94 samples, 0.01%)</title><rect x="378.0919698009608" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(208,55,18)" rx="2" ry="2" _orig_x="497.7" _orig_width="0.2"/>
<text x="381.0919698009608" y="1775.5" _orig_x="500.70"/>
</g>
<g class="hide">
<title>[unknown] (180 samples, 0.03%)</title><rect x="211.9" y="2053" width="0.3" height="15.0" fill="rgb(220,12,30)" rx="2" ry="2"/>
<text x="214.92" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (77 samples, 0.01%)</title><rect x="329.09402882635555" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(229,88,13)" rx="2" ry="2" _orig_x="485.6" _orig_width="0.1"/>
<text x="332.09402882635555" y="1839.5" _orig_x="488.59"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (59 samples, 0.01%)</title><rect x="1070.1372683596433" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(205,208,23)" rx="2" ry="2" _orig_x="668.6" _orig_width="0.1"/>
<text x="1073.1372683596433" y="1903.5" _orig_x="671.60"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (63 samples, 0.01%)</title><rect x="661.1461908030199" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(241,4,28)" rx="2" ry="2" _orig_x="567.6" _orig_width="0.1"/>
<text x="664.1461908030199" y="1759.5" _orig_x="570.57"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (71 samples, 0.01%)</title><rect x="519.0116678105696" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(222,166,42)" rx="2" ry="2" _orig_x="532.5" _orig_width="0.1"/>
<text x="522.0116678105696" y="1711.5" _orig_x="535.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (32,371 samples, 4.81%)</title><rect x="1106.5847632120795" y="1893" width="61.98490048043926" height="15.0" fill="rgb(237,162,43)" rx="2" ry="2" _orig_x="1074.6" _orig_width="56.8"/>
<text x="1109.5847632120795" y="1903.5" _orig_x="1077.65">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="213" width="0.2182566918325326" height="15.0" fill="rgb(212,127,31)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="223.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>[[vdso]] (330 samples, 0.05%)</title><rect x="121.4" y="2053" width="0.6" height="15.0" fill="rgb(222,205,1)" rx="2" ry="2"/>
<text x="124.38" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(213,190,6)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1967.5" _orig_x="77.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="167.535346602608" y="1829" width="0.2182566918325326" height="15.0" fill="rgb(205,93,20)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1839.5" _orig_x="217.15"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (210 samples, 0.03%)</title><rect x="686.2525737817431" y="1861" width="1.619766643788607" height="15.0" fill="rgb(233,216,18)" rx="2" ry="2" _orig_x="573.8" _orig_width="0.4"/>
<text x="689.2525737817431" y="1871.5" _orig_x="576.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="58.0" y="1845" width="0.2" height="15.0" fill="rgb(231,29,1)" rx="2" ry="2"/>
<text x="61.04" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1733" width="2.182566918325326" height="15.0" fill="rgb(230,126,11)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1743.5" _orig_x="117.41"/>
</g>
<g>
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="725.1269732326697" y="1589" width="0.4049416609471517" height="15.0" fill="rgb(235,79,10)" rx="2" ry="2" _orig_x="583.4" _orig_width="0.1"/>
<text x="728.1269732326697" y="1599.5" _orig_x="586.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.02%)</title><rect x="57.2" y="1909" width="0.3" height="15.0" fill="rgb(223,19,8)" rx="2" ry="2"/>
<text x="60.22" y="1919.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (977 samples, 0.15%)</title><rect x="536.8291008922442" y="1749" width="6.884008236101578" height="15.0" fill="rgb(249,60,31)" rx="2" ry="2" _orig_x="536.9" _orig_width="1.7"/>
<text x="539.8291008922442" y="1759.5" _orig_x="539.89"/>
</g>
<g class="hide">
<title>[NetworkManager] (150 samples, 0.02%)</title><rect x="23.8" y="2021" width="0.3" height="15.0" fill="rgb(215,77,54)" rx="2" ry="2"/>
<text x="26.83" y="2031.5"/>
</g>
<g class="hide">
<title>vframeStream::vframeStream (69 samples, 0.01%)</title><rect x="68.2" y="1989" width="0.2" height="15.0" fill="rgb(237,59,53)" rx="2" ry="2"/>
<text x="71.24" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (101 samples, 0.01%)</title><rect x="1148.6959505833904" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(211,21,17)" rx="2" ry="2" _orig_x="688.0" _orig_width="0.2"/>
<text x="1151.6959505833904" y="1743.5" _orig_x="691.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (238 samples, 0.04%)</title><rect x="337.0116678105695" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(230,222,39)" rx="2" ry="2" _orig_x="369.4" _orig_width="0.4"/>
<text x="340.0116678105695" y="1999.5" _orig_x="372.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.02%)</title><rect x="329.3726835964309" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(214,116,45)" rx="2" ry="2" _orig_x="362.4" _orig_width="0.2"/>
<text x="332.3726835964309" y="1903.5" _orig_x="365.37"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (62 samples, 0.01%)</title><rect x="653.0473575840768" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(216,61,48)" rx="2" ry="2" _orig_x="565.6" _orig_width="0.1"/>
<text x="656.0473575840768" y="1727.5" _orig_x="568.63"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (185 samples, 0.03%)</title><rect x="661.9560741249139" y="1733" width="1.214824982841455" height="15.0" fill="rgb(247,137,38)" rx="2" ry="2" _orig_x="567.8" _orig_width="0.3"/>
<text x="664.9560741249139" y="1743.5" _orig_x="570.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (604 samples, 0.09%)</title><rect x="287.6856554564172" y="1829" width="1.2004118050789294" height="15.0" fill="rgb(244,185,31)" rx="2" ry="2" _orig_x="324.2" _orig_width="1.1"/>
<text x="290.6856554564172" y="1839.5" _orig_x="327.22"/>
</g>
<g class="hide">
<title>g_slice_free1 (79 samples, 0.01%)</title><rect x="236.8318462594371" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(212,211,14)" rx="2" ry="2" _orig_x="277.6" _orig_width="0.1"/>
<text x="239.8318462594371" y="2031.5" _orig_x="280.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (947 samples, 0.14%)</title><rect x="1048.675360329444" y="1781" width="6.479066575154428" height="15.0" fill="rgb(236,83,28)" rx="2" ry="2" _orig_x="663.3" _orig_width="1.6"/>
<text x="1051.675360329444" y="1791.5" _orig_x="666.26"/>
</g>
<g class="hide">
<title>__poll (8,740 samples, 1.30%)</title><rect x="32.8" y="2037" width="15.3" height="15.0" fill="rgb(225,161,50)" rx="2" ry="2"/>
<text x="35.77" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator_base&lt;void*, false&gt;::_M_incr (129 samples, 0.02%)</title><rect x="1019.9245024021964" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(237,129,40)" rx="2" ry="2" _orig_x="656.2" _orig_width="0.2"/>
<text x="1022.9245024021964" y="1855.5" _orig_x="659.22"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (127 samples, 0.02%)</title><rect x="737.6801647220315" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(237,108,39)" rx="2" ry="2" _orig_x="586.5" _orig_width="0.2"/>
<text x="740.6801647220315" y="1839.5" _orig_x="589.52"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (315 samples, 0.05%)</title><rect x="205.9917638984213" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(213,156,36)" rx="2" ry="2" _orig_x="455.2" _orig_width="0.5"/>
<text x="208.9917638984213" y="1791.5" _orig_x="458.16"/>
</g>
<g class="hide">
<title>[code] (388 samples, 0.06%)</title><rect x="16.5" y="1845" width="0.7" height="15.0" fill="rgb(233,144,30)" rx="2" ry="2"/>
<text x="19.48" y="1855.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,540 samples, 0.38%)</title><rect x="764.8112560054909" y="1813" width="17.817433081674675" height="15.0" fill="rgb(232,92,22)" rx="2" ry="2" _orig_x="593.2" _orig_width="4.4"/>
<text x="767.8112560054909" y="1823.5" _orig_x="596.17"/>
</g>
<g class="hide">
<title>[code] (85 samples, 0.01%)</title><rect x="86.12560054907334" y="1125" width="0.2182566918325326" height="15.0" fill="rgb(205,2,46)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1135.5" _orig_x="142.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="808.0096087851749" y="1573" width="0.1091283459162663" height="15.0" fill="rgb(244,21,52)" rx="2" ry="2" _orig_x="801.0" _orig_width="0.1"/>
<text x="811.0096087851749" y="1583.5" _orig_x="803.97"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1477" width="2.182566918325326" height="15.0" fill="rgb(217,84,45)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1487.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (275 samples, 0.04%)</title><rect x="68.01029512697315" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(224,129,11)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="1999.5" _orig_x="125.92"/>
</g>
<g class="hide">
<title>[code] (104 samples, 0.02%)</title><rect x="14.31914893617012" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(229,142,2)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1903.5" _orig_x="76.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (100 samples, 0.01%)</title><rect x="11.809196980095999" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(250,222,36)" rx="2" ry="2" _orig_x="71.4" _orig_width="0.2"/>
<text x="14.809196980095999" y="1759.5" _orig_x="74.42"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (428 samples, 0.06%)</title><rect x="218.94989704873007" y="1845" width="3.239533287577214" height="15.0" fill="rgb(247,157,53)" rx="2" ry="2" _orig_x="458.4" _orig_width="0.8"/>
<text x="221.94989704873007" y="1855.5" _orig_x="461.44"/>
</g>
<g class="hide">
<title>[code] (362 samples, 0.05%)</title><rect x="16.5" y="1797" width="0.6" height="15.0" fill="rgb(236,88,12)" rx="2" ry="2"/>
<text x="19.51" y="1807.5"/>
</g>
<g>
<title>_int_free (65 samples, 0.01%)</title><rect x="1077.4262182566918" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(236,121,49)" rx="2" ry="2" _orig_x="670.4" _orig_width="0.2"/>
<text x="1080.4262182566918" y="1839.5" _orig_x="673.45"/>
</g>
<g>
<title>malloc (86 samples, 0.01%)</title><rect x="954.7288949897049" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(254,216,32)" rx="2" ry="2" _orig_x="640.1" _orig_width="0.2"/>
<text x="957.7288949897049" y="1807.5" _orig_x="643.11"/>
</g>
<g class="hide">
<title>curl_multi_info_read (70 samples, 0.01%)</title><rect x="48.3" y="2037" width="0.2" height="15.0" fill="rgb(209,98,17)" rx="2" ry="2"/>
<text x="51.34" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="2037" width="48.67124227865477" height="15.0" fill="rgb(213,112,9)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="2047.5" _orig_x="1134.37">[unknown] </text>
</g>
<g class="hide">
<title>[github-desktop] (65 samples, 0.01%)</title><rect x="16.2" y="1893" width="0.1" height="15.0" fill="rgb(205,107,30)" rx="2" ry="2"/>
<text x="19.17" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="10.60878517501706" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(238,95,6)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="2015.5" _orig_x="73.30"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (76 samples, 0.01%)</title><rect x="40.79874213836482" y="2005" width="0.37106918238993714" height="15.0" fill="rgb(217,41,12)" rx="2" ry="2" _orig_x="399.0" _orig_width="0.1"/>
<text x="43.79874213836482" y="2015.5" _orig_x="401.97"/>
</g>
<g class="hide">
<title>runtime.sysmon (143 samples, 0.02%)</title><rect x="159.24159231297176" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(253,91,52)" rx="2" ry="2" _orig_x="206.5" _orig_width="0.3"/>
<text x="162.24159231297176" y="1999.5" _orig_x="209.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (815 samples, 0.12%)</title><rect x="351.85312285518177" y="1829" width="1.5277968428277282" height="15.0" fill="rgb(231,155,27)" rx="2" ry="2" _orig_x="383.0" _orig_width="1.4"/>
<text x="354.85312285518177" y="1839.5" _orig_x="385.98"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (662 samples, 0.10%)</title><rect x="142.6" y="2053" width="1.1" height="15.0" fill="rgb(237,34,48)" rx="2" ry="2"/>
<text x="145.56" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (269 samples, 0.04%)</title><rect x="272.844200411805" y="1909" width="0.5456417295813315" height="15.0" fill="rgb(211,207,8)" rx="2" ry="2" _orig_x="310.6" _orig_width="0.5"/>
<text x="275.844200411805" y="1919.5" _orig_x="313.61"/>
</g>
<g class="hide">
<title>[github-desktop] (144 samples, 0.02%)</title><rect x="178.44818119423465" y="1765" width="0.2182566918325326" height="15.0" fill="rgb(242,196,8)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.2"/>
<text x="181.44818119423465" y="1775.5" _orig_x="227.06"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (163 samples, 0.02%)</title><rect x="106.78105696636918" y="1749" width="1.214824982841455" height="15.0" fill="rgb(241,65,39)" rx="2" ry="2" _orig_x="430.7" _orig_width="0.3"/>
<text x="109.78105696636918" y="1759.5" _orig_x="433.70"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (285 samples, 0.04%)</title><rect x="944.6053534660261" y="1877" width="2.0247083047357584" height="15.0" fill="rgb(248,52,10)" rx="2" ry="2" _orig_x="637.6" _orig_width="0.5"/>
<text x="947.6053534660261" y="1887.5" _orig_x="640.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (617 samples, 0.09%)</title><rect x="1184.3" y="1893" width="1.1" height="15.0" fill="rgb(213,192,32)" rx="2" ry="2"/>
<text x="1187.31" y="1903.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (297 samples, 0.04%)</title><rect x="1059.20384351407" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(250,174,31)" rx="2" ry="2" _orig_x="665.9" _orig_width="0.5"/>
<text x="1062.20384351407" y="1839.5" _orig_x="668.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="271.0981468771447" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(248,183,10)" rx="2" ry="2" _orig_x="309.0" _orig_width="0.2"/>
<text x="274.0981468771447" y="1919.5" _orig_x="312.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (369 samples, 0.05%)</title><rect x="19.64779874213845" y="1797" width="2.59748427672956" height="15.0" fill="rgb(207,183,49)" rx="2" ry="2" _orig_x="393.3" _orig_width="0.7"/>
<text x="22.64779874213845" y="1807.5" _orig_x="396.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (368 samples, 0.05%)</title><rect x="19.64779874213845" y="1781" width="2.59748427672956" height="15.0" fill="rgb(206,17,48)" rx="2" ry="2" _orig_x="393.3" _orig_width="0.7"/>
<text x="22.64779874213845" y="1791.5" _orig_x="396.34"/>
</g>
<g class="hide">
<title>[code] (465 samples, 0.07%)</title><rect x="16.4" y="1941" width="0.8" height="15.0" fill="rgb(248,129,46)" rx="2" ry="2"/>
<text x="19.38" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.02%)</title><rect x="809.1008922443376" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(214,139,42)" rx="2" ry="2" _orig_x="802.0" _orig_width="0.3"/>
<text x="812.1008922443376" y="1919.5" _orig_x="804.99"/>
</g>
<g class="hide">
<title>[unknown] (184 samples, 0.03%)</title><rect x="162.0789293067947" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(235,207,35)" rx="2" ry="2" _orig_x="209.1" _orig_width="0.4"/>
<text x="165.0789293067947" y="2047.5" _orig_x="212.13"/>
</g>
<g>
<title>std::__niter_wrap&lt;char*&gt; (73 samples, 0.01%)</title><rect x="966.067261496225" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(205,164,44)" rx="2" ry="2" _orig_x="642.9" _orig_width="0.1"/>
<text x="969.067261496225" y="1791.5" _orig_x="645.87"/>
</g>
<g class="hide">
<title>_nv035303rm (175 samples, 0.03%)</title><rect x="360.2" y="2053" width="0.3" height="15.0" fill="rgb(218,6,15)" rx="2" ry="2"/>
<text x="363.20" y="2063.5"/>
</g>
<g class="hide">
<title>[libX11.so.6.3.0] (79 samples, 0.01%)</title><rect x="251.3459162663005" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(252,53,44)" rx="2" ry="2" _orig_x="290.9" _orig_width="0.1"/>
<text x="254.3459162663005" y="2031.5" _orig_x="293.89"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (77 samples, 0.01%)</title><rect x="39.56074124914211" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(212,89,32)" rx="2" ry="2" _orig_x="414.1" _orig_width="0.2"/>
<text x="42.56074124914211" y="1807.5" _orig_x="417.13"/>
</g>
<g class="hide">
<title>runtime.epollwait.abi0 (83 samples, 0.01%)</title><rect x="159.78723404255308" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(251,111,16)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1935.5" _orig_x="209.97"/>
</g>
<g class="hide">
<title>[code] (464 samples, 0.07%)</title><rect x="85.47083047357575" y="1669" width="0.9821551132463967" height="15.0" fill="rgb(218,63,31)" rx="2" ry="2" _orig_x="138.9" _orig_width="0.9"/>
<text x="88.47083047357575" y="1679.5" _orig_x="141.94"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (135 samples, 0.02%)</title><rect x="149.29993136582007" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(226,170,16)" rx="2" ry="2" _orig_x="441.2" _orig_width="0.2"/>
<text x="152.29993136582007" y="1887.5" _orig_x="444.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,170 samples, 0.47%)</title><rect x="136.97940974605342" y="1957" width="6.111187371310913" height="15.0" fill="rgb(219,24,28)" rx="2" ry="2" _orig_x="186.1" _orig_width="5.6"/>
<text x="139.97940974605342" y="1967.5" _orig_x="189.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (282 samples, 0.04%)</title><rect x="337.0116678105695" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(233,110,54)" rx="2" ry="2" _orig_x="369.4" _orig_width="0.4"/>
<text x="340.0116678105695" y="2031.5" _orig_x="372.35"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (153 samples, 0.02%)</title><rect x="332.7385037748798" y="1829" width="1.214824982841455" height="15.0" fill="rgb(254,77,30)" rx="2" ry="2" _orig_x="486.5" _orig_width="0.3"/>
<text x="335.7385037748798" y="1839.5" _orig_x="489.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="307.7652711050102" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(227,61,44)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="2015.5" _orig_x="345.58"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (309 samples, 0.05%)</title><rect x="1150.315717227179" y="1845" width="2.42964996568291" height="15.0" fill="rgb(205,82,50)" rx="2" ry="2" _orig_x="688.4" _orig_width="0.6"/>
<text x="1153.315717227179" y="1855.5" _orig_x="691.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (245 samples, 0.04%)</title><rect x="308.96568291008913" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(210,137,40)" rx="2" ry="2" _orig_x="343.7" _orig_width="0.5"/>
<text x="311.96568291008913" y="1999.5" _orig_x="346.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.01%)</title><rect x="309.2930679478379" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(248,7,52)" rx="2" ry="2" _orig_x="344.0" _orig_width="0.2"/>
<text x="312.2930679478379" y="1951.5" _orig_x="347.02"/>
</g>
<g class="hide">
<title>__pthread_getspecific (83 samples, 0.01%)</title><rect x="288.99519560741237" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(242,109,13)" rx="2" ry="2" _orig_x="325.4" _orig_width="0.1"/>
<text x="291.99519560741237" y="2047.5" _orig_x="328.35"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (262 samples, 0.04%)</title><rect x="717.4330816746739" y="1861" width="1.619766643788607" height="15.0" fill="rgb(251,195,39)" rx="2" ry="2" _orig_x="581.5" _orig_width="0.4"/>
<text x="720.4330816746739" y="1871.5" _orig_x="584.46"/>
</g>
<g>
<title>std::_Destroy&lt;char*, char&gt; (79 samples, 0.01%)</title><rect x="599.1901166781054" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(239,84,7)" rx="2" ry="2" _orig_x="552.3" _orig_width="0.2"/>
<text x="602.1901166781054" y="1839.5" _orig_x="555.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (601 samples, 0.09%)</title><rect x="1113.8709677419354" y="1941" width="4.049416609471517" height="15.0" fill="rgb(210,134,10)" rx="2" ry="2" _orig_x="679.4" _orig_width="1.0"/>
<text x="1116.8709677419354" y="1951.5" _orig_x="682.36"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="645" width="1.091283459162663" height="15.0" fill="rgb(239,8,11)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="655.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (324 samples, 0.05%)</title><rect x="61.78997940974596" y="1829" width="0.6547700754975978" height="15.0" fill="rgb(239,227,3)" rx="2" ry="2" _orig_x="117.2" _orig_width="0.6"/>
<text x="64.78997940974597" y="1839.5" _orig_x="120.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.02%)</title><rect x="89.1811942347288" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(249,225,27)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1935.5" _orig_x="145.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="269.89773507206576" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(245,104,36)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1919.5" _orig_x="310.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.02%)</title><rect x="209.87714481811935" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(224,138,48)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="1999.5" _orig_x="255.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (402 samples, 0.06%)</title><rect x="157.71379547014405" y="1941" width="0.7638984214138641" height="15.0" fill="rgb(212,191,3)" rx="2" ry="2" _orig_x="205.1" _orig_width="0.7"/>
<text x="160.71379547014405" y="1951.5" _orig_x="208.10"/>
</g>
<g class="hide">
<title>vpnui (1,261 samples, 0.19%)</title><rect x="1186.9" y="2069" width="2.2" height="15.0" fill="rgb(226,159,35)" rx="2" ry="2"/>
<text x="1189.88" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="533" width="2.182566918325326" height="15.0" fill="rgb(224,78,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="543.5" _orig_x="117.41"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (461 samples, 0.07%)</title><rect x="264.3033630748113" y="1797" width="3.239533287577214" height="15.0" fill="rgb(225,148,25)" rx="2" ry="2" _orig_x="469.6" _orig_width="0.8"/>
<text x="267.3033630748113" y="1807.5" _orig_x="472.60"/>
</g>
<g>
<title>[[kernel.kallsyms]] (181 samples, 0.03%)</title><rect x="724.3170899107756" y="1669" width="1.214824982841455" height="15.0" fill="rgb(226,172,25)" rx="2" ry="2" _orig_x="583.2" _orig_width="0.3"/>
<text x="727.3170899107756" y="1679.5" _orig_x="586.17"/>
</g>
<g class="hide">
<title>_nv035312rm (97 samples, 0.01%)</title><rect x="360.6" y="2053" width="0.1" height="15.0" fill="rgb(243,36,5)" rx="2" ry="2"/>
<text x="363.56" y="2063.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (283 samples, 0.04%)</title><rect x="68.01029512697315" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(247,18,13)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="2047.5" _orig_x="125.90"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (167 samples, 0.02%)</title><rect x="829.6019217570351" y="1733" width="1.214824982841455" height="15.0" fill="rgb(207,171,41)" rx="2" ry="2" _orig_x="609.2" _orig_width="0.3"/>
<text x="832.6019217570351" y="1743.5" _orig_x="612.23"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (64 samples, 0.01%)</title><rect x="670.8647906657515" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(250,184,29)" rx="2" ry="2" _orig_x="570.0" _orig_width="0.1"/>
<text x="673.8647906657515" y="1871.5" _orig_x="572.99"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::~new_allocator (58 samples, 0.01%)</title><rect x="1079.0459849004803" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(210,127,1)" rx="2" ry="2" _orig_x="670.8" _orig_width="0.1"/>
<text x="1082.0459849004803" y="1855.5" _orig_x="673.80"/>
</g>
<g>
<title>DiskManager::IsPageFree (359 samples, 0.05%)</title><rect x="1131.68840082361" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(225,81,25)" rx="2" ry="2" _orig_x="683.8" _orig_width="0.7"/>
<text x="1134.68840082361" y="1823.5" _orig_x="686.84"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (108 samples, 0.02%)</title><rect x="639.6842827728207" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(212,44,33)" rx="2" ry="2" _orig_x="562.3" _orig_width="0.2"/>
<text x="642.6842827728207" y="1823.5" _orig_x="565.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="209.87714481811935" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(227,124,21)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="1951.5" _orig_x="255.94"/>
</g>
<g>
<title>std::priority_queue&lt;std::pair&lt;TableHeap*, int&gt;, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt;, TableHeap::cmp&gt;::pop (2,433 samples, 0.36%)</title><rect x="1128.8538091969801" y="1941" width="17.412491420727523" height="15.0" fill="rgb(216,220,53)" rx="2" ry="2" _orig_x="683.1" _orig_width="4.3"/>
<text x="1131.8538091969801" y="1951.5" _orig_x="686.10"/>
</g>
<g class="hide">
<title>[unknown] (1,147 samples, 0.17%)</title><rect x="58.73438572409051" y="357" width="2.182566918325326" height="15.0" fill="rgb(236,29,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="367.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149,794 samples, 22.24%)</title><rect x="882.1077556623197" y="1941" width="286.461908030199" height="15.0" fill="rgb(212,211,14)" rx="2" ry="2" _orig_x="868.9" _orig_width="262.5"/>
<text x="885.1077556623197" y="1951.5" _orig_x="871.90">[[kernel.kallsyms]] </text>
</g>
<g>
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="356.22512010981467" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(249,16,0)" rx="2" ry="2" _orig_x="492.3" _orig_width="0.1"/>
<text x="359.22512010981467" y="1743.5" _orig_x="495.30"/>
</g>
<g class="hide">
<title>[unknown] (1,848 samples, 0.27%)</title><rect x="23.8" y="2037" width="3.3" height="15.0" fill="rgb(234,155,52)" rx="2" ry="2"/>
<text x="26.83" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="885" width="1.091283459162663" height="15.0" fill="rgb(235,30,4)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="895.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (63 samples, 0.01%)</title><rect x="951.0844200411806" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(207,33,4)" rx="2" ry="2" _orig_x="639.2" _orig_width="0.1"/>
<text x="954.0844200411806" y="1855.5" _orig_x="642.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (412 samples, 0.06%)</title><rect x="1007.3713109128347" y="1877" width="2.8345916266300617" height="15.0" fill="rgb(209,193,21)" rx="2" ry="2" _orig_x="653.1" _orig_width="0.7"/>
<text x="1010.3713109128347" y="1887.5" _orig_x="656.07"/>
</g>
<g class="hide">
<title>[unknown] (74 samples, 0.01%)</title><rect x="306.7831159917638" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(217,62,21)" rx="2" ry="2" _orig_x="341.7" _orig_width="0.1"/>
<text x="309.7831159917638" y="2031.5" _orig_x="344.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (228 samples, 0.03%)</title><rect x="168.9540150995195" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(233,202,45)" rx="2" ry="2" _orig_x="215.4" _orig_width="0.4"/>
<text x="171.9540150995195" y="1983.5" _orig_x="218.37"/>
</g>
<g class="hide">
<title>[unknown] (861 samples, 0.13%)</title><rect x="736.3122855181879" y="2021" width="1.6369251887439944" height="15.0" fill="rgb(246,58,33)" rx="2" ry="2" _orig_x="735.3" _orig_width="1.5"/>
<text x="739.3122855181879" y="2031.5" _orig_x="738.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="1188.8" y="1941" width="0.1" height="15.0" fill="rgb(208,73,26)" rx="2" ry="2"/>
<text x="1191.77" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (183 samples, 0.03%)</title><rect x="1160.4392587508578" y="1909" width="1.619766643788607" height="15.0" fill="rgb(226,37,9)" rx="2" ry="2" _orig_x="690.9" _orig_width="0.4"/>
<text x="1163.4392587508578" y="1919.5" _orig_x="693.95"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (104 samples, 0.02%)</title><rect x="708.1194234728896" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(240,168,16)" rx="2" ry="2" _orig_x="579.2" _orig_width="0.2"/>
<text x="711.1194234728896" y="1919.5" _orig_x="582.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (182 samples, 0.03%)</title><rect x="663.5758407687028" y="1749" width="1.619766643788607" height="15.0" fill="rgb(216,48,20)" rx="2" ry="2" _orig_x="568.2" _orig_width="0.4"/>
<text x="666.5758407687028" y="1759.5" _orig_x="571.24"/>
</g>
<g class="hide">
<title>git-remote-http (577 samples, 0.09%)</title><rect x="219.8" y="2069" width="1.0" height="15.0" fill="rgb(245,95,2)" rx="2" ry="2"/>
<text x="222.81" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,902 samples, 0.43%)</title><rect x="91.36376115305414" y="1989" width="5.565545641729581" height="15.0" fill="rgb(213,193,50)" rx="2" ry="2" _orig_x="144.3" _orig_width="5.1"/>
<text x="94.36376115305414" y="1999.5" _orig_x="147.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (161 samples, 0.02%)</title><rect x="13.0" y="1973" width="0.3" height="15.0" fill="rgb(208,89,43)" rx="2" ry="2"/>
<text x="15.97" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,784 samples, 0.56%)</title><rect x="45.25157232704402" y="2005" width="24.49056603773585" height="15.0" fill="rgb(237,4,54)" rx="2" ry="2" _orig_x="400.2" _orig_width="6.6"/>
<text x="48.25157232704402" y="2015.5" _orig_x="403.19">[..</text>
</g>
<g class="hide">
<title>[code] (394 samples, 0.06%)</title><rect x="69.53809196980086" y="2005" width="0.7638984214138641" height="15.0" fill="rgb(227,109,36)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="2015.5" _orig_x="127.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="327.40837336993815" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(229,1,41)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="330.40837336993815" y="2031.5" _orig_x="363.58"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (104 samples, 0.02%)</title><rect x="523.4660260809884" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(228,21,46)" rx="2" ry="2" _orig_x="533.6" _orig_width="0.2"/>
<text x="526.4660260809884" y="1759.5" _orig_x="536.59"/>
</g>
<g class="hide">
<title>[perf-105834.map] (898 samples, 0.13%)</title><rect x="67.8" y="2021" width="1.6" height="15.0" fill="rgb(223,81,12)" rx="2" ry="2"/>
<text x="70.82" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="1186.7" y="1957" width="0.2" height="15.0" fill="rgb(210,32,27)" rx="2" ry="2"/>
<text x="1189.67" y="1967.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (165 samples, 0.02%)</title><rect x="789.10775566232" y="1765" width="1.214824982841455" height="15.0" fill="rgb(243,181,42)" rx="2" ry="2" _orig_x="599.2" _orig_width="0.3"/>
<text x="792.10775566232" y="1775.5" _orig_x="602.23"/>
</g>
<g class="hide">
<title>operator new[] (121 samples, 0.02%)</title><rect x="131.19560741249134" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(224,151,8)" rx="2" ry="2" _orig_x="180.8" _orig_width="0.2"/>
<text x="134.19560741249134" y="1983.5" _orig_x="183.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="88.63555250514749" y="1749" width="0.1091283459162663" height="15.0" fill="rgb(218,86,47)" rx="2" ry="2" _orig_x="141.8" _orig_width="0.1"/>
<text x="91.63555250514749" y="1759.5" _orig_x="144.82"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (92 samples, 0.01%)</title><rect x="212.7" y="2053" width="0.1" height="15.0" fill="rgb(240,136,32)" rx="2" ry="2"/>
<text x="215.68" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (115 samples, 0.02%)</title><rect x="940.1509951956074" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(229,25,35)" rx="2" ry="2" _orig_x="636.5" _orig_width="0.2"/>
<text x="943.1509951956074" y="1839.5" _orig_x="639.45"/>
</g>
<g class="hide">
<title>[code] (232 samples, 0.03%)</title><rect x="14.755662319835176" y="1845" width="0.4365133836650652" height="15.0" fill="rgb(215,195,11)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1855.5" _orig_x="77.11"/>
</g>
<g class="hide">
<title>ntfs_mft_records_write (81 samples, 0.01%)</title><rect x="797.5" y="2053" width="0.1" height="15.0" fill="rgb(232,121,8)" rx="2" ry="2"/>
<text x="800.50" y="2063.5"/>
</g>
<g>
<title>std::_Destroy&lt;char*, char&gt; (65 samples, 0.01%)</title><rect x="467.58407687028114" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(250,23,42)" rx="2" ry="2" _orig_x="519.8" _orig_width="0.1"/>
<text x="470.58407687028114" y="1823.5" _orig_x="522.79"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (146 samples, 0.02%)</title><rect x="712.4131777625256" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(244,4,20)" rx="2" ry="2" _orig_x="713.4" _orig_width="0.2"/>
<text x="715.4131777625256" y="2031.5" _orig_x="716.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.02%)</title><rect x="13.0" y="1941" width="0.3" height="15.0" fill="rgb(232,170,15)" rx="2" ry="2"/>
<text x="16.01" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (410 samples, 0.06%)</title><rect x="791.5374056280025" y="1733" width="2.8345916266300617" height="15.0" fill="rgb(235,87,7)" rx="2" ry="2" _orig_x="599.8" _orig_width="0.7"/>
<text x="794.5374056280025" y="1743.5" _orig_x="602.83"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (234 samples, 0.03%)</title><rect x="380.1166781056965" y="1813" width="1.619766643788607" height="15.0" fill="rgb(225,88,54)" rx="2" ry="2" _orig_x="498.2" _orig_width="0.4"/>
<text x="383.1166781056965" y="1823.5" _orig_x="501.23"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (79 samples, 0.01%)</title><rect x="381.7364447494853" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(229,130,49)" rx="2" ry="2" _orig_x="498.6" _orig_width="0.2"/>
<text x="384.7364447494853" y="1823.5" _orig_x="501.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="88.63555250514749" y="1781" width="0.1091283459162663" height="15.0" fill="rgb(250,11,45)" rx="2" ry="2" _orig_x="141.8" _orig_width="0.1"/>
<text x="91.63555250514749" y="1791.5" _orig_x="144.81"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (84 samples, 0.01%)</title><rect x="253.36993822923802" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(217,145,16)" rx="2" ry="2" _orig_x="466.9" _orig_width="0.2"/>
<text x="256.369938229238" y="1855.5" _orig_x="469.91"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (5,884 samples, 0.87%)</title><rect x="811.7844886753601" y="1797" width="41.70899107755663" height="15.0" fill="rgb(230,83,40)" rx="2" ry="2" _orig_x="604.8" _orig_width="10.3"/>
<text x="814.7844886753601" y="1807.5" _orig_x="607.82">std:..</text>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1621" width="0.1091283459162663" height="15.0" fill="rgb(217,204,28)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1631.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Debounce::Debounce (2,378 samples, 0.35%)</title><rect x="154.76733013040487" y="2037" width="4.4742621825669175" height="15.0" fill="rgb(220,86,37)" rx="2" ry="2" _orig_x="202.4" _orig_width="4.1"/>
<text x="157.76733013040487" y="2047.5" _orig_x="205.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (176 samples, 0.03%)</title><rect x="933.6719286204528" y="1829" width="1.619766643788607" height="15.0" fill="rgb(250,137,16)" rx="2" ry="2" _orig_x="634.9" _orig_width="0.4"/>
<text x="936.6719286204528" y="1839.5" _orig_x="637.95"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (274 samples, 0.04%)</title><rect x="220.16472203157164" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(215,121,47)" rx="2" ry="2" _orig_x="458.7" _orig_width="0.5"/>
<text x="223.16472203157164" y="1839.5" _orig_x="461.71"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (223 samples, 0.03%)</title><rect x="86.67124227865467" y="1701" width="0.4365133836650652" height="15.0" fill="rgb(209,153,24)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1711.5" _orig_x="142.99"/>
</g>
<g class="hide">
<title>pthread_mutex_unlock (105 samples, 0.02%)</title><rect x="1185.6" y="2037" width="0.2" height="15.0" fill="rgb(238,204,32)" rx="2" ry="2"/>
<text x="1188.60" y="2047.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (59 samples, 0.01%)</title><rect x="33.08167467398759" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(244,158,6)" rx="2" ry="2" _orig_x="412.5" _orig_width="0.1"/>
<text x="36.08167467398759" y="1775.5" _orig_x="415.48"/>
</g>
<g>
<title>[libminisql_shared.so] (102 samples, 0.02%)</title><rect x="1086.3349347975293" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(216,130,41)" rx="2" ry="2" _orig_x="672.6" _orig_width="0.2"/>
<text x="1089.3349347975293" y="1935.5" _orig_x="675.62"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1509" width="2.182566918325326" height="15.0" fill="rgb(250,179,38)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1519.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="334.719972546328" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(241,137,35)" rx="2" ry="2" _orig_x="367.3" _orig_width="0.3"/>
<text x="337.719972546328" y="1919.5" _orig_x="370.31"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (163 samples, 0.02%)</title><rect x="61.832532601235464" y="1861" width="1.214824982841455" height="15.0" fill="rgb(216,36,28)" rx="2" ry="2" _orig_x="419.6" _orig_width="0.3"/>
<text x="64.83253260123547" y="1871.5" _orig_x="422.59"/>
</g>
<g>
<title>Field::DeserializeFrom (1,983 samples, 0.29%)</title><rect x="258.634179821551" y="1861" width="14.17295813315031" height="15.0" fill="rgb(226,178,47)" rx="2" ry="2" _orig_x="468.2" _orig_width="3.5"/>
<text x="261.634179821551" y="1871.5" _orig_x="471.20"/>
</g>
<g class="hide">
<title>[code] (483 samples, 0.07%)</title><rect x="16.4" y="2005" width="0.8" height="15.0" fill="rgb(254,50,38)" rx="2" ry="2"/>
<text x="19.36" y="2015.5"/>
</g>
<g class="hide">
<title>uvm_isr_top_half_entry (67 samples, 0.01%)</title><rect x="1168.24227865477" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(239,121,30)" rx="2" ry="2" _orig_x="1131.1" _orig_width="0.1"/>
<text x="1171.24227865477" y="1807.5" _orig_x="1134.07"/>
</g>
<g class="hide">
<title>[perf-123031.map] (86 samples, 0.01%)</title><rect x="86.45298558682215" y="1493" width="0.1091283459162663" height="15.0" fill="rgb(249,117,24)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1503.5" _orig_x="142.76"/>
</g>
<g>
<title>Field::DeserializeFrom (111 samples, 0.02%)</title><rect x="749.8284145504462" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(211,205,9)" rx="2" ry="2" _orig_x="589.5" _orig_width="0.2"/>
<text x="752.8284145504462" y="1903.5" _orig_x="592.54"/>
</g>
<g>
<title>[[kernel.kallsyms]] (463 samples, 0.07%)</title><rect x="55.353466026080945" y="1717" width="3.239533287577214" height="15.0" fill="rgb(213,98,21)" rx="2" ry="2" _orig_x="418.0" _orig_width="0.8"/>
<text x="58.353466026080945" y="1727.5" _orig_x="420.96"/>
</g>
<g class="hide">
<title>__pthread_rwlock_rdlock (60 samples, 0.01%)</title><rect x="712.6314344543582" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(246,187,12)" rx="2" ry="2" _orig_x="713.6" _orig_width="0.2"/>
<text x="715.6314344543582" y="2031.5" _orig_x="716.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,683 samples, 0.55%)</title><rect x="124.10226492793403" y="1765" width="6.984214138641043" height="15.0" fill="rgb(212,96,37)" rx="2" ry="2" _orig_x="174.3" _orig_width="6.4"/>
<text x="127.10226492793403" y="1775.5" _orig_x="177.28"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (2,327 samples, 0.35%)</title><rect x="568.8194921070691" y="1813" width="16.60260809883322" height="15.0" fill="rgb(206,95,21)" rx="2" ry="2" _orig_x="544.8" _orig_width="4.1"/>
<text x="571.8194921070691" y="1823.5" _orig_x="547.80"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (414 samples, 0.06%)</title><rect x="576.9183253260121" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(254,63,20)" rx="2" ry="2" _orig_x="546.8" _orig_width="0.7"/>
<text x="579.9183253260121" y="1791.5" _orig_x="549.82"/>
</g>
<g class="hide">
<title>[libcurl-gnutls.so.4.6.0] (206 samples, 0.03%)</title><rect x="27.1" y="2053" width="0.4" height="15.0" fill="rgb(252,93,45)" rx="2" ry="2"/>
<text x="30.13" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (1,502 samples, 0.22%)</title><rect x="234.74262182566918" y="1829" width="10.528483184625944" height="15.0" fill="rgb(248,21,48)" rx="2" ry="2" _orig_x="462.3" _orig_width="2.6"/>
<text x="237.74262182566918" y="1839.5" _orig_x="465.31"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,183 samples, 0.18%)</title><rect x="311.2765957446808" y="1909" width="8.098833218943033" height="15.0" fill="rgb(234,215,6)" rx="2" ry="2" _orig_x="481.2" _orig_width="2.0"/>
<text x="314.2765957446808" y="1919.5" _orig_x="484.17"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,183 samples, 0.18%)</title><rect x="293.8641043239532" y="1877" width="8.098833218943033" height="15.0" fill="rgb(219,8,34)" rx="2" ry="2" _orig_x="476.9" _orig_width="2.0"/>
<text x="296.8641043239532" y="1887.5" _orig_x="479.85"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (73 samples, 0.01%)</title><rect x="37.94097460535336" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(251,51,52)" rx="2" ry="2" _orig_x="413.7" _orig_width="0.2"/>
<text x="40.94097460535336" y="1791.5" _orig_x="416.72"/>
</g>
<g>
<title>Row::DeserializeFrom (12,743 samples, 1.89%)</title><rect x="512.9375428963624" y="1861" width="90.30199039121483" height="15.0" fill="rgb(214,32,37)" rx="2" ry="2" _orig_x="531.0" _orig_width="22.3"/>
<text x="515.9375428963624" y="1871.5" _orig_x="533.97">Row::Deseria..</text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (775 samples, 0.12%)</title><rect x="158.20864790665738" y="1765" width="5.264241592312972" height="15.0" fill="rgb(208,195,42)" rx="2" ry="2" _orig_x="443.4" _orig_width="1.3"/>
<text x="161.20864790665738" y="1775.5" _orig_x="446.38"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1,096 samples, 0.16%)</title><rect x="133.50720658888127" y="1797" width="7.693891557995882" height="15.0" fill="rgb(252,117,13)" rx="2" ry="2" _orig_x="437.3" _orig_width="1.9"/>
<text x="136.50720658888127" y="1807.5" _orig_x="440.28"/>
</g>
<g class="hide">
<title>[code] (370 samples, 0.05%)</title><rect x="16.5" y="1813" width="0.7" height="15.0" fill="rgb(250,76,35)" rx="2" ry="2"/>
<text x="19.50" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,623 samples, 0.39%)</title><rect x="355.23610157858604" y="1973" width="5.01990391214825" height="15.0" fill="rgb(216,148,43)" rx="2" ry="2" _orig_x="386.1" _orig_width="4.6"/>
<text x="358.23610157858604" y="1983.5" _orig_x="389.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (281 samples, 0.04%)</title><rect x="1184.9" y="1829" width="0.5" height="15.0" fill="rgb(215,129,7)" rx="2" ry="2"/>
<text x="1187.89" y="1839.5"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (820 samples, 0.12%)</title><rect x="960.8030199039122" y="1829" width="5.669183253260123" height="15.0" fill="rgb(210,86,32)" rx="2" ry="2" _orig_x="641.6" _orig_width="1.4"/>
<text x="963.8030199039122" y="1839.5" _orig_x="644.61"/>
</g>
<g class="hide">
<title>[perf-105834.map] (109 samples, 0.02%)</title><rect x="63.2" y="2021" width="0.2" height="15.0" fill="rgb(245,43,52)" rx="2" ry="2"/>
<text x="66.20" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,172 samples, 0.17%)</title><rect x="175.93822923816052" y="2021" width="2.2916952642415924" height="15.0" fill="rgb(225,28,16)" rx="2" ry="2" _orig_x="221.8" _orig_width="2.1"/>
<text x="178.93822923816052" y="2031.5" _orig_x="224.85"/>
</g>
<g>
<title>[libminisql_shared.so] (128 samples, 0.02%)</title><rect x="889.5332875772134" y="1845" width="1.214824982841455" height="15.0" fill="rgb(221,182,46)" rx="2" ry="2" _orig_x="624.0" _orig_width="0.3"/>
<text x="892.5332875772134" y="1855.5" _orig_x="627.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.02%)</title><rect x="1166.251572327044" y="1909" width="1.1132075471698113" height="15.0" fill="rgb(227,194,48)" rx="2" ry="2" _orig_x="702.3" _orig_width="0.3"/>
<text x="1169.251572327044" y="1919.5" _orig_x="705.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.02%)</title><rect x="13.336993822923718" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(251,81,36)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1919.5" _orig_x="75.81"/>
</g>
<g>
<title>[libminisql_shared.so] (80 samples, 0.01%)</title><rect x="948.6547700754976" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(230,147,18)" rx="2" ry="2" _orig_x="638.6" _orig_width="0.2"/>
<text x="951.6547700754976" y="1871.5" _orig_x="641.63"/>
</g>
<g class="hide">
<title>[code] (382 samples, 0.06%)</title><rect x="69.53809196980086" y="1973" width="0.7638984214138641" height="15.0" fill="rgb(243,8,50)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="1983.5" _orig_x="127.29"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (129 samples, 0.02%)</title><rect x="661.9560741249139" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(253,36,4)" rx="2" ry="2" _orig_x="567.8" _orig_width="0.2"/>
<text x="664.9560741249139" y="1727.5" _orig_x="570.79"/>
</g>
<g class="hide">
<title>[code] (237 samples, 0.04%)</title><rect x="14.755662319835176" y="1877" width="0.4365133836650652" height="15.0" fill="rgb(225,77,17)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1887.5" _orig_x="77.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (165 samples, 0.02%)</title><rect x="57.2" y="2005" width="0.3" height="15.0" fill="rgb(206,44,46)" rx="2" ry="2"/>
<text x="60.20" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (671 samples, 0.10%)</title><rect x="63.86341798215501" y="1845" width="1.3095401509951956" height="15.0" fill="rgb(206,188,51)" rx="2" ry="2" _orig_x="119.1" _orig_width="1.2"/>
<text x="66.86341798215501" y="1855.5" _orig_x="122.08"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (165 samples, 0.02%)</title><rect x="712.0857927247769" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(239,23,52)" rx="2" ry="2" _orig_x="713.1" _orig_width="0.3"/>
<text x="715.0857927247769" y="2031.5" _orig_x="716.10"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (81 samples, 0.01%)</title><rect x="653.0473575840768" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(215,53,21)" rx="2" ry="2" _orig_x="565.6" _orig_width="0.2"/>
<text x="656.0473575840768" y="1743.5" _orig_x="568.62"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (4,848 samples, 0.72%)</title><rect x="257.4193548387095" y="1893" width="34.01509951956074" height="15.0" fill="rgb(222,61,35)" rx="2" ry="2" _orig_x="467.9" _orig_width="8.4"/>
<text x="260.4193548387095" y="1903.5" _orig_x="470.85">In..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (122 samples, 0.02%)</title><rect x="632.8002745367194" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(241,91,11)" rx="2" ry="2" _orig_x="560.6" _orig_width="0.2"/>
<text x="635.8002745367194" y="1807.5" _orig_x="563.63"/>
</g>
<g class="hide">
<title>[code] (93 samples, 0.01%)</title><rect x="66.7" y="1941" width="0.1" height="15.0" fill="rgb(218,35,17)" rx="2" ry="2"/>
<text x="69.68" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (378 samples, 0.06%)</title><rect x="330.1365820178448" y="1957" width="0.7638984214138641" height="15.0" fill="rgb(248,126,22)" rx="2" ry="2" _orig_x="363.1" _orig_width="0.7"/>
<text x="333.1365820178448" y="1967.5" _orig_x="366.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,492 samples, 0.52%)</title><rect x="353.59917638984206" y="2021" width="6.656829100892244" height="15.0" fill="rgb(222,229,17)" rx="2" ry="2" _orig_x="384.6" _orig_width="6.1"/>
<text x="356.59917638984206" y="2031.5" _orig_x="387.55"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (100 samples, 0.01%)</title><rect x="292.2443376801647" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(214,33,45)" rx="2" ry="2" _orig_x="476.5" _orig_width="0.2"/>
<text x="295.2443376801647" y="1871.5" _orig_x="479.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="64.95470144131767" y="1717" width="0.2182566918325326" height="15.0" fill="rgb(216,167,54)" rx="2" ry="2" _orig_x="120.1" _orig_width="0.2"/>
<text x="67.95470144131767" y="1727.5" _orig_x="123.13"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_erase_at_end (106 samples, 0.02%)</title><rect x="880.219629375429" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(208,152,15)" rx="2" ry="2" _orig_x="621.7" _orig_width="0.2"/>
<text x="883.219629375429" y="1871.5" _orig_x="624.67"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (370 samples, 0.05%)</title><rect x="697.5909402882636" y="1813" width="2.42964996568291" height="15.0" fill="rgb(230,166,5)" rx="2" ry="2" _orig_x="576.6" _orig_width="0.6"/>
<text x="700.5909402882636" y="1823.5" _orig_x="579.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (669 samples, 0.10%)</title><rect x="1184.2" y="1909" width="1.2" height="15.0" fill="rgb(208,127,50)" rx="2" ry="2"/>
<text x="1187.21" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="517" width="2.182566918325326" height="15.0" fill="rgb(216,93,12)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="527.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="2037" width="0.7" height="15.0" fill="rgb(252,170,1)" rx="2" ry="2"/>
<text x="17.04" y="2047.5"/>
</g>
<g class="hide">
<title>__libc_pwrite64 (7,109 samples, 1.06%)</title><rect x="715.2505147563486" y="2005" width="13.641043239533287" height="15.0" fill="rgb(216,116,36)" rx="2" ry="2" _orig_x="716.0" _orig_width="12.5"/>
<text x="718.2505147563486" y="2015.5" _orig_x="719.03"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (90 samples, 0.01%)</title><rect x="150.51475634866156" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(209,175,9)" rx="2" ry="2" _orig_x="441.5" _orig_width="0.1"/>
<text x="153.51475634866156" y="1903.5" _orig_x="444.46"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (116 samples, 0.02%)</title><rect x="303.1777625257377" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(220,152,49)" rx="2" ry="2" _orig_x="479.2" _orig_width="0.2"/>
<text x="306.1777625257377" y="1871.5" _orig_x="482.17"/>
</g>
<g>
<title>Row::~Row (1,665 samples, 0.25%)</title><rect x="692.3266986959504" y="1893" width="11.743308167467399" height="15.0" fill="rgb(251,171,39)" rx="2" ry="2" _orig_x="575.3" _orig_width="2.9"/>
<text x="695.3266986959504" y="1903.5" _orig_x="578.27"/>
</g>
<g class="hide">
<title>rcu_sched (487 samples, 0.07%)</title><rect x="801.4" y="2069" width="0.9" height="15.0" fill="rgb(206,32,17)" rx="2" ry="2"/>
<text x="804.40" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (59 samples, 0.01%)</title><rect x="879.0048043925874" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(241,56,30)" rx="2" ry="2" _orig_x="621.4" _orig_width="0.1"/>
<text x="882.0048043925874" y="1871.5" _orig_x="624.40"/>
</g>
<g>
<title>Row::Row (705 samples, 0.10%)</title><rect x="609.3136582017843" y="1877" width="4.85929993136582" height="15.0" fill="rgb(230,30,50)" rx="2" ry="2" _orig_x="554.8" _orig_width="1.2"/>
<text x="612.3136582017843" y="1887.5" _orig_x="557.76"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1205" width="1.091283459162663" height="15.0" fill="rgb(205,140,7)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1215.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="53.823610157858525" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(225,226,42)" rx="2" ry="2" _orig_x="109.9" _orig_width="0.1"/>
<text x="56.823610157858525" y="1919.5" _orig_x="112.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.01%)</title><rect x="809.9739190116677" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(215,104,4)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1983.5" _orig_x="805.83"/>
</g>
<g>
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (120 samples, 0.02%)</title><rect x="1175.4221002059028" y="1989" width="0.8098833218943035" height="15.0" fill="rgb(223,189,9)" rx="2" ry="2" _orig_x="694.6" _orig_width="0.2"/>
<text x="1178.4221002059028" y="1999.5" _orig_x="697.61"/>
</g>
<g class="hide">
<title>XPending (101 samples, 0.01%)</title><rect x="239.34179821551118" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(240,125,47)" rx="2" ry="2" _orig_x="279.9" _orig_width="0.2"/>
<text x="242.34179821551118" y="2047.5" _orig_x="282.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="209.87714481811935" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(211,74,1)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="1983.5" _orig_x="255.93"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, DBStorageEngine*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt; &gt;::operator[] (339 samples, 0.05%)</title><rect x="1160.0343170899105" y="1957" width="2.42964996568291" height="15.0" fill="rgb(209,215,52)" rx="2" ry="2" _orig_x="690.8" _orig_width="0.6"/>
<text x="1163.0343170899105" y="1967.5" _orig_x="693.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (182 samples, 0.03%)</title><rect x="810.5195607412489" y="1909" width="0.4365133836650652" height="15.0" fill="rgb(248,176,35)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1919.5" _orig_x="806.34"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (100 samples, 0.01%)</title><rect x="293.2512010981468" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(248,177,51)" rx="2" ry="2" _orig_x="329.3" _orig_width="0.2"/>
<text x="296.2512010981468" y="2047.5" _orig_x="332.34"/>
</g>
<g>
<title>[libminisql_shared.so] (87 samples, 0.01%)</title><rect x="222.59437199725463" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(251,48,24)" rx="2" ry="2" _orig_x="459.3" _orig_width="0.1"/>
<text x="225.59437199725463" y="1871.5" _orig_x="462.30"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (61 samples, 0.01%)</title><rect x="542.4982841455043" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(214,156,48)" rx="2" ry="2" _orig_x="538.3" _orig_width="0.1"/>
<text x="545.4982841455043" y="1743.5" _orig_x="541.29"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (121 samples, 0.02%)</title><rect x="717.8380233356212" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(207,88,36)" rx="2" ry="2" _orig_x="581.6" _orig_width="0.2"/>
<text x="720.8380233356212" y="1823.5" _orig_x="584.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (281 samples, 0.04%)</title><rect x="68.01029512697315" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(234,63,53)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="2031.5" _orig_x="125.91"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (776 samples, 0.12%)</title><rect x="823.9327385037747" y="1733" width="5.669183253260123" height="15.0" fill="rgb(244,124,35)" rx="2" ry="2" _orig_x="607.8" _orig_width="1.4"/>
<text x="826.9327385037747" y="1743.5" _orig_x="610.81"/>
</g>
<g>
<title>TypeChar::CompareLessThan (205 samples, 0.03%)</title><rect x="745.3740562800273" y="1893" width="1.619766643788607" height="15.0" fill="rgb(219,106,25)" rx="2" ry="2" _orig_x="588.4" _orig_width="0.4"/>
<text x="748.3740562800273" y="1903.5" _orig_x="591.41"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (229 samples, 0.03%)</title><rect x="527.9203843514072" y="1733" width="1.619766643788607" height="15.0" fill="rgb(244,128,46)" rx="2" ry="2" _orig_x="534.7" _orig_width="0.4"/>
<text x="530.9203843514072" y="1743.5" _orig_x="537.72"/>
</g>
<g class="hide">
<title>[github-desktop] (60 samples, 0.01%)</title><rect x="175.6108442004117" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(252,179,48)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1887.5" _orig_x="224.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,105 samples, 0.16%)</title><rect x="176.15648592999304" y="2005" width="2.0734385724090596" height="15.0" fill="rgb(239,219,9)" rx="2" ry="2" _orig_x="222.0" _orig_width="1.9"/>
<text x="179.15648592999304" y="2015.5" _orig_x="224.97"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (102 samples, 0.02%)</title><rect x="916.6643788606727" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(251,191,27)" rx="2" ry="2" _orig_x="630.7" _orig_width="0.2"/>
<text x="919.6643788606727" y="1807.5" _orig_x="633.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (274 samples, 0.04%)</title><rect x="338.21207961564846" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(235,134,47)" rx="2" ry="2" _orig_x="370.5" _orig_width="0.5"/>
<text x="341.21207961564846" y="1951.5" _orig_x="373.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="12.682223747426125" y="1733" width="0.2182566918325326" height="15.0" fill="rgb(208,201,13)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="15.682223747426125" y="1743.5" _orig_x="75.25"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (2,347 samples, 0.35%)</title><rect x="480.5422100205902" y="1829" width="16.60260809883322" height="15.0" fill="rgb(244,44,31)" rx="2" ry="2" _orig_x="523.0" _orig_width="4.1"/>
<text x="483.5422100205902" y="1839.5" _orig_x="525.96"/>
</g>
<g class="hide">
<title>[code] (119 samples, 0.02%)</title><rect x="66.6" y="1973" width="0.3" height="15.0" fill="rgb(247,56,51)" rx="2" ry="2"/>
<text x="69.64" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (769 samples, 0.11%)</title><rect x="309.8387096774192" y="2037" width="1.418668496911462" height="15.0" fill="rgb(231,47,22)" rx="2" ry="2" _orig_x="344.5" _orig_width="1.3"/>
<text x="312.8387096774192" y="2047.5" _orig_x="347.50"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (1,690 samples, 0.25%)</title><rect x="484.99656829100894" y="1813" width="12.148249828414551" height="15.0" fill="rgb(230,102,19)" rx="2" ry="2" _orig_x="524.1" _orig_width="3.0"/>
<text x="487.99656829100894" y="1823.5" _orig_x="527.11"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (123 samples, 0.02%)</title><rect x="507.6733013040495" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(245,36,9)" rx="2" ry="2" _orig_x="529.7" _orig_width="0.2"/>
<text x="510.6733013040495" y="1887.5" _orig_x="532.72"/>
</g>
<g>
<title>std::__fill_n_a&lt;unsigned long, char&gt; (73 samples, 0.01%)</title><rect x="118.11942347288945" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(249,18,1)" rx="2" ry="2" _orig_x="433.5" _orig_width="0.1"/>
<text x="121.11942347288945" y="1743.5" _orig_x="436.51"/>
</g>
<g class="hide">
<title>[unknown] (623 samples, 0.09%)</title><rect x="260.1853122855181" y="1877" width="1.2004118050789294" height="15.0" fill="rgb(218,94,36)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1887.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (75 samples, 0.01%)</title><rect x="253.09196980096075" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(237,31,9)" rx="2" ry="2" _orig_x="292.5" _orig_width="0.1"/>
<text x="256.0919698009608" y="2015.5" _orig_x="295.51"/>
</g>
<g>
<title>[[kernel.kallsyms]] (117 samples, 0.02%)</title><rect x="724.7220315717225" y="1621" width="0.8098833218943035" height="15.0" fill="rgb(233,172,4)" rx="2" ry="2" _orig_x="583.3" _orig_width="0.2"/>
<text x="727.7220315717225" y="1631.5" _orig_x="586.28"/>
</g>
<g class="hide">
<title>[code] (71 samples, 0.01%)</title><rect x="14.973919011667713" y="1685" width="0.2182566918325326" height="15.0" fill="rgb(221,20,45)" rx="2" ry="2" _orig_x="74.3" _orig_width="0.2"/>
<text x="17.97391901166771" y="1695.5" _orig_x="77.35"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (612 samples, 0.09%)</title><rect x="517.391901166781" y="1813" width="4.454358270418669" height="15.0" fill="rgb(239,160,27)" rx="2" ry="2" _orig_x="532.1" _orig_width="1.1"/>
<text x="520.391901166781" y="1823.5" _orig_x="535.12"/>
</g>
<g class="hide">
<title>start_thread (641 samples, 0.10%)</title><rect x="15.2" y="2053" width="1.1" height="15.0" fill="rgb(240,115,9)" rx="2" ry="2"/>
<text x="18.17" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="159.35072065888804" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1919.5" _orig_x="209.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.02%)</title><rect x="1186.6" y="1989" width="0.3" height="15.0" fill="rgb(209,161,28)" rx="2" ry="2"/>
<text x="1189.63" y="1999.5"/>
</g>
<g>
<title>BPlusTree::InternalInsert (41,274 samples, 6.13%)</title><rect x="12.024708304735757" y="1925" width="292.7728208647907" height="15.0" fill="rgb(238,184,9)" rx="2" ry="2" _orig_x="407.3" _orig_width="72.3"/>
<text x="15.024708304735757" y="1935.5" _orig_x="410.31">BPlusTree::InternalInsert </text>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (67 samples, 0.01%)</title><rect x="644.9485243651338" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(224,67,29)" rx="2" ry="2" _orig_x="563.6" _orig_width="0.2"/>
<text x="647.9485243651338" y="1823.5" _orig_x="566.64"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (825 samples, 0.12%)</title><rect x="368.7783115991762" y="1797" width="5.669183253260123" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" _orig_x="495.4" _orig_width="1.4"/>
<text x="371.7783115991762" y="1807.5" _orig_x="498.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.02%)</title><rect x="84.48867536032935" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(241,122,19)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1919.5" _orig_x="141.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.01%)</title><rect x="168.40837336993815" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(215,147,19)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="1967.5" _orig_x="217.94"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (687 samples, 0.10%)</title><rect x="621.4619080301989" y="1797" width="5.264241592312972" height="15.0" fill="rgb(231,126,17)" rx="2" ry="2" _orig_x="557.8" _orig_width="1.3"/>
<text x="624.4619080301989" y="1807.5" _orig_x="560.85"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (1,014 samples, 0.15%)</title><rect x="212.0658888126286" y="1845" width="6.884008236101578" height="15.0" fill="rgb(235,215,36)" rx="2" ry="2" _orig_x="456.7" _orig_width="1.7"/>
<text x="215.0658888126286" y="1855.5" _orig_x="459.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (689 samples, 0.10%)</title><rect x="141.67192862045292" y="1845" width="1.418668496911462" height="15.0" fill="rgb(238,157,54)" rx="2" ry="2" _orig_x="190.4" _orig_width="1.3"/>
<text x="144.67192862045292" y="1855.5" _orig_x="193.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,281 samples, 0.19%)</title><rect x="1156.6037735849059" y="2021" width="8.163522012578618" height="15.0" fill="rgb(206,192,30)" rx="2" ry="2" _orig_x="699.7" _orig_width="2.2"/>
<text x="1159.6037735849059" y="2031.5" _orig_x="702.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,312 samples, 0.34%)</title><rect x="749.7350720658887" y="1733" width="4.365133836650652" height="15.0" fill="rgb(221,55,2)" rx="2" ry="2" _orig_x="747.6" _orig_width="4.0"/>
<text x="752.7350720658887" y="1743.5" _orig_x="750.56"/>
</g>
<g class="hide">
<title>[code] (319 samples, 0.05%)</title><rect x="69.64722031571714" y="1909" width="0.5456417295813315" height="15.0" fill="rgb(219,229,21)" rx="2" ry="2" _orig_x="124.4" _orig_width="0.5"/>
<text x="72.64722031571714" y="1919.5" _orig_x="127.39"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (279 samples, 0.04%)</title><rect x="241.2216884008235" y="1749" width="2.0247083047357584" height="15.0" fill="rgb(249,37,24)" rx="2" ry="2" _orig_x="463.9" _orig_width="0.5"/>
<text x="244.2216884008235" y="1759.5" _orig_x="466.90"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (672 samples, 0.10%)</title><rect x="267.5428963623883" y="1813" width="4.85929993136582" height="15.0" fill="rgb(233,0,7)" rx="2" ry="2" _orig_x="470.4" _orig_width="1.2"/>
<text x="270.5428963623883" y="1823.5" _orig_x="473.44"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (157 samples, 0.02%)</title><rect x="705.6897735072066" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(245,44,49)" rx="2" ry="2" _orig_x="578.6" _orig_width="0.2"/>
<text x="708.6897735072066" y="1919.5" _orig_x="581.55"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="661" width="1.091283459162663" height="15.0" fill="rgb(239,130,33)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="671.5" _orig_x="301.96"/>
</g>
<g>
<title>MinisqlParserFinish (102 samples, 0.02%)</title><rect x="1174.2072752230608" y="1989" width="0.8098833218943035" height="15.0" fill="rgb(207,60,16)" rx="2" ry="2" _orig_x="694.3" _orig_width="0.2"/>
<text x="1177.2072752230608" y="1999.5" _orig_x="697.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (415 samples, 0.06%)</title><rect x="347.1606039807823" y="1781" width="0.7638984214138641" height="15.0" fill="rgb(213,104,33)" rx="2" ry="2" _orig_x="378.7" _orig_width="0.7"/>
<text x="350.1606039807823" y="1791.5" _orig_x="381.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (418 samples, 0.06%)</title><rect x="770.0754975978036" y="1749" width="2.8345916266300617" height="15.0" fill="rgb(243,215,36)" rx="2" ry="2" _orig_x="594.5" _orig_width="0.7"/>
<text x="773.0754975978036" y="1759.5" _orig_x="597.45"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (88 samples, 0.01%)</title><rect x="546.952642415923" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(214,182,41)" rx="2" ry="2" _orig_x="539.4" _orig_width="0.2"/>
<text x="549.952642415923" y="1727.5" _orig_x="542.44"/>
</g>
<g class="hide">
<title>runtime.schedule (244 samples, 0.04%)</title><rect x="159.67810569663686" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(209,130,53)" rx="2" ry="2" _orig_x="206.9" _orig_width="0.4"/>
<text x="162.67810569663686" y="1967.5" _orig_x="209.91"/>
</g>
<g class="hide">
<title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1685" width="0.1091283459162663" height="15.0" fill="rgb(230,25,7)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1695.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1333" width="0.1091283459162663" height="15.0" fill="rgb(207,25,2)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1343.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>st_theme_node_paint (96 samples, 0.01%)</title><rect x="207.80370624571026" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(231,92,17)" rx="2" ry="2" _orig_x="251.0" _orig_width="0.2"/>
<text x="210.80370624571026" y="2015.5" _orig_x="254.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (530 samples, 0.08%)</title><rect x="61.46259437199716" y="1909" width="0.9821551132463967" height="15.0" fill="rgb(206,35,37)" rx="2" ry="2" _orig_x="116.9" _orig_width="0.9"/>
<text x="64.46259437199717" y="1919.5" _orig_x="119.88"/>
</g>
<g class="hide">
<title>[unknown] (29,888 samples, 4.44%)</title><rect x="279.9" y="2053" width="52.4" height="15.0" fill="rgb(225,3,49)" rx="2" ry="2"/>
<text x="282.92" y="2063.5">[unkn..</text>
</g>
<g class="hide">
<title>[unknown] (616 samples, 0.09%)</title><rect x="260.1853122855181" y="1365" width="1.091283459162663" height="15.0" fill="rgb(241,93,51)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1375.5" _orig_x="301.96"/>
</g>
<g>
<title>Row::DeserializeFrom (32,689 samples, 4.85%)</title><rect x="750.6382978723406" y="1893" width="232.0315717227179" height="15.0" fill="rgb(226,227,46)" rx="2" ry="2" _orig_x="589.7" _orig_width="57.3"/>
<text x="753.6382978723406" y="1903.5" _orig_x="592.73">Row::DeserializeFrom </text>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (63 samples, 0.01%)</title><rect x="815.0240219629376" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(240,16,4)" rx="2" ry="2" _orig_x="605.6" _orig_width="0.1"/>
<text x="818.0240219629376" y="1759.5" _orig_x="608.61"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (152 samples, 0.02%)</title><rect x="209.23129718599859" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(238,116,34)" rx="2" ry="2" _orig_x="456.0" _orig_width="0.2"/>
<text x="212.23129718599859" y="1823.5" _orig_x="458.95"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (499 samples, 0.07%)</title><rect x="824.7426218256691" y="1717" width="3.644474948524365" height="15.0" fill="rgb(214,92,20)" rx="2" ry="2" _orig_x="608.0" _orig_width="0.9"/>
<text x="827.7426218256691" y="1727.5" _orig_x="610.99"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (64 samples, 0.01%)</title><rect x="443.2875772134521" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(216,219,10)" rx="2" ry="2" _orig_x="513.8" _orig_width="0.1"/>
<text x="446.2875772134521" y="1791.5" _orig_x="516.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,959 samples, 0.74%)</title><rect x="1167.3" y="1749" width="8.6" height="15.0" fill="rgb(233,56,41)" rx="2" ry="2"/>
<text x="1170.25" y="1759.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (140 samples, 0.02%)</title><rect x="935.6966369251886" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(244,14,13)" rx="2" ry="2" _orig_x="635.4" _orig_width="0.2"/>
<text x="938.6966369251886" y="1839.5" _orig_x="638.40"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75 samples, 0.01%)</title><rect x="254.1798215511325" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(229,213,42)" rx="2" ry="2" _orig_x="467.1" _orig_width="0.2"/>
<text x="257.1798215511325" y="1855.5" _orig_x="470.14"/>
</g>
<g>
<title>Row::Row (2,340 samples, 0.35%)</title><rect x="310.0617707618393" y="1957" width="16.60260809883322" height="15.0" fill="rgb(211,181,31)" rx="2" ry="2" _orig_x="480.9" _orig_width="4.1"/>
<text x="313.0617707618393" y="1967.5" _orig_x="483.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="270.00686341798206" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(242,208,25)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1871.5" _orig_x="310.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="58.3" y="1925" width="0.1" height="15.0" fill="rgb(252,223,36)" rx="2" ry="2"/>
<text x="61.33" y="1935.5"/>
</g>
<g class="hide">
<title>main (1,405 samples, 0.21%)</title><rect x="805.4996568291008" y="2037" width="2.7282086479066576" height="15.0" fill="rgb(205,214,2)" rx="2" ry="2" _orig_x="798.7" _orig_width="2.5"/>
<text x="808.4996568291008" y="2047.5" _orig_x="801.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="212.605353466026" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(211,77,37)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1935.5" _orig_x="258.44"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (598 samples, 0.09%)</title><rect x="259.44406314344525" y="1781" width="4.049416609471517" height="15.0" fill="rgb(229,210,8)" rx="2" ry="2" _orig_x="468.4" _orig_width="1.0"/>
<text x="262.44406314344525" y="1791.5" _orig_x="471.40"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (77 samples, 0.01%)</title><rect x="234.33768016472195" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(210,82,6)" rx="2" ry="2" _orig_x="462.2" _orig_width="0.1"/>
<text x="237.33768016472195" y="1839.5" _orig_x="465.17"/>
</g>
<g class="parent">
<title>__libc_start_main (166,308 samples, 24.70%)</title><rect x="10" y="2053" width="1180" height="15.0" fill="rgb(250,132,2)" rx="2" ry="2" _orig_x="406.8" _orig_width="291.4"/>
<text x="13" y="2063.5" _orig_x="409.83">__libc_start_main </text>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="917" width="2.182566918325326" height="15.0" fill="rgb(208,76,40)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="927.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.03%)</title><rect x="335.2656142759093" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(230,40,36)" rx="2" ry="2" _orig_x="367.8" _orig_width="0.4"/>
<text x="338.2656142759093" y="1967.5" _orig_x="370.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (76 samples, 0.01%)</title><rect x="656.6918325326011" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(207,185,45)" rx="2" ry="2" _orig_x="566.5" _orig_width="0.1"/>
<text x="659.6918325326011" y="1743.5" _orig_x="569.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (99 samples, 0.01%)</title><rect x="329.3726835964309" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(227,222,34)" rx="2" ry="2" _orig_x="362.4" _orig_width="0.2"/>
<text x="332.3726835964309" y="1887.5" _orig_x="365.42"/>
</g>
<g class="hide">
<title>[perf-105834.map] (266 samples, 0.04%)</title><rect x="67.1" y="2053" width="0.4" height="15.0" fill="rgb(250,10,5)" rx="2" ry="2"/>
<text x="70.07" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (169 samples, 0.03%)</title><rect x="938.9361702127661" y="1829" width="1.214824982841455" height="15.0" fill="rgb(205,32,22)" rx="2" ry="2" _orig_x="636.2" _orig_width="0.3"/>
<text x="941.9361702127661" y="1839.5" _orig_x="639.16"/>
</g>
<g class="hide">
<title>[unknown] (189 samples, 0.03%)</title><rect x="1187.9" y="2037" width="0.4" height="15.0" fill="rgb(245,56,23)" rx="2" ry="2"/>
<text x="1190.94" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (65 samples, 0.01%)</title><rect x="86.45298558682215" y="1141" width="0.1091283459162663" height="15.0" fill="rgb(214,221,22)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1151.5" _orig_x="142.80"/>
</g>
<g class="hide">
<title>runtime.goexit.abi0 (390 samples, 0.06%)</title><rect x="206.8" y="2053" width="0.7" height="15.0" fill="rgb(212,28,8)" rx="2" ry="2"/>
<text x="209.79" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (121 samples, 0.02%)</title><rect x="501.1942347288951" y="1813" width="1.214824982841455" height="15.0" fill="rgb(252,142,26)" rx="2" ry="2" _orig_x="528.1" _orig_width="0.3"/>
<text x="504.1942347288951" y="1823.5" _orig_x="531.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.02%)</title><rect x="269.89773507206576" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(231,23,48)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1935.5" _orig_x="310.94"/>
</g>
<g>
<title>DiskManager::ReadPhysicalPage (817 samples, 0.12%)</title><rect x="719.862731640357" y="1893" width="5.669183253260123" height="15.0" fill="rgb(224,32,53)" rx="2" ry="2" _orig_x="582.1" _orig_width="1.4"/>
<text x="722.862731640357" y="1903.5" _orig_x="585.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (339 samples, 0.05%)</title><rect x="69.6" y="2021" width="0.6" height="15.0" fill="rgb(240,225,35)" rx="2" ry="2"/>
<text x="72.63" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (241 samples, 0.04%)</title><rect x="220.7899794097459" y="1861" width="0.4365133836650652" height="15.0" fill="rgb(232,96,47)" rx="2" ry="2" _orig_x="262.9" _orig_width="0.4"/>
<text x="223.7899794097459" y="1871.5" _orig_x="265.87"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (61 samples, 0.01%)</title><rect x="1112.656142759094" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(246,217,33)" rx="2" ry="2" _orig_x="679.1" _orig_width="0.1"/>
<text x="1115.656142759094" y="1951.5" _orig_x="682.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,050 samples, 1.20%)</title><rect x="738.7131091283458" y="1989" width="15.387096774193548" height="15.0" fill="rgb(228,115,52)" rx="2" ry="2" _orig_x="737.5" _orig_width="14.1"/>
<text x="741.7131091283458" y="1999.5" _orig_x="740.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="56.8" y="1973" width="0.2" height="15.0" fill="rgb(205,121,33)" rx="2" ry="2"/>
<text x="59.85" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="1957" width="0.7" height="15.0" fill="rgb(246,9,7)" rx="2" ry="2"/>
<text x="17.04" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.01%)</title><rect x="340.7220315717226" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(210,79,40)" rx="2" ry="2" _orig_x="372.8" _orig_width="0.1"/>
<text x="343.7220315717226" y="1903.5" _orig_x="375.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (222 samples, 0.03%)</title><rect x="21.5" y="2021" width="0.4" height="15.0" fill="rgb(212,64,15)" rx="2" ry="2"/>
<text x="24.54" y="2031.5"/>
</g>
<g>
<title>std::vector&lt;RowId, std::allocator&lt;RowId&gt; &gt;::~vector (98 samples, 0.01%)</title><rect x="1169.7529169526426" y="1957" width="0.8098833218943035" height="15.0" fill="rgb(222,10,19)" rx="2" ry="2" _orig_x="693.2" _orig_width="0.2"/>
<text x="1172.7529169526426" y="1967.5" _orig_x="696.22"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (278 samples, 0.04%)</title><rect x="179.26561427590943" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(223,95,33)" rx="2" ry="2" _orig_x="448.6" _orig_width="0.5"/>
<text x="182.26561427590943" y="1743.5" _orig_x="451.62"/>
</g>
<g>
<title>[[kernel.kallsyms]] (208 samples, 0.03%)</title><rect x="56.97323266986946" y="1637" width="1.619766643788607" height="15.0" fill="rgb(226,116,0)" rx="2" ry="2" _orig_x="418.4" _orig_width="0.4"/>
<text x="59.97323266986946" y="1647.5" _orig_x="421.41"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (79 samples, 0.01%)</title><rect x="167.97185998627305" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(250,170,2)" rx="2" ry="2" _orig_x="214.5" _orig_width="0.1"/>
<text x="170.97185998627305" y="2031.5" _orig_x="217.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (73 samples, 0.01%)</title><rect x="166.30748112560042" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(221,35,3)" rx="2" ry="2" _orig_x="445.4" _orig_width="0.1"/>
<text x="169.30748112560042" y="1743.5" _orig_x="448.39"/>
</g>
<g class="hide">
<title>os::PlatformEvent::park (63 samples, 0.01%)</title><rect x="62.8" y="1989" width="0.1" height="15.0" fill="rgb(216,51,53)" rx="2" ry="2"/>
<text x="65.76" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,068 samples, 0.16%)</title><rect x="806.0452985586821" y="1845" width="2.0734385724090596" height="15.0" fill="rgb(224,105,17)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1855.5" _orig_x="802.20"/>
</g>
<g>
<title>[[kernel.kallsyms]] (182 samples, 0.03%)</title><rect x="57.3781743308167" y="1621" width="1.214824982841455" height="15.0" fill="rgb(228,226,20)" rx="2" ry="2" _orig_x="418.5" _orig_width="0.3"/>
<text x="60.3781743308167" y="1631.5" _orig_x="421.46"/>
</g>
<g class="hide">
<title>ntfs_pread (66 samples, 0.01%)</title><rect x="798.2" y="2053" width="0.1" height="15.0" fill="rgb(225,126,50)" rx="2" ry="2"/>
<text x="801.19" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.01%)</title><rect x="174.51956074124902" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(236,115,7)" rx="2" ry="2" _orig_x="220.5" _orig_width="0.1"/>
<text x="177.51956074124902" y="1839.5" _orig_x="223.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,532 samples, 1.27%)</title><rect x="33.1" y="2021" width="15.0" height="15.0" fill="rgb(232,108,30)" rx="2" ry="2"/>
<text x="36.12" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="437" width="2.182566918325326" height="15.0" fill="rgb(237,132,25)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="447.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__emplace_unique_key_args&lt;Watcher*, Watcher* const&amp;&gt; (299 samples, 0.04%)</title><rect x="131.5229924502401" y="1973" width="0.6547700754975978" height="15.0" fill="rgb(226,86,19)" rx="2" ry="2" _orig_x="181.1" _orig_width="0.6"/>
<text x="134.5229924502401" y="1983.5" _orig_x="184.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="13.0" y="1957" width="0.3" height="15.0" fill="rgb(246,4,43)" rx="2" ry="2"/>
<text x="15.98" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (133 samples, 0.02%)</title><rect x="11.113207547169853" y="2037" width="1.1132075471698113" height="15.0" fill="rgb(220,187,33)" rx="2" ry="2" _orig_x="391.0" _orig_width="0.3"/>
<text x="14.113207547169853" y="2047.5" _orig_x="394.04"/>
</g>
<g>
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="356.22512010981467" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(219,219,51)" rx="2" ry="2" _orig_x="492.3" _orig_width="0.1"/>
<text x="359.22512010981467" y="1775.5" _orig_x="495.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.02%)</title><rect x="212.605353466026" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(210,55,18)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="2031.5" _orig_x="258.38"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (131 samples, 0.02%)</title><rect x="789.5126973232668" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(209,98,26)" rx="2" ry="2" _orig_x="599.3" _orig_width="0.2"/>
<text x="792.5126973232668" y="1759.5" _orig_x="602.27"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (87 samples, 0.01%)</title><rect x="887.5085792724776" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(219,82,38)" rx="2" ry="2" _orig_x="623.5" _orig_width="0.2"/>
<text x="890.5085792724776" y="1871.5" _orig_x="626.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,210 samples, 0.18%)</title><rect x="345.6328071379546" y="1909" width="2.2916952642415924" height="15.0" fill="rgb(244,225,36)" rx="2" ry="2" _orig_x="377.3" _orig_width="2.1"/>
<text x="348.6328071379546" y="1919.5" _orig_x="380.32"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (464 samples, 0.07%)</title><rect x="538.85380919698" y="1717" width="3.239533287577214" height="15.0" fill="rgb(237,132,20)" rx="2" ry="2" _orig_x="537.4" _orig_width="0.8"/>
<text x="541.85380919698" y="1727.5" _orig_x="540.41"/>
</g>
<g class="hide">
<title>[github-desktop] (226 samples, 0.03%)</title><rect x="178.33905284831835" y="1845" width="0.4365133836650652" height="15.0" fill="rgb(211,143,36)" rx="2" ry="2" _orig_x="224.0" _orig_width="0.4"/>
<text x="181.33905284831835" y="1855.5" _orig_x="226.98"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1237" width="2.182566918325326" height="15.0" fill="rgb(210,95,38)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1247.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25,430 samples, 3.78%)</title><rect x="1168.5696636925188" y="1941" width="48.67124227865477" height="15.0" fill="rgb(249,64,49)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="1951.5" _orig_x="1134.42">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (1,092 samples, 0.16%)</title><rect x="228.8" y="2053" width="2.0" height="15.0" fill="rgb(217,5,6)" rx="2" ry="2"/>
<text x="231.84" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (73 samples, 0.01%)</title><rect x="135.53191489361703" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(220,142,24)" rx="2" ry="2" _orig_x="437.8" _orig_width="0.1"/>
<text x="138.53191489361703" y="1743.5" _orig_x="440.79"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(242,106,39)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="2031.5" _orig_x="77.08"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (451 samples, 0.07%)</title><rect x="590.6863417982157" y="1829" width="3.239533287577214" height="15.0" fill="rgb(218,200,37)" rx="2" ry="2" _orig_x="550.2" _orig_width="0.8"/>
<text x="593.6863417982157" y="1839.5" _orig_x="553.19"/>
</g>
<g class="hide">
<title>__libc_pread64 (2,056 samples, 0.31%)</title><rect x="788.1" y="2053" width="3.6" height="15.0" fill="rgb(224,217,14)" rx="2" ry="2"/>
<text x="791.09" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (135 samples, 0.02%)</title><rect x="478.51750171585445" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(213,5,8)" rx="2" ry="2" _orig_x="522.5" _orig_width="0.2"/>
<text x="481.51750171585445" y="1839.5" _orig_x="525.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,085 samples, 0.16%)</title><rect x="806.0452985586821" y="1877" width="2.0734385724090596" height="15.0" fill="rgb(217,211,0)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1887.5" _orig_x="802.17"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (664 samples, 0.10%)</title><rect x="259.03912148249833" y="1829" width="4.85929993136582" height="15.0" fill="rgb(220,112,2)" rx="2" ry="2" _orig_x="468.3" _orig_width="1.2"/>
<text x="262.03912148249833" y="1839.5" _orig_x="471.34"/>
</g>
<g class="hide">
<title>[Xorg] (59 samples, 0.01%)</title><rect x="58.0796156485929" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(205,166,54)" rx="2" ry="2" _orig_x="113.8" _orig_width="0.1"/>
<text x="61.0796156485929" y="2015.5" _orig_x="116.81"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (354 samples, 0.05%)</title><rect x="344.07687028140015" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(217,16,39)" rx="2" ry="2" _orig_x="489.3" _orig_width="0.7"/>
<text x="347.07687028140015" y="1823.5" _orig_x="492.34"/>
</g>
<g>
<title>LRUReplacer::Victim (141 samples, 0.02%)</title><rect x="726.7467398764583" y="1909" width="1.214824982841455" height="15.0" fill="rgb(253,80,2)" rx="2" ry="2" _orig_x="583.8" _orig_width="0.3"/>
<text x="729.7467398764583" y="1919.5" _orig_x="586.84"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (68 samples, 0.01%)</title><rect x="523.4660260809884" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(224,66,5)" rx="2" ry="2" _orig_x="533.6" _orig_width="0.1"/>
<text x="526.4660260809884" y="1743.5" _orig_x="536.63"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,370 samples, 0.20%)</title><rect x="522.6561427590938" y="1797" width="9.71859986273164" height="15.0" fill="rgb(219,52,38)" rx="2" ry="2" _orig_x="533.4" _orig_width="2.4"/>
<text x="525.6561427590938" y="1807.5" _orig_x="536.36"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1765" width="1.091283459162663" height="15.0" fill="rgb(224,11,32)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1775.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (646 samples, 0.10%)</title><rect x="335.70212765957433" y="2037" width="1.2004118050789294" height="15.0" fill="rgb(214,172,16)" rx="2" ry="2" _orig_x="368.2" _orig_width="1.1"/>
<text x="338.70212765957433" y="2047.5" _orig_x="371.20"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (338 samples, 0.05%)</title><rect x="71.55113246396701" y="1733" width="2.42964996568291" height="15.0" fill="rgb(216,56,25)" rx="2" ry="2" _orig_x="422.0" _orig_width="0.6"/>
<text x="74.55113246396701" y="1743.5" _orig_x="424.99"/>
</g>
<g>
<title>IndexKeyComparator::operator (6,834 samples, 1.01%)</title><rect x="255.79958819492103" y="1909" width="48.592999313658204" height="15.0" fill="rgb(241,169,38)" rx="2" ry="2" _orig_x="467.5" _orig_width="12.0"/>
<text x="258.79958819492106" y="1919.5" _orig_x="470.53">Inde..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="328.28140013726824" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(223,33,40)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="2047.5" _orig_x="364.40"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (101 samples, 0.01%)</title><rect x="181.83115991763887" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(207,181,6)" rx="2" ry="2" _orig_x="227.2" _orig_width="0.1"/>
<text x="184.83115991763887" y="1887.5" _orig_x="230.16"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (837 samples, 0.12%)</title><rect x="694.7563486616334" y="1845" width="6.0741249142072755" height="15.0" fill="rgb(249,151,28)" rx="2" ry="2" _orig_x="575.9" _orig_width="1.5"/>
<text x="697.7563486616334" y="1855.5" _orig_x="578.93"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (73 samples, 0.01%)</title><rect x="352.98558682223745" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(237,104,29)" rx="2" ry="2" _orig_x="491.5" _orig_width="0.1"/>
<text x="355.98558682223745" y="1903.5" _orig_x="494.52"/>
</g>
<g class="hide">
<title>iwl_pcie_irq_rx_msix_handler (79 samples, 0.01%)</title><rect x="328.28140013726824" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(234,173,41)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="1999.5" _orig_x="364.43"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (134 samples, 0.02%)</title><rect x="149.29993136582007" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(206,194,10)" rx="2" ry="2" _orig_x="441.2" _orig_width="0.2"/>
<text x="152.29993136582007" y="1871.5" _orig_x="444.20"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (118 samples, 0.02%)</title><rect x="657.5017158544956" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(246,171,4)" rx="2" ry="2" _orig_x="566.7" _orig_width="0.2"/>
<text x="660.5017158544956" y="1775.5" _orig_x="569.65"/>
</g>
<g class="hide">
<title>__sched_yield (444 samples, 0.07%)</title><rect x="194.38091969800948" y="2021" width="0.8730267673301304" height="15.0" fill="rgb(205,22,47)" rx="2" ry="2" _orig_x="238.7" _orig_width="0.8"/>
<text x="197.38091969800948" y="2031.5" _orig_x="241.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.02%)</title><rect x="167.42621825669173" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(238,62,13)" rx="2" ry="2" _orig_x="214.0" _orig_width="0.3"/>
<text x="170.42621825669173" y="1951.5" _orig_x="217.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (214 samples, 0.03%)</title><rect x="221.55387783115984" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(244,156,9)" rx="2" ry="2" _orig_x="263.6" _orig_width="0.4"/>
<text x="224.55387783115984" y="1967.5" _orig_x="266.58"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (70 samples, 0.01%)</title><rect x="584.2072752230611" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(222,47,26)" rx="2" ry="2" _orig_x="548.6" _orig_width="0.1"/>
<text x="587.2072752230611" y="1807.5" _orig_x="551.62"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (566 samples, 0.08%)</title><rect x="180.84900480439248" y="1909" width="1.091283459162663" height="15.0" fill="rgb(221,216,17)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1919.5" _orig_x="229.35"/>
</g>
<g>
<title>Page::WLatch (68 samples, 0.01%)</title><rect x="1124.8043925875086" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(219,85,38)" rx="2" ry="2" _orig_x="682.1" _orig_width="0.1"/>
<text x="1127.8043925875086" y="1951.5" _orig_x="685.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="168.40837336993815" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(238,62,18)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="1983.5" _orig_x="217.94"/>
</g>
<g class="hide">
<title>__libc_recvmsg (109 samples, 0.02%)</title><rect x="212.605353466026" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(240,149,39)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="2047.5" _orig_x="258.37"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (154 samples, 0.02%)</title><rect x="22.3" y="2021" width="0.3" height="15.0" fill="rgb(217,144,36)" rx="2" ry="2"/>
<text x="25.33" y="2031.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (1,810 samples, 0.27%)</title><rect x="195.86822237474254" y="1813" width="12.958133150308855" height="15.0" fill="rgb(239,4,39)" rx="2" ry="2" _orig_x="452.7" _orig_width="3.2"/>
<text x="198.86822237474254" y="1823.5" _orig_x="455.74"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (579 samples, 0.09%)</title><rect x="180.84900480439248" y="1925" width="1.091283459162663" height="15.0" fill="rgb(208,194,40)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1935.5" _orig_x="229.32"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="15.9" y="1701" width="0.2" height="15.0" fill="rgb(205,201,36)" rx="2" ry="2"/>
<text x="18.92" y="1711.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="629" width="2.182566918325326" height="15.0" fill="rgb(238,146,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="639.5" _orig_x="117.41"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (103 samples, 0.02%)</title><rect x="1063.6582017844887" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(224,157,11)" rx="2" ry="2" _orig_x="667.0" _orig_width="0.2"/>
<text x="1066.6582017844887" y="1887.5" _orig_x="669.99"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (101 samples, 0.01%)</title><rect x="820.2882635552503" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(241,19,14)" rx="2" ry="2" _orig_x="606.9" _orig_width="0.2"/>
<text x="823.2882635552503" y="1743.5" _orig_x="609.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (262 samples, 0.04%)</title><rect x="332.53740562800266" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(230,73,33)" rx="2" ry="2" _orig_x="365.3" _orig_width="0.5"/>
<text x="335.53740562800266" y="1951.5" _orig_x="368.34"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (133 samples, 0.02%)</title><rect x="282.1207961564859" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(225,174,2)" rx="2" ry="2" _orig_x="474.0" _orig_width="0.2"/>
<text x="285.1207961564859" y="1807.5" _orig_x="477.00"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (113 samples, 0.02%)</title><rect x="705.6897735072066" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(253,220,7)" rx="2" ry="2" _orig_x="578.6" _orig_width="0.2"/>
<text x="708.6897735072066" y="1887.5" _orig_x="581.60"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (170 samples, 0.03%)</title><rect x="874.9553877831158" y="1877" width="1.214824982841455" height="15.0" fill="rgb(246,74,6)" rx="2" ry="2" _orig_x="620.4" _orig_width="0.3"/>
<text x="877.9553877831158" y="1887.5" _orig_x="623.39"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="933" width="1.091283459162663" height="15.0" fill="rgb(222,10,54)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="943.5" _orig_x="301.96"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::erase (73 samples, 0.01%)</title><rect x="729.1763898421412" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(236,165,28)" rx="2" ry="2" _orig_x="584.4" _orig_width="0.1"/>
<text x="732.1763898421412" y="1919.5" _orig_x="587.38"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (63 samples, 0.01%)</title><rect x="449.7666437886066" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(224,54,26)" rx="2" ry="2" _orig_x="515.4" _orig_width="0.1"/>
<text x="452.7666437886066" y="1743.5" _orig_x="518.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,385 samples, 3.18%)</title><rect x="1127.2100205902539" y="1813" width="40.92312971859986" height="15.0" fill="rgb(247,81,14)" rx="2" ry="2" _orig_x="1093.5" _orig_width="37.5"/>
<text x="1130.2100205902539" y="1823.5" _orig_x="1096.49">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (229 samples, 0.03%)</title><rect x="62.0082361015785" y="1797" width="0.4365133836650652" height="15.0" fill="rgb(247,110,24)" rx="2" ry="2" _orig_x="117.4" _orig_width="0.4"/>
<text x="65.00823610157849" y="1807.5" _orig_x="120.40"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (121 samples, 0.02%)</title><rect x="731.6060398078242" y="1829" width="1.214824982841455" height="15.0" fill="rgb(205,49,22)" rx="2" ry="2" _orig_x="585.0" _orig_width="0.3"/>
<text x="734.6060398078242" y="1839.5" _orig_x="588.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,630 samples, 1.13%)</title><rect x="763.1578586135894" y="1877" width="14.623198352779685" height="15.0" fill="rgb(240,90,0)" rx="2" ry="2" _orig_x="759.9" _orig_width="13.4"/>
<text x="766.1578586135894" y="1887.5" _orig_x="762.91"/>
</g>
<g class="hide">
<title>thread_native_entry (59 samples, 0.01%)</title><rect x="13.5" y="2037" width="0.1" height="15.0" fill="rgb(217,221,13)" rx="2" ry="2"/>
<text x="16.49" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.01%)</title><rect x="62.5" y="1941" width="0.1" height="15.0" fill="rgb(213,77,33)" rx="2" ry="2"/>
<text x="65.52" y="1951.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (978 samples, 0.15%)</title><rect x="1105.7721345229922" y="1925" width="6.884008236101578" height="15.0" fill="rgb(231,140,14)" rx="2" ry="2" _orig_x="677.4" _orig_width="1.7"/>
<text x="1108.7721345229922" y="1935.5" _orig_x="680.42"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (385 samples, 0.06%)</title><rect x="69.5" y="2037" width="0.7" height="15.0" fill="rgb(233,140,34)" rx="2" ry="2"/>
<text x="72.55" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (106 samples, 0.02%)</title><rect x="768.4557309540152" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(239,130,21)" rx="2" ry="2" _orig_x="594.1" _orig_width="0.1"/>
<text x="771.4557309540152" y="1759.5" _orig_x="597.05"/>
</g>
<g class="hide">
<title>[github-desktop] (209 samples, 0.03%)</title><rect x="178.33905284831835" y="1829" width="0.4365133836650652" height="15.0" fill="rgb(223,30,23)" rx="2" ry="2" _orig_x="224.0" _orig_width="0.4"/>
<text x="181.33905284831835" y="1839.5" _orig_x="227.00"/>
</g>
<g class="hide">
<title>gdk_threads_enter (75 samples, 0.01%)</title><rect x="296.19766643788597" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(207,79,35)" rx="2" ry="2" _orig_x="332.0" _orig_width="0.1"/>
<text x="299.19766643788597" y="2047.5" _orig_x="334.97"/>
</g>
<g class="hide">
<title>[code] (169 samples, 0.03%)</title><rect x="14.864790665751453" y="1781" width="0.3273850377487989" height="15.0" fill="rgb(251,23,17)" rx="2" ry="2" _orig_x="74.2" _orig_width="0.3"/>
<text x="17.864790665751453" y="1791.5" _orig_x="77.20"/>
</g>
<g>
<title>BPlusTree::Insert (41,653 samples, 6.19%)</title><rect x="12.024708304735757" y="1941" width="295.60741249142075" height="15.0" fill="rgb(210,216,29)" rx="2" ry="2" _orig_x="407.3" _orig_width="73.0"/>
<text x="15.024708304735757" y="1951.5" _orig_x="410.30">BPlusTree::Insert </text>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1861" width="2.182566918325326" height="15.0" fill="rgb(216,106,47)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1871.5" _orig_x="117.41"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (179 samples, 0.03%)</title><rect x="908.5655456417297" y="1813" width="1.214824982841455" height="15.0" fill="rgb(238,168,1)" rx="2" ry="2" _orig_x="628.7" _orig_width="0.3"/>
<text x="911.5655456417297" y="1823.5" _orig_x="631.67"/>
</g>
<g class="hide">
<title>dbus_message_get_interface (66 samples, 0.01%)</title><rect x="163.49759780370619" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(231,213,18)" rx="2" ry="2" _orig_x="210.4" _orig_width="0.1"/>
<text x="166.49759780370619" y="2047.5" _orig_x="213.36"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (648 samples, 0.10%)</title><rect x="977.0006863417982" y="1845" width="4.454358270418669" height="15.0" fill="rgb(239,208,35)" rx="2" ry="2" _orig_x="645.6" _orig_width="1.1"/>
<text x="980.0006863417982" y="1855.5" _orig_x="648.58"/>
</g>
<g class="hide">
<title>[unknown] (614 samples, 0.09%)</title><rect x="260.1853122855181" y="1301" width="1.091283459162663" height="15.0" fill="rgb(222,134,10)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1311.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (249 samples, 0.04%)</title><rect x="253.31022649279328" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(215,117,21)" rx="2" ry="2" _orig_x="292.7" _orig_width="0.4"/>
<text x="256.3102264927933" y="2015.5" _orig_x="295.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="168.5175017158544" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(215,28,27)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1903.5" _orig_x="218.01"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1381" width="0.1091283459162663" height="15.0" fill="rgb(250,206,43)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1391.5" _orig_x="142.78"/>
</g>
<g>
<title>Row::GetSerializedSize (93 samples, 0.01%)</title><rect x="1087.5497597803706" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(220,159,37)" rx="2" ry="2" _orig_x="672.9" _orig_width="0.2"/>
<text x="1090.5497597803706" y="1935.5" _orig_x="675.92"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (78 samples, 0.01%)</title><rect x="647.3781743308168" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(210,39,50)" rx="2" ry="2" _orig_x="564.2" _orig_width="0.2"/>
<text x="650.3781743308168" y="1855.5" _orig_x="567.23"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="325" width="1.091283459162663" height="15.0" fill="rgb(219,119,12)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="335.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (1,717 samples, 0.25%)</title><rect x="1045.840768702814" y="1797" width="12.148249828414551" height="15.0" fill="rgb(221,45,29)" rx="2" ry="2" _orig_x="662.6" _orig_width="3.0"/>
<text x="1048.840768702814" y="1807.5" _orig_x="665.57"/>
</g>
<g class="hide">
<title>__strdup (74 samples, 0.01%)</title><rect x="777.7810569663691" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(231,180,26)" rx="2" ry="2" _orig_x="773.3" _orig_width="0.1"/>
<text x="780.7810569663691" y="2031.5" _orig_x="776.30"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(231,76,26)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="2047.5" _orig_x="77.08"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (146 samples, 0.02%)</title><rect x="919.0940288263554" y="1781" width="1.214824982841455" height="15.0" fill="rgb(216,208,2)" rx="2" ry="2" _orig_x="631.3" _orig_width="0.3"/>
<text x="922.0940288263554" y="1791.5" _orig_x="634.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,770 samples, 0.41%)</title><rect x="137.74330816746732" y="1909" width="5.347288949897049" height="15.0" fill="rgb(229,2,11)" rx="2" ry="2" _orig_x="186.8" _orig_width="4.9"/>
<text x="140.74330816746732" y="1919.5" _orig_x="189.80"/>
</g>
<g>
<title>[[kernel.kallsyms]] (430 samples, 0.06%)</title><rect x="55.353466026080945" y="1701" width="3.239533287577214" height="15.0" fill="rgb(248,204,12)" rx="2" ry="2" _orig_x="418.0" _orig_width="0.8"/>
<text x="58.353466026080945" y="1711.5" _orig_x="421.02"/>
</g>
<g class="hide">
<title>stat64 (95 samples, 0.01%)</title><rect x="131.41386410432386" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(220,191,52)" rx="2" ry="2" _orig_x="181.0" _orig_width="0.1"/>
<text x="134.41386410432386" y="1983.5" _orig_x="183.97"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (273 samples, 0.04%)</title><rect x="181.5037748798901" y="1893" width="0.4365133836650652" height="15.0" fill="rgb(208,201,0)" rx="2" ry="2" _orig_x="226.9" _orig_width="0.4"/>
<text x="184.5037748798901" y="1903.5" _orig_x="229.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="810.5195607412489" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(220,136,18)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1983.5" _orig_x="806.32"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (213 samples, 0.03%)</title><rect x="921.118737131091" y="1781" width="1.619766643788607" height="15.0" fill="rgb(234,221,43)" rx="2" ry="2" _orig_x="631.8" _orig_width="0.4"/>
<text x="924.118737131091" y="1791.5" _orig_x="634.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (520 samples, 0.08%)</title><rect x="340.83115991763884" y="2021" width="1.091283459162663" height="15.0" fill="rgb(252,127,40)" rx="2" ry="2" _orig_x="372.9" _orig_width="1.0"/>
<text x="343.83115991763884" y="2031.5" _orig_x="375.95"/>
</g>
<g class="hide">
<title>__GI___writev (3,964 samples, 0.59%)</title><rect x="44.13836477987417" y="2053" width="25.603773584905664" height="15.0" fill="rgb(231,41,12)" rx="2" ry="2" _orig_x="399.9" _orig_width="6.9"/>
<text x="47.13836477987417" y="2063.5" _orig_x="402.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.03%)</title><rect x="21.6" y="2005" width="0.3" height="15.0" fill="rgb(254,125,54)" rx="2" ry="2"/>
<text x="24.58" y="2015.5"/>
</g>
<g>
<title>operator new (59 samples, 0.01%)</title><rect x="908.9704873026765" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(241,91,47)" rx="2" ry="2" _orig_x="628.8" _orig_width="0.1"/>
<text x="911.9704873026765" y="1807.5" _orig_x="631.82"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (242 samples, 0.04%)</title><rect x="304.79752916952646" y="1925" width="2.0247083047357584" height="15.0" fill="rgb(251,17,1)" rx="2" ry="2" _orig_x="479.6" _orig_width="0.5"/>
<text x="307.79752916952646" y="1935.5" _orig_x="482.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (412 samples, 0.06%)</title><rect x="11.263555250514667" y="2005" width="0.7638984214138641" height="15.0" fill="rgb(211,20,29)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="2015.5" _orig_x="73.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.03%)</title><rect x="810.5195607412489" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(207,53,39)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1935.5" _orig_x="806.34"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (154 samples, 0.02%)</title><rect x="883.459162663006" y="1861" width="1.214824982841455" height="15.0" fill="rgb(222,122,8)" rx="2" ry="2" _orig_x="622.5" _orig_width="0.3"/>
<text x="886.459162663006" y="1871.5" _orig_x="625.50"/>
</g>
<g class="hide">
<title>[code] (96 samples, 0.01%)</title><rect x="14.3" y="1765" width="0.1" height="15.0" fill="rgb(242,214,3)" rx="2" ry="2"/>
<text x="17.26" y="1775.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (81 samples, 0.01%)</title><rect x="113.26012354152368" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(237,75,18)" rx="2" ry="2" _orig_x="432.3" _orig_width="0.2"/>
<text x="116.26012354152368" y="1839.5" _orig_x="435.33"/>
</g>
<g>
<title>Row::Row (568 samples, 0.08%)</title><rect x="475.6829100892242" y="1861" width="4.049416609471517" height="15.0" fill="rgb(224,202,20)" rx="2" ry="2" _orig_x="521.8" _orig_width="1.0"/>
<text x="478.6829100892242" y="1871.5" _orig_x="524.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (468 samples, 0.07%)</title><rect x="330.0274536719285" y="1973" width="0.8730267673301304" height="15.0" fill="rgb(219,31,7)" rx="2" ry="2" _orig_x="363.0" _orig_width="0.8"/>
<text x="333.0274536719285" y="1983.5" _orig_x="365.95"/>
</g>
<g>
<title>TypeChar::CompareLessThan (58 samples, 0.01%)</title><rect x="152.53946465339735" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(224,157,41)" rx="2" ry="2" _orig_x="442.0" _orig_width="0.1"/>
<text x="155.53946465339735" y="1871.5" _orig_x="445.04"/>
</g>
<g class="hide">
<title>nvidia_isr (123 samples, 0.02%)</title><rect x="1168.1331503088536" y="1829" width="0.2182566918325326" height="15.0" fill="rgb(239,46,26)" rx="2" ry="2" _orig_x="1131.0" _orig_width="0.2"/>
<text x="1171.1331503088536" y="1839.5" _orig_x="1134.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (848 samples, 0.13%)</title><rect x="210.8592999313657" y="1973" width="1.6369251887439944" height="15.0" fill="rgb(237,68,45)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="1983.5" _orig_x="256.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="223.29993136582004" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(219,163,47)" rx="2" ry="2" _orig_x="265.2" _orig_width="0.2"/>
<text x="226.29993136582004" y="2031.5" _orig_x="268.25"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (68 samples, 0.01%)</title><rect x="57.315717227179036" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(244,68,19)" rx="2" ry="2" _orig_x="113.1" _orig_width="0.1"/>
<text x="60.315717227179036" y="1983.5" _orig_x="116.10"/>
</g>
<g class="hide">
<title>Debounce::loop (1,024 samples, 0.15%)</title><rect x="154.76733013040487" y="2021" width="1.855181880576527" height="15.0" fill="rgb(232,91,43)" rx="2" ry="2" _orig_x="202.4" _orig_width="1.7"/>
<text x="157.76733013040487" y="2031.5" _orig_x="205.35"/>
</g>
<g>
<title>DiskManager::ReadPhysicalPage (102 samples, 0.02%)</title><rect x="355.82017844886747" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(216,22,45)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1919.5" _orig_x="495.22"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (115 samples, 0.02%)</title><rect x="685.442690459849" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(235,41,46)" rx="2" ry="2" _orig_x="573.6" _orig_width="0.2"/>
<text x="688.442690459849" y="1855.5" _orig_x="576.55"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (192 samples, 0.03%)</title><rect x="793.5" y="2053" width="0.4" height="15.0" fill="rgb(231,177,0)" rx="2" ry="2"/>
<text x="796.51" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (85 samples, 0.01%)</title><rect x="541.6884008236102" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(207,42,41)" rx="2" ry="2" _orig_x="538.1" _orig_width="0.1"/>
<text x="544.6884008236102" y="1711.5" _orig_x="541.06"/>
</g>
<g class="hide">
<title>JS_CallFunction (204 samples, 0.03%)</title><rect x="186.74193548387083" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(235,31,52)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="2031.5" _orig_x="234.70"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (218 samples, 0.03%)</title><rect x="134.68771448181184" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(216,226,24)" rx="2" ry="2" _orig_x="184.0" _orig_width="0.3"/>
<text x="137.68771448181184" y="1983.5" _orig_x="186.95"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1685" width="2.182566918325326" height="15.0" fill="rgb(224,163,6)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1695.5" _orig_x="117.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (1,961 samples, 0.29%)</title><rect x="441.2628689087163" y="1797" width="13.768016472203156" height="15.0" fill="rgb(231,93,26)" rx="2" ry="2" _orig_x="513.3" _orig_width="3.4"/>
<text x="444.2628689087163" y="1807.5" _orig_x="516.26"/>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (66 samples, 0.01%)</title><rect x="269.5" y="2053" width="0.1" height="15.0" fill="rgb(241,171,1)" rx="2" ry="2"/>
<text x="272.51" y="2063.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (2,730 samples, 0.41%)</title><rect x="614.9828414550448" y="1845" width="19.43719972546328" height="15.0" fill="rgb(251,219,3)" rx="2" ry="2" _orig_x="556.2" _orig_width="4.8"/>
<text x="617.9828414550448" y="1855.5" _orig_x="559.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (446 samples, 0.07%)</title><rect x="807.245710363761" y="1701" width="0.8730267673301304" height="15.0" fill="rgb(234,144,4)" rx="2" ry="2" _orig_x="800.3" _orig_width="0.8"/>
<text x="810.245710363761" y="1711.5" _orig_x="803.29"/>
</g>
<g class="hide">
<title>clutter_actor_continue_paint (62 samples, 0.01%)</title><rect x="202.45641729581322" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(210,185,3)" rx="2" ry="2" _orig_x="246.1" _orig_width="0.1"/>
<text x="205.45641729581322" y="2015.5" _orig_x="249.11"/>
</g>
<g class="hide">
<title>st_widget_get_theme_node (97 samples, 0.01%)</title><rect x="208.02196293754278" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(212,18,14)" rx="2" ry="2" _orig_x="251.2" _orig_width="0.2"/>
<text x="211.02196293754278" y="2015.5" _orig_x="254.21"/>
</g>
<g class="hide">
<title>[unknown] (330 samples, 0.05%)</title><rect x="201.4742621825668" y="2005" width="0.6547700754975978" height="15.0" fill="rgb(231,173,29)" rx="2" ry="2" _orig_x="245.2" _orig_width="0.6"/>
<text x="204.4742621825668" y="2015.5" _orig_x="248.21"/>
</g>
<g class="hide">
<title>Process_Message (150 samples, 0.02%)</title><rect x="55.8" y="2069" width="0.3" height="15.0" fill="rgb(217,214,35)" rx="2" ry="2"/>
<text x="58.79" y="2079.5"/>
</g>
<g class="hide">
<title>[code] (563 samples, 0.08%)</title><rect x="15.2" y="1989" width="1.0" height="15.0" fill="rgb(250,23,52)" rx="2" ry="2"/>
<text x="18.17" y="1999.5"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (159 samples, 0.02%)</title><rect x="793.2" y="2053" width="0.3" height="15.0" fill="rgb(224,81,14)" rx="2" ry="2"/>
<text x="796.24" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (348 samples, 0.05%)</title><rect x="85.68908716540827" y="1589" width="0.6547700754975978" height="15.0" fill="rgb(245,189,39)" rx="2" ry="2" _orig_x="139.1" _orig_width="0.6"/>
<text x="88.68908716540827" y="1599.5" _orig_x="142.12"/>
</g>
<g class="hide">
<title>_nv009834rm (154 samples, 0.02%)</title><rect x="346.0" y="2053" width="0.3" height="15.0" fill="rgb(207,131,52)" rx="2" ry="2"/>
<text x="348.99" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (872 samples, 0.13%)</title><rect x="58.73438572409051" y="181" width="1.6369251887439944" height="15.0" fill="rgb(226,220,5)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.5"/>
<text x="61.73438572409051" y="191.5" _orig_x="117.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (1,298 samples, 0.19%)</title><rect x="821.9080301990389" y="1765" width="8.908716540837338" height="15.0" fill="rgb(238,190,50)" rx="2" ry="2" _orig_x="607.3" _orig_width="2.2"/>
<text x="824.9080301990389" y="1775.5" _orig_x="610.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (474 samples, 0.07%)</title><rect x="808.4461221688399" y="2037" width="0.9821551132463967" height="15.0" fill="rgb(240,173,40)" rx="2" ry="2" _orig_x="801.4" _orig_width="0.9"/>
<text x="811.4461221688399" y="2047.5" _orig_x="804.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (227 samples, 0.03%)</title><rect x="334.6108442004117" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(249,160,0)" rx="2" ry="2" _orig_x="367.2" _orig_width="0.4"/>
<text x="337.6108442004117" y="1951.5" _orig_x="370.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="221.77213452299236" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(230,40,24)" rx="2" ry="2" _orig_x="263.8" _orig_width="0.2"/>
<text x="224.77213452299236" y="1871.5" _orig_x="266.77"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (110 samples, 0.02%)</title><rect x="557.8860672614962" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(234,168,33)" rx="2" ry="2" _orig_x="542.1" _orig_width="0.2"/>
<text x="560.8860672614962" y="1855.5" _orig_x="545.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,266 samples, 0.19%)</title><rect x="94.52848318462584" y="1893" width="2.400823610157859" height="15.0" fill="rgb(209,61,42)" rx="2" ry="2" _orig_x="147.2" _orig_width="2.2"/>
<text x="97.52848318462584" y="1903.5" _orig_x="150.19"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (350 samples, 0.05%)</title><rect x="224.4" y="2053" width="0.7" height="15.0" fill="rgb(208,205,32)" rx="2" ry="2"/>
<text x="227.44" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (221 samples, 0.03%)</title><rect x="14.755662319835176" y="1829" width="0.4365133836650652" height="15.0" fill="rgb(245,180,20)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1839.5" _orig_x="77.12"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (83 samples, 0.01%)</title><rect x="18.908716540837283" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(215,56,7)" rx="2" ry="2" _orig_x="409.0" _orig_width="0.2"/>
<text x="21.908716540837283" y="1727.5" _orig_x="412.04"/>
</g>
<g class="hide">
<title>[code] (278 samples, 0.04%)</title><rect x="16.6" y="1733" width="0.5" height="15.0" fill="rgb(250,195,29)" rx="2" ry="2"/>
<text x="19.64" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="336.793411118737" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(224,215,45)" rx="2" ry="2" _orig_x="369.2" _orig_width="0.1"/>
<text x="339.793411118737" y="1903.5" _orig_x="372.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="1166.6226415094338" y="1877" width="0.7421383647798743" height="15.0" fill="rgb(228,116,8)" rx="2" ry="2" _orig_x="702.4" _orig_width="0.2"/>
<text x="1169.6226415094338" y="1887.5" _orig_x="705.44"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (193 samples, 0.03%)</title><rect x="14.31914893617012" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(218,225,16)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.3"/>
<text x="17.31914893617012" y="2047.5" _orig_x="76.66"/>
</g>
<g class="hide">
<title>[libgdk-3.so.0.2404.16] (93 samples, 0.01%)</title><rect x="186.5236787920383" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(216,49,15)" rx="2" ry="2" _orig_x="231.5" _orig_width="0.2"/>
<text x="189.5236787920383" y="2047.5" _orig_x="234.50"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (145 samples, 0.02%)</title><rect x="22.3" y="1989" width="0.3" height="15.0" fill="rgb(235,71,47)" rx="2" ry="2"/>
<text x="25.33" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,003 samples, 0.15%)</title><rect x="1174.2" y="1685" width="1.7" height="15.0" fill="rgb(205,134,4)" rx="2" ry="2"/>
<text x="1177.18" y="1695.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (288 samples, 0.04%)</title><rect x="108.80576527110493" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(234,105,21)" rx="2" ry="2" _orig_x="431.2" _orig_width="0.5"/>
<text x="111.80576527110493" y="1791.5" _orig_x="434.15"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (136 samples, 0.02%)</title><rect x="644.9485243651338" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(230,166,35)" rx="2" ry="2" _orig_x="563.6" _orig_width="0.2"/>
<text x="647.9485243651338" y="1871.5" _orig_x="566.56"/>
</g>
<g class="hide">
<title>g_main_context_prepare (287 samples, 0.04%)</title><rect x="268.1516815374055" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(216,182,11)" rx="2" ry="2" _orig_x="306.3" _orig_width="0.5"/>
<text x="271.1516815374055" y="2031.5" _orig_x="309.30"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (525 samples, 0.08%)</title><rect x="46.0398078242964" y="1797" width="3.644474948524365" height="15.0" fill="rgb(225,17,3)" rx="2" ry="2" _orig_x="415.7" _orig_width="0.9"/>
<text x="49.0398078242964" y="1807.5" _orig_x="418.68"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (118 samples, 0.02%)</title><rect x="1070.5422100205903" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(221,133,34)" rx="2" ry="2" _orig_x="668.7" _orig_width="0.2"/>
<text x="1073.5422100205903" y="1903.5" _orig_x="671.70"/>
</g>
<g>
<title>Field::DeserializeFrom (3,932 samples, 0.58%)</title><rect x="156.99382292381614" y="1845" width="27.94097460535347" height="15.0" fill="rgb(252,77,0)" rx="2" ry="2" _orig_x="443.1" _orig_width="6.9"/>
<text x="159.99382292381614" y="1855.5" _orig_x="446.06">Fi..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.01%)</title><rect x="56.9" y="1941" width="0.1" height="15.0" fill="rgb(247,192,4)" rx="2" ry="2"/>
<text x="59.85" y="1951.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (78 samples, 0.01%)</title><rect x="86.45298558682215" y="1237" width="0.1091283459162663" height="15.0" fill="rgb(216,51,46)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1247.5" _orig_x="142.78"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (186 samples, 0.03%)</title><rect x="683.8229238160606" y="1845" width="1.619766643788607" height="15.0" fill="rgb(237,44,52)" rx="2" ry="2" _orig_x="573.2" _orig_width="0.4"/>
<text x="686.8229238160606" y="1855.5" _orig_x="576.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.02%)</title><rect x="269.89773507206576" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(243,132,50)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1983.5" _orig_x="310.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.02%)</title><rect x="179.97597803706233" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(228,101,14)" rx="2" ry="2" _orig_x="225.5" _orig_width="0.2"/>
<text x="182.97597803706233" y="1967.5" _orig_x="228.49"/>
</g>
<g class="hide">
<title>[libxcb.so.1.1.0] (91 samples, 0.01%)</title><rect x="195.36307481125593" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(254,224,45)" rx="2" ry="2" _orig_x="239.6" _orig_width="0.2"/>
<text x="198.36307481125593" y="2047.5" _orig_x="242.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="1175.8" y="1525" width="0.1" height="15.0" fill="rgb(223,173,22)" rx="2" ry="2"/>
<text x="1178.77" y="1535.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (77 samples, 0.01%)</title><rect x="233.52779684282766" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(230,218,33)" rx="2" ry="2" _orig_x="462.0" _orig_width="0.2"/>
<text x="236.52779684282766" y="1823.5" _orig_x="465.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (463 samples, 0.07%)</title><rect x="220.35346602608087" y="1941" width="0.8730267673301304" height="15.0" fill="rgb(230,206,40)" rx="2" ry="2" _orig_x="262.5" _orig_width="0.8"/>
<text x="223.35346602608087" y="1951.5" _orig_x="265.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.01%)</title><rect x="299.47151681537395" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(211,165,9)" rx="2" ry="2" _orig_x="335.0" _orig_width="0.1"/>
<text x="302.47151681537395" y="1855.5" _orig_x="338.02"/>
</g>
<g class="hide">
<title>kworker/5:2-eve (292 samples, 0.04%)</title><rect x="369.3" y="2069" width="0.5" height="15.0" fill="rgb(235,29,53)" rx="2" ry="2"/>
<text x="372.33" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (79 samples, 0.01%)</title><rect x="254.98970487302674" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(244,167,35)" rx="2" ry="2" _orig_x="467.3" _orig_width="0.2"/>
<text x="257.98970487302677" y="1887.5" _orig_x="470.33"/>
</g>
<g class="hide">
<title>[unknown] (140 samples, 0.02%)</title><rect x="343.1" y="2053" width="0.2" height="15.0" fill="rgb(228,178,15)" rx="2" ry="2"/>
<text x="346.06" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="89.1811942347288" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(228,36,0)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1871.5" _orig_x="145.32"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (87 samples, 0.01%)</title><rect x="991.9835277968425" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(226,135,26)" rx="2" ry="2" _orig_x="649.3" _orig_width="0.2"/>
<text x="994.9835277968425" y="1903.5" _orig_x="652.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,670 samples, 0.40%)</title><rect x="149.6382978723403" y="1909" width="5.01990391214825" height="15.0" fill="rgb(248,51,33)" rx="2" ry="2" _orig_x="197.7" _orig_width="4.6"/>
<text x="152.6382978723403" y="1919.5" _orig_x="200.67"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (277 samples, 0.04%)</title><rect x="1097.6733013040493" y="1925" width="2.0247083047357584" height="15.0" fill="rgb(254,43,19)" rx="2" ry="2" _orig_x="675.4" _orig_width="0.5"/>
<text x="1100.6733013040493" y="1935.5" _orig_x="678.41"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (60 samples, 0.01%)</title><rect x="604.859299931366" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(224,152,33)" rx="2" ry="2" _orig_x="553.7" _orig_width="0.1"/>
<text x="607.859299931366" y="1871.5" _orig_x="556.67"/>
</g>
<g class="hide">
<title>__GI___ioctl (68 samples, 0.01%)</title><rect x="88.63555250514749" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(218,37,21)" rx="2" ry="2" _orig_x="141.8" _orig_width="0.1"/>
<text x="91.63555250514749" y="1807.5" _orig_x="144.80"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (96 samples, 0.01%)</title><rect x="777.9993136582017" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(229,43,40)" rx="2" ry="2" _orig_x="773.5" _orig_width="0.1"/>
<text x="780.9993136582017" y="2031.5" _orig_x="776.46"/>
</g>
<g class="hide">
<title>[unknown] (24,109 samples, 3.58%)</title><rect x="732.4927934111186" y="2037" width="46.16129032258064" height="15.0" fill="rgb(215,160,25)" rx="2" ry="2" _orig_x="731.8" _orig_width="42.3"/>
<text x="735.4927934111186" y="2047.5" _orig_x="734.81">[unknown] </text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (121 samples, 0.02%)</title><rect x="579.7529169526423" y="1781" width="1.214824982841455" height="15.0" fill="rgb(214,122,43)" rx="2" ry="2" _orig_x="547.5" _orig_width="0.3"/>
<text x="582.7529169526423" y="1791.5" _orig_x="550.55"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (595 samples, 0.09%)</title><rect x="180.84900480439248" y="1941" width="1.091283459162663" height="15.0" fill="rgb(216,56,0)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1951.5" _orig_x="229.30"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1445" width="2.182566918325326" height="15.0" fill="rgb(217,3,41)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1455.5" _orig_x="117.41"/>
</g>
<g>
<title>BPlusTreeIndex::AdjustBufferFor (128 samples, 0.02%)</title><rect x="1087.5497597803706" y="1941" width="0.8098833218943035" height="15.0" fill="rgb(230,84,29)" rx="2" ry="2" _orig_x="672.9" _orig_width="0.2"/>
<text x="1090.5497597803706" y="1951.5" _orig_x="675.90"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (718 samples, 0.11%)</title><rect x="1134.9279341111874" y="1813" width="5.264241592312972" height="15.0" fill="rgb(229,22,17)" rx="2" ry="2" _orig_x="684.6" _orig_width="1.3"/>
<text x="1137.9279341111874" y="1823.5" _orig_x="687.62"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (158 samples, 0.02%)</title><rect x="706.4996568291007" y="1909" width="1.214824982841455" height="15.0" fill="rgb(211,45,17)" rx="2" ry="2" _orig_x="578.8" _orig_width="0.3"/>
<text x="709.4996568291007" y="1919.5" _orig_x="581.85"/>
</g>
<g class="hide">
<title>[code] (934 samples, 0.14%)</title><rect x="85.3617021276595" y="1765" width="1.7460535346602608" height="15.0" fill="rgb(236,159,44)" rx="2" ry="2" _orig_x="138.8" _orig_width="1.6"/>
<text x="88.3617021276595" y="1775.5" _orig_x="141.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="57.2" y="1989" width="0.3" height="15.0" fill="rgb(250,54,12)" rx="2" ry="2"/>
<text x="60.20" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (240 samples, 0.04%)</title><rect x="315.3260123541523" y="1861" width="1.619766643788607" height="15.0" fill="rgb(222,117,52)" rx="2" ry="2" _orig_x="482.2" _orig_width="0.4"/>
<text x="318.3260123541523" y="1871.5" _orig_x="485.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="214.35140700068624" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(206,199,10)" rx="2" ry="2" _orig_x="257.0" _orig_width="0.1"/>
<text x="217.35140700068624" y="1855.5" _orig_x="259.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,061 samples, 0.16%)</title><rect x="15.194968553459246" y="1893" width="7.050314465408805" height="15.0" fill="rgb(235,26,15)" rx="2" ry="2" _orig_x="392.1" _orig_width="1.9"/>
<text x="18.194968553459248" y="1903.5" _orig_x="395.13"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (270 samples, 0.04%)</title><rect x="922.7385037748801" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(236,144,46)" rx="2" ry="2" _orig_x="632.2" _orig_width="0.5"/>
<text x="925.7385037748801" y="1823.5" _orig_x="635.18"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (549 samples, 0.08%)</title><rect x="538.4488675360327" y="1733" width="3.644474948524365" height="15.0" fill="rgb(244,184,7)" rx="2" ry="2" _orig_x="537.3" _orig_width="0.9"/>
<text x="541.4488675360327" y="1743.5" _orig_x="540.26"/>
</g>
<g>
<title>DiskManager::WritePage (59 samples, 0.01%)</title><rect x="58.5929993136582" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(237,20,26)" rx="2" ry="2" _orig_x="418.8" _orig_width="0.1"/>
<text x="61.5929993136582" y="1871.5" _orig_x="421.84"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (111 samples, 0.02%)</title><rect x="187.76938915579947" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(229,152,34)" rx="2" ry="2" _orig_x="450.7" _orig_width="0.2"/>
<text x="190.76938915579947" y="1855.5" _orig_x="453.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,124 samples, 0.32%)</title><rect x="92.89155799588184" y="1941" width="4.037748798901854" height="15.0" fill="rgb(210,162,30)" rx="2" ry="2" _orig_x="145.7" _orig_width="3.7"/>
<text x="95.89155799588184" y="1951.5" _orig_x="148.68"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (932 samples, 0.14%)</title><rect x="64.7" y="2037" width="1.7" height="15.0" fill="rgb(214,32,28)" rx="2" ry="2"/>
<text x="67.73" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (234 samples, 0.03%)</title><rect x="47.659574468085154" y="1765" width="1.619766643788607" height="15.0" fill="rgb(220,96,36)" rx="2" ry="2" _orig_x="416.1" _orig_width="0.4"/>
<text x="50.659574468085154" y="1775.5" _orig_x="419.08"/>
</g>
<g class="hide">
<title>g_socket_send_message (63 samples, 0.01%)</title><rect x="170.59094028826348" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(223,67,21)" rx="2" ry="2" _orig_x="216.9" _orig_width="0.1"/>
<text x="173.59094028826348" y="2047.5" _orig_x="219.85"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (152 samples, 0.02%)</title><rect x="1108.2017844886752" y="1861" width="1.214824982841455" height="15.0" fill="rgb(227,72,42)" rx="2" ry="2" _orig_x="678.0" _orig_width="0.3"/>
<text x="1111.2017844886752" y="1871.5" _orig_x="680.99"/>
</g>
<g>
<title>[[kernel.kallsyms]] (92 samples, 0.01%)</title><rect x="355.82017844886747" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(249,4,4)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1823.5" _orig_x="495.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (65 samples, 0.01%)</title><rect x="606.4790665751545" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(229,23,15)" rx="2" ry="2" _orig_x="554.1" _orig_width="0.1"/>
<text x="609.4790665751545" y="1871.5" _orig_x="557.12"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (60 samples, 0.01%)</title><rect x="63.857240905971224" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(228,141,41)" rx="2" ry="2" _orig_x="420.1" _orig_width="0.1"/>
<text x="66.85724090597122" y="1855.5" _orig_x="423.14"/>
</g>
<g class="hide">
<title>ThreadPoolForeg (219 samples, 0.03%)</title><rect x="66.5" y="2069" width="0.4" height="15.0" fill="rgb(227,55,7)" rx="2" ry="2"/>
<text x="69.53" y="2079.5"/>
</g>
<g class="hide">
<title>__libc_disable_asynccancel (61 samples, 0.01%)</title><rect x="270.66163349347966" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(238,155,36)" rx="2" ry="2" _orig_x="308.6" _orig_width="0.1"/>
<text x="273.66163349347966" y="2047.5" _orig_x="311.55"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (669 samples, 0.10%)</title><rect x="951.4893617021274" y="1845" width="4.454358270418669" height="15.0" fill="rgb(211,9,42)" rx="2" ry="2" _orig_x="639.3" _orig_width="1.1"/>
<text x="954.4893617021274" y="1855.5" _orig_x="642.27"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (969 samples, 0.14%)</title><rect x="659.5264241592314" y="1781" width="6.884008236101578" height="15.0" fill="rgb(244,115,28)" rx="2" ry="2" _orig_x="567.2" _orig_width="1.7"/>
<text x="662.5264241592314" y="1791.5" _orig_x="570.25"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (416 samples, 0.06%)</title><rect x="1050.7000686341796" y="1765" width="3.239533287577214" height="15.0" fill="rgb(210,26,0)" rx="2" ry="2" _orig_x="663.8" _orig_width="0.8"/>
<text x="1053.7000686341796" y="1775.5" _orig_x="666.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,919 samples, 1.18%)</title><rect x="116.02676733013031" y="1797" width="15.05971173644475" height="15.0" fill="rgb(245,41,41)" rx="2" ry="2" _orig_x="166.9" _orig_width="13.8"/>
<text x="119.02676733013031" y="1807.5" _orig_x="169.86"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (613 samples, 0.09%)</title><rect x="267.9478380233356" y="1781" width="4.454358270418669" height="15.0" fill="rgb(220,35,54)" rx="2" ry="2" _orig_x="470.5" _orig_width="1.1"/>
<text x="270.9478380233356" y="1791.5" _orig_x="473.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (833 samples, 0.12%)</title><rect x="351.74399450926546" y="1845" width="1.6369251887439944" height="15.0" fill="rgb(232,51,48)" rx="2" ry="2" _orig_x="382.9" _orig_width="1.5"/>
<text x="354.74399450926546" y="1855.5" _orig_x="385.94"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (342 samples, 0.05%)</title><rect x="716.6231983527795" y="1877" width="2.42964996568291" height="15.0" fill="rgb(209,73,35)" rx="2" ry="2" _orig_x="581.3" _orig_width="0.6"/>
<text x="719.6231983527795" y="1887.5" _orig_x="584.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (449 samples, 0.07%)</title><rect x="211.62319835277958" y="1797" width="0.8730267673301304" height="15.0" fill="rgb(236,168,17)" rx="2" ry="2" _orig_x="254.5" _orig_width="0.8"/>
<text x="214.62319835277958" y="1807.5" _orig_x="257.50"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (78 samples, 0.01%)</title><rect x="269.16266300617707" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(233,11,22)" rx="2" ry="2" _orig_x="470.8" _orig_width="0.1"/>
<text x="272.16266300617707" y="1727.5" _orig_x="473.79"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (66 samples, 0.01%)</title><rect x="1050.2951269732328" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(215,209,49)" rx="2" ry="2" _orig_x="663.7" _orig_width="0.1"/>
<text x="1053.2951269732328" y="1775.5" _orig_x="666.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (272 samples, 0.04%)</title><rect x="337.0116678105695" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(219,190,49)" rx="2" ry="2" _orig_x="369.4" _orig_width="0.4"/>
<text x="340.0116678105695" y="2015.5" _orig_x="372.37"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (118 samples, 0.02%)</title><rect x="305.20247083047343" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(223,117,38)" rx="2" ry="2" _orig_x="479.7" _orig_width="0.2"/>
<text x="308.20247083047343" y="1919.5" _orig_x="482.66"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (685 samples, 0.10%)</title><rect x="490.66575154426897" y="1765" width="4.85929993136582" height="15.0" fill="rgb(234,184,24)" rx="2" ry="2" _orig_x="525.5" _orig_width="1.2"/>
<text x="493.66575154426897" y="1775.5" _orig_x="528.52"/>
</g>
<g class="hide">
<title>ntfs_attr_pread (136 samples, 0.02%)</title><rect x="795.8" y="2053" width="0.3" height="15.0" fill="rgb(219,204,35)" rx="2" ry="2"/>
<text x="798.85" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1093" width="2.182566918325326" height="15.0" fill="rgb(210,118,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1103.5" _orig_x="117.41"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (294 samples, 0.04%)</title><rect x="1147.4811256005491" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(252,0,33)" rx="2" ry="2" _orig_x="687.7" _orig_width="0.5"/>
<text x="1150.4811256005491" y="1823.5" _orig_x="690.72"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (382 samples, 0.06%)</title><rect x="644.5435827041866" y="1909" width="2.42964996568291" height="15.0" fill="rgb(251,207,50)" rx="2" ry="2" _orig_x="563.5" _orig_width="0.6"/>
<text x="647.5435827041866" y="1919.5" _orig_x="566.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,062 samples, 0.16%)</title><rect x="806.0452985586821" y="1829" width="2.0734385724090596" height="15.0" fill="rgb(243,57,43)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1839.5" _orig_x="802.21"/>
</g>
<g class="hide">
<title>Monitor_HEventQ (78 samples, 0.01%)</title><rect x="23.4" y="2069" width="0.1" height="15.0" fill="rgb(217,170,41)" rx="2" ry="2"/>
<text x="26.40" y="2079.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (99 samples, 0.01%)</title><rect x="138.7714481811943" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(224,215,2)" rx="2" ry="2" _orig_x="438.6" _orig_width="0.2"/>
<text x="141.7714481811943" y="1727.5" _orig_x="441.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (343 samples, 0.05%)</title><rect x="335.0473575840768" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(218,170,12)" rx="2" ry="2" _orig_x="367.6" _orig_width="0.6"/>
<text x="338.0473575840768" y="2031.5" _orig_x="370.57"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,042 samples, 0.15%)</title><rect x="293.8641043239532" y="1861" width="7.28894989704873" height="15.0" fill="rgb(209,43,36)" rx="2" ry="2" _orig_x="476.9" _orig_width="1.8"/>
<text x="296.8641043239532" y="1871.5" _orig_x="479.91"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="31.0" y="1749" width="0.1" height="15.0" fill="rgb(211,88,50)" rx="2" ry="2"/>
<text x="33.98" y="1759.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (64 samples, 0.01%)</title><rect x="435.5936856554563" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(253,225,21)" rx="2" ry="2" _orig_x="511.9" _orig_width="0.1"/>
<text x="438.5936856554563" y="1839.5" _orig_x="514.90"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (598 samples, 0.09%)</title><rect x="180.84900480439248" y="2005" width="1.091283459162663" height="15.0" fill="rgb(211,11,43)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="2015.5" _orig_x="229.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,370 samples, 0.20%)</title><rect x="13.33962264150956" y="2005" width="8.90566037735849" height="15.0" fill="rgb(223,154,12)" rx="2" ry="2" _orig_x="391.6" _orig_width="2.4"/>
<text x="16.33962264150956" y="2015.5" _orig_x="394.58"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (220 samples, 0.03%)</title><rect x="252.00068634179812" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(212,61,12)" rx="2" ry="2" _orig_x="291.5" _orig_width="0.4"/>
<text x="255.00068634179812" y="2031.5" _orig_x="294.54"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (8,361 samples, 1.24%)</title><rect x="66.69183253260124" y="1861" width="59.52642415923129" height="15.0" fill="rgb(212,110,53)" rx="2" ry="2" _orig_x="420.8" _orig_width="14.7"/>
<text x="69.69183253260124" y="1871.5" _orig_x="423.84">IndexK..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (791 samples, 0.12%)</title><rect x="727.3637611530542" y="1749" width="1.5277968428277282" height="15.0" fill="rgb(225,62,7)" rx="2" ry="2" _orig_x="727.1" _orig_width="1.4"/>
<text x="730.3637611530542" y="1759.5" _orig_x="730.09"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (121 samples, 0.02%)</title><rect x="270.37748798901856" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(232,196,48)" rx="2" ry="2" _orig_x="471.1" _orig_width="0.2"/>
<text x="273.37748798901856" y="1759.5" _orig_x="474.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (434 samples, 0.06%)</title><rect x="153.89430336307473" y="1813" width="0.7638984214138641" height="15.0" fill="rgb(216,112,8)" rx="2" ry="2" _orig_x="201.6" _orig_width="0.7"/>
<text x="156.89430336307473" y="1823.5" _orig_x="204.59"/>
</g>
<g class="hide">
<title>[code] (124 samples, 0.02%)</title><rect x="14.31914893617012" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(218,50,37)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1935.5" _orig_x="76.72"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (395 samples, 0.06%)</title><rect x="907.7556623198353" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(230,162,35)" rx="2" ry="2" _orig_x="628.5" _orig_width="0.7"/>
<text x="910.7556623198353" y="1839.5" _orig_x="631.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,145 samples, 0.32%)</title><rect x="150.62045298558672" y="1893" width="4.037748798901854" height="15.0" fill="rgb(245,14,12)" rx="2" ry="2" _orig_x="198.6" _orig_width="3.7"/>
<text x="153.62045298558672" y="1903.5" _orig_x="201.59"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (67 samples, 0.01%)</title><rect x="1143.8366506520244" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(228,31,24)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.1"/>
<text x="1146.8366506520244" y="1823.5" _orig_x="689.83"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (495 samples, 0.07%)</title><rect x="1006.9663692518874" y="1893" width="3.644474948524365" height="15.0" fill="rgb(225,203,48)" rx="2" ry="2" _orig_x="653.0" _orig_width="0.9"/>
<text x="1009.9663692518874" y="1903.5" _orig_x="656.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (212,446 samples, 31.55%)</title><rect x="803.7" y="2053" width="372.3" height="15.0" fill="rgb(227,202,34)" rx="2" ry="2"/>
<text x="806.73" y="2063.5">[[kernel.kallsyms]]</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="159.35072065888804" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(214,2,26)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1935.5" _orig_x="209.57"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (141 samples, 0.02%)</title><rect x="884.6739876458474" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(246,166,44)" rx="2" ry="2" _orig_x="622.8" _orig_width="0.2"/>
<text x="887.6739876458474" y="1871.5" _orig_x="625.77"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (79 samples, 0.01%)</title><rect x="482.56691832532596" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(208,57,1)" rx="2" ry="2" _orig_x="523.5" _orig_width="0.2"/>
<text x="485.56691832532596" y="1823.5" _orig_x="526.52"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (60 samples, 0.01%)</title><rect x="283.3356211393274" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(242,0,4)" rx="2" ry="2" _orig_x="474.3" _orig_width="0.1"/>
<text x="286.3356211393274" y="1839.5" _orig_x="477.34"/>
</g>
<g class="hide">
<title>__pthread_mutex_init (118 samples, 0.02%)</title><rect x="711.8675360329443" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(244,28,23)" rx="2" ry="2" _orig_x="712.9" _orig_width="0.2"/>
<text x="714.8675360329443" y="2031.5" _orig_x="715.89"/>
</g>
<g class="hide">
<title>_int_free (1,946 samples, 0.29%)</title><rect x="22.61635220125799" y="2037" width="12.9874213836478" height="15.0" fill="rgb(243,128,31)" rx="2" ry="2" _orig_x="394.1" _orig_width="3.5"/>
<text x="25.61635220125799" y="2047.5" _orig_x="397.15"/>
</g>
<g class="hide">
<title>_int_free (91 samples, 0.01%)</title><rect x="290.086479066575" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(232,34,49)" rx="2" ry="2" _orig_x="326.4" _orig_width="0.2"/>
<text x="293.086479066575" y="2047.5" _orig_x="329.40"/>
</g>
<g>
<title>Row::DeserializeFrom (4,528 samples, 0.67%)</title><rect x="257.8242964996567" y="1877" width="31.990391214824985" height="15.0" fill="rgb(253,167,34)" rx="2" ry="2" _orig_x="468.0" _orig_width="7.9"/>
<text x="260.8242964996567" y="1887.5" _orig_x="470.96">R..</text>
</g>
<g class="hide">
<title>[unknown] (119 samples, 0.02%)</title><rect x="1188.0" y="2021" width="0.2" height="15.0" fill="rgb(206,147,28)" rx="2" ry="2"/>
<text x="1191.00" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (2,350 samples, 0.35%)</title><rect x="1042.1962937542899" y="1829" width="17.00754975978037" height="15.0" fill="rgb(239,113,22)" rx="2" ry="2" _orig_x="661.7" _orig_width="4.2"/>
<text x="1045.1962937542899" y="1839.5" _orig_x="664.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="212.38709677419342" y="1637" width="0.1091283459162663" height="15.0" fill="rgb(251,144,44)" rx="2" ry="2" _orig_x="255.2" _orig_width="0.1"/>
<text x="215.38709677419342" y="1647.5" _orig_x="258.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (436 samples, 0.06%)</title><rect x="37.45911949685547" y="1877" width="2.968553459119497" height="15.0" fill="rgb(214,31,22)" rx="2" ry="2" _orig_x="398.1" _orig_width="0.8"/>
<text x="40.45911949685547" y="1887.5" _orig_x="401.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (807 samples, 0.12%)</title><rect x="1159.5723270440253" y="1941" width="5.19496855345912" height="15.0" fill="rgb(250,188,40)" rx="2" ry="2" _orig_x="700.5" _orig_width="1.4"/>
<text x="1162.5723270440253" y="1951.5" _orig_x="703.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="805.7179135209333" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(244,138,31)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1935.5" _orig_x="801.88"/>
</g>
<g class="hide">
<title>[ntfs-3g] (1,770 samples, 0.26%)</title><rect x="732.9293067947838" y="2021" width="3.382978723404255" height="15.0" fill="rgb(205,118,17)" rx="2" ry="2" _orig_x="732.2" _orig_width="3.1"/>
<text x="735.9293067947838" y="2031.5" _orig_x="735.19"/>
</g>
<g class="hide">
<title>[code] (181 samples, 0.03%)</title><rect x="69.86547700754966" y="1829" width="0.3273850377487989" height="15.0" fill="rgb(220,106,43)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1839.5" _orig_x="127.57"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (64 samples, 0.01%)</title><rect x="342.86204529855866" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(254,164,44)" rx="2" ry="2" _orig_x="489.0" _orig_width="0.1"/>
<text x="345.86204529855866" y="1807.5" _orig_x="492.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (449 samples, 0.07%)</title><rect x="331.11873713109117" y="1973" width="0.8730267673301304" height="15.0" fill="rgb(250,4,25)" rx="2" ry="2" _orig_x="364.0" _orig_width="0.8"/>
<text x="334.11873713109117" y="1983.5" _orig_x="367.02"/>
</g>
<g>
<title>Field::DeserializeFrom (1,470 samples, 0.22%)</title><rect x="17.693891557995787" y="1813" width="10.528483184625944" height="15.0" fill="rgb(239,58,15)" rx="2" ry="2" _orig_x="408.7" _orig_width="2.6"/>
<text x="20.693891557995787" y="1823.5" _orig_x="411.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="361.4" y="2053" width="0.2" height="15.0" fill="rgb(217,124,32)" rx="2" ry="2"/>
<text x="364.40" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (284 samples, 0.04%)</title><rect x="591.0912834591624" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(249,226,53)" rx="2" ry="2" _orig_x="550.3" _orig_width="0.5"/>
<text x="594.0912834591624" y="1823.5" _orig_x="553.29"/>
</g>
<g class="hide">
<title>java_security_AccessControlContext::create (79 samples, 0.01%)</title><rect x="68.7" y="1989" width="0.2" height="15.0" fill="rgb(248,193,13)" rx="2" ry="2"/>
<text x="71.72" y="1999.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (352 samples, 0.05%)</title><rect x="88.19903912148241" y="1909" width="0.6547700754975978" height="15.0" fill="rgb(246,116,41)" rx="2" ry="2" _orig_x="141.4" _orig_width="0.6"/>
<text x="91.19903912148241" y="1919.5" _orig_x="144.41"/>
</g>
<g class="hide">
<title>[code] (296 samples, 0.04%)</title><rect x="85.79821551132453" y="1541" width="0.5456417295813315" height="15.0" fill="rgb(225,94,20)" rx="2" ry="2" _orig_x="139.2" _orig_width="0.5"/>
<text x="88.79821551132453" y="1551.5" _orig_x="142.19"/>
</g>
<g>
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="57.783115991763935" y="1525" width="0.8098833218943035" height="15.0" fill="rgb(231,133,9)" rx="2" ry="2" _orig_x="418.6" _orig_width="0.2"/>
<text x="60.783115991763935" y="1535.5" _orig_x="421.64"/>
</g>
<g class="hide">
<title>iwl_mvm_rx_mq (58 samples, 0.01%)</title><rect x="328.39052848318454" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(250,200,11)" rx="2" ry="2" _orig_x="361.5" _orig_width="0.1"/>
<text x="331.39052848318454" y="1951.5" _orig_x="364.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (504 samples, 0.07%)</title><rect x="524.2759094028823" y="1749" width="3.644474948524365" height="15.0" fill="rgb(205,169,32)" rx="2" ry="2" _orig_x="533.8" _orig_width="0.9"/>
<text x="527.2759094028823" y="1759.5" _orig_x="536.79"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (108 samples, 0.02%)</title><rect x="159.82841455044615" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(254,8,44)" rx="2" ry="2" _orig_x="443.8" _orig_width="0.1"/>
<text x="162.82841455044615" y="1711.5" _orig_x="446.75"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (133 samples, 0.02%)</title><rect x="355.0102951269732" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(205,192,50)" rx="2" ry="2" _orig_x="492.0" _orig_width="0.2"/>
<text x="358.0102951269732" y="1935.5" _orig_x="494.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176 samples, 0.03%)</title><rect x="333.6286890871653" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(225,120,39)" rx="2" ry="2" _orig_x="366.3" _orig_width="0.3"/>
<text x="336.6286890871653" y="1951.5" _orig_x="369.25"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (202 samples, 0.03%)</title><rect x="468.7989018531229" y="1797" width="1.619766643788607" height="15.0" fill="rgb(206,145,38)" rx="2" ry="2" _orig_x="520.1" _orig_width="0.4"/>
<text x="471.7989018531229" y="1807.5" _orig_x="523.12"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (97 samples, 0.01%)</title><rect x="656.2868908716539" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(253,152,26)" rx="2" ry="2" _orig_x="566.4" _orig_width="0.2"/>
<text x="659.2868908716539" y="1759.5" _orig_x="569.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (969 samples, 0.14%)</title><rect x="351.52573781743297" y="1877" width="1.855181880576527" height="15.0" fill="rgb(249,49,47)" rx="2" ry="2" _orig_x="382.7" _orig_width="1.7"/>
<text x="354.52573781743297" y="1887.5" _orig_x="385.71"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (780 samples, 0.12%)</title><rect x="368.7783115991762" y="1781" width="5.669183253260123" height="15.0" fill="rgb(224,204,5)" rx="2" ry="2" _orig_x="495.4" _orig_width="1.4"/>
<text x="371.7783115991762" y="1791.5" _orig_x="498.41"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1077" width="1.091283459162663" height="15.0" fill="rgb(241,86,8)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1087.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (80 samples, 0.01%)</title><rect x="788.5847632120796" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(231,87,41)" rx="2" ry="2" _orig_x="783.2" _orig_width="0.1"/>
<text x="791.5847632120796" y="2047.5" _orig_x="786.20"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (147 samples, 0.02%)</title><rect x="902.0864790665753" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(223,223,44)" rx="2" ry="2" _orig_x="627.1" _orig_width="0.2"/>
<text x="905.0864790665753" y="1839.5" _orig_x="630.08"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (425 samples, 0.06%)</title><rect x="450.9814687714483" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(205,136,46)" rx="2" ry="2" _orig_x="515.7" _orig_width="0.7"/>
<text x="453.9814687714483" y="1791.5" _orig_x="518.70"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (60 samples, 0.01%)</title><rect x="97.0624571036376" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(217,159,29)" rx="2" ry="2" _orig_x="428.3" _orig_width="0.1"/>
<text x="100.0624571036376" y="1839.5" _orig_x="431.32"/>
</g>
<g class="hide">
<title>[code] (236 samples, 0.04%)</title><rect x="14.755662319835176" y="1861" width="0.4365133836650652" height="15.0" fill="rgb(224,40,25)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1871.5" _orig_x="77.10"/>
</g>
<g class="hide">
<title>[libfribidi.so.0.4.0] (78 samples, 0.01%)</title><rect x="268.9" y="2053" width="0.1" height="15.0" fill="rgb(232,192,17)" rx="2" ry="2"/>
<text x="271.87" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1893" width="0.1" height="15.0" fill="rgb(251,222,45)" rx="2" ry="2"/>
<text x="33.98" y="1903.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (190 samples, 0.03%)</title><rect x="87.34385724090583" y="1701" width="1.214824982841455" height="15.0" fill="rgb(231,54,30)" rx="2" ry="2" _orig_x="425.9" _orig_width="0.3"/>
<text x="90.34385724090583" y="1711.5" _orig_x="428.86"/>
</g>
<g class="hide">
<title>__libc_calloc (332 samples, 0.05%)</title><rect x="754.3184625943718" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(214,116,44)" rx="2" ry="2" _orig_x="751.8" _orig_width="0.6"/>
<text x="757.3184625943718" y="2031.5" _orig_x="754.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (564 samples, 0.08%)</title><rect x="346.8332189430335" y="1797" width="1.091283459162663" height="15.0" fill="rgb(228,21,48)" rx="2" ry="2" _orig_x="378.4" _orig_width="1.0"/>
<text x="349.8332189430335" y="1807.5" _orig_x="381.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="14.6" y="1893" width="0.1" height="15.0" fill="rgb(236,188,34)" rx="2" ry="2"/>
<text x="17.63" y="1903.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (357 samples, 0.05%)</title><rect x="134.31708991077554" y="1765" width="2.42964996568291" height="15.0" fill="rgb(208,176,52)" rx="2" ry="2" _orig_x="437.5" _orig_width="0.6"/>
<text x="137.31708991077554" y="1775.5" _orig_x="440.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (315 samples, 0.05%)</title><rect x="20.01886792452826" y="1765" width="2.2264150943396226" height="15.0" fill="rgb(232,114,45)" rx="2" ry="2" _orig_x="393.4" _orig_width="0.6"/>
<text x="23.01886792452826" y="1775.5" _orig_x="396.43"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (59 samples, 0.01%)</title><rect x="885.0789293067946" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(244,38,30)" rx="2" ry="2" _orig_x="622.9" _orig_width="0.1"/>
<text x="888.0789293067946" y="1855.5" _orig_x="625.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (537 samples, 0.08%)</title><rect x="727.8002745367191" y="1733" width="1.091283459162663" height="15.0" fill="rgb(235,175,23)" rx="2" ry="2" _orig_x="727.5" _orig_width="1.0"/>
<text x="730.8002745367191" y="1743.5" _orig_x="730.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (273 samples, 0.04%)</title><rect x="753.5545641729581" y="1685" width="0.5456417295813315" height="15.0" fill="rgb(218,148,53)" rx="2" ry="2" _orig_x="751.1" _orig_width="0.5"/>
<text x="756.5545641729581" y="1695.5" _orig_x="754.13"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (236 samples, 0.04%)</title><rect x="406.84282772820865" y="1733" width="1.619766643788607" height="15.0" fill="rgb(219,23,45)" rx="2" ry="2" _orig_x="504.8" _orig_width="0.4"/>
<text x="409.84282772820865" y="1743.5" _orig_x="507.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,071 samples, 1.20%)</title><rect x="1161.8" y="1845" width="14.2" height="15.0" fill="rgb(249,59,4)" rx="2" ry="2"/>
<text x="1164.83" y="1855.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (1,511 samples, 0.22%)</title><rect x="1031.2628689087164" y="1813" width="10.528483184625944" height="15.0" fill="rgb(208,137,0)" rx="2" ry="2" _orig_x="659.0" _orig_width="2.6"/>
<text x="1034.2628689087164" y="1823.5" _orig_x="661.99"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1701" width="1.091283459162663" height="15.0" fill="rgb(224,110,16)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1711.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (165 samples, 0.02%)</title><rect x="46.44474948524364" y="1765" width="1.214824982841455" height="15.0" fill="rgb(243,42,22)" rx="2" ry="2" _orig_x="415.8" _orig_width="0.3"/>
<text x="49.44474948524364" y="1775.5" _orig_x="418.79"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,822 samples, 0.27%)</title><rect x="129.45778997940977" y="1845" width="12.958133150308855" height="15.0" fill="rgb(245,228,32)" rx="2" ry="2" _orig_x="436.3" _orig_width="3.2"/>
<text x="132.45778997940977" y="1855.5" _orig_x="439.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (870 samples, 0.13%)</title><rect x="351.74399450926546" y="1861" width="1.6369251887439944" height="15.0" fill="rgb(220,9,41)" rx="2" ry="2" _orig_x="382.9" _orig_width="1.5"/>
<text x="354.74399450926546" y="1871.5" _orig_x="385.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="359.92862045298546" y="1749" width="0.3273850377487989" height="15.0" fill="rgb(238,140,10)" rx="2" ry="2" _orig_x="390.4" _orig_width="0.3"/>
<text x="362.92862045298546" y="1759.5" _orig_x="393.41"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (131 samples, 0.02%)</title><rect x="162.0789293067947" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(249,226,11)" rx="2" ry="2" _orig_x="209.1" _orig_width="0.3"/>
<text x="165.0789293067947" y="2031.5" _orig_x="212.14"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (438 samples, 0.07%)</title><rect x="264.3033630748113" y="1781" width="3.239533287577214" height="15.0" fill="rgb(232,181,48)" rx="2" ry="2" _orig_x="469.6" _orig_width="0.8"/>
<text x="267.3033630748113" y="1791.5" _orig_x="472.61"/>
</g>
<g>
<title>BPlusTree::InternalInsert (5,541 samples, 0.82%)</title><rect x="13.239533287577268" y="1877" width="39.27934111187371" height="15.0" fill="rgb(224,82,29)" rx="2" ry="2" _orig_x="407.6" _orig_width="9.7"/>
<text x="16.239533287577267" y="1887.5" _orig_x="410.63">BPl..</text>
</g>
<g class="hide">
<title>[unknown] (2,670 samples, 0.40%)</title><rect x="57.42484557309531" y="2037" width="5.129032258064516" height="15.0" fill="rgb(254,126,29)" rx="2" ry="2" _orig_x="113.2" _orig_width="4.7"/>
<text x="60.42484557309531" y="2047.5" _orig_x="116.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.02%)</title><rect x="10.60878517501706" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(228,87,19)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="1967.5" _orig_x="73.33"/>
</g>
<g class="hide">
<title>[unknown] (76 samples, 0.01%)</title><rect x="121.0" y="2053" width="0.1" height="15.0" fill="rgb(213,86,9)" rx="2" ry="2"/>
<text x="123.99" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="56.5" y="1941" width="0.2" height="15.0" fill="rgb(227,70,45)" rx="2" ry="2"/>
<text x="59.46" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="223.40905971173635" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(244,185,27)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="1999.5" _orig_x="268.26"/>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (85 samples, 0.01%)</title><rect x="13.3" y="2053" width="0.2" height="15.0" fill="rgb(235,10,14)" rx="2" ry="2"/>
<text x="16.33" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (171 samples, 0.03%)</title><rect x="33.891557995881854" y="1765" width="1.214824982841455" height="15.0" fill="rgb(225,24,1)" rx="2" ry="2" _orig_x="412.7" _orig_width="0.3"/>
<text x="36.891557995881854" y="1775.5" _orig_x="415.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (395 samples, 0.06%)</title><rect x="11.263555250514667" y="1973" width="0.7638984214138641" height="15.0" fill="rgb(221,93,12)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1983.5" _orig_x="73.90"/>
</g>
<g class="hide">
<title>[unknown] (1,607 samples, 0.24%)</title><rect x="19.1" y="2053" width="2.8" height="15.0" fill="rgb(211,46,41)" rx="2" ry="2"/>
<text x="22.12" y="2063.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (93 samples, 0.01%)</title><rect x="336.3829787234041" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(216,107,11)" rx="2" ry="2" _orig_x="487.4" _orig_width="0.2"/>
<text x="339.3829787234041" y="1919.5" _orig_x="490.39"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (133 samples, 0.02%)</title><rect x="913.4248455730954" y="1813" width="1.214824982841455" height="15.0" fill="rgb(211,178,24)" rx="2" ry="2" _orig_x="629.9" _orig_width="0.3"/>
<text x="916.4248455730954" y="1823.5" _orig_x="632.93"/>
</g>
<g class="hide">
<title>_nv002448kms (105 samples, 0.02%)</title><rect x="209.87714481811935" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(207,166,47)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="2031.5" _orig_x="255.93"/>
</g>
<g class="hide">
<title>[code] (209 samples, 0.03%)</title><rect x="87.54426904598482" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(225,187,13)" rx="2" ry="2" _orig_x="140.8" _orig_width="0.3"/>
<text x="90.54426904598482" y="1951.5" _orig_x="143.77"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (122 samples, 0.02%)</title><rect x="647.3781743308168" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(250,72,31)" rx="2" ry="2" _orig_x="564.2" _orig_width="0.2"/>
<text x="650.3781743308168" y="1903.5" _orig_x="567.19"/>
</g>
<g class="hide">
<title>__libc_recvmsg (632 samples, 0.09%)</title><rect x="61.24433768016463" y="2021" width="1.2004118050789294" height="15.0" fill="rgb(247,225,30)" rx="2" ry="2" _orig_x="116.7" _orig_width="1.1"/>
<text x="64.24433768016462" y="2031.5" _orig_x="119.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (72 samples, 0.01%)</title><rect x="265.11324639670556" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(223,149,50)" rx="2" ry="2" _orig_x="469.8" _orig_width="0.1"/>
<text x="268.11324639670556" y="1759.5" _orig_x="472.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (190 samples, 0.03%)</title><rect x="10.172271791352005" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(246,158,35)" rx="2" ry="2" _orig_x="69.9" _orig_width="0.3"/>
<text x="13.172271791352005" y="1919.5" _orig_x="72.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.01%)</title><rect x="1188.7" y="2005" width="0.2" height="15.0" fill="rgb(246,21,34)" rx="2" ry="2"/>
<text x="1191.73" y="2015.5"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (714 samples, 0.11%)</title><rect x="259.03912148249833" y="1845" width="5.264241592312972" height="15.0" fill="rgb(249,194,42)" rx="2" ry="2" _orig_x="468.3" _orig_width="1.3"/>
<text x="262.03912148249833" y="1855.5" _orig_x="471.30"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1589" width="1.091283459162663" height="15.0" fill="rgb(241,110,7)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1599.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (752 samples, 0.11%)</title><rect x="65.0" y="2005" width="1.4" height="15.0" fill="rgb(253,15,49)" rx="2" ry="2"/>
<text x="68.04" y="2015.5"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (106 samples, 0.02%)</title><rect x="306.82223747426224" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(230,197,44)" rx="2" ry="2" _orig_x="480.1" _orig_width="0.2"/>
<text x="309.82223747426224" y="1935.5" _orig_x="483.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (27,844 samples, 4.13%)</title><rect x="1115.3150308853808" y="1861" width="53.25463280713795" height="15.0" fill="rgb(212,92,7)" rx="2" ry="2" _orig_x="1082.6" _orig_width="48.8"/>
<text x="1118.3150308853808" y="1871.5" _orig_x="1085.58">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (171 samples, 0.03%)</title><rect x="1109.8215511324638" y="1861" width="1.214824982841455" height="15.0" fill="rgb(251,30,4)" rx="2" ry="2" _orig_x="678.4" _orig_width="0.3"/>
<text x="1112.8215511324638" y="1871.5" _orig_x="681.37"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (1,929 samples, 0.29%)</title><rect x="191.5435827041866" y="2037" width="3.710363761153054" height="15.0" fill="rgb(241,219,3)" rx="2" ry="2" _orig_x="236.1" _orig_width="3.4"/>
<text x="194.5435827041866" y="2047.5" _orig_x="239.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (802 samples, 0.12%)</title><rect x="346.39670555936846" y="1813" width="1.5277968428277282" height="15.0" fill="rgb(241,33,15)" rx="2" ry="2" _orig_x="378.0" _orig_width="1.4"/>
<text x="349.39670555936846" y="1823.5" _orig_x="381.03"/>
</g>
<g>
<title>Field::Field (133 samples, 0.02%)</title><rect x="761.9766643788606" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(249,26,7)" rx="2" ry="2" _orig_x="592.5" _orig_width="0.2"/>
<text x="764.9766643788606" y="1871.5" _orig_x="595.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (142 samples, 0.02%)</title><rect x="268.75772134522987" y="1749" width="1.214824982841455" height="15.0" fill="rgb(243,127,16)" rx="2" ry="2" _orig_x="470.7" _orig_width="0.3"/>
<text x="271.75772134522987" y="1759.5" _orig_x="473.72"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (417 samples, 0.06%)</title><rect x="354.605353466026" y="1941" width="3.239533287577214" height="15.0" fill="rgb(210,179,39)" rx="2" ry="2" _orig_x="491.9" _orig_width="0.8"/>
<text x="357.605353466026" y="1951.5" _orig_x="494.94"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (109 samples, 0.02%)</title><rect x="37.94097460535336" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(239,3,6)" rx="2" ry="2" _orig_x="413.7" _orig_width="0.2"/>
<text x="40.94097460535336" y="1807.5" _orig_x="416.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (555 samples, 0.08%)</title><rect x="364.8" y="2053" width="1.0" height="15.0" fill="rgb(244,15,43)" rx="2" ry="2"/>
<text x="367.82" y="2063.5"/>
</g>
<g class="hide">
<title>[[vdso]] (338 samples, 0.05%)</title><rect x="1165.1383647798743" y="2037" width="2.2264150943396226" height="15.0" fill="rgb(244,65,23)" rx="2" ry="2" _orig_x="702.0" _orig_width="0.6"/>
<text x="1168.1383647798743" y="2047.5" _orig_x="704.96"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (603 samples, 0.09%)</title><rect x="226.3" y="2053" width="1.0" height="15.0" fill="rgb(225,65,48)" rx="2" ry="2"/>
<text x="229.29" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (266 samples, 0.04%)</title><rect x="385.38091969800956" y="1781" width="1.619766643788607" height="15.0" fill="rgb(226,142,4)" rx="2" ry="2" _orig_x="499.5" _orig_width="0.4"/>
<text x="388.38091969800956" y="1791.5" _orig_x="502.47"/>
</g>
<g class="hide">
<title>_nv035114rm (121 samples, 0.02%)</title><rect x="359.7" y="2053" width="0.3" height="15.0" fill="rgb(243,11,35)" rx="2" ry="2"/>
<text x="362.74" y="2063.5"/>
</g>
<g>
<title>Row::GetField (201 samples, 0.03%)</title><rect x="997.2477693891559" y="1909" width="1.214824982841455" height="15.0" fill="rgb(251,131,16)" rx="2" ry="2" _orig_x="650.6" _orig_width="0.3"/>
<text x="1000.2477693891559" y="1919.5" _orig_x="653.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,251 samples, 0.19%)</title><rect x="523.0610844200412" y="1765" width="8.503774879890186" height="15.0" fill="rgb(216,82,51)" rx="2" ry="2" _orig_x="533.5" _orig_width="2.1"/>
<text x="526.0610844200412" y="1775.5" _orig_x="536.45"/>
</g>
<g class="hide">
<title>[perf-105834.map] (474 samples, 0.07%)</title><rect x="11.9" y="2037" width="0.8" height="15.0" fill="rgb(250,134,16)" rx="2" ry="2"/>
<text x="14.85" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.01%)</title><rect x="47.9" y="1765" width="0.2" height="15.0" fill="rgb(234,35,49)" rx="2" ry="2"/>
<text x="50.90" y="1775.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (86 samples, 0.01%)</title><rect x="501.5991763898423" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(208,164,52)" rx="2" ry="2" _orig_x="528.2" _orig_width="0.2"/>
<text x="504.5991763898423" y="1807.5" _orig_x="531.20"/>
</g>
<g class="parent">
<title>main (181,467 samples, 26.95%)</title><rect x="10" y="2069" width="1180" height="15.0" fill="rgb(219,182,50)" rx="2" ry="2" _orig_x="390.7" _orig_width="318.0"/>
<text x="13" y="2079.5" _orig_x="393.69">main </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (497 samples, 0.07%)</title><rect x="220.2443376801646" y="1957" width="0.9821551132463967" height="15.0" fill="rgb(221,129,24)" rx="2" ry="2" _orig_x="262.4" _orig_width="0.9"/>
<text x="223.2443376801646" y="1967.5" _orig_x="265.42"/>
</g>
<g class="hide">
<title>XPending (85 samples, 0.01%)</title><rect x="252.43719972546313" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(211,50,8)" rx="2" ry="2" _orig_x="291.9" _orig_width="0.2"/>
<text x="255.43719972546313" y="2015.5" _orig_x="294.94"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (515 samples, 0.08%)</title><rect x="655.4770075497598" y="1813" width="3.644474948524365" height="15.0" fill="rgb(226,131,40)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.9"/>
<text x="658.4770075497598" y="1823.5" _orig_x="569.19"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (73 samples, 0.01%)</title><rect x="934.4818119423473" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(214,165,33)" rx="2" ry="2" _orig_x="635.1" _orig_width="0.2"/>
<text x="937.4818119423473" y="1823.5" _orig_x="638.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (255 samples, 0.04%)</title><rect x="68.1194234728894" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(248,47,3)" rx="2" ry="2" _orig_x="123.0" _orig_width="0.4"/>
<text x="71.1194234728894" y="1935.5" _orig_x="125.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,460 samples, 0.66%)</title><rect x="745.5881949210706" y="1781" width="8.512010981468771" height="15.0" fill="rgb(218,70,2)" rx="2" ry="2" _orig_x="743.8" _orig_width="7.8"/>
<text x="748.5881949210706" y="1791.5" _orig_x="746.79"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (242 samples, 0.04%)</title><rect x="342.05216197666437" y="1813" width="1.619766643788607" height="15.0" fill="rgb(216,196,36)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.4"/>
<text x="345.05216197666437" y="1823.5" _orig_x="491.81"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (137 samples, 0.02%)</title><rect x="430.3294440631435" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(208,121,11)" rx="2" ry="2" _orig_x="510.6" _orig_width="0.2"/>
<text x="433.3294440631435" y="1839.5" _orig_x="513.59"/>
</g>
<g class="hide">
<title>[unknown] (1,175 samples, 0.17%)</title><rect x="58.73438572409051" y="1925" width="2.182566918325326" height="15.0" fill="rgb(247,140,49)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1935.5" _orig_x="117.37"/>
</g>
<g class="hide">
<title>_nv023204rm (82 samples, 0.01%)</title><rect x="348.9" y="2053" width="0.2" height="15.0" fill="rgb(231,0,44)" rx="2" ry="2"/>
<text x="351.92" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (167 samples, 0.02%)</title><rect x="69.86547700754966" y="1813" width="0.3273850377487989" height="15.0" fill="rgb(227,156,1)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1823.5" _orig_x="127.60"/>
</g>
<g>
<title>Row::GetSerializedSize (67 samples, 0.01%)</title><rect x="708.9293067947837" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(239,55,24)" rx="2" ry="2" _orig_x="579.4" _orig_width="0.1"/>
<text x="711.9293067947837" y="1935.5" _orig_x="582.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,018 samples, 0.15%)</title><rect x="276.8565545641729" y="1845" width="7.28894989704873" height="15.0" fill="rgb(246,85,22)" rx="2" ry="2" _orig_x="472.7" _orig_width="1.8"/>
<text x="279.8565545641729" y="1855.5" _orig_x="475.70"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (119 samples, 0.02%)</title><rect x="598.3802333562114" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(240,36,36)" rx="2" ry="2" _orig_x="552.1" _orig_width="0.2"/>
<text x="601.3802333562114" y="1823.5" _orig_x="555.05"/>
</g>
<g class="hide">
<title>__poll (79 samples, 0.01%)</title><rect x="305.91008922443365" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(220,1,30)" rx="2" ry="2" _orig_x="340.9" _orig_width="0.1"/>
<text x="308.91008922443365" y="2047.5" _orig_x="343.88"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (207 samples, 0.03%)</title><rect x="928.4076870281401" y="1797" width="1.214824982841455" height="15.0" fill="rgb(221,59,53)" rx="2" ry="2" _orig_x="633.6" _orig_width="0.3"/>
<text x="931.4076870281401" y="1807.5" _orig_x="636.58"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (148 samples, 0.02%)</title><rect x="1160.8442004118049" y="1893" width="1.214824982841455" height="15.0" fill="rgb(216,150,18)" rx="2" ry="2" _orig_x="691.0" _orig_width="0.3"/>
<text x="1163.8442004118049" y="1903.5" _orig_x="694.01"/>
</g>
<g class="hide">
<title>[unknown] (324 samples, 0.05%)</title><rect x="56.3" y="2037" width="0.5" height="15.0" fill="rgb(216,103,14)" rx="2" ry="2"/>
<text x="59.27" y="2047.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (139 samples, 0.02%)</title><rect x="86.78037062457093" y="1509" width="0.3273850377487989" height="15.0" fill="rgb(243,49,7)" rx="2" ry="2" _orig_x="140.1" _orig_width="0.3"/>
<text x="89.78037062457093" y="1519.5" _orig_x="143.13"/>
</g>
<g>
<title>Row::DeserializeFrom (5,267 samples, 0.78%)</title><rect x="650.2127659574467" y="1877" width="37.65957446808511" height="15.0" fill="rgb(217,105,24)" rx="2" ry="2" _orig_x="564.9" _orig_width="9.3"/>
<text x="653.2127659574467" y="1887.5" _orig_x="567.93">Ro..</text>
</g>
<g>
<title>std::forward&lt;Field*&gt; (108 samples, 0.02%)</title><rect x="894.7975291695261" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(236,211,36)" rx="2" ry="2" _orig_x="625.3" _orig_width="0.2"/>
<text x="897.7975291695261" y="1855.5" _orig_x="628.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(227,180,7)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="1967.5" _orig_x="806.06"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (348 samples, 0.05%)</title><rect x="78.84008236101579" y="1733" width="2.42964996568291" height="15.0" fill="rgb(205,87,2)" rx="2" ry="2" _orig_x="423.8" _orig_width="0.6"/>
<text x="81.84008236101579" y="1743.5" _orig_x="426.78"/>
</g>
<g>
<title>Row::~Row (391 samples, 0.06%)</title><rect x="331.92862045298557" y="1925" width="2.8345916266300617" height="15.0" fill="rgb(224,23,50)" rx="2" ry="2" _orig_x="486.3" _orig_width="0.7"/>
<text x="334.92862045298557" y="1935.5" _orig_x="489.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (221 samples, 0.03%)</title><rect x="12.46396705559359" y="1861" width="0.4365133836650652" height="15.0" fill="rgb(231,139,44)" rx="2" ry="2" _orig_x="72.0" _orig_width="0.4"/>
<text x="15.46396705559359" y="1871.5" _orig_x="74.98"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (2,349 samples, 0.35%)</title><rect x="193.84351407000676" y="1829" width="16.60260809883322" height="15.0" fill="rgb(239,41,15)" rx="2" ry="2" _orig_x="452.2" _orig_width="4.1"/>
<text x="196.84351407000676" y="1839.5" _orig_x="455.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="12.682223747426125" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(242,129,26)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="15.682223747426125" y="1759.5" _orig_x="75.23"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="421" width="1.091283459162663" height="15.0" fill="rgb(214,177,26)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="431.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (74 samples, 0.01%)</title><rect x="306.7831159917638" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(218,26,0)" rx="2" ry="2" _orig_x="341.7" _orig_width="0.1"/>
<text x="309.7831159917638" y="2047.5" _orig_x="344.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,378 samples, 0.50%)</title><rect x="353.7083047357583" y="2005" width="6.547700754975978" height="15.0" fill="rgb(217,89,16)" rx="2" ry="2" _orig_x="384.7" _orig_width="6.0"/>
<text x="356.7083047357583" y="2015.5" _orig_x="387.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,342 samples, 1.09%)</title><rect x="740.0226492793411" y="1925" width="14.077556623198353" height="15.0" fill="rgb(241,78,8)" rx="2" ry="2" _orig_x="738.7" _orig_width="12.9"/>
<text x="743.0226492793411" y="1935.5" _orig_x="741.74"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1301" width="0.1091283459162663" height="15.0" fill="rgb(213,125,24)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1311.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.03%)</title><rect x="66.1" y="1829" width="0.3" height="15.0" fill="rgb(253,54,51)" rx="2" ry="2"/>
<text x="69.05" y="1839.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (195 samples, 0.03%)</title><rect x="212.87577213452283" y="1813" width="1.619766643788607" height="15.0" fill="rgb(232,11,52)" rx="2" ry="2" _orig_x="456.9" _orig_width="0.4"/>
<text x="215.87577213452283" y="1823.5" _orig_x="459.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (297 samples, 0.04%)</title><rect x="1167.3692518874398" y="1573" width="0.5456417295813315" height="15.0" fill="rgb(211,193,13)" rx="2" ry="2" _orig_x="1130.3" _orig_width="0.5"/>
<text x="1170.3692518874398" y="1583.5" _orig_x="1133.29"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (102 samples, 0.02%)</title><rect x="351.77076183939596" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(227,63,52)" rx="2" ry="2" _orig_x="491.2" _orig_width="0.1"/>
<text x="354.77076183939596" y="1855.5" _orig_x="494.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (458 samples, 0.07%)</title><rect x="19.27672955974843" y="1829" width="2.968553459119497" height="15.0" fill="rgb(215,167,34)" rx="2" ry="2" _orig_x="393.2" _orig_width="0.8"/>
<text x="22.27672955974843" y="1839.5" _orig_x="396.18"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (308 samples, 0.05%)</title><rect x="448.14687714481806" y="1765" width="2.0247083047357584" height="15.0" fill="rgb(215,95,3)" rx="2" ry="2" _orig_x="515.0" _orig_width="0.5"/>
<text x="451.14687714481806" y="1775.5" _orig_x="517.95"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (120 samples, 0.02%)</title><rect x="488.236101578586" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(251,111,43)" rx="2" ry="2" _orig_x="524.9" _orig_width="0.2"/>
<text x="491.236101578586" y="1743.5" _orig_x="527.88"/>
</g>
<g class="hide">
<title>[code] (127 samples, 0.02%)</title><rect x="66.6" y="1989" width="0.3" height="15.0" fill="rgb(251,187,3)" rx="2" ry="2"/>
<text x="69.63" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="58.3" y="1989" width="0.1" height="15.0" fill="rgb(250,33,0)" rx="2" ry="2"/>
<text x="61.33" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.02%)</title><rect x="13.0" y="1925" width="0.3" height="15.0" fill="rgb(220,93,21)" rx="2" ry="2"/>
<text x="16.04" y="1935.5"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (663 samples, 0.10%)</title><rect x="249.92724776938908" y="2021" width="1.2004118050789294" height="15.0" fill="rgb(251,188,20)" rx="2" ry="2" _orig_x="289.6" _orig_width="1.1"/>
<text x="252.92724776938908" y="2031.5" _orig_x="292.56"/>
</g>
<g class="hide">
<title>[github-desktop] (83 samples, 0.01%)</title><rect x="14.7" y="1925" width="0.2" height="15.0" fill="rgb(239,2,25)" rx="2" ry="2"/>
<text x="17.74" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (188 samples, 0.03%)</title><rect x="22.7" y="2053" width="0.3" height="15.0" fill="rgb(250,150,45)" rx="2" ry="2"/>
<text x="25.69" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (181 samples, 0.03%)</title><rect x="221.55387783115984" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(222,192,44)" rx="2" ry="2" _orig_x="263.6" _orig_width="0.4"/>
<text x="224.55387783115984" y="1935.5" _orig_x="266.63"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (228 samples, 0.03%)</title><rect x="1024.783802333562" y="1861" width="1.619766643788607" height="15.0" fill="rgb(247,95,21)" rx="2" ry="2" _orig_x="657.4" _orig_width="0.4"/>
<text x="1027.783802333562" y="1871.5" _orig_x="660.43"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (90 samples, 0.01%)</title><rect x="262.6835964310226" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(227,8,41)" rx="2" ry="2" _orig_x="469.2" _orig_width="0.2"/>
<text x="265.6835964310226" y="1775.5" _orig_x="472.22"/>
</g>
<g class="hide">
<title>malloc (106 samples, 0.02%)</title><rect x="785.092656142759" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(252,37,42)" rx="2" ry="2" _orig_x="780.0" _orig_width="0.1"/>
<text x="788.092656142759" y="2047.5" _orig_x="782.95"/>
</g>
<g class="hide">
<title>dbus-daemon (1,923 samples, 0.29%)</title><rect x="207.5" y="2069" width="3.4" height="15.0" fill="rgb(216,19,1)" rx="2" ry="2"/>
<text x="210.51" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,056 samples, 0.45%)</title><rect x="722.9986273164035" y="1813" width="5.892930679478381" height="15.0" fill="rgb(216,150,9)" rx="2" ry="2" _orig_x="723.1" _orig_width="5.4"/>
<text x="725.9986273164035" y="1823.5" _orig_x="726.12"/>
</g>
<g class="hide">
<title>runtime.selectgo (262 samples, 0.04%)</title><rect x="159.67810569663686" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(244,1,28)" rx="2" ry="2" _orig_x="206.9" _orig_width="0.4"/>
<text x="162.67810569663686" y="2015.5" _orig_x="209.88"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1621" width="1.091283459162663" height="15.0" fill="rgb(206,224,43)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1631.5" _orig_x="301.96"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (747 samples, 0.11%)</title><rect x="44.42004118050789" y="1813" width="5.264241592312972" height="15.0" fill="rgb(239,203,22)" rx="2" ry="2" _orig_x="415.3" _orig_width="1.3"/>
<text x="47.42004118050789" y="1823.5" _orig_x="418.29"/>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (92 samples, 0.01%)</title><rect x="266.9512697323266" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(238,172,4)" rx="2" ry="2" _orig_x="305.2" _orig_width="0.2"/>
<text x="269.9512697323266" y="2015.5" _orig_x="308.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="13.1" y="1893" width="0.2" height="15.0" fill="rgb(210,59,31)" rx="2" ry="2"/>
<text x="16.07" y="1903.5"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (3,229 samples, 0.48%)</title><rect x="143.7" y="2053" width="5.7" height="15.0" fill="rgb(219,95,41)" rx="2" ry="2"/>
<text x="146.75" y="2063.5"/>
</g>
<g>
<title>__xstat64 (570 samples, 0.08%)</title><rect x="54.54358270418668" y="1829" width="4.049416609471517" height="15.0" fill="rgb(244,55,46)" rx="2" ry="2" _orig_x="417.8" _orig_width="1.0"/>
<text x="57.54358270418668" y="1839.5" _orig_x="420.78"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (115 samples, 0.02%)</title><rect x="766.4310226492794" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(244,175,5)" rx="2" ry="2" _orig_x="593.6" _orig_width="0.2"/>
<text x="769.4310226492794" y="1775.5" _orig_x="596.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="66.15511324639661" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(213,213,7)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1967.5" _orig_x="124.18"/>
</g>
<g class="hide">
<title>[code] (91 samples, 0.01%)</title><rect x="66.7" y="1925" width="0.1" height="15.0" fill="rgb(237,80,18)" rx="2" ry="2"/>
<text x="69.69" y="1935.5"/>
</g>
<g>
<title>Schema::GetColumnCount (150 samples, 0.02%)</title><rect x="857.5428963623885" y="1877" width="1.214824982841455" height="15.0" fill="rgb(212,195,1)" rx="2" ry="2" _orig_x="616.1" _orig_width="0.3"/>
<text x="860.5428963623885" y="1887.5" _orig_x="619.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (292 samples, 0.04%)</title><rect x="177.68428277282078" y="1845" width="0.5456417295813315" height="15.0" fill="rgb(244,143,44)" rx="2" ry="2" _orig_x="223.4" _orig_width="0.5"/>
<text x="180.68428277282078" y="1855.5" _orig_x="226.38"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (244 samples, 0.04%)</title><rect x="563.1503088538091" y="1845" width="1.619766643788607" height="15.0" fill="rgb(209,20,41)" rx="2" ry="2" _orig_x="543.4" _orig_width="0.4"/>
<text x="566.1503088538091" y="1855.5" _orig_x="546.38"/>
</g>
<g class="hide">
<title>[perf-105834.map] (811 samples, 0.12%)</title><rect x="61.8" y="2037" width="1.4" height="15.0" fill="rgb(206,86,19)" rx="2" ry="2"/>
<text x="64.78" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (504 samples, 0.07%)</title><rect x="332.10089224433756" y="2005" width="0.9821551132463967" height="15.0" fill="rgb(236,33,21)" rx="2" ry="2" _orig_x="364.9" _orig_width="0.9"/>
<text x="335.10089224433756" y="2015.5" _orig_x="367.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (303 samples, 0.04%)</title><rect x="178.8846945778997" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(211,208,10)" rx="2" ry="2" _orig_x="224.5" _orig_width="0.6"/>
<text x="181.8846945778997" y="2047.5" _orig_x="227.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (446 samples, 0.07%)</title><rect x="220.35346602608087" y="1925" width="0.8730267673301304" height="15.0" fill="rgb(217,69,16)" rx="2" ry="2" _orig_x="262.5" _orig_width="0.8"/>
<text x="223.35346602608087" y="1935.5" _orig_x="265.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,066 samples, 0.46%)</title><rect x="91.03637611530533" y="2021" width="5.892930679478381" height="15.0" fill="rgb(220,221,30)" rx="2" ry="2" _orig_x="144.0" _orig_width="5.4"/>
<text x="94.03637611530533" y="2031.5" _orig_x="147.03"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (98 samples, 0.01%)</title><rect x="254.1798215511325" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(248,157,18)" rx="2" ry="2" _orig_x="467.1" _orig_width="0.2"/>
<text x="257.1798215511325" y="1887.5" _orig_x="470.11"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,192 samples, 0.18%)</title><rect x="164.6877144818119" y="1797" width="8.503774879890186" height="15.0" fill="rgb(253,28,36)" rx="2" ry="2" _orig_x="445.0" _orig_width="2.1"/>
<text x="167.6877144818119" y="1807.5" _orig_x="448.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="84.59780370624561" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(250,117,41)" rx="2" ry="2" _orig_x="138.1" _orig_width="0.2"/>
<text x="87.59780370624561" y="1903.5" _orig_x="141.06"/>
</g>
<g class="hide">
<title>malloc (702 samples, 0.10%)</title><rect x="793.9" y="2053" width="1.2" height="15.0" fill="rgb(225,38,23)" rx="2" ry="2"/>
<text x="796.85" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (122 samples, 0.02%)</title><rect x="69.86547700754966" y="1749" width="0.3273850377487989" height="15.0" fill="rgb(209,109,41)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1759.5" _orig_x="127.64"/>
</g>
<g>
<title>std::unordered_map&lt;unsigned int, IndexInfo*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt; &gt;::find (299 samples, 0.04%)</title><rect x="1097.6733013040493" y="1941" width="2.0247083047357584" height="15.0" fill="rgb(224,118,53)" rx="2" ry="2" _orig_x="675.4" _orig_width="0.5"/>
<text x="1100.6733013040493" y="1951.5" _orig_x="678.39"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (553 samples, 0.08%)</title><rect x="599.1901166781054" y="1845" width="4.049416609471517" height="15.0" fill="rgb(241,210,24)" rx="2" ry="2" _orig_x="552.3" _orig_width="1.0"/>
<text x="602.1901166781054" y="1855.5" _orig_x="555.33"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (63 samples, 0.01%)</title><rect x="611.3383665065201" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(234,28,37)" rx="2" ry="2" _orig_x="555.3" _orig_width="0.1"/>
<text x="614.3383665065201" y="1807.5" _orig_x="558.29"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (69 samples, 0.01%)</title><rect x="696.3761153054219" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(224,47,7)" rx="2" ry="2" _orig_x="576.3" _orig_width="0.1"/>
<text x="699.3761153054219" y="1775.5" _orig_x="579.27"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (963 samples, 0.14%)</title><rect x="1105.7721345229922" y="1909" width="6.884008236101578" height="15.0" fill="rgb(235,48,36)" rx="2" ry="2" _orig_x="677.4" _orig_width="1.7"/>
<text x="1108.7721345229922" y="1919.5" _orig_x="680.45"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1381" width="2.182566918325326" height="15.0" fill="rgb(225,59,34)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1391.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (1,293 samples, 0.19%)</title><rect x="58.51612903225797" y="1973" width="2.400823610157859" height="15.0" fill="rgb(226,98,38)" rx="2" ry="2" _orig_x="114.2" _orig_width="2.2"/>
<text x="61.51612903225797" y="1983.5" _orig_x="117.17"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (62 samples, 0.01%)</title><rect x="593.1159917638981" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(235,151,24)" rx="2" ry="2" _orig_x="550.8" _orig_width="0.1"/>
<text x="596.1159917638981" y="1823.5" _orig_x="553.79"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (365 samples, 0.05%)</title><rect x="1036.5271105010293" y="1781" width="2.42964996568291" height="15.0" fill="rgb(232,142,12)" rx="2" ry="2" _orig_x="660.3" _orig_width="0.6"/>
<text x="1039.5271105010293" y="1791.5" _orig_x="663.25"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (146 samples, 0.02%)</title><rect x="702.8551818805764" y="1861" width="1.214824982841455" height="15.0" fill="rgb(245,101,8)" rx="2" ry="2" _orig_x="577.9" _orig_width="0.3"/>
<text x="705.8551818805764" y="1871.5" _orig_x="580.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="168.40837336993815" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(214,216,41)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="2015.5" _orig_x="217.93"/>
</g>
<g class="hide">
<title>__libc_start_main (270 samples, 0.04%)</title><rect x="223.9" y="2053" width="0.5" height="15.0" fill="rgb(216,137,12)" rx="2" ry="2"/>
<text x="226.92" y="2063.5"/>
</g>
<g class="hide">
<title>g_ptr_array_remove_range (61 samples, 0.01%)</title><rect x="337.3" y="2053" width="0.1" height="15.0" fill="rgb(217,56,25)" rx="2" ry="2"/>
<text x="340.34" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (639 samples, 0.09%)</title><rect x="260.1853122855181" y="1957" width="1.2004118050789294" height="15.0" fill="rgb(252,53,22)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1967.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>_pthread_cleanup_push (87 samples, 0.01%)</title><rect x="69.31983527796832" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(229,210,41)" rx="2" ry="2" _orig_x="124.1" _orig_width="0.1"/>
<text x="72.31983527796832" y="2047.5" _orig_x="127.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (277 samples, 0.04%)</title><rect x="308.96568291008913" y="2005" width="0.5456417295813315" height="15.0" fill="rgb(215,169,8)" rx="2" ry="2" _orig_x="343.7" _orig_width="0.5"/>
<text x="311.96568291008913" y="2015.5" _orig_x="346.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,327 samples, 0.35%)</title><rect x="126.7213452299244" y="1717" width="4.365133836650652" height="15.0" fill="rgb(246,39,21)" rx="2" ry="2" _orig_x="176.7" _orig_width="4.0"/>
<text x="129.7213452299244" y="1727.5" _orig_x="179.66"/>
</g>
<g class="hide">
<title>[unknown] (1,132 samples, 0.17%)</title><rect x="58.73438572409051" y="293" width="2.182566918325326" height="15.0" fill="rgb(236,32,14)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="303.5" _orig_x="117.41"/>
</g>
<g>
<title>CatalogManager::GetTableIndexes (970 samples, 0.14%)</title><rect x="1094.4337680164722" y="1957" width="6.884008236101578" height="15.0" fill="rgb(244,75,15)" rx="2" ry="2" _orig_x="674.6" _orig_width="1.7"/>
<text x="1097.4337680164722" y="1967.5" _orig_x="677.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (280 samples, 0.04%)</title><rect x="194.7083047357583" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(231,100,29)" rx="2" ry="2" _orig_x="239.0" _orig_width="0.5"/>
<text x="197.7083047357583" y="1983.5" _orig_x="241.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="169.28140013726824" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(212,201,29)" rx="2" ry="2" _orig_x="215.7" _orig_width="0.1"/>
<text x="172.28140013726824" y="1855.5" _orig_x="218.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (174 samples, 0.03%)</title><rect x="270.9890185312284" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(254,85,12)" rx="2" ry="2" _orig_x="308.9" _orig_width="0.3"/>
<text x="273.9890185312284" y="1951.5" _orig_x="311.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (283 samples, 0.04%)</title><rect x="159.01853122855186" y="1749" width="2.0247083047357584" height="15.0" fill="rgb(242,219,5)" rx="2" ry="2" _orig_x="443.6" _orig_width="0.5"/>
<text x="162.01853122855186" y="1759.5" _orig_x="446.60"/>
</g>
<g>
<title>std::_Destroy&lt;Field**&gt; (78 samples, 0.01%)</title><rect x="1073.3768016472202" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(238,199,42)" rx="2" ry="2" _orig_x="669.4" _orig_width="0.2"/>
<text x="1076.3768016472202" y="1887.5" _orig_x="672.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="728.6733013040492" y="1685" width="0.2182566918325326" height="15.0" fill="rgb(254,40,50)" rx="2" ry="2" _orig_x="728.3" _orig_width="0.2"/>
<text x="731.6733013040492" y="1695.5" _orig_x="731.33"/>
</g>
<g>
<title>DiskManager::IsPageFree (448 samples, 0.07%)</title><rect x="716.2182566918326" y="1893" width="3.239533287577214" height="15.0" fill="rgb(219,221,36)" rx="2" ry="2" _orig_x="581.2" _orig_width="0.8"/>
<text x="719.2182566918326" y="1903.5" _orig_x="584.19"/>
</g>
<g>
<title>[libminisql_shared.so] (58 samples, 0.01%)</title><rect x="765.621139327385" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(237,171,34)" rx="2" ry="2" _orig_x="593.4" _orig_width="0.2"/>
<text x="768.621139327385" y="1791.5" _orig_x="596.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,125 samples, 0.46%)</title><rect x="137.0885380919697" y="1941" width="6.002059025394646" height="15.0" fill="rgb(206,70,19)" rx="2" ry="2" _orig_x="186.2" _orig_width="5.5"/>
<text x="140.0885380919697" y="1951.5" _orig_x="189.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,695 samples, 1.59%)</title><rect x="757.264927934111" y="1989" width="20.516129032258064" height="15.0" fill="rgb(228,4,1)" rx="2" ry="2" _orig_x="754.5" _orig_width="18.8"/>
<text x="760.264927934111" y="1999.5" _orig_x="757.54">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (101 samples, 0.01%)</title><rect x="161.86067261496217" y="1829" width="0.2182566918325326" height="15.0" fill="rgb(219,149,10)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1839.5" _orig_x="211.94"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (223 samples, 0.03%)</title><rect x="332.3335621139326" y="1877" width="1.619766643788607" height="15.0" fill="rgb(253,162,47)" rx="2" ry="2" _orig_x="486.4" _orig_width="0.4"/>
<text x="335.3335621139326" y="1887.5" _orig_x="489.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="362.2" y="2053" width="0.4" height="15.0" fill="rgb(228,99,41)" rx="2" ry="2"/>
<text x="365.23" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="209.87714481811935" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(217,10,31)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="1967.5" _orig_x="255.93"/>
</g>
<g class="hide">
<title>[code] (113 samples, 0.02%)</title><rect x="14.31914893617012" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(228,117,51)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1919.5" _orig_x="76.73"/>
</g>
<g class="hide">
<title>Thread::call_run (64 samples, 0.01%)</title><rect x="13.8" y="2021" width="0.1" height="15.0" fill="rgb(225,0,54)" rx="2" ry="2"/>
<text x="16.77" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="725" width="2.182566918325326" height="15.0" fill="rgb(218,35,16)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="735.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.02%)</title><rect x="58.0" y="1909" width="0.2" height="15.0" fill="rgb(247,157,0)" rx="2" ry="2"/>
<text x="60.97" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,851 samples, 0.42%)</title><rect x="1170.9" y="1717" width="5.0" height="15.0" fill="rgb(253,29,19)" rx="2" ry="2"/>
<text x="1173.94" y="1727.5"/>
</g>
<g class="hide">
<title>[unknown] (315 samples, 0.05%)</title><rect x="73.5" y="2053" width="0.5" height="15.0" fill="rgb(224,24,16)" rx="2" ry="2"/>
<text x="76.46" y="2063.5"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (74 samples, 0.01%)</title><rect x="1039.3617021276596" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(253,181,30)" rx="2" ry="2" _orig_x="661.0" _orig_width="0.1"/>
<text x="1042.3617021276596" y="1775.5" _orig_x="663.99"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (80 samples, 0.01%)</title><rect x="104.3514070006864" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(238,128,10)" rx="2" ry="2" _orig_x="430.1" _orig_width="0.2"/>
<text x="107.3514070006864" y="1791.5" _orig_x="433.12"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (212 samples, 0.03%)</title><rect x="737.6801647220315" y="1845" width="1.619766643788607" height="15.0" fill="rgb(249,12,53)" rx="2" ry="2" _orig_x="586.5" _orig_width="0.4"/>
<text x="740.6801647220315" y="1855.5" _orig_x="589.49"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (602 samples, 0.09%)</title><rect x="517.391901166781" y="1781" width="4.454358270418669" height="15.0" fill="rgb(254,88,46)" rx="2" ry="2" _orig_x="532.1" _orig_width="1.1"/>
<text x="520.391901166781" y="1791.5" _orig_x="535.13"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (104 samples, 0.02%)</title><rect x="682.6080988332188" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(228,225,18)" rx="2" ry="2" _orig_x="572.9" _orig_width="0.2"/>
<text x="685.6080988332188" y="1839.5" _orig_x="575.94"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (61 samples, 0.01%)</title><rect x="355.41523678792043" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(232,207,3)" rx="2" ry="2" _orig_x="492.1" _orig_width="0.1"/>
<text x="358.41523678792043" y="1887.5" _orig_x="495.08"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (643 samples, 0.10%)</title><rect x="729.5813315030884" y="1893" width="4.85929993136582" height="15.0" fill="rgb(239,55,13)" rx="2" ry="2" _orig_x="584.5" _orig_width="1.2"/>
<text x="732.5813315030884" y="1903.5" _orig_x="587.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="14.5" y="1813" width="0.1" height="15.0" fill="rgb(251,4,12)" rx="2" ry="2"/>
<text x="17.49" y="1823.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (431 samples, 0.06%)</title><rect x="327.0693205216198" y="1925" width="2.8345916266300617" height="15.0" fill="rgb(220,90,42)" rx="2" ry="2" _orig_x="485.1" _orig_width="0.7"/>
<text x="330.0693205216198" y="1935.5" _orig_x="488.09"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (92 samples, 0.01%)</title><rect x="892.3678792038436" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(244,77,23)" rx="2" ry="2" _orig_x="624.7" _orig_width="0.2"/>
<text x="895.3678792038436" y="1855.5" _orig_x="627.72"/>
</g>
<g class="hide">
<title>[unknown]  (212 samples, 0.03%)</title><rect x="122.1" y="2053" width="0.4" height="15.0" fill="rgb(234,209,46)" rx="2" ry="2"/>
<text x="125.09" y="2063.5"/>
</g>
<g class="hide">
<title>__tls_get_addr (59 samples, 0.01%)</title><rect x="62.6" y="1989" width="0.1" height="15.0" fill="rgb(227,85,44)" rx="2" ry="2"/>
<text x="65.63" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (152 samples, 0.02%)</title><rect x="341.6" y="2053" width="0.2" height="15.0" fill="rgb(248,105,20)" rx="2" ry="2"/>
<text x="344.55" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (134 samples, 0.02%)</title><rect x="342.6" y="2053" width="0.2" height="15.0" fill="rgb(209,93,11)" rx="2" ry="2"/>
<text x="345.55" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (157 samples, 0.02%)</title><rect x="732.8208647906655" y="1829" width="1.214824982841455" height="15.0" fill="rgb(234,28,25)" rx="2" ry="2" _orig_x="585.3" _orig_width="0.3"/>
<text x="735.8208647906655" y="1839.5" _orig_x="588.30"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="469" width="1.091283459162663" height="15.0" fill="rgb(242,24,2)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="479.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (525 samples, 0.08%)</title><rect x="103.91352093342476" y="1957" width="0.9821551132463967" height="15.0" fill="rgb(231,174,24)" rx="2" ry="2" _orig_x="155.8" _orig_width="0.9"/>
<text x="106.91352093342476" y="1967.5" _orig_x="158.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (542 samples, 0.08%)</title><rect x="211.40494166094706" y="1813" width="1.091283459162663" height="15.0" fill="rgb(208,18,31)" rx="2" ry="2" _orig_x="254.3" _orig_width="1.0"/>
<text x="214.40494166094706" y="1823.5" _orig_x="257.34"/>
</g>
<g class="hide">
<title>[code] (62 samples, 0.01%)</title><rect x="14.3" y="1717" width="0.1" height="15.0" fill="rgb(227,120,15)" rx="2" ry="2"/>
<text x="17.31" y="1727.5"/>
</g>
<g>
<title>[[kernel.kallsyms]] (143 samples, 0.02%)</title><rect x="57.3781743308167" y="1589" width="1.214824982841455" height="15.0" fill="rgb(215,225,26)" rx="2" ry="2" _orig_x="418.5" _orig_width="0.3"/>
<text x="60.3781743308167" y="1599.5" _orig_x="421.53"/>
</g>
<g class="hide">
<title>__strncpy_avx2 (318 samples, 0.05%)</title><rect x="782.8009608785173" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(207,227,15)" rx="2" ry="2" _orig_x="777.9" _orig_width="0.6"/>
<text x="785.8009608785173" y="2047.5" _orig_x="780.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="29.4" y="1941" width="0.1" height="15.0" fill="rgb(220,150,0)" rx="2" ry="2"/>
<text x="32.35" y="1951.5"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (2,871 samples, 0.43%)</title><rect x="715.0034317089909" y="1925" width="20.247083047357584" height="15.0" fill="rgb(230,31,16)" rx="2" ry="2" _orig_x="580.9" _orig_width="5.0"/>
<text x="718.0034317089909" y="1935.5" _orig_x="583.85"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (92 samples, 0.01%)</title><rect x="619.8421413864103" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(237,117,26)" rx="2" ry="2" _orig_x="557.4" _orig_width="0.1"/>
<text x="622.8421413864103" y="1839.5" _orig_x="560.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.02%)</title><rect x="161.86067261496217" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(228,2,12)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1951.5" _orig_x="211.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.03%)</title><rect x="347.5971173644474" y="1765" width="0.3273850377487989" height="15.0" fill="rgb(250,176,17)" rx="2" ry="2" _orig_x="379.1" _orig_width="0.3"/>
<text x="350.5971173644474" y="1775.5" _orig_x="382.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (309 samples, 0.05%)</title><rect x="69.7" y="2005" width="0.5" height="15.0" fill="rgb(234,223,29)" rx="2" ry="2"/>
<text x="72.68" y="2015.5"/>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (100 samples, 0.01%)</title><rect x="103.47700754975969" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(235,160,19)" rx="2" ry="2" _orig_x="155.4" _orig_width="0.1"/>
<text x="106.47700754975969" y="1951.5" _orig_x="158.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.01%)</title><rect x="807.9004804392586" y="1605" width="0.2182566918325326" height="15.0" fill="rgb(239,125,0)" rx="2" ry="2" _orig_x="800.9" _orig_width="0.2"/>
<text x="810.9004804392586" y="1615.5" _orig_x="803.91"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1029" width="2.182566918325326" height="15.0" fill="rgb(220,156,53)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1039.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1925" width="0.5456417295813315" height="15.0" fill="rgb(252,112,31)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1935.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>fribidi_get_par_embedding_levels_ex (315 samples, 0.05%)</title><rect x="260.7309540150994" y="37" width="0.5456417295813315" height="15.0" fill="rgb(216,50,21)" rx="2" ry="2" _orig_x="299.5" _orig_width="0.5"/>
<text x="263.7309540150994" y="47.5" _orig_x="302.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="1185.3" y="1797" width="0.1" height="15.0" fill="rgb(252,83,32)" rx="2" ry="2"/>
<text x="1188.26" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="901" width="2.182566918325326" height="15.0" fill="rgb(230,203,47)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="911.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="17.3" y="1957" width="0.1" height="15.0" fill="rgb(223,153,53)" rx="2" ry="2"/>
<text x="20.30" y="1967.5"/>
</g>
<g class="hide">
<title>ntfs_pwrite (61 samples, 0.01%)</title><rect x="728.8915579958818" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(253,191,47)" rx="2" ry="2" _orig_x="728.5" _orig_width="0.1"/>
<text x="731.8915579958818" y="2015.5" _orig_x="731.48"/>
</g>
<g>
<title>__xstat64 (101 samples, 0.01%)</title><rect x="355.82017844886747" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(236,26,30)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1903.5" _orig_x="495.23"/>
</g>
<g>
<title>BPlusTree::Insert (48,674 samples, 7.23%)</title><rect x="363.51407000686345" y="1941" width="345.4152367879204" height="15.0" fill="rgb(246,124,37)" rx="2" ry="2" _orig_x="494.1" _orig_width="85.3"/>
<text x="366.51407000686345" y="1951.5" _orig_x="497.10">BPlusTree::Insert </text>
</g>
<g>
<title>Field::CompareLessThan (175 samples, 0.03%)</title><rect x="152.1345229924501" y="1877" width="1.214824982841455" height="15.0" fill="rgb(223,136,29)" rx="2" ry="2" _orig_x="441.9" _orig_width="0.3"/>
<text x="155.1345229924501" y="1887.5" _orig_x="444.90"/>
</g>
<g class="hide">
<title>dixLookupResourceByClass (62 samples, 0.01%)</title><rect x="62.88126286890862" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(252,157,2)" rx="2" ry="2" _orig_x="118.2" _orig_width="0.1"/>
<text x="65.88126286890862" y="2047.5" _orig_x="121.21"/>
</g>
<g class="hide">
<title>__xstat64 (167 samples, 0.02%)</title><rect x="56.4" y="2021" width="0.3" height="15.0" fill="rgb(232,165,51)" rx="2" ry="2"/>
<text x="59.44" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (121 samples, 0.02%)</title><rect x="201.69251887439938" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(207,1,7)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.2"/>
<text x="204.69251887439938" y="1967.5" _orig_x="248.38"/>
</g>
<g class="hide">
<title>[perf-123151.map] (333 samples, 0.05%)</title><rect x="88.19903912148241" y="1861" width="0.6547700754975978" height="15.0" fill="rgb(230,158,7)" rx="2" ry="2" _orig_x="141.4" _orig_width="0.6"/>
<text x="91.19903912148241" y="1871.5" _orig_x="144.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="14.5" y="1829" width="0.1" height="15.0" fill="rgb(251,174,46)" rx="2" ry="2"/>
<text x="17.49" y="1839.5"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt; &gt;::find (201 samples, 0.03%)</title><rect x="1095.6485929993135" y="1941" width="1.619766643788607" height="15.0" fill="rgb(234,46,26)" rx="2" ry="2" _orig_x="674.9" _orig_width="0.4"/>
<text x="1098.6485929993135" y="1951.5" _orig_x="677.94"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="501" width="1.091283459162663" height="15.0" fill="rgb(242,131,10)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="511.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,999 samples, 1.34%)</title><rect x="1150.7817433081673" y="1765" width="17.242278654770075" height="15.0" fill="rgb(247,122,27)" rx="2" ry="2" _orig_x="1115.1" _orig_width="15.8"/>
<text x="1153.7817433081673" y="1775.5" _orig_x="1118.12">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>__strlen_avx2 (1,050 samples, 0.16%)</title><rect x="780.7275223061083" y="2037" width="1.9643102264927934" height="15.0" fill="rgb(238,209,21)" rx="2" ry="2" _orig_x="776.0" _orig_width="1.8"/>
<text x="783.7275223061083" y="2047.5" _orig_x="779.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.02%)</title><rect x="13.336993822923718" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(243,193,50)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1951.5" _orig_x="75.79"/>
</g>
<g class="hide">
<title>__evlist__enable (71 samples, 0.01%)</title><rect x="805.4996568291008" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(214,123,38)" rx="2" ry="2" _orig_x="798.7" _orig_width="0.2"/>
<text x="808.4996568291008" y="1999.5" _orig_x="801.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="809.9739190116677" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(207,112,3)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1999.5" _orig_x="805.83"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (519 samples, 0.08%)</title><rect x="376.067261496225" y="1813" width="4.049416609471517" height="15.0" fill="rgb(249,117,20)" rx="2" ry="2" _orig_x="497.2" _orig_width="1.0"/>
<text x="379.067261496225" y="1823.5" _orig_x="500.25"/>
</g>
<g class="hide">
<title>g_mutex_unlock (152 samples, 0.02%)</title><rect x="52.9" y="2037" width="0.2" height="15.0" fill="rgb(219,219,51)" rx="2" ry="2"/>
<text x="55.87" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.02%)</title><rect x="161.86067261496217" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(249,59,19)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1903.5" _orig_x="211.89"/>
</g>
<g>
<title>DiskManager::IsPageFree (63 samples, 0.01%)</title><rect x="1143.8366506520244" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(206,3,11)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.1"/>
<text x="1146.8366506520244" y="1807.5" _orig_x="689.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (224 samples, 0.03%)</title><rect x="212.05971173644468" y="1685" width="0.4365133836650652" height="15.0" fill="rgb(243,174,38)" rx="2" ry="2" _orig_x="254.9" _orig_width="0.4"/>
<text x="215.05971173644468" y="1695.5" _orig_x="257.89"/>
</g>
<g class="hide">
<title>[unknown] (61 samples, 0.01%)</title><rect x="736.6396705559367" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(250,36,11)" rx="2" ry="2" _orig_x="735.6" _orig_width="0.1"/>
<text x="739.6396705559367" y="1967.5" _orig_x="738.62"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (58 samples, 0.01%)</title><rect x="223.80919698009612" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(245,206,41)" rx="2" ry="2" _orig_x="459.6" _orig_width="0.1"/>
<text x="226.80919698009612" y="1871.5" _orig_x="462.58"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (957 samples, 0.14%)</title><rect x="77.6252573781743" y="1781" width="6.884008236101578" height="15.0" fill="rgb(252,93,4)" rx="2" ry="2" _orig_x="423.5" _orig_width="1.7"/>
<text x="80.6252573781743" y="1791.5" _orig_x="426.52"/>
</g>
<g class="hide">
<title>g_mutex_unlock (76 samples, 0.01%)</title><rect x="32.1" y="2021" width="0.2" height="15.0" fill="rgb(208,145,2)" rx="2" ry="2"/>
<text x="35.14" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (389 samples, 0.06%)</title><rect x="19.64779874213845" y="1813" width="2.59748427672956" height="15.0" fill="rgb(226,185,35)" rx="2" ry="2" _orig_x="393.3" _orig_width="0.7"/>
<text x="22.64779874213845" y="1823.5" _orig_x="396.30"/>
</g>
<g class="hide">
<title>__strdup (76 samples, 0.01%)</title><rect x="712.958819492107" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(238,110,20)" rx="2" ry="2" _orig_x="713.9" _orig_width="0.1"/>
<text x="715.958819492107" y="2031.5" _orig_x="716.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.02%)</title><rect x="10.717913520933335" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(236,26,36)" rx="2" ry="2" _orig_x="70.4" _orig_width="0.1"/>
<text x="13.717913520933335" y="1935.5" _orig_x="73.36"/>
</g>
<g>
<title>malloc (60 samples, 0.01%)</title><rect x="840.9402882635552" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(244,8,2)" rx="2" ry="2" _orig_x="612.0" _orig_width="0.1"/>
<text x="843.9402882635552" y="1743.5" _orig_x="614.98"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (86 samples, 0.01%)</title><rect x="200.38297872340414" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(221,61,3)" rx="2" ry="2" _orig_x="244.2" _orig_width="0.2"/>
<text x="203.38297872340414" y="1999.5" _orig_x="247.20"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (108 samples, 0.02%)</title><rect x="109.6156485929992" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(233,118,28)" rx="2" ry="2" _orig_x="431.4" _orig_width="0.2"/>
<text x="112.6156485929992" y="1759.5" _orig_x="434.44"/>
</g>
<g>
<title>Row::Row (490 samples, 0.07%)</title><rect x="226.64378860672613" y="1877" width="3.239533287577214" height="15.0" fill="rgb(207,1,15)" rx="2" ry="2" _orig_x="460.3" _orig_width="0.8"/>
<text x="229.64378860672613" y="1887.5" _orig_x="463.28"/>
</g>
<g class="hide">
<title>[libc-2.31.so] (105 samples, 0.02%)</title><rect x="713.2862045298558" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(212,57,37)" rx="2" ry="2" _orig_x="714.2" _orig_width="0.2"/>
<text x="716.2862045298558" y="2047.5" _orig_x="717.19"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (88 samples, 0.01%)</title><rect x="48.064516129032164" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(247,73,25)" rx="2" ry="2" _orig_x="416.2" _orig_width="0.2"/>
<text x="51.064516129032164" y="1727.5" _orig_x="419.24"/>
</g>
<g class="hide">
<title>[[vdso]] (306 samples, 0.05%)</title><rect x="90.16334934797518" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(241,7,38)" rx="2" ry="2" _orig_x="143.2" _orig_width="0.5"/>
<text x="93.16334934797518" y="2047.5" _orig_x="146.19"/>
</g>
<g>
<title>DiskManager::IsPageFree (92 samples, 0.01%)</title><rect x="148.49004804392584" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(232,79,21)" rx="2" ry="2" _orig_x="441.0" _orig_width="0.1"/>
<text x="151.49004804392584" y="1871.5" _orig_x="443.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.02%)</title><rect x="169.0631434454357" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(216,45,39)" rx="2" ry="2" _orig_x="215.5" _orig_width="0.3"/>
<text x="172.0631434454357" y="1951.5" _orig_x="218.50"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (150 samples, 0.02%)</title><rect x="127.433081674674" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(240,67,52)" rx="2" ry="2" _orig_x="435.8" _orig_width="0.2"/>
<text x="130.43308167467399" y="1823.5" _orig_x="438.76"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,209 samples, 0.18%)</title><rect x="310.87165408373374" y="1925" width="8.503774879890186" height="15.0" fill="rgb(250,203,40)" rx="2" ry="2" _orig_x="481.1" _orig_width="2.1"/>
<text x="313.87165408373374" y="1935.5" _orig_x="484.12"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (58 samples, 0.01%)</title><rect x="140.79615648593003" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(215,40,17)" rx="2" ry="2" _orig_x="439.1" _orig_width="0.1"/>
<text x="143.79615648593003" y="1775.5" _orig_x="442.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (465 samples, 0.07%)</title><rect x="61.571722717913424" y="1877" width="0.8730267673301304" height="15.0" fill="rgb(226,130,41)" rx="2" ry="2" _orig_x="117.0" _orig_width="0.8"/>
<text x="64.57172271791342" y="1887.5" _orig_x="119.99"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (128 samples, 0.02%)</title><rect x="1038.9567604667122" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(230,213,6)" rx="2" ry="2" _orig_x="660.9" _orig_width="0.2"/>
<text x="1041.9567604667122" y="1791.5" _orig_x="663.89"/>
</g>
<g>
<title>Row::~Row (581 samples, 0.09%)</title><rect x="326.66437886067257" y="1957" width="4.454358270418669" height="15.0" fill="rgb(226,92,29)" rx="2" ry="2" _orig_x="485.0" _orig_width="1.1"/>
<text x="329.66437886067257" y="1967.5" _orig_x="488.04"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (2,474 samples, 0.37%)</title><rect x="193.03363074811253" y="1845" width="17.412491420727523" height="15.0" fill="rgb(245,132,11)" rx="2" ry="2" _orig_x="452.0" _orig_width="4.3"/>
<text x="196.03363074811253" y="1855.5" _orig_x="455.01"/>
</g>
<g class="hide">
<title>JVM_Sleep (165 samples, 0.02%)</title><rect x="18.8" y="2021" width="0.3" height="15.0" fill="rgb(252,54,22)" rx="2" ry="2"/>
<text x="21.78" y="2031.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (197 samples, 0.03%)</title><rect x="217.33013040494163" y="1829" width="1.619766643788607" height="15.0" fill="rgb(219,28,29)" rx="2" ry="2" _orig_x="458.0" _orig_width="0.4"/>
<text x="220.33013040494163" y="1839.5" _orig_x="461.05"/>
</g>
<g class="hide">
<title>[unknown] (591 samples, 0.09%)</title><rect x="1187.7" y="2053" width="1.0" height="15.0" fill="rgb(254,95,21)" rx="2" ry="2"/>
<text x="1190.66" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (90 samples, 0.01%)</title><rect x="244.4612216884007" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(226,139,45)" rx="2" ry="2" _orig_x="464.7" _orig_width="0.1"/>
<text x="247.4612216884007" y="1807.5" _orig_x="467.67"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1653" width="0.1091283459162663" height="15.0" fill="rgb(245,19,2)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1663.5" _orig_x="142.76"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,307 samples, 0.19%)</title><rect x="672.4845573095399" y="1861" width="9.313658201784488" height="15.0" fill="rgb(231,188,5)" rx="2" ry="2" _orig_x="570.4" _orig_width="2.3"/>
<text x="675.4845573095399" y="1871.5" _orig_x="573.37"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (220 samples, 0.03%)</title><rect x="73.98078242964999" y="1733" width="1.619766643788607" height="15.0" fill="rgb(218,162,43)" rx="2" ry="2" _orig_x="422.6" _orig_width="0.4"/>
<text x="76.98078242964999" y="1743.5" _orig_x="425.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="340.7220315717226" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(215,201,45)" rx="2" ry="2" _orig_x="372.8" _orig_width="0.1"/>
<text x="343.7220315717226" y="1887.5" _orig_x="375.81"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::new_allocator (109 samples, 0.02%)</title><rect x="1003.7268359643103" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(234,181,8)" rx="2" ry="2" _orig_x="652.2" _orig_width="0.2"/>
<text x="1006.7268359643103" y="1823.5" _orig_x="655.23"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,026 samples, 0.15%)</title><rect x="85.31914893617008" y="1765" width="7.28894989704873" height="15.0" fill="rgb(206,77,26)" rx="2" ry="2" _orig_x="425.4" _orig_width="1.8"/>
<text x="88.31914893617008" y="1775.5" _orig_x="428.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (432 samples, 0.06%)</title><rect x="365.8" y="2053" width="0.8" height="15.0" fill="rgb(250,25,2)" rx="2" ry="2"/>
<text x="368.80" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (286 samples, 0.04%)</title><rect x="1022.7590940288262" y="1845" width="2.0247083047357584" height="15.0" fill="rgb(226,103,34)" rx="2" ry="2" _orig_x="656.9" _orig_width="0.5"/>
<text x="1025.7590940288262" y="1855.5" _orig_x="659.90"/>
</g>
<g class="hide">
<title>__xstat64 (12,840 samples, 1.91%)</title><rect x="106.64172958133142" y="1973" width="24.553877831159916" height="15.0" fill="rgb(241,5,20)" rx="2" ry="2" _orig_x="158.3" _orig_width="22.5"/>
<text x="109.64172958133142" y="1983.5" _orig_x="161.25">__xstat64 </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,018 samples, 0.75%)</title><rect x="145.1640356897734" y="1957" width="9.494166094715167" height="15.0" fill="rgb(244,173,12)" rx="2" ry="2" _orig_x="193.6" _orig_width="8.7"/>
<text x="148.1640356897734" y="1967.5" _orig_x="196.56"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1,847 samples, 0.27%)</title><rect x="621.056966369252" y="1813" width="12.958133150308855" height="15.0" fill="rgb(232,6,46)" rx="2" ry="2" _orig_x="557.7" _orig_width="3.2"/>
<text x="624.056966369252" y="1823.5" _orig_x="560.66"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (579 samples, 0.09%)</title><rect x="1001.7021276595747" y="1861" width="4.049416609471517" height="15.0" fill="rgb(234,111,42)" rx="2" ry="2" _orig_x="651.7" _orig_width="1.0"/>
<text x="1004.7021276595747" y="1871.5" _orig_x="654.73"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (61 samples, 0.01%)</title><rect x="670.0549073438569" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(208,201,37)" rx="2" ry="2" _orig_x="569.8" _orig_width="0.1"/>
<text x="673.0549073438569" y="1871.5" _orig_x="572.79"/>
</g>
<g>
<title>Field::CompareLessThan (635 samples, 0.09%)</title><rect x="743.3493479752915" y="1909" width="4.454358270418669" height="15.0" fill="rgb(244,5,48)" rx="2" ry="2" _orig_x="587.9" _orig_width="1.1"/>
<text x="746.3493479752915" y="1919.5" _orig_x="590.91"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (345 samples, 0.05%)</title><rect x="331.92862045298557" y="1909" width="2.42964996568291" height="15.0" fill="rgb(253,32,9)" rx="2" ry="2" _orig_x="486.3" _orig_width="0.6"/>
<text x="334.92862045298557" y="1919.5" _orig_x="489.30"/>
</g>
<g class="hide">
<title>[libgdk-3.so.0.2404.16] (219 samples, 0.03%)</title><rect x="252.65545641729574" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(205,167,45)" rx="2" ry="2" _orig_x="292.1" _orig_width="0.4"/>
<text x="255.65545641729574" y="2015.5" _orig_x="295.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (321 samples, 0.05%)</title><rect x="334.39258750857914" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(222,89,34)" rx="2" ry="2" _orig_x="367.0" _orig_width="0.6"/>
<text x="337.39258750857914" y="1967.5" _orig_x="369.99"/>
</g>
<g class="parent">
<title>all (673,439 samples, 100%)</title><rect x="10" y="2085" width="1180" height="15.0" fill="rgb(220,5,15)" rx="2" ry="2" _orig_x="10.0" _orig_width="1180.0"/>
<text x="13" y="2095.5" _orig_x="13.00">all </text>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1829" width="0.1" height="15.0" fill="rgb(238,169,37)" rx="2" ry="2"/>
<text x="33.98" y="1839.5"/>
</g>
<g class="hide">
<title>__libc_start_main (2,290 samples, 0.34%)</title><rect x="138.5" y="2053" width="4.0" height="15.0" fill="rgb(212,178,26)" rx="2" ry="2"/>
<text x="141.46" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="69" width="1.091283459162663" height="15.0" fill="rgb(227,46,24)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="79.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[code] (228 samples, 0.03%)</title><rect x="15.7" y="1781" width="0.4" height="15.0" fill="rgb(214,82,38)" rx="2" ry="2"/>
<text x="18.69" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,879 samples, 0.28%)</title><rect x="57.496855345911996" y="1813" width="12.245283018867925" height="15.0" fill="rgb(214,3,53)" rx="2" ry="2" _orig_x="403.5" _orig_width="3.3"/>
<text x="60.496855345911996" y="1823.5" _orig_x="406.53"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1413" width="1.091283459162663" height="15.0" fill="rgb(208,132,31)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1423.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (487 samples, 0.07%)</title><rect x="801.4" y="2053" width="0.9" height="15.0" fill="rgb(226,62,54)" rx="2" ry="2"/>
<text x="804.40" y="2063.5"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (844 samples, 0.13%)</title><rect x="189.90665751544262" y="2037" width="1.6369251887439944" height="15.0" fill="rgb(226,198,40)" rx="2" ry="2" _orig_x="234.6" _orig_width="1.5"/>
<text x="192.90665751544262" y="2047.5" _orig_x="237.60"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (128 samples, 0.02%)</title><rect x="253.36993822923802" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(210,57,48)" rx="2" ry="2" _orig_x="466.9" _orig_width="0.2"/>
<text x="256.369938229238" y="1903.5" _orig_x="469.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="159.78723404255308" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(241,129,40)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1887.5" _orig_x="209.99"/>
</g>
<g class="hide">
<title>__libc_sendmsg (155 samples, 0.02%)</title><rect x="161.7515442690459" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(228,72,14)" rx="2" ry="2" _orig_x="208.8" _orig_width="0.3"/>
<text x="164.7515442690459" y="2031.5" _orig_x="211.85"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (173 samples, 0.03%)</title><rect x="955.9437199725462" y="1845" width="1.214824982841455" height="15.0" fill="rgb(226,172,1)" rx="2" ry="2" _orig_x="640.4" _orig_width="0.3"/>
<text x="958.9437199725462" y="1855.5" _orig_x="643.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="336.793411118737" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(231,110,43)" rx="2" ry="2" _orig_x="369.2" _orig_width="0.1"/>
<text x="339.793411118737" y="1887.5" _orig_x="372.22"/>
</g>
<g class="hide">
<title>[code] (499 samples, 0.07%)</title><rect x="15.2" y="1909" width="0.9" height="15.0" fill="rgb(221,61,52)" rx="2" ry="2"/>
<text x="18.25" y="1919.5"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (733 samples, 0.11%)</title><rect x="239.88743994509252" y="2037" width="1.418668496911462" height="15.0" fill="rgb(223,210,50)" rx="2" ry="2" _orig_x="280.4" _orig_width="1.3"/>
<text x="242.88743994509252" y="2047.5" _orig_x="283.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (321 samples, 0.05%)</title><rect x="221.33562113932726" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(252,181,39)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="224.33562113932726" y="2031.5" _orig_x="266.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (282 samples, 0.04%)</title><rect x="83.83390528483176" y="1813" width="0.5456417295813315" height="15.0" fill="rgb(240,91,28)" rx="2" ry="2" _orig_x="137.4" _orig_width="0.5"/>
<text x="86.83390528483176" y="1823.5" _orig_x="140.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (370 samples, 0.05%)</title><rect x="652.2374742621824" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(230,186,6)" rx="2" ry="2" _orig_x="565.4" _orig_width="0.7"/>
<text x="655.2374742621824" y="1791.5" _orig_x="568.45"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="789" width="2.182566918325326" height="15.0" fill="rgb(241,77,18)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="799.5" _orig_x="117.41"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (59 samples, 0.01%)</title><rect x="545.3328757721345" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(241,180,50)" rx="2" ry="2" _orig_x="539.0" _orig_width="0.1"/>
<text x="548.3328757721345" y="1727.5" _orig_x="541.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,942 samples, 0.59%)</title><rect x="721.3617021276594" y="1829" width="7.529855868222375" height="15.0" fill="rgb(233,127,36)" rx="2" ry="2" _orig_x="721.6" _orig_width="6.9"/>
<text x="724.3617021276594" y="1839.5" _orig_x="724.57"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(210,141,23)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="2015.5" _orig_x="77.08"/>
</g>
<g class="hide">
<title>[unknown] (129 samples, 0.02%)</title><rect x="1182.2" y="2037" width="0.2" height="15.0" fill="rgb(211,25,47)" rx="2" ry="2"/>
<text x="1185.16" y="2047.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (91 samples, 0.01%)</title><rect x="56.8" y="2037" width="0.2" height="15.0" fill="rgb(237,26,11)" rx="2" ry="2"/>
<text x="59.84" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (203 samples, 0.03%)</title><rect x="518.2017844886752" y="1749" width="1.619766643788607" height="15.0" fill="rgb(232,210,16)" rx="2" ry="2" _orig_x="532.3" _orig_width="0.4"/>
<text x="521.2017844886752" y="1759.5" _orig_x="535.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (270 samples, 0.04%)</title><rect x="174.08304735758398" y="2005" width="0.5456417295813315" height="15.0" fill="rgb(224,108,20)" rx="2" ry="2" _orig_x="220.1" _orig_width="0.5"/>
<text x="177.08304735758398" y="2015.5" _orig_x="223.14"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1221" width="2.182566918325326" height="15.0" fill="rgb(224,55,13)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1231.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>ntfs_names_full_collate (182 samples, 0.03%)</title><rect x="797.7" y="2053" width="0.4" height="15.0" fill="rgb(241,190,9)" rx="2" ry="2"/>
<text x="800.74" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::destroy&lt;void*&gt; (123 samples, 0.02%)</title><rect x="1047.0555936856554" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(229,168,33)" rx="2" ry="2" _orig_x="662.9" _orig_width="0.2"/>
<text x="1050.0555936856554" y="1791.5" _orig_x="665.87"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1125" width="1.091283459162663" height="15.0" fill="rgb(248,127,41)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1135.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1605" width="0.1091283459162663" height="15.0" fill="rgb(216,92,48)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1615.5" _orig_x="142.76"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (167 samples, 0.02%)</title><rect x="227.45367192862037" y="1829" width="1.214824982841455" height="15.0" fill="rgb(229,163,13)" rx="2" ry="2" _orig_x="460.5" _orig_width="0.3"/>
<text x="230.45367192862037" y="1839.5" _orig_x="463.47"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (140 samples, 0.02%)</title><rect x="313.3013040494165" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(223,151,0)" rx="2" ry="2" _orig_x="481.7" _orig_width="0.2"/>
<text x="316.3013040494165" y="1871.5" _orig_x="484.67"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (164 samples, 0.02%)</title><rect x="73.98078242964999" y="1717" width="1.214824982841455" height="15.0" fill="rgb(232,43,27)" rx="2" ry="2" _orig_x="422.6" _orig_width="0.3"/>
<text x="76.98078242964999" y="1727.5" _orig_x="425.61"/>
</g>
<g class="hide">
<title>Unsafe_Park (100 samples, 0.01%)</title><rect x="12.5" y="2005" width="0.2" height="15.0" fill="rgb(219,5,40)" rx="2" ry="2"/>
<text x="15.48" y="2015.5"/>
</g>
<g class="hide">
<title>Xorg (26,444 samples, 3.93%)</title><rect x="74.5" y="2069" width="46.4" height="15.0" fill="rgb(240,50,43)" rx="2" ry="2"/>
<text x="77.52" y="2079.5">Xorg</text>
</g>
<g>
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="356.22512010981467" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(205,57,42)" rx="2" ry="2" _orig_x="492.3" _orig_width="0.1"/>
<text x="359.22512010981467" y="1807.5" _orig_x="495.25"/>
</g>
<g class="hide">
<title>[perf-123031.map] (217 samples, 0.03%)</title><rect x="86.67124227865467" y="1653" width="0.4365133836650652" height="15.0" fill="rgb(219,91,51)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1663.5" _orig_x="143.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="13.1" y="1877" width="0.2" height="15.0" fill="rgb(208,118,10)" rx="2" ry="2"/>
<text x="16.10" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,882 samples, 0.43%)</title><rect x="149.20178448867526" y="1925" width="5.456417295813315" height="15.0" fill="rgb(217,148,23)" rx="2" ry="2" _orig_x="197.3" _orig_width="5.0"/>
<text x="152.20178448867526" y="1935.5" _orig_x="200.30"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1989" width="2.2916952642415924" height="15.0" fill="rgb(254,5,9)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1999.5" _orig_x="141.47"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (113 samples, 0.02%)</title><rect x="861.59231297186" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(240,88,14)" rx="2" ry="2" _orig_x="617.1" _orig_width="0.2"/>
<text x="864.59231297186" y="1887.5" _orig_x="620.11"/>
</g>
<g>
<title>Field::DeserializeFrom (4,475 samples, 0.66%)</title><rect x="396.3143445435826" y="1829" width="31.58544955387783" height="15.0" fill="rgb(207,89,45)" rx="2" ry="2" _orig_x="502.2" _orig_width="7.8"/>
<text x="399.3143445435826" y="1839.5" _orig_x="505.20">Fie..</text>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (58 samples, 0.01%)</title><rect x="496.7398764584763" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(249,70,32)" rx="2" ry="2" _orig_x="527.0" _orig_width="0.1"/>
<text x="499.7398764584763" y="1807.5" _orig_x="529.97"/>
</g>
<g>
<title>TableIterator::operator* (3,286 samples, 0.49%)</title><rect x="331.1187371310913" y="1957" width="23.486616334934798" height="15.0" fill="rgb(240,79,14)" rx="2" ry="2" _orig_x="486.1" _orig_width="5.8"/>
<text x="334.1187371310913" y="1967.5" _orig_x="489.15">T..</text>
</g>
<g>
<title>[[kernel.kallsyms]] (742 samples, 0.11%)</title><rect x="720.2676733013042" y="1845" width="5.264241592312972" height="15.0" fill="rgb(228,173,35)" rx="2" ry="2" _orig_x="582.2" _orig_width="1.3"/>
<text x="723.2676733013042" y="1855.5" _orig_x="585.19"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (94 samples, 0.01%)</title><rect x="687.0624571036376" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(218,70,12)" rx="2" ry="2" _orig_x="574.0" _orig_width="0.1"/>
<text x="690.0624571036376" y="1839.5" _orig_x="576.96"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (548 samples, 0.08%)</title><rect x="655.4770075497598" y="1845" width="3.644474948524365" height="15.0" fill="rgb(208,169,24)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.9"/>
<text x="658.4770075497598" y="1855.5" _orig_x="569.16"/>
</g>
<g>
<title>__memset_avx2_unaligned (104 samples, 0.02%)</title><rect x="1028.8332189430334" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(245,116,54)" rx="2" ry="2" _orig_x="658.4" _orig_width="0.2"/>
<text x="1031.8332189430334" y="1839.5" _orig_x="661.40"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (774 samples, 0.11%)</title><rect x="368.7783115991762" y="1765" width="5.669183253260123" height="15.0" fill="rgb(251,93,28)" rx="2" ry="2" _orig_x="495.4" _orig_width="1.4"/>
<text x="371.7783115991762" y="1775.5" _orig_x="498.42"/>
</g>
<g class="hide">
<title>_int_malloc (264 samples, 0.04%)</title><rect x="335.7" y="2053" width="0.5" height="15.0" fill="rgb(233,181,16)" rx="2" ry="2"/>
<text x="338.74" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="85" width="1.091283459162663" height="15.0" fill="rgb(209,84,10)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="95.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (567 samples, 0.08%)</title><rect x="366.6" y="2053" width="1.0" height="15.0" fill="rgb(247,161,16)" rx="2" ry="2"/>
<text x="369.56" y="2063.5"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (79 samples, 0.01%)</title><rect x="493.9052848318461" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(245,204,38)" rx="2" ry="2" _orig_x="526.3" _orig_width="0.1"/>
<text x="496.9052848318461" y="1727.5" _orig_x="529.27"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1013" width="2.182566918325326" height="15.0" fill="rgb(217,87,40)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1023.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;char*&gt; (108 samples, 0.02%)</title><rect x="973.7611530542207" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(208,64,19)" rx="2" ry="2" _orig_x="644.8" _orig_width="0.2"/>
<text x="976.7611530542207" y="1855.5" _orig_x="647.80"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (306 samples, 0.05%)</title><rect x="610.1235415236788" y="1845" width="2.42964996568291" height="15.0" fill="rgb(248,155,23)" rx="2" ry="2" _orig_x="555.0" _orig_width="0.6"/>
<text x="613.1235415236788" y="1855.5" _orig_x="558.04"/>
</g>
<g class="hide">
<title>NetworkManager (18,411 samples, 2.73%)</title><rect x="23.5" y="2069" width="32.3" height="15.0" fill="rgb(233,113,4)" rx="2" ry="2"/>
<text x="26.53" y="2079.5">Ne..</text>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (177 samples, 0.03%)</title><rect x="206.8016472203156" y="1765" width="1.214824982841455" height="15.0" fill="rgb(231,206,40)" rx="2" ry="2" _orig_x="455.4" _orig_width="0.3"/>
<text x="209.8016472203156" y="1775.5" _orig_x="458.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="154.5490734385723" y="1781" width="0.1091283459162663" height="15.0" fill="rgb(237,114,26)" rx="2" ry="2" _orig_x="202.2" _orig_width="0.1"/>
<text x="157.5490734385723" y="1791.5" _orig_x="205.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (89 samples, 0.01%)</title><rect x="249.3205216197665" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(220,176,6)" rx="2" ry="2" _orig_x="465.9" _orig_width="0.1"/>
<text x="252.3205216197665" y="1839.5" _orig_x="468.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="133" width="0.2182566918325326" height="15.0" fill="rgb(214,9,29)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="143.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>kworker/u32:0-e (3,192 samples, 0.47%)</title><rect x="373.9" y="2069" width="5.6" height="15.0" fill="rgb(247,81,44)" rx="2" ry="2"/>
<text x="376.87" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.02%)</title><rect x="269.89773507206576" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(210,106,16)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="2015.5" _orig_x="310.92"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (127 samples, 0.02%)</title><rect x="561.5305422100205" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(230,162,14)" rx="2" ry="2" _orig_x="543.0" _orig_width="0.2"/>
<text x="564.5305422100205" y="1855.5" _orig_x="546.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.02%)</title><rect x="13.336993822923718" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(227,119,33)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1967.5" _orig_x="75.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,693 samples, 0.55%)</title><rect x="45.99371069182386" y="1957" width="23.748427672955977" height="15.0" fill="rgb(208,175,32)" rx="2" ry="2" _orig_x="400.4" _orig_width="6.4"/>
<text x="48.99371069182386" y="1967.5" _orig_x="403.35">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="214.24227865476993" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(246,203,39)" rx="2" ry="2" _orig_x="256.9" _orig_width="0.2"/>
<text x="217.24227865476993" y="1871.5" _orig_x="259.90"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (1,032 samples, 0.15%)</title><rect x="70.33630748112552" y="1813" width="7.28894989704873" height="15.0" fill="rgb(240,82,35)" rx="2" ry="2" _orig_x="421.7" _orig_width="1.8"/>
<text x="73.33630748112552" y="1823.5" _orig_x="424.65"/>
</g>
<g class="hide">
<title>[libcurl-gnutls.so.4.6.0] (95 samples, 0.01%)</title><rect x="29.5" y="2037" width="0.2" height="15.0" fill="rgb(225,53,43)" rx="2" ry="2"/>
<text x="32.55" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (252 samples, 0.04%)</title><rect x="1165.5094339622642" y="1973" width="1.8553459119496856" height="15.0" fill="rgb(235,137,24)" rx="2" ry="2" _orig_x="702.1" _orig_width="0.5"/>
<text x="1168.5094339622642" y="1983.5" _orig_x="705.11"/>
</g>
<g class="hide">
<title>uv_run (1,086 samples, 0.16%)</title><rect x="87.32601235415227" y="2005" width="2.0734385724090596" height="15.0" fill="rgb(223,177,17)" rx="2" ry="2" _orig_x="140.6" _orig_width="1.9"/>
<text x="90.32601235415227" y="2015.5" _orig_x="143.57"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (176 samples, 0.03%)</title><rect x="220.5696636925189" y="1813" width="1.214824982841455" height="15.0" fill="rgb(210,100,4)" rx="2" ry="2" _orig_x="458.8" _orig_width="0.3"/>
<text x="223.5696636925189" y="1823.5" _orig_x="461.79"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (155 samples, 0.02%)</title><rect x="629.9656829100891" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(226,208,28)" rx="2" ry="2" _orig_x="559.9" _orig_width="0.2"/>
<text x="632.9656829100891" y="1743.5" _orig_x="562.86"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (93 samples, 0.01%)</title><rect x="190.6039807824295" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(205,14,25)" rx="2" ry="2" _orig_x="451.4" _orig_width="0.1"/>
<text x="193.6039807824295" y="1855.5" _orig_x="454.39"/>
</g>
<g class="hide">
<title>[code] (121 samples, 0.02%)</title><rect x="14.973919011667713" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(252,181,46)" rx="2" ry="2" _orig_x="74.3" _orig_width="0.2"/>
<text x="17.97391901166771" y="1759.5" _orig_x="77.28"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (389 samples, 0.06%)</title><rect x="416.1564859299932" y="1701" width="2.8345916266300617" height="15.0" fill="rgb(253,201,44)" rx="2" ry="2" _orig_x="507.1" _orig_width="0.7"/>
<text x="419.1564859299932" y="1711.5" _orig_x="510.13"/>
</g>
<g class="hide">
<title>Thread::call_run (64 samples, 0.01%)</title><rect x="13.88263555250505" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(207,209,36)" rx="2" ry="2" _orig_x="73.3" _orig_width="0.2"/>
<text x="16.88263555250505" y="2031.5" _orig_x="76.34"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (66 samples, 0.01%)</title><rect x="378.901853122855" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(222,197,34)" rx="2" ry="2" _orig_x="497.9" _orig_width="0.1"/>
<text x="381.901853122855" y="1759.5" _orig_x="500.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (637 samples, 0.09%)</title><rect x="272.1894303363074" y="1941" width="1.2004118050789294" height="15.0" fill="rgb(214,137,12)" rx="2" ry="2" _orig_x="310.0" _orig_width="1.1"/>
<text x="275.1894303363074" y="1951.5" _orig_x="312.97"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (111 samples, 0.02%)</title><rect x="981.4550446122171" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(253,46,37)" rx="2" ry="2" _orig_x="646.7" _orig_width="0.2"/>
<text x="984.4550446122171" y="1855.5" _orig_x="649.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="159.35072065888804" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(236,76,14)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1903.5" _orig_x="209.58"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1797" width="0.1" height="15.0" fill="rgb(210,226,2)" rx="2" ry="2"/>
<text x="33.98" y="1807.5"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (127 samples, 0.02%)</title><rect x="212.5" y="2053" width="0.2" height="15.0" fill="rgb(224,106,20)" rx="2" ry="2"/>
<text x="215.45" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (179 samples, 0.03%)</title><rect x="201.58339052848308" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(206,130,13)" rx="2" ry="2" _orig_x="245.3" _orig_width="0.3"/>
<text x="204.58339052848308" y="1999.5" _orig_x="248.33"/>
</g>
<g class="hide">
<title>[code] (168 samples, 0.02%)</title><rect x="86.01647220315708" y="1317" width="0.3273850377487989" height="15.0" fill="rgb(205,17,32)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1327.5" _orig_x="142.40"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (119 samples, 0.02%)</title><rect x="431.13932738503775" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(230,43,16)" rx="2" ry="2" _orig_x="510.8" _orig_width="0.2"/>
<text x="434.13932738503775" y="1839.5" _orig_x="513.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (243 samples, 0.04%)</title><rect x="270.8798901853122" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(244,182,33)" rx="2" ry="2" _orig_x="308.8" _orig_width="0.4"/>
<text x="273.8798901853122" y="2031.5" _orig_x="311.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (92 samples, 0.01%)</title><rect x="21.8" y="1861" width="0.1" height="15.0" fill="rgb(214,212,16)" rx="2" ry="2"/>
<text x="24.77" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (943 samples, 0.14%)</title><rect x="263.7865477007549" y="1829" width="1.855181880576527" height="15.0" fill="rgb(230,131,50)" rx="2" ry="2" _orig_x="302.3" _orig_width="1.7"/>
<text x="266.7865477007549" y="1839.5" _orig_x="305.31"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (62 samples, 0.01%)</title><rect x="102.16746739876447" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(212,77,49)" rx="2" ry="2" _orig_x="154.2" _orig_width="0.1"/>
<text x="105.16746739876447" y="1967.5" _orig_x="157.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (744 samples, 0.11%)</title><rect x="806.7000686341796" y="1765" width="1.418668496911462" height="15.0" fill="rgb(231,193,27)" rx="2" ry="2" _orig_x="799.8" _orig_width="1.3"/>
<text x="809.7000686341796" y="1775.5" _orig_x="802.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,356 samples, 0.20%)</title><rect x="13.33962264150956" y="1989" width="8.90566037735849" height="15.0" fill="rgb(226,169,51)" rx="2" ry="2" _orig_x="391.6" _orig_width="2.4"/>
<text x="16.33962264150956" y="1999.5" _orig_x="394.61"/>
</g>
<g class="hide">
<title>[unknown] (281 samples, 0.04%)</title><rect x="40.4276729559748" y="2021" width="1.8553459119496856" height="15.0" fill="rgb(220,110,5)" rx="2" ry="2" _orig_x="398.9" _orig_width="0.5"/>
<text x="43.4276729559748" y="2031.5" _orig_x="401.92"/>
</g>
<g class="hide">
<title>__libc_read (2,206 samples, 0.33%)</title><rect x="261.385724090597" y="1973" width="4.256005490734386" height="15.0" fill="rgb(250,7,11)" rx="2" ry="2" _orig_x="300.1" _orig_width="3.9"/>
<text x="264.385724090597" y="1983.5" _orig_x="303.10"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (2,730 samples, 0.41%)</title><rect x="437.61839396019207" y="1829" width="19.43719972546328" height="15.0" fill="rgb(227,140,14)" rx="2" ry="2" _orig_x="512.4" _orig_width="4.8"/>
<text x="440.61839396019207" y="1839.5" _orig_x="515.39"/>
</g>
<g class="hide">
<title>[unknown] (1,159 samples, 0.17%)</title><rect x="58.73438572409051" y="1877" width="2.182566918325326" height="15.0" fill="rgb(241,163,35)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1887.5" _orig_x="117.40"/>
</g>
<g class="hide">
<title>ntfs_malloc (94 samples, 0.01%)</title><rect x="789.6760466712423" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(250,60,20)" rx="2" ry="2" _orig_x="784.2" _orig_width="0.2"/>
<text x="792.6760466712423" y="2047.5" _orig_x="787.23"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (144 samples, 0.02%)</title><rect x="264.70830473575836" y="1765" width="1.214824982841455" height="15.0" fill="rgb(244,145,19)" rx="2" ry="2" _orig_x="469.7" _orig_width="0.3"/>
<text x="267.70830473575836" y="1775.5" _orig_x="472.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (583 samples, 0.09%)</title><rect x="1184.4" y="1877" width="1.0" height="15.0" fill="rgb(210,122,34)" rx="2" ry="2"/>
<text x="1187.36" y="1887.5"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::max_size (66 samples, 0.01%)</title><rect x="1166.1084420041177" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(245,57,29)" rx="2" ry="2" _orig_x="692.3" _orig_width="0.1"/>
<text x="1169.1084420041177" y="1919.5" _orig_x="695.32"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (966 samples, 0.14%)</title><rect x="77.6252573781743" y="1797" width="6.884008236101578" height="15.0" fill="rgb(248,9,10)" rx="2" ry="2" _orig_x="423.5" _orig_width="1.7"/>
<text x="80.6252573781743" y="1807.5" _orig_x="426.51"/>
</g>
<g class="hide">
<title>JavaCalls::call_helper (65 samples, 0.01%)</title><rect x="68.0" y="1989" width="0.2" height="15.0" fill="rgb(233,39,4)" rx="2" ry="2"/>
<text x="71.04" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="338.6485929993135" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(232,112,33)" rx="2" ry="2" _orig_x="370.9" _orig_width="0.1"/>
<text x="341.6485929993135" y="1887.5" _orig_x="373.85"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (136 samples, 0.02%)</title><rect x="698.4008236101577" y="1765" width="1.214824982841455" height="15.0" fill="rgb(210,193,18)" rx="2" ry="2" _orig_x="576.8" _orig_width="0.3"/>
<text x="701.4008236101577" y="1775.5" _orig_x="579.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (346 samples, 0.05%)</title><rect x="1184.8" y="1845" width="0.6" height="15.0" fill="rgb(229,28,44)" rx="2" ry="2"/>
<text x="1187.78" y="1855.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (718 samples, 0.11%)</title><rect x="966.8771448181194" y="1861" width="5.264241592312972" height="15.0" fill="rgb(231,171,46)" rx="2" ry="2" _orig_x="643.1" _orig_width="1.3"/>
<text x="969.8771448181194" y="1871.5" _orig_x="646.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (803 samples, 0.12%)</title><rect x="210.96842827728202" y="1925" width="1.5277968428277282" height="15.0" fill="rgb(230,170,18)" rx="2" ry="2" _orig_x="253.9" _orig_width="1.4"/>
<text x="213.96842827728202" y="1935.5" _orig_x="256.88"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (527 samples, 0.08%)</title><rect x="136.74673987645852" y="1781" width="3.644474948524365" height="15.0" fill="rgb(240,139,10)" rx="2" ry="2" _orig_x="438.1" _orig_width="0.9"/>
<text x="139.74673987645852" y="1791.5" _orig_x="441.11"/>
</g>
<g class="hide">
<title>[code] (65 samples, 0.01%)</title><rect x="17.3" y="1989" width="0.1" height="15.0" fill="rgb(224,149,45)" rx="2" ry="2"/>
<text x="20.29" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.02%)</title><rect x="161.86067261496217" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(219,176,42)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1887.5" _orig_x="211.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,005 samples, 0.30%)</title><rect x="261.71310912834576" y="1909" width="3.928620452985587" height="15.0" fill="rgb(248,144,5)" rx="2" ry="2" _orig_x="300.4" _orig_width="3.6"/>
<text x="264.71310912834576" y="1919.5" _orig_x="303.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="209.87714481811935" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(225,58,8)" rx="2" ry="2" _orig_x="252.9" _orig_width="0.2"/>
<text x="212.87714481811935" y="1935.5" _orig_x="255.95"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (115 samples, 0.02%)</title><rect x="149.29993136582007" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(240,0,44)" rx="2" ry="2" _orig_x="441.2" _orig_width="0.2"/>
<text x="152.29993136582007" y="1839.5" _orig_x="444.22"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (670 samples, 0.10%)</title><rect x="543.713109128346" y="1749" width="4.85929993136582" height="15.0" fill="rgb(211,226,50)" rx="2" ry="2" _orig_x="538.6" _orig_width="1.2"/>
<text x="546.713109128346" y="1759.5" _orig_x="541.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (264 samples, 0.04%)</title><rect x="29.1" y="2005" width="0.4" height="15.0" fill="rgb(235,75,40)" rx="2" ry="2"/>
<text x="32.08" y="2015.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (110 samples, 0.02%)</title><rect x="323.82978723404256" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(251,179,54)" rx="2" ry="2" _orig_x="484.3" _orig_width="0.2"/>
<text x="326.82978723404256" y="1887.5" _orig_x="487.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="69.37106918238993" y="1605" width="0.37106918238993714" height="15.0" fill="rgb(225,94,38)" rx="2" ry="2" _orig_x="406.7" _orig_width="0.1"/>
<text x="72.37106918238993" y="1615.5" _orig_x="409.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (509 samples, 0.08%)</title><rect x="334.06520247083034" y="2005" width="0.9821551132463967" height="15.0" fill="rgb(210,93,30)" rx="2" ry="2" _orig_x="366.7" _orig_width="0.9"/>
<text x="337.06520247083034" y="2015.5" _orig_x="369.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (870 samples, 0.13%)</title><rect x="210.8592999313657" y="2021" width="1.6369251887439944" height="15.0" fill="rgb(251,12,4)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="2031.5" _orig_x="256.76"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (471 samples, 0.07%)</title><rect x="199.72820864790657" y="2005" width="0.8730267673301304" height="15.0" fill="rgb(247,166,51)" rx="2" ry="2" _orig_x="243.6" _orig_width="0.8"/>
<text x="202.72820864790657" y="2015.5" _orig_x="246.61"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (85 samples, 0.01%)</title><rect x="817.4536719286207" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(236,206,42)" rx="2" ry="2" _orig_x="606.2" _orig_width="0.1"/>
<text x="820.4536719286207" y="1791.5" _orig_x="609.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="13.3" y="1973" width="0.2" height="15.0" fill="rgb(220,27,17)" rx="2" ry="2"/>
<text x="16.35" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1813" width="0.1" height="15.0" fill="rgb(249,214,2)" rx="2" ry="2"/>
<text x="33.98" y="1823.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (82 samples, 0.01%)</title><rect x="86.45298558682215" y="1445" width="0.1091283459162663" height="15.0" fill="rgb(205,78,21)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1455.5" _orig_x="142.77"/>
</g>
<g>
<title>Field::CompareLessThan (185 samples, 0.03%)</title><rect x="391.0501029512696" y="1861" width="1.619766643788607" height="15.0" fill="rgb(220,98,30)" rx="2" ry="2" _orig_x="500.9" _orig_width="0.4"/>
<text x="394.0501029512696" y="1871.5" _orig_x="503.95"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::new_allocator (68 samples, 0.01%)</title><rect x="825.5525051475637" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(232,134,26)" rx="2" ry="2" _orig_x="608.2" _orig_width="0.1"/>
<text x="828.5525051475637" y="1711.5" _orig_x="611.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,018 samples, 0.30%)</title><rect x="794.0411805078928" y="2037" width="3.8194921070693204" height="15.0" fill="rgb(222,223,17)" rx="2" ry="2" _orig_x="788.2" _orig_width="3.5"/>
<text x="797.0411805078928" y="2047.5" _orig_x="791.15"/>
</g>
<g class="hide">
<title>[unknown] (625 samples, 0.09%)</title><rect x="260.1853122855181" y="1925" width="1.2004118050789294" height="15.0" fill="rgb(243,126,12)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1935.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (69 samples, 0.01%)</title><rect x="308.84694577899796" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(210,47,30)" rx="2" ry="2" _orig_x="480.6" _orig_width="0.1"/>
<text x="311.84694577899796" y="1919.5" _orig_x="483.56"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (187 samples, 0.03%)</title><rect x="585.4221002059023" y="1813" width="1.619766643788607" height="15.0" fill="rgb(209,19,14)" rx="2" ry="2" _orig_x="548.9" _orig_width="0.4"/>
<text x="588.4221002059023" y="1823.5" _orig_x="551.93"/>
</g>
<g class="hide">
<title>__xstat64 (159 samples, 0.02%)</title><rect x="58.0" y="2037" width="0.2" height="15.0" fill="rgb(210,53,9)" rx="2" ry="2"/>
<text x="60.95" y="2047.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (219 samples, 0.03%)</title><rect x="839.7254632807139" y="1749" width="1.619766643788607" height="15.0" fill="rgb(223,180,27)" rx="2" ry="2" _orig_x="611.7" _orig_width="0.4"/>
<text x="842.7254632807139" y="1759.5" _orig_x="614.74"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (63 samples, 0.01%)</title><rect x="1145.0514756348662" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(248,103,27)" rx="2" ry="2" _orig_x="687.1" _orig_width="0.1"/>
<text x="1148.0514756348662" y="1839.5" _orig_x="690.08"/>
</g>
<g class="hide">
<title>_int_free (64 samples, 0.01%)</title><rect x="169.60878517501706" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(220,149,27)" rx="2" ry="2" _orig_x="216.0" _orig_width="0.1"/>
<text x="172.60878517501706" y="2047.5" _orig_x="218.99"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (111 samples, 0.02%)</title><rect x="269.16266300617707" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(207,155,24)" rx="2" ry="2" _orig_x="470.8" _orig_width="0.2"/>
<text x="272.16266300617707" y="1743.5" _orig_x="473.77"/>
</g>
<g class="hide">
<title>[perf-123031.map] (217 samples, 0.03%)</title><rect x="86.67124227865467" y="1621" width="0.4365133836650652" height="15.0" fill="rgb(253,19,40)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1631.5" _orig_x="143.00"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (229 samples, 0.03%)</title><rect x="663.5758407687028" y="1765" width="1.619766643788607" height="15.0" fill="rgb(248,100,45)" rx="2" ry="2" _orig_x="568.2" _orig_width="0.4"/>
<text x="666.5758407687028" y="1775.5" _orig_x="571.20"/>
</g>
<g class="hide">
<title>[perf-123031.map] (77 samples, 0.01%)</title><rect x="86.45298558682215" y="1221" width="0.1091283459162663" height="15.0" fill="rgb(252,179,43)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1231.5" _orig_x="142.78"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (287 samples, 0.04%)</title><rect x="468.39396019217565" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(224,7,51)" rx="2" ry="2" _orig_x="520.0" _orig_width="0.5"/>
<text x="471.39396019217565" y="1823.5" _orig_x="523.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="11.809196980095999" y="1733" width="0.2182566918325326" height="15.0" fill="rgb(205,151,15)" rx="2" ry="2" _orig_x="71.4" _orig_width="0.2"/>
<text x="14.809196980095999" y="1743.5" _orig_x="74.43"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (65 samples, 0.01%)</title><rect x="1119.9450926561426" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(229,199,38)" rx="2" ry="2" _orig_x="680.9" _orig_width="0.1"/>
<text x="1122.9450926561426" y="1855.5" _orig_x="683.87"/>
</g>
<g class="hide">
<title>[code] (296 samples, 0.04%)</title><rect x="69.64722031571714" y="1877" width="0.5456417295813315" height="15.0" fill="rgb(215,162,16)" rx="2" ry="2" _orig_x="124.4" _orig_width="0.5"/>
<text x="72.64722031571714" y="1887.5" _orig_x="127.43"/>
</g>
<g class="hide">
<title>[code] (343 samples, 0.05%)</title><rect x="69.53809196980086" y="1941" width="0.6547700754975978" height="15.0" fill="rgb(248,3,3)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.6"/>
<text x="72.53809196980086" y="1951.5" _orig_x="127.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="307.7652711050102" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(229,140,9)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1919.5" _orig_x="345.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (346 samples, 0.05%)</title><rect x="221.33562113932726" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(225,177,1)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="224.33562113932726" y="2047.5" _orig_x="266.36"/>
</g>
<g class="hide">
<title>[libjvm.so] (105 samples, 0.02%)</title><rect x="13.555250514756253" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(236,98,46)" rx="2" ry="2" _orig_x="73.0" _orig_width="0.2"/>
<text x="16.555250514756253" y="1999.5" _orig_x="76.05"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (133 samples, 0.02%)</title><rect x="213.28071379547004" y="1797" width="1.214824982841455" height="15.0" fill="rgb(225,134,26)" rx="2" ry="2" _orig_x="457.0" _orig_width="0.3"/>
<text x="216.28071379547004" y="1807.5" _orig_x="460.04"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (961 samples, 0.14%)</title><rect x="927.1928620452984" y="1813" width="6.479066575154428" height="15.0" fill="rgb(208,10,18)" rx="2" ry="2" _orig_x="633.3" _orig_width="1.6"/>
<text x="930.1928620452984" y="1823.5" _orig_x="636.26"/>
</g>
<g class="hide">
<title>_nv013719rm (87 samples, 0.01%)</title><rect x="347.4" y="2053" width="0.2" height="15.0" fill="rgb(230,208,49)" rx="2" ry="2"/>
<text x="350.44" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="337.3390528483183" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(228,107,32)" rx="2" ry="2" _orig_x="369.7" _orig_width="0.1"/>
<text x="340.3390528483183" y="1935.5" _orig_x="372.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (196 samples, 0.03%)</title><rect x="810.5195607412489" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(246,168,46)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1999.5" _orig_x="806.31"/>
</g>
<g class="hide">
<title>[unknown] (5,746 samples, 0.85%)</title><rect x="197.3273850377487" y="2021" width="10.91283459162663" height="15.0" fill="rgb(219,187,53)" rx="2" ry="2" _orig_x="241.4" _orig_width="10.0"/>
<text x="200.3273850377487" y="2031.5" _orig_x="244.38"/>
</g>
<g class="hide">
<title>std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (144 samples, 0.02%)</title><rect x="101.51269732326689" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(225,57,30)" rx="2" ry="2" _orig_x="153.6" _orig_width="0.2"/>
<text x="104.51269732326689" y="1935.5" _orig_x="156.56"/>
</g>
<g>
<title>[[kernel.kallsyms]] (508 samples, 0.08%)</title><rect x="54.94852436513369" y="1749" width="3.644474948524365" height="15.0" fill="rgb(217,143,31)" rx="2" ry="2" _orig_x="417.9" _orig_width="0.9"/>
<text x="57.94852436513369" y="1759.5" _orig_x="420.89"/>
</g>
<g class="hide">
<title>[unknown] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="1989" width="48.67124227865477" height="15.0" fill="rgb(248,181,45)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="1999.5" _orig_x="1134.37">[unknown] </text>
</g>
<g>
<title>IndexKeyComparator::operator (16,015 samples, 2.38%)</title><rect x="390.64516129032256" y="1877" width="113.38366506520248" height="15.0" fill="rgb(222,222,50)" rx="2" ry="2" _orig_x="500.8" _orig_width="28.0"/>
<text x="393.64516129032256" y="1887.5" _orig_x="503.76">IndexKeyCompa..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.02%)</title><rect x="53.71448181194225" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(223,82,47)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="2015.5" _orig_x="112.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.02%)</title><rect x="179.86684969114611" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(248,117,46)" rx="2" ry="2" _orig_x="225.4" _orig_width="0.3"/>
<text x="182.86684969114611" y="1983.5" _orig_x="228.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (565 samples, 0.08%)</title><rect x="298.5984900480438" y="1909" width="0.9821551132463967" height="15.0" fill="rgb(231,43,54)" rx="2" ry="2" _orig_x="334.2" _orig_width="0.9"/>
<text x="301.5984900480438" y="1919.5" _orig_x="337.16"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1349" width="0.1091283459162663" height="15.0" fill="rgb(241,224,7)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1359.5" _orig_x="142.78"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (77 samples, 0.01%)</title><rect x="956.7536032944406" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(224,116,35)" rx="2" ry="2" _orig_x="640.6" _orig_width="0.1"/>
<text x="959.7536032944406" y="1839.5" _orig_x="643.61"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1669" width="0.1091283459162663" height="15.0" fill="rgb(216,47,26)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1679.5" _orig_x="142.76"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (76 samples, 0.01%)</title><rect x="582.9924502402193" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(244,110,51)" rx="2" ry="2" _orig_x="548.3" _orig_width="0.1"/>
<text x="585.9924502402193" y="1759.5" _orig_x="551.31"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="997" width="2.182566918325326" height="15.0" fill="rgb(211,165,33)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1007.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (92 samples, 0.01%)</title><rect x="89.1811942347288" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(213,130,9)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1887.5" _orig_x="145.30"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,920 samples, 0.29%)</title><rect x="99.08716540837338" y="1829" width="13.768016472203156" height="15.0" fill="rgb(212,186,36)" rx="2" ry="2" _orig_x="428.8" _orig_width="3.4"/>
<text x="102.08716540837338" y="1839.5" _orig_x="431.84"/>
</g>
<g class="hide">
<title>__libc_recvmsg (1,533 samples, 0.23%)</title><rect x="332.5" y="2053" width="2.6" height="15.0" fill="rgb(219,41,30)" rx="2" ry="2"/>
<text x="335.46" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (211 samples, 0.03%)</title><rect x="448.55181880576527" y="1749" width="1.619766643788607" height="15.0" fill="rgb(250,215,3)" rx="2" ry="2" _orig_x="515.1" _orig_width="0.4"/>
<text x="451.55181880576527" y="1759.5" _orig_x="518.12"/>
</g>
<g>
<title>std::addressof&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (89 samples, 0.01%)</title><rect x="1054.7494852436512" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(250,150,44)" rx="2" ry="2" _orig_x="664.8" _orig_width="0.1"/>
<text x="1057.7494852436512" y="1759.5" _orig_x="667.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (411 samples, 0.06%)</title><rect x="64.29993136582009" y="1781" width="0.8730267673301304" height="15.0" fill="rgb(212,158,3)" rx="2" ry="2" _orig_x="119.5" _orig_width="0.8"/>
<text x="67.29993136582009" y="1791.5" _orig_x="122.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (371 samples, 0.06%)</title><rect x="343.6" y="2053" width="0.6" height="15.0" fill="rgb(232,190,40)" rx="2" ry="2"/>
<text x="346.55" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="13.446122168839993" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(209,142,6)" rx="2" ry="2" _orig_x="72.9" _orig_width="0.1"/>
<text x="16.44612216883999" y="1871.5" _orig_x="75.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.02%)</title><rect x="161.86067261496217" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(242,52,11)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="2015.5" _orig_x="211.85"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (76 samples, 0.01%)</title><rect x="231.90803019903916" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(205,177,37)" rx="2" ry="2" _orig_x="461.6" _orig_width="0.2"/>
<text x="234.90803019903916" y="1823.5" _orig_x="464.64"/>
</g>
<g>
<title>std::__detail::_Hash_node_base::_Hash_node_base (64 samples, 0.01%)</title><rect x="1002.9169526424159" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(212,74,9)" rx="2" ry="2" _orig_x="652.0" _orig_width="0.1"/>
<text x="1005.9169526424159" y="1855.5" _orig_x="654.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (382 samples, 0.06%)</title><rect x="11.263555250514667" y="1909" width="0.7638984214138641" height="15.0" fill="rgb(245,80,4)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1919.5" _orig_x="73.93"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (293 samples, 0.04%)</title><rect x="298.7234042553192" y="1797" width="2.0247083047357584" height="15.0" fill="rgb(220,51,39)" rx="2" ry="2" _orig_x="478.1" _orig_width="0.5"/>
<text x="301.7234042553192" y="1807.5" _orig_x="481.10"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (220 samples, 0.03%)</title><rect x="117.30954015099519" y="1781" width="1.619766643788607" height="15.0" fill="rgb(225,193,25)" rx="2" ry="2" _orig_x="433.3" _orig_width="0.4"/>
<text x="120.30954015099519" y="1791.5" _orig_x="436.33"/>
</g>
<g class="hide">
<title>[code] (422 samples, 0.06%)</title><rect x="16.4" y="1877" width="0.8" height="15.0" fill="rgb(219,35,42)" rx="2" ry="2"/>
<text x="19.43" y="1887.5"/>
</g>
<g class="hide">
<title>[code] (283 samples, 0.04%)</title><rect x="14.1" y="1909" width="0.5" height="15.0" fill="rgb(242,103,34)" rx="2" ry="2"/>
<text x="17.11" y="1919.5"/>
</g>
<g>
<title>std::__fill_n_a&lt;unsigned long, char&gt; (98 samples, 0.01%)</title><rect x="595.9505833905283" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(208,227,40)" rx="2" ry="2" _orig_x="551.5" _orig_width="0.2"/>
<text x="598.9505833905283" y="1759.5" _orig_x="554.53"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (120 samples, 0.02%)</title><rect x="115.28483184625944" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(209,89,24)" rx="2" ry="2" _orig_x="432.8" _orig_width="0.2"/>
<text x="118.28483184625944" y="1791.5" _orig_x="435.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (80 samples, 0.01%)</title><rect x="794.77693891558" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(253,97,1)" rx="2" ry="2" _orig_x="600.6" _orig_width="0.1"/>
<text x="797.77693891558" y="1743.5" _orig_x="603.58"/>
</g>
<g>
<title>std::forward&lt;bool&gt; (96 samples, 0.01%)</title><rect x="851.8737131091285" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(209,26,14)" rx="2" ry="2" _orig_x="614.7" _orig_width="0.1"/>
<text x="854.8737131091285" y="1791.5" _orig_x="617.66"/>
</g>
<g>
<title>GetCmpBool (64 samples, 0.01%)</title><rect x="744.5641729581333" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(249,214,15)" rx="2" ry="2" _orig_x="588.2" _orig_width="0.1"/>
<text x="747.5641729581333" y="1903.5" _orig_x="591.22"/>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (453 samples, 0.07%)</title><rect x="206.27590940288255" y="2005" width="0.8730267673301304" height="15.0" fill="rgb(217,158,44)" rx="2" ry="2" _orig_x="249.6" _orig_width="0.8"/>
<text x="209.27590940288255" y="2015.5" _orig_x="252.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.01%)</title><rect x="223.29993136582004" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(242,221,17)" rx="2" ry="2" _orig_x="265.2" _orig_width="0.2"/>
<text x="226.29993136582004" y="2047.5" _orig_x="268.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.02%)</title><rect x="57.2" y="1925" width="0.3" height="15.0" fill="rgb(241,200,26)" rx="2" ry="2"/>
<text x="60.21" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="453" width="2.182566918325326" height="15.0" fill="rgb(222,217,9)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="463.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (1,368 samples, 0.20%)</title><rect x="257.5662319835277" y="1973" width="2.619080301990391" height="15.0" fill="rgb(248,106,17)" rx="2" ry="2" _orig_x="296.6" _orig_width="2.4"/>
<text x="260.5662319835277" y="1983.5" _orig_x="299.56"/>
</g>
<g class="hide">
<title>irq/112-nvidia (10,119 samples, 1.50%)</title><rect x="343.6" y="2069" width="17.7" height="15.0" fill="rgb(234,155,18)" rx="2" ry="2"/>
<text x="346.55" y="2079.5"/>
</g>
<g class="hide">
<title>_int_malloc (110 samples, 0.02%)</title><rect x="218.0" y="2053" width="0.2" height="15.0" fill="rgb(242,146,38)" rx="2" ry="2"/>
<text x="221.02" y="2063.5"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (1,423 samples, 0.21%)</title><rect x="17.693891557995787" y="1797" width="10.123541523678792" height="15.0" fill="rgb(250,127,9)" rx="2" ry="2" _orig_x="408.7" _orig_width="2.5"/>
<text x="20.693891557995787" y="1807.5" _orig_x="411.74"/>
</g>
<g class="hide">
<title>[[vdso]] (89 samples, 0.01%)</title><rect x="220.8" y="2053" width="0.2" height="15.0" fill="rgb(212,203,51)" rx="2" ry="2"/>
<text x="223.82" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (79 samples, 0.01%)</title><rect x="131.95950583390518" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(248,227,52)" rx="2" ry="2" _orig_x="181.5" _orig_width="0.2"/>
<text x="134.95950583390518" y="1935.5" _orig_x="184.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.02%)</title><rect x="269.89773507206576" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(211,59,48)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1999.5" _orig_x="310.93"/>
</g>
<g class="hide">
<title>[perf-105834.map] (210 samples, 0.03%)</title><rect x="18.7" y="2037" width="0.4" height="15.0" fill="rgb(226,174,44)" rx="2" ry="2"/>
<text x="21.75" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,207 samples, 0.62%)</title><rect x="769.7055593685654" y="1829" width="8.075497597803707" height="15.0" fill="rgb(250,26,25)" rx="2" ry="2" _orig_x="765.9" _orig_width="7.4"/>
<text x="772.7055593685654" y="1839.5" _orig_x="768.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (243 samples, 0.04%)</title><rect x="212.05971173644468" y="1717" width="0.4365133836650652" height="15.0" fill="rgb(238,37,33)" rx="2" ry="2" _orig_x="254.9" _orig_width="0.4"/>
<text x="215.05971173644468" y="1727.5" _orig_x="257.86"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (309 samples, 0.05%)</title><rect x="314.92107069320525" y="1877" width="2.42964996568291" height="15.0" fill="rgb(227,124,28)" rx="2" ry="2" _orig_x="482.1" _orig_width="0.6"/>
<text x="317.92107069320525" y="1887.5" _orig_x="485.15"/>
</g>
<g class="hide">
<title>malloc (126 samples, 0.02%)</title><rect x="339.8" y="2053" width="0.2" height="15.0" fill="rgb(233,44,35)" rx="2" ry="2"/>
<text x="342.77" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (1,369 samples, 0.20%)</title><rect x="101.9217570350034" y="1797" width="9.71859986273164" height="15.0" fill="rgb(236,18,11)" rx="2" ry="2" _orig_x="429.5" _orig_width="2.4"/>
<text x="104.9217570350034" y="1807.5" _orig_x="432.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="305.91008922443365" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(232,40,45)" rx="2" ry="2" _orig_x="340.9" _orig_width="0.1"/>
<text x="308.91008922443365" y="2031.5" _orig_x="343.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (506 samples, 0.08%)</title><rect x="264.659574468085" y="1813" width="0.9821551132463967" height="15.0" fill="rgb(209,208,15)" rx="2" ry="2" _orig_x="303.1" _orig_width="0.9"/>
<text x="267.659574468085" y="1823.5" _orig_x="306.07"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (83 samples, 0.01%)</title><rect x="1096.458476321208" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(235,73,30)" rx="2" ry="2" _orig_x="675.1" _orig_width="0.1"/>
<text x="1099.458476321208" y="1871.5" _orig_x="678.06"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (61 samples, 0.01%)</title><rect x="440.04804392587505" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(247,8,37)" rx="2" ry="2" _orig_x="513.0" _orig_width="0.1"/>
<text x="443.04804392587505" y="1807.5" _orig_x="516.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,697 samples, 0.85%)</title><rect x="73.57584076870272" y="1973" width="10.803706245710364" height="15.0" fill="rgb(218,68,36)" rx="2" ry="2" _orig_x="128.0" _orig_width="9.9"/>
<text x="76.57584076870272" y="1983.5" _orig_x="130.96"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1925" width="2.2916952642415924" height="15.0" fill="rgb(220,139,15)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1935.5" _orig_x="141.47"/>
</g>
<g class="hide">
<title>[unknown] (1,620 samples, 0.24%)</title><rect x="221.1" y="2053" width="2.8" height="15.0" fill="rgb(249,4,42)" rx="2" ry="2"/>
<text x="224.07" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.02%)</title><rect x="179.86684969114611" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(221,119,5)" rx="2" ry="2" _orig_x="225.4" _orig_width="0.3"/>
<text x="182.86684969114611" y="2031.5" _orig_x="228.42"/>
</g>
<g class="hide">
<title>[unknown] (109 samples, 0.02%)</title><rect x="63.2" y="2037" width="0.2" height="15.0" fill="rgb(235,65,34)" rx="2" ry="2"/>
<text x="66.20" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (219 samples, 0.03%)</title><rect x="661.5511324639673" y="1749" width="1.619766643788607" height="15.0" fill="rgb(211,29,31)" rx="2" ry="2" _orig_x="567.7" _orig_width="0.4"/>
<text x="664.5511324639673" y="1759.5" _orig_x="570.70"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (75 samples, 0.01%)</title><rect x="1185.9" y="2053" width="0.1" height="15.0" fill="rgb(227,193,5)" rx="2" ry="2"/>
<text x="1188.88" y="2063.5"/>
</g>
<g class="hide">
<title>kworker/4:2-eve (663 samples, 0.10%)</title><rect x="368.2" y="2069" width="1.1" height="15.0" fill="rgb(227,63,35)" rx="2" ry="2"/>
<text x="371.17" y="2079.5"/>
</g>
<g class="hide">
<title>JavaCalls::call_virtual (64 samples, 0.01%)</title><rect x="13.8" y="1973" width="0.1" height="15.0" fill="rgb(208,4,34)" rx="2" ry="2"/>
<text x="16.77" y="1983.5"/>
</g>
<g class="hide">
<title>github-desktop (2,448 samples, 0.36%)</title><rect x="220.8" y="2069" width="4.3" height="15.0" fill="rgb(253,5,39)" rx="2" ry="2"/>
<text x="223.82" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,185 samples, 0.32%)</title><rect x="411.7021276595744" y="1765" width="15.792724776938915" height="15.0" fill="rgb(245,140,50)" rx="2" ry="2" _orig_x="506.0" _orig_width="3.9"/>
<text x="414.7021276595744" y="1775.5" _orig_x="509.05"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1189" width="1.091283459162663" height="15.0" fill="rgb(244,150,25)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1199.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (218 samples, 0.03%)</title><rect x="109.21070693205216" y="1765" width="1.619766643788607" height="15.0" fill="rgb(246,127,21)" rx="2" ry="2" _orig_x="431.3" _orig_width="0.4"/>
<text x="112.21070693205216" y="1775.5" _orig_x="434.27"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (138 samples, 0.02%)</title><rect x="505.64859299931373" y="1877" width="1.214824982841455" height="15.0" fill="rgb(254,144,7)" rx="2" ry="2" _orig_x="529.2" _orig_width="0.3"/>
<text x="508.64859299931373" y="1887.5" _orig_x="532.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,942 samples, 0.29%)</title><rect x="794.1503088538091" y="2021" width="3.710363761153054" height="15.0" fill="rgb(246,114,6)" rx="2" ry="2" _orig_x="788.3" _orig_width="3.4"/>
<text x="797.1503088538091" y="2031.5" _orig_x="791.29"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator++ (154 samples, 0.02%)</title><rect x="987.1242278654771" y="1893" width="1.214824982841455" height="15.0" fill="rgb(214,94,47)" rx="2" ry="2" _orig_x="648.1" _orig_width="0.3"/>
<text x="990.1242278654771" y="1903.5" _orig_x="651.15"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (63 samples, 0.01%)</title><rect x="135.2333562113932" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(218,146,45)" rx="2" ry="2" _orig_x="184.5" _orig_width="0.1"/>
<text x="138.2333562113932" y="1999.5" _orig_x="187.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,317 samples, 0.20%)</title><rect x="795.350720658888" y="1893" width="2.509951956074125" height="15.0" fill="rgb(237,169,21)" rx="2" ry="2" _orig_x="789.4" _orig_width="2.3"/>
<text x="798.350720658888" y="1903.5" _orig_x="792.38"/>
</g>
<g class="hide">
<title>InotifyBackend::start (23,947 samples, 3.56%)</title><rect x="97.47494852436505" y="2021" width="45.724776938915575" height="15.0" fill="rgb(237,38,33)" rx="2" ry="2" _orig_x="149.9" _orig_width="41.9"/>
<text x="100.47494852436505" y="2031.5" _orig_x="152.85">InotifyBackend::start </text>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (362 samples, 0.05%)</title><rect x="37.53603294440636" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(236,53,32)" rx="2" ry="2" _orig_x="413.6" _orig_width="0.7"/>
<text x="40.53603294440636" y="1823.5" _orig_x="416.65"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (310 samples, 0.05%)</title><rect x="451.7913520933423" y="1765" width="2.0247083047357584" height="15.0" fill="rgb(244,65,43)" rx="2" ry="2" _orig_x="515.9" _orig_width="0.5"/>
<text x="454.7913520933423" y="1775.5" _orig_x="518.90"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="965" width="2.182566918325326" height="15.0" fill="rgb(219,168,27)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="975.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (746 samples, 0.11%)</title><rect x="65.1" y="1989" width="1.3" height="15.0" fill="rgb(216,221,7)" rx="2" ry="2"/>
<text x="68.05" y="1999.5"/>
</g>
<g>
<title>Row::GetSerializedSize (58 samples, 0.01%)</title><rect x="1125.6142759094025" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(251,53,51)" rx="2" ry="2" _orig_x="682.3" _orig_width="0.1"/>
<text x="1128.6142759094025" y="1951.5" _orig_x="685.31"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (59 samples, 0.01%)</title><rect x="1018.7096774193548" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(206,200,22)" rx="2" ry="2" _orig_x="655.9" _orig_width="0.1"/>
<text x="1021.7096774193548" y="1823.5" _orig_x="658.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (610 samples, 0.09%)</title><rect x="339.7398764584762" y="2021" width="1.091283459162663" height="15.0" fill="rgb(218,106,23)" rx="2" ry="2" _orig_x="371.9" _orig_width="1.0"/>
<text x="342.7398764584762" y="2031.5" _orig_x="374.86"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (60 samples, 0.01%)</title><rect x="902.4914207275225" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(206,220,12)" rx="2" ry="2" _orig_x="627.2" _orig_width="0.1"/>
<text x="905.4914207275225" y="1823.5" _orig_x="630.23"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="1957" width="0.2" height="15.0" fill="rgb(237,162,18)" rx="2" ry="2"/>
<text x="17.74" y="1967.5"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (242 samples, 0.04%)</title><rect x="88.96362388469457" y="1733" width="1.619766643788607" height="15.0" fill="rgb(245,183,35)" rx="2" ry="2" _orig_x="426.3" _orig_width="0.4"/>
<text x="91.96362388469457" y="1743.5" _orig_x="429.29"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="2005" width="0.2" height="15.0" fill="rgb(234,38,40)" rx="2" ry="2"/>
<text x="17.74" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="270.00686341798206" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(221,161,45)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1807.5" _orig_x="311.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (960 samples, 0.14%)</title><rect x="674.1043239533285" y="1829" width="6.884008236101578" height="15.0" fill="rgb(211,37,32)" rx="2" ry="2" _orig_x="570.8" _orig_width="1.7"/>
<text x="677.1043239533285" y="1839.5" _orig_x="573.77"/>
</g>
<g>
<title>std::priority_queue&lt;std::pair&lt;TableHeap*, int&gt;, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt;, TableHeap::cmp&gt;::push (1,489 samples, 0.22%)</title><rect x="1146.2663006177074" y="1941" width="10.528483184625944" height="15.0" fill="rgb(254,112,20)" rx="2" ry="2" _orig_x="687.4" _orig_width="2.6"/>
<text x="1149.2663006177074" y="1951.5" _orig_x="690.36"/>
</g>
<g class="hide">
<title>ntfs_attr_mst_pwrite (72 samples, 0.01%)</title><rect x="795.7" y="2053" width="0.1" height="15.0" fill="rgb(216,205,49)" rx="2" ry="2"/>
<text x="798.72" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.02%)</title><rect x="169.17227179135202" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(218,184,29)" rx="2" ry="2" _orig_x="215.6" _orig_width="0.2"/>
<text x="172.17227179135202" y="1903.5" _orig_x="218.58"/>
</g>
<g class="hide">
<title>[github-desktop] (65 samples, 0.01%)</title><rect x="175.6108442004117" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(225,90,37)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1903.5" _orig_x="224.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,972 samples, 0.44%)</title><rect x="91.25463280713785" y="2005" width="5.674673987645848" height="15.0" fill="rgb(238,24,1)" rx="2" ry="2" _orig_x="144.2" _orig_width="5.2"/>
<text x="94.25463280713785" y="2015.5" _orig_x="147.20"/>
</g>
<g>
<title>yyparse (776 samples, 0.12%)</title><rect x="1177.4468085106384" y="1989" width="5.669183253260123" height="15.0" fill="rgb(253,181,13)" rx="2" ry="2" _orig_x="695.1" _orig_width="1.4"/>
<text x="1180.4468085106384" y="1999.5" _orig_x="698.10"/>
</g>
<g class="hide">
<title>__poll (357 samples, 0.05%)</title><rect x="263.3" y="2053" width="0.7" height="15.0" fill="rgb(252,7,26)" rx="2" ry="2"/>
<text x="266.34" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="167.64447494852425" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(222,171,6)" rx="2" ry="2" _orig_x="214.2" _orig_width="0.1"/>
<text x="170.64447494852425" y="1823.5" _orig_x="217.16"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1,412 samples, 0.21%)</title><rect x="235.14756348661618" y="1813" width="10.123541523678792" height="15.0" fill="rgb(221,66,35)" rx="2" ry="2" _orig_x="462.4" _orig_width="2.5"/>
<text x="238.14756348661618" y="1823.5" _orig_x="465.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.01%)</title><rect x="56.8" y="2021" width="0.2" height="15.0" fill="rgb(229,8,45)" rx="2" ry="2"/>
<text x="59.84" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="66.04598490048033" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(217,140,12)" rx="2" ry="2" _orig_x="121.1" _orig_width="0.2"/>
<text x="69.04598490048033" y="2047.5" _orig_x="124.14"/>
</g>
<g class="hide">
<title>vivado (2,413 samples, 0.36%)</title><rect x="1181.8" y="2069" width="4.2" height="15.0" fill="rgb(241,65,21)" rx="2" ry="2"/>
<text x="1184.80" y="2079.5"/>
</g>
<g class="hide">
<title>operator new[] (446 samples, 0.07%)</title><rect x="104.02264927934102" y="1941" width="0.8730267673301304" height="15.0" fill="rgb(232,24,7)" rx="2" ry="2" _orig_x="155.9" _orig_width="0.8"/>
<text x="107.02264927934102" y="1951.5" _orig_x="158.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (158 samples, 0.02%)</title><rect x="56.5" y="1989" width="0.2" height="15.0" fill="rgb(246,66,51)" rx="2" ry="2"/>
<text x="59.45" y="1999.5"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1749" width="2.182566918325326" height="15.0" fill="rgb(206,222,40)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1759.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>__errno_location (133 samples, 0.02%)</title><rect x="32.4" y="2037" width="0.2" height="15.0" fill="rgb(223,135,14)" rx="2" ry="2"/>
<text x="35.37" y="2047.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (197 samples, 0.03%)</title><rect x="13.227865477007457" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(231,163,13)" rx="2" ry="2" _orig_x="72.7" _orig_width="0.3"/>
<text x="16.227865477007455" y="2047.5" _orig_x="75.67"/>
</g>
<g class="hide">
<title>__libc_sendmsg (59 samples, 0.01%)</title><rect x="170.59094028826348" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(205,210,43)" rx="2" ry="2" _orig_x="216.9" _orig_width="0.1"/>
<text x="173.59094028826348" y="2031.5" _orig_x="219.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="338.5394646533973" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(208,139,9)" rx="2" ry="2" _orig_x="370.8" _orig_width="0.2"/>
<text x="341.5394646533973" y="1903.5" _orig_x="373.83"/>
</g>
<g class="hide">
<title>expressvpnd (520 samples, 0.08%)</title><rect x="211.0" y="2069" width="0.9" height="15.0" fill="rgb(225,182,29)" rx="2" ry="2"/>
<text x="214.00" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (64 samples, 0.01%)</title><rect x="31.0" y="1973" width="0.1" height="15.0" fill="rgb(219,134,42)" rx="2" ry="2"/>
<text x="33.98" y="1983.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (646 samples, 0.10%)</title><rect x="259.44406314344525" y="1797" width="4.454358270418669" height="15.0" fill="rgb(213,197,41)" rx="2" ry="2" _orig_x="468.4" _orig_width="1.1"/>
<text x="262.44406314344525" y="1807.5" _orig_x="471.37"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (79 samples, 0.01%)</title><rect x="434.78380233356205" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(237,4,30)" rx="2" ry="2" _orig_x="511.7" _orig_width="0.2"/>
<text x="437.78380233356205" y="1823.5" _orig_x="514.71"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (568 samples, 0.08%)</title><rect x="682.2031571722716" y="1861" width="4.049416609471517" height="15.0" fill="rgb(239,62,14)" rx="2" ry="2" _orig_x="572.8" _orig_width="1.0"/>
<text x="685.2031571722716" y="1871.5" _orig_x="575.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,396 samples, 0.80%)</title><rect x="74.12148249828405" y="1957" width="10.258064516129032" height="15.0" fill="rgb(220,94,46)" rx="2" ry="2" _orig_x="128.5" _orig_width="9.4"/>
<text x="77.12148249828405" y="1967.5" _orig_x="131.49"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (133 samples, 0.02%)</title><rect x="299.1283459162662" y="1765" width="1.214824982841455" height="15.0" fill="rgb(232,170,6)" rx="2" ry="2" _orig_x="478.2" _orig_width="0.3"/>
<text x="302.1283459162662" y="1775.5" _orig_x="481.25"/>
</g>
<g>
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, TableHeap::cmp&gt; (2,386 samples, 0.35%)</title><rect x="1128.8538091969801" y="1925" width="17.00754975978037" height="15.0" fill="rgb(234,94,41)" rx="2" ry="2" _orig_x="683.1" _orig_width="4.2"/>
<text x="1131.8538091969801" y="1935.5" _orig_x="686.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="84.27041866849683" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(219,27,4)" rx="2" ry="2" _orig_x="137.8" _orig_width="0.1"/>
<text x="87.27041866849683" y="1807.5" _orig_x="140.83"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (659 samples, 0.10%)</title><rect x="627.5360329444061" y="1765" width="4.85929993136582" height="15.0" fill="rgb(221,115,8)" rx="2" ry="2" _orig_x="559.3" _orig_width="1.2"/>
<text x="630.5360329444061" y="1775.5" _orig_x="562.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,035 samples, 0.15%)</title><rect x="141.0171585449553" y="1861" width="2.0734385724090596" height="15.0" fill="rgb(224,22,16)" rx="2" ry="2" _orig_x="189.8" _orig_width="1.9"/>
<text x="144.0171585449553" y="1871.5" _orig_x="192.84"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (80 samples, 0.01%)</title><rect x="335.1681537405628" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(238,73,54)" rx="2" ry="2" _orig_x="487.1" _orig_width="0.1"/>
<text x="338.1681537405628" y="1887.5" _orig_x="490.06"/>
</g>
<g class="hide">
<title>[unknown] (4,987 samples, 0.74%)</title><rect x="10.742138364779832" y="2053" width="32.283018867924525" height="15.0" fill="rgb(234,142,3)" rx="2" ry="2" _orig_x="390.9" _orig_width="8.7"/>
<text x="13.742138364779832" y="2063.5" _orig_x="393.88">[u..</text>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (169 samples, 0.03%)</title><rect x="1153.9601921757032" y="1797" width="1.214824982841455" height="15.0" fill="rgb(210,65,10)" rx="2" ry="2" _orig_x="689.3" _orig_width="0.3"/>
<text x="1156.9601921757032" y="1807.5" _orig_x="692.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (168 samples, 0.02%)</title><rect x="332.75566231983515" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(220,80,29)" rx="2" ry="2" _orig_x="365.5" _orig_width="0.3"/>
<text x="335.75566231983515" y="1919.5" _orig_x="368.50"/>
</g>
<g class="hide">
<title>[unknown] (699 samples, 0.10%)</title><rect x="58.73438572409051" y="133" width="1.3095401509951956" height="15.0" fill="rgb(213,159,5)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.2"/>
<text x="61.73438572409051" y="143.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>epoll_wait (61 samples, 0.01%)</title><rect x="60.26218256691823" y="149" width="0.1091283459162663" height="15.0" fill="rgb(236,97,22)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="159.5" _orig_x="118.82"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (6,331 samples, 0.94%)</title><rect x="810.974605353466" y="1813" width="44.948524365133835" height="15.0" fill="rgb(228,43,4)" rx="2" ry="2" _orig_x="604.6" _orig_width="11.1"/>
<text x="813.974605353466" y="1823.5" _orig_x="607.59">std:..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.02%)</title><rect x="161.86067261496217" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(233,148,31)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1871.5" _orig_x="211.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (129 samples, 0.02%)</title><rect x="269.89773507206576" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(253,206,24)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="2031.5" _orig_x="310.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (989 samples, 0.15%)</title><rect x="63.20864790665742" y="2021" width="1.9643102264927934" height="15.0" fill="rgb(218,189,49)" rx="2" ry="2" _orig_x="118.5" _orig_width="1.8"/>
<text x="66.20864790665742" y="2031.5" _orig_x="121.52"/>
</g>
<g class="hide">
<title>[unknown] (70 samples, 0.01%)</title><rect x="201.69251887439938" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(239,48,54)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1935.5" _orig_x="248.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (416 samples, 0.06%)</title><rect x="194.38091969800948" y="2005" width="0.8730267673301304" height="15.0" fill="rgb(242,33,37)" rx="2" ry="2" _orig_x="238.7" _orig_width="0.8"/>
<text x="197.38091969800948" y="2015.5" _orig_x="241.75"/>
</g>
<g class="hide">
<title>[perf-123031.map] (119 samples, 0.02%)</title><rect x="86.8894989704872" y="1493" width="0.2182566918325326" height="15.0" fill="rgb(207,28,23)" rx="2" ry="2" _orig_x="140.2" _orig_width="0.2"/>
<text x="89.8894989704872" y="1503.5" _orig_x="143.17"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="181" width="1.091283459162663" height="15.0" fill="rgb(247,23,50)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="191.5" _orig_x="301.96"/>
</g>
<g>
<title>TypeChar::CompareLessThan (86 samples, 0.01%)</title><rect x="66.28689087165398" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(250,218,24)" rx="2" ry="2" _orig_x="420.7" _orig_width="0.1"/>
<text x="69.28689087165398" y="1855.5" _orig_x="423.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,001 samples, 0.15%)</title><rect x="358.29169526424147" y="1845" width="1.9643102264927934" height="15.0" fill="rgb(253,182,46)" rx="2" ry="2" _orig_x="388.9" _orig_width="1.8"/>
<text x="361.29169526424147" y="1855.5" _orig_x="391.90"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (58 samples, 0.01%)</title><rect x="703.2601235415236" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(233,37,22)" rx="2" ry="2" _orig_x="578.0" _orig_width="0.1"/>
<text x="706.2601235415236" y="1839.5" _orig_x="581.01"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (421 samples, 0.06%)</title><rect x="1114.6808510638298" y="1909" width="2.8345916266300617" height="15.0" fill="rgb(245,189,5)" rx="2" ry="2" _orig_x="679.6" _orig_width="0.7"/>
<text x="1117.6808510638298" y="1919.5" _orig_x="682.58"/>
</g>
<g>
<title>std::push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, TableHeap::cmp&gt; (1,382 samples, 0.21%)</title><rect x="1146.2663006177074" y="1925" width="9.71859986273164" height="15.0" fill="rgb(247,161,21)" rx="2" ry="2" _orig_x="687.4" _orig_width="2.4"/>
<text x="1149.2663006177074" y="1935.5" _orig_x="690.39"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (818 samples, 0.12%)</title><rect x="1146.6712422786547" y="1861" width="6.0741249142072755" height="15.0" fill="rgb(214,172,20)" rx="2" ry="2" _orig_x="687.5" _orig_width="1.5"/>
<text x="1149.6712422786547" y="1871.5" _orig_x="690.54"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (79 samples, 0.01%)</title><rect x="39.15579958819488" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(252,205,13)" rx="2" ry="2" _orig_x="414.0" _orig_width="0.1"/>
<text x="42.15579958819488" y="1775.5" _orig_x="416.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.02%)</title><rect x="337.2299245024021" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(227,1,30)" rx="2" ry="2" _orig_x="369.6" _orig_width="0.2"/>
<text x="340.2299245024021" y="1951.5" _orig_x="372.63"/>
</g>
<g class="hide">
<title>ntfs_enter_cache (60 samples, 0.01%)</title><rect x="788.4756348661633" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(246,105,35)" rx="2" ry="2" _orig_x="783.1" _orig_width="0.1"/>
<text x="791.4756348661633" y="2047.5" _orig_x="786.09"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (67 samples, 0.01%)</title><rect x="497.9547014413175" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(249,33,30)" rx="2" ry="2" _orig_x="527.3" _orig_width="0.1"/>
<text x="500.9547014413175" y="1839.5" _orig_x="530.31"/>
</g>
<g class="hide">
<title>[unknown] (866 samples, 0.13%)</title><rect x="11.8" y="2053" width="1.5" height="15.0" fill="rgb(245,104,21)" rx="2" ry="2"/>
<text x="14.78" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (61 samples, 0.01%)</title><rect x="132.697323266987" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(245,50,29)" rx="2" ry="2" _orig_x="437.1" _orig_width="0.1"/>
<text x="135.697323266987" y="1823.5" _orig_x="440.11"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (77 samples, 0.01%)</title><rect x="495.92999313658174" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(236,227,29)" rx="2" ry="2" _orig_x="526.8" _orig_width="0.1"/>
<text x="498.92999313658174" y="1775.5" _orig_x="529.77"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (800 samples, 0.12%)</title><rect x="277.6664378860671" y="1829" width="5.669183253260123" height="15.0" fill="rgb(252,115,7)" rx="2" ry="2" _orig_x="472.9" _orig_width="1.4"/>
<text x="280.6664378860671" y="1839.5" _orig_x="475.92"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (494 samples, 0.07%)</title><rect x="29.8" y="2037" width="0.8" height="15.0" fill="rgb(210,73,23)" rx="2" ry="2"/>
<text x="32.75" y="2047.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (99 samples, 0.01%)</title><rect x="254.1798215511325" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(225,127,12)" rx="2" ry="2" _orig_x="467.1" _orig_width="0.2"/>
<text x="257.1798215511325" y="1903.5" _orig_x="470.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (119 samples, 0.02%)</title><rect x="361.8" y="2053" width="0.2" height="15.0" fill="rgb(254,184,34)" rx="2" ry="2"/>
<text x="364.83" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.01%)</title><rect x="10.717913520933335" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(206,72,23)" rx="2" ry="2" _orig_x="70.4" _orig_width="0.1"/>
<text x="13.717913520933335" y="1919.5" _orig_x="73.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (176,565 samples, 26.22%)</title><rect x="830.9265614275909" y="1973" width="337.6431022649279" height="15.0" fill="rgb(245,188,38)" rx="2" ry="2" _orig_x="822.0" _orig_width="309.4"/>
<text x="833.9265614275909" y="1983.5" _orig_x="824.99">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (133 samples, 0.02%)</title><rect x="103.58613589567595" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(217,217,38)" rx="2" ry="2" _orig_x="155.5" _orig_width="0.3"/>
<text x="106.58613589567595" y="1967.5" _orig_x="158.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="1188.8" y="1957" width="0.1" height="15.0" fill="rgb(230,164,36)" rx="2" ry="2"/>
<text x="1191.76" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="805.7179135209333" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(233,98,19)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1919.5" _orig_x="801.89"/>
</g>
<g>
<title>Row::DeserializeFrom (3,448 samples, 0.51%)</title><rect x="16.88400823610153" y="1829" width="24.296499656829102" height="15.0" fill="rgb(209,188,31)" rx="2" ry="2" _orig_x="408.5" _orig_width="6.0"/>
<text x="19.88400823610153" y="1839.5" _orig_x="411.47"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1525" width="2.182566918325326" height="15.0" fill="rgb(243,9,25)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1535.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (156 samples, 0.02%)</title><rect x="14.31914893617012" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(243,157,16)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1999.5" _orig_x="76.66"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (163 samples, 0.02%)</title><rect x="656.2868908716539" y="1765" width="1.214824982841455" height="15.0" fill="rgb(223,31,50)" rx="2" ry="2" _orig_x="566.4" _orig_width="0.3"/>
<text x="659.2868908716539" y="1775.5" _orig_x="569.37"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (105 samples, 0.02%)</title><rect x="1137.3575840768704" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(208,35,46)" rx="2" ry="2" _orig_x="685.2" _orig_width="0.2"/>
<text x="1140.3575840768704" y="1775.5" _orig_x="688.20"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (507 samples, 0.08%)</title><rect x="769.2656142759092" y="1765" width="3.644474948524365" height="15.0" fill="rgb(216,186,10)" rx="2" ry="2" _orig_x="594.3" _orig_width="0.9"/>
<text x="772.2656142759092" y="1775.5" _orig_x="597.30"/>
</g>
<g class="hide">
<title>[unknown] (103 samples, 0.02%)</title><rect x="165.78929306794774" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(225,114,30)" rx="2" ry="2" _orig_x="212.5" _orig_width="0.2"/>
<text x="168.78929306794774" y="2047.5" _orig_x="215.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,627 samples, 1.43%)</title><rect x="759.3383665065201" y="1925" width="18.442690459849004" height="15.0" fill="rgb(240,127,31)" rx="2" ry="2" _orig_x="756.4" _orig_width="16.9"/>
<text x="762.3383665065201" y="1935.5" _orig_x="759.41">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>start_thread (492 samples, 0.07%)</title><rect x="14.0" y="2053" width="0.9" height="15.0" fill="rgb(239,209,36)" rx="2" ry="2"/>
<text x="17.04" y="2063.5"/>
</g>
<g class="hide">
<title>Refresh_Fileset (1,309 samples, 0.19%)</title><rect x="56.2" y="2069" width="2.3" height="15.0" fill="rgb(220,137,32)" rx="2" ry="2"/>
<text x="59.17" y="2079.5"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (95 samples, 0.01%)</title><rect x="579.3479752916951" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(220,99,37)" rx="2" ry="2" _orig_x="547.4" _orig_width="0.1"/>
<text x="582.3479752916951" y="1759.5" _orig_x="550.38"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (198 samples, 0.03%)</title><rect x="601.2148249828412" y="1797" width="1.619766643788607" height="15.0" fill="rgb(254,32,5)" rx="2" ry="2" _orig_x="552.8" _orig_width="0.4"/>
<text x="604.2148249828412" y="1807.5" _orig_x="555.85"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (3,473 samples, 0.52%)</title><rect x="783.8435140700068" y="1861" width="24.296499656829102" height="15.0" fill="rgb(252,117,17)" rx="2" ry="2" _orig_x="597.9" _orig_width="6.0"/>
<text x="786.8435140700068" y="1871.5" _orig_x="600.86">T..</text>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1717" width="1.091283459162663" height="15.0" fill="rgb(210,154,25)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1727.5" _orig_x="301.96"/>
</g>
<g>
<title>[[kernel.kallsyms]] (518 samples, 0.08%)</title><rect x="54.94852436513369" y="1781" width="3.644474948524365" height="15.0" fill="rgb(216,207,42)" rx="2" ry="2" _orig_x="417.9" _orig_width="0.9"/>
<text x="57.94852436513369" y="1791.5" _orig_x="420.87"/>
</g>
<g class="hide">
<title>__poll (159 samples, 0.02%)</title><rect x="179.86684969114611" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(251,110,18)" rx="2" ry="2" _orig_x="225.4" _orig_width="0.3"/>
<text x="182.86684969114611" y="2047.5" _orig_x="228.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="53.71448181194225" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(207,220,34)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="1951.5" _orig_x="112.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,083 samples, 0.31%)</title><rect x="349.45229924502394" y="1973" width="3.928620452985587" height="15.0" fill="rgb(211,104,23)" rx="2" ry="2" _orig_x="380.8" _orig_width="3.6"/>
<text x="352.45229924502394" y="1983.5" _orig_x="383.75"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::~vector (187 samples, 0.03%)</title><rect x="1167.3232669869594" y="1957" width="1.214824982841455" height="15.0" fill="rgb(232,175,29)" rx="2" ry="2" _orig_x="692.6" _orig_width="0.3"/>
<text x="1170.3232669869594" y="1967.5" _orig_x="695.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.02%)</title><rect x="58.0" y="1989" width="0.2" height="15.0" fill="rgb(217,204,30)" rx="2" ry="2"/>
<text x="60.97" y="1999.5"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (136 samples, 0.02%)</title><rect x="684.2278654770074" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(235,73,42)" rx="2" ry="2" _orig_x="573.3" _orig_width="0.2"/>
<text x="687.2278654770074" y="1823.5" _orig_x="576.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,122 samples, 0.17%)</title><rect x="1157.3459119496856" y="1973" width="7.421383647798742" height="15.0" fill="rgb(230,16,23)" rx="2" ry="2" _orig_x="699.9" _orig_width="2.0"/>
<text x="1160.3459119496856" y="1983.5" _orig_x="702.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (706 samples, 0.10%)</title><rect x="806.7000686341796" y="1749" width="1.418668496911462" height="15.0" fill="rgb(243,27,21)" rx="2" ry="2" _orig_x="799.8" _orig_width="1.3"/>
<text x="809.7000686341796" y="1759.5" _orig_x="802.84"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (161 samples, 0.02%)</title><rect x="187.17844886753593" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(213,153,48)" rx="2" ry="2" _orig_x="232.1" _orig_width="0.3"/>
<text x="190.17844886753593" y="2047.5" _orig_x="235.12"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1061" width="1.091283459162663" height="15.0" fill="rgb(229,170,46)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1071.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (79 samples, 0.01%)</title><rect x="633.2052161976666" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(229,83,43)" rx="2" ry="2" _orig_x="560.7" _orig_width="0.1"/>
<text x="636.2052161976666" y="1791.5" _orig_x="563.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,492 samples, 0.52%)</title><rect x="353.59917638984206" y="2037" width="6.656829100892244" height="15.0" fill="rgb(224,29,11)" rx="2" ry="2" _orig_x="384.6" _orig_width="6.1"/>
<text x="356.59917638984206" y="2047.5" _orig_x="387.55"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1285" width="2.182566918325326" height="15.0" fill="rgb(242,152,25)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1295.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1461" width="1.091283459162663" height="15.0" fill="rgb(254,45,19)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1471.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24,631 samples, 3.66%)</title><rect x="1120.9897048730265" y="1829" width="47.14344543582705" height="15.0" fill="rgb(208,148,16)" rx="2" ry="2" _orig_x="1087.8" _orig_width="43.2"/>
<text x="1123.9897048730265" y="1839.5" _orig_x="1090.82">[[kernel.kallsyms]] </text>
</g>
<g>
<title>DiskManager::ReadPhysicalPage (589 samples, 0.09%)</title><rect x="54.54358270418668" y="1845" width="4.049416609471517" height="15.0" fill="rgb(239,152,45)" rx="2" ry="2" _orig_x="417.8" _orig_width="1.0"/>
<text x="57.54358270418668" y="1855.5" _orig_x="420.75"/>
</g>
<g class="hide">
<title>[code] (240 samples, 0.04%)</title><rect x="14.755662319835176" y="1893" width="0.4365133836650652" height="15.0" fill="rgb(221,116,4)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1903.5" _orig_x="77.09"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (75 samples, 0.01%)</title><rect x="582.1825669183253" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(243,98,17)" rx="2" ry="2" _orig_x="548.1" _orig_width="0.1"/>
<text x="585.1825669183253" y="1775.5" _orig_x="551.10"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (228 samples, 0.03%)</title><rect x="137.9615648592998" y="1733" width="1.619766643788607" height="15.0" fill="rgb(240,12,29)" rx="2" ry="2" _orig_x="438.4" _orig_width="0.4"/>
<text x="140.9615648592998" y="1743.5" _orig_x="441.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (138 samples, 0.02%)</title><rect x="87.34385724090583" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(241,102,43)" rx="2" ry="2" _orig_x="425.9" _orig_width="0.2"/>
<text x="90.34385724090583" y="1695.5" _orig_x="428.88"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (223 samples, 0.03%)</title><rect x="702.4502402196292" y="1877" width="1.619766643788607" height="15.0" fill="rgb(228,20,20)" rx="2" ry="2" _orig_x="577.8" _orig_width="0.4"/>
<text x="705.4502402196292" y="1887.5" _orig_x="580.80"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="869" width="1.091283459162663" height="15.0" fill="rgb(209,69,2)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="879.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[github-desktop] (78 samples, 0.01%)</title><rect x="16.2" y="2037" width="0.1" height="15.0" fill="rgb(234,131,12)" rx="2" ry="2"/>
<text x="19.15" y="2047.5"/>
</g>
<g class="hide">
<title>kworker/6:1-eve (634 samples, 0.09%)</title><rect x="369.8" y="2069" width="1.2" height="15.0" fill="rgb(231,200,13)" rx="2" ry="2"/>
<text x="372.85" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="837" width="1.091283459162663" height="15.0" fill="rgb(235,44,53)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="847.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>g_unichar_ismark (66 samples, 0.01%)</title><rect x="251.12765957446797" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(243,206,19)" rx="2" ry="2" _orig_x="290.7" _orig_width="0.1"/>
<text x="254.12765957446797" y="2031.5" _orig_x="293.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,200 samples, 1.37%)</title><rect x="113.51681537405618" y="1813" width="17.569663692518876" height="15.0" fill="rgb(237,194,45)" rx="2" ry="2" _orig_x="164.6" _orig_width="16.1"/>
<text x="116.51681537405618" y="1823.5" _orig_x="167.62">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>_int_malloc (65 samples, 0.01%)</title><rect x="264.2" y="2053" width="0.1" height="15.0" fill="rgb(234,124,8)" rx="2" ry="2"/>
<text x="267.18" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (649 samples, 0.10%)</title><rect x="260.1853122855181" y="1973" width="1.2004118050789294" height="15.0" fill="rgb(207,172,34)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1983.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (120 samples, 0.02%)</title><rect x="13.0" y="1909" width="0.3" height="15.0" fill="rgb(246,5,1)" rx="2" ry="2"/>
<text x="16.04" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (306 samples, 0.05%)</title><rect x="154.11256005490725" y="1797" width="0.5456417295813315" height="15.0" fill="rgb(226,203,54)" rx="2" ry="2" _orig_x="201.8" _orig_width="0.5"/>
<text x="157.11256005490725" y="1807.5" _orig_x="204.81"/>
</g>
<g class="hide">
<title>__libc_write (1,133 samples, 0.17%)</title><rect x="805.9361702127659" y="1941" width="2.182566918325326" height="15.0" fill="rgb(230,120,2)" rx="2" ry="2" _orig_x="799.1" _orig_width="2.0"/>
<text x="808.9361702127659" y="1951.5" _orig_x="802.09"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (150 samples, 0.02%)</title><rect x="639.2793411118738" y="1829" width="1.214824982841455" height="15.0" fill="rgb(240,88,7)" rx="2" ry="2" _orig_x="562.2" _orig_width="0.3"/>
<text x="642.2793411118738" y="1839.5" _orig_x="565.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,163 samples, 0.17%)</title><rect x="128.90391214824973" y="1669" width="2.182566918325326" height="15.0" fill="rgb(253,19,24)" rx="2" ry="2" _orig_x="178.7" _orig_width="2.0"/>
<text x="131.90391214824973" y="1679.5" _orig_x="181.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (83 samples, 0.01%)</title><rect x="809.9739190116677" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(239,85,44)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="2015.5" _orig_x="805.83"/>
</g>
<g class="hide">
<title>[perf-123031.map] (212 samples, 0.03%)</title><rect x="86.67124227865467" y="1605" width="0.4365133836650652" height="15.0" fill="rgb(254,87,15)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1615.5" _orig_x="143.00"/>
</g>
<g>
<title>BPlusTreeIndex::AdjustBufferFor (88 samples, 0.01%)</title><rect x="708.9293067947837" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(244,72,46)" rx="2" ry="2" _orig_x="579.4" _orig_width="0.1"/>
<text x="711.9293067947837" y="1951.5" _orig_x="582.39"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (97 samples, 0.01%)</title><rect x="1083.9052848318463" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(235,113,18)" rx="2" ry="2" _orig_x="672.0" _orig_width="0.2"/>
<text x="1086.9052848318463" y="1919.5" _orig_x="675.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,283 samples, 0.78%)</title><rect x="144.6183939601921" y="1989" width="10.0398078242965" height="15.0" fill="rgb(241,50,33)" rx="2" ry="2" _orig_x="193.1" _orig_width="9.2"/>
<text x="147.6183939601921" y="1999.5" _orig_x="196.09"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (69 samples, 0.01%)</title><rect x="323.82978723404256" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(206,71,39)" rx="2" ry="2" _orig_x="484.3" _orig_width="0.2"/>
<text x="326.82978723404256" y="1871.5" _orig_x="487.33"/>
</g>
<g class="hide">
<title>[unknown] (155 samples, 0.02%)</title><rect x="714.9231297185999" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(207,30,12)" rx="2" ry="2" _orig_x="715.7" _orig_width="0.3"/>
<text x="717.9231297185999" y="2015.5" _orig_x="718.74"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (128 samples, 0.02%)</title><rect x="866.0466712422788" y="1861" width="1.214824982841455" height="15.0" fill="rgb(246,150,52)" rx="2" ry="2" _orig_x="618.2" _orig_width="0.3"/>
<text x="869.0466712422788" y="1871.5" _orig_x="621.25"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1173" width="1.091283459162663" height="15.0" fill="rgb(233,152,34)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1183.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (531 samples, 0.08%)</title><rect x="175.62113932738492" y="1749" width="3.644474948524365" height="15.0" fill="rgb(223,63,7)" rx="2" ry="2" _orig_x="447.7" _orig_width="0.9"/>
<text x="178.62113932738492" y="1759.5" _orig_x="450.65"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (173 samples, 0.03%)</title><rect x="1098.0782429649964" y="1909" width="1.214824982841455" height="15.0" fill="rgb(251,127,31)" rx="2" ry="2" _orig_x="675.5" _orig_width="0.3"/>
<text x="1101.0782429649964" y="1919.5" _orig_x="678.49"/>
</g>
<g>
<title>[libminisql_shared.so] (102 samples, 0.02%)</title><rect x="1172.182566918325" y="1973" width="0.4049416609471517" height="15.0" fill="rgb(238,89,50)" rx="2" ry="2" _orig_x="693.8" _orig_width="0.1"/>
<text x="1175.182566918325" y="1983.5" _orig_x="696.76"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (74 samples, 0.01%)</title><rect x="107.99588194921067" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(234,28,45)" rx="2" ry="2" _orig_x="431.0" _orig_width="0.1"/>
<text x="110.99588194921067" y="1775.5" _orig_x="433.99"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (164 samples, 0.02%)</title><rect x="48.064516129032164" y="1733" width="1.214824982841455" height="15.0" fill="rgb(214,207,3)" rx="2" ry="2" _orig_x="416.2" _orig_width="0.3"/>
<text x="51.064516129032164" y="1743.5" _orig_x="419.17"/>
</g>
<g class="hide">
<title>graphene_vec3_dot (308 samples, 0.05%)</title><rect x="218.6074124914206" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(206,210,21)" rx="2" ry="2" _orig_x="260.9" _orig_width="0.5"/>
<text x="221.6074124914206" y="2047.5" _orig_x="263.89"/>
</g>
<g>
<title>BPlusTree::GetValue (52,920 samples, 7.86%)</title><rect x="712.1688400823612" y="1941" width="375.3809196980096" height="15.0" fill="rgb(240,20,17)" rx="2" ry="2" _orig_x="580.2" _orig_width="92.7"/>
<text x="715.1688400823612" y="1951.5" _orig_x="583.17">BPlusTree::GetValue </text>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (116 samples, 0.02%)</title><rect x="313.3013040494165" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(245,144,6)" rx="2" ry="2" _orig_x="481.7" _orig_width="0.2"/>
<text x="316.3013040494165" y="1855.5" _orig_x="484.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,320 samples, 0.49%)</title><rect x="42.3" y="1909" width="5.8" height="15.0" fill="rgb(245,169,45)" rx="2" ry="2"/>
<text x="45.25" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="307.7652711050102" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(213,154,5)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1967.5" _orig_x="345.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,783 samples, 0.41%)</title><rect x="125.84831846259428" y="1733" width="5.238160603980782" height="15.0" fill="rgb(254,55,53)" rx="2" ry="2" _orig_x="175.9" _orig_width="4.8"/>
<text x="128.84831846259428" y="1743.5" _orig_x="178.86"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (83 samples, 0.01%)</title><rect x="957.1585449553879" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(222,192,20)" rx="2" ry="2" _orig_x="640.7" _orig_width="0.2"/>
<text x="960.1585449553879" y="1855.5" _orig_x="643.74"/>
</g>
<g class="hide">
<title>[unknown] (175 samples, 0.03%)</title><rect x="164.37062457103625" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(240,119,1)" rx="2" ry="2" _orig_x="211.2" _orig_width="0.3"/>
<text x="167.37062457103625" y="2047.5" _orig_x="214.18"/>
</g>
<g class="hide">
<title>thread_native_entry (64 samples, 0.01%)</title><rect x="13.88263555250505" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(251,119,19)" rx="2" ry="2" _orig_x="73.3" _orig_width="0.2"/>
<text x="16.88263555250505" y="2047.5" _orig_x="76.34"/>
</g>
<g class="hide">
<title>ntfs_pathname_to_inode (88 samples, 0.01%)</title><rect x="793.0590253946464" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(212,53,30)" rx="2" ry="2" _orig_x="787.3" _orig_width="0.2"/>
<text x="796.0590253946464" y="2047.5" _orig_x="790.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="56.5" y="1861" width="0.2" height="15.0" fill="rgb(232,4,0)" rx="2" ry="2"/>
<text x="59.53" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (844 samples, 0.13%)</title><rect x="63.536032944406216" y="1909" width="1.6369251887439944" height="15.0" fill="rgb(230,111,45)" rx="2" ry="2" _orig_x="118.8" _orig_width="1.5"/>
<text x="66.53603294440622" y="1919.5" _orig_x="121.78"/>
</g>
<g class="hide">
<title>clutter_actor_get_type (111 samples, 0.02%)</title><rect x="203.00205902539457" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(215,138,45)" rx="2" ry="2" _orig_x="246.6" _orig_width="0.2"/>
<text x="206.00205902539457" y="2015.5" _orig_x="249.58"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,225 samples, 0.18%)</title><rect x="310.87165408373374" y="1941" width="8.503774879890186" height="15.0" fill="rgb(212,189,29)" rx="2" ry="2" _orig_x="481.1" _orig_width="2.1"/>
<text x="313.87165408373374" y="1951.5" _orig_x="484.10"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (286 samples, 0.04%)</title><rect x="215.30542210020582" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(253,167,16)" rx="2" ry="2" _orig_x="457.5" _orig_width="0.5"/>
<text x="218.30542210020582" y="1823.5" _orig_x="460.53"/>
</g>
<g class="hide">
<title>[libxcb.so.1.1.0] (242 samples, 0.04%)</title><rect x="278.0" y="2053" width="0.4" height="15.0" fill="rgb(226,164,32)" rx="2" ry="2"/>
<text x="281.00" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (562 samples, 0.08%)</title><rect x="729.9862731640357" y="1861" width="4.049416609471517" height="15.0" fill="rgb(241,78,7)" rx="2" ry="2" _orig_x="584.6" _orig_width="1.0"/>
<text x="732.9862731640357" y="1871.5" _orig_x="587.62"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (264 samples, 0.04%)</title><rect x="342.05216197666437" y="1845" width="2.0247083047357584" height="15.0" fill="rgb(236,47,50)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.5"/>
<text x="345.05216197666437" y="1855.5" _orig_x="491.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(227,210,40)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="1983.5" _orig_x="806.06"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (70 samples, 0.01%)</title><rect x="703.2601235415236" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(234,56,52)" rx="2" ry="2" _orig_x="578.0" _orig_width="0.1"/>
<text x="706.2601235415236" y="1855.5" _orig_x="580.99"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (117 samples, 0.02%)</title><rect x="734.4406314344544" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(220,64,17)" rx="2" ry="2" _orig_x="585.7" _orig_width="0.2"/>
<text x="737.4406314344544" y="1903.5" _orig_x="588.67"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,045 samples, 0.16%)</title><rect x="84.91420727522306" y="1781" width="7.693891557995882" height="15.0" fill="rgb(215,9,21)" rx="2" ry="2" _orig_x="425.3" _orig_width="1.9"/>
<text x="87.91420727522306" y="1791.5" _orig_x="428.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.02%)</title><rect x="89.1811942347288" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(230,106,7)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1919.5" _orig_x="145.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (644 samples, 0.10%)</title><rect x="1174.8" y="1653" width="1.1" height="15.0" fill="rgb(227,167,22)" rx="2" ry="2"/>
<text x="1177.81" y="1663.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (145 samples, 0.02%)</title><rect x="328.6890871654083" y="1845" width="1.214824982841455" height="15.0" fill="rgb(217,18,42)" rx="2" ry="2" _orig_x="485.5" _orig_width="0.3"/>
<text x="331.6890871654083" y="1855.5" _orig_x="488.53"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (78 samples, 0.01%)</title><rect x="57.86135895676036" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(237,181,41)" rx="2" ry="2" _orig_x="113.6" _orig_width="0.2"/>
<text x="60.86135895676036" y="2031.5" _orig_x="116.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="37" width="0.2182566918325326" height="15.0" fill="rgb(245,140,26)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="47.5" _orig_x="119.14"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (138 samples, 0.02%)</title><rect x="873.7405628002746" y="1861" width="1.214824982841455" height="15.0" fill="rgb(250,106,40)" rx="2" ry="2" _orig_x="620.1" _orig_width="0.3"/>
<text x="876.7405628002746" y="1871.5" _orig_x="623.15"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="14.973919011667713" y="1717" width="0.2182566918325326" height="15.0" fill="rgb(207,175,45)" rx="2" ry="2" _orig_x="74.3" _orig_width="0.2"/>
<text x="17.97391901166771" y="1727.5" _orig_x="77.32"/>
</g>
<g>
<title>Row::DeserializeFrom (7,817 samples, 1.16%)</title><rect x="67.5017158544955" y="1845" width="55.477007549759776" height="15.0" fill="rgb(208,42,11)" rx="2" ry="2" _orig_x="421.0" _orig_width="13.7"/>
<text x="70.5017158544955" y="1855.5" _orig_x="424.00">Row::..</text>
</g>
<g class="hide">
<title>g_main_context_prepare (245 samples, 0.04%)</title><rect x="31.5" y="2021" width="0.4" height="15.0" fill="rgb(230,50,53)" rx="2" ry="2"/>
<text x="34.48" y="2031.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (138 samples, 0.02%)</title><rect x="13.555250514756253" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(232,106,10)" rx="2" ry="2" _orig_x="73.0" _orig_width="0.3"/>
<text x="16.555250514756253" y="2047.5" _orig_x="76.03"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (77 samples, 0.01%)</title><rect x="687.0624571036376" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(214,207,16)" rx="2" ry="2" _orig_x="574.0" _orig_width="0.1"/>
<text x="690.0624571036376" y="1823.5" _orig_x="576.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,379 samples, 0.35%)</title><rect x="773.197666437886" y="1797" width="4.583390528483185" height="15.0" fill="rgb(214,93,12)" rx="2" ry="2" _orig_x="769.1" _orig_width="4.2"/>
<text x="776.197666437886" y="1807.5" _orig_x="772.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="158.36856554564162" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(254,173,48)" rx="2" ry="2" _orig_x="205.7" _orig_width="0.1"/>
<text x="161.36856554564162" y="1935.5" _orig_x="208.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.02%)</title><rect x="89.07206588881252" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(220,219,8)" rx="2" ry="2" _orig_x="142.2" _orig_width="0.3"/>
<text x="92.07206588881252" y="1967.5" _orig_x="145.24"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (88 samples, 0.01%)</title><rect x="968.9018531228552" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(221,181,8)" rx="2" ry="2" _orig_x="643.6" _orig_width="0.2"/>
<text x="971.9018531228552" y="1855.5" _orig_x="646.62"/>
</g>
<g class="hide">
<title>__select (147 samples, 0.02%)</title><rect x="1186.6" y="2053" width="0.3" height="15.0" fill="rgb(238,154,17)" rx="2" ry="2"/>
<text x="1189.60" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,430 samples, 0.51%)</title><rect x="771.2333562113931" y="1813" width="6.547700754975978" height="15.0" fill="rgb(230,204,9)" rx="2" ry="2" _orig_x="767.3" _orig_width="6.0"/>
<text x="774.2333562113931" y="1823.5" _orig_x="770.27"/>
</g>
<g class="hide">
<title>[code] (458 samples, 0.07%)</title><rect x="16.4" y="1925" width="0.8" height="15.0" fill="rgb(206,77,1)" rx="2" ry="2"/>
<text x="19.39" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,345 samples, 0.20%)</title><rect x="13.33962264150956" y="1973" width="8.90566037735849" height="15.0" fill="rgb(226,31,5)" rx="2" ry="2" _orig_x="391.6" _orig_width="2.4"/>
<text x="16.33962264150956" y="1983.5" _orig_x="394.63"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (73 samples, 0.01%)</title><rect x="798.4214138641042" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(239,64,47)" rx="2" ry="2" _orig_x="601.5" _orig_width="0.1"/>
<text x="801.4214138641042" y="1759.5" _orig_x="604.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="307.7652711050102" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(211,68,38)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1951.5" _orig_x="345.61"/>
</g>
<g>
<title>BPlusTree::InternalInsert (19,721 samples, 2.93%)</title><rect x="365.133836650652" y="1893" width="139.70487302676733" height="15.0" fill="rgb(221,149,32)" rx="2" ry="2" _orig_x="494.5" _orig_width="34.5"/>
<text x="368.133836650652" y="1903.5" _orig_x="497.45">BPlusTree::InternalI..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="84.70693205216187" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(242,138,22)" rx="2" ry="2" _orig_x="138.2" _orig_width="0.1"/>
<text x="87.70693205216187" y="1855.5" _orig_x="141.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (79 samples, 0.01%)</title><rect x="385.38091969800956" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(250,198,23)" rx="2" ry="2" _orig_x="499.5" _orig_width="0.2"/>
<text x="388.38091969800956" y="1759.5" _orig_x="502.53"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (894 samples, 0.13%)</title><rect x="1000.487302676733" y="1893" width="6.0741249142072755" height="15.0" fill="rgb(232,135,52)" rx="2" ry="2" _orig_x="651.4" _orig_width="1.5"/>
<text x="1003.487302676733" y="1903.5" _orig_x="654.38"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (92 samples, 0.01%)</title><rect x="1133.3081674673988" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(254,156,35)" rx="2" ry="2" _orig_x="684.2" _orig_width="0.2"/>
<text x="1136.3081674673988" y="1727.5" _orig_x="687.22"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (150 samples, 0.02%)</title><rect x="652.6424159231296" y="1765" width="1.214824982841455" height="15.0" fill="rgb(242,14,1)" rx="2" ry="2" _orig_x="565.5" _orig_width="0.3"/>
<text x="655.6424159231296" y="1775.5" _orig_x="568.54"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.01%)</title><rect x="201.69251887439938" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(209,110,35)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1919.5" _orig_x="248.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.01%)</title><rect x="809.9739190116677" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(223,165,42)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1967.5" _orig_x="805.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (347 samples, 0.05%)</title><rect x="12.245710363761054" y="2005" width="0.6547700754975978" height="15.0" fill="rgb(236,27,1)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="2015.5" _orig_x="74.76"/>
</g>
<g>
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, long, std::pair&lt;TableHeap*, int&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TableHeap::cmp&gt; &gt; (2,303 samples, 0.34%)</title><rect x="1129.2587508579272" y="1893" width="16.60260809883322" height="15.0" fill="rgb(216,33,25)" rx="2" ry="2" _orig_x="683.2" _orig_width="4.1"/>
<text x="1132.2587508579272" y="1903.5" _orig_x="686.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (150 samples, 0.02%)</title><rect x="10.281400137268264" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(240,1,51)" rx="2" ry="2" _orig_x="70.0" _orig_width="0.2"/>
<text x="13.281400137268264" y="1887.5" _orig_x="72.96"/>
</g>
<g class="hide">
<title>[unknown] (17,734 samples, 2.63%)</title><rect x="231.1" y="2053" width="31.0" height="15.0" fill="rgb(210,74,15)" rx="2" ry="2"/>
<text x="234.05" y="2063.5">[u..</text>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (141 samples, 0.02%)</title><rect x="61.832532601235464" y="1829" width="1.214824982841455" height="15.0" fill="rgb(226,73,28)" rx="2" ry="2" _orig_x="419.6" _orig_width="0.3"/>
<text x="64.83253260123547" y="1839.5" _orig_x="422.61"/>
</g>
<g class="hide">
<title>[code] (478 samples, 0.07%)</title><rect x="16.4" y="1973" width="0.8" height="15.0" fill="rgb(237,178,4)" rx="2" ry="2"/>
<text x="19.36" y="1983.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (58 samples, 0.01%)</title><rect x="23.2" y="2037" width="0.1" height="15.0" fill="rgb(240,38,22)" rx="2" ry="2"/>
<text x="26.24" y="2047.5"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (291 samples, 0.04%)</title><rect x="463.1297185998629" y="1781" width="2.42964996568291" height="15.0" fill="rgb(221,181,37)" rx="2" ry="2" _orig_x="518.7" _orig_width="0.6"/>
<text x="466.1297185998629" y="1791.5" _orig_x="521.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (216 samples, 0.03%)</title><rect x="332.7385037748798" y="1861" width="1.214824982841455" height="15.0" fill="rgb(245,126,53)" rx="2" ry="2" _orig_x="486.5" _orig_width="0.3"/>
<text x="335.7385037748798" y="1871.5" _orig_x="489.46"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (1,572 samples, 0.23%)</title><rect x="173.1914893617022" y="1829" width="11.338366506520247" height="15.0" fill="rgb(221,53,6)" rx="2" ry="2" _orig_x="447.1" _orig_width="2.8"/>
<text x="176.1914893617022" y="1839.5" _orig_x="450.14"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.01%)</title><rect x="17.3" y="1941" width="0.1" height="15.0" fill="rgb(228,12,44)" rx="2" ry="2"/>
<text x="20.30" y="1951.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (906 samples, 0.13%)</title><rect x="114.07000686341793" y="1829" width="6.479066575154428" height="15.0" fill="rgb(246,191,35)" rx="2" ry="2" _orig_x="432.5" _orig_width="1.6"/>
<text x="117.07000686341793" y="1839.5" _orig_x="435.51"/>
</g>
<g>
<title>Type::GetInstance (115 samples, 0.02%)</title><rect x="762.7865477007551" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(227,204,40)" rx="2" ry="2" _orig_x="592.7" _orig_width="0.2"/>
<text x="765.7865477007551" y="1871.5" _orig_x="595.71"/>
</g>
<g class="hide">
<title>[unknown] (1,028 samples, 0.15%)</title><rect x="70.6" y="2053" width="1.8" height="15.0" fill="rgb(205,1,47)" rx="2" ry="2"/>
<text x="73.62" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1397" width="2.182566918325326" height="15.0" fill="rgb(214,195,43)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1407.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>ntfs_pathname_to_inode (73 samples, 0.01%)</title><rect x="798.1" y="2053" width="0.1" height="15.0" fill="rgb(236,170,42)" rx="2" ry="2"/>
<text x="801.06" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (314 samples, 0.05%)</title><rect x="341.26767330130394" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(212,200,42)" rx="2" ry="2" _orig_x="373.3" _orig_width="0.6"/>
<text x="344.26767330130394" y="1967.5" _orig_x="376.31"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (159 samples, 0.02%)</title><rect x="61.832532601235464" y="1845" width="1.214824982841455" height="15.0" fill="rgb(232,56,32)" rx="2" ry="2" _orig_x="419.6" _orig_width="0.3"/>
<text x="64.83253260123547" y="1855.5" _orig_x="422.60"/>
</g>
<g>
<title>IndexKeyComparator::operator (18,836 samples, 2.80%)</title><rect x="508.8881262868908" y="1893" width="133.63074811256004" height="15.0" fill="rgb(245,169,18)" rx="2" ry="2" _orig_x="530.0" _orig_width="33.0"/>
<text x="511.8881262868908" y="1903.5" _orig_x="533.04">IndexKeyComparat..</text>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (59 samples, 0.01%)</title><rect x="1041.3864104323952" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(244,63,36)" rx="2" ry="2" _orig_x="661.5" _orig_width="0.1"/>
<text x="1044.3864104323952" y="1807.5" _orig_x="664.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="180.08510638297864" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(254,73,36)" rx="2" ry="2" _orig_x="225.6" _orig_width="0.1"/>
<text x="183.08510638297864" y="1919.5" _orig_x="228.56"/>
</g>
<g>
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (147 samples, 0.02%)</title><rect x="882.2443376801648" y="1861" width="1.214824982841455" height="15.0" fill="rgb(245,163,25)" rx="2" ry="2" _orig_x="622.2" _orig_width="0.3"/>
<text x="885.2443376801648" y="1871.5" _orig_x="625.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.02%)</title><rect x="179.86684969114611" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(229,15,32)" rx="2" ry="2" _orig_x="225.4" _orig_width="0.3"/>
<text x="182.86684969114611" y="2015.5" _orig_x="228.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,486 samples, 0.22%)</title><rect x="60.09433962264151" y="1765" width="9.647798742138365" height="15.0" fill="rgb(213,147,14)" rx="2" ry="2" _orig_x="404.2" _orig_width="2.6"/>
<text x="63.09433962264151" y="1775.5" _orig_x="407.22"/>
</g>
<g class="hide">
<title>[code] (389 samples, 0.06%)</title><rect x="85.68908716540827" y="1621" width="0.6547700754975978" height="15.0" fill="rgb(208,104,50)" rx="2" ry="2" _orig_x="139.1" _orig_width="0.6"/>
<text x="88.68908716540827" y="1631.5" _orig_x="142.05"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (95 samples, 0.01%)</title><rect x="342.45710363761134" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(252,156,34)" rx="2" ry="2" _orig_x="488.9" _orig_width="0.1"/>
<text x="345.45710363761134" y="1807.5" _orig_x="491.87"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (422 samples, 0.06%)</title><rect x="622.6767330130406" y="1765" width="2.8345916266300617" height="15.0" fill="rgb(248,50,32)" rx="2" ry="2" _orig_x="558.1" _orig_width="0.7"/>
<text x="625.6767330130406" y="1775.5" _orig_x="561.06"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="853" width="1.091283459162663" height="15.0" fill="rgb(225,111,44)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="863.5" _orig_x="301.96"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (853 samples, 0.13%)</title><rect x="157.80370624571037" y="1797" width="6.0741249142072755" height="15.0" fill="rgb(222,95,41)" rx="2" ry="2" _orig_x="443.3" _orig_width="1.5"/>
<text x="160.80370624571037" y="1807.5" _orig_x="446.32"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (180 samples, 0.03%)</title><rect x="323.4248455730953" y="1893" width="1.214824982841455" height="15.0" fill="rgb(229,116,12)" rx="2" ry="2" _orig_x="484.2" _orig_width="0.3"/>
<text x="326.4248455730953" y="1903.5" _orig_x="487.20"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (520 samples, 0.08%)</title><rect x="102.60398078242955" y="1957" width="0.9821551132463967" height="15.0" fill="rgb(207,160,51)" rx="2" ry="2" _orig_x="154.6" _orig_width="0.9"/>
<text x="105.60398078242955" y="1967.5" _orig_x="157.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="180.08510638297864" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(223,52,44)" rx="2" ry="2" _orig_x="225.6" _orig_width="0.1"/>
<text x="183.08510638297864" y="1903.5" _orig_x="228.56"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (131 samples, 0.02%)</title><rect x="434.78380233356205" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(215,162,22)" rx="2" ry="2" _orig_x="511.7" _orig_width="0.2"/>
<text x="437.78380233356205" y="1839.5" _orig_x="514.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (475 samples, 0.07%)</title><rect x="336.0295126973231" y="1973" width="0.8730267673301304" height="15.0" fill="rgb(221,47,1)" rx="2" ry="2" _orig_x="368.5" _orig_width="0.8"/>
<text x="339.0295126973231" y="1983.5" _orig_x="371.50"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (62 samples, 0.01%)</title><rect x="325.8544955387783" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(245,61,14)" rx="2" ry="2" _orig_x="484.8" _orig_width="0.1"/>
<text x="328.8544955387783" y="1919.5" _orig_x="487.82"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1157" width="1.091283459162663" height="15.0" fill="rgb(222,224,41)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1167.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (798 samples, 0.12%)</title><rect x="212.93273850377474" y="2005" width="1.5277968428277282" height="15.0" fill="rgb(236,208,3)" rx="2" ry="2" _orig_x="255.7" _orig_width="1.4"/>
<text x="215.93273850377474" y="2015.5" _orig_x="258.70"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="565" width="2.182566918325326" height="15.0" fill="rgb(206,105,24)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="575.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,141 samples, 0.17%)</title><rect x="358.0734385724089" y="1877" width="2.182566918325326" height="15.0" fill="rgb(248,190,8)" rx="2" ry="2" _orig_x="388.7" _orig_width="2.0"/>
<text x="361.0734385724089" y="1887.5" _orig_x="391.65"/>
</g>
<g>
<title>Row::Row (95 samples, 0.01%)</title><rect x="383.35621139327384" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(239,67,7)" rx="2" ry="2" _orig_x="499.0" _orig_width="0.2"/>
<text x="386.35621139327384" y="1855.5" _orig_x="502.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (863 samples, 0.13%)</title><rect x="210.8592999313657" y="2005" width="1.6369251887439944" height="15.0" fill="rgb(242,220,50)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="2015.5" _orig_x="256.77"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (149 samples, 0.02%)</title><rect x="159.42347288949887" y="1717" width="1.214824982841455" height="15.0" fill="rgb(235,78,8)" rx="2" ry="2" _orig_x="443.7" _orig_width="0.3"/>
<text x="162.42347288949887" y="1727.5" _orig_x="446.74"/>
</g>
<g>
<title>Row::~Row (3,794 samples, 0.56%)</title><rect x="614.1729581331502" y="1877" width="26.72614962251201" height="15.0" fill="rgb(249,75,17)" rx="2" ry="2" _orig_x="556.0" _orig_width="6.6"/>
<text x="617.1729581331502" y="1887.5" _orig_x="558.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,561 samples, 0.83%)</title><rect x="1166.2" y="1781" width="9.8" height="15.0" fill="rgb(218,21,44)" rx="2" ry="2"/>
<text x="1169.23" y="1791.5"/>
</g>
<g class="hide">
<title>perf (1,431 samples, 0.21%)</title><rect x="798.7" y="2069" width="2.5" height="15.0" fill="rgb(207,182,6)" rx="2" ry="2"/>
<text x="801.74" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (84 samples, 0.01%)</title><rect x="972.1413864104322" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(219,86,44)" rx="2" ry="2" _orig_x="644.4" _orig_width="0.1"/>
<text x="975.1413864104322" y="1871.5" _orig_x="647.38"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (203 samples, 0.03%)</title><rect x="1151.1256005490734" y="1813" width="1.214824982841455" height="15.0" fill="rgb(245,30,52)" rx="2" ry="2" _orig_x="688.6" _orig_width="0.3"/>
<text x="1154.1256005490734" y="1823.5" _orig_x="691.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (663 samples, 0.10%)</title><rect x="368.2" y="2053" width="1.1" height="15.0" fill="rgb(211,55,1)" rx="2" ry="2"/>
<text x="371.17" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (537 samples, 0.08%)</title><rect x="332.10089224433756" y="2037" width="0.9821551132463967" height="15.0" fill="rgb(223,212,17)" rx="2" ry="2" _orig_x="364.9" _orig_width="0.9"/>
<text x="335.10089224433756" y="2047.5" _orig_x="367.85"/>
</g>
<g class="hide">
<title>[unknown] (63 samples, 0.01%)</title><rect x="1186.1" y="2053" width="0.1" height="15.0" fill="rgb(225,84,4)" rx="2" ry="2"/>
<text x="1189.10" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (550 samples, 0.08%)</title><rect x="236.1770761839395" y="2037" width="1.091283459162663" height="15.0" fill="rgb(225,98,50)" rx="2" ry="2" _orig_x="277.0" _orig_width="1.0"/>
<text x="239.1770761839395" y="2047.5" _orig_x="280.04"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (184 samples, 0.03%)</title><rect x="868.4763212079613" y="1861" width="1.214824982841455" height="15.0" fill="rgb(229,214,23)" rx="2" ry="2" _orig_x="618.8" _orig_width="0.3"/>
<text x="871.4763212079613" y="1871.5" _orig_x="621.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="14.5" y="1861" width="0.1" height="15.0" fill="rgb(234,172,39)" rx="2" ry="2"/>
<text x="17.48" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (881 samples, 0.13%)</title><rect x="64.1761006289309" y="1717" width="5.566037735849057" height="15.0" fill="rgb(226,154,34)" rx="2" ry="2" _orig_x="405.3" _orig_width="1.5"/>
<text x="67.1761006289309" y="1727.5" _orig_x="408.28"/>
</g>
<g class="hide">
<title>[libgio-2.0.so.0.6400.6] (132 samples, 0.02%)</title><rect x="166.22580645161284" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(248,150,22)" rx="2" ry="2" _orig_x="212.9" _orig_width="0.2"/>
<text x="169.22580645161284" y="2047.5" _orig_x="215.90"/>
</g>
<g>
<title>Row::~Row (88 samples, 0.01%)</title><rect x="1085.5250514756347" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(236,3,33)" rx="2" ry="2" _orig_x="672.4" _orig_width="0.2"/>
<text x="1088.5250514756347" y="1935.5" _orig_x="675.40"/>
</g>
<g class="hide">
<title>[github-desktop] (80 samples, 0.01%)</title><rect x="14.7" y="1909" width="0.2" height="15.0" fill="rgb(237,154,5)" rx="2" ry="2"/>
<text x="17.75" y="1919.5"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (398 samples, 0.06%)</title><rect x="69.53809196980086" y="2037" width="0.7638984214138641" height="15.0" fill="rgb(208,28,33)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="2047.5" _orig_x="127.27"/>
</g>
<g class="hide">
<title>ntfs_attr_lookup (590 samples, 0.09%)</title><rect x="785.529169526424" y="2037" width="1.2004118050789294" height="15.0" fill="rgb(253,123,50)" rx="2" ry="2" _orig_x="780.4" _orig_width="1.1"/>
<text x="788.529169526424" y="2047.5" _orig_x="783.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="307.98352779684274" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" _orig_x="342.8" _orig_width="0.1"/>
<text x="310.98352779684274" y="2015.5" _orig_x="345.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,037 samples, 0.15%)</title><rect x="63.06289308176105" y="1733" width="6.679245283018868" height="15.0" fill="rgb(223,114,34)" rx="2" ry="2" _orig_x="405.0" _orig_width="1.8"/>
<text x="66.06289308176105" y="1743.5" _orig_x="408.01"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (282 samples, 0.04%)</title><rect x="114.87989018531219" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(245,220,8)" rx="2" ry="2" _orig_x="432.7" _orig_width="0.5"/>
<text x="117.87989018531219" y="1823.5" _orig_x="435.66"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned_erms (65 samples, 0.01%)</title><rect x="17.0" y="1717" width="0.1" height="15.0" fill="rgb(236,3,29)" rx="2" ry="2"/>
<text x="20.01" y="1727.5"/>
</g>
<g class="hide">
<title>_nv009678rm (781 samples, 0.12%)</title><rect x="344.5" y="2053" width="1.3" height="15.0" fill="rgb(207,57,24)" rx="2" ry="2"/>
<text x="347.48" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (479 samples, 0.07%)</title><rect x="338.7577213452298" y="2021" width="0.8730267673301304" height="15.0" fill="rgb(234,115,16)" rx="2" ry="2" _orig_x="371.0" _orig_width="0.8"/>
<text x="341.7577213452298" y="2031.5" _orig_x="374.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (713 samples, 0.11%)</title><rect x="153.3486616334934" y="1829" width="1.3095401509951956" height="15.0" fill="rgb(226,69,53)" rx="2" ry="2" _orig_x="201.1" _orig_width="1.2"/>
<text x="156.3486616334934" y="1839.5" _orig_x="204.10"/>
</g>
<g class="hide">
<title>[code] (409 samples, 0.06%)</title><rect x="85.579958819492" y="1637" width="0.7638984214138641" height="15.0" fill="rgb(209,200,15)" rx="2" ry="2" _orig_x="139.0" _orig_width="0.7"/>
<text x="88.579958819492" y="1647.5" _orig_x="142.02"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (467 samples, 0.07%)</title><rect x="384.166094715168" y="1829" width="3.239533287577214" height="15.0" fill="rgb(239,105,3)" rx="2" ry="2" _orig_x="499.2" _orig_width="0.8"/>
<text x="387.166094715168" y="1839.5" _orig_x="502.21"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (140 samples, 0.02%)</title><rect x="179.86684969114611" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(230,179,2)" rx="2" ry="2" _orig_x="225.4" _orig_width="0.3"/>
<text x="182.86684969114611" y="1999.5" _orig_x="228.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.03%)</title><rect x="329.1544269045984" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(241,176,40)" rx="2" ry="2" _orig_x="362.2" _orig_width="0.4"/>
<text x="332.1544269045984" y="1983.5" _orig_x="365.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,801 samples, 0.42%)</title><rect x="342.57721345229913" y="1989" width="5.347288949897049" height="15.0" fill="rgb(242,51,36)" rx="2" ry="2" _orig_x="374.5" _orig_width="4.9"/>
<text x="345.57721345229913" y="1999.5" _orig_x="377.53"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (132 samples, 0.02%)</title><rect x="706.9045984900479" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(230,210,1)" rx="2" ry="2" _orig_x="578.9" _orig_width="0.2"/>
<text x="709.9045984900479" y="1887.5" _orig_x="581.87"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (100 samples, 0.01%)</title><rect x="63.04735758407673" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(206,158,41)" rx="2" ry="2" _orig_x="419.9" _orig_width="0.2"/>
<text x="66.04735758407674" y="1855.5" _orig_x="422.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (279 samples, 0.04%)</title><rect x="211.95058339052838" y="1749" width="0.5456417295813315" height="15.0" fill="rgb(205,47,17)" rx="2" ry="2" _orig_x="254.8" _orig_width="0.5"/>
<text x="214.95058339052838" y="1759.5" _orig_x="257.80"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="949" width="1.091283459162663" height="15.0" fill="rgb(220,67,28)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="959.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (62 samples, 0.01%)</title><rect x="403.6032944406314" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(214,155,20)" rx="2" ry="2" _orig_x="504.0" _orig_width="0.1"/>
<text x="406.6032944406314" y="1743.5" _orig_x="506.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (430 samples, 0.06%)</title><rect x="130.3225806451612" y="1637" width="0.7638984214138641" height="15.0" fill="rgb(235,69,20)" rx="2" ry="2" _orig_x="180.0" _orig_width="0.7"/>
<text x="133.3225806451612" y="1647.5" _orig_x="182.98"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (544 samples, 0.08%)</title><rect x="791.5374056280025" y="1749" width="3.644474948524365" height="15.0" fill="rgb(206,114,35)" rx="2" ry="2" _orig_x="599.8" _orig_width="0.9"/>
<text x="794.5374056280025" y="1759.5" _orig_x="602.77"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="613" width="2.182566918325326" height="15.0" fill="rgb(239,148,6)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="623.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (601 samples, 0.09%)</title><rect x="180.84900480439248" y="2037" width="1.091283459162663" height="15.0" fill="rgb(234,61,7)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="2047.5" _orig_x="229.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (304 samples, 0.05%)</title><rect x="770.0754975978036" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(237,14,3)" rx="2" ry="2" _orig_x="594.5" _orig_width="0.5"/>
<text x="773.0754975978036" y="1743.5" _orig_x="597.50"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (2,597 samples, 0.39%)</title><rect x="480.137268359643" y="1845" width="18.222374742621827" height="15.0" fill="rgb(224,98,30)" rx="2" ry="2" _orig_x="522.9" _orig_width="4.5"/>
<text x="483.137268359643" y="1855.5" _orig_x="525.87"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (161 samples, 0.02%)</title><rect x="572.4639670555938" y="1781" width="1.214824982841455" height="15.0" fill="rgb(225,50,13)" rx="2" ry="2" _orig_x="545.7" _orig_width="0.3"/>
<text x="575.4639670555938" y="1791.5" _orig_x="548.68"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (100 samples, 0.01%)</title><rect x="617.0075497597805" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(239,64,5)" rx="2" ry="2" _orig_x="556.7" _orig_width="0.1"/>
<text x="620.0075497597805" y="1823.5" _orig_x="559.66"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (256 samples, 0.04%)</title><rect x="1138.1674673987643" y="1765" width="1.619766643788607" height="15.0" fill="rgb(237,122,28)" rx="2" ry="2" _orig_x="685.4" _orig_width="0.4"/>
<text x="1141.1674673987643" y="1775.5" _orig_x="688.39"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (64 samples, 0.01%)</title><rect x="638.0645161290321" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(238,54,29)" rx="2" ry="2" _orig_x="561.9" _orig_width="0.1"/>
<text x="641.0645161290321" y="1855.5" _orig_x="564.86"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (80 samples, 0.01%)</title><rect x="306.82223747426224" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(242,219,9)" rx="2" ry="2" _orig_x="480.1" _orig_width="0.1"/>
<text x="309.82223747426224" y="1903.5" _orig_x="483.11"/>
</g>
<g class="hide">
<title>JVM_GetStackAccessControlContext (242 samples, 0.04%)</title><rect x="68.5" y="2005" width="0.4" height="15.0" fill="rgb(221,102,15)" rx="2" ry="2"/>
<text x="71.48" y="2015.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (67 samples, 0.01%)</title><rect x="1120.754975978037" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(241,134,39)" rx="2" ry="2" _orig_x="681.1" _orig_width="0.1"/>
<text x="1123.754975978037" y="1839.5" _orig_x="684.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="170.59094028826348" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(234,156,54)" rx="2" ry="2" _orig_x="216.9" _orig_width="0.1"/>
<text x="173.59094028826348" y="2015.5" _orig_x="219.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,074 samples, 1.05%)</title><rect x="35.7" y="1957" width="12.4" height="15.0" fill="rgb(232,31,36)" rx="2" ry="2"/>
<text x="38.68" y="1967.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (139 samples, 0.02%)</title><rect x="460.7000686341799" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(222,14,18)" rx="2" ry="2" _orig_x="518.1" _orig_width="0.2"/>
<text x="463.7000686341799" y="1775.5" _orig_x="521.07"/>
</g>
<g class="hide">
<title>gmain (441 samples, 0.07%)</title><rect x="225.1" y="2069" width="0.8" height="15.0" fill="rgb(230,119,20)" rx="2" ry="2"/>
<text x="228.11" y="2079.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (69 samples, 0.01%)</title><rect x="293.0542210020589" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(235,65,27)" rx="2" ry="2" _orig_x="476.7" _orig_width="0.1"/>
<text x="296.0542210020589" y="1871.5" _orig_x="479.70"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (1,128 samples, 0.17%)</title><rect x="659.1214824982842" y="1845" width="8.098833218943033" height="15.0" fill="rgb(240,110,25)" rx="2" ry="2" _orig_x="567.1" _orig_width="2.0"/>
<text x="662.1214824982842" y="1855.5" _orig_x="570.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,208 samples, 0.77%)</title><rect x="744.1695264241591" y="1829" width="9.930679478380233" height="15.0" fill="rgb(206,80,2)" rx="2" ry="2" _orig_x="742.5" _orig_width="9.1"/>
<text x="747.1695264241591" y="1839.5" _orig_x="745.48"/>
</g>
<g class="hide">
<title>g_string_insert_unichar (141 samples, 0.02%)</title><rect x="257.2388469457789" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(225,220,54)" rx="2" ry="2" _orig_x="296.3" _orig_width="0.2"/>
<text x="260.2388469457789" y="1999.5" _orig_x="299.28"/>
</g>
<g class="hide">
<title>Watcher::notify (93 samples, 0.01%)</title><rect x="135.66986959505823" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(225,223,16)" rx="2" ry="2" _orig_x="184.9" _orig_width="0.2"/>
<text x="138.66986959505823" y="2015.5" _orig_x="187.89"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (101 samples, 0.01%)</title><rect x="231.90803019903916" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(247,84,23)" rx="2" ry="2" _orig_x="461.6" _orig_width="0.2"/>
<text x="234.90803019903916" y="1839.5" _orig_x="464.60"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::__normal_iterator (59 samples, 0.01%)</title><rect x="560.3157172271792" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(231,123,22)" rx="2" ry="2" _orig_x="542.7" _orig_width="0.1"/>
<text x="563.3157172271792" y="1839.5" _orig_x="545.70"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (623 samples, 0.09%)</title><rect x="397.5291695264241" y="1781" width="4.454358270418669" height="15.0" fill="rgb(247,53,47)" rx="2" ry="2" _orig_x="502.5" _orig_width="1.1"/>
<text x="400.5291695264241" y="1791.5" _orig_x="505.51"/>
</g>
<g class="hide">
<title>[perf-105834.map] (64 samples, 0.01%)</title><rect x="13.8" y="1893" width="0.1" height="15.0" fill="rgb(231,49,36)" rx="2" ry="2"/>
<text x="16.77" y="1903.5"/>
</g>
<g class="hide">
<title>[code] (170 samples, 0.03%)</title><rect x="86.01647220315708" y="1333" width="0.3273850377487989" height="15.0" fill="rgb(212,192,13)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1343.5" _orig_x="142.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.02%)</title><rect x="56.5" y="1877" width="0.2" height="15.0" fill="rgb(243,228,48)" rx="2" ry="2"/>
<text x="59.51" y="1887.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (59 samples, 0.01%)</title><rect x="693.1365820178448" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(244,16,35)" rx="2" ry="2" _orig_x="575.5" _orig_width="0.1"/>
<text x="696.1365820178448" y="1855.5" _orig_x="578.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,017 samples, 0.15%)</title><rect x="271.4255319148935" y="2005" width="1.9643102264927934" height="15.0" fill="rgb(252,94,37)" rx="2" ry="2" _orig_x="309.3" _orig_width="1.8"/>
<text x="274.4255319148935" y="2015.5" _orig_x="312.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="212.605353466026" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(230,143,37)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1999.5" _orig_x="258.42"/>
</g>
<g>
<title>__xstat64 (772 samples, 0.11%)</title><rect x="719.862731640357" y="1877" width="5.669183253260123" height="15.0" fill="rgb(235,145,23)" rx="2" ry="2" _orig_x="582.1" _orig_width="1.4"/>
<text x="722.862731640357" y="1887.5" _orig_x="585.13"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (58 samples, 0.01%)</title><rect x="61.42759094028821" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(225,192,30)" rx="2" ry="2" _orig_x="419.5" _orig_width="0.1"/>
<text x="64.42759094028821" y="1855.5" _orig_x="422.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,555 samples, 0.38%)</title><rect x="283.97529169526416" y="1909" width="4.910775566231983" height="15.0" fill="rgb(214,201,31)" rx="2" ry="2" _orig_x="320.8" _orig_width="4.5"/>
<text x="286.97529169526416" y="1919.5" _orig_x="323.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (332 samples, 0.05%)</title><rect x="807.4639670555936" y="1685" width="0.6547700754975978" height="15.0" fill="rgb(248,111,16)" rx="2" ry="2" _orig_x="800.5" _orig_width="0.6"/>
<text x="810.4639670555936" y="1695.5" _orig_x="803.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (854 samples, 0.13%)</title><rect x="210.8592999313657" y="1989" width="1.6369251887439944" height="15.0" fill="rgb(251,179,30)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="1999.5" _orig_x="256.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.02%)</title><rect x="174.4104323953328" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" _orig_x="220.4" _orig_width="0.2"/>
<text x="177.4104323953328" y="1871.5" _orig_x="223.41"/>
</g>
<g class="hide">
<title>[code] (117 samples, 0.02%)</title><rect x="15.9" y="1733" width="0.2" height="15.0" fill="rgb(254,100,31)" rx="2" ry="2"/>
<text x="18.87" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,736 samples, 0.70%)</title><rect x="75.32189430336297" y="1941" width="9.057652711050103" height="15.0" fill="rgb(215,112,38)" rx="2" ry="2" _orig_x="129.6" _orig_width="8.3"/>
<text x="78.32189430336297" y="1951.5" _orig_x="132.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,713 samples, 1.15%)</title><rect x="739.3678792038435" y="1941" width="14.732326698695951" height="15.0" fill="rgb(232,180,31)" rx="2" ry="2" _orig_x="738.1" _orig_width="13.5"/>
<text x="742.3678792038435" y="1951.5" _orig_x="741.09"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="175.50171585449547" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(208,75,1)" rx="2" ry="2" _orig_x="221.4" _orig_width="0.2"/>
<text x="178.50171585449547" y="2031.5" _orig_x="224.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,165 samples, 1.81%)</title><rect x="107.84214138641035" y="1925" width="23.244337680164723" height="15.0" fill="rgb(215,52,10)" rx="2" ry="2" _orig_x="159.4" _orig_width="21.3"/>
<text x="110.84214138641035" y="1935.5" _orig_x="162.42">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[perf-123031.map] (61 samples, 0.01%)</title><rect x="86.99862731640349" y="1413" width="0.1091283459162663" height="15.0" fill="rgb(251,116,19)" rx="2" ry="2" _orig_x="140.3" _orig_width="0.1"/>
<text x="89.99862731640349" y="1423.5" _orig_x="143.27"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (345 samples, 0.05%)</title><rect x="847.824296499657" y="1781" width="2.42964996568291" height="15.0" fill="rgb(248,122,37)" rx="2" ry="2" _orig_x="613.7" _orig_width="0.6"/>
<text x="850.824296499657" y="1791.5" _orig_x="616.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="168.5175017158544" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(234,142,47)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1935.5" _orig_x="217.97"/>
</g>
<g class="hide">
<title>malloc (3,142 samples, 0.47%)</title><rect x="1168.4779874213837" y="2053" width="20.40880503144654" height="15.0" fill="rgb(238,196,37)" rx="2" ry="2" _orig_x="702.9" _orig_width="5.5"/>
<text x="1171.4779874213837" y="2063.5" _orig_x="705.89"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="597" width="1.091283459162663" height="15.0" fill="rgb(220,39,37)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="607.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1669" width="2.182566918325326" height="15.0" fill="rgb(233,152,36)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1679.5" _orig_x="117.41"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (82 samples, 0.01%)</title><rect x="883.0542210020589" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(215,137,13)" rx="2" ry="2" _orig_x="622.4" _orig_width="0.1"/>
<text x="886.0542210020589" y="1855.5" _orig_x="625.35"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (433 samples, 0.06%)</title><rect x="236.36238846945767" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(223,205,9)" rx="2" ry="2" _orig_x="462.7" _orig_width="0.7"/>
<text x="239.36238846945767" y="1791.5" _orig_x="465.68"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (2,084 samples, 0.31%)</title><rect x="230.69320521619764" y="1845" width="14.57789979409746" height="15.0" fill="rgb(238,208,9)" rx="2" ry="2" _orig_x="461.3" _orig_width="3.6"/>
<text x="233.69320521619764" y="1855.5" _orig_x="464.29"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (241 samples, 0.04%)</title><rect x="236.1770761839395" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(246,104,19)" rx="2" ry="2" _orig_x="277.0" _orig_width="0.5"/>
<text x="239.1770761839395" y="2031.5" _orig_x="280.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.02%)</title><rect x="221.66300617707606" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(234,100,14)" rx="2" ry="2" _orig_x="263.7" _orig_width="0.3"/>
<text x="224.66300617707606" y="1887.5" _orig_x="266.72"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (182 samples, 0.03%)</title><rect x="407.2477693891556" y="1717" width="1.214824982841455" height="15.0" fill="rgb(214,175,12)" rx="2" ry="2" _orig_x="504.9" _orig_width="0.3"/>
<text x="410.2477693891556" y="1727.5" _orig_x="507.88"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="213" width="1.091283459162663" height="15.0" fill="rgb(243,151,24)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="223.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (1,753 samples, 0.26%)</title><rect x="1030.0480439258752" y="1829" width="12.148249828414551" height="15.0" fill="rgb(221,189,37)" rx="2" ry="2" _orig_x="658.7" _orig_width="3.0"/>
<text x="1033.0480439258752" y="1839.5" _orig_x="661.67"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (80 samples, 0.01%)</title><rect x="506.05353466026054" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(208,134,47)" rx="2" ry="2" _orig_x="529.3" _orig_width="0.1"/>
<text x="509.05353466026054" y="1823.5" _orig_x="532.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,539 samples, 0.23%)</title><rect x="93.98284145504451" y="1909" width="2.9464653397391904" height="15.0" fill="rgb(224,49,16)" rx="2" ry="2" _orig_x="146.7" _orig_width="2.7"/>
<text x="96.98284145504451" y="1919.5" _orig_x="149.71"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (67 samples, 0.01%)</title><rect x="380.9265614275908" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(226,108,17)" rx="2" ry="2" _orig_x="498.4" _orig_width="0.2"/>
<text x="383.9265614275908" y="1807.5" _orig_x="501.43"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (58 samples, 0.01%)</title><rect x="530.754975978037" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(221,95,9)" rx="2" ry="2" _orig_x="535.4" _orig_width="0.1"/>
<text x="533.754975978037" y="1759.5" _orig_x="538.37"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (308 samples, 0.05%)</title><rect x="331.92862045298557" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(252,139,1)" rx="2" ry="2" _orig_x="486.3" _orig_width="0.5"/>
<text x="334.92862045298557" y="1903.5" _orig_x="489.30"/>
</g>
<g class="hide">
<title>QDBusConnection (64 samples, 0.01%)</title><rect x="56.1" y="2069" width="0.1" height="15.0" fill="rgb(243,176,40)" rx="2" ry="2"/>
<text x="59.05" y="2079.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (1,838 samples, 0.27%)</title><rect x="729.0006863417981" y="2037" width="3.4921070693205216" height="15.0" fill="rgb(223,164,44)" rx="2" ry="2" _orig_x="728.6" _orig_width="3.2"/>
<text x="732.0006863417981" y="2047.5" _orig_x="731.59"/>
</g>
<g>
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="356.22512010981467" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(250,81,26)" rx="2" ry="2" _orig_x="492.3" _orig_width="0.1"/>
<text x="359.22512010981467" y="1759.5" _orig_x="495.29"/>
</g>
<g class="hide">
<title>[Xorg] (220 samples, 0.03%)</title><rect x="74.8" y="2053" width="0.4" height="15.0" fill="rgb(248,162,40)" rx="2" ry="2"/>
<text x="77.79" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (99 samples, 0.01%)</title><rect x="653.0473575840768" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(215,23,49)" rx="2" ry="2" _orig_x="565.6" _orig_width="0.2"/>
<text x="656.0473575840768" y="1759.5" _orig_x="568.59"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (162 samples, 0.02%)</title><rect x="684.2278654770074" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(239,115,21)" rx="2" ry="2" _orig_x="573.3" _orig_width="0.2"/>
<text x="687.2278654770074" y="1839.5" _orig_x="576.26"/>
</g>
<g class="hide">
<title>[code] (289 samples, 0.04%)</title><rect x="69.64722031571714" y="1861" width="0.5456417295813315" height="15.0" fill="rgb(209,51,23)" rx="2" ry="2" _orig_x="124.4" _orig_width="0.5"/>
<text x="72.64722031571714" y="1871.5" _orig_x="127.44"/>
</g>
<g>
<title>Field::DeserializeFrom (3,284 samples, 0.49%)</title><rect x="69.52642415923125" y="1829" width="23.08167467398765" height="15.0" fill="rgb(207,129,22)" rx="2" ry="2" _orig_x="421.5" _orig_width="5.7"/>
<text x="72.52642415923125" y="1839.5" _orig_x="424.48">Fi..</text>
</g>
<g class="hide">
<title>std::__1::mutex::lock (61 samples, 0.01%)</title><rect x="135.56074124914198" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(221,194,41)" rx="2" ry="2" _orig_x="184.8" _orig_width="0.1"/>
<text x="138.56074124914198" y="1999.5" _orig_x="187.77"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (156 samples, 0.02%)</title><rect x="646.9732326698696" y="1909" width="1.214824982841455" height="15.0" fill="rgb(250,38,23)" rx="2" ry="2" _orig_x="564.1" _orig_width="0.3"/>
<text x="649.9732326698696" y="1919.5" _orig_x="567.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (144 samples, 0.02%)</title><rect x="21.7" y="1893" width="0.2" height="15.0" fill="rgb(206,107,29)" rx="2" ry="2"/>
<text x="24.68" y="1903.5"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (127 samples, 0.02%)</title><rect x="616.6026080988332" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(226,195,10)" rx="2" ry="2" _orig_x="556.6" _orig_width="0.2"/>
<text x="619.6026080988332" y="1839.5" _orig_x="559.63"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (66 samples, 0.01%)</title><rect x="736.3122855181879" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(209,41,27)" rx="2" ry="2" _orig_x="735.3" _orig_width="0.1"/>
<text x="739.3122855181879" y="2015.5" _orig_x="738.29"/>
</g>
<g class="hide">
<title>[code] (82 samples, 0.01%)</title><rect x="14.42827728208638" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(235,152,34)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1855.5" _orig_x="76.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,020 samples, 1.78%)</title><rect x="108.16952642415913" y="1893" width="22.91695264241592" height="15.0" fill="rgb(226,182,41)" rx="2" ry="2" _orig_x="159.7" _orig_width="21.0"/>
<text x="111.16952642415913" y="1903.5" _orig_x="162.67">[[kernel.kallsyms]] </text>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (7,871 samples, 1.17%)</title><rect x="1011.4207275223062" y="1893" width="55.88194921070694" height="15.0" fill="rgb(231,193,29)" rx="2" ry="2" _orig_x="654.1" _orig_width="13.8"/>
<text x="1014.4207275223062" y="1903.5" _orig_x="657.15">Simpl..</text>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (77 samples, 0.01%)</title><rect x="910.9951956074123" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(208,222,54)" rx="2" ry="2" _orig_x="629.3" _orig_width="0.2"/>
<text x="913.9951956074123" y="1839.5" _orig_x="632.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (495 samples, 0.07%)</title><rect x="65.5" y="1893" width="0.9" height="15.0" fill="rgb(210,114,24)" rx="2" ry="2"/>
<text x="68.49" y="1903.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (60 samples, 0.01%)</title><rect x="148.49004804392584" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(229,203,20)" rx="2" ry="2" _orig_x="441.0" _orig_width="0.1"/>
<text x="151.49004804392584" y="1839.5" _orig_x="444.02"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (99 samples, 0.01%)</title><rect x="39.15579958819488" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(252,108,27)" rx="2" ry="2" _orig_x="414.0" _orig_width="0.1"/>
<text x="42.15579958819488" y="1791.5" _orig_x="416.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,738 samples, 0.26%)</title><rect x="356.87302676733003" y="1925" width="3.382978723404255" height="15.0" fill="rgb(227,188,29)" rx="2" ry="2" _orig_x="387.6" _orig_width="3.1"/>
<text x="359.87302676733003" y="1935.5" _orig_x="390.61"/>
</g>
<g class="hide">
<title>_nv034944rm (145 samples, 0.02%)</title><rect x="359.5" y="2053" width="0.2" height="15.0" fill="rgb(244,121,48)" rx="2" ry="2"/>
<text x="362.49" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (62 samples, 0.01%)</title><rect x="891.1530542210019" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(219,58,47)" rx="2" ry="2" _orig_x="624.4" _orig_width="0.1"/>
<text x="894.1530542210019" y="1855.5" _orig_x="627.39"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (63 samples, 0.01%)</title><rect x="122.0" y="2053" width="0.1" height="15.0" fill="rgb(249,95,52)" rx="2" ry="2"/>
<text x="124.97" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.01%)</title><rect x="21.503144654088135" y="1717" width="0.7421383647798743" height="15.0" fill="rgb(208,34,9)" rx="2" ry="2" _orig_x="393.8" _orig_width="0.2"/>
<text x="24.503144654088135" y="1727.5" _orig_x="396.83"/>
</g>
<g class="hide">
<title>__libc_sigaction (63 samples, 0.01%)</title><rect x="173.9739190116677" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(209,197,30)" rx="2" ry="2" _orig_x="220.0" _orig_width="0.1"/>
<text x="176.9739190116677" y="2047.5" _orig_x="222.99"/>
</g>
<g class="hide">
<title>[perf-123031.map] (86 samples, 0.01%)</title><rect x="86.45298558682215" y="1525" width="0.1091283459162663" height="15.0" fill="rgb(249,128,51)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1535.5" _orig_x="142.76"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (628 samples, 0.09%)</title><rect x="397.5291695264241" y="1797" width="4.454358270418669" height="15.0" fill="rgb(236,40,11)" rx="2" ry="2" _orig_x="502.5" _orig_width="1.1"/>
<text x="400.5291695264241" y="1807.5" _orig_x="505.50"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="741" width="1.091283459162663" height="15.0" fill="rgb(229,36,49)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="751.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (292 samples, 0.04%)</title><rect x="178.8846945778997" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(241,168,49)" rx="2" ry="2" _orig_x="224.5" _orig_width="0.6"/>
<text x="181.8846945778997" y="2031.5" _orig_x="227.54"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (63 samples, 0.01%)</title><rect x="144.84557309540153" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(210,52,27)" rx="2" ry="2" _orig_x="440.1" _orig_width="0.1"/>
<text x="147.84557309540153" y="1807.5" _orig_x="443.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (95 samples, 0.01%)</title><rect x="169.17227179135202" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(229,117,1)" rx="2" ry="2" _orig_x="215.6" _orig_width="0.2"/>
<text x="172.17227179135202" y="1887.5" _orig_x="218.60"/>
</g>
<g>
<title>Row::GetField (97 samples, 0.01%)</title><rect x="608.5037748798902" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(245,130,21)" rx="2" ry="2" _orig_x="554.6" _orig_width="0.2"/>
<text x="611.5037748798902" y="1887.5" _orig_x="557.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (588 samples, 0.09%)</title><rect x="61.35346602608089" y="1957" width="1.091283459162663" height="15.0" fill="rgb(246,93,2)" rx="2" ry="2" _orig_x="116.8" _orig_width="1.0"/>
<text x="64.3534660260809" y="1967.5" _orig_x="119.77"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (96 samples, 0.01%)</title><rect x="862.8071379547013" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(235,16,10)" rx="2" ry="2" _orig_x="617.4" _orig_width="0.2"/>
<text x="865.8071379547013" y="1887.5" _orig_x="620.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (313 samples, 0.05%)</title><rect x="194.59917638984206" y="1989" width="0.6547700754975978" height="15.0" fill="rgb(253,24,42)" rx="2" ry="2" _orig_x="238.9" _orig_width="0.6"/>
<text x="197.59917638984206" y="1999.5" _orig_x="241.93"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (204 samples, 0.03%)</title><rect x="780.181880576527" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(238,198,18)" rx="2" ry="2" _orig_x="775.5" _orig_width="0.4"/>
<text x="783.181880576527" y="2047.5" _orig_x="778.51"/>
</g>
<g class="hide">
<title>[unknown] (1,141 samples, 0.17%)</title><rect x="58.73438572409051" y="325" width="2.182566918325326" height="15.0" fill="rgb(253,227,11)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="335.5" _orig_x="117.41"/>
</g>
<g>
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="57.3781743308167" y="1605" width="1.214824982841455" height="15.0" fill="rgb(245,148,4)" rx="2" ry="2" _orig_x="418.5" _orig_width="0.3"/>
<text x="60.3781743308167" y="1615.5" _orig_x="421.50"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (115 samples, 0.02%)</title><rect x="870.5010295126971" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(236,55,38)" rx="2" ry="2" _orig_x="619.3" _orig_width="0.2"/>
<text x="873.5010295126971" y="1887.5" _orig_x="622.31"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (101 samples, 0.01%)</title><rect x="481.7570350034315" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(211,122,39)" rx="2" ry="2" _orig_x="523.3" _orig_width="0.2"/>
<text x="484.7570350034315" y="1807.5" _orig_x="526.34"/>
</g>
<g class="hide">
<title>VMThread::loop (63 samples, 0.01%)</title><rect x="13.88263555250505" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(246,38,1)" rx="2" ry="2" _orig_x="73.3" _orig_width="0.2"/>
<text x="16.88263555250505" y="1999.5" _orig_x="76.34"/>
</g>
<g class="hide">
<title>g_signal_emit (118 samples, 0.02%)</title><rect x="266.6238846945778" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(237,197,52)" rx="2" ry="2" _orig_x="304.9" _orig_width="0.2"/>
<text x="269.6238846945778" y="2015.5" _orig_x="307.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (106 samples, 0.02%)</title><rect x="1182.7" y="1989" width="0.2" height="15.0" fill="rgb(230,208,51)" rx="2" ry="2"/>
<text x="1185.67" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (174 samples, 0.03%)</title><rect x="10.172271791352005" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(241,61,35)" rx="2" ry="2" _orig_x="69.9" _orig_width="0.3"/>
<text x="13.172271791352005" y="1903.5" _orig_x="72.92"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (114 samples, 0.02%)</title><rect x="799.6362388469455" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(244,172,49)" rx="2" ry="2" _orig_x="601.8" _orig_width="0.2"/>
<text x="802.6362388469455" y="1759.5" _orig_x="604.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="1167.735849056604" y="1989" width="0.7421383647798743" height="15.0" fill="rgb(216,106,34)" rx="2" ry="2" _orig_x="702.7" _orig_width="0.2"/>
<text x="1170.735849056604" y="1999.5" _orig_x="705.69"/>
</g>
<g class="hide">
<title>DirTree::update (699 samples, 0.10%)</title><rect x="99.98490048043915" y="1957" width="1.3095401509951956" height="15.0" fill="rgb(223,205,41)" rx="2" ry="2" _orig_x="152.2" _orig_width="1.2"/>
<text x="102.98490048043915" y="1967.5" _orig_x="155.16"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_deallocate (90 samples, 0.01%)</title><rect x="144.44063143445433" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(208,104,43)" rx="2" ry="2" _orig_x="440.0" _orig_width="0.2"/>
<text x="147.44063143445433" y="1823.5" _orig_x="443.04"/>
</g>
<g>
<title>[[kernel.kallsyms]] (762 samples, 0.11%)</title><rect x="720.2676733013042" y="1861" width="5.264241592312972" height="15.0" fill="rgb(234,142,49)" rx="2" ry="2" _orig_x="582.2" _orig_width="1.3"/>
<text x="723.2676733013042" y="1871.5" _orig_x="585.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (588 samples, 0.09%)</title><rect x="95.83802333562105" y="1877" width="1.091283459162663" height="15.0" fill="rgb(235,212,38)" rx="2" ry="2" _orig_x="148.4" _orig_width="1.0"/>
<text x="98.83802333562105" y="1887.5" _orig_x="151.37"/>
</g>
<g>
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="355.82017844886747" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(238,165,4)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1839.5" _orig_x="495.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="339.41249142072746" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(210,123,9)" rx="2" ry="2" _orig_x="371.6" _orig_width="0.2"/>
<text x="342.41249142072746" y="1919.5" _orig_x="374.60"/>
</g>
<g class="hide">
<title>__poll (261 samples, 0.04%)</title><rect x="168.8448867536032" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(246,2,11)" rx="2" ry="2" _orig_x="215.3" _orig_width="0.5"/>
<text x="171.8448867536032" y="2047.5" _orig_x="218.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (177 samples, 0.03%)</title><rect x="309.1839396019216" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(229,200,35)" rx="2" ry="2" _orig_x="343.9" _orig_width="0.3"/>
<text x="312.1839396019216" y="1983.5" _orig_x="346.87"/>
</g>
<g class="hide">
<title>g_main_context_query (109 samples, 0.02%)</title><rect x="55.1" y="2053" width="0.2" height="15.0" fill="rgb(206,116,50)" rx="2" ry="2"/>
<text x="58.10" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (335 samples, 0.05%)</title><rect x="1107.3919011667808" y="1877" width="2.0247083047357584" height="15.0" fill="rgb(252,124,13)" rx="2" ry="2" _orig_x="677.8" _orig_width="0.5"/>
<text x="1110.3919011667808" y="1887.5" _orig_x="680.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="170.59094028826348" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(242,144,34)" rx="2" ry="2" _orig_x="216.9" _orig_width="0.1"/>
<text x="173.59094028826348" y="1999.5" _orig_x="219.86"/>
</g>
<g class="hide">
<title>runtime.mstart1 (151 samples, 0.02%)</title><rect x="159.24159231297176" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(223,143,6)" rx="2" ry="2" _orig_x="206.5" _orig_width="0.3"/>
<text x="162.24159231297176" y="2015.5" _orig_x="209.53"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (100 samples, 0.01%)</title><rect x="886.6986959505831" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(249,192,8)" rx="2" ry="2" _orig_x="623.3" _orig_width="0.2"/>
<text x="889.6986959505831" y="1871.5" _orig_x="626.29"/>
</g>
<g class="hide">
<title>kworker/11:3-ev (555 samples, 0.08%)</title><rect x="364.8" y="2069" width="1.0" height="15.0" fill="rgb(215,13,46)" rx="2" ry="2"/>
<text x="367.82" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (611 samples, 0.09%)</title><rect x="260.1853122855181" y="53" width="1.091283459162663" height="15.0" fill="rgb(248,51,19)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="63.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,548 samples, 0.23%)</title><rect x="45.4" y="1845" width="2.7" height="15.0" fill="rgb(228,103,9)" rx="2" ry="2"/>
<text x="48.36" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (834 samples, 0.12%)</title><rect x="271.75291695264235" y="1957" width="1.6369251887439944" height="15.0" fill="rgb(231,94,9)" rx="2" ry="2" _orig_x="309.6" _orig_width="1.5"/>
<text x="274.75291695264235" y="1967.5" _orig_x="312.62"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (99 samples, 0.01%)</title><rect x="483.7817433081672" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(210,181,33)" rx="2" ry="2" _orig_x="523.8" _orig_width="0.2"/>
<text x="486.7817433081672" y="1807.5" _orig_x="526.79"/>
</g>
<g>
<title>Row::Row (1,679 samples, 0.25%)</title><rect x="998.4625943719972" y="1909" width="12.148249828414551" height="15.0" fill="rgb(208,126,2)" rx="2" ry="2" _orig_x="650.9" _orig_width="3.0"/>
<text x="1001.4625943719972" y="1919.5" _orig_x="653.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,121 samples, 1.80%)</title><rect x="107.95126973232661" y="1909" width="23.135209334248454" height="15.0" fill="rgb(244,114,45)" rx="2" ry="2" _orig_x="159.5" _orig_width="21.2"/>
<text x="110.95126973232661" y="1919.5" _orig_x="162.50">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (61 samples, 0.01%)</title><rect x="357.8448867536032" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(245,214,29)" rx="2" ry="2" _orig_x="492.7" _orig_width="0.1"/>
<text x="360.8448867536032" y="1935.5" _orig_x="495.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (433 samples, 0.06%)</title><rect x="332.21002059025386" y="1989" width="0.8730267673301304" height="15.0" fill="rgb(243,95,35)" rx="2" ry="2" _orig_x="365.0" _orig_width="0.8"/>
<text x="335.21002059025386" y="1999.5" _orig_x="368.04"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,066 samples, 0.16%)</title><rect x="659.5264241592314" y="1829" width="7.28894989704873" height="15.0" fill="rgb(228,76,43)" rx="2" ry="2" _orig_x="567.2" _orig_width="1.8"/>
<text x="662.5264241592314" y="1839.5" _orig_x="570.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (534 samples, 0.08%)</title><rect x="1161.427672955975" y="1925" width="3.339622641509434" height="15.0" fill="rgb(226,183,29)" rx="2" ry="2" _orig_x="701.0" _orig_width="0.9"/>
<text x="1164.427672955975" y="1935.5" _orig_x="703.97"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (82 samples, 0.01%)</title><rect x="155.96774193548376" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(246,6,32)" rx="2" ry="2" _orig_x="203.5" _orig_width="0.1"/>
<text x="158.96774193548376" y="2015.5" _orig_x="206.47"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (1,932 samples, 0.29%)</title><rect x="253.74673987645838" y="2005" width="3.710363761153054" height="15.0" fill="rgb(208,171,12)" rx="2" ry="2" _orig_x="293.1" _orig_width="3.4"/>
<text x="256.7467398764584" y="2015.5" _orig_x="296.15"/>
</g>
<g class="hide">
<title>ntfs_index_lookup (83 samples, 0.01%)</title><rect x="789.239533287577" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(226,7,2)" rx="2" ry="2" _orig_x="783.8" _orig_width="0.1"/>
<text x="792.239533287577" y="2047.5" _orig_x="786.78"/>
</g>
<g class="hide">
<title>[code] (174 samples, 0.03%)</title><rect x="86.01647220315708" y="1349" width="0.3273850377487989" height="15.0" fill="rgb(239,217,38)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1359.5" _orig_x="142.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="270.00686341798206" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(213,155,27)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1823.5" _orig_x="311.00"/>
</g>
<g>
<title>std::istream::get (142 samples, 0.02%)</title><rect x="1188.380233356211" y="2005" width="1.214824982841455" height="15.0" fill="rgb(233,115,1)" rx="2" ry="2" _orig_x="697.8" _orig_width="0.3"/>
<text x="1191.380233356211" y="2015.5" _orig_x="700.84"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (205 samples, 0.03%)</title><rect x="979.835277968428" y="1813" width="1.214824982841455" height="15.0" fill="rgb(211,146,41)" rx="2" ry="2" _orig_x="646.3" _orig_width="0.3"/>
<text x="982.835277968428" y="1823.5" _orig_x="649.28"/>
</g>
<g class="hide">
<title>[code] (124 samples, 0.02%)</title><rect x="14.2" y="1781" width="0.3" height="15.0" fill="rgb(241,30,47)" rx="2" ry="2"/>
<text x="17.24" y="1791.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="330.46396705559357" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(233,190,44)" rx="2" ry="2" _orig_x="363.4" _orig_width="0.4"/>
<text x="333.46396705559357" y="1935.5" _orig_x="366.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (564 samples, 0.08%)</title><rect x="61.35346602608089" y="1925" width="1.091283459162663" height="15.0" fill="rgb(250,206,5)" rx="2" ry="2" _orig_x="116.8" _orig_width="1.0"/>
<text x="64.3534660260809" y="1935.5" _orig_x="119.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="180.08510638297864" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(227,63,0)" rx="2" ry="2" _orig_x="225.6" _orig_width="0.1"/>
<text x="183.08510638297864" y="1887.5" _orig_x="228.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (120 samples, 0.02%)</title><rect x="372.0178448867535" y="1701" width="0.8098833218943035" height="15.0" fill="rgb(233,197,38)" rx="2" ry="2" _orig_x="496.2" _orig_width="0.2"/>
<text x="375.0178448867535" y="1711.5" _orig_x="499.20"/>
</g>
<g class="hide">
<title>__xstat64 (69 samples, 0.01%)</title><rect x="58.3" y="2037" width="0.1" height="15.0" fill="rgb(239,129,12)" rx="2" ry="2"/>
<text x="61.31" y="2047.5"/>
</g>
<g class="hide">
<title>g_slice_alloc (262 samples, 0.04%)</title><rect x="218.7" y="2053" width="0.5" height="15.0" fill="rgb(213,209,44)" rx="2" ry="2"/>
<text x="221.70" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (130 samples, 0.02%)</title><rect x="1175.7" y="1541" width="0.2" height="15.0" fill="rgb(224,52,54)" rx="2" ry="2"/>
<text x="1178.71" y="1551.5"/>
</g>
<g class="hide">
<title>_nv013246rm (78 samples, 0.01%)</title><rect x="347.1" y="2053" width="0.2" height="15.0" fill="rgb(225,68,54)" rx="2" ry="2"/>
<text x="350.15" y="2063.5"/>
</g>
<g>
<title>BPlusTree::InternalInsert (48,137 samples, 7.15%)</title><rect x="363.51407000686345" y="1925" width="341.7707618393961" height="15.0" fill="rgb(248,175,15)" rx="2" ry="2" _orig_x="494.1" _orig_width="84.4"/>
<text x="366.51407000686345" y="1935.5" _orig_x="497.13">BPlusTree::InternalInsert </text>
</g>
<g>
<title>SimpleMemHeap::Allocate (3,311 samples, 0.49%)</title><rect x="784.248455730954" y="1845" width="23.486616334934798" height="15.0" fill="rgb(252,217,16)" rx="2" ry="2" _orig_x="598.0" _orig_width="5.8"/>
<text x="787.248455730954" y="1855.5" _orig_x="601.00"/>
</g>
<g class="hide">
<title>[code] (249 samples, 0.04%)</title><rect x="85.90734385724082" y="1509" width="0.4365133836650652" height="15.0" fill="rgb(241,123,39)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1519.5" _orig_x="142.27"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (95 samples, 0.01%)</title><rect x="1057.9890185312288" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(235,59,1)" rx="2" ry="2" _orig_x="665.6" _orig_width="0.1"/>
<text x="1060.9890185312288" y="1807.5" _orig_x="668.58"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1573" width="2.182566918325326" height="15.0" fill="rgb(227,72,12)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1583.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (111 samples, 0.02%)</title><rect x="260.2539464653398" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(219,47,12)" rx="2" ry="2" _orig_x="468.6" _orig_width="0.2"/>
<text x="263.2539464653398" y="1759.5" _orig_x="471.64"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (329 samples, 0.05%)</title><rect x="215.30542210020582" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(225,203,54)" rx="2" ry="2" _orig_x="457.5" _orig_width="0.5"/>
<text x="218.30542210020582" y="1839.5" _orig_x="460.47"/>
</g>
<g class="hide">
<title>llseek@GLIBC_2.2.5 (193 samples, 0.03%)</title><rect x="1167.364779874214" y="2053" width="1.1132075471698113" height="15.0" fill="rgb(209,108,16)" rx="2" ry="2" _orig_x="702.6" _orig_width="0.3"/>
<text x="1170.364779874214" y="2063.5" _orig_x="705.55"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (71 samples, 0.01%)</title><rect x="1092.8140013726838" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(243,160,8)" rx="2" ry="2" _orig_x="674.2" _orig_width="0.1"/>
<text x="1095.8140013726838" y="1903.5" _orig_x="677.22"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (667 samples, 0.10%)</title><rect x="790.7275223061084" y="1765" width="4.454358270418669" height="15.0" fill="rgb(226,188,20)" rx="2" ry="2" _orig_x="599.6" _orig_width="1.1"/>
<text x="793.7275223061084" y="1775.5" _orig_x="602.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (452 samples, 0.07%)</title><rect x="213.58750857927237" y="1941" width="0.8730267673301304" height="15.0" fill="rgb(241,229,25)" rx="2" ry="2" _orig_x="256.3" _orig_width="0.8"/>
<text x="216.58750857927237" y="1951.5" _orig_x="259.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,174 samples, 0.17%)</title><rect x="14.452830188679204" y="1909" width="7.7924528301886795" height="15.0" fill="rgb(231,226,26)" rx="2" ry="2" _orig_x="391.9" _orig_width="2.1"/>
<text x="17.452830188679204" y="1919.5" _orig_x="394.93"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (457 samples, 0.07%)</title><rect x="105.16129032258065" y="1781" width="3.239533287577214" height="15.0" fill="rgb(237,214,51)" rx="2" ry="2" _orig_x="430.3" _orig_width="0.8"/>
<text x="108.16129032258065" y="1791.5" _orig_x="433.32"/>
</g>
<g class="hide">
<title>__libc_calloc (200 samples, 0.03%)</title><rect x="778.6540837336993" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(248,206,16)" rx="2" ry="2" _orig_x="774.1" _orig_width="0.4"/>
<text x="781.6540837336993" y="2047.5" _orig_x="777.11"/>
</g>
<g>
<title>std::_Destroy&lt;char*, char&gt; (68 samples, 0.01%)</title><rect x="219.3548387096774" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(230,81,23)" rx="2" ry="2" _orig_x="458.5" _orig_width="0.1"/>
<text x="222.3548387096774" y="1839.5" _orig_x="461.47"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (119 samples, 0.02%)</title><rect x="525.8956760466714" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(220,178,38)" rx="2" ry="2" _orig_x="534.2" _orig_width="0.2"/>
<text x="528.8956760466714" y="1695.5" _orig_x="537.16"/>
</g>
<g class="hide">
<title>[github-desktop] (116 samples, 0.02%)</title><rect x="178.44818119423465" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(218,112,34)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.2"/>
<text x="181.44818119423465" y="1759.5" _orig_x="227.07"/>
</g>
<g class="hide">
<title>[unknown] (9,038 samples, 1.34%)</title><rect x="122.5" y="2053" width="15.8" height="15.0" fill="rgb(231,72,49)" rx="2" ry="2"/>
<text x="125.46" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (61 samples, 0.01%)</title><rect x="1123.9945092656142" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(241,84,22)" rx="2" ry="2" _orig_x="681.9" _orig_width="0.1"/>
<text x="1126.9945092656142" y="1919.5" _orig_x="684.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="1973" width="48.67124227865477" height="15.0" fill="rgb(225,120,3)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="1983.5" _orig_x="1134.37">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (69 samples, 0.01%)</title><rect x="587.8517501715853" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(213,158,38)" rx="2" ry="2" _orig_x="549.5" _orig_width="0.1"/>
<text x="590.8517501715853" y="1855.5" _orig_x="552.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (344 samples, 0.05%)</title><rect x="12.245710363761054" y="1973" width="0.6547700754975978" height="15.0" fill="rgb(242,178,31)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1983.5" _orig_x="74.76"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (193 samples, 0.03%)</title><rect x="416.5614275909402" y="1669" width="1.619766643788607" height="15.0" fill="rgb(228,64,9)" rx="2" ry="2" _orig_x="507.2" _orig_width="0.4"/>
<text x="419.5614275909402" y="1679.5" _orig_x="510.23"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (948 samples, 0.14%)</title><rect x="1166.168840082361" y="1653" width="1.7460535346602608" height="15.0" fill="rgb(217,190,34)" rx="2" ry="2" _orig_x="1129.2" _orig_width="1.6"/>
<text x="1169.168840082361" y="1663.5" _orig_x="1132.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (176 samples, 0.03%)</title><rect x="476.8977350720659" y="1813" width="1.214824982841455" height="15.0" fill="rgb(218,80,21)" rx="2" ry="2" _orig_x="522.1" _orig_width="0.3"/>
<text x="479.8977350720659" y="1823.5" _orig_x="525.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="341.704186684969" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(219,69,40)" rx="2" ry="2" _orig_x="373.7" _orig_width="0.2"/>
<text x="344.704186684969" y="1903.5" _orig_x="376.73"/>
</g>
<g class="hide">
<title>runtime.mstart0 (151 samples, 0.02%)</title><rect x="159.24159231297176" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(234,40,16)" rx="2" ry="2" _orig_x="206.5" _orig_width="0.3"/>
<text x="162.24159231297176" y="2031.5" _orig_x="209.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.02%)</title><rect x="329.2635552505147" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(224,220,32)" rx="2" ry="2" _orig_x="362.3" _orig_width="0.3"/>
<text x="332.2635552505147" y="1935.5" _orig_x="365.32"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (2,384 samples, 0.35%)</title><rect x="410.89224433768015" y="1813" width="17.00754975978037" height="15.0" fill="rgb(216,176,49)" rx="2" ry="2" _orig_x="505.8" _orig_width="4.2"/>
<text x="413.89224433768015" y="1823.5" _orig_x="508.80"/>
</g>
<g class="hide">
<title>[unknown] (7,400 samples, 1.10%)</title><rect x="714.8140013726835" y="2021" width="14.18668496911462" height="15.0" fill="rgb(228,192,54)" rx="2" ry="2" _orig_x="715.6" _orig_width="13.0"/>
<text x="717.8140013726835" y="2031.5" _orig_x="718.63"/>
</g>
<g class="hide">
<title>[unknown] (630 samples, 0.09%)</title><rect x="260.1853122855181" y="1941" width="1.2004118050789294" height="15.0" fill="rgb(227,95,23)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1951.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (74 samples, 0.01%)</title><rect x="306.7831159917638" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(247,21,26)" rx="2" ry="2" _orig_x="341.7" _orig_width="0.1"/>
<text x="309.7831159917638" y="2015.5" _orig_x="344.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (170 samples, 0.03%)</title><rect x="265.3143445435826" y="1765" width="0.3273850377487989" height="15.0" fill="rgb(245,174,10)" rx="2" ry="2" _orig_x="303.7" _orig_width="0.3"/>
<text x="268.3143445435826" y="1775.5" _orig_x="306.66"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1637" width="2.182566918325326" height="15.0" fill="rgb(251,162,33)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1647.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="62.335621139327294" y="1765" width="0.1091283459162663" height="15.0" fill="rgb(233,216,28)" rx="2" ry="2" _orig_x="117.7" _orig_width="0.1"/>
<text x="65.33562113932729" y="1775.5" _orig_x="120.68"/>
</g>
<g class="hide">
<title>cogl_matrix_transform_points (64 samples, 0.01%)</title><rect x="215.55181880576518" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(209,226,46)" rx="2" ry="2" _orig_x="258.1" _orig_width="0.1"/>
<text x="218.55181880576518" y="2047.5" _orig_x="261.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.02%)</title><rect x="167.535346602608" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(240,45,9)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1919.5" _orig_x="217.05"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (124 samples, 0.02%)</title><rect x="734.4406314344544" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(253,97,16)" rx="2" ry="2" _orig_x="585.7" _orig_width="0.2"/>
<text x="737.4406314344544" y="1919.5" _orig_x="588.67"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (96 samples, 0.01%)</title><rect x="287.3850377487989" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(216,19,7)" rx="2" ry="2" _orig_x="475.3" _orig_width="0.2"/>
<text x="290.3850377487989" y="1855.5" _orig_x="478.35"/>
</g>
<g class="hide">
<title>[code] (483 samples, 0.07%)</title><rect x="15.3" y="1893" width="0.8" height="15.0" fill="rgb(223,146,29)" rx="2" ry="2"/>
<text x="18.28" y="1903.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (84 samples, 0.01%)</title><rect x="546.5477007549757" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(238,6,54)" rx="2" ry="2" _orig_x="539.3" _orig_width="0.1"/>
<text x="549.5477007549757" y="1727.5" _orig_x="542.29"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(209,34,14)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1951.5" _orig_x="226.92"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (324 samples, 0.05%)</title><rect x="463.1297185998629" y="1797" width="2.42964996568291" height="15.0" fill="rgb(211,99,23)" rx="2" ry="2" _orig_x="518.7" _orig_width="0.6"/>
<text x="466.1297185998629" y="1807.5" _orig_x="521.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,692 samples, 0.25%)</title><rect x="139.81674673987632" y="1877" width="3.273850377487989" height="15.0" fill="rgb(211,186,50)" rx="2" ry="2" _orig_x="188.7" _orig_width="3.0"/>
<text x="142.81674673987632" y="1887.5" _orig_x="191.69"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (226 samples, 0.03%)</title><rect x="227.45367192862037" y="1845" width="1.214824982841455" height="15.0" fill="rgb(249,169,28)" rx="2" ry="2" _orig_x="460.5" _orig_width="0.3"/>
<text x="230.45367192862037" y="1855.5" _orig_x="463.45"/>
</g>
<g class="hide">
<title>[unknown] (326 samples, 0.05%)</title><rect x="225.2" y="2053" width="0.6" height="15.0" fill="rgb(248,40,25)" rx="2" ry="2"/>
<text x="228.21" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (589 samples, 0.09%)</title><rect x="321.8050789293068" y="1909" width="4.049416609471517" height="15.0" fill="rgb(244,136,48)" rx="2" ry="2" _orig_x="483.8" _orig_width="1.0"/>
<text x="324.8050789293068" y="1919.5" _orig_x="486.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.02%)</title><rect x="161.86067261496217" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(212,154,33)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1967.5" _orig_x="211.86"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (73 samples, 0.01%)</title><rect x="398.7439945092656" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(212,205,2)" rx="2" ry="2" _orig_x="502.8" _orig_width="0.2"/>
<text x="401.7439945092656" y="1695.5" _orig_x="505.84"/>
</g>
<g class="hide">
<title>fcitx (199 samples, 0.03%)</title><rect x="211.9" y="2069" width="0.4" height="15.0" fill="rgb(246,186,54)" rx="2" ry="2"/>
<text x="214.91" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (4,398 samples, 0.65%)</title><rect x="257.45710363761145" y="1989" width="8.402882635552505" height="15.0" fill="rgb(206,121,46)" rx="2" ry="2" _orig_x="296.5" _orig_width="7.7"/>
<text x="260.45710363761145" y="1999.5" _orig_x="299.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (81 samples, 0.01%)</title><rect x="66.15511324639661" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(239,129,34)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1983.5" _orig_x="124.16"/>
</g>
<g class="hide">
<title>[code] (474 samples, 0.07%)</title><rect x="16.4" y="1957" width="0.8" height="15.0" fill="rgb(212,7,5)" rx="2" ry="2"/>
<text x="19.37" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (236 samples, 0.04%)</title><rect x="168.9540150995195" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(229,39,53)" rx="2" ry="2" _orig_x="215.4" _orig_width="0.4"/>
<text x="171.9540150995195" y="2015.5" _orig_x="218.35"/>
</g>
<g class="hide">
<title>[[vdso]] (127 samples, 0.02%)</title><rect x="301.21757035003424" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(245,156,34)" rx="2" ry="2" _orig_x="336.6" _orig_width="0.2"/>
<text x="304.21757035003424" y="2047.5" _orig_x="339.62"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (64 samples, 0.01%)</title><rect x="333.14344543582706" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(238,220,18)" rx="2" ry="2" _orig_x="486.6" _orig_width="0.2"/>
<text x="336.14344543582706" y="1807.5" _orig_x="489.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="1957" width="48.67124227865477" height="15.0" fill="rgb(209,222,38)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="1967.5" _orig_x="1134.37">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1637" width="0.1091283459162663" height="15.0" fill="rgb(221,19,16)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1647.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (551 samples, 0.08%)</title><rect x="36.71698113207543" y="1909" width="3.710691823899371" height="15.0" fill="rgb(213,75,50)" rx="2" ry="2" _orig_x="397.9" _orig_width="1.0"/>
<text x="39.71698113207543" y="1919.5" _orig_x="400.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,174 samples, 0.62%)</title><rect x="76.41317776252563" y="1925" width="7.96636925188744" height="15.0" fill="rgb(217,182,42)" rx="2" ry="2" _orig_x="130.6" _orig_width="7.3"/>
<text x="79.41317776252563" y="1935.5" _orig_x="133.63"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (490 samples, 0.07%)</title><rect x="637.6595744680849" y="1861" width="3.239533287577214" height="15.0" fill="rgb(222,31,11)" rx="2" ry="2" _orig_x="561.8" _orig_width="0.8"/>
<text x="640.6595744680849" y="1871.5" _orig_x="564.78"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1653" width="2.182566918325326" height="15.0" fill="rgb(250,14,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1663.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (129 samples, 0.02%)</title><rect x="1108.2017844886752" y="1845" width="1.214824982841455" height="15.0" fill="rgb(240,18,15)" rx="2" ry="2" _orig_x="678.0" _orig_width="0.3"/>
<text x="1111.2017844886752" y="1855.5" _orig_x="681.03"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (188 samples, 0.03%)</title><rect x="535.2093342484557" y="1749" width="1.214824982841455" height="15.0" fill="rgb(213,197,52)" rx="2" ry="2" _orig_x="536.5" _orig_width="0.3"/>
<text x="538.2093342484557" y="1759.5" _orig_x="539.50"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (114 samples, 0.02%)</title><rect x="399.9588194921071" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(218,216,30)" rx="2" ry="2" _orig_x="503.1" _orig_width="0.2"/>
<text x="402.9588194921071" y="1727.5" _orig_x="506.11"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (76 samples, 0.01%)</title><rect x="380.5216197666438" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(229,197,12)" rx="2" ry="2" _orig_x="498.3" _orig_width="0.1"/>
<text x="383.5216197666438" y="1807.5" _orig_x="501.28"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (79 samples, 0.01%)</title><rect x="40.775566231983376" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(207,189,19)" rx="2" ry="2" _orig_x="414.4" _orig_width="0.1"/>
<text x="43.775566231983376" y="1807.5" _orig_x="417.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (859 samples, 0.13%)</title><rect x="1166.277968428277" y="1621" width="1.6369251887439944" height="15.0" fill="rgb(215,54,34)" rx="2" ry="2" _orig_x="1129.3" _orig_width="1.5"/>
<text x="1169.277968428277" y="1631.5" _orig_x="1132.30"/>
</g>
<g class="hide">
<title>[unknown] (616 samples, 0.09%)</title><rect x="260.1853122855181" y="1349" width="1.091283459162663" height="15.0" fill="rgb(252,181,40)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1359.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (96 samples, 0.01%)</title><rect x="20.93342484557304" y="1653" width="0.8098833218943035" height="15.0" fill="rgb(220,76,29)" rx="2" ry="2" _orig_x="409.5" _orig_width="0.2"/>
<text x="23.93342484557304" y="1663.5" _orig_x="412.54"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (81 samples, 0.01%)</title><rect x="822.3129718599861" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(212,196,50)" rx="2" ry="2" _orig_x="607.4" _orig_width="0.2"/>
<text x="825.3129718599861" y="1759.5" _orig_x="610.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.02%)</title><rect x="169.17227179135202" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(213,103,4)" rx="2" ry="2" _orig_x="215.6" _orig_width="0.2"/>
<text x="172.17227179135202" y="1919.5" _orig_x="218.57"/>
</g>
<g class="hide">
<title>ntfs_inode_close (97 samples, 0.01%)</title><rect x="789.3486616334933" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(208,117,8)" rx="2" ry="2" _orig_x="783.9" _orig_width="0.2"/>
<text x="792.3486616334933" y="2047.5" _orig_x="786.93"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (164 samples, 0.02%)</title><rect x="20.93342484557304" y="1669" width="1.214824982841455" height="15.0" fill="rgb(253,133,22)" rx="2" ry="2" _orig_x="409.5" _orig_width="0.3"/>
<text x="23.93342484557304" y="1679.5" _orig_x="412.49"/>
</g>
<g>
<title>[[kernel.kallsyms]] (373 samples, 0.06%)</title><rect x="55.75840768702818" y="1685" width="2.8345916266300617" height="15.0" fill="rgb(225,138,11)" rx="2" ry="2" _orig_x="418.1" _orig_width="0.7"/>
<text x="58.75840768702818" y="1695.5" _orig_x="421.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (845 samples, 0.13%)</title><rect x="1183.9" y="1957" width="1.5" height="15.0" fill="rgb(217,4,5)" rx="2" ry="2"/>
<text x="1186.91" y="1967.5"/>
</g>
<g class="hide">
<title>[Xorg] (128 samples, 0.02%)</title><rect x="57.64310226492785" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(239,48,39)" rx="2" ry="2" _orig_x="113.4" _orig_width="0.2"/>
<text x="60.64310226492785" y="2031.5" _orig_x="116.40"/>
</g>
<g class="hide">
<title>[code] (148 samples, 0.02%)</title><rect x="69.86547700754966" y="1797" width="0.3273850377487989" height="15.0" fill="rgb(240,119,54)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1807.5" _orig_x="127.61"/>
</g>
<g class="hide">
<title>[code] (160 samples, 0.02%)</title><rect x="86.01647220315708" y="1285" width="0.3273850377487989" height="15.0" fill="rgb(233,59,27)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1295.5" _orig_x="142.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="53.71448181194225" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(254,170,24)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="1967.5" _orig_x="112.82"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (140 samples, 0.02%)</title><rect x="646.1633493479751" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(218,176,49)" rx="2" ry="2" _orig_x="563.9" _orig_width="0.2"/>
<text x="649.1633493479751" y="1887.5" _orig_x="566.88"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1781" width="2.182566918325326" height="15.0" fill="rgb(238,1,43)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1791.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>JavaCalls::call_helper (64 samples, 0.01%)</title><rect x="13.8" y="1941" width="0.1" height="15.0" fill="rgb(211,3,9)" rx="2" ry="2"/>
<text x="16.77" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (67 samples, 0.01%)</title><rect x="175.62113932738492" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(249,227,48)" rx="2" ry="2" _orig_x="447.7" _orig_width="0.1"/>
<text x="178.62113932738492" y="1743.5" _orig_x="450.72"/>
</g>
<g>
<title>TypeInt::CompareLessThan (80 samples, 0.01%)</title><rect x="746.9938229238157" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(246,67,19)" rx="2" ry="2" _orig_x="588.8" _orig_width="0.2"/>
<text x="749.9938229238157" y="1903.5" _orig_x="591.84"/>
</g>
<g class="hide">
<title>perf_mmap__push (1,167 samples, 0.17%)</title><rect x="805.8270418668495" y="1973" width="2.2916952642415924" height="15.0" fill="rgb(223,15,50)" rx="2" ry="2" _orig_x="799.0" _orig_width="2.1"/>
<text x="808.8270418668495" y="1983.5" _orig_x="802.04"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (58 samples, 0.01%)</title><rect x="131.48249828414552" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(215,184,33)" rx="2" ry="2" _orig_x="436.8" _orig_width="0.1"/>
<text x="134.48249828414552" y="1823.5" _orig_x="439.80"/>
</g>
<g class="hide">
<title>g_source_ref (168 samples, 0.02%)</title><rect x="236.94097460535335" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(222,153,23)" rx="2" ry="2" _orig_x="277.7" _orig_width="0.3"/>
<text x="239.94097460535335" y="2031.5" _orig_x="280.71"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (495 samples, 0.07%)</title><rect x="736.060398078243" y="1909" width="3.644474948524365" height="15.0" fill="rgb(245,131,25)" rx="2" ry="2" _orig_x="586.1" _orig_width="0.9"/>
<text x="739.060398078243" y="1919.5" _orig_x="589.11"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (110 samples, 0.02%)</title><rect x="519.821551132464" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(236,79,12)" rx="2" ry="2" _orig_x="532.7" _orig_width="0.2"/>
<text x="522.821551132464" y="1743.5" _orig_x="535.71"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="165" width="1.091283459162663" height="15.0" fill="rgb(209,122,45)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="175.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="13.3" y="2005" width="0.2" height="15.0" fill="rgb(214,160,0)" rx="2" ry="2"/>
<text x="16.35" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="13.0" y="1989" width="0.3" height="15.0" fill="rgb(224,28,34)" rx="2" ry="2"/>
<text x="15.97" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (155 samples, 0.02%)</title><rect x="14.31914893617012" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(224,156,35)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1983.5" _orig_x="76.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="329.1544269045984" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(206,65,32)" rx="2" ry="2" _orig_x="362.2" _orig_width="0.4"/>
<text x="332.1544269045984" y="1999.5" _orig_x="365.23"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (98 samples, 0.01%)</title><rect x="690.7069320521618" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(224,229,41)" rx="2" ry="2" _orig_x="574.9" _orig_width="0.2"/>
<text x="693.7069320521618" y="1855.5" _orig_x="577.92"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (157 samples, 0.02%)</title><rect x="284.9553877831159" y="1845" width="1.214824982841455" height="15.0" fill="rgb(234,184,29)" rx="2" ry="2" _orig_x="474.7" _orig_width="0.3"/>
<text x="287.9553877831159" y="1855.5" _orig_x="477.73"/>
</g>
<g class="hide">
<title>kswapd0 (205 samples, 0.03%)</title><rect x="362.2" y="2069" width="0.4" height="15.0" fill="rgb(238,146,44)" rx="2" ry="2"/>
<text x="365.23" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (223 samples, 0.03%)</title><rect x="270.8798901853122" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(253,41,48)" rx="2" ry="2" _orig_x="308.8" _orig_width="0.4"/>
<text x="273.8798901853122" y="1999.5" _orig_x="311.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="805.4996568291008" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(221,43,25)" rx="2" ry="2" _orig_x="798.7" _orig_width="0.2"/>
<text x="808.4996568291008" y="1967.5" _orig_x="801.75"/>
</g>
<g>
<title>operator new (103 samples, 0.02%)</title><rect x="1082.690459849005" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(239,108,54)" rx="2" ry="2" _orig_x="671.7" _orig_width="0.1"/>
<text x="1085.690459849005" y="1919.5" _orig_x="674.65"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (148 samples, 0.02%)</title><rect x="690.7069320521618" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(230,44,41)" rx="2" ry="2" _orig_x="574.9" _orig_width="0.2"/>
<text x="693.7069320521618" y="1887.5" _orig_x="577.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (914 samples, 0.14%)</title><rect x="271.64378860672605" y="1973" width="1.7460535346602608" height="15.0" fill="rgb(225,191,31)" rx="2" ry="2" _orig_x="309.5" _orig_width="1.6"/>
<text x="274.64378860672605" y="1983.5" _orig_x="312.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="328.28140013726824" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(247,215,25)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="2015.5" _orig_x="364.41"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (59 samples, 0.01%)</title><rect x="453.41111873713083" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(228,7,12)" rx="2" ry="2" _orig_x="516.3" _orig_width="0.1"/>
<text x="456.41111873713083" y="1743.5" _orig_x="519.32"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="357" width="1.091283459162663" height="15.0" fill="rgb(225,89,52)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="367.5" _orig_x="301.96"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (99 samples, 0.01%)</title><rect x="43.20521619766639" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(206,97,34)" rx="2" ry="2" _orig_x="415.0" _orig_width="0.1"/>
<text x="46.20521619766639" y="1839.5" _orig_x="417.95"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="709" width="2.182566918325326" height="15.0" fill="rgb(247,88,28)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="719.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (1,189 samples, 0.18%)</title><rect x="85.03431708991069" y="1893" width="2.2916952642415924" height="15.0" fill="rgb(224,150,43)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1903.5" _orig_x="141.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (328 samples, 0.05%)</title><rect x="11.372683596430928" y="1861" width="0.6547700754975978" height="15.0" fill="rgb(238,174,36)" rx="2" ry="2" _orig_x="71.0" _orig_width="0.6"/>
<text x="14.372683596430928" y="1871.5" _orig_x="74.02"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1813" width="1.091283459162663" height="15.0" fill="rgb(247,42,16)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1823.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (471 samples, 0.07%)</title><rect x="415.7515442690459" y="1717" width="3.239533287577214" height="15.0" fill="rgb(219,135,31)" rx="2" ry="2" _orig_x="507.0" _orig_width="0.8"/>
<text x="418.7515442690459" y="1727.5" _orig_x="509.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.02%)</title><rect x="21.7" y="1877" width="0.2" height="15.0" fill="rgb(212,6,34)" rx="2" ry="2"/>
<text x="24.72" y="1887.5"/>
</g>
<g class="hide">
<title>[github-desktop] (75 samples, 0.01%)</title><rect x="175.6108442004117" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(216,53,8)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1935.5" _orig_x="224.47"/>
</g>
<g class="hide">
<title>EventList::internalUpdate (223 samples, 0.03%)</title><rect x="101.29444063143437" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(251,43,30)" rx="2" ry="2" _orig_x="153.4" _orig_width="0.4"/>
<text x="104.29444063143437" y="1951.5" _orig_x="156.43"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (115 samples, 0.02%)</title><rect x="1120.35003431709" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(243,100,10)" rx="2" ry="2" _orig_x="681.0" _orig_width="0.2"/>
<text x="1123.35003431709" y="1855.5" _orig_x="684.03"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (470 samples, 0.07%)</title><rect x="264.3033630748113" y="1813" width="3.239533287577214" height="15.0" fill="rgb(220,161,28)" rx="2" ry="2" _orig_x="469.6" _orig_width="0.8"/>
<text x="267.3033630748113" y="1823.5" _orig_x="472.58"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1573" width="1.091283459162663" height="15.0" fill="rgb(225,133,19)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1583.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (186 samples, 0.03%)</title><rect x="118.92930679478371" y="1813" width="1.619766643788607" height="15.0" fill="rgb(244,208,25)" rx="2" ry="2" _orig_x="433.7" _orig_width="0.4"/>
<text x="121.92930679478371" y="1823.5" _orig_x="436.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (203 samples, 0.03%)</title><rect x="168.9540150995195" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(213,13,31)" rx="2" ry="2" _orig_x="215.4" _orig_width="0.4"/>
<text x="171.9540150995195" y="1967.5" _orig_x="218.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (426 samples, 0.06%)</title><rect x="404.00823610157863" y="1733" width="2.8345916266300617" height="15.0" fill="rgb(242,205,2)" rx="2" ry="2" _orig_x="504.1" _orig_width="0.7"/>
<text x="407.00823610157863" y="1743.5" _orig_x="507.09"/>
</g>
<g class="hide">
<title>g_main_context_check (941 samples, 0.14%)</title><rect x="291.5051475634865" y="2037" width="1.7460535346602608" height="15.0" fill="rgb(241,193,20)" rx="2" ry="2" _orig_x="327.7" _orig_width="1.6"/>
<text x="294.5051475634865" y="2047.5" _orig_x="330.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="13.3" y="1989" width="0.2" height="15.0" fill="rgb(238,108,26)" rx="2" ry="2"/>
<text x="16.35" y="1999.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (565 samples, 0.08%)</title><rect x="446.93205216197674" y="1781" width="3.644474948524365" height="15.0" fill="rgb(251,14,19)" rx="2" ry="2" _orig_x="514.7" _orig_width="0.9"/>
<text x="449.93205216197674" y="1791.5" _orig_x="517.65"/>
</g>
<g class="hide">
<title>[code] (64 samples, 0.01%)</title><rect x="17.3" y="1973" width="0.1" height="15.0" fill="rgb(207,2,11)" rx="2" ry="2"/>
<text x="20.30" y="1983.5"/>
</g>
<g class="hide">
<title>__poll (5,821 samples, 0.86%)</title><rect x="143.63623884694564" y="2021" width="11.131091283459162" height="15.0" fill="rgb(213,180,7)" rx="2" ry="2" _orig_x="192.2" _orig_width="10.2"/>
<text x="146.63623884694564" y="2031.5" _orig_x="195.15"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="2005" width="0.7" height="15.0" fill="rgb(239,158,15)" rx="2" ry="2"/>
<text x="17.04" y="2015.5"/>
</g>
<g>
<title>Row::DeserializeFrom (2,029 samples, 0.30%)</title><rect x="367.968428277282" y="1829" width="14.57789979409746" height="15.0" fill="rgb(206,47,51)" rx="2" ry="2" _orig_x="495.2" _orig_width="3.6"/>
<text x="370.968428277282" y="1839.5" _orig_x="498.23"/>
</g>
<g class="hide">
<title>EventList::update (99 samples, 0.01%)</title><rect x="99.2210020590253" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(248,70,1)" rx="2" ry="2" _orig_x="151.5" _orig_width="0.1"/>
<text x="102.2210020590253" y="1983.5" _orig_x="154.46"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (293 samples, 0.04%)</title><rect x="327.87920384351406" y="1909" width="2.0247083047357584" height="15.0" fill="rgb(215,122,7)" rx="2" ry="2" _orig_x="485.3" _orig_width="0.5"/>
<text x="330.87920384351406" y="1919.5" _orig_x="488.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (62 samples, 0.01%)</title><rect x="20.123541523678796" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(214,87,28)" rx="2" ry="2" _orig_x="409.3" _orig_width="0.1"/>
<text x="23.123541523678796" y="1711.5" _orig_x="412.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,556 samples, 0.97%)</title><rect x="741.5504461221688" y="1877" width="12.549759780370625" height="15.0" fill="rgb(252,70,33)" rx="2" ry="2" _orig_x="740.1" _orig_width="11.5"/>
<text x="744.5504461221688" y="1887.5" _orig_x="743.12"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (657 samples, 0.10%)</title><rect x="259.44406314344525" y="1813" width="4.454358270418669" height="15.0" fill="rgb(226,5,39)" rx="2" ry="2" _orig_x="468.4" _orig_width="1.1"/>
<text x="262.44406314344525" y="1823.5" _orig_x="471.35"/>
</g>
<g class="hide">
<title>[Xorg] (99 samples, 0.01%)</title><rect x="58.51612903225797" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(225,181,42)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.1"/>
<text x="61.51612903225797" y="1967.5" _orig_x="117.17"/>
</g>
<g class="hide">
<title>[libjvm.so] (138 samples, 0.02%)</title><rect x="13.555250514756253" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(246,94,24)" rx="2" ry="2" _orig_x="73.0" _orig_width="0.3"/>
<text x="16.555250514756253" y="2031.5" _orig_x="76.03"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (409 samples, 0.06%)</title><rect x="344.07687028140015" y="1877" width="2.8345916266300617" height="15.0" fill="rgb(210,149,27)" rx="2" ry="2" _orig_x="489.3" _orig_width="0.7"/>
<text x="347.07687028140015" y="1887.5" _orig_x="492.28"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (932 samples, 0.14%)</title><rect x="70.33630748112552" y="1765" width="6.884008236101578" height="15.0" fill="rgb(243,58,21)" rx="2" ry="2" _orig_x="421.7" _orig_width="1.7"/>
<text x="73.33630748112552" y="1775.5" _orig_x="424.74"/>
</g>
<g class="hide">
<title>wpa_supplicant (474 samples, 0.07%)</title><rect x="1189.1" y="2069" width="0.8" height="15.0" fill="rgb(220,229,53)" rx="2" ry="2"/>
<text x="1192.10" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,951 samples, 0.44%)</title><rect x="42.9" y="1893" width="5.2" height="15.0" fill="rgb(249,104,52)" rx="2" ry="2"/>
<text x="45.90" y="1903.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (109 samples, 0.02%)</title><rect x="671.674673987646" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(208,204,53)" rx="2" ry="2" _orig_x="570.2" _orig_width="0.2"/>
<text x="674.674673987646" y="1871.5" _orig_x="573.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="161.96980096087842" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(237,89,18)" rx="2" ry="2" _orig_x="209.0" _orig_width="0.1"/>
<text x="164.96980096087842" y="1807.5" _orig_x="211.99"/>
</g>
<g class="hide">
<title>g_thread_self (63 samples, 0.01%)</title><rect x="295.7611530542209" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(241,80,28)" rx="2" ry="2" _orig_x="331.6" _orig_width="0.1"/>
<text x="298.7611530542209" y="2047.5" _orig_x="334.63"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (245 samples, 0.04%)</title><rect x="106.37611530542215" y="1765" width="1.619766643788607" height="15.0" fill="rgb(207,87,3)" rx="2" ry="2" _orig_x="430.6" _orig_width="0.4"/>
<text x="109.37611530542215" y="1775.5" _orig_x="433.56"/>
</g>
<g class="hide">
<title>__poll (849 samples, 0.13%)</title><rect x="212.82361015785852" y="2037" width="1.6369251887439944" height="15.0" fill="rgb(227,206,11)" rx="2" ry="2" _orig_x="255.6" _orig_width="1.5"/>
<text x="215.82361015785852" y="2047.5" _orig_x="258.61"/>
</g>
<g>
<title>[libminisql_shared.so] (60 samples, 0.01%)</title><rect x="1062.8483184625943" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(250,22,21)" rx="2" ry="2" _orig_x="666.8" _orig_width="0.1"/>
<text x="1065.8483184625943" y="1887.5" _orig_x="669.81"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (65 samples, 0.01%)</title><rect x="587.0418668496909" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(219,21,29)" rx="2" ry="2" _orig_x="549.3" _orig_width="0.1"/>
<text x="590.0418668496909" y="1823.5" _orig_x="552.30"/>
</g>
<g class="hide">
<title>[libfribidi.so.0.4.0] (219 samples, 0.03%)</title><rect x="260.1853122855181" y="37" width="0.4365133836650652" height="15.0" fill="rgb(225,160,35)" rx="2" ry="2" _orig_x="299.0" _orig_width="0.4"/>
<text x="263.1853122855181" y="47.5" _orig_x="301.98"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (373 samples, 0.06%)</title><rect x="1131.68840082361" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(250,107,34)" rx="2" ry="2" _orig_x="683.8" _orig_width="0.7"/>
<text x="1134.68840082361" y="1839.5" _orig_x="686.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (296 samples, 0.04%)</title><rect x="695.5662319835278" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(220,5,15)" rx="2" ry="2" _orig_x="576.1" _orig_width="0.5"/>
<text x="698.5662319835278" y="1823.5" _orig_x="579.05"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (296 samples, 0.04%)</title><rect x="476.08785175017147" y="1845" width="2.42964996568291" height="15.0" fill="rgb(254,178,51)" rx="2" ry="2" _orig_x="521.9" _orig_width="0.6"/>
<text x="479.08785175017147" y="1855.5" _orig_x="524.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,987 samples, 0.30%)</title><rect x="150.94783802333555" y="1877" width="3.710363761153054" height="15.0" fill="rgb(249,201,33)" rx="2" ry="2" _orig_x="198.9" _orig_width="3.4"/>
<text x="153.94783802333555" y="1887.5" _orig_x="201.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,595 samples, 0.98%)</title><rect x="71.82978723404247" y="2021" width="12.549759780370625" height="15.0" fill="rgb(245,199,42)" rx="2" ry="2" _orig_x="126.4" _orig_width="11.5"/>
<text x="74.82978723404247" y="2031.5" _orig_x="129.38"/>
</g>
<g class="hide">
<title>[code] (82 samples, 0.01%)</title><rect x="14.973919011667713" y="1701" width="0.2182566918325326" height="15.0" fill="rgb(212,96,16)" rx="2" ry="2" _orig_x="74.3" _orig_width="0.2"/>
<text x="17.97391901166771" y="1711.5" _orig_x="77.33"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (65 samples, 0.01%)</title><rect x="387.81056966369255" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(241,48,19)" rx="2" ry="2" _orig_x="500.1" _orig_width="0.1"/>
<text x="390.81056966369255" y="1839.5" _orig_x="503.10"/>
</g>
<g class="hide">
<title>runtime.futex.abi0 (68 samples, 0.01%)</title><rect x="159.35072065888804" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(248,222,31)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1951.5" _orig_x="209.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="117" width="0.1091283459162663" height="15.0" fill="rgb(246,217,14)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="127.5" _orig_x="118.82"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (98 samples, 0.01%)</title><rect x="506.05353466026054" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(241,48,34)" rx="2" ry="2" _orig_x="529.3" _orig_width="0.1"/>
<text x="509.05353466026054" y="1855.5" _orig_x="532.27"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1909" width="0.1" height="15.0" fill="rgb(221,191,4)" rx="2" ry="2"/>
<text x="33.98" y="1919.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (66 samples, 0.01%)</title><rect x="772.5051475634866" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(246,220,21)" rx="2" ry="2" _orig_x="595.1" _orig_width="0.1"/>
<text x="775.5051475634866" y="1743.5" _orig_x="598.06"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (6,428 samples, 0.95%)</title><rect x="810.1647220315715" y="1829" width="45.75840768702814" height="15.0" fill="rgb(217,62,48)" rx="2" ry="2" _orig_x="604.4" _orig_width="11.3"/>
<text x="813.1647220315715" y="1839.5" _orig_x="607.42">std:..</text>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="469" width="2.182566918325326" height="15.0" fill="rgb(215,28,35)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="479.5" _orig_x="117.41"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (62 samples, 0.01%)</title><rect x="668.4351407000685" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(239,122,7)" rx="2" ry="2" _orig_x="569.4" _orig_width="0.1"/>
<text x="671.4351407000685" y="1871.5" _orig_x="572.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (262 samples, 0.04%)</title><rect x="1175.5" y="1621" width="0.4" height="15.0" fill="rgb(242,13,26)" rx="2" ry="2"/>
<text x="1178.48" y="1631.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (631 samples, 0.09%)</title><rect x="177.02951269732316" y="1877" width="1.2004118050789294" height="15.0" fill="rgb(237,23,19)" rx="2" ry="2" _orig_x="222.8" _orig_width="1.1"/>
<text x="180.02951269732316" y="1887.5" _orig_x="225.79"/>
</g>
<g>
<title>std::__fill_n_a&lt;unsigned long, char&gt; (283 samples, 0.04%)</title><rect x="963.637611530542" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(248,99,16)" rx="2" ry="2" _orig_x="642.3" _orig_width="0.5"/>
<text x="966.637611530542" y="1791.5" _orig_x="645.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="330.79135209334237" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(253,196,54)" rx="2" ry="2" _orig_x="363.7" _orig_width="0.1"/>
<text x="333.79135209334237" y="1903.5" _orig_x="366.67"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (368 samples, 0.05%)</title><rect x="1164.7672955974842" y="2053" width="2.59748427672956" height="15.0" fill="rgb(205,124,30)" rx="2" ry="2" _orig_x="701.9" _orig_width="0.7"/>
<text x="1167.7672955974842" y="2063.5" _orig_x="704.91"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,157 samples, 0.17%)</title><rect x="692.7316403568976" y="1861" width="8.098833218943033" height="15.0" fill="rgb(245,187,9)" rx="2" ry="2" _orig_x="575.4" _orig_width="2.0"/>
<text x="695.7316403568976" y="1871.5" _orig_x="578.37"/>
</g>
<g class="hide">
<title>g_application_run (182 samples, 0.03%)</title><rect x="265.9691146190802" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(239,176,27)" rx="2" ry="2" _orig_x="304.3" _orig_width="0.4"/>
<text x="268.9691146190802" y="2015.5" _orig_x="307.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="57.2" y="1957" width="0.3" height="15.0" fill="rgb(250,145,49)" rx="2" ry="2"/>
<text x="60.20" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (602 samples, 0.09%)</title><rect x="65.3" y="1941" width="1.1" height="15.0" fill="rgb(244,61,24)" rx="2" ry="2"/>
<text x="68.30" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (126 samples, 0.02%)</title><rect x="1148.6959505833904" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(248,80,23)" rx="2" ry="2" _orig_x="688.0" _orig_width="0.2"/>
<text x="1151.6959505833904" y="1775.5" _orig_x="690.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,266 samples, 0.19%)</title><rect x="775.3802333562113" y="1781" width="2.400823610157859" height="15.0" fill="rgb(227,27,24)" rx="2" ry="2" _orig_x="771.1" _orig_width="2.2"/>
<text x="778.3802333562113" y="1791.5" _orig_x="774.06"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (19,914 samples, 2.96%)</title><rect x="75.2" y="2053" width="34.9" height="15.0" fill="rgb(241,203,26)" rx="2" ry="2"/>
<text x="78.19" y="2063.5">[n..</text>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (162 samples, 0.02%)</title><rect x="623.8915579958818" y="1749" width="1.214824982841455" height="15.0" fill="rgb(233,146,27)" rx="2" ry="2" _orig_x="558.4" _orig_width="0.3"/>
<text x="626.8915579958818" y="1759.5" _orig_x="561.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="68.33768016472195" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(222,33,14)" rx="2" ry="2" _orig_x="123.2" _orig_width="0.2"/>
<text x="71.33768016472195" y="1871.5" _orig_x="126.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (330 samples, 0.05%)</title><rect x="143.22580645161284" y="1845" width="2.42964996568291" height="15.0" fill="rgb(223,140,37)" rx="2" ry="2" _orig_x="439.7" _orig_width="0.6"/>
<text x="146.22580645161284" y="1855.5" _orig_x="442.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.02%)</title><rect x="1167.364779874214" y="2005" width="1.1132075471698113" height="15.0" fill="rgb(215,7,11)" rx="2" ry="2" _orig_x="702.6" _orig_width="0.3"/>
<text x="1170.364779874214" y="2015.5" _orig_x="705.65"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (504 samples, 0.07%)</title><rect x="715.8133150308854" y="1909" width="3.644474948524365" height="15.0" fill="rgb(209,37,35)" rx="2" ry="2" _orig_x="581.1" _orig_width="0.9"/>
<text x="718.8133150308854" y="1919.5" _orig_x="584.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,127 samples, 0.91%)</title><rect x="119.40974605353456" y="1781" width="11.676733013040494" height="15.0" fill="rgb(212,164,54)" rx="2" ry="2" _orig_x="170.0" _orig_width="10.7"/>
<text x="122.40974605353456" y="1791.5" _orig_x="173.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,653 samples, 0.25%)</title><rect x="151.60260809883312" y="1861" width="3.0555936856554564" height="15.0" fill="rgb(252,147,23)" rx="2" ry="2" _orig_x="199.5" _orig_width="2.8"/>
<text x="154.60260809883312" y="1871.5" _orig_x="202.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (182 samples, 0.03%)</title><rect x="130.75909402882627" y="1621" width="0.3273850377487989" height="15.0" fill="rgb(231,43,14)" rx="2" ry="2" _orig_x="180.4" _orig_width="0.3"/>
<text x="133.75909402882627" y="1631.5" _orig_x="183.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.02%)</title><rect x="1175.7" y="1557" width="0.2" height="15.0" fill="rgb(221,211,3)" rx="2" ry="2"/>
<text x="1178.68" y="1567.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.02%)</title><rect x="212.2779684282772" y="1653" width="0.2182566918325326" height="15.0" fill="rgb(212,218,12)" rx="2" ry="2" _orig_x="255.1" _orig_width="0.2"/>
<text x="215.2779684282772" y="1663.5" _orig_x="258.06"/>
</g>
<g class="hide">
<title>_nv024572rm (65 samples, 0.01%)</title><rect x="350.1" y="2053" width="0.1" height="15.0" fill="rgb(211,33,35)" rx="2" ry="2"/>
<text x="353.06" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (118 samples, 0.02%)</title><rect x="11.809196980095999" y="1765" width="0.2182566918325326" height="15.0" fill="rgb(220,214,32)" rx="2" ry="2" _orig_x="71.4" _orig_width="0.2"/>
<text x="14.809196980095999" y="1775.5" _orig_x="74.39"/>
</g>
<g class="hide">
<title>__libc_read (11,942 samples, 1.77%)</title><rect x="754.9732326698695" y="2021" width="22.807824296499657" height="15.0" fill="rgb(222,189,21)" rx="2" ry="2" _orig_x="752.4" _orig_width="20.9"/>
<text x="757.9732326698695" y="2031.5" _orig_x="755.36">__libc_read </text>
</g>
<g>
<title>BufferPoolManager::UnpinPage (76 samples, 0.01%)</title><rect x="63.857240905971224" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(254,123,19)" rx="2" ry="2" _orig_x="420.1" _orig_width="0.1"/>
<text x="66.85724090597122" y="1887.5" _orig_x="423.11"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.01%)</title><rect x="308.4200411805078" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(239,35,5)" rx="2" ry="2" _orig_x="343.2" _orig_width="0.1"/>
<text x="311.4200411805078" y="2031.5" _orig_x="346.19"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1909" width="0.5456417295813315" height="15.0" fill="rgb(227,35,32)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1919.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>[code] (166 samples, 0.02%)</title><rect x="86.01647220315708" y="1301" width="0.3273850377487989" height="15.0" fill="rgb(237,222,11)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1311.5" _orig_x="142.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="58.3" y="2021" width="0.1" height="15.0" fill="rgb(245,142,37)" rx="2" ry="2"/>
<text x="61.31" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (2,078 samples, 0.31%)</title><rect x="1182.1" y="2053" width="3.7" height="15.0" fill="rgb(253,27,0)" rx="2" ry="2"/>
<text x="1185.15" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,346 samples, 0.20%)</title><rect x="522.6561427590938" y="1781" width="9.71859986273164" height="15.0" fill="rgb(251,209,34)" rx="2" ry="2" _orig_x="533.4" _orig_width="2.4"/>
<text x="525.6561427590938" y="1791.5" _orig_x="536.40"/>
</g>
<g class="hide">
<title>[unknown] (989 samples, 0.15%)</title><rect x="30.6" y="2037" width="1.8" height="15.0" fill="rgb(213,225,24)" rx="2" ry="2"/>
<text x="33.63" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (81 samples, 0.01%)</title><rect x="787.487989018531" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(223,132,37)" rx="2" ry="2" _orig_x="598.8" _orig_width="0.2"/>
<text x="790.487989018531" y="1759.5" _orig_x="601.85"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (59 samples, 0.01%)</title><rect x="482.1619766643787" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(225,155,38)" rx="2" ry="2" _orig_x="523.4" _orig_width="0.1"/>
<text x="485.1619766643787" y="1791.5" _orig_x="526.41"/>
</g>
<g class="hide">
<title>[perf-123031.map] (78 samples, 0.01%)</title><rect x="86.45298558682215" y="1253" width="0.1091283459162663" height="15.0" fill="rgb(247,129,38)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1263.5" _orig_x="142.78"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (68 samples, 0.01%)</title><rect x="957.968428277282" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(219,179,42)" rx="2" ry="2" _orig_x="640.9" _orig_width="0.1"/>
<text x="960.968428277282" y="1871.5" _orig_x="643.93"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (72 samples, 0.01%)</title><rect x="306.67398764584755" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(229,29,32)" rx="2" ry="2" _orig_x="341.6" _orig_width="0.1"/>
<text x="309.67398764584755" y="2047.5" _orig_x="344.56"/>
</g>
<g class="hide">
<title>[unknown] (502 samples, 0.07%)</title><rect x="58.73438572409051" y="101" width="0.9821551132463967" height="15.0" fill="rgb(239,206,0)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.9"/>
<text x="61.73438572409051" y="111.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.02%)</title><rect x="167.42621825669173" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(207,106,18)" rx="2" ry="2" _orig_x="214.0" _orig_width="0.3"/>
<text x="170.42621825669173" y="1967.5" _orig_x="217.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (976 samples, 0.14%)</title><rect x="63.20864790665742" y="2005" width="1.9643102264927934" height="15.0" fill="rgb(246,43,10)" rx="2" ry="2" _orig_x="118.5" _orig_width="1.8"/>
<text x="66.20864790665742" y="2015.5" _orig_x="121.55"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1797" width="1.091283459162663" height="15.0" fill="rgb(239,136,4)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1807.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="805" width="1.091283459162663" height="15.0" fill="rgb(237,166,37)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="815.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[perf-123031.map] (75 samples, 0.01%)</title><rect x="86.45298558682215" y="1189" width="0.1091283459162663" height="15.0" fill="rgb(247,111,50)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1199.5" _orig_x="142.78"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (86 samples, 0.01%)</title><rect x="211.2560054907343" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(253,158,12)" rx="2" ry="2" _orig_x="456.5" _orig_width="0.1"/>
<text x="214.2560054907343" y="1855.5" _orig_x="459.49"/>
</g>
<g class="hide">
<title>[code] (391 samples, 0.06%)</title><rect x="15.4" y="1829" width="0.7" height="15.0" fill="rgb(239,197,42)" rx="2" ry="2"/>
<text x="18.42" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (162 samples, 0.02%)</title><rect x="21.6" y="1941" width="0.3" height="15.0" fill="rgb(241,22,51)" rx="2" ry="2"/>
<text x="24.65" y="1951.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (70 samples, 0.01%)</title><rect x="180.48043925875072" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(250,63,6)" rx="2" ry="2" _orig_x="448.9" _orig_width="0.1"/>
<text x="183.48043925875072" y="1727.5" _orig_x="451.89"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (192 samples, 0.03%)</title><rect x="88.96362388469457" y="1717" width="1.619766643788607" height="15.0" fill="rgb(241,144,20)" rx="2" ry="2" _orig_x="426.3" _orig_width="0.4"/>
<text x="91.96362388469457" y="1727.5" _orig_x="429.34"/>
</g>
<g class="hide">
<title>os::sleep (437 samples, 0.06%)</title><rect x="62.2" y="2005" width="0.8" height="15.0" fill="rgb(223,123,42)" rx="2" ry="2"/>
<text x="65.24" y="2015.5"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (447 samples, 0.07%)</title><rect x="1118.325326012354" y="1925" width="3.239533287577214" height="15.0" fill="rgb(213,91,3)" rx="2" ry="2" _orig_x="680.5" _orig_width="0.8"/>
<text x="1121.325326012354" y="1935.5" _orig_x="683.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (295 samples, 0.04%)</title><rect x="333.3013040494165" y="1973" width="0.6547700754975978" height="15.0" fill="rgb(217,35,24)" rx="2" ry="2" _orig_x="366.0" _orig_width="0.6"/>
<text x="336.3013040494165" y="1983.5" _orig_x="369.04"/>
</g>
<g class="hide">
<title>[code] (988 samples, 0.15%)</title><rect x="85.2525737817432" y="1797" width="1.855181880576527" height="15.0" fill="rgb(235,59,22)" rx="2" ry="2" _orig_x="138.7" _orig_width="1.7"/>
<text x="88.2525737817432" y="1807.5" _orig_x="141.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (331 samples, 0.05%)</title><rect x="65.8" y="1861" width="0.6" height="15.0" fill="rgb(254,58,50)" rx="2" ry="2"/>
<text x="68.78" y="1871.5"/>
</g>
<g class="hide">
<title>[libGLX_nvidia.so.470.129.06] (60 samples, 0.01%)</title><rect x="226.1" y="2053" width="0.1" height="15.0" fill="rgb(241,189,41)" rx="2" ry="2"/>
<text x="229.07" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (189 samples, 0.03%)</title><rect x="305.4735758407686" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(248,122,11)" rx="2" ry="2" _orig_x="340.5" _orig_width="0.4"/>
<text x="308.4735758407686" y="2047.5" _orig_x="343.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.02%)</title><rect x="58.0" y="1861" width="0.2" height="15.0" fill="rgb(219,190,3)" rx="2" ry="2"/>
<text x="61.03" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (548 samples, 0.08%)</title><rect x="333.9560741249141" y="2037" width="1.091283459162663" height="15.0" fill="rgb(224,214,21)" rx="2" ry="2" _orig_x="366.6" _orig_width="1.0"/>
<text x="336.9560741249141" y="2047.5" _orig_x="369.59"/>
</g>
<g class="hide">
<title>TimerQueue (1,990 samples, 0.30%)</title><rect x="67.1" y="2069" width="3.4" height="15.0" fill="rgb(219,64,13)" rx="2" ry="2"/>
<text x="70.05" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1109" width="2.182566918325326" height="15.0" fill="rgb(232,30,8)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1119.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (557 samples, 0.08%)</title><rect x="330.9004804392587" y="2005" width="1.091283459162663" height="15.0" fill="rgb(245,69,46)" rx="2" ry="2" _orig_x="363.8" _orig_width="1.0"/>
<text x="333.9004804392587" y="2015.5" _orig_x="366.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.02%)</title><rect x="10.60878517501706" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(219,31,0)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="2047.5" _orig_x="73.29"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (608 samples, 0.09%)</title><rect x="774.1249142072752" y="1781" width="4.049416609471517" height="15.0" fill="rgb(223,152,20)" rx="2" ry="2" _orig_x="595.5" _orig_width="1.0"/>
<text x="777.1249142072752" y="1791.5" _orig_x="598.46"/>
</g>
<g class="hide">
<title>jni_GetPrimitiveArrayCritical (82 samples, 0.01%)</title><rect x="21.0" y="1989" width="0.2" height="15.0" fill="rgb(228,39,28)" rx="2" ry="2"/>
<text x="24.01" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (375 samples, 0.06%)</title><rect x="86.12903225806456" y="1733" width="2.8345916266300617" height="15.0" fill="rgb(251,98,5)" rx="2" ry="2" _orig_x="425.6" _orig_width="0.7"/>
<text x="89.12903225806456" y="1743.5" _orig_x="428.64"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (101 samples, 0.01%)</title><rect x="317.75566231983527" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(222,206,44)" rx="2" ry="2" _orig_x="482.8" _orig_width="0.2"/>
<text x="320.75566231983527" y="1887.5" _orig_x="485.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="347.81537405627995" y="1733" width="0.1091283459162663" height="15.0" fill="rgb(209,215,40)" rx="2" ry="2" _orig_x="379.3" _orig_width="0.1"/>
<text x="350.81537405627995" y="1743.5" _orig_x="382.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,478 samples, 0.37%)</title><rect x="43.7" y="1877" width="4.4" height="15.0" fill="rgb(213,130,11)" rx="2" ry="2"/>
<text x="46.73" y="1887.5"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (61 samples, 0.01%)</title><rect x="933.2669869595056" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(229,221,36)" rx="2" ry="2" _orig_x="634.8" _orig_width="0.1"/>
<text x="936.2669869595056" y="1807.5" _orig_x="637.84"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1301" width="2.182566918325326" height="15.0" fill="rgb(220,153,39)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1311.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (889 samples, 0.13%)</title><rect x="767.6458476321206" y="1781" width="6.479066575154428" height="15.0" fill="rgb(228,159,24)" rx="2" ry="2" _orig_x="593.9" _orig_width="1.6"/>
<text x="770.6458476321206" y="1791.5" _orig_x="596.90"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="2037" width="0.2" height="15.0" fill="rgb(205,170,27)" rx="2" ry="2"/>
<text x="17.74" y="2047.5"/>
</g>
<g class="hide">
<title>v8::internal::Execution::Call (449 samples, 0.07%)</title><rect x="88.08991077556615" y="1941" width="0.8730267673301304" height="15.0" fill="rgb(245,211,48)" rx="2" ry="2" _orig_x="141.3" _orig_width="0.8"/>
<text x="91.08991077556615" y="1951.5" _orig_x="144.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,543 samples, 0.67%)</title><rect x="40.1" y="1925" width="8.0" height="15.0" fill="rgb(241,163,33)" rx="2" ry="2"/>
<text x="43.11" y="1935.5"/>
</g>
<g class="hide">
<title>[code] (157 samples, 0.02%)</title><rect x="15.8" y="1749" width="0.3" height="15.0" fill="rgb(231,190,19)" rx="2" ry="2"/>
<text x="18.81" y="1759.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,560 samples, 0.23%)</title><rect x="794.9142072752229" y="1909" width="2.9464653397391904" height="15.0" fill="rgb(229,151,36)" rx="2" ry="2" _orig_x="789.0" _orig_width="2.7"/>
<text x="797.9142072752229" y="1919.5" _orig_x="791.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (17,571 samples, 2.61%)</title><rect x="1134.5216197666437" y="1797" width="33.61153054221002" height="15.0" fill="rgb(254,111,51)" rx="2" ry="2" _orig_x="1100.2" _orig_width="30.8"/>
<text x="1137.5216197666437" y="1807.5" _orig_x="1103.17">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (165 samples, 0.02%)</title><rect x="11.700068634179724" y="1797" width="0.3273850377487989" height="15.0" fill="rgb(207,201,28)" rx="2" ry="2" _orig_x="71.3" _orig_width="0.3"/>
<text x="14.700068634179724" y="1807.5" _orig_x="74.31"/>
</g>
<g class="hide">
<title>iwl_pcie_rx_handle (76 samples, 0.01%)</title><rect x="328.28140013726824" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(234,60,15)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="1983.5" _orig_x="364.43"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (351 samples, 0.05%)</title><rect x="64.40905971173635" y="1765" width="0.7638984214138641" height="15.0" fill="rgb(226,144,34)" rx="2" ry="2" _orig_x="119.6" _orig_width="0.7"/>
<text x="67.40905971173635" y="1775.5" _orig_x="122.64"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (288 samples, 0.04%)</title><rect x="815.0240219629376" y="1765" width="2.0247083047357584" height="15.0" fill="rgb(244,60,7)" rx="2" ry="2" _orig_x="605.6" _orig_width="0.5"/>
<text x="818.0240219629376" y="1775.5" _orig_x="608.57"/>
</g>
<g class="hide">
<title>vframeStreamCommon::security_get_caller_frame (65 samples, 0.01%)</title><rect x="68.4" y="1989" width="0.1" height="15.0" fill="rgb(233,132,21)" rx="2" ry="2"/>
<text x="71.37" y="1999.5"/>
</g>
<g class="hide">
<title>[code] (485 samples, 0.07%)</title><rect x="16.4" y="2021" width="0.8" height="15.0" fill="rgb(239,142,6)" rx="2" ry="2"/>
<text x="19.35" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (464 samples, 0.07%)</title><rect x="753.2271791352092" y="1701" width="0.8730267673301304" height="15.0" fill="rgb(223,96,18)" rx="2" ry="2" _orig_x="750.8" _orig_width="0.8"/>
<text x="756.2271791352092" y="1711.5" _orig_x="753.80"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::operator[] (75 samples, 0.01%)</title><rect x="997.6527110501031" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(232,58,6)" rx="2" ry="2" _orig_x="650.7" _orig_width="0.1"/>
<text x="1000.6527110501031" y="1903.5" _orig_x="653.72"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="693" width="2.182566918325326" height="15.0" fill="rgb(235,140,50)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="703.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (80 samples, 0.01%)</title><rect x="1074.591626630062" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(231,13,35)" rx="2" ry="2" _orig_x="669.7" _orig_width="0.2"/>
<text x="1077.591626630062" y="1887.5" _orig_x="672.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="1188.7" y="1989" width="0.2" height="15.0" fill="rgb(209,121,24)" rx="2" ry="2"/>
<text x="1191.73" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (1,069 samples, 0.16%)</title><rect x="823.5277968428279" y="1749" width="7.28894989704873" height="15.0" fill="rgb(209,86,31)" rx="2" ry="2" _orig_x="607.7" _orig_width="1.8"/>
<text x="826.5277968428279" y="1759.5" _orig_x="610.67"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1829" width="1.091283459162663" height="15.0" fill="rgb(216,172,54)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1839.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,311 samples, 1.53%)</title><rect x="758.028826355525" y="1941" width="19.7522306108442" height="15.0" fill="rgb(219,144,49)" rx="2" ry="2" _orig_x="755.2" _orig_width="18.1"/>
<text x="761.028826355525" y="1951.5" _orig_x="758.21">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (61 samples, 0.01%)</title><rect x="1183.2" y="2037" width="0.2" height="15.0" fill="rgb(212,138,53)" rx="2" ry="2"/>
<text x="1186.25" y="2047.5"/>
</g>
<g>
<title>[libminisql_shared.so] (87 samples, 0.01%)</title><rect x="123.38366506520246" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(228,143,51)" rx="2" ry="2" _orig_x="434.8" _orig_width="0.1"/>
<text x="126.38366506520246" y="1855.5" _orig_x="437.79"/>
</g>
<g class="hide">
<title>__libc_read (267 samples, 0.04%)</title><rect x="270.7707618393959" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(217,175,45)" rx="2" ry="2" _orig_x="308.7" _orig_width="0.5"/>
<text x="273.7707618393959" y="2047.5" _orig_x="311.71"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (388 samples, 0.06%)</title><rect x="137.55662319835278" y="1749" width="2.8345916266300617" height="15.0" fill="rgb(212,47,27)" rx="2" ry="2" _orig_x="438.3" _orig_width="0.7"/>
<text x="140.55662319835278" y="1759.5" _orig_x="441.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (544 samples, 0.08%)</title><rect x="352.2896362388468" y="1797" width="1.091283459162663" height="15.0" fill="rgb(222,137,45)" rx="2" ry="2" _orig_x="383.4" _orig_width="1.0"/>
<text x="355.2896362388468" y="1807.5" _orig_x="386.45"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__rehash (102 samples, 0.02%)</title><rect x="131.95950583390518" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(212,138,7)" rx="2" ry="2" _orig_x="181.5" _orig_width="0.2"/>
<text x="134.95950583390518" y="1967.5" _orig_x="184.48"/>
</g>
<g class="hide">
<title>virtual thunk to std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (60 samples, 0.01%)</title><rect x="42.654088050314506" y="2037" width="0.37106918238993714" height="15.0" fill="rgb(217,176,29)" rx="2" ry="2" _orig_x="399.5" _orig_width="0.1"/>
<text x="45.654088050314506" y="2047.5" _orig_x="402.51"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (218 samples, 0.03%)</title><rect x="1148.291008922443" y="1797" width="1.214824982841455" height="15.0" fill="rgb(244,200,39)" rx="2" ry="2" _orig_x="687.9" _orig_width="0.3"/>
<text x="1151.291008922443" y="1807.5" _orig_x="690.85"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (66 samples, 0.01%)</title><rect x="158.61358956760466" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(215,19,39)" rx="2" ry="2" _orig_x="443.5" _orig_width="0.1"/>
<text x="161.61358956760466" y="1759.5" _orig_x="446.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,297 samples, 0.79%)</title><rect x="38.8" y="1941" width="9.3" height="15.0" fill="rgb(239,32,47)" rx="2" ry="2"/>
<text x="41.79" y="1951.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (70 samples, 0.01%)</title><rect x="953.9190116678104" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(217,117,29)" rx="2" ry="2" _orig_x="639.9" _orig_width="0.1"/>
<text x="956.9190116678104" y="1807.5" _orig_x="642.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,336 samples, 0.20%)</title><rect x="357.6369251887439" y="1909" width="2.619080301990391" height="15.0" fill="rgb(206,125,40)" rx="2" ry="2" _orig_x="388.3" _orig_width="2.4"/>
<text x="360.6369251887439" y="1919.5" _orig_x="391.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (243 samples, 0.04%)</title><rect x="214.0240219629374" y="1909" width="0.4365133836650652" height="15.0" fill="rgb(242,95,52)" rx="2" ry="2" _orig_x="256.7" _orig_width="0.4"/>
<text x="217.0240219629374" y="1919.5" _orig_x="259.67"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (408 samples, 0.06%)</title><rect x="652.2374742621824" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(239,120,41)" rx="2" ry="2" _orig_x="565.4" _orig_width="0.7"/>
<text x="655.2374742621824" y="1823.5" _orig_x="568.41"/>
</g>
<g>
<title>std::__detail::_Identity::operator (108 samples, 0.02%)</title><rect x="847.0144131777625" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(226,209,36)" rx="2" ry="2" _orig_x="613.5" _orig_width="0.2"/>
<text x="850.0144131777625" y="1791.5" _orig_x="616.53"/>
</g>
<g class="hide">
<title>read (730 samples, 0.11%)</title><rect x="35.60377358490579" y="2037" width="4.823899371069182" height="15.0" fill="rgb(247,177,48)" rx="2" ry="2" _orig_x="397.6" _orig_width="1.3"/>
<text x="38.60377358490579" y="2047.5" _orig_x="400.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24,551 samples, 3.65%)</title><rect x="1170.315717227179" y="1909" width="46.92518874399451" height="15.0" fill="rgb(240,18,45)" rx="2" ry="2" _orig_x="1133.0" _orig_width="43.0"/>
<text x="1173.315717227179" y="1919.5" _orig_x="1135.96">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="328.28140013726824" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(208,223,18)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="2031.5" _orig_x="364.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,125 samples, 0.46%)</title><rect x="342.0315717227178" y="2037" width="6.002059025394646" height="15.0" fill="rgb(241,34,9)" rx="2" ry="2" _orig_x="374.0" _orig_width="5.5"/>
<text x="345.0315717227178" y="2047.5" _orig_x="376.98"/>
</g>
<g class="hide">
<title>thread_native_entry (64 samples, 0.01%)</title><rect x="13.8" y="2037" width="0.1" height="15.0" fill="rgb(229,55,15)" rx="2" ry="2"/>
<text x="16.77" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,125 samples, 0.46%)</title><rect x="342.0315717227178" y="2021" width="6.002059025394646" height="15.0" fill="rgb(248,148,6)" rx="2" ry="2" _orig_x="374.0" _orig_width="5.5"/>
<text x="345.0315717227178" y="2031.5" _orig_x="376.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (520 samples, 0.08%)</title><rect x="340.83115991763884" y="2037" width="1.091283459162663" height="15.0" fill="rgb(245,184,38)" rx="2" ry="2" _orig_x="372.9" _orig_width="1.0"/>
<text x="343.83115991763884" y="2047.5" _orig_x="375.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (346 samples, 0.05%)</title><rect x="728.2367879203842" y="1717" width="0.6547700754975978" height="15.0" fill="rgb(252,184,11)" rx="2" ry="2" _orig_x="727.9" _orig_width="0.6"/>
<text x="731.2367879203842" y="1727.5" _orig_x="730.87"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (159 samples, 0.02%)</title><rect x="766.4310226492794" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(244,210,34)" rx="2" ry="2" _orig_x="593.6" _orig_width="0.2"/>
<text x="769.4310226492794" y="1791.5" _orig_x="596.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (151 samples, 0.02%)</title><rect x="338.430336307481" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(233,132,13)" rx="2" ry="2" _orig_x="370.7" _orig_width="0.3"/>
<text x="341.430336307481" y="1919.5" _orig_x="373.69"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (192 samples, 0.03%)</title><rect x="1151.1256005490734" y="1797" width="1.214824982841455" height="15.0" fill="rgb(234,103,11)" rx="2" ry="2" _orig_x="688.6" _orig_width="0.3"/>
<text x="1154.1256005490734" y="1807.5" _orig_x="691.57"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,997 samples, 0.45%)</title><rect x="785.4632807137953" y="1797" width="21.05696636925189" height="15.0" fill="rgb(250,219,31)" rx="2" ry="2" _orig_x="598.3" _orig_width="5.2"/>
<text x="788.4632807137953" y="1807.5" _orig_x="601.28">s..</text>
</g>
<g>
<title>TypeChar::DeserializeFrom (2,815 samples, 0.42%)</title><rect x="763.5964310226492" y="1861" width="20.247083047357584" height="15.0" fill="rgb(217,192,11)" rx="2" ry="2" _orig_x="592.9" _orig_width="5.0"/>
<text x="766.5964310226492" y="1871.5" _orig_x="595.93"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::deallocate (254 samples, 0.04%)</title><rect x="1077.0212765957444" y="1845" width="1.619766643788607" height="15.0" fill="rgb(234,133,53)" rx="2" ry="2" _orig_x="670.3" _orig_width="0.4"/>
<text x="1080.0212765957444" y="1855.5" _orig_x="673.28"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (165 samples, 0.02%)</title><rect x="443.6925188743993" y="1781" width="1.214824982841455" height="15.0" fill="rgb(243,49,35)" rx="2" ry="2" _orig_x="513.9" _orig_width="0.3"/>
<text x="446.6925188743993" y="1791.5" _orig_x="516.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="1186.6" y="2005" width="0.3" height="15.0" fill="rgb(219,22,23)" rx="2" ry="2"/>
<text x="1189.62" y="2015.5"/>
</g>
<g class="hide">
<title>kworker/9:1-eve (529 samples, 0.08%)</title><rect x="372.9" y="2069" width="1.0" height="15.0" fill="rgb(205,114,34)" rx="2" ry="2"/>
<text x="375.93" y="2079.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (91 samples, 0.01%)</title><rect x="265.92312971859985" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(234,203,46)" rx="2" ry="2" _orig_x="470.0" _orig_width="0.1"/>
<text x="268.92312971859985" y="1759.5" _orig_x="472.98"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (375 samples, 0.06%)</title><rect x="1022.354152367879" y="1861" width="2.42964996568291" height="15.0" fill="rgb(242,67,39)" rx="2" ry="2" _orig_x="656.8" _orig_width="0.6"/>
<text x="1025.3541523678791" y="1871.5" _orig_x="659.78"/>
</g>
<g class="hide">
<title>_dbus_marshal_read_uint32 (69 samples, 0.01%)</title><rect x="163.17021276595736" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(230,81,22)" rx="2" ry="2" _orig_x="210.1" _orig_width="0.1"/>
<text x="166.17021276595736" y="2047.5" _orig_x="213.11"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (262 samples, 0.04%)</title><rect x="465.55936856554536" y="1813" width="1.619766643788607" height="15.0" fill="rgb(233,145,1)" rx="2" ry="2" _orig_x="519.3" _orig_width="0.4"/>
<text x="468.55936856554536" y="1823.5" _orig_x="522.27"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (84 samples, 0.01%)</title><rect x="351.77076183939596" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(240,207,50)" rx="2" ry="2" _orig_x="491.2" _orig_width="0.1"/>
<text x="354.77076183939596" y="1839.5" _orig_x="494.18"/>
</g>
<g class="hide">
<title>__pthread_getspecific (61 samples, 0.01%)</title><rect x="48.1" y="2037" width="0.1" height="15.0" fill="rgb(218,114,2)" rx="2" ry="2"/>
<text x="51.08" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (417 samples, 0.06%)</title><rect x="814.2141386410431" y="1781" width="3.239533287577214" height="15.0" fill="rgb(210,227,16)" rx="2" ry="2" _orig_x="605.4" _orig_width="0.8"/>
<text x="817.2141386410431" y="1791.5" _orig_x="608.44"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (1,275 samples, 0.19%)</title><rect x="164.2827728208647" y="1829" width="8.908716540837338" height="15.0" fill="rgb(206,56,13)" rx="2" ry="2" _orig_x="444.9" _orig_width="2.2"/>
<text x="167.2827728208647" y="1839.5" _orig_x="447.91"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (127 samples, 0.02%)</title><rect x="198.70281400137256" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(219,121,4)" rx="2" ry="2" _orig_x="453.4" _orig_width="0.2"/>
<text x="201.70281400137256" y="1791.5" _orig_x="456.36"/>
</g>
<g class="hide">
<title>[code] (259 samples, 0.04%)</title><rect x="87.43514070006853" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(235,34,6)" rx="2" ry="2" _orig_x="140.7" _orig_width="0.5"/>
<text x="90.43514070006853" y="1967.5" _orig_x="143.75"/>
</g>
<g class="hide">
<title>[unknown] (623 samples, 0.09%)</title><rect x="260.1853122855181" y="1861" width="1.2004118050789294" height="15.0" fill="rgb(251,101,41)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1871.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="1186.7" y="1941" width="0.2" height="15.0" fill="rgb(220,229,5)" rx="2" ry="2"/>
<text x="1189.73" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (177 samples, 0.03%)</title><rect x="329.2635552505147" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(243,169,52)" rx="2" ry="2" _orig_x="362.3" _orig_width="0.3"/>
<text x="332.2635552505147" y="1951.5" _orig_x="365.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="117" width="0.2182566918325326" height="15.0" fill="rgb(212,72,23)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="127.5" _orig_x="119.14"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (70 samples, 0.01%)</title><rect x="685.442690459849" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(227,102,23)" rx="2" ry="2" _orig_x="573.6" _orig_width="0.2"/>
<text x="688.442690459849" y="1839.5" _orig_x="576.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="14.5" y="1877" width="0.1" height="15.0" fill="rgb(251,87,18)" rx="2" ry="2"/>
<text x="17.48" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.03%)</title><rect x="810.5195607412489" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(211,177,12)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="2031.5" _orig_x="806.31"/>
</g>
<g>
<title>Field::CompareLessThan (63 samples, 0.01%)</title><rect x="739.7048730267672" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(252,221,20)" rx="2" ry="2" _orig_x="587.0" _orig_width="0.1"/>
<text x="742.7048730267672" y="1935.5" _orig_x="589.99"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (135 samples, 0.02%)</title><rect x="261.4687714481811" y="1765" width="1.214824982841455" height="15.0" fill="rgb(234,125,37)" rx="2" ry="2" _orig_x="468.9" _orig_width="0.3"/>
<text x="264.4687714481811" y="1775.5" _orig_x="471.91"/>
</g>
<g class="hide">
<title>_CallCallbacks (63 samples, 0.01%)</title><rect x="62.55387783115983" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(246,100,47)" rx="2" ry="2" _orig_x="117.9" _orig_width="0.1"/>
<text x="65.55387783115984" y="2047.5" _orig_x="120.91"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (292 samples, 0.04%)</title><rect x="384.9759780370623" y="1797" width="2.42964996568291" height="15.0" fill="rgb(239,150,30)" rx="2" ry="2" _orig_x="499.4" _orig_width="0.6"/>
<text x="387.9759780370623" y="1807.5" _orig_x="502.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (359 samples, 0.05%)</title><rect x="61.78997940974596" y="1845" width="0.6547700754975978" height="15.0" fill="rgb(240,60,49)" rx="2" ry="2" _orig_x="117.2" _orig_width="0.6"/>
<text x="64.78997940974597" y="1855.5" _orig_x="120.18"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="453" width="1.091283459162663" height="15.0" fill="rgb(234,118,52)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="463.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="10.281400137268264" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(229,30,13)" rx="2" ry="2" _orig_x="70.0" _orig_width="0.2"/>
<text x="13.281400137268264" y="1871.5" _orig_x="73.03"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (71 samples, 0.01%)</title><rect x="778.4358270418667" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(248,182,12)" rx="2" ry="2" _orig_x="773.9" _orig_width="0.1"/>
<text x="781.4358270418667" y="2031.5" _orig_x="776.91"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (296 samples, 0.04%)</title><rect x="339.6225120109813" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(231,18,9)" rx="2" ry="2" _orig_x="488.2" _orig_width="0.5"/>
<text x="342.6225120109813" y="1823.5" _orig_x="491.19"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (231 samples, 0.03%)</title><rect x="259.63967055593673" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(229,101,11)" rx="2" ry="2" _orig_x="298.5" _orig_width="0.4"/>
<text x="262.63967055593673" y="1967.5" _orig_x="301.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (396 samples, 0.06%)</title><rect x="352.6170212765956" y="1781" width="0.7638984214138641" height="15.0" fill="rgb(207,219,13)" rx="2" ry="2" _orig_x="383.7" _orig_width="0.7"/>
<text x="355.6170212765956" y="1791.5" _orig_x="386.71"/>
</g>
<g class="hide">
<title>[code] (390 samples, 0.06%)</title><rect x="104.13177762525729" y="1925" width="0.7638984214138641" height="15.0" fill="rgb(207,101,43)" rx="2" ry="2" _orig_x="156.0" _orig_width="0.7"/>
<text x="107.13177762525729" y="1935.5" _orig_x="159.02"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (81 samples, 0.01%)</title><rect x="131.07755662319823" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(210,190,13)" rx="2" ry="2" _orig_x="436.7" _orig_width="0.1"/>
<text x="134.07755662319823" y="1807.5" _orig_x="439.66"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (267 samples, 0.04%)</title><rect x="20.528483184625802" y="1701" width="2.0247083047357584" height="15.0" fill="rgb(232,74,11)" rx="2" ry="2" _orig_x="409.4" _orig_width="0.5"/>
<text x="23.528483184625802" y="1711.5" _orig_x="412.39"/>
</g>
<g class="hide">
<title>[code] (299 samples, 0.04%)</title><rect x="16.6" y="1765" width="0.5" height="15.0" fill="rgb(238,175,17)" rx="2" ry="2"/>
<text x="19.61" y="1775.5"/>
</g>
<g>
<title>TypeChar::CompareLessThan (79 samples, 0.01%)</title><rect x="367.1585449553877" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(237,229,8)" rx="2" ry="2" _orig_x="495.0" _orig_width="0.2"/>
<text x="370.1585449553877" y="1839.5" _orig_x="498.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (445 samples, 0.07%)</title><rect x="338.8668496911461" y="2005" width="0.7638984214138641" height="15.0" fill="rgb(240,199,7)" rx="2" ry="2" _orig_x="371.1" _orig_width="0.7"/>
<text x="341.8668496911461" y="2015.5" _orig_x="374.06"/>
</g>
<g>
<title>IndexKey::SerializeFromKey (238 samples, 0.04%)</title><rect x="308.03706245710345" y="1941" width="1.619766643788607" height="15.0" fill="rgb(218,71,22)" rx="2" ry="2" _orig_x="480.4" _orig_width="0.4"/>
<text x="311.03706245710345" y="1951.5" _orig_x="483.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (84 samples, 0.01%)</title><rect x="450.1715854495538" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(225,213,54)" rx="2" ry="2" _orig_x="515.5" _orig_width="0.1"/>
<text x="453.1715854495538" y="1775.5" _orig_x="518.49"/>
</g>
<g class="hide">
<title>ntfs_names_full_collate (58 samples, 0.01%)</title><rect x="792.9498970487302" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(253,117,45)" rx="2" ry="2" _orig_x="787.2" _orig_width="0.1"/>
<text x="795.9498970487302" y="2047.5" _orig_x="790.24"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (320 samples, 0.05%)</title><rect x="339.6225120109813" y="1861" width="2.0247083047357584" height="15.0" fill="rgb(209,187,28)" rx="2" ry="2" _orig_x="488.2" _orig_width="0.5"/>
<text x="342.6225120109813" y="1871.5" _orig_x="491.16"/>
</g>
<g class="hide">
<title>[unknown] (476 samples, 0.07%)</title><rect x="58.73438572409051" y="85" width="0.8730267673301304" height="15.0" fill="rgb(233,180,14)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.8"/>
<text x="61.73438572409051" y="95.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,765 samples, 1.75%)</title><rect x="755.3006177076184" y="2005" width="22.48043925875086" height="15.0" fill="rgb(249,150,16)" rx="2" ry="2" _orig_x="752.7" _orig_width="20.6"/>
<text x="758.3006177076184" y="2015.5" _orig_x="755.66">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,351 samples, 0.50%)</title><rect x="78.05010295126964" y="1893" width="6.329444063143446" height="15.0" fill="rgb(242,45,4)" rx="2" ry="2" _orig_x="132.1" _orig_width="5.8"/>
<text x="81.05010295126964" y="1903.5" _orig_x="135.07"/>
</g>
<g class="hide">
<title>[github-desktop] (78 samples, 0.01%)</title><rect x="16.2" y="2005" width="0.1" height="15.0" fill="rgb(207,91,53)" rx="2" ry="2"/>
<text x="19.15" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="331.882635552505" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(241,70,45)" rx="2" ry="2" _orig_x="364.7" _orig_width="0.1"/>
<text x="334.882635552505" y="1887.5" _orig_x="367.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="13.0" y="2005" width="0.3" height="15.0" fill="rgb(224,40,44)" rx="2" ry="2"/>
<text x="15.97" y="2015.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (566 samples, 0.08%)</title><rect x="1113.8709677419354" y="1925" width="4.049416609471517" height="15.0" fill="rgb(226,84,8)" rx="2" ry="2" _orig_x="679.4" _orig_width="1.0"/>
<text x="1116.8709677419354" y="1935.5" _orig_x="682.42"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (305 samples, 0.05%)</title><rect x="212.87577213452283" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(205,26,49)" rx="2" ry="2" _orig_x="456.9" _orig_width="0.5"/>
<text x="215.87577213452283" y="1839.5" _orig_x="459.87"/>
</g>
<g class="hide">
<title>g_type_check_instance_cast (69 samples, 0.01%)</title><rect x="206.16678105696627" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(247,29,32)" rx="2" ry="2" _orig_x="249.5" _orig_width="0.1"/>
<text x="209.16678105696627" y="2015.5" _orig_x="252.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,238 samples, 0.18%)</title><rect x="1156.6037735849059" y="2005" width="8.163522012578618" height="15.0" fill="rgb(212,30,0)" rx="2" ry="2" _orig_x="699.7" _orig_width="2.2"/>
<text x="1159.6037735849059" y="2015.5" _orig_x="702.73"/>
</g>
<g class="hide">
<title>[code] (243 samples, 0.04%)</title><rect x="14.755662319835176" y="1909" width="0.4365133836650652" height="15.0" fill="rgb(211,55,24)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1919.5" _orig_x="77.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (219 samples, 0.03%)</title><rect x="270.8798901853122" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(234,140,0)" rx="2" ry="2" _orig_x="308.8" _orig_width="0.4"/>
<text x="273.8798901853122" y="1983.5" _orig_x="311.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (798 samples, 0.12%)</title><rect x="176.70212765957436" y="1925" width="1.5277968428277282" height="15.0" fill="rgb(224,38,12)" rx="2" ry="2" _orig_x="222.5" _orig_width="1.4"/>
<text x="179.70212765957436" y="1935.5" _orig_x="225.49"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1973" width="2.2916952642415924" height="15.0" fill="rgb(217,85,12)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1983.5" _orig_x="141.47"/>
</g>
<g class="hide">
<title>ntfs_xattr_system_type (82 samples, 0.01%)</title><rect x="793.6046671242277" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(226,33,34)" rx="2" ry="2" _orig_x="787.8" _orig_width="0.1"/>
<text x="796.6046671242277" y="2047.5" _orig_x="790.80"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,177 samples, 0.17%)</title><rect x="164.6877144818119" y="1781" width="8.503774879890186" height="15.0" fill="rgb(209,95,31)" rx="2" ry="2" _orig_x="445.0" _orig_width="2.1"/>
<text x="167.6877144818119" y="1791.5" _orig_x="448.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (490 samples, 0.07%)</title><rect x="348.93617021276594" y="1861" width="3.644474948524365" height="15.0" fill="rgb(254,179,43)" rx="2" ry="2" _orig_x="490.5" _orig_width="0.9"/>
<text x="351.93617021276594" y="1871.5" _orig_x="493.51"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (203 samples, 0.03%)</title><rect x="930.8373369938231" y="1781" width="1.214824982841455" height="15.0" fill="rgb(235,21,34)" rx="2" ry="2" _orig_x="634.2" _orig_width="0.3"/>
<text x="933.8373369938231" y="1791.5" _orig_x="637.16"/>
</g>
<g class="hide">
<title>[libgdk-3.so.0.2404.16] (268 samples, 0.04%)</title><rect x="242.07000686341786" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(239,75,44)" rx="2" ry="2" _orig_x="282.4" _orig_width="0.5"/>
<text x="245.07000686341786" y="2047.5" _orig_x="285.42"/>
</g>
<g class="hide">
<title>epoll_wait (116 samples, 0.02%)</title><rect x="59.82566918325317" y="117" width="0.2182566918325326" height="15.0" fill="rgb(215,117,29)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="127.5" _orig_x="118.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="326.535346602608" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(250,220,51)" rx="2" ry="2" _orig_x="359.8" _orig_width="0.2"/>
<text x="329.535346602608" y="2047.5" _orig_x="362.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (70 samples, 0.01%)</title><rect x="66.15511324639661" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(243,205,51)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1951.5" _orig_x="124.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,350 samples, 0.35%)</title><rect x="343.4502402196293" y="1973" width="4.4742621825669175" height="15.0" fill="rgb(226,19,1)" rx="2" ry="2" _orig_x="375.3" _orig_width="4.1"/>
<text x="346.4502402196293" y="1983.5" _orig_x="378.32"/>
</g>
<g>
<title>std::__detail::operator!=&lt;void*, false&gt; (147 samples, 0.02%)</title><rect x="1021.1393273850377" y="1861" width="1.214824982841455" height="15.0" fill="rgb(242,217,10)" rx="2" ry="2" _orig_x="656.5" _orig_width="0.3"/>
<text x="1024.1393273850376" y="1871.5" _orig_x="659.52"/>
</g>
<g class="hide">
<title>cmd_record (1,400 samples, 0.21%)</title><rect x="805.4996568291008" y="2005" width="2.7282086479066576" height="15.0" fill="rgb(239,34,44)" rx="2" ry="2" _orig_x="798.7" _orig_width="2.5"/>
<text x="808.4996568291008" y="2015.5" _orig_x="801.74"/>
</g>
<g>
<title>ExecuteEngine::AddField (438 samples, 0.07%)</title><rect x="1101.3177762525736" y="1957" width="3.239533287577214" height="15.0" fill="rgb(234,52,34)" rx="2" ry="2" _orig_x="676.3" _orig_width="0.8"/>
<text x="1104.3177762525736" y="1967.5" _orig_x="679.35"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (383 samples, 0.06%)</title><rect x="1152.745367192862" y="1861" width="2.8345916266300617" height="15.0" fill="rgb(209,130,40)" rx="2" ry="2" _orig_x="689.0" _orig_width="0.7"/>
<text x="1155.745367192862" y="1871.5" _orig_x="691.98"/>
</g>
<g>
<title>IndexKeyComparator::operator (5,283 samples, 0.78%)</title><rect x="14.859299931365772" y="1861" width="37.25463280713795" height="15.0" fill="rgb(238,200,23)" rx="2" ry="2" _orig_x="408.0" _orig_width="9.2"/>
<text x="17.859299931365772" y="1871.5" _orig_x="410.98">Ind..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (229 samples, 0.03%)</title><rect x="612.5531914893618" y="1861" width="1.619766643788607" height="15.0" fill="rgb(239,111,5)" rx="2" ry="2" _orig_x="555.6" _orig_width="0.4"/>
<text x="615.5531914893618" y="1871.5" _orig_x="558.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (129 samples, 0.02%)</title><rect x="58.0" y="1877" width="0.2" height="15.0" fill="rgb(222,136,47)" rx="2" ry="2"/>
<text x="61.00" y="1887.5"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (68 samples, 0.01%)</title><rect x="335.2" y="2053" width="0.1" height="15.0" fill="rgb(242,213,38)" rx="2" ry="2"/>
<text x="338.17" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (61 samples, 0.01%)</title><rect x="423.85037748798896" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(245,78,34)" rx="2" ry="2" _orig_x="509.0" _orig_width="0.1"/>
<text x="426.85037748798896" y="1743.5" _orig_x="511.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,852 samples, 1.02%)</title><rect x="741.0048043925874" y="1893" width="13.095401509951955" height="15.0" fill="rgb(236,56,53)" rx="2" ry="2" _orig_x="739.6" _orig_width="12.0"/>
<text x="744.0048043925874" y="1903.5" _orig_x="742.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (318 samples, 0.05%)</title><rect x="308.8565545641729" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(232,141,40)" rx="2" ry="2" _orig_x="343.6" _orig_width="0.6"/>
<text x="311.8565545641729" y="2031.5" _orig_x="346.64"/>
</g>
<g class="hide">
<title>[unknown] (364 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(245,119,51)" rx="2" ry="2"/>
<text x="1192.15" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="85" width="0.1091283459162663" height="15.0" fill="rgb(208,78,52)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="95.5" _orig_x="118.82"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (136 samples, 0.02%)</title><rect x="370.39807824296497" y="1685" width="1.214824982841455" height="15.0" fill="rgb(220,128,44)" rx="2" ry="2" _orig_x="495.8" _orig_width="0.3"/>
<text x="373.39807824296497" y="1695.5" _orig_x="498.84"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="677" width="2.182566918325326" height="15.0" fill="rgb(218,100,28)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="687.5" _orig_x="117.41"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (191 samples, 0.03%)</title><rect x="644.5435827041866" y="1893" width="1.214824982841455" height="15.0" fill="rgb(247,103,51)" rx="2" ry="2" _orig_x="563.5" _orig_width="0.3"/>
<text x="647.5435827041866" y="1903.5" _orig_x="566.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (104 samples, 0.02%)</title><rect x="13.336993822923718" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(252,86,30)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1903.5" _orig_x="75.83"/>
</g>
<g class="hide">
<title>[perf-123031.map] (94 samples, 0.01%)</title><rect x="86.8894989704872" y="1477" width="0.2182566918325326" height="15.0" fill="rgb(243,206,13)" rx="2" ry="2" _orig_x="140.2" _orig_width="0.2"/>
<text x="89.8894989704872" y="1487.5" _orig_x="143.21"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (70 samples, 0.01%)</title><rect x="567.6046671242278" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(237,29,21)" rx="2" ry="2" _orig_x="544.5" _orig_width="0.2"/>
<text x="570.6046671242278" y="1823.5" _orig_x="547.54"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (596 samples, 0.09%)</title><rect x="180.84900480439248" y="1957" width="1.091283459162663" height="15.0" fill="rgb(240,3,30)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1967.5" _orig_x="229.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,125 samples, 0.17%)</title><rect x="805.9361702127659" y="1925" width="2.182566918325326" height="15.0" fill="rgb(212,203,27)" rx="2" ry="2" _orig_x="799.1" _orig_width="2.0"/>
<text x="808.9361702127659" y="1935.5" _orig_x="802.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.01%)</title><rect x="159.78723404255308" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(214,164,17)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1855.5" _orig_x="210.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (310 samples, 0.05%)</title><rect x="211.8414550446121" y="1765" width="0.6547700754975978" height="15.0" fill="rgb(230,14,52)" rx="2" ry="2" _orig_x="254.7" _orig_width="0.6"/>
<text x="214.8414550446121" y="1775.5" _orig_x="257.74"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (62 samples, 0.01%)</title><rect x="340.0274536719286" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(245,5,1)" rx="2" ry="2" _orig_x="488.3" _orig_width="0.1"/>
<text x="343.0274536719286" y="1791.5" _orig_x="491.32"/>
</g>
<g class="hide">
<title>runtime.mcall (250 samples, 0.04%)</title><rect x="159.67810569663686" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(213,107,0)" rx="2" ry="2" _orig_x="206.9" _orig_width="0.4"/>
<text x="162.67810569663686" y="1999.5" _orig_x="209.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (250 samples, 0.04%)</title><rect x="1163.2830188679245" y="1893" width="1.4842767295597485" height="15.0" fill="rgb(212,194,52)" rx="2" ry="2" _orig_x="701.5" _orig_width="0.4"/>
<text x="1166.2830188679245" y="1903.5" _orig_x="704.47"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1909" width="2.2916952642415924" height="15.0" fill="rgb(213,122,48)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1919.5" _orig_x="141.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="212.605353466026" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(228,81,23)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1983.5" _orig_x="258.43"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (119 samples, 0.02%)</title><rect x="1151.5305422100207" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(224,28,24)" rx="2" ry="2" _orig_x="688.7" _orig_width="0.2"/>
<text x="1154.5305422100207" y="1791.5" _orig_x="691.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (107 samples, 0.02%)</title><rect x="161.86067261496217" y="1845" width="0.2182566918325326" height="15.0" fill="rgb(216,115,45)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1855.5" _orig_x="211.93"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.02%)</title><rect x="14.864790665751453" y="1765" width="0.3273850377487989" height="15.0" fill="rgb(245,124,38)" rx="2" ry="2" _orig_x="74.2" _orig_width="0.3"/>
<text x="17.864790665751453" y="1775.5" _orig_x="77.24"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (73 samples, 0.01%)</title><rect x="159.82841455044615" y="1685" width="0.4049416609471517" height="15.0" fill="rgb(233,140,10)" rx="2" ry="2" _orig_x="443.8" _orig_width="0.1"/>
<text x="162.82841455044615" y="1695.5" _orig_x="446.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,189 samples, 1.07%)</title><rect x="740.3500343170898" y="1909" width="13.750171585449554" height="15.0" fill="rgb(249,154,12)" rx="2" ry="2" _orig_x="739.0" _orig_width="12.6"/>
<text x="743.3500343170898" y="1919.5" _orig_x="742.01"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (702 samples, 0.10%)</title><rect x="1075.401509951956" y="1877" width="4.85929993136582" height="15.0" fill="rgb(252,143,9)" rx="2" ry="2" _orig_x="669.9" _orig_width="1.2"/>
<text x="1078.401509951956" y="1887.5" _orig_x="672.85"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (120 samples, 0.02%)</title><rect x="481.7570350034315" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(225,138,16)" rx="2" ry="2" _orig_x="523.3" _orig_width="0.2"/>
<text x="484.7570350034315" y="1823.5" _orig_x="526.31"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (212 samples, 0.03%)</title><rect x="1148.291008922443" y="1781" width="1.214824982841455" height="15.0" fill="rgb(245,209,35)" rx="2" ry="2" _orig_x="687.9" _orig_width="0.3"/>
<text x="1151.291008922443" y="1791.5" _orig_x="690.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (566 samples, 0.08%)</title><rect x="211.40494166094706" y="1829" width="1.091283459162663" height="15.0" fill="rgb(217,92,37)" rx="2" ry="2" _orig_x="254.3" _orig_width="1.0"/>
<text x="214.40494166094706" y="1839.5" _orig_x="257.29"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvent (18,918 samples, 2.81%)</title><rect x="98.45710363761145" y="1989" width="36.121482498284145" height="15.0" fill="rgb(207,192,35)" rx="2" ry="2" _orig_x="150.8" _orig_width="33.1"/>
<text x="101.45710363761145" y="1999.5" _orig_x="153.75">InotifyBackend::handleEvent </text>
</g>
<g class="hide">
<title>__memcmp_avx2_movbe (66 samples, 0.01%)</title><rect x="101.29444063143437" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(225,87,35)" rx="2" ry="2" _orig_x="153.4" _orig_width="0.2"/>
<text x="104.29444063143437" y="1935.5" _orig_x="156.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,797 samples, 0.27%)</title><rect x="344.5415236787919" y="1941" width="3.382978723404255" height="15.0" fill="rgb(214,172,14)" rx="2" ry="2" _orig_x="376.3" _orig_width="3.1"/>
<text x="347.5415236787919" y="1951.5" _orig_x="379.29"/>
</g>
<g class="hide">
<title>[code] (69 samples, 0.01%)</title><rect x="16.9" y="1717" width="0.1" height="15.0" fill="rgb(224,85,29)" rx="2" ry="2"/>
<text x="19.89" y="1727.5"/>
</g>
<g class="hide">
<title>[ntfs-3g] (2,313 samples, 0.34%)</title><rect x="710.1" y="2053" width="4.0" height="15.0" fill="rgb(252,130,2)" rx="2" ry="2"/>
<text x="713.10" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,667 samples, 0.54%)</title><rect x="45.99371069182386" y="1941" width="23.748427672955977" height="15.0" fill="rgb(253,162,43)" rx="2" ry="2" _orig_x="400.4" _orig_width="6.4"/>
<text x="48.99371069182386" y="1951.5" _orig_x="403.40">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (344 samples, 0.05%)</title><rect x="12.245710363761054" y="1989" width="0.6547700754975978" height="15.0" fill="rgb(250,78,6)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1999.5" _orig_x="74.76"/>
</g>
<g class="hide">
<title>__libc_write (1,088 samples, 0.16%)</title><rect x="271.31640356897725" y="2037" width="2.0734385724090596" height="15.0" fill="rgb(207,34,28)" rx="2" ry="2" _orig_x="309.2" _orig_width="1.9"/>
<text x="274.31640356897725" y="2047.5" _orig_x="312.18"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (85 samples, 0.01%)</title><rect x="378.901853122855" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(242,92,22)" rx="2" ry="2" _orig_x="497.9" _orig_width="0.1"/>
<text x="381.901853122855" y="1775.5" _orig_x="500.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (344 samples, 0.05%)</title><rect x="67.51572327044025" y="1653" width="2.2264150943396226" height="15.0" fill="rgb(213,141,19)" rx="2" ry="2" _orig_x="406.2" _orig_width="0.6"/>
<text x="70.51572327044025" y="1663.5" _orig_x="409.22"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (62 samples, 0.01%)</title><rect x="271.5923129718599" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(219,46,0)" rx="2" ry="2" _orig_x="471.4" _orig_width="0.1"/>
<text x="274.5923129718599" y="1775.5" _orig_x="474.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,445 samples, 0.81%)</title><rect x="718.4152367879202" y="1877" width="10.476321207961565" height="15.0" fill="rgb(252,165,15)" rx="2" ry="2" _orig_x="718.9" _orig_width="9.6"/>
<text x="721.4152367879202" y="1887.5" _orig_x="721.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (13,149 samples, 1.95%)</title><rect x="1142.8153740562798" y="1781" width="25.208647906657518" height="15.0" fill="rgb(223,6,11)" rx="2" ry="2" _orig_x="1107.8" _orig_width="23.1"/>
<text x="1145.8153740562798" y="1791.5" _orig_x="1110.84">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (90 samples, 0.01%)</title><rect x="313.3013040494165" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(218,101,53)" rx="2" ry="2" _orig_x="481.7" _orig_width="0.2"/>
<text x="316.3013040494165" y="1839.5" _orig_x="484.72"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (1,327 samples, 0.20%)</title><rect x="692.3266986959504" y="1877" width="9.313658201784488" height="15.0" fill="rgb(238,28,34)" rx="2" ry="2" _orig_x="575.3" _orig_width="2.3"/>
<text x="695.3266986959504" y="1887.5" _orig_x="578.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (272 samples, 0.04%)</title><rect x="178.99382292381597" y="2005" width="0.5456417295813315" height="15.0" fill="rgb(228,149,12)" rx="2" ry="2" _orig_x="224.6" _orig_width="0.5"/>
<text x="181.99382292381597" y="2015.5" _orig_x="227.58"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1957" width="2.2916952642415924" height="15.0" fill="rgb(225,80,25)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1967.5" _orig_x="141.47"/>
</g>
<g class="hide">
<title>[unknown] (118 samples, 0.02%)</title><rect x="194.16266300617696" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(242,105,2)" rx="2" ry="2" _orig_x="238.5" _orig_width="0.2"/>
<text x="197.16266300617696" y="2031.5" _orig_x="241.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (253 samples, 0.04%)</title><rect x="265.0960878517501" y="1781" width="0.5456417295813315" height="15.0" fill="rgb(213,56,21)" rx="2" ry="2" _orig_x="303.5" _orig_width="0.5"/>
<text x="268.0960878517501" y="1791.5" _orig_x="306.52"/>
</g>
<g class="hide">
<title>frame::sender (72 samples, 0.01%)</title><rect x="11.2" y="2005" width="0.1" height="15.0" fill="rgb(209,128,34)" rx="2" ry="2"/>
<text x="14.21" y="2015.5"/>
</g>
<g class="hide">
<title>DedicatedWorker (89 samples, 0.01%)</title><rect x="17.3" y="2069" width="0.1" height="15.0" fill="rgb(239,4,52)" rx="2" ry="2"/>
<text x="20.26" y="2079.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (88 samples, 0.01%)</title><rect x="103.54152367879189" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(240,171,3)" rx="2" ry="2" _orig_x="429.9" _orig_width="0.1"/>
<text x="106.54152367879189" y="1775.5" _orig_x="432.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (97 samples, 0.01%)</title><rect x="1166.6226415094338" y="1893" width="0.7421383647798743" height="15.0" fill="rgb(226,139,12)" rx="2" ry="2" _orig_x="702.4" _orig_width="0.2"/>
<text x="1169.6226415094338" y="1903.5" _orig_x="705.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,894 samples, 1.62%)</title><rect x="110.24296499656819" y="1845" width="20.843514070006865" height="15.0" fill="rgb(230,31,50)" rx="2" ry="2" _orig_x="161.6" _orig_width="19.1"/>
<text x="113.24296499656819" y="1855.5" _orig_x="164.65">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (67 samples, 0.01%)</title><rect x="150.51475634866156" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(238,228,8)" rx="2" ry="2" _orig_x="441.5" _orig_width="0.1"/>
<text x="153.51475634866156" y="1887.5" _orig_x="444.50"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (87 samples, 0.01%)</title><rect x="314.1111873713108" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(209,89,36)" rx="2" ry="2" _orig_x="481.9" _orig_width="0.2"/>
<text x="317.1111873713108" y="1871.5" _orig_x="484.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (227 samples, 0.03%)</title><rect x="808.9917638984213" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(205,82,26)" rx="2" ry="2" _orig_x="801.9" _orig_width="0.4"/>
<text x="811.9917638984213" y="1951.5" _orig_x="804.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,972 samples, 0.29%)</title><rect x="57.12578616352197" y="1829" width="12.616352201257861" height="15.0" fill="rgb(247,175,8)" rx="2" ry="2" _orig_x="403.4" _orig_width="3.4"/>
<text x="60.12578616352197" y="1839.5" _orig_x="406.37"/>
</g>
<g>
<title>Row::SerializeTo (166 samples, 0.02%)</title><rect x="308.03706245710345" y="1925" width="1.214824982841455" height="15.0" fill="rgb(251,83,13)" rx="2" ry="2" _orig_x="480.4" _orig_width="0.3"/>
<text x="311.03706245710345" y="1935.5" _orig_x="483.44"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (136 samples, 0.02%)</title><rect x="167.11736444749488" y="1701" width="1.214824982841455" height="15.0" fill="rgb(230,137,14)" rx="2" ry="2" _orig_x="445.6" _orig_width="0.3"/>
<text x="170.11736444749488" y="1711.5" _orig_x="448.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="307.4378860672614" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(242,174,42)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="1983.5" _orig_x="345.33"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (131 samples, 0.02%)</title><rect x="779.389155799588" y="1781" width="1.214824982841455" height="15.0" fill="rgb(230,11,52)" rx="2" ry="2" _orig_x="596.8" _orig_width="0.3"/>
<text x="782.389155799588" y="1791.5" _orig_x="599.85"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (322 samples, 0.05%)</title><rect x="67.9" y="2005" width="0.6" height="15.0" fill="rgb(222,87,39)" rx="2" ry="2"/>
<text x="70.92" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.02%)</title><rect x="39.685534591194966" y="1845" width="0.7421383647798743" height="15.0" fill="rgb(238,178,40)" rx="2" ry="2" _orig_x="398.7" _orig_width="0.2"/>
<text x="42.685534591194966" y="1855.5" _orig_x="401.65"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (101 samples, 0.01%)</title><rect x="275.6417295813314" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(219,179,26)" rx="2" ry="2" _orig_x="472.4" _orig_width="0.2"/>
<text x="278.6417295813314" y="1871.5" _orig_x="475.42"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (107 samples, 0.02%)</title><rect x="63.04735758407673" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(248,141,5)" rx="2" ry="2" _orig_x="419.9" _orig_width="0.2"/>
<text x="66.04735758407674" y="1871.5" _orig_x="422.88"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (317 samples, 0.05%)</title><rect x="176.4310226492792" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(236,100,26)" rx="2" ry="2" _orig_x="447.9" _orig_width="0.5"/>
<text x="179.4310226492792" y="1743.5" _orig_x="450.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="58.1" y="1797" width="0.1" height="15.0" fill="rgb(216,31,7)" rx="2" ry="2"/>
<text x="61.12" y="1807.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (686 samples, 0.10%)</title><rect x="239.60192175703497" y="1797" width="4.85929993136582" height="15.0" fill="rgb(236,175,19)" rx="2" ry="2" _orig_x="463.5" _orig_width="1.2"/>
<text x="242.60192175703497" y="1807.5" _orig_x="466.47"/>
</g>
<g class="hide">
<title>std::__1::chrono::steady_clock::now (225 samples, 0.03%)</title><rect x="156.07687028140006" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(231,17,26)" rx="2" ry="2" _orig_x="203.6" _orig_width="0.4"/>
<text x="159.07687028140006" y="2015.5" _orig_x="206.61"/>
</g>
<g class="hide">
<title>[unknown] (66 samples, 0.01%)</title><rect x="31.0" y="1989" width="0.1" height="15.0" fill="rgb(248,19,39)" rx="2" ry="2"/>
<text x="33.97" y="1999.5"/>
</g>
<g>
<title>BPlusTree::InternalInsert (33,825 samples, 5.02%)</title><rect x="12.429649965682762" y="1909" width="240.13040494166094" height="15.0" fill="rgb(228,107,38)" rx="2" ry="2" _orig_x="407.4" _orig_width="59.3"/>
<text x="15.429649965682762" y="1919.5" _orig_x="410.39">BPlusTree::InternalInsert </text>
</g>
<g class="hide">
<title>[unknown] (83 samples, 0.01%)</title><rect x="22.2" y="2053" width="0.1" height="15.0" fill="rgb(207,104,39)" rx="2" ry="2"/>
<text x="25.17" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (212 samples, 0.03%)</title><rect x="79.2450240219628" y="1717" width="1.619766643788607" height="15.0" fill="rgb(209,68,27)" rx="2" ry="2" _orig_x="423.9" _orig_width="0.4"/>
<text x="82.2450240219628" y="1727.5" _orig_x="426.90"/>
</g>
<g class="hide">
<title>[code] (359 samples, 0.05%)</title><rect x="69.53809196980086" y="1957" width="0.7638984214138641" height="15.0" fill="rgb(222,80,15)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="1967.5" _orig_x="127.32"/>
</g>
<g class="hide">
<title>[libatspi.so.0.0.1] (110 samples, 0.02%)</title><rect x="251.45504461221677" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(236,69,23)" rx="2" ry="2" _orig_x="291.0" _orig_width="0.2"/>
<text x="254.45504461221677" y="2031.5" _orig_x="294.03"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (297 samples, 0.04%)</title><rect x="1150.315717227179" y="1829" width="2.42964996568291" height="15.0" fill="rgb(224,0,34)" rx="2" ry="2" _orig_x="688.4" _orig_width="0.6"/>
<text x="1153.315717227179" y="1839.5" _orig_x="691.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,385 samples, 0.35%)</title><rect x="355.6726149622511" y="1957" width="4.583390528483185" height="15.0" fill="rgb(222,186,44)" rx="2" ry="2" _orig_x="386.5" _orig_width="4.2"/>
<text x="358.6726149622511" y="1967.5" _orig_x="389.47"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (214 samples, 0.03%)</title><rect x="732.4927934111186" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(241,131,6)" rx="2" ry="2" _orig_x="731.8" _orig_width="0.4"/>
<text x="735.4927934111186" y="2031.5" _orig_x="734.81"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (751 samples, 0.11%)</title><rect x="1001.2971859986274" y="1877" width="5.264241592312972" height="15.0" fill="rgb(209,93,12)" rx="2" ry="2" _orig_x="651.6" _orig_width="1.3"/>
<text x="1004.2971859986274" y="1887.5" _orig_x="654.63"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (116 samples, 0.02%)</title><rect x="1154.3651338366503" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(231,61,9)" rx="2" ry="2" _orig_x="689.4" _orig_width="0.2"/>
<text x="1157.3651338366503" y="1791.5" _orig_x="692.39"/>
</g>
<g class="hide">
<title>[code] (290 samples, 0.04%)</title><rect x="16.6" y="1749" width="0.5" height="15.0" fill="rgb(232,109,22)" rx="2" ry="2"/>
<text x="19.62" y="1759.5"/>
</g>
<g class="hide">
<title>[code] (209 samples, 0.03%)</title><rect x="14.755662319835176" y="1813" width="0.4365133836650652" height="15.0" fill="rgb(221,108,14)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1823.5" _orig_x="77.14"/>
</g>
<g class="hide">
<title>g_array_append_vals (173 samples, 0.03%)</title><rect x="290.74124914207266" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(253,107,37)" rx="2" ry="2" _orig_x="327.0" _orig_width="0.3"/>
<text x="293.74124914207266" y="2047.5" _orig_x="330.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (233 samples, 0.03%)</title><rect x="341.4859299931365" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(241,66,24)" rx="2" ry="2" _orig_x="373.5" _orig_width="0.4"/>
<text x="344.4859299931365" y="1951.5" _orig_x="376.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (121 samples, 0.02%)</title><rect x="57.3" y="1877" width="0.2" height="15.0" fill="rgb(250,200,12)" rx="2" ry="2"/>
<text x="60.28" y="1887.5"/>
</g>
<g class="hide">
<title>__libc_enable_asynccancel (60 samples, 0.01%)</title><rect x="143.41798215511312" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(222,219,10)" rx="2" ry="2" _orig_x="192.0" _orig_width="0.1"/>
<text x="146.41798215511312" y="2031.5" _orig_x="195.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.02%)</title><rect x="336.6842827728208" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(229,135,23)" rx="2" ry="2" _orig_x="369.1" _orig_width="0.2"/>
<text x="339.6842827728208" y="1919.5" _orig_x="372.07"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (147 samples, 0.02%)</title><rect x="1068.1125600549074" y="1893" width="1.214824982841455" height="15.0" fill="rgb(210,184,26)" rx="2" ry="2" _orig_x="668.1" _orig_width="0.3"/>
<text x="1071.1125600549074" y="1903.5" _orig_x="671.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (4,810 samples, 0.71%)</title><rect x="1027.6183939601922" y="1845" width="34.420041180507894" height="15.0" fill="rgb(227,117,32)" rx="2" ry="2" _orig_x="658.1" _orig_width="8.5"/>
<text x="1030.6183939601922" y="1855.5" _orig_x="661.13">std..</text>
</g>
<g class="hide">
<title>[unknown] (1,323 samples, 0.20%)</title><rect x="58.407000686341696" y="2005" width="2.509951956074125" height="15.0" fill="rgb(236,160,17)" rx="2" ry="2" _orig_x="114.1" _orig_width="2.3"/>
<text x="61.407000686341696" y="2015.5" _orig_x="117.12"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (167 samples, 0.02%)</title><rect x="682.6080988332188" y="1845" width="1.214824982841455" height="15.0" fill="rgb(206,130,52)" rx="2" ry="2" _orig_x="572.9" _orig_width="0.3"/>
<text x="685.6080988332188" y="1855.5" _orig_x="575.90"/>
</g>
<g>
<title>[[kernel.kallsyms]] (153 samples, 0.02%)</title><rect x="724.3170899107756" y="1653" width="1.214824982841455" height="15.0" fill="rgb(230,46,29)" rx="2" ry="2" _orig_x="583.2" _orig_width="0.3"/>
<text x="727.3170899107756" y="1663.5" _orig_x="586.22"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (130 samples, 0.02%)</title><rect x="768.050789293068" y="1765" width="1.214824982841455" height="15.0" fill="rgb(206,144,16)" rx="2" ry="2" _orig_x="594.0" _orig_width="0.3"/>
<text x="771.050789293068" y="1775.5" _orig_x="597.02"/>
</g>
<g>
<title>[[kernel.kallsyms]] (259 samples, 0.04%)</title><rect x="56.56829100892244" y="1653" width="2.0247083047357584" height="15.0" fill="rgb(237,207,50)" rx="2" ry="2" _orig_x="418.3" _orig_width="0.5"/>
<text x="59.56829100892244" y="1663.5" _orig_x="421.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (648 samples, 0.10%)</title><rect x="358.94646533973906" y="1797" width="1.3095401509951956" height="15.0" fill="rgb(209,189,32)" rx="2" ry="2" _orig_x="389.5" _orig_width="1.2"/>
<text x="361.94646533973906" y="1807.5" _orig_x="392.52"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (172 samples, 0.03%)</title><rect x="460.29512697323264" y="1781" width="1.214824982841455" height="15.0" fill="rgb(232,169,10)" rx="2" ry="2" _orig_x="518.0" _orig_width="0.3"/>
<text x="463.29512697323264" y="1791.5" _orig_x="521.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="21.132075471698116" y="1733" width="1.1132075471698113" height="15.0" fill="rgb(208,20,43)" rx="2" ry="2" _orig_x="393.7" _orig_width="0.3"/>
<text x="24.132075471698116" y="1743.5" _orig_x="396.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="10.717913520933335" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(219,33,0)" rx="2" ry="2" _orig_x="70.4" _orig_width="0.1"/>
<text x="13.717913520933335" y="1903.5" _orig_x="73.42"/>
</g>
<g class="hide">
<title>clutter_paint_node_get_type (89 samples, 0.01%)</title><rect x="189.03363074811247" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(252,70,50)" rx="2" ry="2" _orig_x="233.8" _orig_width="0.1"/>
<text x="192.03363074811247" y="2015.5" _orig_x="236.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="195.0356897735071" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(213,9,4)" rx="2" ry="2" _orig_x="239.3" _orig_width="0.2"/>
<text x="198.0356897735071" y="1887.5" _orig_x="242.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,161 samples, 0.17%)</title><rect x="82.19698009608776" y="1845" width="2.182566918325326" height="15.0" fill="rgb(208,226,8)" rx="2" ry="2" _orig_x="135.9" _orig_width="2.0"/>
<text x="85.19698009608776" y="1855.5" _orig_x="138.91"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (73 samples, 0.01%)</title><rect x="830.4118050789291" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(213,198,18)" rx="2" ry="2" _orig_x="609.4" _orig_width="0.1"/>
<text x="833.4118050789291" y="1727.5" _orig_x="612.37"/>
</g>
<g class="hide">
<title>__libc_disable_asynccancel (130 samples, 0.02%)</title><rect x="143.19972546328063" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(211,175,41)" rx="2" ry="2" _orig_x="191.8" _orig_width="0.2"/>
<text x="146.19972546328063" y="2031.5" _orig_x="194.82"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (90 samples, 0.01%)</title><rect x="355.0102951269732" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(245,164,28)" rx="2" ry="2" _orig_x="492.0" _orig_width="0.2"/>
<text x="358.0102951269732" y="1903.5" _orig_x="495.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="58.3" y="1957" width="0.1" height="15.0" fill="rgb(210,136,25)" rx="2" ry="2"/>
<text x="61.33" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,280 samples, 0.19%)</title><rect x="297.1798215511323" y="1989" width="2.400823610157859" height="15.0" fill="rgb(225,27,5)" rx="2" ry="2" _orig_x="332.9" _orig_width="2.2"/>
<text x="300.1798215511323" y="1999.5" _orig_x="335.90"/>
</g>
<g class="hide">
<title>ib_log_fl_notif (155 samples, 0.02%)</title><rect x="342.3" y="2069" width="0.2" height="15.0" fill="rgb(247,144,43)" rx="2" ry="2"/>
<text x="345.27" y="2079.5"/>
</g>
<g class="hide">
<title>_nv020310rm (94 samples, 0.01%)</title><rect x="348.1" y="2053" width="0.1" height="15.0" fill="rgb(244,71,20)" rx="2" ry="2"/>
<text x="351.07" y="2063.5"/>
</g>
<g class="hide">
<title>[github-desktop] (78 samples, 0.01%)</title><rect x="16.2" y="2021" width="0.1" height="15.0" fill="rgb(234,6,52)" rx="2" ry="2"/>
<text x="19.15" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (576 samples, 0.09%)</title><rect x="729.9862731640357" y="1877" width="4.049416609471517" height="15.0" fill="rgb(243,145,5)" rx="2" ry="2" _orig_x="584.6" _orig_width="1.0"/>
<text x="732.9862731640357" y="1887.5" _orig_x="587.60"/>
</g>
<g class="hide">
<title>g_type_create_instance (67 samples, 0.01%)</title><rect x="189.7975291695263" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(254,143,8)" rx="2" ry="2" _orig_x="234.5" _orig_width="0.1"/>
<text x="192.7975291695263" y="2031.5" _orig_x="237.48"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (143 samples, 0.02%)</title><rect x="1062.0384351407001" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(237,209,15)" rx="2" ry="2" _orig_x="666.6" _orig_width="0.2"/>
<text x="1065.0384351407001" y="1855.5" _orig_x="669.56"/>
</g>
<g class="hide">
<title>v8::Function::Call (227 samples, 0.03%)</title><rect x="86.67124227865467" y="1717" width="0.4365133836650652" height="15.0" fill="rgb(253,28,22)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1727.5" _orig_x="142.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (152 samples, 0.02%)</title><rect x="29.3" y="1957" width="0.2" height="15.0" fill="rgb(230,119,42)" rx="2" ry="2"/>
<text x="32.28" y="1967.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (498 samples, 0.07%)</title><rect x="264.4" y="2053" width="0.8" height="15.0" fill="rgb(228,112,7)" rx="2" ry="2"/>
<text x="267.36" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (353 samples, 0.05%)</title><rect x="333.1921757035002" y="1989" width="0.7638984214138641" height="15.0" fill="rgb(253,188,23)" rx="2" ry="2" _orig_x="365.9" _orig_width="0.7"/>
<text x="336.1921757035002" y="1999.5" _orig_x="368.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.02%)</title><rect x="269.89773507206576" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(240,221,42)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1967.5" _orig_x="310.93"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (66 samples, 0.01%)</title><rect x="835.6760466712425" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(226,136,47)" rx="2" ry="2" _orig_x="610.7" _orig_width="0.1"/>
<text x="838.6760466712425" y="1759.5" _orig_x="613.73"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (120 samples, 0.02%)</title><rect x="690.7069320521618" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(228,104,23)" rx="2" ry="2" _orig_x="574.9" _orig_width="0.2"/>
<text x="693.7069320521618" y="1871.5" _orig_x="577.91"/>
</g>
<g class="hide">
<title>[github-desktop] (103 samples, 0.02%)</title><rect x="178.44818119423465" y="1733" width="0.2182566918325326" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.2"/>
<text x="181.44818119423465" y="1743.5" _orig_x="227.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="329.1544269045984" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(212,180,37)" rx="2" ry="2" _orig_x="362.2" _orig_width="0.4"/>
<text x="332.1544269045984" y="2015.5" _orig_x="365.23"/>
</g>
<g>
<title>TableHeap::cmp::operator (1,867 samples, 0.28%)</title><rect x="1130.4735758407687" y="1861" width="12.958133150308855" height="15.0" fill="rgb(228,23,33)" rx="2" ry="2" _orig_x="683.5" _orig_width="3.2"/>
<text x="1133.4735758407687" y="1871.5" _orig_x="686.48"/>
</g>
<g class="hide">
<title>[code] (262 samples, 0.04%)</title><rect x="133.8146877144817" y="1925" width="0.5456417295813315" height="15.0" fill="rgb(223,70,5)" rx="2" ry="2" _orig_x="183.2" _orig_width="0.5"/>
<text x="136.8146877144817" y="1935.5" _orig_x="186.23"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (97 samples, 0.01%)</title><rect x="345.69663692518867" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(236,67,12)" rx="2" ry="2" _orig_x="489.7" _orig_width="0.2"/>
<text x="348.69663692518867" y="1807.5" _orig_x="492.70"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (240 samples, 0.04%)</title><rect x="404.81811942347287" y="1717" width="1.619766643788607" height="15.0" fill="rgb(253,54,14)" rx="2" ry="2" _orig_x="504.3" _orig_width="0.4"/>
<text x="407.81811942347287" y="1727.5" _orig_x="507.27"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (60 samples, 0.01%)</title><rect x="248.1056966369252" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(243,213,39)" rx="2" ry="2" _orig_x="465.6" _orig_width="0.1"/>
<text x="251.1056966369252" y="1855.5" _orig_x="468.58"/>
</g>
<g class="hide">
<title>clutter_paint_volume_free (67 samples, 0.01%)</title><rect x="204.85724090597108" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(236,151,10)" rx="2" ry="2" _orig_x="248.3" _orig_width="0.1"/>
<text x="207.85724090597108" y="2015.5" _orig_x="251.27"/>
</g>
<g>
<title>DiskManager::IsPageFree (172 samples, 0.03%)</title><rect x="644.5435827041866" y="1877" width="1.214824982841455" height="15.0" fill="rgb(225,24,2)" rx="2" ry="2" _orig_x="563.5" _orig_width="0.3"/>
<text x="647.5435827041866" y="1887.5" _orig_x="566.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,919 samples, 0.28%)</title><rect x="725.1811942347288" y="1765" width="3.710363761153054" height="15.0" fill="rgb(214,128,42)" rx="2" ry="2" _orig_x="725.1" _orig_width="3.4"/>
<text x="728.1811942347288" y="1775.5" _orig_x="728.11"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (130 samples, 0.02%)</title><rect x="280.50102951269736" y="1797" width="1.214824982841455" height="15.0" fill="rgb(207,214,53)" rx="2" ry="2" _orig_x="473.6" _orig_width="0.3"/>
<text x="283.50102951269736" y="1807.5" _orig_x="476.62"/>
</g>
<g class="hide">
<title>[unknown] (447 samples, 0.07%)</title><rect x="58.73438572409051" y="69" width="0.8730267673301304" height="15.0" fill="rgb(221,190,23)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.8"/>
<text x="61.73438572409051" y="79.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>__errno_location (223 samples, 0.03%)</title><rect x="270.1159917638983" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(231,4,50)" rx="2" ry="2" _orig_x="308.1" _orig_width="0.4"/>
<text x="273.1159917638983" y="2047.5" _orig_x="311.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (751 samples, 0.11%)</title><rect x="63.64516129032249" y="1877" width="1.5277968428277282" height="15.0" fill="rgb(240,137,54)" rx="2" ry="2" _orig_x="118.9" _orig_width="1.4"/>
<text x="66.64516129032249" y="1887.5" _orig_x="121.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (985 samples, 0.15%)</title><rect x="358.29169526424147" y="1829" width="1.9643102264927934" height="15.0" fill="rgb(254,22,11)" rx="2" ry="2" _orig_x="388.9" _orig_width="1.8"/>
<text x="361.29169526424147" y="1839.5" _orig_x="391.93"/>
</g>
<g>
<title>[[kernel.kallsyms]] (219 samples, 0.03%)</title><rect x="723.9121482498284" y="1685" width="1.619766643788607" height="15.0" fill="rgb(244,128,38)" rx="2" ry="2" _orig_x="583.1" _orig_width="0.4"/>
<text x="726.9121482498284" y="1695.5" _orig_x="586.10"/>
</g>
<g class="hide">
<title>g_private_get (63 samples, 0.01%)</title><rect x="216.75223061084407" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(242,48,18)" rx="2" ry="2" _orig_x="259.2" _orig_width="0.1"/>
<text x="219.75223061084407" y="2047.5" _orig_x="262.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,017 samples, 0.15%)</title><rect x="351.4166094715167" y="1893" width="1.9643102264927934" height="15.0" fill="rgb(216,11,17)" rx="2" ry="2" _orig_x="382.6" _orig_width="1.8"/>
<text x="354.4166094715167" y="1903.5" _orig_x="385.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (443 samples, 0.07%)</title><rect x="66.77358490566041" y="1669" width="2.968553459119497" height="15.0" fill="rgb(234,208,33)" rx="2" ry="2" _orig_x="406.0" _orig_width="0.8"/>
<text x="69.77358490566041" y="1679.5" _orig_x="409.05"/>
</g>
<g class="hide">
<title>[github-desktop] (88 samples, 0.01%)</title><rect x="175.6108442004117" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(252,90,52)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1983.5" _orig_x="224.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (729 samples, 0.11%)</title><rect x="211.07755662319823" y="1877" width="1.418668496911462" height="15.0" fill="rgb(209,42,34)" rx="2" ry="2" _orig_x="254.0" _orig_width="1.3"/>
<text x="214.07755662319823" y="1887.5" _orig_x="257.01"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (106 samples, 0.02%)</title><rect x="398.7439945092656" y="1701" width="0.8098833218943035" height="15.0" fill="rgb(241,108,34)" rx="2" ry="2" _orig_x="502.8" _orig_width="0.2"/>
<text x="401.7439945092656" y="1711.5" _orig_x="505.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (537 samples, 0.08%)</title><rect x="332.10089224433756" y="2021" width="0.9821551132463967" height="15.0" fill="rgb(238,220,9)" rx="2" ry="2" _orig_x="364.9" _orig_width="0.9"/>
<text x="335.10089224433756" y="2031.5" _orig_x="367.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (406 samples, 0.06%)</title><rect x="338.8668496911461" y="1989" width="0.7638984214138641" height="15.0" fill="rgb(238,56,45)" rx="2" ry="2" _orig_x="371.1" _orig_width="0.7"/>
<text x="341.8668496911461" y="1999.5" _orig_x="374.13"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (86 samples, 0.01%)</title><rect x="647.3781743308168" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(251,16,41)" rx="2" ry="2" _orig_x="564.2" _orig_width="0.2"/>
<text x="650.3781743308168" y="1871.5" _orig_x="567.22"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1557" width="2.182566918325326" height="15.0" fill="rgb(206,60,51)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1567.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (292 samples, 0.04%)</title><rect x="369.3" y="2053" width="0.5" height="15.0" fill="rgb(223,203,26)" rx="2" ry="2"/>
<text x="372.33" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="179.97597803706233" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(227,111,23)" rx="2" ry="2" _orig_x="225.5" _orig_width="0.2"/>
<text x="182.97597803706233" y="1935.5" _orig_x="228.55"/>
</g>
<g>
<title>TablePage::GetTuple (2,293 samples, 0.34%)</title><rect x="338.0027453671928" y="1925" width="16.197666437886067" height="15.0" fill="rgb(205,193,0)" rx="2" ry="2" _orig_x="487.8" _orig_width="4.0"/>
<text x="341.0027453671928" y="1935.5" _orig_x="490.81"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (70 samples, 0.01%)</title><rect x="499.9794097460533" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(215,0,15)" rx="2" ry="2" _orig_x="527.8" _orig_width="0.1"/>
<text x="502.9794097460533" y="1839.5" _orig_x="530.77"/>
</g>
<g class="hide">
<title>geoclue (132 samples, 0.02%)</title><rect x="219.6" y="2069" width="0.2" height="15.0" fill="rgb(215,181,5)" rx="2" ry="2"/>
<text x="222.58" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (907 samples, 0.13%)</title><rect x="346.17844886753596" y="1845" width="1.7460535346602608" height="15.0" fill="rgb(212,195,31)" rx="2" ry="2" _orig_x="377.8" _orig_width="1.6"/>
<text x="349.17844886753596" y="1855.5" _orig_x="380.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (219 samples, 0.03%)</title><rect x="177.79341111873703" y="1829" width="0.4365133836650652" height="15.0" fill="rgb(213,140,34)" rx="2" ry="2" _orig_x="223.5" _orig_width="0.4"/>
<text x="180.79341111873703" y="1839.5" _orig_x="226.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (123 samples, 0.02%)</title><rect x="810.6286890871653" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(250,152,24)" rx="2" ry="2" _orig_x="803.4" _orig_width="0.3"/>
<text x="813.6286890871653" y="1887.5" _orig_x="806.44"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (193 samples, 0.03%)</title><rect x="328.6890871654083" y="1877" width="1.214824982841455" height="15.0" fill="rgb(231,103,19)" rx="2" ry="2" _orig_x="485.5" _orig_width="0.3"/>
<text x="331.6890871654083" y="1887.5" _orig_x="488.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,805 samples, 1.01%)</title><rect x="275.8997940974604" y="1989" width="12.98627316403569" height="15.0" fill="rgb(221,92,42)" rx="2" ry="2" _orig_x="313.4" _orig_width="11.9"/>
<text x="278.8997940974604" y="1999.5" _orig_x="316.35"/>
</g>
<g>
<title>Row::~Row (2,282 samples, 0.34%)</title><rect x="129.45778997940977" y="1861" width="16.197666437886067" height="15.0" fill="rgb(234,186,31)" rx="2" ry="2" _orig_x="436.3" _orig_width="4.0"/>
<text x="132.45778997940977" y="1871.5" _orig_x="439.30"/>
</g>
<g class="hide">
<title>__GI___writev (8,456 samples, 1.26%)</title><rect x="737.9492107069319" y="2021" width="16.150995195607415" height="15.0" fill="rgb(208,27,27)" rx="2" ry="2" _orig_x="736.8" _orig_width="14.8"/>
<text x="740.9492107069319" y="2031.5" _orig_x="739.80"/>
</g>
<g>
<title>Schema::GetColumnCount (96 samples, 0.01%)</title><rect x="982.6698695950583" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(241,108,5)" rx="2" ry="2" _orig_x="647.0" _orig_width="0.2"/>
<text x="985.6698695950583" y="1903.5" _orig_x="650.01"/>
</g>
<g class="hide">
<title>[unknown] (482 samples, 0.07%)</title><rect x="340.5" y="2053" width="0.8" height="15.0" fill="rgb(227,92,29)" rx="2" ry="2"/>
<text x="343.46" y="2063.5"/>
</g>
<g>
<title>DestroySyntaxTree (92 samples, 0.01%)</title><rect x="1174.2072752230608" y="1973" width="0.8098833218943035" height="15.0" fill="rgb(224,134,11)" rx="2" ry="2" _orig_x="694.3" _orig_width="0.2"/>
<text x="1177.2072752230608" y="1983.5" _orig_x="697.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (233 samples, 0.03%)</title><rect x="168.9540150995195" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(251,215,8)" rx="2" ry="2" _orig_x="215.4" _orig_width="0.4"/>
<text x="171.9540150995195" y="1999.5" _orig_x="218.36"/>
</g>
<g class="hide">
<title>__GI___ioctl (137 samples, 0.02%)</title><rect x="60.916952642415836" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(230,224,20)" rx="2" ry="2" _orig_x="116.4" _orig_width="0.3"/>
<text x="63.916952642415836" y="2031.5" _orig_x="119.44"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (220 samples, 0.03%)</title><rect x="1109.4166094715165" y="1877" width="1.619766643788607" height="15.0" fill="rgb(223,125,33)" rx="2" ry="2" _orig_x="678.3" _orig_width="0.4"/>
<text x="1112.4166094715165" y="1887.5" _orig_x="681.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (248 samples, 0.04%)</title><rect x="178.99382292381597" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(208,141,45)" rx="2" ry="2" _orig_x="224.6" _orig_width="0.5"/>
<text x="181.99382292381597" y="1999.5" _orig_x="227.62"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (321 samples, 0.05%)</title><rect x="697.9958819492108" y="1797" width="2.0247083047357584" height="15.0" fill="rgb(231,216,1)" rx="2" ry="2" _orig_x="576.7" _orig_width="0.5"/>
<text x="700.9958819492108" y="1807.5" _orig_x="579.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (189 samples, 0.03%)</title><rect x="84.48867536032935" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(225,223,31)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1999.5" _orig_x="140.96"/>
</g>
<g class="hide">
<title>[unknown] (908 samples, 0.13%)</title><rect x="58.73438572409051" y="197" width="1.7460535346602608" height="15.0" fill="rgb(217,18,32)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.6"/>
<text x="61.73438572409051" y="207.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>g_list_length (101 samples, 0.01%)</title><rect x="265.6417295813314" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(246,90,51)" rx="2" ry="2" _orig_x="304.0" _orig_width="0.2"/>
<text x="268.6417295813314" y="1983.5" _orig_x="307.03"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (911 samples, 0.14%)</title><rect x="1106.1770761839396" y="1893" width="6.479066575154428" height="15.0" fill="rgb(241,27,28)" rx="2" ry="2" _orig_x="677.5" _orig_width="1.6"/>
<text x="1109.1770761839396" y="1903.5" _orig_x="680.47"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (100 samples, 0.01%)</title><rect x="62.5" y="1989" width="0.1" height="15.0" fill="rgb(230,26,21)" rx="2" ry="2"/>
<text x="65.46" y="1999.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (62 samples, 0.01%)</title><rect x="561.9354838709678" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(209,89,3)" rx="2" ry="2" _orig_x="543.1" _orig_width="0.1"/>
<text x="564.9354838709678" y="1839.5" _orig_x="546.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="306.67398764584755" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(246,97,24)" rx="2" ry="2" _orig_x="341.6" _orig_width="0.1"/>
<text x="309.67398764584755" y="2031.5" _orig_x="344.58"/>
</g>
<g class="hide">
<title>[libxcb.so.1.1.0] (85 samples, 0.01%)</title><rect x="230.9" y="2053" width="0.1" height="15.0" fill="rgb(226,38,42)" rx="2" ry="2"/>
<text x="233.86" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.03%)</title><rect x="336.5751544269045" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(218,25,21)" rx="2" ry="2" _orig_x="369.0" _orig_width="0.3"/>
<text x="339.5751544269045" y="1935.5" _orig_x="371.98"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (60 samples, 0.01%)</title><rect x="66.4" y="2053" width="0.1" height="15.0" fill="rgb(218,86,1)" rx="2" ry="2"/>
<text x="69.38" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (321 samples, 0.05%)</title><rect x="12.245710363761054" y="1909" width="0.6547700754975978" height="15.0" fill="rgb(220,179,53)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1919.5" _orig_x="74.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (185 samples, 0.03%)</title><rect x="176.83596431022642" y="1701" width="1.214824982841455" height="15.0" fill="rgb(228,227,0)" rx="2" ry="2" _orig_x="448.0" _orig_width="0.3"/>
<text x="179.83596431022642" y="1711.5" _orig_x="450.99"/>
</g>
<g class="hide">
<title>[[vdso]] (67 samples, 0.01%)</title><rect x="10.742138364779832" y="2037" width="0.37106918238993714" height="15.0" fill="rgb(244,82,9)" rx="2" ry="2" _orig_x="390.9" _orig_width="0.1"/>
<text x="13.742138364779832" y="2047.5" _orig_x="393.88"/>
</g>
<g class="hide">
<title>_nv033085rm (1,004 samples, 0.15%)</title><rect x="1178.7" y="2053" width="1.7" height="15.0" fill="rgb(239,126,24)" rx="2" ry="2"/>
<text x="1181.65" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field&gt; &gt;::construct&lt;Field, Field const&amp;&gt; (72 samples, 0.01%)</title><rect x="1165.2985586822238" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(209,19,33)" rx="2" ry="2" _orig_x="692.1" _orig_width="0.1"/>
<text x="1168.2985586822238" y="1935.5" _orig_x="695.12"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (105 samples, 0.02%)</title><rect x="213.68565545641738" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(209,32,24)" rx="2" ry="2" _orig_x="457.1" _orig_width="0.2"/>
<text x="216.68565545641738" y="1791.5" _orig_x="460.09"/>
</g>
<g class="hide">
<title>[unknown] (4,413 samples, 0.66%)</title><rect x="257.45710363761145" y="2005" width="8.512010981468771" height="15.0" fill="rgb(231,104,2)" rx="2" ry="2" _orig_x="296.5" _orig_width="7.8"/>
<text x="260.45710363761145" y="2015.5" _orig_x="299.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="329.4818119423472" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(231,229,33)" rx="2" ry="2" _orig_x="362.5" _orig_width="0.1"/>
<text x="332.4818119423472" y="1871.5" _orig_x="365.46"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="949" width="2.182566918325326" height="15.0" fill="rgb(230,151,6)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="959.5" _orig_x="117.41"/>
</g>
<g>
<title>Row::DeserializeFrom (10,867 samples, 1.61%)</title><rect x="393.4797529169526" y="1845" width="76.93891557995882" height="15.0" fill="rgb(251,51,6)" rx="2" ry="2" _orig_x="501.5" _orig_width="19.0"/>
<text x="396.4797529169526" y="1855.5" _orig_x="504.50">Row::Dese..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (386 samples, 0.06%)</title><rect x="341.15854495538764" y="1973" width="0.7638984214138641" height="15.0" fill="rgb(247,147,15)" rx="2" ry="2" _orig_x="373.2" _orig_width="0.7"/>
<text x="344.15854495538764" y="1983.5" _orig_x="376.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="96.82017844886745" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(226,159,5)" rx="2" ry="2" _orig_x="149.3" _orig_width="0.1"/>
<text x="99.82017844886745" y="1839.5" _orig_x="152.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (894 samples, 0.13%)</title><rect x="176.48387096774184" y="1941" width="1.7460535346602608" height="15.0" fill="rgb(235,166,48)" rx="2" ry="2" _orig_x="222.3" _orig_width="1.6"/>
<text x="179.48387096774184" y="1951.5" _orig_x="225.34"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (99 samples, 0.01%)</title><rect x="334.7632120796156" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(240,195,39)" rx="2" ry="2" _orig_x="487.0" _orig_width="0.2"/>
<text x="337.7632120796156" y="1919.5" _orig_x="490.04"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (105 samples, 0.02%)</title><rect x="971.3315030885382" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(231,12,40)" rx="2" ry="2" _orig_x="644.2" _orig_width="0.2"/>
<text x="974.3315030885382" y="1839.5" _orig_x="647.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="58.1" y="1813" width="0.1" height="15.0" fill="rgb(224,180,34)" rx="2" ry="2"/>
<text x="61.10" y="1823.5"/>
</g>
<g>
<title>Row::DeserializeFrom (2,177 samples, 0.32%)</title><rect x="338.40768702813983" y="1909" width="15.387783115991764" height="15.0" fill="rgb(240,149,34)" rx="2" ry="2" _orig_x="487.9" _orig_width="3.8"/>
<text x="341.40768702813983" y="1919.5" _orig_x="490.86"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,328 samples, 0.49%)</title><rect x="48.220125786163564" y="1909" width="21.52201257861635" height="15.0" fill="rgb(222,51,20)" rx="2" ry="2" _orig_x="401.0" _orig_width="5.8"/>
<text x="51.220125786163564" y="1919.5" _orig_x="403.99">[..</text>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,387 samples, 0.21%)</title><rect x="522.2512010981466" y="1813" width="10.123541523678792" height="15.0" fill="rgb(234,153,21)" rx="2" ry="2" _orig_x="533.3" _orig_width="2.5"/>
<text x="525.2512010981466" y="1823.5" _orig_x="536.33"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (81 samples, 0.01%)</title><rect x="1025.5936856554563" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(239,225,13)" rx="2" ry="2" _orig_x="657.6" _orig_width="0.2"/>
<text x="1028.5936856554563" y="1839.5" _orig_x="660.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,100 samples, 0.16%)</title><rect x="176.15648592999304" y="1989" width="2.0734385724090596" height="15.0" fill="rgb(248,203,7)" rx="2" ry="2" _orig_x="222.0" _orig_width="1.9"/>
<text x="179.15648592999304" y="1999.5" _orig_x="224.98"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1,112 samples, 0.17%)</title><rect x="1183.4" y="2037" width="2.0" height="15.0" fill="rgb(248,104,36)" rx="2" ry="2"/>
<text x="1186.44" y="2047.5"/>
</g>
<g>
<title>Row::SerializeTo (130 samples, 0.02%)</title><rect x="1126.8291008922442" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(214,88,50)" rx="2" ry="2" _orig_x="682.6" _orig_width="0.2"/>
<text x="1129.8291008922442" y="1935.5" _orig_x="685.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (71 samples, 0.01%)</title><rect x="43.20521619766639" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(246,192,1)" rx="2" ry="2" _orig_x="415.0" _orig_width="0.1"/>
<text x="46.20521619766639" y="1807.5" _orig_x="417.98"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="613" width="1.091283459162663" height="15.0" fill="rgb(252,110,12)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="623.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="168.5175017158544" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(250,36,3)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1871.5" _orig_x="218.02"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (135 samples, 0.02%)</title><rect x="412.9169526424159" y="1733" width="1.214824982841455" height="15.0" fill="rgb(224,132,27)" rx="2" ry="2" _orig_x="506.3" _orig_width="0.3"/>
<text x="415.9169526424159" y="1743.5" _orig_x="509.33"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (257 samples, 0.04%)</title><rect x="525.4907343857242" y="1717" width="1.619766643788607" height="15.0" fill="rgb(232,173,18)" rx="2" ry="2" _orig_x="534.1" _orig_width="0.4"/>
<text x="528.4907343857242" y="1727.5" _orig_x="537.08"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (61 samples, 0.01%)</title><rect x="254.98970487302674" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(220,17,36)" rx="2" ry="2" _orig_x="467.3" _orig_width="0.2"/>
<text x="257.98970487302677" y="1871.5" _orig_x="470.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="307.4378860672614" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(241,93,27)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="1967.5" _orig_x="345.34"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1765" width="2.182566918325326" height="15.0" fill="rgb(223,164,19)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1775.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[libcairo.so.2.11600.0] (209 samples, 0.03%)</title><rect x="268.5" y="2053" width="0.4" height="15.0" fill="rgb(212,48,49)" rx="2" ry="2"/>
<text x="271.51" y="2063.5"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (163 samples, 0.02%)</title><rect x="1143.8366506520244" y="1829" width="1.214824982841455" height="15.0" fill="rgb(249,32,3)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.3"/>
<text x="1146.8366506520244" y="1839.5" _orig_x="689.80"/>
</g>
<g>
<title>[libminisql_shared.so] (107 samples, 0.02%)</title><rect x="471.2285518188059" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(235,107,22)" rx="2" ry="2" _orig_x="520.7" _orig_width="0.1"/>
<text x="474.2285518188059" y="1855.5" _orig_x="523.65"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (62 samples, 0.01%)</title><rect x="319.3754289636238" y="1941" width="0.8098833218943035" height="15.0" fill="rgb(253,106,11)" rx="2" ry="2" _orig_x="483.2" _orig_width="0.2"/>
<text x="322.3754289636238" y="1951.5" _orig_x="486.24"/>
</g>
<g>
<title>[[kernel.kallsyms]] (557 samples, 0.08%)</title><rect x="54.54358270418668" y="1813" width="4.049416609471517" height="15.0" fill="rgb(238,224,43)" rx="2" ry="2" _orig_x="417.8" _orig_width="1.0"/>
<text x="57.54358270418668" y="1823.5" _orig_x="420.80"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (484 samples, 0.07%)</title><rect x="46.0398078242964" y="1781" width="3.644474948524365" height="15.0" fill="rgb(225,105,38)" rx="2" ry="2" _orig_x="415.7" _orig_width="0.9"/>
<text x="49.0398078242964" y="1791.5" _orig_x="418.73"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (120 samples, 0.02%)</title><rect x="1092.8140013726838" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(246,21,38)" rx="2" ry="2" _orig_x="674.2" _orig_width="0.2"/>
<text x="1095.8140013726838" y="1935.5" _orig_x="677.18"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (1,453 samples, 0.22%)</title><rect x="834.0562800274533" y="1781" width="10.123541523678792" height="15.0" fill="rgb(218,185,43)" rx="2" ry="2" _orig_x="610.3" _orig_width="2.5"/>
<text x="837.0562800274533" y="1791.5" _orig_x="613.27"/>
</g>
<g class="hide">
<title>_nv023368rm (133 samples, 0.02%)</title><rect x="349.2" y="2053" width="0.3" height="15.0" fill="rgb(217,47,33)" rx="2" ry="2"/>
<text x="352.25" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1653" width="1.091283459162663" height="15.0" fill="rgb(226,154,42)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1663.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.01%)</title><rect x="86.45298558682215" y="1173" width="0.1091283459162663" height="15.0" fill="rgb(214,221,1)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1183.5" _orig_x="142.79"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (3,045 samples, 0.45%)</title><rect x="532.3747426218255" y="1829" width="21.866849691146193" height="15.0" fill="rgb(251,7,36)" rx="2" ry="2" _orig_x="535.8" _orig_width="5.4"/>
<text x="535.3747426218255" y="1839.5" _orig_x="538.82"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="1941" width="0.2" height="15.0" fill="rgb(213,81,53)" rx="2" ry="2"/>
<text x="17.74" y="1951.5"/>
</g>
<g>
<title>Row::~Row (3,252 samples, 0.48%)</title><rect x="479.7323266986957" y="1861" width="23.08167467398765" height="15.0" fill="rgb(253,186,26)" rx="2" ry="2" _orig_x="522.8" _orig_width="5.7"/>
<text x="482.7323266986957" y="1871.5" _orig_x="525.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (546 samples, 0.08%)</title><rect x="220.13520933424834" y="2021" width="1.091283459162663" height="15.0" fill="rgb(242,79,41)" rx="2" ry="2" _orig_x="262.3" _orig_width="1.0"/>
<text x="223.13520933424834" y="2031.5" _orig_x="265.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="341.8133150308853" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(238,115,53)" rx="2" ry="2" _orig_x="373.8" _orig_width="0.1"/>
<text x="344.8133150308853" y="1887.5" _orig_x="376.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (60 samples, 0.01%)</title><rect x="404.4131777625256" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(235,19,36)" rx="2" ry="2" _orig_x="504.2" _orig_width="0.1"/>
<text x="407.4131777625256" y="1727.5" _orig_x="507.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,155 samples, 0.17%)</title><rect x="1165.7323266986957" y="1669" width="2.182566918325326" height="15.0" fill="rgb(240,170,45)" rx="2" ry="2" _orig_x="1128.8" _orig_width="2.0"/>
<text x="1168.7323266986957" y="1679.5" _orig_x="1131.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.03%)</title><rect x="221.55387783115984" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(216,97,45)" rx="2" ry="2" _orig_x="263.6" _orig_width="0.4"/>
<text x="224.55387783115984" y="1951.5" _orig_x="266.60"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (78 samples, 0.01%)</title><rect x="25.792724776938826" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(239,118,54)" rx="2" ry="2" _orig_x="410.7" _orig_width="0.1"/>
<text x="28.792724776938826" y="1727.5" _orig_x="413.66"/>
</g>
<g class="hide">
<title>[perf-123031.map] (80 samples, 0.01%)</title><rect x="86.45298558682215" y="1413" width="0.1091283459162663" height="15.0" fill="rgb(230,183,2)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1423.5" _orig_x="142.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (781 samples, 0.12%)</title><rect x="1174.6" y="1669" width="1.3" height="15.0" fill="rgb(228,24,7)" rx="2" ry="2"/>
<text x="1177.57" y="1679.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl_data::_Vector_impl_data (80 samples, 0.01%)</title><rect x="1008.586135895676" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(227,68,21)" rx="2" ry="2" _orig_x="653.4" _orig_width="0.2"/>
<text x="1011.586135895676" y="1855.5" _orig_x="656.41"/>
</g>
<g class="hide">
<title>[unknown] (91 samples, 0.01%)</title><rect x="305.5827041866849" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(230,111,53)" rx="2" ry="2" _orig_x="340.6" _orig_width="0.1"/>
<text x="308.5827041866849" y="2031.5" _orig_x="343.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183,417 samples, 27.24%)</title><rect x="817.8311599176388" y="2021" width="350.73850377487986" height="15.0" fill="rgb(248,73,27)" rx="2" ry="2" _orig_x="810.0" _orig_width="321.4"/>
<text x="820.8311599176388" y="2031.5" _orig_x="812.99">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (115 samples, 0.02%)</title><rect x="537.2340425531914" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(216,102,30)" rx="2" ry="2" _orig_x="537.0" _orig_width="0.2"/>
<text x="540.2340425531914" y="1727.5" _orig_x="540.00"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (154 samples, 0.02%)</title><rect x="72.36101578586127" y="1701" width="1.214824982841455" height="15.0" fill="rgb(245,165,50)" rx="2" ry="2" _orig_x="422.2" _orig_width="0.3"/>
<text x="75.36101578586127" y="1711.5" _orig_x="425.19"/>
</g>
<g class="hide">
<title>std::__1::mutex::unlock (62 samples, 0.01%)</title><rect x="159.13246396705551" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(253,157,8)" rx="2" ry="2" _orig_x="206.4" _orig_width="0.1"/>
<text x="162.13246396705551" y="2031.5" _orig_x="209.41"/>
</g>
<g class="hide">
<title>jni_ReleasePrimitiveArrayCritical (66 samples, 0.01%)</title><rect x="21.2" y="1989" width="0.1" height="15.0" fill="rgb(224,218,38)" rx="2" ry="2"/>
<text x="24.15" y="1999.5"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvents (19,774 samples, 2.94%)</title><rect x="97.80233356211383" y="2005" width="37.86753603294441" height="15.0" fill="rgb(236,226,19)" rx="2" ry="2" _orig_x="150.2" _orig_width="34.7"/>
<text x="100.80233356211383" y="2015.5" _orig_x="153.25">InotifyBackend::handleEvents </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,675 samples, 1.88%)</title><rect x="106.85998627316394" y="1957" width="24.22649279341112" height="15.0" fill="rgb(247,164,47)" rx="2" ry="2" _orig_x="158.5" _orig_width="22.2"/>
<text x="109.85998627316394" y="1967.5" _orig_x="161.53">[[kernel.kallsyms]] </text>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,148 samples, 0.17%)</title><rect x="402.3884694577899" y="1797" width="8.098833218943033" height="15.0" fill="rgb(226,228,15)" rx="2" ry="2" _orig_x="503.7" _orig_width="2.0"/>
<text x="405.3884694577899" y="1807.5" _orig_x="506.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="12.682223747426125" y="1765" width="0.2182566918325326" height="15.0" fill="rgb(209,32,24)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="15.682223747426125" y="1775.5" _orig_x="75.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (306 samples, 0.05%)</title><rect x="69.7" y="1989" width="0.5" height="15.0" fill="rgb(237,142,47)" rx="2" ry="2"/>
<text x="72.69" y="1999.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (89 samples, 0.01%)</title><rect x="793.1571722717914" y="1701" width="0.8098833218943035" height="15.0" fill="rgb(249,100,47)" rx="2" ry="2" _orig_x="600.2" _orig_width="0.2"/>
<text x="796.1571722717914" y="1711.5" _orig_x="603.24"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (381 samples, 0.06%)</title><rect x="1101.722717913521" y="1941" width="2.8345916266300617" height="15.0" fill="rgb(243,129,18)" rx="2" ry="2" _orig_x="676.4" _orig_width="0.7"/>
<text x="1104.722717913521" y="1951.5" _orig_x="679.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,633 samples, 0.84%)</title><rect x="143.96362388469447" y="2005" width="10.694577899794098" height="15.0" fill="rgb(243,174,11)" rx="2" ry="2" _orig_x="192.5" _orig_width="9.8"/>
<text x="146.96362388469447" y="2015.5" _orig_x="195.48"/>
</g>
<g class="hide">
<title>[unknown] (1,145 samples, 0.17%)</title><rect x="58.73438572409051" y="341" width="2.182566918325326" height="15.0" fill="rgb(245,3,51)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="351.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1637" width="1.091283459162663" height="15.0" fill="rgb(214,32,38)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1647.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="597" width="2.182566918325326" height="15.0" fill="rgb(210,5,10)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="607.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (595 samples, 0.09%)</title><rect x="61.35346602608089" y="1973" width="1.091283459162663" height="15.0" fill="rgb(225,227,15)" rx="2" ry="2" _orig_x="116.8" _orig_width="1.0"/>
<text x="64.3534660260809" y="1983.5" _orig_x="119.76"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="341" width="1.091283459162663" height="15.0" fill="rgb(215,132,38)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="351.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (612 samples, 0.09%)</title><rect x="337.55730954015087" y="2021" width="1.2004118050789294" height="15.0" fill="rgb(232,74,37)" rx="2" ry="2" _orig_x="369.9" _orig_width="1.1"/>
<text x="340.55730954015087" y="2031.5" _orig_x="372.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (997 samples, 0.15%)</title><rect x="63.20864790665742" y="2037" width="1.9643102264927934" height="15.0" fill="rgb(211,46,33)" rx="2" ry="2" _orig_x="118.5" _orig_width="1.8"/>
<text x="66.20864790665742" y="2047.5" _orig_x="121.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179 samples, 0.03%)</title><rect x="220.89910775566221" y="1829" width="0.3273850377487989" height="15.0" fill="rgb(224,5,33)" rx="2" ry="2" _orig_x="263.0" _orig_width="0.3"/>
<text x="223.89910775566221" y="1839.5" _orig_x="265.98"/>
</g>
<g class="hide">
<title>__errno_location (90 samples, 0.01%)</title><rect x="754.1002059025394" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(216,223,33)" rx="2" ry="2" _orig_x="751.6" _orig_width="0.2"/>
<text x="757.1002059025394" y="2031.5" _orig_x="754.61"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (108 samples, 0.02%)</title><rect x="175.17433081674665" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(239,38,54)" rx="2" ry="2" _orig_x="221.1" _orig_width="0.2"/>
<text x="178.17433081674665" y="2047.5" _orig_x="224.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.01%)</title><rect x="353.27179135209326" y="1733" width="0.1091283459162663" height="15.0" fill="rgb(207,225,11)" rx="2" ry="2" _orig_x="384.3" _orig_width="0.1"/>
<text x="356.27179135209326" y="1743.5" _orig_x="387.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="329.1544269045984" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(224,192,42)" rx="2" ry="2" _orig_x="362.2" _orig_width="0.4"/>
<text x="332.1544269045984" y="2031.5" _orig_x="365.23"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (1,242 samples, 0.18%)</title><rect x="1071.3520933424845" y="1893" width="8.908716540837338" height="15.0" fill="rgb(246,123,22)" rx="2" ry="2" _orig_x="668.9" _orig_width="2.2"/>
<text x="1074.3520933424845" y="1903.5" _orig_x="671.91"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (3,703 samples, 0.55%)</title><rect x="16.47906657515429" y="1845" width="26.32120796156486" height="15.0" fill="rgb(225,223,33)" rx="2" ry="2" _orig_x="408.4" _orig_width="6.5"/>
<text x="19.47906657515429" y="1855.5" _orig_x="411.37">I..</text>
</g>
<g class="hide">
<title>[code] (107 samples, 0.02%)</title><rect x="86.12560054907334" y="1157" width="0.2182566918325326" height="15.0" fill="rgb(223,76,3)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1167.5" _orig_x="142.50"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="1973" width="0.2" height="15.0" fill="rgb(215,165,21)" rx="2" ry="2"/>
<text x="17.74" y="1983.5"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (111 samples, 0.02%)</title><rect x="684.2278654770074" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(226,95,43)" rx="2" ry="2" _orig_x="573.3" _orig_width="0.2"/>
<text x="687.2278654770074" y="1807.5" _orig_x="576.34"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (156 samples, 0.02%)</title><rect x="332.7385037748798" y="1845" width="1.214824982841455" height="15.0" fill="rgb(227,88,43)" rx="2" ry="2" _orig_x="486.5" _orig_width="0.3"/>
<text x="335.7385037748798" y="1855.5" _orig_x="489.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="1175.8" y="1509" width="0.1" height="15.0" fill="rgb(244,73,30)" rx="2" ry="2"/>
<text x="1178.83" y="1519.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (304 samples, 0.05%)</title><rect x="676.5339739190116" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(215,212,18)" rx="2" ry="2" _orig_x="571.4" _orig_width="0.5"/>
<text x="679.5339739190116" y="1823.5" _orig_x="574.40"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (5,680 samples, 0.84%)</title><rect x="649.8078242964995" y="1893" width="40.08922443376802" height="15.0" fill="rgb(218,2,51)" rx="2" ry="2" _orig_x="564.8" _orig_width="9.9"/>
<text x="652.8078242964995" y="1903.5" _orig_x="567.77">Ind..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="307.4378860672614" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(208,164,22)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="2031.5" _orig_x="345.30"/>
</g>
<g class="hide">
<title>[perf-123031.map] (217 samples, 0.03%)</title><rect x="86.67124227865467" y="1637" width="0.4365133836650652" height="15.0" fill="rgb(221,153,54)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1647.5" _orig_x="143.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (362 samples, 0.05%)</title><rect x="1162.5408805031445" y="1909" width="2.2264150943396226" height="15.0" fill="rgb(206,111,54)" rx="2" ry="2" _orig_x="701.3" _orig_width="0.6"/>
<text x="1165.5408805031445" y="1919.5" _orig_x="704.27"/>
</g>
<g class="hide">
<title>[libjvm.so] (73 samples, 0.01%)</title><rect x="13.664378860672514" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(211,169,46)" rx="2" ry="2" _orig_x="73.1" _orig_width="0.1"/>
<text x="16.664378860672514" y="1983.5" _orig_x="76.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (713 samples, 0.11%)</title><rect x="65.28930817610075" y="1701" width="4.452830188679245" height="15.0" fill="rgb(251,203,46)" rx="2" ry="2" _orig_x="405.6" _orig_width="1.2"/>
<text x="68.28930817610075" y="1711.5" _orig_x="408.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,921 samples, 0.58%)</title><rect x="281.3562113932737" y="1941" width="7.529855868222375" height="15.0" fill="rgb(228,50,4)" rx="2" ry="2" _orig_x="318.4" _orig_width="6.9"/>
<text x="284.3562113932737" y="1951.5" _orig_x="321.40"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (121 samples, 0.02%)</title><rect x="1018.3047357584074" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(222,104,20)" rx="2" ry="2" _orig_x="655.8" _orig_width="0.2"/>
<text x="1021.3047357584074" y="1839.5" _orig_x="658.81"/>
</g>
<g class="hide">
<title>__close_nocancel (59 samples, 0.01%)</title><rect x="57.7" y="2053" width="0.1" height="15.0" fill="rgb(247,50,51)" rx="2" ry="2"/>
<text x="60.73" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (166 samples, 0.02%)</title><rect x="850.2539464653396" y="1781" width="1.214824982841455" height="15.0" fill="rgb(218,216,3)" rx="2" ry="2" _orig_x="614.3" _orig_width="0.3"/>
<text x="853.2539464653396" y="1791.5" _orig_x="617.33"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (769 samples, 0.11%)</title><rect x="368.7783115991762" y="1749" width="5.669183253260123" height="15.0" fill="rgb(248,216,37)" rx="2" ry="2" _orig_x="495.4" _orig_width="1.4"/>
<text x="371.7783115991762" y="1759.5" _orig_x="498.43"/>
</g>
<g class="hide">
<title>[code] (388 samples, 0.06%)</title><rect x="69.53809196980086" y="1989" width="0.7638984214138641" height="15.0" fill="rgb(233,69,17)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="1999.5" _orig_x="127.29"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (478 samples, 0.07%)</title><rect x="963.2326698695952" y="1797" width="3.239533287577214" height="15.0" fill="rgb(208,39,42)" rx="2" ry="2" _orig_x="642.2" _orig_width="0.8"/>
<text x="966.2326698695952" y="1807.5" _orig_x="645.16"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (178 samples, 0.03%)</title><rect x="79.64996568291005" y="1701" width="1.214824982841455" height="15.0" fill="rgb(247,122,44)" rx="2" ry="2" _orig_x="424.0" _orig_width="0.3"/>
<text x="82.64996568291005" y="1711.5" _orig_x="426.96"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (73 samples, 0.01%)</title><rect x="433.5689773507205" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(221,186,4)" rx="2" ry="2" _orig_x="511.4" _orig_width="0.2"/>
<text x="436.5689773507205" y="1839.5" _orig_x="514.44"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (359 samples, 0.05%)</title><rect x="594.7357584076872" y="1813" width="2.42964996568291" height="15.0" fill="rgb(252,26,20)" rx="2" ry="2" _orig_x="551.2" _orig_width="0.6"/>
<text x="597.7357584076872" y="1823.5" _orig_x="554.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.02%)</title><rect x="169.0631434454357" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(219,31,36)" rx="2" ry="2" _orig_x="215.5" _orig_width="0.3"/>
<text x="172.0631434454357" y="1935.5" _orig_x="218.53"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (115 samples, 0.02%)</title><rect x="507.6733013040495" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(207,199,4)" rx="2" ry="2" _orig_x="529.7" _orig_width="0.2"/>
<text x="510.6733013040495" y="1871.5" _orig_x="532.73"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (150 samples, 0.02%)</title><rect x="557.0761839396018" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(229,127,0)" rx="2" ry="2" _orig_x="541.9" _orig_width="0.2"/>
<text x="560.0761839396018" y="1855.5" _orig_x="544.88"/>
</g>
<g>
<title>Field::DeserializeFrom (854 samples, 0.13%)</title><rect x="368.3733699382292" y="1813" width="6.0741249142072755" height="15.0" fill="rgb(223,138,7)" rx="2" ry="2" _orig_x="495.3" _orig_width="1.5"/>
<text x="371.3733699382292" y="1823.5" _orig_x="498.35"/>
</g>
<g class="hide">
<title>[code] (278 samples, 0.04%)</title><rect x="15.6" y="1797" width="0.5" height="15.0" fill="rgb(207,162,35)" rx="2" ry="2"/>
<text x="18.62" y="1807.5"/>
</g>
<g class="hide">
<title>JVM_GetStackAccessControlContext (469 samples, 0.07%)</title><rect x="10.8" y="2021" width="0.8" height="15.0" fill="rgb(221,151,48)" rx="2" ry="2"/>
<text x="13.76" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (118 samples, 0.02%)</title><rect x="1093.6238846945778" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(239,193,7)" rx="2" ry="2" _orig_x="674.4" _orig_width="0.2"/>
<text x="1096.6238846945778" y="1935.5" _orig_x="677.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (113 samples, 0.02%)</title><rect x="167.535346602608" y="1845" width="0.2182566918325326" height="15.0" fill="rgb(213,195,40)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1855.5" _orig_x="217.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,343 samples, 0.35%)</title><rect x="284.4118050789292" y="1893" width="4.4742621825669175" height="15.0" fill="rgb(216,200,4)" rx="2" ry="2" _orig_x="321.2" _orig_width="4.1"/>
<text x="287.4118050789292" y="1903.5" _orig_x="324.17"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (165 samples, 0.02%)</title><rect x="372.0178448867535" y="1717" width="1.214824982841455" height="15.0" fill="rgb(223,43,30)" rx="2" ry="2" _orig_x="496.2" _orig_width="0.3"/>
<text x="375.0178448867535" y="1727.5" _orig_x="499.17"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (507 samples, 0.08%)</title><rect x="284.55044612216886" y="1861" width="3.644474948524365" height="15.0" fill="rgb(229,12,44)" rx="2" ry="2" _orig_x="474.6" _orig_width="0.9"/>
<text x="287.55044612216886" y="1871.5" _orig_x="477.64"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (82 samples, 0.01%)</title><rect x="345.69663692518867" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(205,96,52)" rx="2" ry="2" _orig_x="489.7" _orig_width="0.2"/>
<text x="348.69663692518867" y="1791.5" _orig_x="492.71"/>
</g>
<g class="hide">
<title>[unknown] (153 samples, 0.02%)</title><rect x="206.5" y="2053" width="0.3" height="15.0" fill="rgb(211,120,51)" rx="2" ry="2"/>
<text x="209.53" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="117" width="1.091283459162663" height="15.0" fill="rgb(216,126,24)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="127.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="329.1544269045984" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(218,40,34)" rx="2" ry="2" _orig_x="362.2" _orig_width="0.4"/>
<text x="332.1544269045984" y="2047.5" _orig_x="365.23"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="741" width="2.182566918325326" height="15.0" fill="rgb(252,112,29)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="751.5" _orig_x="117.41"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (309 samples, 0.05%)</title><rect x="492.2855181880575" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(231,27,24)" rx="2" ry="2" _orig_x="525.9" _orig_width="0.5"/>
<text x="495.2855181880575" y="1743.5" _orig_x="528.86"/>
</g>
<g>
<title>printf (613 samples, 0.09%)</title><rect x="1183.925875085793" y="2005" width="4.454358270418669" height="15.0" fill="rgb(247,223,40)" rx="2" ry="2" _orig_x="696.7" _orig_width="1.1"/>
<text x="1186.925875085793" y="2015.5" _orig_x="699.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (125 samples, 0.02%)</title><rect x="269.89773507206576" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(230,93,5)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1951.5" _orig_x="310.93"/>
</g>
<g class="hide">
<title>[code] (482 samples, 0.07%)</title><rect x="16.4" y="1989" width="0.8" height="15.0" fill="rgb(222,15,45)" rx="2" ry="2"/>
<text x="19.36" y="1999.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::base (71 samples, 0.01%)</title><rect x="570.8442004118049" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(214,124,23)" rx="2" ry="2" _orig_x="545.3" _orig_width="0.1"/>
<text x="573.8442004118049" y="1807.5" _orig_x="548.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,612 samples, 0.24%)</title><rect x="751.0446122168838" y="1717" width="3.0555936856554564" height="15.0" fill="rgb(215,137,14)" rx="2" ry="2" _orig_x="748.8" _orig_width="2.8"/>
<text x="754.0446122168838" y="1727.5" _orig_x="751.78"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1365" width="2.182566918325326" height="15.0" fill="rgb(226,180,8)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1375.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (331 samples, 0.05%)</title><rect x="539.2587508579272" y="1701" width="2.0247083047357584" height="15.0" fill="rgb(241,4,41)" rx="2" ry="2" _orig_x="537.5" _orig_width="0.5"/>
<text x="542.2587508579272" y="1711.5" _orig_x="540.45"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1269" width="2.182566918325326" height="15.0" fill="rgb(234,228,14)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1279.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.02%)</title><rect x="807.7913520933423" y="1621" width="0.3273850377487989" height="15.0" fill="rgb(233,192,39)" rx="2" ry="2" _orig_x="800.8" _orig_width="0.3"/>
<text x="810.7913520933423" y="1631.5" _orig_x="803.83"/>
</g>
<g>
<title>main (166,308 samples, 24.70%)</title><rect x="10" y="2037" width="1180" height="15.0" fill="rgb(236,66,29)" rx="2" ry="2" _orig_x="406.8" _orig_width="291.4"/>
<text x="13" y="2047.5" _orig_x="409.83">main </text>
</g>
<g class="hide">
<title>[perf-105834.map] (622 samples, 0.09%)</title><rect x="10.6" y="2037" width="1.1" height="15.0" fill="rgb(221,197,3)" rx="2" ry="2"/>
<text x="13.64" y="2047.5"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (288 samples, 0.04%)</title><rect x="527.9203843514072" y="1749" width="2.0247083047357584" height="15.0" fill="rgb(218,171,28)" rx="2" ry="2" _orig_x="534.7" _orig_width="0.5"/>
<text x="530.9203843514072" y="1759.5" _orig_x="537.68"/>
</g>
<g class="hide">
<title>_nv027733rm (98 samples, 0.01%)</title><rect x="350.6" y="2053" width="0.1" height="15.0" fill="rgb(207,191,16)" rx="2" ry="2"/>
<text x="353.55" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (248 samples, 0.04%)</title><rect x="500.78929306794777" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(208,78,34)" rx="2" ry="2" _orig_x="528.0" _orig_width="0.5"/>
<text x="503.78929306794777" y="1839.5" _orig_x="531.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,162 samples, 0.32%)</title><rect x="343.7776252573781" y="1957" width="4.146877144818119" height="15.0" fill="rgb(211,7,46)" rx="2" ry="2" _orig_x="375.6" _orig_width="3.8"/>
<text x="346.7776252573781" y="1967.5" _orig_x="378.65"/>
</g>
<g class="hide">
<title>[code] (310 samples, 0.05%)</title><rect x="16.6" y="1781" width="0.5" height="15.0" fill="rgb(209,227,11)" rx="2" ry="2"/>
<text x="19.60" y="1791.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (376 samples, 0.06%)</title><rect x="344.07687028140015" y="1845" width="2.8345916266300617" height="15.0" fill="rgb(229,133,25)" rx="2" ry="2" _orig_x="489.3" _orig_width="0.7"/>
<text x="347.07687028140015" y="1855.5" _orig_x="492.32"/>
</g>
<g class="hide">
<title>AWT-XAWT (156 samples, 0.02%)</title><rect x="13.6" y="2069" width="0.3" height="15.0" fill="rgb(223,57,37)" rx="2" ry="2"/>
<text x="16.61" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="307.7652711050102" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(225,15,40)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1983.5" _orig_x="345.59"/>
</g>
<g class="hide">
<title>g_source_ref (99 samples, 0.01%)</title><rect x="53.5" y="2037" width="0.2" height="15.0" fill="rgb(239,61,53)" rx="2" ry="2"/>
<text x="56.54" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (134 samples, 0.02%)</title><rect x="14.31914893617012" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(249,91,52)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1951.5" _orig_x="76.70"/>
</g>
<g class="hide">
<title>[unknown] (1,187 samples, 0.18%)</title><rect x="58.73438572409051" y="1941" width="2.182566918325326" height="15.0" fill="rgb(233,162,19)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1951.5" _orig_x="117.35"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (271 samples, 0.04%)</title><rect x="252.964996568291" y="1909" width="2.0247083047357584" height="15.0" fill="rgb(243,221,25)" rx="2" ry="2" _orig_x="466.8" _orig_width="0.5"/>
<text x="255.964996568291" y="1919.5" _orig_x="469.81"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (129 samples, 0.02%)</title><rect x="12.2" y="2005" width="0.3" height="15.0" fill="rgb(212,172,14)" rx="2" ry="2"/>
<text x="15.23" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (822 samples, 0.12%)</title><rect x="63.536032944406216" y="1893" width="1.6369251887439944" height="15.0" fill="rgb(249,46,8)" rx="2" ry="2" _orig_x="118.8" _orig_width="1.5"/>
<text x="66.53603294440622" y="1903.5" _orig_x="121.82"/>
</g>
<g>
<title>MemHeap::MemHeap (70 samples, 0.01%)</title><rect x="1000.8922443376802" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(251,190,21)" rx="2" ry="2" _orig_x="651.5" _orig_width="0.1"/>
<text x="1003.8922443376802" y="1887.5" _orig_x="654.47"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (81 samples, 0.01%)</title><rect x="289.0048043925874" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(222,202,50)" rx="2" ry="2" _orig_x="475.7" _orig_width="0.2"/>
<text x="292.0048043925874" y="1823.5" _orig_x="478.72"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (499 samples, 0.07%)</title><rect x="1118.325326012354" y="1941" width="3.644474948524365" height="15.0" fill="rgb(236,216,24)" rx="2" ry="2" _orig_x="680.5" _orig_width="0.9"/>
<text x="1121.325326012354" y="1951.5" _orig_x="683.52"/>
</g>
<g class="hide">
<title>[unknown] (616 samples, 0.09%)</title><rect x="260.1853122855181" y="1381" width="1.091283459162663" height="15.0" fill="rgb(208,104,10)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1391.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (97 samples, 0.01%)</title><rect x="677.7487989018533" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(237,4,13)" rx="2" ry="2" _orig_x="571.7" _orig_width="0.2"/>
<text x="680.7487989018533" y="1791.5" _orig_x="574.69"/>
</g>
<g class="hide">
<title>__xstat64 (416 samples, 0.06%)</title><rect x="11.263555250514667" y="2021" width="0.7638984214138641" height="15.0" fill="rgb(251,7,9)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="2031.5" _orig_x="73.87"/>
</g>
<g class="hide">
<title>InotifyBackend::handleSubscription (3,095 samples, 0.46%)</title><rect x="99.33013040494156" y="1973" width="6.002059025394646" height="15.0" fill="rgb(227,96,10)" rx="2" ry="2" _orig_x="151.6" _orig_width="5.5"/>
<text x="102.33013040494156" y="1983.5" _orig_x="154.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="58.3" y="1941" width="0.1" height="15.0" fill="rgb(240,149,22)" rx="2" ry="2"/>
<text x="61.33" y="1951.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (219 samples, 0.03%)</title><rect x="20.93342484557304" y="1685" width="1.619766643788607" height="15.0" fill="rgb(205,81,39)" rx="2" ry="2" _orig_x="409.5" _orig_width="0.4"/>
<text x="23.93342484557304" y="1695.5" _orig_x="412.47"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (58 samples, 0.01%)</title><rect x="285.3603294440631" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(244,124,3)" rx="2" ry="2" _orig_x="474.8" _orig_width="0.1"/>
<text x="288.3603294440631" y="1807.5" _orig_x="477.84"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (680 samples, 0.10%)</title><rect x="267.5428963623883" y="1829" width="4.85929993136582" height="15.0" fill="rgb(237,123,33)" rx="2" ry="2" _orig_x="470.4" _orig_width="1.2"/>
<text x="270.5428963623883" y="1839.5" _orig_x="473.43"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (3,281 samples, 0.49%)</title><rect x="784.6533973919012" y="1829" width="23.08167467398765" height="15.0" fill="rgb(220,15,39)" rx="2" ry="2" _orig_x="598.1" _orig_width="5.7"/>
<text x="787.6533973919012" y="1839.5" _orig_x="601.05">s..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (76 samples, 0.01%)</title><rect x="691.5168153740564" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(234,48,14)" rx="2" ry="2" _orig_x="575.1" _orig_width="0.2"/>
<text x="694.5168153740564" y="1887.5" _orig_x="578.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="223.40905971173635" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(234,121,1)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="1935.5" _orig_x="268.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.02%)</title><rect x="174.3013040494165" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(251,102,0)" rx="2" ry="2" _orig_x="220.3" _orig_width="0.3"/>
<text x="177.3013040494165" y="1919.5" _orig_x="223.35"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="693" width="1.091283459162663" height="15.0" fill="rgb(233,125,15)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="703.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,121 samples, 0.46%)</title><rect x="90.92724776938907" y="2037" width="6.002059025394646" height="15.0" fill="rgb(235,50,33)" rx="2" ry="2" _orig_x="143.9" _orig_width="5.5"/>
<text x="93.92724776938907" y="2047.5" _orig_x="146.94"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (168 samples, 0.02%)</title><rect x="97.87234042553186" y="1829" width="1.214824982841455" height="15.0" fill="rgb(234,45,35)" rx="2" ry="2" _orig_x="428.5" _orig_width="0.3"/>
<text x="100.87234042553186" y="1839.5" _orig_x="431.54"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (87 samples, 0.01%)</title><rect x="306.0123541523677" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(237,63,10)" rx="2" ry="2" _orig_x="479.9" _orig_width="0.2"/>
<text x="309.0123541523677" y="1903.5" _orig_x="482.90"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (79 samples, 0.01%)</title><rect x="165.49759780370619" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(227,169,28)" rx="2" ry="2" _orig_x="445.2" _orig_width="0.1"/>
<text x="168.49759780370619" y="1759.5" _orig_x="448.18"/>
</g>
<g class="hide">
<title>g_source_ref (745 samples, 0.11%)</title><rect x="25.7" y="2021" width="1.3" height="15.0" fill="rgb(219,23,53)" rx="2" ry="2"/>
<text x="28.72" y="2031.5"/>
</g>
<g class="hide">
<title>SimBridge::WdbCircularBuffer::canRead (91 samples, 0.01%)</title><rect x="1182.2" y="2021" width="0.1" height="15.0" fill="rgb(233,58,12)" rx="2" ry="2"/>
<text x="1185.16" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,003 samples, 0.45%)</title><rect x="137.30679478380225" y="1925" width="5.783802333562114" height="15.0" fill="rgb(225,93,8)" rx="2" ry="2" _orig_x="186.4" _orig_width="5.3"/>
<text x="140.30679478380225" y="1935.5" _orig_x="189.39"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (250 samples, 0.04%)</title><rect x="808.882635552505" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(221,179,18)" rx="2" ry="2" _orig_x="801.8" _orig_width="0.5"/>
<text x="811.882635552505" y="1967.5" _orig_x="804.82"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (58 samples, 0.01%)</title><rect x="199.50995195607405" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(225,223,15)" rx="2" ry="2" _orig_x="243.4" _orig_width="0.1"/>
<text x="202.50995195607405" y="1999.5" _orig_x="246.36"/>
</g>
<g class="hide">
<title>[code] (68 samples, 0.01%)</title><rect x="69.97460535346593" y="1717" width="0.1091283459162663" height="15.0" fill="rgb(245,218,9)" rx="2" ry="2" _orig_x="124.7" _orig_width="0.1"/>
<text x="72.97460535346593" y="1727.5" _orig_x="127.70"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (145 samples, 0.02%)</title><rect x="181.1763898421413" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(222,229,48)" rx="2" ry="2" _orig_x="226.6" _orig_width="0.3"/>
<text x="184.1763898421413" y="1887.5" _orig_x="229.61"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (132 samples, 0.02%)</title><rect x="466.36925188743993" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(241,110,40)" rx="2" ry="2" _orig_x="519.5" _orig_width="0.2"/>
<text x="469.36925188743993" y="1807.5" _orig_x="522.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (284 samples, 0.04%)</title><rect x="174.08304735758398" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(230,78,49)" rx="2" ry="2" _orig_x="220.1" _orig_width="0.5"/>
<text x="177.08304735758398" y="2031.5" _orig_x="223.12"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (408 samples, 0.06%)</title><rect x="133.91214824982825" y="1781" width="2.8345916266300617" height="15.0" fill="rgb(241,35,23)" rx="2" ry="2" _orig_x="437.4" _orig_width="0.7"/>
<text x="136.91214824982825" y="1791.5" _orig_x="440.39"/>
</g>
<g class="hide">
<title>[github-desktop] (267 samples, 0.04%)</title><rect x="178.22992450240213" y="1893" width="0.5456417295813315" height="15.0" fill="rgb(242,225,22)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1903.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>[perf-123031.map] (76 samples, 0.01%)</title><rect x="86.45298558682215" y="1205" width="0.1091283459162663" height="15.0" fill="rgb(254,204,6)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1215.5" _orig_x="142.78"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (475 samples, 0.07%)</title><rect x="774.5298558682224" y="1765" width="3.239533287577214" height="15.0" fill="rgb(237,179,51)" rx="2" ry="2" _orig_x="595.6" _orig_width="0.8"/>
<text x="777.5298558682224" y="1775.5" _orig_x="598.57"/>
</g>
<g class="hide">
<title>[perf-105834.map] (2,779 samples, 0.41%)</title><rect x="58.5" y="2053" width="4.9" height="15.0" fill="rgb(223,168,11)" rx="2" ry="2"/>
<text x="61.53" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (838 samples, 0.12%)</title><rect x="158.20864790665738" y="1781" width="5.669183253260123" height="15.0" fill="rgb(231,66,4)" rx="2" ry="2" _orig_x="443.4" _orig_width="1.4"/>
<text x="161.20864790665738" y="1791.5" _orig_x="446.35"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (130 samples, 0.02%)</title><rect x="1115.895676046671" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(240,154,17)" rx="2" ry="2" _orig_x="679.9" _orig_width="0.2"/>
<text x="1118.895676046671" y="1903.5" _orig_x="682.88"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (150 samples, 0.02%)</title><rect x="399.9588194921071" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(235,141,24)" rx="2" ry="2" _orig_x="503.1" _orig_width="0.2"/>
<text x="402.9588194921071" y="1743.5" _orig_x="506.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.02%)</title><rect x="89.07206588881252" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(240,23,34)" rx="2" ry="2" _orig_x="142.2" _orig_width="0.3"/>
<text x="92.07206588881252" y="1951.5" _orig_x="145.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (135 samples, 0.02%)</title><rect x="537.2340425531914" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(254,47,40)" rx="2" ry="2" _orig_x="537.0" _orig_width="0.2"/>
<text x="540.2340425531914" y="1743.5" _orig_x="539.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="328.172271791352" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(234,8,53)" rx="2" ry="2" _orig_x="361.3" _orig_width="0.1"/>
<text x="331.172271791352" y="2015.5" _orig_x="364.28"/>
</g>
<g class="hide">
<title>__xstat64 (175 samples, 0.03%)</title><rect x="57.2" y="2037" width="0.3" height="15.0" fill="rgb(219,7,30)" rx="2" ry="2"/>
<text x="60.18" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (61 samples, 0.01%)</title><rect x="537.6389842141386" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(205,55,2)" rx="2" ry="2" _orig_x="537.1" _orig_width="0.1"/>
<text x="540.6389842141386" y="1711.5" _orig_x="540.10"/>
</g>
<g class="hide">
<title>g_main_context_check (2,050 samples, 0.30%)</title><rect x="48.9" y="2037" width="3.6" height="15.0" fill="rgb(233,6,15)" rx="2" ry="2"/>
<text x="51.93" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="174.3013040494165" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(241,69,19)" rx="2" ry="2" _orig_x="220.3" _orig_width="0.3"/>
<text x="177.3013040494165" y="1935.5" _orig_x="223.26"/>
</g>
<g class="hide">
<title>irq/95-iwlwifi: (96 samples, 0.01%)</title><rect x="361.4" y="2069" width="0.2" height="15.0" fill="rgb(234,166,0)" rx="2" ry="2"/>
<text x="364.40" y="2079.5"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (67 samples, 0.01%)</title><rect x="286.9800960878516" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" _orig_x="475.2" _orig_width="0.1"/>
<text x="289.9800960878516" y="1791.5" _orig_x="478.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (967 samples, 0.14%)</title><rect x="297.83459162662996" y="1941" width="1.7460535346602608" height="15.0" fill="rgb(215,58,45)" rx="2" ry="2" _orig_x="333.5" _orig_width="1.6"/>
<text x="300.83459162662996" y="1951.5" _orig_x="336.45"/>
</g>
<g>
<title>Field::CompareGreaterThan (80 samples, 0.01%)</title><rect x="742.9444063143443" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(223,129,1)" rx="2" ry="2" _orig_x="587.8" _orig_width="0.1"/>
<text x="745.9444063143443" y="1919.5" _orig_x="590.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="1188.7" y="1973" width="0.2" height="15.0" fill="rgb(253,39,53)" rx="2" ry="2"/>
<text x="1191.74" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (143 samples, 0.02%)</title><rect x="14.31914893617012" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(249,229,46)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="1967.5" _orig_x="76.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,371 samples, 0.35%)</title><rect x="92.4550446122168" y="1957" width="4.4742621825669175" height="15.0" fill="rgb(244,41,30)" rx="2" ry="2" _orig_x="145.3" _orig_width="4.1"/>
<text x="95.4550446122168" y="1967.5" _orig_x="148.25"/>
</g>
<g class="hide">
<title>ntfs_mapping_pairs_build (62 samples, 0.01%)</title><rect x="797.3" y="2053" width="0.1" height="15.0" fill="rgb(252,181,49)" rx="2" ry="2"/>
<text x="800.31" y="2063.5"/>
</g>
<g>
<title>Field::IsNull (61 samples, 0.01%)</title><rect x="744.1592312971861" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(225,30,7)" rx="2" ry="2" _orig_x="588.1" _orig_width="0.1"/>
<text x="747.1592312971861" y="1903.5" _orig_x="591.11"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (666 samples, 0.10%)</title><rect x="517.391901166781" y="1829" width="4.85929993136582" height="15.0" fill="rgb(220,26,39)" rx="2" ry="2" _orig_x="532.1" _orig_width="1.2"/>
<text x="520.391901166781" y="1839.5" _orig_x="535.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (120 samples, 0.02%)</title><rect x="84.59780370624561" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(249,74,0)" rx="2" ry="2" _orig_x="138.1" _orig_width="0.2"/>
<text x="87.59780370624561" y="1887.5" _orig_x="141.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (166,173 samples, 24.68%)</title><rect x="850.7879203843513" y="1957" width="317.78174330816745" height="15.0" fill="rgb(247,43,35)" rx="2" ry="2" _orig_x="840.2" _orig_width="291.2"/>
<text x="853.7879203843513" y="1967.5" _orig_x="843.20">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (837 samples, 0.12%)</title><rect x="210.8592999313657" y="1957" width="1.6369251887439944" height="15.0" fill="rgb(227,7,15)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="1967.5" _orig_x="256.82"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1589" width="0.1091283459162663" height="15.0" fill="rgb(228,203,41)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1599.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>g_io_channel_get_buffer_condition (203 samples, 0.03%)</title><rect x="48.6" y="2037" width="0.3" height="15.0" fill="rgb(207,76,17)" rx="2" ry="2"/>
<text x="51.57" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (104 samples, 0.02%)</title><rect x="644.9485243651338" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(217,14,8)" rx="2" ry="2" _orig_x="563.6" _orig_width="0.2"/>
<text x="647.9485243651338" y="1839.5" _orig_x="566.61"/>
</g>
<g class="hide">
<title>[unknown] (625 samples, 0.09%)</title><rect x="260.1853122855181" y="1909" width="1.2004118050789294" height="15.0" fill="rgb(215,178,9)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1919.5" _orig_x="301.96"/>
</g>
<g>
<title>TableHeap::cmp::operator (240 samples, 0.04%)</title><rect x="1143.8366506520244" y="1845" width="1.619766643788607" height="15.0" fill="rgb(207,81,35)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.4"/>
<text x="1146.8366506520244" y="1855.5" _orig_x="689.79"/>
</g>
<g class="hide">
<title>[code] (152 samples, 0.02%)</title><rect x="86.01647220315708" y="1253" width="0.3273850377487989" height="15.0" fill="rgb(244,209,39)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1263.5" _orig_x="142.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (492 samples, 0.07%)</title><rect x="1184.5" y="1861" width="0.9" height="15.0" fill="rgb(248,77,35)" rx="2" ry="2"/>
<text x="1187.52" y="1871.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (93 samples, 0.01%)</title><rect x="237.5772134522992" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(227,224,51)" rx="2" ry="2" _orig_x="463.0" _orig_width="0.2"/>
<text x="240.5772134522992" y="1759.5" _orig_x="466.02"/>
</g>
<g class="hide">
<title>Nan::imp::FunctionCallbackWrapper (182 samples, 0.03%)</title><rect x="88.52642415923118" y="1813" width="0.3273850377487989" height="15.0" fill="rgb(253,15,12)" rx="2" ry="2" _orig_x="141.7" _orig_width="0.3"/>
<text x="91.52642415923118" y="1823.5" _orig_x="144.67"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (84 samples, 0.01%)</title><rect x="506.8634179821551" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(253,34,9)" rx="2" ry="2" _orig_x="529.5" _orig_width="0.2"/>
<text x="509.8634179821551" y="1871.5" _orig_x="532.50"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (68 samples, 0.01%)</title><rect x="729.1763898421412" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(237,99,53)" rx="2" ry="2" _orig_x="584.4" _orig_width="0.1"/>
<text x="732.1763898421412" y="1903.5" _orig_x="587.38"/>
</g>
<g class="hide">
<title>InputThread (121 samples, 0.02%)</title><rect x="22.0" y="2069" width="0.2" height="15.0" fill="rgb(216,176,16)" rx="2" ry="2"/>
<text x="24.96" y="2079.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1317" width="0.1091283459162663" height="15.0" fill="rgb(212,77,17)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1327.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (363 samples, 0.05%)</title><rect x="337.99382292381597" y="1957" width="0.7638984214138641" height="15.0" fill="rgb(245,86,5)" rx="2" ry="2" _orig_x="370.3" _orig_width="0.7"/>
<text x="340.99382292381597" y="1967.5" _orig_x="373.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (603 samples, 0.09%)</title><rect x="61.24433768016463" y="1989" width="1.2004118050789294" height="15.0" fill="rgb(247,57,24)" rx="2" ry="2" _orig_x="116.7" _orig_width="1.1"/>
<text x="64.24433768016462" y="1999.5" _orig_x="119.75"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (941 samples, 0.14%)</title><rect x="157.80370624571037" y="1829" width="6.479066575154428" height="15.0" fill="rgb(244,133,51)" rx="2" ry="2" _orig_x="443.3" _orig_width="1.6"/>
<text x="160.80370624571037" y="1839.5" _orig_x="446.26"/>
</g>
<g>
<title>yy_scan_bytes (71 samples, 0.01%)</title><rect x="1176.6369251887438" y="1973" width="0.4049416609471517" height="15.0" fill="rgb(227,26,14)" rx="2" ry="2" _orig_x="694.9" _orig_width="0.1"/>
<text x="1179.6369251887438" y="1983.5" _orig_x="697.90"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (102 samples, 0.02%)</title><rect x="996.0329444063142" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(229,31,10)" rx="2" ry="2" _orig_x="650.3" _orig_width="0.2"/>
<text x="999.0329444063142" y="1903.5" _orig_x="653.32"/>
</g>
<g class="hide">
<title>[code] (67 samples, 0.01%)</title><rect x="14.42827728208638" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(238,92,52)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1823.5" _orig_x="76.80"/>
</g>
<g class="hide">
<title>start_thread (141 samples, 0.02%)</title><rect x="73.0" y="2053" width="0.3" height="15.0" fill="rgb(224,193,26)" rx="2" ry="2"/>
<text x="76.03" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (139 samples, 0.02%)</title><rect x="1186.2" y="2053" width="0.3" height="15.0" fill="rgb(225,117,42)" rx="2" ry="2"/>
<text x="1189.24" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,920 samples, 0.29%)</title><rect x="1172.6" y="1701" width="3.3" height="15.0" fill="rgb(208,209,19)" rx="2" ry="2"/>
<text x="1175.58" y="1711.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (71 samples, 0.01%)</title><rect x="308.31091283459153" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(216,50,27)" rx="2" ry="2" _orig_x="343.1" _orig_width="0.1"/>
<text x="311.31091283459153" y="2047.5" _orig_x="346.07"/>
</g>
<g class="hide">
<title>[code] (78 samples, 0.01%)</title><rect x="14.3" y="1749" width="0.1" height="15.0" fill="rgb(230,78,17)" rx="2" ry="2"/>
<text x="17.28" y="1759.5"/>
</g>
<g class="hide">
<title>ksoftirqd/0 (119 samples, 0.02%)</title><rect x="361.8" y="2069" width="0.2" height="15.0" fill="rgb(234,99,2)" rx="2" ry="2"/>
<text x="364.83" y="2079.5"/>
</g>
<g class="hide">
<title>malloc_consolidate (59 samples, 0.01%)</title><rect x="340.0" y="2053" width="0.1" height="15.0" fill="rgb(206,42,1)" rx="2" ry="2"/>
<text x="343.00" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (66 samples, 0.01%)</title><rect x="1144.6465339739188" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(240,133,42)" rx="2" ry="2" _orig_x="687.0" _orig_width="0.1"/>
<text x="1147.6465339739188" y="1807.5" _orig_x="689.97"/>
</g>
<g class="hide">
<title>[code] (181 samples, 0.03%)</title><rect x="86.01647220315708" y="1381" width="0.3273850377487989" height="15.0" fill="rgb(246,39,13)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1391.5" _orig_x="142.37"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (74 samples, 0.01%)</title><rect x="293.0542210020589" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(228,102,26)" rx="2" ry="2" _orig_x="476.7" _orig_width="0.1"/>
<text x="296.0542210020589" y="1887.5" _orig_x="479.69"/>
</g>
<g>
<title>ExecuteEngine::Execute (163,954 samples, 24.35%)</title><rect x="10.80988332189426" y="1989" width="1163.3973919011667" height="15.0" fill="rgb(244,21,2)" rx="2" ry="2" _orig_x="407.0" _orig_width="287.3"/>
<text x="13.80988332189426" y="1999.5" _orig_x="410.05">ExecuteEngine::Execute </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,337 samples, 0.20%)</title><rect x="297.0706932052161" y="2005" width="2.509951956074125" height="15.0" fill="rgb(231,142,27)" rx="2" ry="2" _orig_x="332.8" _orig_width="2.3"/>
<text x="300.0706932052161" y="2015.5" _orig_x="335.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (341 samples, 0.05%)</title><rect x="340.1763898421413" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(244,64,40)" rx="2" ry="2" _orig_x="372.3" _orig_width="0.6"/>
<text x="343.1763898421413" y="1967.5" _orig_x="375.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,331 samples, 0.20%)</title><rect x="1156.2327044025158" y="2037" width="8.534591194968552" height="15.0" fill="rgb(252,172,25)" rx="2" ry="2" _orig_x="699.6" _orig_width="2.3"/>
<text x="1159.2327044025158" y="2047.5" _orig_x="702.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="328.8270418668496" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(224,226,33)" rx="2" ry="2" _orig_x="361.9" _orig_width="0.1"/>
<text x="331.8270418668496" y="1999.5" _orig_x="364.87"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::end (185 samples, 0.03%)</title><rect x="940.9608785175019" y="1845" width="1.619766643788607" height="15.0" fill="rgb(234,185,3)" rx="2" ry="2" _orig_x="636.7" _orig_width="0.4"/>
<text x="943.9608785175019" y="1855.5" _orig_x="639.74"/>
</g>
<g class="hide">
<title>EventList::update (357 samples, 0.05%)</title><rect x="101.29444063143437" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(207,52,34)" rx="2" ry="2" _orig_x="153.4" _orig_width="0.6"/>
<text x="104.29444063143437" y="1967.5" _orig_x="156.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (252 samples, 0.04%)</title><rect x="333.4104323953328" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(242,142,50)" rx="2" ry="2" _orig_x="366.1" _orig_width="0.5"/>
<text x="336.4104323953328" y="1967.5" _orig_x="369.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.03%)</title><rect x="359.8194921070692" y="1765" width="0.4365133836650652" height="15.0" fill="rgb(241,183,41)" rx="2" ry="2" _orig_x="390.3" _orig_width="0.4"/>
<text x="362.8194921070692" y="1775.5" _orig_x="393.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,773 samples, 0.56%)</title><rect x="45.25157232704402" y="1989" width="24.49056603773585" height="15.0" fill="rgb(216,65,7)" rx="2" ry="2" _orig_x="400.2" _orig_width="6.6"/>
<text x="48.25157232704402" y="1999.5" _orig_x="403.21">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,938 samples, 0.88%)</title><rect x="742.7508579272477" y="1861" width="11.349347975291696" height="15.0" fill="rgb(250,27,40)" rx="2" ry="2" _orig_x="741.2" _orig_width="10.4"/>
<text x="745.7508579272477" y="1871.5" _orig_x="744.20"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (65 samples, 0.01%)</title><rect x="207.61153054221006" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(209,50,34)" rx="2" ry="2" _orig_x="455.6" _orig_width="0.1"/>
<text x="210.61153054221006" y="1759.5" _orig_x="458.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,444 samples, 0.21%)</title><rect x="350.6527110501028" y="1925" width="2.7282086479066576" height="15.0" fill="rgb(246,218,5)" rx="2" ry="2" _orig_x="381.9" _orig_width="2.5"/>
<text x="353.6527110501028" y="1935.5" _orig_x="384.87"/>
</g>
<g class="hide">
<title>[unknown] (2,804 samples, 0.42%)</title><rect x="212.9" y="2053" width="4.9" height="15.0" fill="rgb(230,143,29)" rx="2" ry="2"/>
<text x="215.90" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (874 samples, 0.13%)</title><rect x="70.74124914207275" y="1749" width="6.0741249142072755" height="15.0" fill="rgb(222,47,47)" rx="2" ry="2" _orig_x="421.8" _orig_width="1.5"/>
<text x="73.74124914207275" y="1759.5" _orig_x="424.77"/>
</g>
<g>
<title>Row::SerializeTo (223 samples, 0.03%)</title><rect x="710.1441317776254" y="1925" width="1.214824982841455" height="15.0" fill="rgb(230,148,21)" rx="2" ry="2" _orig_x="579.7" _orig_width="0.3"/>
<text x="713.1441317776254" y="1935.5" _orig_x="582.65"/>
</g>
<g class="hide">
<title>[unknown] (78 samples, 0.01%)</title><rect x="1189.3" y="2037" width="0.1" height="15.0" fill="rgb(245,195,53)" rx="2" ry="2"/>
<text x="1192.27" y="2047.5"/>
</g>
<g>
<title>[[kernel.kallsyms]] (514 samples, 0.08%)</title><rect x="54.94852436513369" y="1765" width="3.644474948524365" height="15.0" fill="rgb(212,63,12)" rx="2" ry="2" _orig_x="417.9" _orig_width="0.9"/>
<text x="57.94852436513369" y="1775.5" _orig_x="420.88"/>
</g>
<g class="hide">
<title>[code] (521 samples, 0.08%)</title><rect x="15.2" y="1925" width="0.9" height="15.0" fill="rgb(217,218,30)" rx="2" ry="2"/>
<text x="18.21" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.02%)</title><rect x="335.37474262182553" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(225,58,50)" rx="2" ry="2" _orig_x="367.9" _orig_width="0.3"/>
<text x="338.37474262182553" y="1951.5" _orig_x="370.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (89 samples, 0.01%)</title><rect x="178.01166781056955" y="1813" width="0.2182566918325326" height="15.0" fill="rgb(211,89,27)" rx="2" ry="2" _orig_x="223.7" _orig_width="0.2"/>
<text x="181.01166781056955" y="1823.5" _orig_x="226.74"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (230 samples, 0.03%)</title><rect x="1017.4948524365134" y="1845" width="1.619766643788607" height="15.0" fill="rgb(205,95,30)" rx="2" ry="2" _orig_x="655.6" _orig_width="0.4"/>
<text x="1020.4948524365134" y="1855.5" _orig_x="658.62"/>
</g>
<g class="hide">
<title>[libgdk_pixbuf-2.0.so.0.4000.0] (403 samples, 0.06%)</title><rect x="1186.9" y="2053" width="0.7" height="15.0" fill="rgb(250,106,34)" rx="2" ry="2"/>
<text x="1189.91" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (256 samples, 0.04%)</title><rect x="299.14413177762515" y="1893" width="0.4365133836650652" height="15.0" fill="rgb(251,39,17)" rx="2" ry="2" _orig_x="334.7" _orig_width="0.4"/>
<text x="302.14413177762515" y="1903.5" _orig_x="337.70"/>
</g>
<g>
<title>__gnu_cxx::operator==&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (91 samples, 0.01%)</title><rect x="869.691146190803" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(231,157,13)" rx="2" ry="2" _orig_x="619.1" _orig_width="0.2"/>
<text x="872.691146190803" y="1887.5" _orig_x="622.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,394 samples, 0.50%)</title><rect x="136.54289636238838" y="1989" width="6.547700754975978" height="15.0" fill="rgb(238,41,26)" rx="2" ry="2" _orig_x="185.7" _orig_width="6.0"/>
<text x="139.54289636238838" y="1999.5" _orig_x="188.71"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="677" width="1.091283459162663" height="15.0" fill="rgb(229,227,6)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="687.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (90 samples, 0.01%)</title><rect x="906.9457789979407" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(250,122,37)" rx="2" ry="2" _orig_x="628.3" _orig_width="0.2"/>
<text x="909.9457789979407" y="1839.5" _orig_x="631.32"/>
</g>
<g class="hide">
<title>[perf-123031.map] (61 samples, 0.01%)</title><rect x="86.99862731640349" y="1429" width="0.1091283459162663" height="15.0" fill="rgb(218,127,45)" rx="2" ry="2" _orig_x="140.3" _orig_width="0.1"/>
<text x="89.99862731640349" y="1439.5" _orig_x="143.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.03%)</title><rect x="329.2635552505147" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(216,195,8)" rx="2" ry="2" _orig_x="362.3" _orig_width="0.3"/>
<text x="332.2635552505147" y="1967.5" _orig_x="365.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (154 samples, 0.02%)</title><rect x="12.57309540150985" y="1829" width="0.3273850377487989" height="15.0" fill="rgb(237,36,45)" rx="2" ry="2" _orig_x="72.1" _orig_width="0.3"/>
<text x="15.57309540150985" y="1839.5" _orig_x="75.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="328.8270418668496" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(206,156,30)" rx="2" ry="2" _orig_x="361.9" _orig_width="0.1"/>
<text x="331.8270418668496" y="1967.5" _orig_x="364.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (137 samples, 0.02%)</title><rect x="1186.6" y="2021" width="0.3" height="15.0" fill="rgb(208,102,8)" rx="2" ry="2"/>
<text x="1189.62" y="2031.5"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (364 samples, 0.05%)</title><rect x="705.2848318462594" y="1925" width="2.42964996568291" height="15.0" fill="rgb(250,176,50)" rx="2" ry="2" _orig_x="578.5" _orig_width="0.6"/>
<text x="708.2848318462594" y="1935.5" _orig_x="581.49"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (252 samples, 0.04%)</title><rect x="296.6986959505834" y="1813" width="1.619766643788607" height="15.0" fill="rgb(214,88,11)" rx="2" ry="2" _orig_x="477.6" _orig_width="0.4"/>
<text x="299.6986959505834" y="1823.5" _orig_x="480.57"/>
</g>
<g>
<title>Row::~Row (584 samples, 0.09%)</title><rect x="1118.325326012354" y="1957" width="4.049416609471517" height="15.0" fill="rgb(252,209,51)" rx="2" ry="2" _orig_x="680.5" _orig_width="1.0"/>
<text x="1121.325326012354" y="1967.5" _orig_x="683.50"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (403 samples, 0.06%)</title><rect x="459.4852436513381" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(246,184,53)" rx="2" ry="2" _orig_x="517.8" _orig_width="0.7"/>
<text x="462.4852436513381" y="1823.5" _orig_x="520.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="221.0082361015785" y="1813" width="0.2182566918325326" height="15.0" fill="rgb(236,130,7)" rx="2" ry="2" _orig_x="263.1" _orig_width="0.2"/>
<text x="224.0082361015785" y="1823.5" _orig_x="266.06"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (103 samples, 0.02%)</title><rect x="286.9800960878516" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(226,59,53)" rx="2" ry="2" _orig_x="475.2" _orig_width="0.1"/>
<text x="289.9800960878516" y="1807.5" _orig_x="478.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (117 samples, 0.02%)</title><rect x="809.1008922443376" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(209,11,27)" rx="2" ry="2" _orig_x="802.0" _orig_width="0.3"/>
<text x="812.1008922443376" y="1903.5" _orig_x="805.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="339.52161976664365" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(242,62,14)" rx="2" ry="2" _orig_x="371.7" _orig_width="0.1"/>
<text x="342.52161976664365" y="1903.5" _orig_x="374.71"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="309" width="1.091283459162663" height="15.0" fill="rgb(227,17,4)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="319.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (141 samples, 0.02%)</title><rect x="1025.5936856554563" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(216,103,38)" rx="2" ry="2" _orig_x="657.6" _orig_width="0.2"/>
<text x="1028.5936856554563" y="1855.5" _orig_x="660.56"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (718 samples, 0.11%)</title><rect x="961.2079615648594" y="1813" width="5.264241592312972" height="15.0" fill="rgb(228,2,30)" rx="2" ry="2" _orig_x="641.7" _orig_width="1.3"/>
<text x="964.2079615648594" y="1823.5" _orig_x="644.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (197 samples, 0.03%)</title><rect x="810.5195607412489" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(238,98,30)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="2015.5" _orig_x="806.31"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock_usercnt (69 samples, 0.01%)</title><rect x="68.99245024021954" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(249,94,20)" rx="2" ry="2" _orig_x="123.8" _orig_width="0.1"/>
<text x="71.99245024021954" y="2047.5" _orig_x="126.79"/>
</g>
<g class="hide">
<title>Compositor (747 samples, 0.11%)</title><rect x="15.0" y="2069" width="1.3" height="15.0" fill="rgb(250,149,6)" rx="2" ry="2"/>
<text x="17.98" y="2079.5"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (1,373 samples, 0.20%)</title><rect x="1130.4735758407687" y="1845" width="9.71859986273164" height="15.0" fill="rgb(214,131,52)" rx="2" ry="2" _orig_x="683.5" _orig_width="2.4"/>
<text x="1133.4735758407687" y="1855.5" _orig_x="686.49"/>
</g>
<g>
<title>std::vector&lt;IndexInfo*, std::allocator&lt;IndexInfo*&gt; &gt;::push_back (224 samples, 0.03%)</title><rect x="1099.698009608785" y="1941" width="1.619766643788607" height="15.0" fill="rgb(220,1,42)" rx="2" ry="2" _orig_x="675.9" _orig_width="0.4"/>
<text x="1102.698009608785" y="1951.5" _orig_x="678.93"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="709" width="1.091283459162663" height="15.0" fill="rgb(240,213,32)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="719.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>start_thread (116 samples, 0.02%)</title><rect x="13.7" y="2053" width="0.2" height="15.0" fill="rgb(230,27,48)" rx="2" ry="2"/>
<text x="16.68" y="2063.5"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (151 samples, 0.02%)</title><rect x="796.6" y="2053" width="0.3" height="15.0" fill="rgb(220,56,51)" rx="2" ry="2"/>
<text x="799.61" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (88 samples, 0.01%)</title><rect x="838.105696636925" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(235,165,27)" rx="2" ry="2" _orig_x="611.3" _orig_width="0.2"/>
<text x="841.105696636925" y="1759.5" _orig_x="614.33"/>
</g>
<g>
<title>malloc (116 samples, 0.02%)</title><rect x="1081.8805765271104" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(226,67,28)" rx="2" ry="2" _orig_x="671.5" _orig_width="0.2"/>
<text x="1084.8805765271104" y="1919.5" _orig_x="674.45"/>
</g>
<g class="hide">
<title>[code] (155 samples, 0.02%)</title><rect x="14.2" y="1845" width="0.3" height="15.0" fill="rgb(237,229,27)" rx="2" ry="2"/>
<text x="17.19" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (937 samples, 0.14%)</title><rect x="346.17844886753596" y="1861" width="1.7460535346602608" height="15.0" fill="rgb(235,90,10)" rx="2" ry="2" _orig_x="377.8" _orig_width="1.6"/>
<text x="349.17844886753596" y="1871.5" _orig_x="380.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,767 samples, 0.41%)</title><rect x="348.14275909402875" y="2037" width="5.238160603980782" height="15.0" fill="rgb(240,108,14)" rx="2" ry="2" _orig_x="379.6" _orig_width="4.8"/>
<text x="351.14275909402875" y="2047.5" _orig_x="382.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183,417 samples, 27.24%)</title><rect x="817.8311599176388" y="2037" width="350.73850377487986" height="15.0" fill="rgb(215,56,20)" rx="2" ry="2" _orig_x="810.0" _orig_width="321.4"/>
<text x="820.8311599176388" y="2047.5" _orig_x="812.99">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__rehash (88 samples, 0.01%)</title><rect x="132.1777625257377" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(209,180,0)" rx="2" ry="2" _orig_x="181.7" _orig_width="0.1"/>
<text x="135.1777625257377" y="1983.5" _orig_x="184.66"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (144 samples, 0.02%)</title><rect x="1123.18462594372" y="1941" width="1.214824982841455" height="15.0" fill="rgb(205,163,9)" rx="2" ry="2" _orig_x="681.7" _orig_width="0.3"/>
<text x="1126.18462594372" y="1951.5" _orig_x="684.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="307.7652711050102" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(217,143,52)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1999.5" _orig_x="345.58"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (154 samples, 0.02%)</title><rect x="229.0734385724089" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(230,17,17)" rx="2" ry="2" _orig_x="460.9" _orig_width="0.2"/>
<text x="232.0734385724089" y="1871.5" _orig_x="463.86"/>
</g>
<g>
<title>TableHeap::cmp::operator (1,287 samples, 0.19%)</title><rect x="1146.6712422786547" y="1877" width="9.313658201784488" height="15.0" fill="rgb(239,157,33)" rx="2" ry="2" _orig_x="687.5" _orig_width="2.3"/>
<text x="1149.6712422786547" y="1887.5" _orig_x="690.51"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (202 samples, 0.03%)</title><rect x="404.81811942347287" y="1701" width="1.619766643788607" height="15.0" fill="rgb(207,191,8)" rx="2" ry="2" _orig_x="504.3" _orig_width="0.4"/>
<text x="407.81811942347287" y="1711.5" _orig_x="507.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,082 samples, 1.50%)</title><rect x="111.87989018531218" y="1829" width="19.20658888126287" height="15.0" fill="rgb(245,60,14)" rx="2" ry="2" _orig_x="163.1" _orig_width="17.6"/>
<text x="114.87989018531218" y="1839.5" _orig_x="166.07">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (615 samples, 0.09%)</title><rect x="260.1853122855181" y="1333" width="1.091283459162663" height="15.0" fill="rgb(228,153,10)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1343.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (327 samples, 0.05%)</title><rect x="12.245710363761054" y="1925" width="0.6547700754975978" height="15.0" fill="rgb(228,210,18)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1935.5" _orig_x="74.79"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (81 samples, 0.01%)</title><rect x="949.4646533973917" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(228,18,13)" rx="2" ry="2" _orig_x="638.8" _orig_width="0.1"/>
<text x="952.4646533973917" y="1871.5" _orig_x="641.77"/>
</g>
<g class="hide">
<title>sogoupinyinServ (736 samples, 0.11%)</title><rect x="802.4" y="2069" width="1.3" height="15.0" fill="rgb(246,186,7)" rx="2" ry="2"/>
<text x="805.38" y="2079.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (644 samples, 0.10%)</title><rect x="63.4" y="2037" width="1.1" height="15.0" fill="rgb(229,212,42)" rx="2" ry="2"/>
<text x="66.40" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (88 samples, 0.01%)</title><rect x="14.42827728208638" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(229,168,11)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1871.5" _orig_x="76.77"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (247 samples, 0.04%)</title><rect x="1003.3218943033631" y="1845" width="1.619766643788607" height="15.0" fill="rgb(231,227,45)" rx="2" ry="2" _orig_x="652.1" _orig_width="0.4"/>
<text x="1006.3218943033631" y="1855.5" _orig_x="655.10"/>
</g>
<g class="hide">
<title>[unknown] (614 samples, 0.09%)</title><rect x="260.1853122855181" y="1253" width="1.091283459162663" height="15.0" fill="rgb(211,96,54)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1263.5" _orig_x="301.96"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (76 samples, 0.01%)</title><rect x="357.03500343170896" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(220,142,53)" rx="2" ry="2" _orig_x="492.5" _orig_width="0.2"/>
<text x="360.03500343170896" y="1935.5" _orig_x="495.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="69" width="0.1091283459162663" height="15.0" fill="rgb(209,73,14)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="79.5" _orig_x="118.82"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (58 samples, 0.01%)</title><rect x="355.41523678792043" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(243,228,0)" rx="2" ry="2" _orig_x="492.1" _orig_width="0.1"/>
<text x="358.41523678792043" y="1871.5" _orig_x="495.09"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1845" width="2.182566918325326" height="15.0" fill="rgb(217,30,26)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1855.5" _orig_x="117.41"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (199 samples, 0.03%)</title><rect x="826.767330130405" y="1701" width="1.619766643788607" height="15.0" fill="rgb(230,24,22)" rx="2" ry="2" _orig_x="608.5" _orig_width="0.4"/>
<text x="829.767330130405" y="1711.5" _orig_x="611.51"/>
</g>
<g class="hide">
<title>malloc (101 samples, 0.01%)</title><rect x="219.3" y="2053" width="0.2" height="15.0" fill="rgb(209,104,54)" rx="2" ry="2"/>
<text x="222.33" y="2063.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (109 samples, 0.02%)</title><rect x="800.44612216884" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(250,71,6)" rx="2" ry="2" _orig_x="602.0" _orig_width="0.2"/>
<text x="803.44612216884" y="1759.5" _orig_x="605.04"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (89 samples, 0.01%)</title><rect x="993.6032944406315" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(237,133,41)" rx="2" ry="2" _orig_x="649.7" _orig_width="0.2"/>
<text x="996.6032944406315" y="1903.5" _orig_x="652.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,930 samples, 0.29%)</title><rect x="80.77831159917629" y="1861" width="3.6012354152367876" height="15.0" fill="rgb(216,36,35)" rx="2" ry="2" _orig_x="134.6" _orig_width="3.3"/>
<text x="83.77831159917629" y="1871.5" _orig_x="137.56"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1701" width="2.182566918325326" height="15.0" fill="rgb(229,213,20)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1711.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (207 samples, 0.03%)</title><rect x="162.51544269045974" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(213,201,37)" rx="2" ry="2" _orig_x="209.5" _orig_width="0.4"/>
<text x="165.51544269045974" y="2047.5" _orig_x="212.52"/>
</g>
<g class="hide">
<title>__GI___libc_write (113 samples, 0.02%)</title><rect x="168.40837336993815" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(254,97,28)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="2047.5" _orig_x="217.92"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (61 samples, 0.01%)</title><rect x="683.013040494166" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(252,89,14)" rx="2" ry="2" _orig_x="573.0" _orig_width="0.1"/>
<text x="686.013040494166" y="1823.5" _orig_x="576.00"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (608 samples, 0.09%)</title><rect x="517.391901166781" y="1797" width="4.454358270418669" height="15.0" fill="rgb(247,2,19)" rx="2" ry="2" _orig_x="532.1" _orig_width="1.1"/>
<text x="520.391901166781" y="1807.5" _orig_x="535.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="728.6733013040492" y="1701" width="0.2182566918325326" height="15.0" fill="rgb(223,81,52)" rx="2" ry="2" _orig_x="728.3" _orig_width="0.2"/>
<text x="731.6733013040492" y="1711.5" _orig_x="731.29"/>
</g>
<g class="hide">
<title>[github-desktop] (71 samples, 0.01%)</title><rect x="175.6108442004117" y="1909" width="0.1091283459162663" height="15.0" fill="rgb(243,225,8)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1919.5" _orig_x="224.48"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (564 samples, 0.08%)</title><rect x="517.7968428277284" y="1765" width="3.644474948524365" height="15.0" fill="rgb(220,195,45)" rx="2" ry="2" _orig_x="532.2" _orig_width="0.9"/>
<text x="520.7968428277284" y="1775.5" _orig_x="535.16"/>
</g>
<g class="hide">
<title>start_thread (71 samples, 0.01%)</title><rect x="73.3" y="2053" width="0.2" height="15.0" fill="rgb(246,125,5)" rx="2" ry="2"/>
<text x="76.33" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (920 samples, 0.14%)</title><rect x="358.4008236101578" y="1813" width="1.855181880576527" height="15.0" fill="rgb(211,11,26)" rx="2" ry="2" _orig_x="389.0" _orig_width="1.7"/>
<text x="361.4008236101578" y="1823.5" _orig_x="392.04"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::vector (163 samples, 0.02%)</title><rect x="478.51750171585445" y="1845" width="1.214824982841455" height="15.0" fill="rgb(246,37,20)" rx="2" ry="2" _orig_x="522.5" _orig_width="0.3"/>
<text x="481.51750171585445" y="1855.5" _orig_x="525.49"/>
</g>
<g class="hide">
<title>[github-desktop] (259 samples, 0.04%)</title><rect x="178.22992450240213" y="1877" width="0.5456417295813315" height="15.0" fill="rgb(223,218,8)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1887.5" _orig_x="226.92"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (436 samples, 0.06%)</title><rect x="594.33081674674" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(233,182,13)" rx="2" ry="2" _orig_x="551.1" _orig_width="0.7"/>
<text x="597.33081674674" y="1839.5" _orig_x="554.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (189 samples, 0.03%)</title><rect x="21.6" y="1957" width="0.3" height="15.0" fill="rgb(207,211,26)" rx="2" ry="2"/>
<text x="24.60" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="167.64447494852425" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(238,113,39)" rx="2" ry="2" _orig_x="214.2" _orig_width="0.1"/>
<text x="170.64447494852425" y="1807.5" _orig_x="217.17"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (269 samples, 0.04%)</title><rect x="595.1407000686339" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(207,63,10)" rx="2" ry="2" _orig_x="551.3" _orig_width="0.5"/>
<text x="598.1407000686339" y="1791.5" _orig_x="554.32"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (781 samples, 0.12%)</title><rect x="24.1" y="2021" width="1.4" height="15.0" fill="rgb(238,178,40)" rx="2" ry="2"/>
<text x="27.09" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (2,237 samples, 0.33%)</title><rect x="817.8586135895673" y="1781" width="16.197666437886067" height="15.0" fill="rgb(219,54,34)" rx="2" ry="2" _orig_x="606.3" _orig_width="4.0"/>
<text x="820.8586135895673" y="1791.5" _orig_x="609.35"/>
</g>
<g class="hide">
<title>[perf-123031.map] (58 samples, 0.01%)</title><rect x="86.99862731640349" y="1397" width="0.1091283459162663" height="15.0" fill="rgb(238,208,36)" rx="2" ry="2" _orig_x="140.3" _orig_width="0.1"/>
<text x="89.99862731640349" y="1407.5" _orig_x="143.27"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,110 samples, 0.16%)</title><rect x="311.2765957446808" y="1893" width="8.098833218943033" height="15.0" fill="rgb(227,10,24)" rx="2" ry="2" _orig_x="481.2" _orig_width="2.0"/>
<text x="314.2765957446808" y="1903.5" _orig_x="484.21"/>
</g>
<g class="hide">
<title>__pthread_rwlock_rdlock (69 samples, 0.01%)</title><rect x="736.9670555936855" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(238,4,53)" rx="2" ry="2" _orig_x="735.9" _orig_width="0.1"/>
<text x="739.9670555936855" y="2015.5" _orig_x="738.87"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (137 samples, 0.02%)</title><rect x="286.57515442690465" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(219,7,1)" rx="2" ry="2" _orig_x="475.1" _orig_width="0.2"/>
<text x="289.57515442690465" y="1839.5" _orig_x="478.10"/>
</g>
<g class="hide">
<title>kworker/2:2-eve (567 samples, 0.08%)</title><rect x="366.6" y="2069" width="1.0" height="15.0" fill="rgb(229,226,41)" rx="2" ry="2"/>
<text x="369.56" y="2079.5"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (35,119 samples, 5.21%)</title><rect x="747.8037062457103" y="1909" width="249.44406314344545" height="15.0" fill="rgb(225,196,27)" rx="2" ry="2" _orig_x="589.0" _orig_width="61.6"/>
<text x="750.8037062457103" y="1919.5" _orig_x="592.02">IndexKey::DeserializeToKey </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (791 samples, 0.12%)</title><rect x="212.93273850377474" y="1989" width="1.5277968428277282" height="15.0" fill="rgb(227,1,38)" rx="2" ry="2" _orig_x="255.7" _orig_width="1.4"/>
<text x="215.93273850377474" y="1999.5" _orig_x="258.71"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (74 samples, 0.01%)</title><rect x="306.7831159917638" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(207,33,33)" rx="2" ry="2" _orig_x="341.7" _orig_width="0.1"/>
<text x="309.7831159917638" y="1999.5" _orig_x="344.69"/>
</g>
<g class="hide">
<title>[unknown] (64 samples, 0.01%)</title><rect x="31.0" y="1957" width="0.1" height="15.0" fill="rgb(235,104,54)" rx="2" ry="2"/>
<text x="33.98" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (238 samples, 0.04%)</title><rect x="212.05971173644468" y="1701" width="0.4365133836650652" height="15.0" fill="rgb(248,158,2)" rx="2" ry="2" _orig_x="254.9" _orig_width="0.4"/>
<text x="215.05971173644468" y="1711.5" _orig_x="257.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (858 samples, 0.13%)</title><rect x="806.4818119423472" y="1781" width="1.6369251887439944" height="15.0" fill="rgb(232,108,16)" rx="2" ry="2" _orig_x="799.6" _orig_width="1.5"/>
<text x="809.4818119423472" y="1791.5" _orig_x="802.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="329.04529855868213" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(238,202,29)" rx="2" ry="2" _orig_x="362.1" _orig_width="0.1"/>
<text x="332.04529855868213" y="2047.5" _orig_x="365.05"/>
</g>
<g>
<title>yy_scan_string (80 samples, 0.01%)</title><rect x="1176.6369251887438" y="1989" width="0.4049416609471517" height="15.0" fill="rgb(229,130,1)" rx="2" ry="2" _orig_x="694.9" _orig_width="0.1"/>
<text x="1179.6369251887438" y="1999.5" _orig_x="697.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="299.47151681537395" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(213,56,2)" rx="2" ry="2" _orig_x="335.0" _orig_width="0.1"/>
<text x="302.47151681537395" y="1839.5" _orig_x="338.04"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (86 samples, 0.01%)</title><rect x="815.4289636238848" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(242,223,16)" rx="2" ry="2" _orig_x="605.7" _orig_width="0.2"/>
<text x="818.4289636238848" y="1759.5" _orig_x="608.73"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1557" width="1.091283459162663" height="15.0" fill="rgb(223,159,21)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1567.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (342 samples, 0.05%)</title><rect x="802.5" y="2053" width="0.6" height="15.0" fill="rgb(228,114,2)" rx="2" ry="2"/>
<text x="805.46" y="2063.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::erase (60 samples, 0.01%)</title><rect x="61.42759094028821" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(228,3,7)" rx="2" ry="2" _orig_x="419.5" _orig_width="0.1"/>
<text x="64.42759094028821" y="1871.5" _orig_x="422.49"/>
</g>
<g>
<title>Page::WLatch (75 samples, 0.01%)</title><rect x="337.19286204529857" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(244,199,47)" rx="2" ry="2" _orig_x="487.6" _orig_width="0.1"/>
<text x="340.19286204529857" y="1935.5" _orig_x="490.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,044 samples, 0.90%)</title><rect x="717.3239533287576" y="1893" width="11.567604667124227" height="15.0" fill="rgb(227,169,21)" rx="2" ry="2" _orig_x="717.9" _orig_width="10.6"/>
<text x="720.3239533287576" y="1903.5" _orig_x="720.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (138 samples, 0.02%)</title><rect x="56.5" y="1893" width="0.2" height="15.0" fill="rgb(227,189,16)" rx="2" ry="2"/>
<text x="59.49" y="1903.5"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (182 samples, 0.03%)</title><rect x="595.9505833905283" y="1765" width="1.214824982841455" height="15.0" fill="rgb(250,193,8)" rx="2" ry="2" _orig_x="551.5" _orig_width="0.3"/>
<text x="598.9505833905283" y="1775.5" _orig_x="554.47"/>
</g>
<g>
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (930 samples, 0.14%)</title><rect x="959.9931365820177" y="1845" width="6.479066575154428" height="15.0" fill="rgb(228,222,24)" rx="2" ry="2" _orig_x="641.4" _orig_width="1.6"/>
<text x="962.9931365820177" y="1855.5" _orig_x="644.42"/>
</g>
<g class="hide">
<title>atopacctd (198 samples, 0.03%)</title><rect x="121.0" y="2069" width="0.3" height="15.0" fill="rgb(213,186,2)" rx="2" ry="2"/>
<text x="123.96" y="2079.5"/>
</g>
<g class="hide">
<title>[libjvm.so] (138 samples, 0.02%)</title><rect x="13.555250514756253" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(250,227,5)" rx="2" ry="2" _orig_x="73.0" _orig_width="0.3"/>
<text x="16.555250514756253" y="2015.5" _orig_x="76.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (546 samples, 0.08%)</title><rect x="335.9203843514069" y="1989" width="0.9821551132463967" height="15.0" fill="rgb(245,78,38)" rx="2" ry="2" _orig_x="368.4" _orig_width="0.9"/>
<text x="338.9203843514069" y="1999.5" _orig_x="371.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,636 samples, 0.24%)</title><rect x="350.2161976664378" y="1941" width="3.164722031571723" height="15.0" fill="rgb(253,160,42)" rx="2" ry="2" _orig_x="381.5" _orig_width="2.9"/>
<text x="353.2161976664378" y="1951.5" _orig_x="384.54"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (101 samples, 0.01%)</title><rect x="1137.3575840768704" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(254,63,49)" rx="2" ry="2" _orig_x="685.2" _orig_width="0.2"/>
<text x="1140.3575840768704" y="1759.5" _orig_x="688.20"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (6,502 samples, 0.97%)</title><rect x="809.7597803706243" y="1845" width="46.1633493479753" height="15.0" fill="rgb(247,206,6)" rx="2" ry="2" _orig_x="604.3" _orig_width="11.4"/>
<text x="812.7597803706243" y="1855.5" _orig_x="607.29">Simp..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,443 samples, 1.55%)</title><rect x="757.8105696636924" y="1957" width="19.970487302676734" height="15.0" fill="rgb(222,148,19)" rx="2" ry="2" _orig_x="755.0" _orig_width="18.3"/>
<text x="760.8105696636924" y="1967.5" _orig_x="757.98">[[kernel.kallsyms]] </text>
</g>
<g>
<title>[[kernel.kallsyms]] (95 samples, 0.01%)</title><rect x="355.82017844886747" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(248,103,20)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1855.5" _orig_x="495.24"/>
</g>
<g class="hide">
<title>[perf-123031.map] (70 samples, 0.01%)</title><rect x="86.99862731640349" y="1445" width="0.1091283459162663" height="15.0" fill="rgb(212,43,12)" rx="2" ry="2" _orig_x="140.3" _orig_width="0.1"/>
<text x="89.99862731640349" y="1455.5" _orig_x="143.25"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (112 samples, 0.02%)</title><rect x="495.52505147563494" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(248,177,19)" rx="2" ry="2" _orig_x="526.7" _orig_width="0.2"/>
<text x="498.52505147563494" y="1791.5" _orig_x="529.73"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (196 samples, 0.03%)</title><rect x="191.81880576527104" y="1845" width="1.214824982841455" height="15.0" fill="rgb(229,81,11)" rx="2" ry="2" _orig_x="451.7" _orig_width="0.3"/>
<text x="194.81880576527104" y="1855.5" _orig_x="454.66"/>
</g>
<g class="hide">
<title>[unknown] (101 samples, 0.01%)</title><rect x="55.8" y="2053" width="0.2" height="15.0" fill="rgb(230,223,48)" rx="2" ry="2"/>
<text x="58.81" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (129 samples, 0.02%)</title><rect x="386.19080301990385" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(238,71,12)" rx="2" ry="2" _orig_x="499.7" _orig_width="0.2"/>
<text x="389.19080301990385" y="1775.5" _orig_x="502.67"/>
</g>
<g>
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="724.7220315717225" y="1605" width="0.8098833218943035" height="15.0" fill="rgb(230,40,25)" rx="2" ry="2" _orig_x="583.3" _orig_width="0.2"/>
<text x="727.7220315717225" y="1615.5" _orig_x="586.33"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (2,879 samples, 0.43%)</title><rect x="533.18462594372" y="1813" width="20.247083047357584" height="15.0" fill="rgb(218,50,53)" rx="2" ry="2" _orig_x="536.0" _orig_width="5.0"/>
<text x="536.18462594372" y="1823.5" _orig_x="538.98"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (187 samples, 0.03%)</title><rect x="334.7632120796156" y="1925" width="1.214824982841455" height="15.0" fill="rgb(225,55,48)" rx="2" ry="2" _orig_x="487.0" _orig_width="0.3"/>
<text x="337.7632120796156" y="1935.5" _orig_x="490.02"/>
</g>
<g class="hide">
<title>[code] (1,197 samples, 0.18%)</title><rect x="85.03431708991069" y="1941" width="2.2916952642415924" height="15.0" fill="rgb(235,121,26)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1951.5" _orig_x="141.47"/>
</g>
<g class="hide">
<title>[code] (176 samples, 0.03%)</title><rect x="14.2" y="1877" width="0.3" height="15.0" fill="rgb(236,174,49)" rx="2" ry="2"/>
<text x="17.16" y="1887.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (98 samples, 0.01%)</title><rect x="115.28483184625944" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(245,125,0)" rx="2" ry="2" _orig_x="432.8" _orig_width="0.2"/>
<text x="118.28483184625944" y="1775.5" _orig_x="435.84"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (599 samples, 0.09%)</title><rect x="180.84900480439248" y="2021" width="1.091283459162663" height="15.0" fill="rgb(224,115,46)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="2031.5" _orig_x="229.30"/>
</g>
<g>
<title>operator new (77 samples, 0.01%)</title><rect x="906.1358956760467" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(205,223,1)" rx="2" ry="2" _orig_x="628.1" _orig_width="0.1"/>
<text x="909.1358956760467" y="1807.5" _orig_x="631.09"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (653 samples, 0.10%)</title><rect x="1135.3328757721347" y="1781" width="4.454358270418669" height="15.0" fill="rgb(223,137,35)" rx="2" ry="2" _orig_x="684.7" _orig_width="1.1"/>
<text x="1138.3328757721347" y="1791.5" _orig_x="687.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (206 samples, 0.03%)</title><rect x="270.8798901853122" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(246,89,53)" rx="2" ry="2" _orig_x="308.8" _orig_width="0.4"/>
<text x="273.8798901853122" y="1967.5" _orig_x="311.81"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (150 samples, 0.02%)</title><rect x="269.97254632807136" y="1765" width="1.214824982841455" height="15.0" fill="rgb(211,22,11)" rx="2" ry="2" _orig_x="471.0" _orig_width="0.3"/>
<text x="272.97254632807136" y="1775.5" _orig_x="474.04"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (88 samples, 0.01%)</title><rect x="87.34385724090583" y="1669" width="0.8098833218943035" height="15.0" fill="rgb(237,204,8)" rx="2" ry="2" _orig_x="425.9" _orig_width="0.2"/>
<text x="90.34385724090583" y="1679.5" _orig_x="428.91"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="805" width="2.182566918325326" height="15.0" fill="rgb(242,214,45)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="815.5" _orig_x="117.41"/>
</g>
<g>
<title>std::max&lt;unsigned long&gt; (97 samples, 0.01%)</title><rect x="914.6396705559371" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(243,137,9)" rx="2" ry="2" _orig_x="630.2" _orig_width="0.1"/>
<text x="917.6396705559371" y="1823.5" _orig_x="633.16"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (400 samples, 0.06%)</title><rect x="903.7062457103636" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(230,211,43)" rx="2" ry="2" _orig_x="627.5" _orig_width="0.7"/>
<text x="906.7062457103636" y="1823.5" _orig_x="630.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (973 samples, 0.14%)</title><rect x="806.2635552505146" y="1797" width="1.855181880576527" height="15.0" fill="rgb(249,167,48)" rx="2" ry="2" _orig_x="799.4" _orig_width="1.7"/>
<text x="809.2635552505146" y="1807.5" _orig_x="802.37"/>
</g>
<g>
<title>std::_Destroy&lt;Field*, Field&gt; (97 samples, 0.01%)</title><rect x="1167.3232669869594" y="1941" width="0.8098833218943035" height="15.0" fill="rgb(241,213,19)" rx="2" ry="2" _orig_x="692.6" _orig_width="0.2"/>
<text x="1170.3232669869594" y="1951.5" _orig_x="695.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="161.96980096087842" y="1765" width="0.1091283459162663" height="15.0" fill="rgb(211,4,44)" rx="2" ry="2" _orig_x="209.0" _orig_width="0.1"/>
<text x="164.96980096087842" y="1775.5" _orig_x="212.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (302 samples, 0.04%)</title><rect x="220.6808510638297" y="1893" width="0.5456417295813315" height="15.0" fill="rgb(246,184,26)" rx="2" ry="2" _orig_x="262.8" _orig_width="0.5"/>
<text x="223.6808510638297" y="1903.5" _orig_x="265.76"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (94 samples, 0.01%)</title><rect x="413.3218943033629" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(253,145,23)" rx="2" ry="2" _orig_x="506.4" _orig_width="0.1"/>
<text x="416.3218943033629" y="1727.5" _orig_x="509.38"/>
</g>
<g class="hide">
<title>curl_multi_socket_action (116 samples, 0.02%)</title><rect x="25.5" y="2021" width="0.2" height="15.0" fill="rgb(231,97,25)" rx="2" ry="2"/>
<text x="28.46" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (94 samples, 0.01%)</title><rect x="13.336993822923718" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(227,40,1)" rx="2" ry="2" _orig_x="72.8" _orig_width="0.2"/>
<text x="16.336993822923716" y="1887.5" _orig_x="75.85"/>
</g>
<g class="hide">
<title>[unknown] (614 samples, 0.09%)</title><rect x="260.1853122855181" y="1317" width="1.091283459162663" height="15.0" fill="rgb(215,203,39)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1327.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (118 samples, 0.02%)</title><rect x="333.14344543582706" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(214,66,39)" rx="2" ry="2" _orig_x="486.6" _orig_width="0.2"/>
<text x="336.14344543582706" y="1823.5" _orig_x="489.59"/>
</g>
<g>
<title>Schema::GetColumnCount (81 samples, 0.01%)</title><rect x="1080.260809883322" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(215,223,7)" rx="2" ry="2" _orig_x="671.1" _orig_width="0.1"/>
<text x="1083.260809883322" y="1919.5" _orig_x="674.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (392 samples, 0.06%)</title><rect x="61.680851063829685" y="1861" width="0.7638984214138641" height="15.0" fill="rgb(248,62,32)" rx="2" ry="2" _orig_x="117.1" _orig_width="0.7"/>
<text x="64.68085106382969" y="1871.5" _orig_x="120.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,253 samples, 1.23%)</title><rect x="33.6" y="2005" width="14.5" height="15.0" fill="rgb(239,137,20)" rx="2" ry="2"/>
<text x="36.61" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1109" width="1.091283459162663" height="15.0" fill="rgb(214,42,25)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1119.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>nv_uvm_event_interrupt (68 samples, 0.01%)</title><rect x="1168.24227865477" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(229,91,19)" rx="2" ry="2" _orig_x="1131.1" _orig_width="0.1"/>
<text x="1171.24227865477" y="1823.5" _orig_x="1134.07"/>
</g>
<g class="hide">
<title>[unknown] (67 samples, 0.01%)</title><rect x="711.4310226492793" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(213,111,27)" rx="2" ry="2" _orig_x="712.5" _orig_width="0.1"/>
<text x="714.4310226492793" y="2031.5" _orig_x="715.48"/>
</g>
<g class="hide">
<title>[code] (300 samples, 0.04%)</title><rect x="14.1" y="1925" width="0.5" height="15.0" fill="rgb(216,45,8)" rx="2" ry="2"/>
<text x="17.08" y="1935.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (3,577 samples, 0.53%)</title><rect x="947.4399450926559" y="1877" width="25.106382978723403" height="15.0" fill="rgb(205,125,41)" rx="2" ry="2" _orig_x="638.3" _orig_width="6.2"/>
<text x="950.4399450926559" y="1887.5" _orig_x="641.26">s..</text>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (243 samples, 0.04%)</title><rect x="1138.1674673987643" y="1749" width="1.619766643788607" height="15.0" fill="rgb(231,137,15)" rx="2" ry="2" _orig_x="685.4" _orig_width="0.4"/>
<text x="1141.1674673987643" y="1759.5" _orig_x="688.40"/>
</g>
<g class="hide">
<title>__select (88 samples, 0.01%)</title><rect x="1188.7" y="2053" width="0.2" height="15.0" fill="rgb(209,141,41)" rx="2" ry="2"/>
<text x="1191.72" y="2063.5"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (187 samples, 0.03%)</title><rect x="932.0521619766644" y="1781" width="1.214824982841455" height="15.0" fill="rgb(207,209,35)" rx="2" ry="2" _orig_x="634.5" _orig_width="0.3"/>
<text x="935.0521619766644" y="1791.5" _orig_x="637.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (43,066 samples, 6.39%)</title><rect x="1086.1777625257378" y="1909" width="82.39190116678105" height="15.0" fill="rgb(219,104,31)" rx="2" ry="2" _orig_x="1055.9" _orig_width="75.5"/>
<text x="1089.1777625257378" y="1919.5" _orig_x="1058.91">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (63 samples, 0.01%)</title><rect x="717.8380233356212" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(227,3,8)" rx="2" ry="2" _orig_x="581.6" _orig_width="0.1"/>
<text x="720.8380233356212" y="1791.5" _orig_x="584.62"/>
</g>
<g class="hide">
<title>Java_sun_awt_image_GifImageDecoder_parseImage (777 samples, 0.12%)</title><rect x="19.9" y="2005" width="1.4" height="15.0" fill="rgb(209,205,26)" rx="2" ry="2"/>
<text x="22.91" y="2015.5"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (99 samples, 0.01%)</title><rect x="1160.8442004118049" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(218,209,10)" rx="2" ry="2" _orig_x="691.0" _orig_width="0.2"/>
<text x="1163.8442004118049" y="1887.5" _orig_x="694.02"/>
</g>
<g class="hide">
<title>[code] (554 samples, 0.08%)</title><rect x="15.2" y="1957" width="0.9" height="15.0" fill="rgb(208,214,25)" rx="2" ry="2"/>
<text x="18.17" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (63 samples, 0.01%)</title><rect x="87.54426904598482" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(205,77,25)" rx="2" ry="2" _orig_x="140.8" _orig_width="0.1"/>
<text x="90.54426904598482" y="1903.5" _orig_x="143.84"/>
</g>
<g>
<title>std::__fill_n_a&lt;unsigned long, char&gt; (80 samples, 0.01%)</title><rect x="216.52024708304734" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(232,37,54)" rx="2" ry="2" _orig_x="457.8" _orig_width="0.2"/>
<text x="219.52024708304734" y="1759.5" _orig_x="460.82"/>
</g>
<g class="hide">
<title>containerd (543 samples, 0.08%)</title><rect x="206.5" y="2069" width="1.0" height="15.0" fill="rgb(212,220,15)" rx="2" ry="2"/>
<text x="209.53" y="2079.5"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (64 samples, 0.01%)</title><rect x="53.73369938229243" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(223,14,30)" rx="2" ry="2" _orig_x="417.6" _orig_width="0.1"/>
<text x="56.73369938229243" y="1871.5" _orig_x="420.56"/>
</g>
<g class="hide">
<title>[unknown] (496 samples, 0.07%)</title><rect x="166.98970487302668" y="2021" width="0.9821551132463967" height="15.0" fill="rgb(217,100,20)" rx="2" ry="2" _orig_x="213.6" _orig_width="0.9"/>
<text x="169.98970487302668" y="2031.5" _orig_x="216.58"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (98 samples, 0.01%)</title><rect x="253.36993822923802" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(227,198,1)" rx="2" ry="2" _orig_x="466.9" _orig_width="0.2"/>
<text x="256.369938229238" y="1871.5" _orig_x="469.89"/>
</g>
<g class="hide">
<title>[github-desktop] (71 samples, 0.01%)</title><rect x="16.2" y="1925" width="0.1" height="15.0" fill="rgb(237,165,53)" rx="2" ry="2"/>
<text x="19.16" y="1935.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (152 samples, 0.02%)</title><rect x="455.03088538091987" y="1797" width="1.214824982841455" height="15.0" fill="rgb(213,121,52)" rx="2" ry="2" _orig_x="516.7" _orig_width="0.3"/>
<text x="458.03088538091987" y="1807.5" _orig_x="519.73"/>
</g>
<g>
<title>std::equal_to&lt;int&gt;::operator (213 samples, 0.03%)</title><rect x="1138.1674673987643" y="1733" width="1.619766643788607" height="15.0" fill="rgb(213,191,32)" rx="2" ry="2" _orig_x="685.4" _orig_width="0.4"/>
<text x="1141.1674673987643" y="1743.5" _orig_x="688.44"/>
</g>
<g class="hide">
<title>ntfs_attr_lookup (99 samples, 0.01%)</title><rect x="795.5" y="2053" width="0.2" height="15.0" fill="rgb(237,211,28)" rx="2" ry="2"/>
<text x="798.52" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (120 samples, 0.02%)</title><rect x="53.71448181194225" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(216,229,39)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="2047.5" _orig_x="112.79"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (103 samples, 0.02%)</title><rect x="370.39807824296497" y="1669" width="0.8098833218943035" height="15.0" fill="rgb(208,228,14)" rx="2" ry="2" _orig_x="495.8" _orig_width="0.2"/>
<text x="373.39807824296497" y="1679.5" _orig_x="498.85"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1525" width="1.091283459162663" height="15.0" fill="rgb(226,5,9)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1535.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (74 samples, 0.01%)</title><rect x="205.9917638984213" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(213,175,29)" rx="2" ry="2" _orig_x="455.2" _orig_width="0.2"/>
<text x="208.9917638984213" y="1775.5" _orig_x="458.25"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (72 samples, 0.01%)</title><rect x="844.1798215511322" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(242,27,3)" rx="2" ry="2" _orig_x="612.8" _orig_width="0.2"/>
<text x="847.1798215511322" y="1791.5" _orig_x="615.83"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (112 samples, 0.02%)</title><rect x="493.0954015099519" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(248,8,11)" rx="2" ry="2" _orig_x="526.1" _orig_width="0.2"/>
<text x="496.0954015099519" y="1727.5" _orig_x="529.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (191 samples, 0.03%)</title><rect x="84.48867536032935" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(242,145,48)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="2015.5" _orig_x="140.96"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1541" width="0.1091283459162663" height="15.0" fill="rgb(205,8,46)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1551.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>[code] (67 samples, 0.01%)</title><rect x="103.91352093342476" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(216,111,17)" rx="2" ry="2" _orig_x="155.8" _orig_width="0.1"/>
<text x="106.91352093342476" y="1951.5" _orig_x="158.80"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1013" width="1.091283459162663" height="15.0" fill="rgb(211,39,32)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1023.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (210 samples, 0.03%)</title><rect x="332.64653397391885" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(250,199,26)" rx="2" ry="2" _orig_x="365.4" _orig_width="0.4"/>
<text x="335.64653397391885" y="1935.5" _orig_x="368.43"/>
</g>
<g class="hide">
<title>[libgobject-2.0.so.0.6400.6] (325 samples, 0.05%)</title><rect x="227.5" y="2053" width="0.6" height="15.0" fill="rgb(253,25,53)" rx="2" ry="2"/>
<text x="230.53" y="2063.5"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,468 samples, 0.22%)</title><rect x="174.0013726835964" y="1797" width="10.123541523678792" height="15.0" fill="rgb(244,13,9)" rx="2" ry="2" _orig_x="447.3" _orig_width="2.5"/>
<text x="177.0013726835964" y="1807.5" _orig_x="450.26"/>
</g>
<g>
<title>_int_free (59 samples, 0.01%)</title><rect x="1052.3198352779687" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(229,92,4)" rx="2" ry="2" _orig_x="664.2" _orig_width="0.1"/>
<text x="1055.3198352779687" y="1759.5" _orig_x="667.22"/>
</g>
<g class="hide">
<title>[code] (892 samples, 0.13%)</title><rect x="85.3617021276595" y="1733" width="1.7460535346602608" height="15.0" fill="rgb(225,177,50)" rx="2" ry="2" _orig_x="138.8" _orig_width="1.6"/>
<text x="88.3617021276595" y="1743.5" _orig_x="141.83"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (701 samples, 0.10%)</title><rect x="296.2937542896362" y="1829" width="4.85929993136582" height="15.0" fill="rgb(209,86,2)" rx="2" ry="2" _orig_x="477.5" _orig_width="1.2"/>
<text x="299.2937542896362" y="1839.5" _orig_x="480.46"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (81 samples, 0.01%)</title><rect x="708.1194234728896" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(212,111,10)" rx="2" ry="2" _orig_x="579.2" _orig_width="0.1"/>
<text x="711.1194234728896" y="1871.5" _orig_x="582.20"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (753 samples, 0.11%)</title><rect x="295.8888126286889" y="1845" width="5.264241592312972" height="15.0" fill="rgb(208,135,2)" rx="2" ry="2" _orig_x="477.4" _orig_width="1.3"/>
<text x="298.8888126286889" y="1855.5" _orig_x="480.41"/>
</g>
<g class="hide">
<title>[ntfs-3g] (1,071 samples, 0.16%)</title><rect x="709.3575840768702" y="2021" width="2.0734385724090596" height="15.0" fill="rgb(210,117,53)" rx="2" ry="2" _orig_x="710.6" _orig_width="1.9"/>
<text x="712.3575840768702" y="2031.5" _orig_x="713.61"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (131 samples, 0.02%)</title><rect x="612.958133150309" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(235,85,8)" rx="2" ry="2" _orig_x="555.7" _orig_width="0.2"/>
<text x="615.958133150309" y="1839.5" _orig_x="558.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,908 samples, 0.28%)</title><rect x="794.1503088538091" y="2005" width="3.710363761153054" height="15.0" fill="rgb(215,208,50)" rx="2" ry="2" _orig_x="788.3" _orig_width="3.4"/>
<text x="797.1503088538091" y="2015.5" _orig_x="791.35"/>
</g>
<g class="hide">
<title>[unknown] (61 samples, 0.01%)</title><rect x="31.0" y="1941" width="0.1" height="15.0" fill="rgb(207,97,43)" rx="2" ry="2"/>
<text x="33.98" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="305.91008922443365" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(254,72,16)" rx="2" ry="2" _orig_x="340.9" _orig_width="0.1"/>
<text x="308.91008922443365" y="1983.5" _orig_x="343.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (230 samples, 0.03%)</title><rect x="86.93891557995882" y="1717" width="1.619766643788607" height="15.0" fill="rgb(253,75,4)" rx="2" ry="2" _orig_x="425.8" _orig_width="0.4"/>
<text x="89.93891557995882" y="1727.5" _orig_x="428.79"/>
</g>
<g class="hide">
<title>_nv022966rm (201 samples, 0.03%)</title><rect x="348.6" y="2053" width="0.3" height="15.0" fill="rgb(218,40,5)" rx="2" ry="2"/>
<text x="351.56" y="2063.5"/>
</g>
<g class="hide">
<title>start_thread (520 samples, 0.08%)</title><rect x="16.4" y="2053" width="0.9" height="15.0" fill="rgb(208,71,2)" rx="2" ry="2"/>
<text x="19.35" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (103 samples, 0.02%)</title><rect x="708.1194234728896" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(223,14,19)" rx="2" ry="2" _orig_x="579.2" _orig_width="0.2"/>
<text x="711.1194234728896" y="1903.5" _orig_x="582.17"/>
</g>
<g class="hide">
<title>[libstdc++.so.6.0.28] (61 samples, 0.01%)</title><rect x="308.092656142759" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(225,140,36)" rx="2" ry="2" _orig_x="342.9" _orig_width="0.1"/>
<text x="311.092656142759" y="2015.5" _orig_x="345.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="805.4996568291008" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(248,164,49)" rx="2" ry="2" _orig_x="798.7" _orig_width="0.2"/>
<text x="808.4996568291008" y="1951.5" _orig_x="801.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (692 samples, 0.10%)</title><rect x="65.1" y="1957" width="1.3" height="15.0" fill="rgb(235,209,47)" rx="2" ry="2"/>
<text x="68.15" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (247 samples, 0.04%)</title><rect x="11.590940288263463" y="1829" width="0.4365133836650652" height="15.0" fill="rgb(225,80,11)" rx="2" ry="2" _orig_x="71.2" _orig_width="0.4"/>
<text x="14.590940288263463" y="1839.5" _orig_x="74.16"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (118 samples, 0.02%)</title><rect x="149.29993136582007" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(223,79,37)" rx="2" ry="2" _orig_x="441.2" _orig_width="0.2"/>
<text x="152.29993136582007" y="1855.5" _orig_x="444.21"/>
</g>
<g>
<title>std::_Destroy&lt;char*, char&gt; (223 samples, 0.03%)</title><rect x="972.9512697323266" y="1861" width="1.619766643788607" height="15.0" fill="rgb(246,64,11)" rx="2" ry="2" _orig_x="644.6" _orig_width="0.4"/>
<text x="975.9512697323266" y="1871.5" _orig_x="647.60"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (260 samples, 0.04%)</title><rect x="176.83596431022642" y="1717" width="1.619766643788607" height="15.0" fill="rgb(223,87,52)" rx="2" ry="2" _orig_x="448.0" _orig_width="0.4"/>
<text x="179.83596431022642" y="1727.5" _orig_x="450.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (11,325 samples, 1.68%)</title><rect x="109.47906657515433" y="1861" width="21.607412491420728" height="15.0" fill="rgb(238,28,41)" rx="2" ry="2" _orig_x="160.9" _orig_width="19.8"/>
<text x="112.47906657515433" y="1871.5" _orig_x="163.89">[[kernel.kallsyms]] </text>
</g>
<g>
<title>SimpleMemHeap::Allocate (2,604 samples, 0.39%)</title><rect x="764.4063143445436" y="1845" width="18.222374742621827" height="15.0" fill="rgb(239,17,41)" rx="2" ry="2" _orig_x="593.1" _orig_width="4.5"/>
<text x="767.4063143445436" y="1855.5" _orig_x="596.06"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (329 samples, 0.05%)</title><rect x="247.700754975978" y="1861" width="2.42964996568291" height="15.0" fill="rgb(212,191,54)" rx="2" ry="2" _orig_x="465.5" _orig_width="0.6"/>
<text x="250.700754975978" y="1871.5" _orig_x="468.55"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (566 samples, 0.08%)</title><rect x="201.13246396705557" y="1797" width="4.049416609471517" height="15.0" fill="rgb(250,76,20)" rx="2" ry="2" _orig_x="454.0" _orig_width="1.0"/>
<text x="204.13246396705557" y="1807.5" _orig_x="456.99"/>
</g>
<g class="hide">
<title>[github-desktop] (78 samples, 0.01%)</title><rect x="16.2" y="1973" width="0.1" height="15.0" fill="rgb(214,30,1)" rx="2" ry="2"/>
<text x="19.15" y="1983.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (65 samples, 0.01%)</title><rect x="640.4941660947151" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(235,73,35)" rx="2" ry="2" _orig_x="562.5" _orig_width="0.1"/>
<text x="643.4941660947151" y="1839.5" _orig_x="565.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (825 samples, 0.12%)</title><rect x="210.8592999313657" y="1941" width="1.6369251887439944" height="15.0" fill="rgb(243,165,47)" rx="2" ry="2" _orig_x="253.8" _orig_width="1.5"/>
<text x="213.8592999313657" y="1951.5" _orig_x="256.84"/>
</g>
<g>
<title>[[kernel.kallsyms]] (487 samples, 0.07%)</title><rect x="54.94852436513369" y="1733" width="3.644474948524365" height="15.0" fill="rgb(244,25,50)" rx="2" ry="2" _orig_x="417.9" _orig_width="0.9"/>
<text x="57.94852436513369" y="1743.5" _orig_x="420.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (229 samples, 0.03%)</title><rect x="174.19217570350023" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(235,168,6)" rx="2" ry="2" _orig_x="220.2" _orig_width="0.4"/>
<text x="177.19217570350023" y="1951.5" _orig_x="223.22"/>
</g>
<g class="hide">
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (281 samples, 0.04%)</title><rect x="40.4276729559748" y="2037" width="1.8553459119496856" height="15.0" fill="rgb(217,9,51)" rx="2" ry="2" _orig_x="398.9" _orig_width="0.5"/>
<text x="43.4276729559748" y="2047.5" _orig_x="401.92"/>
</g>
<g class="hide">
<title>g_socket_receive_message (180 samples, 0.03%)</title><rect x="167.42621825669173" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(226,222,23)" rx="2" ry="2" _orig_x="214.0" _orig_width="0.3"/>
<text x="170.42621825669173" y="2015.5" _orig_x="217.01"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1461" width="2.182566918325326" height="15.0" fill="rgb(218,148,38)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1471.5" _orig_x="117.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (90 samples, 0.01%)</title><rect x="1116.7055593685654" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(229,186,2)" rx="2" ry="2" _orig_x="680.1" _orig_width="0.2"/>
<text x="1119.7055593685654" y="1903.5" _orig_x="683.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,174 samples, 1.21%)</title><rect x="33.7" y="1989" width="14.4" height="15.0" fill="rgb(236,175,38)" rx="2" ry="2"/>
<text x="36.75" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (176 samples, 0.03%)</title><rect x="161.04323953328765" y="1733" width="1.214824982841455" height="15.0" fill="rgb(208,151,4)" rx="2" ry="2" _orig_x="444.1" _orig_width="0.3"/>
<text x="164.04323953328765" y="1743.5" _orig_x="447.14"/>
</g>
<g class="hide">
<title>ntfs_attr_mst_pwrite (125 samples, 0.02%)</title><rect x="786.729581331503" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(209,128,11)" rx="2" ry="2" _orig_x="781.5" _orig_width="0.2"/>
<text x="789.729581331503" y="2047.5" _orig_x="784.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="14.5" y="1797" width="0.1" height="15.0" fill="rgb(211,23,45)" rx="2" ry="2"/>
<text x="17.49" y="1807.5"/>
</g>
<g>
<title>MemHeap::~MemHeap (98 samples, 0.01%)</title><rect x="1015.4701441317777" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(234,84,35)" rx="2" ry="2" _orig_x="655.1" _orig_width="0.1"/>
<text x="1018.4701441317777" y="1871.5" _orig_x="658.07"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (1,256 samples, 0.19%)</title><rect x="458.6753603294441" y="1829" width="8.908716540837338" height="15.0" fill="rgb(230,211,22)" rx="2" ry="2" _orig_x="517.6" _orig_width="2.2"/>
<text x="461.6753603294441" y="1839.5" _orig_x="520.57"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (123 samples, 0.02%)</title><rect x="706.9045984900479" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(224,58,21)" rx="2" ry="2" _orig_x="578.9" _orig_width="0.2"/>
<text x="709.9045984900479" y="1871.5" _orig_x="581.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67,636 samples, 10.04%)</title><rect x="1039.2525737817432" y="1925" width="129.31708991077556" height="15.0" fill="rgb(211,184,38)" rx="2" ry="2" _orig_x="1012.9" _orig_width="118.5"/>
<text x="1042.2525737817432" y="1935.5" _orig_x="1015.86">[[kernel.kallsyms]] </text>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::allocate (86 samples, 0.01%)</title><rect x="904.5161290322583" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(223,133,32)" rx="2" ry="2" _orig_x="627.7" _orig_width="0.1"/>
<text x="907.5161290322583" y="1807.5" _orig_x="630.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (263 samples, 0.04%)</title><rect x="336.4660260809882" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(208,130,19)" rx="2" ry="2" _orig_x="368.9" _orig_width="0.4"/>
<text x="339.4660260809882" y="1951.5" _orig_x="371.87"/>
</g>
<g class="hide">
<title>[perf-123031.map] (200 samples, 0.03%)</title><rect x="86.67124227865467" y="1589" width="0.4365133836650652" height="15.0" fill="rgb(212,39,41)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1599.5" _orig_x="143.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,949 samples, 0.88%)</title><rect x="73.03019903912138" y="2005" width="11.349347975291696" height="15.0" fill="rgb(231,62,25)" rx="2" ry="2" _orig_x="127.5" _orig_width="10.4"/>
<text x="76.03019903912138" y="2015.5" _orig_x="130.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (92 samples, 0.01%)</title><rect x="168.5175017158544" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(216,128,10)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1951.5" _orig_x="217.96"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,236 samples, 0.33%)</title><rect x="411.7021276595744" y="1781" width="15.792724776938915" height="15.0" fill="rgb(219,1,14)" rx="2" ry="2" _orig_x="506.0" _orig_width="3.9"/>
<text x="414.7021276595744" y="1791.5" _orig_x="508.96"/>
</g>
<g class="hide">
<title>[unknown] (507 samples, 0.08%)</title><rect x="219.8" y="2053" width="0.9" height="15.0" fill="rgb(245,75,16)" rx="2" ry="2"/>
<text x="222.83" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="130.9773507206588" y="1605" width="0.1091283459162663" height="15.0" fill="rgb(217,18,21)" rx="2" ry="2" _orig_x="180.6" _orig_width="0.1"/>
<text x="133.9773507206588" y="1615.5" _orig_x="183.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,575 samples, 0.68%)</title><rect x="720.1612903225805" y="1845" width="8.730267673301304" height="15.0" fill="rgb(226,37,19)" rx="2" ry="2" _orig_x="720.5" _orig_width="8.0"/>
<text x="723.1612903225805" y="1855.5" _orig_x="723.46"/>
</g>
<g class="hide">
<title>[unknown] (147 samples, 0.02%)</title><rect x="736.6396705559367" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(227,164,23)" rx="2" ry="2" _orig_x="735.6" _orig_width="0.3"/>
<text x="739.6396705559367" y="2015.5" _orig_x="738.60"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (70 samples, 0.01%)</title><rect x="227.85861358956763" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(210,152,32)" rx="2" ry="2" _orig_x="460.6" _orig_width="0.1"/>
<text x="230.85861358956763" y="1823.5" _orig_x="463.57"/>
</g>
<g>
<title>Row::~Row (1,458 samples, 0.22%)</title><rect x="293.45916266300617" y="1893" width="10.528483184625944" height="15.0" fill="rgb(253,158,36)" rx="2" ry="2" _orig_x="476.8" _orig_width="2.6"/>
<text x="296.45916266300617" y="1903.5" _orig_x="479.82"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (187 samples, 0.03%)</title><rect x="1160.4392587508578" y="1925" width="1.619766643788607" height="15.0" fill="rgb(228,102,3)" rx="2" ry="2" _orig_x="690.9" _orig_width="0.4"/>
<text x="1163.4392587508578" y="1935.5" _orig_x="693.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (398 samples, 0.06%)</title><rect x="331.22786547700747" y="1957" width="0.7638984214138641" height="15.0" fill="rgb(252,97,7)" rx="2" ry="2" _orig_x="364.1" _orig_width="0.7"/>
<text x="334.22786547700747" y="1967.5" _orig_x="367.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (136 samples, 0.02%)</title><rect x="1182.6" y="2021" width="0.3" height="15.0" fill="rgb(248,158,47)" rx="2" ry="2"/>
<text x="1185.61" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (1,055 samples, 0.16%)</title><rect x="67.6" y="2037" width="1.8" height="15.0" fill="rgb(254,165,38)" rx="2" ry="2"/>
<text x="70.55" y="2047.5"/>
</g>
<g class="hide">
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1·dwrap·1 (316 samples, 0.05%)</title><rect x="159.56897735072056" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(229,156,13)" rx="2" ry="2" _orig_x="206.8" _orig_width="0.5"/>
<text x="162.56897735072056" y="2047.5" _orig_x="209.79"/>
</g>
<g class="hide">
<title>[code] (544 samples, 0.08%)</title><rect x="15.2" y="1941" width="0.9" height="15.0" fill="rgb(206,194,0)" rx="2" ry="2"/>
<text x="18.18" y="1951.5"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (68 samples, 0.01%)</title><rect x="1154.3651338366503" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(218,210,5)" rx="2" ry="2" _orig_x="689.4" _orig_width="0.1"/>
<text x="1157.3651338366503" y="1775.5" _orig_x="692.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (474 samples, 0.07%)</title><rect x="808.4461221688399" y="2021" width="0.9821551132463967" height="15.0" fill="rgb(222,142,15)" rx="2" ry="2" _orig_x="801.4" _orig_width="0.9"/>
<text x="811.4461221688399" y="2031.5" _orig_x="804.42"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (68 samples, 0.01%)</title><rect x="472.44337680164716" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(232,36,36)" rx="2" ry="2" _orig_x="521.0" _orig_width="0.1"/>
<text x="475.44337680164716" y="1855.5" _orig_x="524.00"/>
</g>
<g class="hide">
<title>v8::Function::Call (473 samples, 0.07%)</title><rect x="87.98078242964986" y="1957" width="0.9821551132463967" height="15.0" fill="rgb(249,108,14)" rx="2" ry="2" _orig_x="141.2" _orig_width="0.9"/>
<text x="90.98078242964986" y="1967.5" _orig_x="144.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,865 samples, 1.17%)</title><rect x="739.0404941660945" y="1957" width="15.05971173644475" height="15.0" fill="rgb(249,123,43)" rx="2" ry="2" _orig_x="737.8" _orig_width="13.8"/>
<text x="742.0404941660945" y="1967.5" _orig_x="740.83"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (87 samples, 0.01%)</title><rect x="433.1640356897735" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(247,153,34)" rx="2" ry="2" _orig_x="511.3" _orig_width="0.1"/>
<text x="436.1640356897735" y="1839.5" _orig_x="514.29"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (165 samples, 0.02%)</title><rect x="695.5662319835278" y="1781" width="1.214824982841455" height="15.0" fill="rgb(249,99,18)" rx="2" ry="2" _orig_x="576.1" _orig_width="0.3"/>
<text x="698.5662319835278" y="1791.5" _orig_x="579.14"/>
</g>
<g class="hide">
<title>g_private_get (363 samples, 0.05%)</title><rect x="294.4516129032257" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(227,156,12)" rx="2" ry="2" _orig_x="330.4" _orig_width="0.6"/>
<text x="297.4516129032257" y="2047.5" _orig_x="333.37"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="101" width="1.091283459162663" height="15.0" fill="rgb(251,111,20)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="111.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="293" width="1.091283459162663" height="15.0" fill="rgb(220,121,6)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="303.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (143 samples, 0.02%)</title><rect x="89.07206588881252" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(236,113,40)" rx="2" ry="2" _orig_x="142.2" _orig_width="0.3"/>
<text x="92.07206588881252" y="1983.5" _orig_x="145.21"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (85 samples, 0.01%)</title><rect x="344.8867536032944" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(232,155,54)" rx="2" ry="2" _orig_x="489.5" _orig_width="0.2"/>
<text x="347.8867536032944" y="1775.5" _orig_x="492.53"/>
</g>
<g class="hide">
<title>[code] (112 samples, 0.02%)</title><rect x="86.12560054907334" y="1173" width="0.2182566918325326" height="15.0" fill="rgb(220,194,19)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1183.5" _orig_x="142.49"/>
</g>
<g>
<title>ReaderWriterLatch::WLock (69 samples, 0.01%)</title><rect x="337.19286204529857" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(207,32,52)" rx="2" ry="2" _orig_x="487.6" _orig_width="0.1"/>
<text x="340.19286204529857" y="1919.5" _orig_x="490.55"/>
</g>
<g class="hide">
<title>[code] (58 samples, 0.01%)</title><rect x="86.2347288949896" y="1077" width="0.1091283459162663" height="15.0" fill="rgb(246,140,24)" rx="2" ry="2" _orig_x="139.6" _orig_width="0.1"/>
<text x="89.2347288949896" y="1087.5" _orig_x="142.58"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (72 samples, 0.01%)</title><rect x="422.23061084420044" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(217,221,3)" rx="2" ry="2" _orig_x="508.6" _orig_width="0.1"/>
<text x="425.23061084420044" y="1711.5" _orig_x="511.58"/>
</g>
<g>
<title>[[kernel.kallsyms]] (526 samples, 0.08%)</title><rect x="54.94852436513369" y="1797" width="3.644474948524365" height="15.0" fill="rgb(206,208,17)" rx="2" ry="2" _orig_x="417.9" _orig_width="0.9"/>
<text x="57.94852436513369" y="1807.5" _orig_x="420.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (485 samples, 0.07%)</title><rect x="1167.0418668496911" y="1589" width="0.8730267673301304" height="15.0" fill="rgb(226,213,7)" rx="2" ry="2" _orig_x="1130.0" _orig_width="0.8"/>
<text x="1170.0418668496911" y="1599.5" _orig_x="1132.96"/>
</g>
<g class="hide">
<title>[unknown] (130 samples, 0.02%)</title><rect x="201.69251887439938" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(208,167,33)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.2"/>
<text x="204.69251887439938" y="1983.5" _orig_x="248.37"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="12.682223747426125" y="1797" width="0.2182566918325326" height="15.0" fill="rgb(227,136,21)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="15.682223747426125" y="1807.5" _orig_x="75.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (393 samples, 0.06%)</title><rect x="11.263555250514667" y="1941" width="0.7638984214138641" height="15.0" fill="rgb(251,3,6)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1951.5" _orig_x="73.91"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (160 samples, 0.02%)</title><rect x="50.49416609471517" y="1829" width="1.214824982841455" height="15.0" fill="rgb(252,68,17)" rx="2" ry="2" _orig_x="416.8" _orig_width="0.3"/>
<text x="53.49416609471517" y="1839.5" _orig_x="419.84"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (233 samples, 0.03%)</title><rect x="786.678105696637" y="1781" width="1.619766643788607" height="15.0" fill="rgb(240,198,30)" rx="2" ry="2" _orig_x="598.6" _orig_width="0.4"/>
<text x="789.678105696637" y="1791.5" _orig_x="601.63"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (130 samples, 0.02%)</title><rect x="550.1921757035004" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(227,160,46)" rx="2" ry="2" _orig_x="540.2" _orig_width="0.2"/>
<text x="553.1921757035004" y="1759.5" _orig_x="543.21"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (141 samples, 0.02%)</title><rect x="100.2031571722717" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(245,50,43)" rx="2" ry="2" _orig_x="152.4" _orig_width="0.3"/>
<text x="103.2031571722717" y="1951.5" _orig_x="155.43"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (101 samples, 0.01%)</title><rect x="121.1" y="2053" width="0.2" height="15.0" fill="rgb(205,217,42)" rx="2" ry="2"/>
<text x="124.13" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,829 samples, 0.27%)</title><rect x="99.89704873026761" y="1813" width="12.958133150308855" height="15.0" fill="rgb(224,54,23)" rx="2" ry="2" _orig_x="429.0" _orig_width="3.2"/>
<text x="102.89704873026761" y="1823.5" _orig_x="431.99"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (81 samples, 0.01%)</title><rect x="254.98970487302674" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(251,215,2)" rx="2" ry="2" _orig_x="467.3" _orig_width="0.2"/>
<text x="257.98970487302677" y="1903.5" _orig_x="470.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.02%)</title><rect x="10.60878517501706" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(223,159,32)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="1999.5" _orig_x="73.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.02%)</title><rect x="68.22855181880567" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(230,124,3)" rx="2" ry="2" _orig_x="123.1" _orig_width="0.3"/>
<text x="71.22855181880567" y="1887.5" _orig_x="126.12"/>
</g>
<g>
<title>[[kernel.kallsyms]] (719 samples, 0.11%)</title><rect x="720.2676733013042" y="1797" width="5.264241592312972" height="15.0" fill="rgb(240,167,42)" rx="2" ry="2" _orig_x="582.2" _orig_width="1.3"/>
<text x="723.2676733013042" y="1807.5" _orig_x="585.23"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (192 samples, 0.03%)</title><rect x="612.5531914893618" y="1845" width="1.619766643788607" height="15.0" fill="rgb(208,61,26)" rx="2" ry="2" _orig_x="555.6" _orig_width="0.4"/>
<text x="615.5531914893618" y="1855.5" _orig_x="558.62"/>
</g>
<g class="hide">
<title>[unknown] (1,123 samples, 0.17%)</title><rect x="58.73438572409051" y="277" width="2.182566918325326" height="15.0" fill="rgb(222,106,6)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="287.5" _orig_x="117.41"/>
</g>
<g>
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;TableHeap::cmp&gt;::operator (1,942 samples, 0.29%)</title><rect x="1130.0686341798214" y="1877" width="13.768016472203156" height="15.0" fill="rgb(222,113,23)" rx="2" ry="2" _orig_x="683.4" _orig_width="3.4"/>
<text x="1133.0686341798214" y="1887.5" _orig_x="686.36"/>
</g>
<g class="hide">
<title>log_write_notifier (60 samples, 0.01%)</title><rect x="308.092656142759" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(222,150,10)" rx="2" ry="2" _orig_x="342.9" _orig_width="0.1"/>
<text x="311.092656142759" y="1983.5" _orig_x="345.94"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,113 samples, 0.17%)</title><rect x="351.3074811256004" y="1909" width="2.0734385724090596" height="15.0" fill="rgb(205,124,5)" rx="2" ry="2" _orig_x="382.5" _orig_width="1.9"/>
<text x="354.3074811256004" y="1919.5" _orig_x="385.45"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (130 samples, 0.02%)</title><rect x="335.4" y="2053" width="0.2" height="15.0" fill="rgb(239,13,35)" rx="2" ry="2"/>
<text x="338.37" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (753 samples, 0.11%)</title><rect x="575.2985586822235" y="1797" width="5.669183253260123" height="15.0" fill="rgb(221,115,36)" rx="2" ry="2" _orig_x="546.4" _orig_width="1.4"/>
<text x="578.2985586822235" y="1807.5" _orig_x="549.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.01%)</title><rect x="174.51956074124902" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(220,98,28)" rx="2" ry="2" _orig_x="220.5" _orig_width="0.1"/>
<text x="177.51956074124902" y="1823.5" _orig_x="223.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="328.8270418668496" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(206,209,32)" rx="2" ry="2" _orig_x="361.9" _orig_width="0.1"/>
<text x="331.8270418668496" y="2015.5" _orig_x="364.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (548 samples, 0.08%)</title><rect x="64.08167467398755" y="1813" width="1.091283459162663" height="15.0" fill="rgb(233,11,20)" rx="2" ry="2" _orig_x="119.3" _orig_width="1.0"/>
<text x="67.08167467398755" y="1823.5" _orig_x="122.30"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (349 samples, 0.05%)</title><rect x="953.5140700068632" y="1813" width="2.42964996568291" height="15.0" fill="rgb(229,57,44)" rx="2" ry="2" _orig_x="639.8" _orig_width="0.6"/>
<text x="956.5140700068632" y="1823.5" _orig_x="642.78"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (508 samples, 0.08%)</title><rect x="655.4770075497598" y="1797" width="3.644474948524365" height="15.0" fill="rgb(226,181,54)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.9"/>
<text x="658.4770075497598" y="1807.5" _orig_x="569.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.03%)</title><rect x="84.48867536032935" y="1941" width="0.3273850377487989" height="15.0" fill="rgb(223,87,48)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1951.5" _orig_x="140.97"/>
</g>
<g class="hide">
<title>PtyGetProc (69 samples, 0.01%)</title><rect x="88.52642415923118" y="1797" width="0.1091283459162663" height="15.0" fill="rgb(213,199,26)" rx="2" ry="2" _orig_x="141.7" _orig_width="0.1"/>
<text x="91.52642415923118" y="1807.5" _orig_x="144.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="13.4" y="1957" width="0.1" height="15.0" fill="rgb(240,15,51)" rx="2" ry="2"/>
<text x="16.36" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="56.9" y="1909" width="0.1" height="15.0" fill="rgb(241,23,10)" rx="2" ry="2"/>
<text x="59.87" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (2,290 samples, 0.34%)</title><rect x="85.03431708991069" y="2037" width="4.365133836650652" height="15.0" fill="rgb(228,20,38)" rx="2" ry="2" _orig_x="138.5" _orig_width="4.0"/>
<text x="88.03431708991069" y="2047.5" _orig_x="141.46"/>
</g>
<g class="hide">
<title>[unknown] (1,161 samples, 0.17%)</title><rect x="58.73438572409051" y="1893" width="2.182566918325326" height="15.0" fill="rgb(219,152,46)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1903.5" _orig_x="117.39"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="997" width="1.091283459162663" height="15.0" fill="rgb(205,165,36)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1007.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[code] (431 samples, 0.06%)</title><rect x="16.4" y="1893" width="0.8" height="15.0" fill="rgb(232,212,33)" rx="2" ry="2"/>
<text x="19.42" y="1903.5"/>
</g>
<g class="hide">
<title>__GI___libc_open (85 samples, 0.01%)</title><rect x="809.9739190116677" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(222,150,31)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="2047.5" _orig_x="805.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (266 samples, 0.04%)</title><rect x="47.6" y="1797" width="0.5" height="15.0" fill="rgb(210,154,12)" rx="2" ry="2"/>
<text x="50.61" y="1807.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (187 samples, 0.03%)</title><rect x="167.11736444749488" y="1717" width="1.214824982841455" height="15.0" fill="rgb(210,161,51)" rx="2" ry="2" _orig_x="445.6" _orig_width="0.3"/>
<text x="170.11736444749488" y="1727.5" _orig_x="448.59"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_Hash_node (132 samples, 0.02%)</title><rect x="837.295813315031" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(245,74,54)" rx="2" ry="2" _orig_x="611.1" _orig_width="0.2"/>
<text x="840.295813315031" y="1759.5" _orig_x="614.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="307.4378860672614" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(254,214,51)" rx="2" ry="2" _orig_x="342.3" _orig_width="0.2"/>
<text x="310.4378860672614" y="1999.5" _orig_x="345.32"/>
</g>
<g>
<title>std::__detail::_Hash_node&lt;void*, false&gt;::_M_next (85 samples, 0.01%)</title><rect x="1020.3294440631432" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(225,59,34)" rx="2" ry="2" _orig_x="656.3" _orig_width="0.1"/>
<text x="1023.3294440631432" y="1839.5" _orig_x="659.30"/>
</g>
<g>
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (325 samples, 0.05%)</title><rect x="594.7357584076872" y="1797" width="2.42964996568291" height="15.0" fill="rgb(220,77,30)" rx="2" ry="2" _orig_x="551.2" _orig_width="0.6"/>
<text x="597.7357584076872" y="1807.5" _orig_x="554.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (169 samples, 0.03%)</title><rect x="331.6643788606725" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(249,210,44)" rx="2" ry="2" _orig_x="364.5" _orig_width="0.3"/>
<text x="334.6643788606725" y="1919.5" _orig_x="367.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (124 samples, 0.02%)</title><rect x="1182.6" y="2005" width="0.3" height="15.0" fill="rgb(225,147,47)" rx="2" ry="2"/>
<text x="1185.64" y="2015.5"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_Hash_node_value_base (74 samples, 0.01%)</title><rect x="837.7007549759782" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(246,65,34)" rx="2" ry="2" _orig_x="611.2" _orig_width="0.1"/>
<text x="840.7007549759782" y="1743.5" _orig_x="614.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,749 samples, 0.56%)</title><rect x="45.62264150943405" y="1973" width="24.11949685534591" height="15.0" fill="rgb(237,60,33)" rx="2" ry="2" _orig_x="400.3" _orig_width="6.5"/>
<text x="48.62264150943405" y="1983.5" _orig_x="403.25">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="809.9739190116677" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(237,135,52)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1951.5" _orig_x="805.84"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (158 samples, 0.02%)</title><rect x="464.34454358270415" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(240,226,54)" rx="2" ry="2" _orig_x="519.0" _orig_width="0.2"/>
<text x="467.34454358270415" y="1759.5" _orig_x="521.96"/>
</g>
<g class="hide">
<title>iwl_pcie_rx_handle_rb.constprop.0 (69 samples, 0.01%)</title><rect x="328.28140013726824" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(246,56,25)" rx="2" ry="2" _orig_x="361.4" _orig_width="0.2"/>
<text x="331.28140013726824" y="1967.5" _orig_x="364.45"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (60 samples, 0.01%)</title><rect x="72.36101578586127" y="1669" width="0.4049416609471517" height="15.0" fill="rgb(248,22,17)" rx="2" ry="2" _orig_x="422.2" _orig_width="0.1"/>
<text x="75.36101578586127" y="1679.5" _orig_x="425.24"/>
</g>
<g class="hide">
<title>[code] (101 samples, 0.01%)</title><rect x="132.72340425531905" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(228,27,11)" rx="2" ry="2" _orig_x="182.2" _orig_width="0.2"/>
<text x="135.72340425531905" y="1967.5" _orig_x="185.18"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (401 samples, 0.06%)</title><rect x="652.2374742621824" y="1797" width="2.8345916266300617" height="15.0" fill="rgb(212,161,23)" rx="2" ry="2" _orig_x="565.4" _orig_width="0.7"/>
<text x="655.2374742621824" y="1807.5" _orig_x="568.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (563 samples, 0.08%)</title><rect x="486.2113932738502" y="1781" width="4.049416609471517" height="15.0" fill="rgb(229,92,5)" rx="2" ry="2" _orig_x="524.4" _orig_width="1.0"/>
<text x="489.2113932738502" y="1791.5" _orig_x="527.38"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (1,137 samples, 0.17%)</title><rect x="402.3884694577899" y="1781" width="8.098833218943033" height="15.0" fill="rgb(217,160,37)" rx="2" ry="2" _orig_x="503.7" _orig_width="2.0"/>
<text x="405.3884694577899" y="1791.5" _orig_x="506.74"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (230 samples, 0.03%)</title><rect x="81.26973232669853" y="1733" width="1.619766643788607" height="15.0" fill="rgb(232,38,13)" rx="2" ry="2" _orig_x="424.4" _orig_width="0.4"/>
<text x="84.26973232669853" y="1743.5" _orig_x="427.39"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (98 samples, 0.01%)</title><rect x="802.4708304735758" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(226,16,44)" rx="2" ry="2" _orig_x="602.5" _orig_width="0.2"/>
<text x="805.4708304735758" y="1791.5" _orig_x="605.53"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (620 samples, 0.09%)</title><rect x="797.206588881263" y="1765" width="4.454358270418669" height="15.0" fill="rgb(222,113,49)" rx="2" ry="2" _orig_x="601.2" _orig_width="1.1"/>
<text x="800.206588881263" y="1775.5" _orig_x="604.20"/>
</g>
<g>
<title>Row::Row (185 samples, 0.03%)</title><rect x="42.80027453671915" y="1845" width="1.214824982841455" height="15.0" fill="rgb(231,85,34)" rx="2" ry="2" _orig_x="414.9" _orig_width="0.3"/>
<text x="45.80027453671915" y="1855.5" _orig_x="417.90"/>
</g>
<g class="hide">
<title>[code] (1,035 samples, 0.15%)</title><rect x="85.14344543582693" y="1829" width="1.9643102264927934" height="15.0" fill="rgb(236,19,16)" rx="2" ry="2" _orig_x="138.6" _orig_width="1.8"/>
<text x="88.14344543582693" y="1839.5" _orig_x="141.63"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1397" width="1.091283459162663" height="15.0" fill="rgb(226,126,11)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1407.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (58 samples, 0.01%)</title><rect x="255.39464653397374" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(211,125,47)" rx="2" ry="2" _orig_x="467.4" _orig_width="0.1"/>
<text x="258.39464653397374" y="1855.5" _orig_x="470.35"/>
</g>
<g class="hide">
<title>[unknown] (2,053 samples, 0.30%)</title><rect x="709.3575840768702" y="2037" width="3.8194921070693204" height="15.0" fill="rgb(254,121,53)" rx="2" ry="2" _orig_x="710.6" _orig_width="3.5"/>
<text x="712.3575840768702" y="2047.5" _orig_x="713.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="305.91008922443365" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(254,12,12)" rx="2" ry="2" _orig_x="340.9" _orig_width="0.1"/>
<text x="308.91008922443365" y="2015.5" _orig_x="343.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (667 samples, 0.10%)</title><rect x="362.6" y="2053" width="1.2" height="15.0" fill="rgb(213,15,36)" rx="2" ry="2"/>
<text x="365.60" y="2063.5"/>
</g>
<g>
<title>std::__uninitialized_copy_a&lt;Field const*, Field*, Field&gt; (58 samples, 0.01%)</title><rect x="1103.3424845573093" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(218,213,1)" rx="2" ry="2" _orig_x="676.8" _orig_width="0.1"/>
<text x="1106.3424845573093" y="1887.5" _orig_x="679.79"/>
</g>
<g class="hide">
<title>malloc_consolidate (172 samples, 0.03%)</title><rect x="795.1" y="2053" width="0.3" height="15.0" fill="rgb(234,110,15)" rx="2" ry="2"/>
<text x="798.08" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,081 samples, 0.16%)</title><rect x="806.0452985586821" y="1861" width="2.0734385724090596" height="15.0" fill="rgb(208,175,13)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1871.5" _orig_x="802.18"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (847 samples, 0.13%)</title><rect x="44.42004118050789" y="1829" width="5.669183253260123" height="15.0" fill="rgb(208,79,12)" rx="2" ry="2" _orig_x="415.3" _orig_width="1.4"/>
<text x="47.42004118050789" y="1839.5" _orig_x="418.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (260 samples, 0.04%)</title><rect x="12.354838709677331" y="1877" width="0.5456417295813315" height="15.0" fill="rgb(231,32,25)" rx="2" ry="2" _orig_x="71.9" _orig_width="0.5"/>
<text x="15.354838709677331" y="1887.5" _orig_x="74.91"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (74 samples, 0.01%)</title><rect x="995.6280027453673" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(243,117,29)" rx="2" ry="2" _orig_x="650.2" _orig_width="0.1"/>
<text x="998.6280027453673" y="1903.5" _orig_x="653.19"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,056 samples, 0.16%)</title><rect x="84.91420727522306" y="1797" width="7.693891557995882" height="15.0" fill="rgb(216,95,16)" rx="2" ry="2" _orig_x="425.3" _orig_width="1.9"/>
<text x="87.91420727522306" y="1807.5" _orig_x="428.31"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="197" width="1.091283459162663" height="15.0" fill="rgb(225,195,53)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="207.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (332 samples, 0.05%)</title><rect x="777.1262868908716" y="1765" width="0.6547700754975978" height="15.0" fill="rgb(232,204,22)" rx="2" ry="2" _orig_x="772.7" _orig_width="0.6"/>
<text x="780.1262868908716" y="1775.5" _orig_x="775.70"/>
</g>
<g class="hide">
<title>VM_Periodic_Tas (377 samples, 0.06%)</title><rect x="72.6" y="2069" width="0.7" height="15.0" fill="rgb(224,58,33)" rx="2" ry="2"/>
<text x="75.61" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (117 samples, 0.02%)</title><rect x="38.75085792724762" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(252,22,30)" rx="2" ry="2" _orig_x="413.9" _orig_width="0.2"/>
<text x="41.75085792724762" y="1807.5" _orig_x="416.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.01%)</title><rect x="223.40905971173635" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(247,229,15)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="2015.5" _orig_x="268.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (77 samples, 0.01%)</title><rect x="85.72409059711732" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(228,100,41)" rx="2" ry="2" _orig_x="425.5" _orig_width="0.1"/>
<text x="88.72409059711732" y="1743.5" _orig_x="428.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (134 samples, 0.02%)</title><rect x="309.1839396019216" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(224,218,13)" rx="2" ry="2" _orig_x="343.9" _orig_width="0.3"/>
<text x="312.1839396019216" y="1967.5" _orig_x="346.94"/>
</g>
<g>
<title>operator delete (92 samples, 0.01%)</title><rect x="1069.3273850377486" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(244,113,51)" rx="2" ry="2" _orig_x="668.4" _orig_width="0.2"/>
<text x="1072.3273850377486" y="1903.5" _orig_x="671.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (251 samples, 0.04%)</title><rect x="335.15648592999304" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(242,159,25)" rx="2" ry="2" _orig_x="367.7" _orig_width="0.5"/>
<text x="338.15648592999304" y="1983.5" _orig_x="370.73"/>
</g>
<g class="hide">
<title>[unknown] (108 samples, 0.02%)</title><rect x="22.0" y="2053" width="0.2" height="15.0" fill="rgb(250,18,45)" rx="2" ry="2"/>
<text x="24.98" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1029" width="1.091283459162663" height="15.0" fill="rgb(245,17,34)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1039.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>g_source_ref (81 samples, 0.01%)</title><rect x="217.2978723404254" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(237,204,13)" rx="2" ry="2" _orig_x="259.7" _orig_width="0.2"/>
<text x="220.2978723404254" y="2047.5" _orig_x="262.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,065 samples, 0.16%)</title><rect x="176.15648592999304" y="1973" width="2.0734385724090596" height="15.0" fill="rgb(243,91,20)" rx="2" ry="2" _orig_x="222.0" _orig_width="1.9"/>
<text x="179.15648592999304" y="1983.5" _orig_x="225.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="21.6" y="1973" width="0.3" height="15.0" fill="rgb(236,54,31)" rx="2" ry="2"/>
<text x="24.59" y="1983.5"/>
</g>
<g class="hide">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (73 samples, 0.01%)</title><rect x="58.3" y="2053" width="0.1" height="15.0" fill="rgb(241,219,35)" rx="2" ry="2"/>
<text x="61.31" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (322 samples, 0.05%)</title><rect x="864.831846259437" y="1877" width="2.42964996568291" height="15.0" fill="rgb(218,215,20)" rx="2" ry="2" _orig_x="617.9" _orig_width="0.6"/>
<text x="867.831846259437" y="1887.5" _orig_x="620.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="805.7179135209333" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(243,163,23)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1967.5" _orig_x="801.87"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="901" width="1.091283459162663" height="15.0" fill="rgb(234,20,35)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="911.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (422 samples, 0.06%)</title><rect x="96.16540837336983" y="1861" width="0.7638984214138641" height="15.0" fill="rgb(214,23,15)" rx="2" ry="2" _orig_x="148.7" _orig_width="0.7"/>
<text x="99.16540837336983" y="1871.5" _orig_x="151.67"/>
</g>
<g class="hide">
<title>ntfs_attr_get_search_ctx (97 samples, 0.01%)</title><rect x="785.3109128345916" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(217,15,36)" rx="2" ry="2" _orig_x="780.2" _orig_width="0.2"/>
<text x="788.3109128345916" y="2047.5" _orig_x="783.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,964 samples, 0.29%)</title><rect x="356.43651338366493" y="1941" width="3.8194921070693204" height="15.0" fill="rgb(209,2,54)" rx="2" ry="2" _orig_x="387.2" _orig_width="3.5"/>
<text x="359.43651338366493" y="1951.5" _orig_x="390.21"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="501" width="2.182566918325326" height="15.0" fill="rgb(236,26,10)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="511.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (66 samples, 0.01%)</title><rect x="14.6" y="1909" width="0.1" height="15.0" fill="rgb(216,113,37)" rx="2" ry="2"/>
<text x="17.62" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (792 samples, 0.12%)</title><rect x="82.96087851750161" y="1829" width="1.418668496911462" height="15.0" fill="rgb(238,8,52)" rx="2" ry="2" _orig_x="136.6" _orig_width="1.3"/>
<text x="85.96087851750161" y="1839.5" _orig_x="139.55"/>
</g>
<g class="hide">
<title>_nv018050rm (63 samples, 0.01%)</title><rect x="1176.7" y="2053" width="0.1" height="15.0" fill="rgb(206,219,47)" rx="2" ry="2"/>
<text x="1179.73" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (63 samples, 0.01%)</title><rect x="306.0123541523677" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(249,204,27)" rx="2" ry="2" _orig_x="479.9" _orig_width="0.1"/>
<text x="309.0123541523677" y="1887.5" _orig_x="482.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.01%)</title><rect x="311.9121482498283" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(240,227,33)" rx="2" ry="2" _orig_x="346.4" _orig_width="0.2"/>
<text x="314.9121482498283" y="2031.5" _orig_x="349.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="1167.735849056604" y="1973" width="0.7421383647798743" height="15.0" fill="rgb(208,178,46)" rx="2" ry="2" _orig_x="702.7" _orig_width="0.2"/>
<text x="1170.735849056604" y="1983.5" _orig_x="705.74"/>
</g>
<g class="hide">
<title>_nv023484rm (78 samples, 0.01%)</title><rect x="349.6" y="2053" width="0.1" height="15.0" fill="rgb(226,142,53)" rx="2" ry="2"/>
<text x="352.61" y="2063.5"/>
</g>
<g class="hide">
<title>g_string_insert_unichar (743 samples, 0.11%)</title><rect x="337.9" y="2053" width="1.3" height="15.0" fill="rgb(244,154,37)" rx="2" ry="2"/>
<text x="340.90" y="2063.5"/>
</g>
<g class="hide">
<title>[libmutter-cogl-6.so.0.0.0] (106 samples, 0.02%)</title><rect x="196.3452299245023" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(206,104,22)" rx="2" ry="2" _orig_x="240.5" _orig_width="0.2"/>
<text x="199.3452299245023" y="2031.5" _orig_x="243.51"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (1,051 samples, 0.16%)</title><rect x="1032.477693891558" y="1797" width="7.28894989704873" height="15.0" fill="rgb(218,174,35)" rx="2" ry="2" _orig_x="659.3" _orig_width="1.8"/>
<text x="1035.477693891558" y="1807.5" _orig_x="662.28"/>
</g>
<g class="hide">
<title>cfree@GLIBC_2.2.5 (108 samples, 0.02%)</title><rect x="784.8743994509264" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(254,223,2)" rx="2" ry="2" _orig_x="779.8" _orig_width="0.2"/>
<text x="787.8743994509264" y="2047.5" _orig_x="782.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (261 samples, 0.04%)</title><rect x="174.19217570350023" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(206,91,45)" rx="2" ry="2" _orig_x="220.2" _orig_width="0.4"/>
<text x="177.19217570350023" y="1967.5" _orig_x="223.16"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (8,113 samples, 1.20%)</title><rect x="713.5044612216883" y="2037" width="15.496225120109814" height="15.0" fill="rgb(211,20,1)" rx="2" ry="2" _orig_x="714.4" _orig_width="14.2"/>
<text x="716.5044612216883" y="2047.5" _orig_x="717.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (75 samples, 0.01%)</title><rect x="212.605353466026" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(216,7,34)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1967.5" _orig_x="258.43"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (100 samples, 0.01%)</title><rect x="653.8572409059709" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(225,124,39)" rx="2" ry="2" _orig_x="565.8" _orig_width="0.2"/>
<text x="656.8572409059709" y="1775.5" _orig_x="568.80"/>
</g>
<g>
<title>[[kernel.kallsyms]] (656 samples, 0.10%)</title><rect x="720.6726149622509" y="1765" width="4.85929993136582" height="15.0" fill="rgb(235,178,11)" rx="2" ry="2" _orig_x="582.3" _orig_width="1.2"/>
<text x="723.6726149622509" y="1775.5" _orig_x="585.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="56.9" y="1957" width="0.1" height="15.0" fill="rgb(206,156,51)" rx="2" ry="2"/>
<text x="59.85" y="1967.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (60 samples, 0.01%)</title><rect x="330.7137954701441" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(223,8,28)" rx="2" ry="2" _orig_x="486.0" _orig_width="0.1"/>
<text x="333.7137954701441" y="1951.5" _orig_x="488.95"/>
</g>
<g class="hide">
<title>kworker/0:2-eve (667 samples, 0.10%)</title><rect x="362.6" y="2069" width="1.2" height="15.0" fill="rgb(234,154,8)" rx="2" ry="2"/>
<text x="365.60" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (199 samples, 0.03%)</title><rect x="810.5195607412489" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(228,94,3)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="2047.5" _orig_x="806.31"/>
</g>
<g class="hide">
<title>jni_invoke_nonstatic (262 samples, 0.04%)</title><rect x="20.4" y="1973" width="0.5" height="15.0" fill="rgb(240,57,35)" rx="2" ry="2"/>
<text x="23.45" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.02%)</title><rect x="58.0" y="2005" width="0.2" height="15.0" fill="rgb(205,61,7)" rx="2" ry="2"/>
<text x="60.97" y="2015.5"/>
</g>
<g>
<title>std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt;::push_back (77 samples, 0.01%)</title><rect x="1155.984900480439" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(205,26,46)" rx="2" ry="2" _orig_x="689.8" _orig_width="0.2"/>
<text x="1158.984900480439" y="1935.5" _orig_x="692.83"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (598 samples, 0.09%)</title><rect x="180.84900480439248" y="1973" width="1.091283459162663" height="15.0" fill="rgb(247,66,9)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1983.5" _orig_x="229.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (710 samples, 0.11%)</title><rect x="176.81125600549066" y="1893" width="1.418668496911462" height="15.0" fill="rgb(231,226,38)" rx="2" ry="2" _orig_x="222.6" _orig_width="1.3"/>
<text x="179.81125600549066" y="1903.5" _orig_x="225.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (172 samples, 0.03%)</title><rect x="337.1207961564858" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(226,90,33)" rx="2" ry="2" _orig_x="369.5" _orig_width="0.3"/>
<text x="340.1207961564858" y="1967.5" _orig_x="372.54"/>
</g>
<g>
<title>IndexKey::SerializeFromKey (313 samples, 0.05%)</title><rect x="709.7391901166782" y="1941" width="2.0247083047357584" height="15.0" fill="rgb(232,84,13)" rx="2" ry="2" _orig_x="579.6" _orig_width="0.5"/>
<text x="712.7391901166782" y="1951.5" _orig_x="582.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="133" width="0.1091283459162663" height="15.0" fill="rgb(226,139,6)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="143.5" _orig_x="118.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="179.97597803706233" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(221,56,8)" rx="2" ry="2" _orig_x="225.5" _orig_width="0.2"/>
<text x="182.97597803706233" y="1951.5" _orig_x="228.53"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="2021" width="0.2" height="15.0" fill="rgb(215,127,50)" rx="2" ry="2"/>
<text x="17.74" y="2031.5"/>
</g>
<g class="hide">
<title>[code] (2,290 samples, 0.34%)</title><rect x="85.03431708991069" y="2021" width="4.365133836650652" height="15.0" fill="rgb(208,119,14)" rx="2" ry="2" _orig_x="138.5" _orig_width="4.0"/>
<text x="88.03431708991069" y="2031.5" _orig_x="141.46"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1925" width="0.1" height="15.0" fill="rgb(218,214,51)" rx="2" ry="2"/>
<text x="33.98" y="1935.5"/>
</g>
<g class="hide">
<title>[github-desktop] (93 samples, 0.01%)</title><rect x="175.6108442004117" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(252,56,43)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1999.5" _orig_x="224.45"/>
</g>
<g class="hide">
<title>JavaThread::thread_main_inner (64 samples, 0.01%)</title><rect x="13.8" y="2005" width="0.1" height="15.0" fill="rgb(211,180,13)" rx="2" ry="2"/>
<text x="16.77" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="56.8" y="1989" width="0.2" height="15.0" fill="rgb(235,205,32)" rx="2" ry="2"/>
<text x="59.85" y="1999.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (89 samples, 0.01%)</title><rect x="675.3191489361703" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(237,23,10)" rx="2" ry="2" _orig_x="571.1" _orig_width="0.1"/>
<text x="678.3191489361703" y="1823.5" _orig_x="574.06"/>
</g>
<g>
<title>std::_Destroy&lt;char*, char&gt; (59 samples, 0.01%)</title><rect x="120.54907343857245" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(217,143,2)" rx="2" ry="2" _orig_x="434.1" _orig_width="0.1"/>
<text x="123.54907343857245" y="1823.5" _orig_x="437.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,801 samples, 0.27%)</title><rect x="794.3685655456417" y="1957" width="3.4921070693205216" height="15.0" fill="rgb(251,17,28)" rx="2" ry="2" _orig_x="788.5" _orig_width="3.2"/>
<text x="797.3685655456417" y="1967.5" _orig_x="791.53"/>
</g>
<g class="hide">
<title>[code] (60 samples, 0.01%)</title><rect x="101.94921070693195" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(208,127,29)" rx="2" ry="2" _orig_x="154.0" _orig_width="0.1"/>
<text x="104.94921070693195" y="1967.5" _orig_x="157.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (824 samples, 0.12%)</title><rect x="64.9" y="2021" width="1.5" height="15.0" fill="rgb(246,36,41)" rx="2" ry="2"/>
<text x="67.92" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (178 samples, 0.03%)</title><rect x="334.6108442004117" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(253,21,0)" rx="2" ry="2" _orig_x="367.2" _orig_width="0.4"/>
<text x="337.6108442004117" y="1935.5" _orig_x="370.24"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (483 samples, 0.07%)</title><rect x="376.47220315717226" y="1797" width="3.239533287577214" height="15.0" fill="rgb(250,75,35)" rx="2" ry="2" _orig_x="497.3" _orig_width="0.8"/>
<text x="379.47220315717226" y="1807.5" _orig_x="500.30"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1,566 samples, 0.23%)</title><rect x="485.4015099519562" y="1797" width="11.338366506520247" height="15.0" fill="rgb(242,175,2)" rx="2" ry="2" _orig_x="524.2" _orig_width="2.8"/>
<text x="488.4015099519562" y="1807.5" _orig_x="527.23"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (104 samples, 0.02%)</title><rect x="1096.0535346602608" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(215,55,33)" rx="2" ry="2" _orig_x="675.0" _orig_width="0.2"/>
<text x="1099.0535346602608" y="1887.5" _orig_x="678.04"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (152 samples, 0.02%)</title><rect x="269.2" y="2053" width="0.2" height="15.0" fill="rgb(237,21,47)" rx="2" ry="2"/>
<text x="272.16" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="21.8" y="1845" width="0.1" height="15.0" fill="rgb(222,1,37)" rx="2" ry="2"/>
<text x="24.82" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (398 samples, 0.06%)</title><rect x="11.263555250514667" y="1989" width="0.7638984214138641" height="15.0" fill="rgb(252,32,45)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1999.5" _orig_x="73.90"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (68 samples, 0.01%)</title><rect x="1144.6465339739188" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(220,131,9)" rx="2" ry="2" _orig_x="687.0" _orig_width="0.1"/>
<text x="1147.6465339739188" y="1823.5" _orig_x="689.96"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (373 samples, 0.06%)</title><rect x="344.07687028140015" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(221,89,18)" rx="2" ry="2" _orig_x="489.3" _orig_width="0.7"/>
<text x="347.07687028140015" y="1839.5" _orig_x="492.33"/>
</g>
<g class="hide">
<title>g_slice_alloc (389 samples, 0.06%)</title><rect x="266.6" y="2053" width="0.7" height="15.0" fill="rgb(241,117,34)" rx="2" ry="2"/>
<text x="269.60" y="2063.5"/>
</g>
<g>
<title>std::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;void*, true, false&gt;, bool, true&gt; (105 samples, 0.02%)</title><rect x="852.6835964310226" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(234,12,44)" rx="2" ry="2" _orig_x="614.9" _orig_width="0.2"/>
<text x="855.6835964310226" y="1791.5" _orig_x="617.94"/>
</g>
<g class="hide">
<title>[unknown] (7,262 samples, 1.08%)</title><rect x="195.58133150308845" y="2037" width="13.85929993136582" height="15.0" fill="rgb(227,175,39)" rx="2" ry="2" _orig_x="239.8" _orig_width="12.7"/>
<text x="198.58133150308845" y="2047.5" _orig_x="242.78"/>
</g>
<g>
<title>[[kernel.kallsyms]] (587 samples, 0.09%)</title><rect x="721.4824982841454" y="1749" width="4.049416609471517" height="15.0" fill="rgb(243,140,36)" rx="2" ry="2" _orig_x="582.5" _orig_width="1.0"/>
<text x="724.4824982841454" y="1759.5" _orig_x="585.46"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (133 samples, 0.02%)</title><rect x="200.81949210706924" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(230,5,35)" rx="2" ry="2" _orig_x="244.6" _orig_width="0.2"/>
<text x="203.81949210706924" y="2015.5" _orig_x="247.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,192 samples, 0.47%)</title><rect x="373.9" y="2053" width="5.6" height="15.0" fill="rgb(227,185,20)" rx="2" ry="2"/>
<text x="376.87" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (245 samples, 0.04%)</title><rect x="14.755662319835176" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(242,154,23)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1935.5" _orig_x="77.08"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (60 samples, 0.01%)</title><rect x="196.12697323266977" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(248,88,9)" rx="2" ry="2" _orig_x="240.3" _orig_width="0.1"/>
<text x="199.12697323266977" y="2031.5" _orig_x="243.26"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (64 samples, 0.01%)</title><rect x="1065.2779684282773" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(223,127,11)" rx="2" ry="2" _orig_x="667.4" _orig_width="0.1"/>
<text x="1068.2779684282773" y="1887.5" _orig_x="670.36"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (135 samples, 0.02%)</title><rect x="1052.7247769389153" y="1749" width="1.214824982841455" height="15.0" fill="rgb(218,215,9)" rx="2" ry="2" _orig_x="664.3" _orig_width="0.3"/>
<text x="1055.7247769389153" y="1759.5" _orig_x="667.33"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (82 samples, 0.01%)</title><rect x="305.20247083047343" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(213,54,17)" rx="2" ry="2" _orig_x="479.7" _orig_width="0.1"/>
<text x="308.20247083047343" y="1887.5" _orig_x="482.70"/>
</g>
<g class="hide">
<title>[unknown] (141 samples, 0.02%)</title><rect x="342.8" y="2053" width="0.2" height="15.0" fill="rgb(250,63,12)" rx="2" ry="2"/>
<text x="345.80" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (712 samples, 0.11%)</title><rect x="65.1" y="1973" width="1.3" height="15.0" fill="rgb(224,101,46)" rx="2" ry="2"/>
<text x="68.11" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (98 samples, 0.01%)</title><rect x="15.9" y="1717" width="0.2" height="15.0" fill="rgb(251,121,53)" rx="2" ry="2"/>
<text x="18.90" y="1727.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (159 samples, 0.02%)</title><rect x="57.2" y="1941" width="0.3" height="15.0" fill="rgb(218,178,54)" rx="2" ry="2"/>
<text x="60.21" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,722 samples, 0.40%)</title><rect x="52.301886792452954" y="1877" width="17.440251572327046" height="15.0" fill="rgb(217,148,46)" rx="2" ry="2" _orig_x="402.1" _orig_width="4.7"/>
<text x="55.301886792452954" y="1887.5" _orig_x="405.05"/>
</g>
<g class="hide">
<title>[perf-105834.map] (995 samples, 0.15%)</title><rect x="10.0" y="2053" width="1.8" height="15.0" fill="rgb(248,158,30)" rx="2" ry="2"/>
<text x="13.04" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (177 samples, 0.03%)</title><rect x="87.54426904598482" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(230,78,24)" rx="2" ry="2" _orig_x="140.8" _orig_width="0.3"/>
<text x="90.54426904598482" y="1935.5" _orig_x="143.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (271 samples, 0.04%)</title><rect x="194.7083047357583" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(247,5,49)" rx="2" ry="2" _orig_x="239.0" _orig_width="0.5"/>
<text x="197.7083047357583" y="1967.5" _orig_x="242.00"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (60 samples, 0.01%)</title><rect x="430.7343857240905" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(213,118,31)" rx="2" ry="2" _orig_x="510.7" _orig_width="0.1"/>
<text x="433.7343857240905" y="1823.5" _orig_x="513.73"/>
</g>
<g>
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (91 samples, 0.01%)</title><rect x="1175.4221002059028" y="1973" width="0.8098833218943035" height="15.0" fill="rgb(232,21,1)" rx="2" ry="2" _orig_x="694.6" _orig_width="0.2"/>
<text x="1178.4221002059028" y="1983.5" _orig_x="697.62"/>
</g>
<g class="hide">
<title>__libc_recvmsg (582 samples, 0.09%)</title><rect x="262.3" y="2053" width="1.0" height="15.0" fill="rgb(245,164,35)" rx="2" ry="2"/>
<text x="265.27" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (125 samples, 0.02%)</title><rect x="86.12560054907334" y="1189" width="0.2182566918325326" height="15.0" fill="rgb(211,217,45)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1199.5" _orig_x="142.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="66.15511324639661" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(211,6,18)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1935.5" _orig_x="124.18"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (1,088 samples, 0.16%)</title><rect x="242.61564859299918" y="2037" width="2.0734385724090596" height="15.0" fill="rgb(235,54,2)" rx="2" ry="2" _orig_x="282.9" _orig_width="1.9"/>
<text x="245.61564859299918" y="2047.5" _orig_x="285.91"/>
</g>
<g class="hide">
<title>__pthread_rwlock_unlock (67 samples, 0.01%)</title><rect x="712.8496911461906" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(241,93,44)" rx="2" ry="2" _orig_x="713.8" _orig_width="0.1"/>
<text x="715.8496911461906" y="2031.5" _orig_x="716.75"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (233 samples, 0.03%)</title><rect x="268.35277968428284" y="1765" width="1.619766643788607" height="15.0" fill="rgb(242,67,43)" rx="2" ry="2" _orig_x="470.6" _orig_width="0.4"/>
<text x="271.35277968428284" y="1775.5" _orig_x="473.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="14.5" y="1845" width="0.1" height="15.0" fill="rgb(227,114,34)" rx="2" ry="2"/>
<text x="17.48" y="1855.5"/>
</g>
<g class="hide">
<title>[unknown] (186 samples, 0.03%)</title><rect x="30.9" y="2021" width="0.3" height="15.0" fill="rgb(219,49,0)" rx="2" ry="2"/>
<text x="33.92" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="1185.2" y="1813" width="0.2" height="15.0" fill="rgb(207,32,9)" rx="2" ry="2"/>
<text x="1188.19" y="1823.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="789" width="1.091283459162663" height="15.0" fill="rgb(228,155,25)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="799.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>ntfs_mbstoucs (217 samples, 0.03%)</title><rect x="792.2951269732325" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(216,104,45)" rx="2" ry="2" _orig_x="786.6" _orig_width="0.3"/>
<text x="795.2951269732325" y="2047.5" _orig_x="789.56"/>
</g>
<g class="hide">
<title>__libc_start_main (1,405 samples, 0.21%)</title><rect x="798.7" y="2053" width="2.5" height="15.0" fill="rgb(235,207,10)" rx="2" ry="2"/>
<text x="801.74" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (68 samples, 0.01%)</title><rect x="278.8812628689086" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(207,204,33)" rx="2" ry="2" _orig_x="473.2" _orig_width="0.1"/>
<text x="281.8812628689086" y="1823.5" _orig_x="476.17"/>
</g>
<g class="hide">
<title>[code] (128 samples, 0.02%)</title><rect x="66.6" y="2005" width="0.3" height="15.0" fill="rgb(218,166,43)" rx="2" ry="2"/>
<text x="69.63" y="2015.5"/>
</g>
<g class="hide">
<title>Monitor_File_Ti (116 samples, 0.02%)</title><rect x="23.2" y="2069" width="0.2" height="15.0" fill="rgb(220,101,32)" rx="2" ry="2"/>
<text x="26.19" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (327 samples, 0.05%)</title><rect x="332.42827728208636" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(223,168,18)" rx="2" ry="2" _orig_x="365.2" _orig_width="0.6"/>
<text x="335.42827728208636" y="1967.5" _orig_x="368.22"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (437 samples, 0.06%)</title><rect x="499.5744680851065" y="1845" width="3.239533287577214" height="15.0" fill="rgb(234,14,31)" rx="2" ry="2" _orig_x="527.7" _orig_width="0.8"/>
<text x="502.5744680851065" y="1855.5" _orig_x="530.70"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (138 samples, 0.02%)</title><rect x="118.11942347288945" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(209,124,53)" rx="2" ry="2" _orig_x="433.5" _orig_width="0.2"/>
<text x="121.11942347288945" y="1759.5" _orig_x="436.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (207 samples, 0.03%)</title><rect x="340.5037748798901" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(225,8,35)" rx="2" ry="2" _orig_x="372.6" _orig_width="0.3"/>
<text x="343.5037748798901" y="1935.5" _orig_x="375.57"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (76 samples, 0.01%)</title><rect x="325.04461221688405" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(228,189,15)" rx="2" ry="2" _orig_x="484.6" _orig_width="0.2"/>
<text x="328.04461221688405" y="1871.5" _orig_x="487.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (999 samples, 0.15%)</title><rect x="1183.6" y="2021" width="1.8" height="15.0" fill="rgb(214,178,10)" rx="2" ry="2"/>
<text x="1186.64" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.01%)</title><rect x="66.15511324639661" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(248,110,7)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="2015.5" _orig_x="124.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (93 samples, 0.01%)</title><rect x="1119.5401509951953" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(222,100,15)" rx="2" ry="2" _orig_x="680.8" _orig_width="0.2"/>
<text x="1122.5401509951953" y="1887.5" _orig_x="683.84"/>
</g>
<g class="hide">
<title>[perf-105834.map] (64 samples, 0.01%)</title><rect x="13.8" y="1909" width="0.1" height="15.0" fill="rgb(251,189,6)" rx="2" ry="2"/>
<text x="16.77" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (513 samples, 0.08%)</title><rect x="61.46259437199716" y="1893" width="0.9821551132463967" height="15.0" fill="rgb(219,142,6)" rx="2" ry="2" _orig_x="116.9" _orig_width="0.9"/>
<text x="64.46259437199717" y="1903.5" _orig_x="119.91"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (309 samples, 0.05%)</title><rect x="202.34728894989706" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(233,173,14)" rx="2" ry="2" _orig_x="454.3" _orig_width="0.5"/>
<text x="205.34728894989706" y="1791.5" _orig_x="457.30"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1221" width="1.091283459162663" height="15.0" fill="rgb(242,213,4)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1231.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (183 samples, 0.03%)</title><rect x="248.91557995881948" y="1845" width="1.214824982841455" height="15.0" fill="rgb(241,151,28)" rx="2" ry="2" _orig_x="465.8" _orig_width="0.3"/>
<text x="251.91557995881948" y="1855.5" _orig_x="468.80"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1125" width="2.182566918325326" height="15.0" fill="rgb(239,199,34)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1135.5" _orig_x="117.41"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (393 samples, 0.06%)</title><rect x="1147.0761839396018" y="1845" width="2.8345916266300617" height="15.0" fill="rgb(221,203,2)" rx="2" ry="2" _orig_x="687.6" _orig_width="0.7"/>
<text x="1150.0761839396018" y="1855.5" _orig_x="690.62"/>
</g>
<g class="hide">
<title>Unsafe_Park (220 samples, 0.03%)</title><rect x="69.0" y="2005" width="0.3" height="15.0" fill="rgb(230,132,20)" rx="2" ry="2"/>
<text x="71.96" y="2015.5"/>
</g>
<g>
<title>DiskManager::ReadPage (899 samples, 0.13%)</title><rect x="719.4577899794097" y="1909" width="6.479066575154428" height="15.0" fill="rgb(241,199,24)" rx="2" ry="2" _orig_x="582.0" _orig_width="1.6"/>
<text x="722.4577899794097" y="1919.5" _orig_x="585.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (386 samples, 0.06%)</title><rect x="332.3191489361701" y="1973" width="0.7638984214138641" height="15.0" fill="rgb(227,4,34)" rx="2" ry="2" _orig_x="365.1" _orig_width="0.7"/>
<text x="335.3191489361701" y="1983.5" _orig_x="368.12"/>
</g>
<g class="hide">
<title>[unknown] (220 samples, 0.03%)</title><rect x="72.6" y="2053" width="0.4" height="15.0" fill="rgb(235,158,28)" rx="2" ry="2"/>
<text x="75.63" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (81 samples, 0.01%)</title><rect x="653.8572409059709" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(207,105,42)" rx="2" ry="2" _orig_x="565.8" _orig_width="0.1"/>
<text x="656.8572409059709" y="1759.5" _orig_x="568.80"/>
</g>
<g class="hide">
<title>ntfs_fetch_cache (127 samples, 0.02%)</title><rect x="737.7309540150994" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(207,75,20)" rx="2" ry="2" _orig_x="736.6" _orig_width="0.2"/>
<text x="740.7309540150994" y="2015.5" _orig_x="739.57"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (58 samples, 0.01%)</title><rect x="351.77076183939596" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(216,15,13)" rx="2" ry="2" _orig_x="491.2" _orig_width="0.1"/>
<text x="354.77076183939596" y="1823.5" _orig_x="494.22"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,289 samples, 0.19%)</title><rect x="18.503774879890045" y="1749" width="8.908716540837338" height="15.0" fill="rgb(225,176,21)" rx="2" ry="2" _orig_x="408.9" _orig_width="2.2"/>
<text x="21.503774879890045" y="1759.5" _orig_x="411.86"/>
</g>
<g class="hide">
<title>[perf-105834.map] (71 samples, 0.01%)</title><rect x="63.3" y="2005" width="0.1" height="15.0" fill="rgb(241,111,46)" rx="2" ry="2"/>
<text x="66.27" y="2015.5"/>
</g>
<g class="hide">
<title>[unknown] (76 samples, 0.01%)</title><rect x="201.69251887439938" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(240,126,18)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1951.5" _orig_x="248.40"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (121 samples, 0.02%)</title><rect x="30.7" y="2021" width="0.2" height="15.0" fill="rgb(215,214,9)" rx="2" ry="2"/>
<text x="33.71" y="2031.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1413" width="2.182566918325326" height="15.0" fill="rgb(247,194,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1423.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="837" width="2.182566918325326" height="15.0" fill="rgb(230,119,32)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="847.5" _orig_x="117.41"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (441 samples, 0.07%)</title><rect x="467.58407687028114" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(207,4,7)" rx="2" ry="2" _orig_x="519.8" _orig_width="0.7"/>
<text x="470.58407687028114" y="1839.5" _orig_x="522.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="62.5" y="1957" width="0.1" height="15.0" fill="rgb(242,129,14)" rx="2" ry="2"/>
<text x="65.50" y="1967.5"/>
</g>
<g class="hide">
<title>__GI___ioctl (594 samples, 0.09%)</title><rect x="209.54975978037055" y="2037" width="1.2004118050789294" height="15.0" fill="rgb(210,18,53)" rx="2" ry="2" _orig_x="252.6" _orig_width="1.1"/>
<text x="212.54975978037055" y="2047.5" _orig_x="255.61"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (94 samples, 0.01%)</title><rect x="260.6588881262868" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(209,35,3)" rx="2" ry="2" _orig_x="468.7" _orig_width="0.1"/>
<text x="263.6588881262868" y="1743.5" _orig_x="471.67"/>
</g>
<g class="hide">
<title>__poll (7,568 samples, 1.12%)</title><rect x="274.3719972546327" y="2037" width="14.514070006863419" height="15.0" fill="rgb(228,95,44)" rx="2" ry="2" _orig_x="312.0" _orig_width="13.3"/>
<text x="277.3719972546327" y="2047.5" _orig_x="315.02"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (987 samples, 0.15%)</title><rect x="915.449553877831" y="1813" width="7.28894989704873" height="15.0" fill="rgb(249,129,10)" rx="2" ry="2" _orig_x="630.4" _orig_width="1.8"/>
<text x="918.449553877831" y="1823.5" _orig_x="633.45"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::end (66 samples, 0.01%)</title><rect x="560.7206588881261" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(234,111,3)" rx="2" ry="2" _orig_x="542.8" _orig_width="0.1"/>
<text x="563.7206588881261" y="1855.5" _orig_x="545.80"/>
</g>
<g>
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="355.82017844886747" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(224,160,3)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1871.5" _orig_x="495.24"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (130 samples, 0.02%)</title><rect x="1120.35003431709" y="1861" width="1.214824982841455" height="15.0" fill="rgb(228,110,51)" rx="2" ry="2" _orig_x="681.0" _orig_width="0.3"/>
<text x="1123.35003431709" y="1871.5" _orig_x="684.02"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::_Node_iterator (105 samples, 0.02%)</title><rect x="1023.9739190116679" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(254,225,47)" rx="2" ry="2" _orig_x="657.2" _orig_width="0.2"/>
<text x="1026.973919011668" y="1839.5" _orig_x="660.20"/>
</g>
<g>
<title>ExecuteEngine::ExecuteCreateIndex (49,448 samples, 7.34%)</title><rect x="11.619766643788502" y="1973" width="350.6794783802333" height="15.0" fill="rgb(227,125,28)" rx="2" ry="2" _orig_x="407.2" _orig_width="86.6"/>
<text x="14.619766643788502" y="1983.5" _orig_x="410.19">ExecuteEngine::ExecuteCreateIndex </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (365 samples, 0.05%)</title><rect x="336.2477693891557" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(241,96,16)" rx="2" ry="2" _orig_x="368.7" _orig_width="0.6"/>
<text x="339.2477693891557" y="1967.5" _orig_x="371.69"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (533 samples, 0.08%)</title><rect x="807.0274536719286" y="1717" width="1.091283459162663" height="15.0" fill="rgb(251,200,30)" rx="2" ry="2" _orig_x="800.1" _orig_width="1.0"/>
<text x="810.0274536719286" y="1727.5" _orig_x="803.14"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (153 samples, 0.02%)</title><rect x="992.7934111187371" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(213,9,35)" rx="2" ry="2" _orig_x="649.5" _orig_width="0.2"/>
<text x="995.7934111187371" y="1903.5" _orig_x="652.47"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,351 samples, 0.20%)</title><rect x="174.0013726835964" y="1765" width="9.71859986273164" height="15.0" fill="rgb(227,97,37)" rx="2" ry="2" _orig_x="447.3" _orig_width="2.4"/>
<text x="177.0013726835964" y="1775.5" _orig_x="450.34"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1173" width="2.182566918325326" height="15.0" fill="rgb(253,100,52)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1183.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_base (105 samples, 0.02%)</title><rect x="128.6479066575155" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(237,200,12)" rx="2" ry="2" _orig_x="436.1" _orig_width="0.2"/>
<text x="131.6479066575155" y="1839.5" _orig_x="439.09"/>
</g>
<g class="hide">
<title>__memcmp_avx2_movbe (116 samples, 0.02%)</title><rect x="99.98490048043915" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(226,10,12)" rx="2" ry="2" _orig_x="152.2" _orig_width="0.2"/>
<text x="102.98490048043915" y="1951.5" _orig_x="155.23"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (243 samples, 0.04%)</title><rect x="476.49279341111867" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(208,97,26)" rx="2" ry="2" _orig_x="522.0" _orig_width="0.5"/>
<text x="479.49279341111867" y="1839.5" _orig_x="525.03"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (61 samples, 0.01%)</title><rect x="795.586822237474" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(210,220,0)" rx="2" ry="2" _orig_x="600.8" _orig_width="0.1"/>
<text x="798.586822237474" y="1775.5" _orig_x="603.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="53.71448181194225" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(218,97,45)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="1983.5" _orig_x="112.81"/>
</g>
<g class="hide">
<title>[github-desktop] (59 samples, 0.01%)</title><rect x="16.2" y="1877" width="0.1" height="15.0" fill="rgb(228,150,5)" rx="2" ry="2"/>
<text x="19.18" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (91 samples, 0.01%)</title><rect x="66.04598490048033" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(236,163,17)" rx="2" ry="2" _orig_x="121.1" _orig_width="0.2"/>
<text x="69.04598490048033" y="2031.5" _orig_x="124.15"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (63 samples, 0.01%)</title><rect x="461.50995195607385" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(239,141,6)" rx="2" ry="2" _orig_x="518.3" _orig_width="0.1"/>
<text x="464.50995195607385" y="1807.5" _orig_x="521.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="59.82566918325317" y="37" width="0.2182566918325326" height="15.0" fill="rgb(239,228,23)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="47.5" _orig_x="118.44"/>
</g>
<g class="hide">
<title>[perf-123031.map] (198 samples, 0.03%)</title><rect x="86.67124227865467" y="1573" width="0.4365133836650652" height="15.0" fill="rgb(234,20,33)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1583.5" _orig_x="143.03"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (81 samples, 0.01%)</title><rect x="838.9155799588195" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(249,92,37)" rx="2" ry="2" _orig_x="611.5" _orig_width="0.1"/>
<text x="841.9155799588195" y="1759.5" _orig_x="614.48"/>
</g>
<g class="hide">
<title>[github-desktop] (171 samples, 0.03%)</title><rect x="178.44818119423465" y="1781" width="0.3273850377487989" height="15.0" fill="rgb(224,98,29)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.3"/>
<text x="181.44818119423465" y="1791.5" _orig_x="227.05"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (10,239 samples, 1.52%)</title><rect x="153.34934797529158" y="1877" width="72.48455730954014" height="15.0" fill="rgb(239,195,29)" rx="2" ry="2" _orig_x="442.2" _orig_width="17.9"/>
<text x="156.34934797529158" y="1887.5" _orig_x="445.21">IndexKey..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,205 samples, 0.18%)</title><rect x="357.8551818805764" y="1893" width="2.400823610157859" height="15.0" fill="rgb(220,89,23)" rx="2" ry="2" _orig_x="388.5" _orig_width="2.2"/>
<text x="360.8551818805764" y="1903.5" _orig_x="391.54"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="805.7179135209333" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(254,225,47)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1983.5" _orig_x="801.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (127 samples, 0.02%)</title><rect x="12.57309540150985" y="1813" width="0.3273850377487989" height="15.0" fill="rgb(209,17,7)" rx="2" ry="2" _orig_x="72.1" _orig_width="0.3"/>
<text x="15.57309540150985" y="1823.5" _orig_x="75.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (582 samples, 0.09%)</title><rect x="36.345911949685615" y="1925" width="4.081761006289309" height="15.0" fill="rgb(211,51,47)" rx="2" ry="2" _orig_x="397.8" _orig_width="1.1"/>
<text x="39.345911949685615" y="1935.5" _orig_x="400.83"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::destroy&lt;void*&gt; (58 samples, 0.01%)</title><rect x="628.3459162663006" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(207,6,44)" rx="2" ry="2" _orig_x="559.5" _orig_width="0.1"/>
<text x="631.3459162663006" y="1759.5" _orig_x="562.47"/>
</g>
<g class="hide">
<title>g_main_context_check (295 samples, 0.04%)</title><rect x="215.98833218943022" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(221,117,14)" rx="2" ry="2" _orig_x="258.5" _orig_width="0.5"/>
<text x="218.98833218943022" y="2047.5" _orig_x="261.46"/>
</g>
<g class="hide">
<title>g_type_check_instance_cast (258 samples, 0.04%)</title><rect x="217.51612903225794" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(218,60,49)" rx="2" ry="2" _orig_x="259.9" _orig_width="0.5"/>
<text x="220.51612903225794" y="2047.5" _orig_x="262.92"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (116 samples, 0.02%)</title><rect x="994.8181194234729" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(237,229,51)" rx="2" ry="2" _orig_x="650.0" _orig_width="0.2"/>
<text x="997.8181194234729" y="1903.5" _orig_x="652.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (916 samples, 0.14%)</title><rect x="152.91214824982828" y="1845" width="1.7460535346602608" height="15.0" fill="rgb(222,64,48)" rx="2" ry="2" _orig_x="200.7" _orig_width="1.6"/>
<text x="155.91214824982828" y="1855.5" _orig_x="203.74"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (402 samples, 0.06%)</title><rect x="197.65477007549748" y="2005" width="0.7638984214138641" height="15.0" fill="rgb(237,59,47)" rx="2" ry="2" _orig_x="241.7" _orig_width="0.7"/>
<text x="200.65477007549748" y="2015.5" _orig_x="244.68"/>
</g>
<g class="hide">
<title>[code] (590 samples, 0.09%)</title><rect x="85.47083047357575" y="1701" width="1.091283459162663" height="15.0" fill="rgb(253,33,53)" rx="2" ry="2" _orig_x="138.9" _orig_width="1.0"/>
<text x="88.47083047357575" y="1711.5" _orig_x="141.88"/>
</g>
<g class="hide">
<title>start_thread (252 samples, 0.04%)</title><rect x="74.1" y="2053" width="0.4" height="15.0" fill="rgb(229,45,46)" rx="2" ry="2"/>
<text x="77.08" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (59 samples, 0.01%)</title><rect x="668.8400823610157" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(230,86,48)" rx="2" ry="2" _orig_x="569.5" _orig_width="0.1"/>
<text x="671.8400823610157" y="1871.5" _orig_x="572.54"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (284 samples, 0.04%)</title><rect x="416.5614275909402" y="1685" width="2.0247083047357584" height="15.0" fill="rgb(254,150,25)" rx="2" ry="2" _orig_x="507.2" _orig_width="0.5"/>
<text x="419.5614275909402" y="1695.5" _orig_x="510.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (131 samples, 0.02%)</title><rect x="347.70624571036365" y="1749" width="0.2182566918325326" height="15.0" fill="rgb(220,11,20)" rx="2" ry="2" _orig_x="379.2" _orig_width="0.2"/>
<text x="350.70624571036365" y="1759.5" _orig_x="382.21"/>
</g>
<g class="hide">
<title>[perf-105834.map] (60 samples, 0.01%)</title><rect x="13.8" y="1877" width="0.1" height="15.0" fill="rgb(229,187,19)" rx="2" ry="2"/>
<text x="16.78" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="53.71448181194225" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(211,217,35)" rx="2" ry="2" _orig_x="109.8" _orig_width="0.2"/>
<text x="56.71448181194225" y="1999.5" _orig_x="112.81"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (774 samples, 0.11%)</title><rect x="796.8016472203158" y="1781" width="5.264241592312972" height="15.0" fill="rgb(240,127,15)" rx="2" ry="2" _orig_x="601.1" _orig_width="1.3"/>
<text x="799.8016472203158" y="1791.5" _orig_x="604.08"/>
</g>
<g>
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, DBStorageEngine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (309 samples, 0.05%)</title><rect x="1160.4392587508578" y="1941" width="2.0247083047357584" height="15.0" fill="rgb(215,200,5)" rx="2" ry="2" _orig_x="690.9" _orig_width="0.5"/>
<text x="1163.4392587508578" y="1951.5" _orig_x="693.88"/>
</g>
<g class="hide">
<title>malloc (130 samples, 0.02%)</title><rect x="267.5" y="2053" width="0.2" height="15.0" fill="rgb(213,203,46)" rx="2" ry="2"/>
<text x="270.52" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, unsigned long, false&gt;::_S_equals (91 samples, 0.01%)</title><rect x="1098.4831846259437" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(221,214,48)" rx="2" ry="2" _orig_x="675.6" _orig_width="0.1"/>
<text x="1101.4831846259437" y="1871.5" _orig_x="678.59"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (608 samples, 0.09%)</title><rect x="32.27179135209333" y="1781" width="4.454358270418669" height="15.0" fill="rgb(223,218,28)" rx="2" ry="2" _orig_x="412.3" _orig_width="1.1"/>
<text x="35.27179135209333" y="1791.5" _orig_x="415.31"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (118 samples, 0.02%)</title><rect x="1133.3081674673988" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(226,111,22)" rx="2" ry="2" _orig_x="684.2" _orig_width="0.2"/>
<text x="1136.3081674673988" y="1759.5" _orig_x="687.17"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (730 samples, 0.11%)</title><rect x="1134.9279341111874" y="1829" width="5.264241592312972" height="15.0" fill="rgb(239,159,50)" rx="2" ry="2" _orig_x="684.6" _orig_width="1.3"/>
<text x="1137.9279341111874" y="1839.5" _orig_x="687.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (25,835 samples, 3.84%)</title><rect x="1119.13452299245" y="1845" width="49.32601235415237" height="15.0" fill="rgb(235,106,17)" rx="2" ry="2" _orig_x="1086.1" _orig_width="45.2"/>
<text x="1122.13452299245" y="1855.5" _orig_x="1089.08">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.01%)</title><rect x="11.918325326012258" y="1717" width="0.1091283459162663" height="15.0" fill="rgb(246,92,50)" rx="2" ry="2" _orig_x="71.5" _orig_width="0.1"/>
<text x="14.918325326012258" y="1727.5" _orig_x="74.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,043 samples, 0.15%)</title><rect x="345.9601921757034" y="1877" width="1.9643102264927934" height="15.0" fill="rgb(239,123,14)" rx="2" ry="2" _orig_x="377.6" _orig_width="1.8"/>
<text x="348.9601921757034" y="1887.5" _orig_x="380.61"/>
</g>
<g class="hide">
<title>[unknown] (1,147 samples, 0.17%)</title><rect x="58.73438572409051" y="389" width="2.182566918325326" height="15.0" fill="rgb(220,168,50)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="399.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (256 samples, 0.04%)</title><rect x="695.5662319835278" y="1797" width="1.619766643788607" height="15.0" fill="rgb(252,150,41)" rx="2" ry="2" _orig_x="576.1" _orig_width="0.4"/>
<text x="698.5662319835278" y="1807.5" _orig_x="579.10"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (74 samples, 0.01%)</title><rect x="128.6479066575155" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(251,82,2)" rx="2" ry="2" _orig_x="436.1" _orig_width="0.1"/>
<text x="131.6479066575155" y="1823.5" _orig_x="439.12"/>
</g>
<g class="hide">
<title>_dbus_connection_unlock (64 samples, 0.01%)</title><rect x="289.54083733699366" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(252,216,53)" rx="2" ry="2" _orig_x="325.9" _orig_width="0.1"/>
<text x="292.54083733699366" y="2047.5" _orig_x="328.88"/>
</g>
<g class="hide">
<title>[code] (74 samples, 0.01%)</title><rect x="14.42827728208638" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(214,21,4)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1839.5" _orig_x="76.79"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="201.69251887439938" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(211,161,1)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1871.5" _orig_x="248.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (589 samples, 0.09%)</title><rect x="157.38641043239522" y="1973" width="1.091283459162663" height="15.0" fill="rgb(245,181,38)" rx="2" ry="2" _orig_x="204.8" _orig_width="1.0"/>
<text x="160.38641043239522" y="1983.5" _orig_x="207.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (391 samples, 0.06%)</title><rect x="11.263555250514667" y="1925" width="0.7638984214138641" height="15.0" fill="rgb(218,54,41)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1935.5" _orig_x="73.91"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (192 samples, 0.03%)</title><rect x="106.20521619766635" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(233,73,50)" rx="2" ry="2" _orig_x="157.9" _orig_width="0.3"/>
<text x="109.20521619766635" y="1983.5" _orig_x="160.90"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (130 samples, 0.02%)</title><rect x="414.5367192862044" y="1717" width="1.214824982841455" height="15.0" fill="rgb(246,88,32)" rx="2" ry="2" _orig_x="506.7" _orig_width="0.3"/>
<text x="417.5367192862044" y="1727.5" _orig_x="509.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="168.40837336993815" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(245,94,0)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="2031.5" _orig_x="217.93"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (77 samples, 0.01%)</title><rect x="1116.7055593685654" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(212,21,6)" rx="2" ry="2" _orig_x="680.1" _orig_width="0.2"/>
<text x="1119.7055593685654" y="1887.5" _orig_x="683.14"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (71 samples, 0.01%)</title><rect x="780.6039807824297" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(216,19,33)" rx="2" ry="2" _orig_x="597.1" _orig_width="0.1"/>
<text x="783.6039807824297" y="1791.5" _orig_x="600.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,429 samples, 0.21%)</title><rect x="286.1578586135895" y="1861" width="2.7282086479066576" height="15.0" fill="rgb(229,226,21)" rx="2" ry="2" _orig_x="322.8" _orig_width="2.5"/>
<text x="289.1578586135895" y="1871.5" _orig_x="325.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="56.6" y="1845" width="0.1" height="15.0" fill="rgb(231,57,30)" rx="2" ry="2"/>
<text x="59.56" y="1855.5"/>
</g>
<g class="hide">
<title>[code] (436 samples, 0.06%)</title><rect x="85.579958819492" y="1653" width="0.7638984214138641" height="15.0" fill="rgb(235,111,54)" rx="2" ry="2" _orig_x="139.0" _orig_width="0.7"/>
<text x="88.579958819492" y="1663.5" _orig_x="141.98"/>
</g>
<g class="hide">
<title>[code] (436 samples, 0.06%)</title><rect x="88.08991077556615" y="1925" width="0.7638984214138641" height="15.0" fill="rgb(240,15,42)" rx="2" ry="2" _orig_x="141.3" _orig_width="0.7"/>
<text x="91.08991077556615" y="1935.5" _orig_x="144.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="14.6" y="1845" width="0.1" height="15.0" fill="rgb(222,168,13)" rx="2" ry="2"/>
<text x="17.63" y="1855.5"/>
</g>
<g class="hide">
<title>g_type_check_instance_is_a (159 samples, 0.02%)</title><rect x="189.36101578586127" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(238,206,38)" rx="2" ry="2" _orig_x="234.1" _orig_width="0.3"/>
<text x="192.36101578586127" y="2015.5" _orig_x="237.07"/>
</g>
<g class="hide">
<title>__select (293 samples, 0.04%)</title><rect x="174.08304735758398" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(248,130,37)" rx="2" ry="2" _orig_x="220.1" _orig_width="0.5"/>
<text x="177.08304735758398" y="2047.5" _orig_x="223.10"/>
</g>
<g>
<title>[libminisql_shared.so] (59 samples, 0.01%)</title><rect x="359.0597117364447" y="1957" width="0.4049416609471517" height="15.0" fill="rgb(211,157,30)" rx="2" ry="2" _orig_x="493.0" _orig_width="0.1"/>
<text x="362.0597117364447" y="1967.5" _orig_x="495.98"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (58 samples, 0.01%)</title><rect x="469.60878517501686" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(227,163,13)" rx="2" ry="2" _orig_x="520.3" _orig_width="0.1"/>
<text x="472.60878517501686" y="1775.5" _orig_x="523.35"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,119 samples, 0.91%)</title><rect x="1165.3" y="1813" width="10.7" height="15.0" fill="rgb(228,6,35)" rx="2" ry="2"/>
<text x="1168.25" y="1823.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (707 samples, 0.10%)</title><rect x="369.1832532601235" y="1733" width="4.85929993136582" height="15.0" fill="rgb(210,123,40)" rx="2" ry="2" _orig_x="495.5" _orig_width="1.2"/>
<text x="372.1832532601235" y="1743.5" _orig_x="498.46"/>
</g>
<g class="hide">
<title>[unknown] (70 samples, 0.01%)</title><rect x="31.0" y="2005" width="0.1" height="15.0" fill="rgb(210,150,2)" rx="2" ry="2"/>
<text x="33.97" y="2015.5"/>
</g>
<g class="hide">
<title>[code] (1,181 samples, 0.18%)</title><rect x="85.03431708991069" y="1877" width="2.2916952642415924" height="15.0" fill="rgb(252,136,26)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1887.5" _orig_x="141.49"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="56.9" y="1925" width="0.1" height="15.0" fill="rgb(209,61,4)" rx="2" ry="2"/>
<text x="59.86" y="1935.5"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (604 samples, 0.09%)</title><rect x="160.98764584763202" y="2037" width="1.091283459162663" height="15.0" fill="rgb(217,100,17)" rx="2" ry="2" _orig_x="208.1" _orig_width="1.0"/>
<text x="163.98764584763202" y="2047.5" _orig_x="211.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="334.8291008922442" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(245,123,46)" rx="2" ry="2" _orig_x="367.4" _orig_width="0.2"/>
<text x="337.8291008922442" y="1903.5" _orig_x="370.43"/>
</g>
<g>
<title>std::move&lt;Field*&amp;&gt; (64 samples, 0.01%)</title><rect x="872.5257378174329" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(214,90,35)" rx="2" ry="2" _orig_x="619.8" _orig_width="0.1"/>
<text x="875.5257378174329" y="1887.5" _orig_x="622.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (305 samples, 0.05%)</title><rect x="221.33562113932726" y="1989" width="0.6547700754975978" height="15.0" fill="rgb(206,44,47)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="224.33562113932726" y="1999.5" _orig_x="266.42"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (68 samples, 0.01%)</title><rect x="506.8634179821551" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(236,170,44)" rx="2" ry="2" _orig_x="529.5" _orig_width="0.1"/>
<text x="509.8634179821551" y="1839.5" _orig_x="532.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (193 samples, 0.03%)</title><rect x="84.48867536032935" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(226,4,37)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="2031.5" _orig_x="140.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="59.82566918325317" y="53" width="0.2182566918325326" height="15.0" fill="rgb(226,94,30)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="63.5" _orig_x="118.44"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (133 samples, 0.02%)</title><rect x="1055.1544269045983" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(228,73,5)" rx="2" ry="2" _orig_x="664.9" _orig_width="0.2"/>
<text x="1058.1544269045983" y="1791.5" _orig_x="667.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (350 samples, 0.05%)</title><rect x="37.83018867924528" y="1861" width="2.59748427672956" height="15.0" fill="rgb(214,51,7)" rx="2" ry="2" _orig_x="398.2" _orig_width="0.7"/>
<text x="40.83018867924528" y="1871.5" _orig_x="401.24"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (2,192 samples, 0.33%)</title><rect x="367.968428277282" y="1845" width="15.387783115991764" height="15.0" fill="rgb(249,1,33)" rx="2" ry="2" _orig_x="495.2" _orig_width="3.8"/>
<text x="370.968428277282" y="1855.5" _orig_x="498.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (132 samples, 0.02%)</title><rect x="1167.6966369251886" y="1557" width="0.2182566918325326" height="15.0" fill="rgb(209,32,25)" rx="2" ry="2" _orig_x="1130.6" _orig_width="0.2"/>
<text x="1170.6966369251886" y="1567.5" _orig_x="1133.58"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (91 samples, 0.01%)</title><rect x="174.8112560054907" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(209,76,8)" rx="2" ry="2" _orig_x="447.5" _orig_width="0.1"/>
<text x="177.8112560054907" y="1759.5" _orig_x="450.46"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="853" width="2.182566918325326" height="15.0" fill="rgb(227,68,27)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="863.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="2005" width="48.67124227865477" height="15.0" fill="rgb(207,11,1)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="2015.5" _orig_x="1134.37">[unknown] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="223.40905971173635" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(240,66,52)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="1983.5" _orig_x="268.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (183 samples, 0.03%)</title><rect x="1167.364779874214" y="2037" width="1.1132075471698113" height="15.0" fill="rgb(221,66,11)" rx="2" ry="2" _orig_x="702.6" _orig_width="0.3"/>
<text x="1170.364779874214" y="2047.5" _orig_x="705.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,801 samples, 0.56%)</title><rect x="45.25157232704402" y="2021" width="24.49056603773585" height="15.0" fill="rgb(227,134,5)" rx="2" ry="2" _orig_x="400.2" _orig_width="6.6"/>
<text x="48.25157232704402" y="2031.5" _orig_x="403.16">[..</text>
</g>
<g>
<title>TypeChar::DeserializeFrom (450 samples, 0.07%)</title><rect x="652.2374742621824" y="1845" width="3.239533287577214" height="15.0" fill="rgb(210,132,25)" rx="2" ry="2" _orig_x="565.4" _orig_width="0.8"/>
<text x="655.2374742621824" y="1855.5" _orig_x="568.37"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1157" width="2.182566918325326" height="15.0" fill="rgb(214,112,40)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1167.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (314 samples, 0.05%)</title><rect x="331.44612216883996" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(226,57,24)" rx="2" ry="2" _orig_x="364.3" _orig_width="0.5"/>
<text x="334.44612216883996" y="1951.5" _orig_x="367.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (611 samples, 0.09%)</title><rect x="61.24433768016463" y="2005" width="1.2004118050789294" height="15.0" fill="rgb(236,4,0)" rx="2" ry="2" _orig_x="116.7" _orig_width="1.1"/>
<text x="64.24433768016462" y="2015.5" _orig_x="119.73"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (144 samples, 0.02%)</title><rect x="618.627316403569" y="1829" width="1.214824982841455" height="15.0" fill="rgb(237,141,30)" rx="2" ry="2" _orig_x="557.1" _orig_width="0.3"/>
<text x="621.627316403569" y="1839.5" _orig_x="560.12"/>
</g>
<g class="hide">
<title>[libgjs.so.0.0.0] (253 samples, 0.04%)</title><rect x="186.74193548387083" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(234,152,26)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="2047.5" _orig_x="234.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (393 samples, 0.06%)</title><rect x="1175.2" y="1637" width="0.7" height="15.0" fill="rgb(246,0,9)" rx="2" ry="2"/>
<text x="1178.25" y="1647.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="565" width="1.091283459162663" height="15.0" fill="rgb(223,215,46)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="575.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>__strlen_avx2 (85 samples, 0.01%)</title><rect x="162.95195607412484" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(226,48,27)" rx="2" ry="2" _orig_x="209.9" _orig_width="0.1"/>
<text x="165.95195607412484" y="2047.5" _orig_x="212.88"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (221 samples, 0.03%)</title><rect x="1059.6087851750171" y="1813" width="1.619766643788607" height="15.0" fill="rgb(252,219,42)" rx="2" ry="2" _orig_x="666.0" _orig_width="0.4"/>
<text x="1062.6087851750171" y="1823.5" _orig_x="668.97"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_Hashtable_alloc (91 samples, 0.01%)</title><rect x="611.3383665065201" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(225,99,14)" rx="2" ry="2" _orig_x="555.3" _orig_width="0.1"/>
<text x="614.3383665065201" y="1823.5" _orig_x="558.25"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::operator* (60 samples, 0.01%)</title><rect x="861.1873713109128" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(231,11,25)" rx="2" ry="2" _orig_x="617.0" _orig_width="0.1"/>
<text x="864.1873713109128" y="1887.5" _orig_x="620.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (938 samples, 0.14%)</title><rect x="1158.830188679245" y="1957" width="5.937106918238994" height="15.0" fill="rgb(212,210,38)" rx="2" ry="2" _orig_x="700.3" _orig_width="1.6"/>
<text x="1161.830188679245" y="1967.5" _orig_x="703.26"/>
</g>
<g class="hide">
<title>[perf-123031.map] (217 samples, 0.03%)</title><rect x="86.67124227865467" y="1669" width="0.4365133836650652" height="15.0" fill="rgb(237,62,10)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1679.5" _orig_x="143.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (198 samples, 0.03%)</title><rect x="299.25326012354145" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(221,216,51)" rx="2" ry="2" _orig_x="334.8" _orig_width="0.3"/>
<text x="302.25326012354145" y="1887.5" _orig_x="337.80"/>
</g>
<g class="hide">
<title>[Xorg] (150 samples, 0.02%)</title><rect x="58.95264241592303" y="37" width="0.3273850377487989" height="15.0" fill="rgb(225,72,32)" rx="2" ry="2" _orig_x="114.6" _orig_width="0.3"/>
<text x="61.95264241592303" y="47.5" _orig_x="117.64"/>
</g>
<g class="hide">
<title>operator new[] (487 samples, 0.07%)</title><rect x="132.9416609471516" y="1957" width="0.8730267673301304" height="15.0" fill="rgb(253,63,36)" rx="2" ry="2" _orig_x="182.4" _orig_width="0.8"/>
<text x="135.9416609471516" y="1967.5" _orig_x="185.36"/>
</g>
<g class="hide">
<title>[github-desktop] (81 samples, 0.01%)</title><rect x="175.6108442004117" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(212,102,32)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1967.5" _orig_x="224.47"/>
</g>
<g class="hide">
<title>ntfs_calloc (61 samples, 0.01%)</title><rect x="788.366506520247" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(248,114,52)" rx="2" ry="2" _orig_x="783.0" _orig_width="0.1"/>
<text x="791.366506520247" y="2047.5" _orig_x="785.97"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (76 samples, 0.01%)</title><rect x="970.5216197666437" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(206,49,22)" rx="2" ry="2" _orig_x="644.0" _orig_width="0.1"/>
<text x="973.5216197666437" y="1839.5" _orig_x="647.00"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (268 samples, 0.04%)</title><rect x="1153.5552505147564" y="1829" width="1.619766643788607" height="15.0" fill="rgb(240,197,12)" rx="2" ry="2" _orig_x="689.2" _orig_width="0.4"/>
<text x="1156.5552505147564" y="1839.5" _orig_x="692.18"/>
</g>
<g class="hide">
<title>[perf-123031.map] (64 samples, 0.01%)</title><rect x="86.45298558682215" y="1125" width="0.1091283459162663" height="15.0" fill="rgb(222,126,13)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1135.5" _orig_x="142.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (783 samples, 0.12%)</title><rect x="212.93273850377474" y="1973" width="1.5277968428277282" height="15.0" fill="rgb(250,79,35)" rx="2" ry="2" _orig_x="255.7" _orig_width="1.4"/>
<text x="215.93273850377474" y="1983.5" _orig_x="258.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (135 samples, 0.02%)</title><rect x="35.106382978723346" y="1765" width="1.214824982841455" height="15.0" fill="rgb(241,51,31)" rx="2" ry="2" _orig_x="413.0" _orig_width="0.3"/>
<text x="38.106382978723346" y="1775.5" _orig_x="416.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (269 samples, 0.04%)</title><rect x="174.08304735758398" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(206,146,54)" rx="2" ry="2" _orig_x="220.1" _orig_width="0.5"/>
<text x="177.08304735758398" y="1999.5" _orig_x="223.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="89.1811942347288" y="1845" width="0.2182566918325326" height="15.0" fill="rgb(221,34,23)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1855.5" _orig_x="145.33"/>
</g>
<g>
<title>std::allocator&lt;Field*&gt;::allocator (58 samples, 0.01%)</title><rect x="1009.3960192175704" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(245,2,30)" rx="2" ry="2" _orig_x="653.6" _orig_width="0.1"/>
<text x="1012.3960192175704" y="1855.5" _orig_x="656.55"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (159 samples, 0.02%)</title><rect x="591.9011667810569" y="1781" width="1.214824982841455" height="15.0" fill="rgb(254,117,8)" rx="2" ry="2" _orig_x="550.5" _orig_width="0.3"/>
<text x="594.9011667810569" y="1791.5" _orig_x="553.49"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (83 samples, 0.01%)</title><rect x="708.1194234728896" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(219,168,19)" rx="2" ry="2" _orig_x="579.2" _orig_width="0.1"/>
<text x="711.1194234728896" y="1887.5" _orig_x="582.20"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (146 samples, 0.02%)</title><rect x="860.3774879890183" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(218,157,3)" rx="2" ry="2" _orig_x="616.8" _orig_width="0.2"/>
<text x="863.3774879890183" y="1887.5" _orig_x="619.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.02%)</title><rect x="265.3143445435826" y="1749" width="0.3273850377487989" height="15.0" fill="rgb(253,62,26)" rx="2" ry="2" _orig_x="303.7" _orig_width="0.3"/>
<text x="268.3143445435826" y="1759.5" _orig_x="306.73"/>
</g>
<g class="hide">
<title>[code] (179 samples, 0.03%)</title><rect x="86.01647220315708" y="1365" width="0.3273850377487989" height="15.0" fill="rgb(235,195,24)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1375.5" _orig_x="142.38"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (226 samples, 0.03%)</title><rect x="215.7103637611531" y="1781" width="1.619766643788607" height="15.0" fill="rgb(217,128,4)" rx="2" ry="2" _orig_x="457.6" _orig_width="0.4"/>
<text x="218.7103637611531" y="1791.5" _orig_x="460.63"/>
</g>
<g>
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="725.1269732326697" y="1573" width="0.4049416609471517" height="15.0" fill="rgb(241,39,29)" rx="2" ry="2" _orig_x="583.4" _orig_width="0.1"/>
<text x="728.1269732326697" y="1583.5" _orig_x="586.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (355 samples, 0.05%)</title><rect x="213.8057652711049" y="1925" width="0.6547700754975978" height="15.0" fill="rgb(206,10,33)" rx="2" ry="2" _orig_x="256.5" _orig_width="0.6"/>
<text x="216.8057652711049" y="1935.5" _orig_x="259.47"/>
</g>
<g class="hide">
<title>[[vdso]] (464 samples, 0.07%)</title><rect x="222.42690459848993" y="2037" width="0.8730267673301304" height="15.0" fill="rgb(253,65,1)" rx="2" ry="2" _orig_x="264.4" _orig_width="0.8"/>
<text x="225.42690459848993" y="2047.5" _orig_x="267.42"/>
</g>
<g class="hide">
<title>g_mutex_lock (260 samples, 0.04%)</title><rect x="293.5785861358956" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(217,74,47)" rx="2" ry="2" _orig_x="329.6" _orig_width="0.5"/>
<text x="296.5785861358956" y="2047.5" _orig_x="332.62"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (85 samples, 0.01%)</title><rect x="22.4" y="1957" width="0.2" height="15.0" fill="rgb(223,174,18)" rx="2" ry="2"/>
<text x="25.41" y="1967.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (91 samples, 0.01%)</title><rect x="34.296499656829106" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(234,137,16)" rx="2" ry="2" _orig_x="412.8" _orig_width="0.2"/>
<text x="37.296499656829106" y="1759.5" _orig_x="415.83"/>
</g>
<g>
<title>DiskManager::IsPageFree (372 samples, 0.06%)</title><rect x="1147.0761839396018" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(230,163,28)" rx="2" ry="2" _orig_x="687.6" _orig_width="0.7"/>
<text x="1150.0761839396018" y="1839.5" _orig_x="690.64"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (238 samples, 0.04%)</title><rect x="280.0960878517501" y="1813" width="1.619766643788607" height="15.0" fill="rgb(215,97,29)" rx="2" ry="2" _orig_x="473.5" _orig_width="0.4"/>
<text x="283.0960878517501" y="1823.5" _orig_x="476.49"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (464 samples, 0.07%)</title><rect x="137.15168153740555" y="1765" width="3.239533287577214" height="15.0" fill="rgb(218,151,38)" rx="2" ry="2" _orig_x="438.2" _orig_width="0.8"/>
<text x="140.15168153740555" y="1775.5" _orig_x="441.22"/>
</g>
<g class="hide">
<title>_nv022966rm (71 samples, 0.01%)</title><rect x="1177.0" y="2053" width="0.2" height="15.0" fill="rgb(242,184,28)" rx="2" ry="2"/>
<text x="1180.03" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (267 samples, 0.04%)</title><rect x="174.19217570350023" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(210,11,44)" rx="2" ry="2" _orig_x="220.2" _orig_width="0.4"/>
<text x="177.19217570350023" y="1983.5" _orig_x="223.15"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::size (81 samples, 0.01%)</title><rect x="204.3719972546328" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(235,96,22)" rx="2" ry="2" _orig_x="454.8" _orig_width="0.2"/>
<text x="207.3719972546328" y="1791.5" _orig_x="457.84"/>
</g>
<g class="hide">
<title>g_io_channel_get_buffer_condition (122 samples, 0.02%)</title><rect x="291.28689087165395" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(251,132,28)" rx="2" ry="2" _orig_x="327.5" _orig_width="0.2"/>
<text x="294.28689087165395" y="2047.5" _orig_x="330.47"/>
</g>
<g class="hide">
<title>[github-desktop] (66 samples, 0.01%)</title><rect x="14.8" y="1893" width="0.1" height="15.0" fill="rgb(208,95,14)" rx="2" ry="2"/>
<text x="17.75" y="1903.5"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (491 samples, 0.07%)</title><rect x="420.2059025394647" y="1733" width="3.239533287577214" height="15.0" fill="rgb(223,3,51)" rx="2" ry="2" _orig_x="508.1" _orig_width="0.8"/>
<text x="423.2059025394647" y="1743.5" _orig_x="511.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="328.71791352093334" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(254,81,11)" rx="2" ry="2" _orig_x="361.8" _orig_width="0.2"/>
<text x="331.71791352093334" y="2047.5" _orig_x="364.85"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1189" width="2.182566918325326" height="15.0" fill="rgb(209,149,5)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1199.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (251 samples, 0.04%)</title><rect x="168.8448867536032" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(236,60,2)" rx="2" ry="2" _orig_x="215.3" _orig_width="0.5"/>
<text x="171.8448867536032" y="2031.5" _orig_x="218.33"/>
</g>
<g class="hide">
<title>[perf-123031.map] (86 samples, 0.01%)</title><rect x="86.45298558682215" y="1509" width="0.1091283459162663" height="15.0" fill="rgb(223,73,10)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1519.5" _orig_x="142.76"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (94 samples, 0.01%)</title><rect x="182.50514756348645" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(207,145,42)" rx="2" ry="2" _orig_x="449.4" _orig_width="0.1"/>
<text x="185.50514756348645" y="1759.5" _orig_x="452.38"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(205,190,1)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1967.5" _orig_x="226.92"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate (82 samples, 0.01%)</title><rect x="417.3713109128344" y="1653" width="0.8098833218943035" height="15.0" fill="rgb(235,214,50)" rx="2" ry="2" _orig_x="507.4" _orig_width="0.2"/>
<text x="420.3713109128344" y="1663.5" _orig_x="510.42"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (89 samples, 0.01%)</title><rect x="280.9059711736444" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(223,19,48)" rx="2" ry="2" _orig_x="473.7" _orig_width="0.2"/>
<text x="283.9059711736444" y="1791.5" _orig_x="476.70"/>
</g>
<g class="hide">
<title>start_thread (74 samples, 0.01%)</title><rect x="17.3" y="2053" width="0.1" height="15.0" fill="rgb(222,82,31)" rx="2" ry="2"/>
<text x="20.29" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (401 samples, 0.06%)</title><rect x="220.46259437199717" y="1909" width="0.7638984214138641" height="15.0" fill="rgb(235,90,11)" rx="2" ry="2" _orig_x="262.6" _orig_width="0.7"/>
<text x="223.46259437199717" y="1919.5" _orig_x="265.59"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="965" width="1.091283459162663" height="15.0" fill="rgb(215,100,18)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="975.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (250 samples, 0.04%)</title><rect x="29.1" y="1989" width="0.4" height="15.0" fill="rgb(229,136,34)" rx="2" ry="2"/>
<text x="32.11" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (567 samples, 0.08%)</title><rect x="397.93411118737134" y="1749" width="3.644474948524365" height="15.0" fill="rgb(206,118,9)" rx="2" ry="2" _orig_x="502.6" _orig_width="0.9"/>
<text x="400.93411118737134" y="1759.5" _orig_x="505.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="13.227865477007457" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(224,85,30)" rx="2" ry="2" _orig_x="72.7" _orig_width="0.3"/>
<text x="16.227865477007455" y="1999.5" _orig_x="75.74"/>
</g>
<g class="hide">
<title>[code] (315 samples, 0.05%)</title><rect x="85.79821551132453" y="1557" width="0.5456417295813315" height="15.0" fill="rgb(229,47,4)" rx="2" ry="2" _orig_x="139.2" _orig_width="0.5"/>
<text x="88.79821551132453" y="1567.5" _orig_x="142.16"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (167 samples, 0.02%)</title><rect x="166.44406314344536" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(224,195,2)" rx="2" ry="2" _orig_x="213.1" _orig_width="0.3"/>
<text x="169.44406314344536" y="2047.5" _orig_x="216.13"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (11,630 samples, 1.73%)</title><rect x="392.66986959505834" y="1861" width="82.60809883321893" height="15.0" fill="rgb(241,7,12)" rx="2" ry="2" _orig_x="501.3" _orig_width="20.4"/>
<text x="395.66986959505834" y="1871.5" _orig_x="504.27">IndexKey:..</text>
</g>
<g class="hide">
<title>g_slice_free1 (172 samples, 0.03%)</title><rect x="216.9704873026766" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(240,65,28)" rx="2" ry="2" _orig_x="259.4" _orig_width="0.3"/>
<text x="219.9704873026766" y="2047.5" _orig_x="262.38"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (273 samples, 0.04%)</title><rect x="578.1331503088538" y="1765" width="1.619766643788607" height="15.0" fill="rgb(207,49,39)" rx="2" ry="2" _orig_x="547.1" _orig_width="0.4"/>
<text x="581.1331503088538" y="1775.5" _orig_x="550.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (92 samples, 0.01%)</title><rect x="307.7652711050102" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(208,150,28)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="2031.5" _orig_x="345.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="58.0" y="1893" width="0.2" height="15.0" fill="rgb(222,39,33)" rx="2" ry="2"/>
<text x="60.99" y="1903.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (108 samples, 0.02%)</title><rect x="457.46053534660234" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(237,91,41)" rx="2" ry="2" _orig_x="517.3" _orig_width="0.2"/>
<text x="460.46053534660234" y="1839.5" _orig_x="520.34"/>
</g>
<g class="hide">
<title>_nv032673rm (62 samples, 0.01%)</title><rect x="351.8" y="2053" width="0.1" height="15.0" fill="rgb(239,105,4)" rx="2" ry="2"/>
<text x="354.79" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="53" width="0.2182566918325326" height="15.0" fill="rgb(233,216,21)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="63.5" _orig_x="119.14"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (83 samples, 0.01%)</title><rect x="924.7632120796158" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(248,103,36)" rx="2" ry="2" _orig_x="632.7" _orig_width="0.1"/>
<text x="927.7632120796158" y="1839.5" _orig_x="635.65"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (418 samples, 0.06%)</title><rect x="384.166094715168" y="1813" width="3.239533287577214" height="15.0" fill="rgb(226,223,42)" rx="2" ry="2" _orig_x="499.2" _orig_width="0.8"/>
<text x="387.166094715168" y="1823.5" _orig_x="502.23"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1861" width="0.1" height="15.0" fill="rgb(237,0,26)" rx="2" ry="2"/>
<text x="33.98" y="1871.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (821 samples, 0.12%)</title><rect x="212.93273850377474" y="2021" width="1.5277968428277282" height="15.0" fill="rgb(212,95,48)" rx="2" ry="2" _orig_x="255.7" _orig_width="1.4"/>
<text x="215.93273850377474" y="2031.5" _orig_x="258.66"/>
</g>
<g class="hide">
<title>os_alloc_mem (92 samples, 0.01%)</title><rect x="311.9121482498283" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(210,139,19)" rx="2" ry="2" _orig_x="346.4" _orig_width="0.2"/>
<text x="314.9121482498283" y="2047.5" _orig_x="349.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (89 samples, 0.01%)</title><rect x="1119.9450926561426" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(250,68,43)" rx="2" ry="2" _orig_x="680.9" _orig_width="0.1"/>
<text x="1122.9450926561426" y="1871.5" _orig_x="683.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.02%)</title><rect x="58.0" y="1973" width="0.2" height="15.0" fill="rgb(225,107,0)" rx="2" ry="2"/>
<text x="60.97" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.01%)</title><rect x="810.3013040494166" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(250,212,35)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="1935.5" _orig_x="806.11"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (347 samples, 0.05%)</title><rect x="969.7117364447492" y="1845" width="2.42964996568291" height="15.0" fill="rgb(246,118,24)" rx="2" ry="2" _orig_x="643.8" _orig_width="0.6"/>
<text x="972.7117364447492" y="1855.5" _orig_x="646.77"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (83 samples, 0.01%)</title><rect x="854.303363074811" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(249,128,18)" rx="2" ry="2" _orig_x="615.3" _orig_width="0.1"/>
<text x="857.303363074811" y="1807.5" _orig_x="618.26"/>
</g>
<g>
<title>BPlusTreeIndex::InsertEntry (49,118 samples, 7.29%)</title><rect x="363.51407000686345" y="1957" width="348.24982841455045" height="15.0" fill="rgb(244,110,41)" rx="2" ry="2" _orig_x="494.1" _orig_width="86.0"/>
<text x="366.51407000686345" y="1967.5" _orig_x="497.08">BPlusTreeIndex::InsertEntry </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (447 samples, 0.07%)</title><rect x="339.95813315030875" y="1973" width="0.8730267673301304" height="15.0" fill="rgb(253,4,39)" rx="2" ry="2" _orig_x="372.1" _orig_width="0.8"/>
<text x="342.95813315030875" y="1983.5" _orig_x="375.14"/>
</g>
<g class="hide">
<title>epoll_wait (64 samples, 0.01%)</title><rect x="60.589567604667025" y="229" width="0.2182566918325326" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="239.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1733" width="1.091283459162663" height="15.0" fill="rgb(219,16,29)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1743.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (971 samples, 0.14%)</title><rect x="63.31777625257368" y="1989" width="1.855181880576527" height="15.0" fill="rgb(223,178,28)" rx="2" ry="2" _orig_x="118.6" _orig_width="1.7"/>
<text x="66.31777625257368" y="1999.5" _orig_x="121.56"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (269 samples, 0.04%)</title><rect x="105.65957446808501" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(222,90,40)" rx="2" ry="2" _orig_x="157.4" _orig_width="0.5"/>
<text x="108.65957446808501" y="1983.5" _orig_x="160.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.02%)</title><rect x="58.0" y="1925" width="0.2" height="15.0" fill="rgb(208,191,8)" rx="2" ry="2"/>
<text x="60.97" y="1935.5"/>
</g>
<g>
<title>MemHeap::MemHeap (72 samples, 0.01%)</title><rect x="1000.0823610157856" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(240,39,4)" rx="2" ry="2" _orig_x="651.3" _orig_width="0.1"/>
<text x="1003.0823610157856" y="1903.5" _orig_x="654.26"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (319 samples, 0.05%)</title><rect x="339.6225120109813" y="1845" width="2.0247083047357584" height="15.0" fill="rgb(244,168,4)" rx="2" ry="2" _orig_x="488.2" _orig_width="0.5"/>
<text x="342.6225120109813" y="1855.5" _orig_x="491.16"/>
</g>
<g class="hide">
<title>ib_clone_gtid (157 samples, 0.02%)</title><rect x="341.5" y="2069" width="0.3" height="15.0" fill="rgb(211,115,17)" rx="2" ry="2"/>
<text x="344.55" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (59 samples, 0.01%)</title><rect x="312.49142072752227" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(232,181,38)" rx="2" ry="2" _orig_x="481.5" _orig_width="0.1"/>
<text x="315.49142072752227" y="1887.5" _orig_x="484.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (218 samples, 0.03%)</title><rect x="214.0240219629374" y="1893" width="0.4365133836650652" height="15.0" fill="rgb(246,210,11)" rx="2" ry="2" _orig_x="256.7" _orig_width="0.4"/>
<text x="217.0240219629374" y="1903.5" _orig_x="259.71"/>
</g>
<g>
<title>[[kernel.kallsyms]] (394 samples, 0.06%)</title><rect x="722.6973232669867" y="1717" width="2.8345916266300617" height="15.0" fill="rgb(238,198,35)" rx="2" ry="2" _orig_x="582.8" _orig_width="0.7"/>
<text x="725.6973232669867" y="1727.5" _orig_x="585.80"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="373" width="1.091283459162663" height="15.0" fill="rgb(230,182,36)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="383.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (70 samples, 0.01%)</title><rect x="314.1111873713108" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(216,223,28)" rx="2" ry="2" _orig_x="481.9" _orig_width="0.2"/>
<text x="317.1111873713108" y="1855.5" _orig_x="484.95"/>
</g>
<g class="hide">
<title>_nv023484rm (64 samples, 0.01%)</title><rect x="1177.5" y="2053" width="0.1" height="15.0" fill="rgb(214,115,7)" rx="2" ry="2"/>
<text x="1180.48" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.01%)</title><rect x="62.5" y="1973" width="0.1" height="15.0" fill="rgb(207,185,17)" rx="2" ry="2"/>
<text x="65.47" y="1983.5"/>
</g>
<g class="hide">
<title>[unknown] (620 samples, 0.09%)</title><rect x="260.1853122855181" y="1685" width="1.091283459162663" height="15.0" fill="rgb(244,21,21)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1695.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>_nv011682rm (68 samples, 0.01%)</title><rect x="347.0" y="2053" width="0.1" height="15.0" fill="rgb(214,149,5)" rx="2" ry="2"/>
<text x="349.98" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (295 samples, 0.04%)</title><rect x="808.7735072065889" y="1973" width="0.6547700754975978" height="15.0" fill="rgb(240,177,8)" rx="2" ry="2" _orig_x="801.7" _orig_width="0.6"/>
<text x="811.7735072065889" y="1983.5" _orig_x="804.74"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (700 samples, 0.10%)</title><rect x="198.41866849691138" y="2005" width="1.3095401509951956" height="15.0" fill="rgb(253,46,39)" rx="2" ry="2" _orig_x="242.4" _orig_width="1.2"/>
<text x="201.41866849691138" y="2015.5" _orig_x="245.39"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (170 samples, 0.03%)</title><rect x="678.9636238846946" y="1797" width="1.214824982841455" height="15.0" fill="rgb(207,147,15)" rx="2" ry="2" _orig_x="572.0" _orig_width="0.3"/>
<text x="681.9636238846946" y="1807.5" _orig_x="575.02"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (160 samples, 0.02%)</title><rect x="943.3905284831844" y="1877" width="1.214824982841455" height="15.0" fill="rgb(215,227,29)" rx="2" ry="2" _orig_x="637.3" _orig_width="0.3"/>
<text x="946.3905284831844" y="1887.5" _orig_x="640.34"/>
</g>
<g class="hide">
<title>[github-desktop] (180 samples, 0.03%)</title><rect x="178.33905284831835" y="1797" width="0.4365133836650652" height="15.0" fill="rgb(249,27,54)" rx="2" ry="2" _orig_x="224.0" _orig_width="0.4"/>
<text x="181.33905284831835" y="1807.5" _orig_x="227.04"/>
</g>
<g class="hide">
<title>os_acquire_spinlock (137 samples, 0.02%)</title><rect x="327.08098833218935" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(218,72,8)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="330.08098833218935" y="2047.5" _orig_x="363.26"/>
</g>
<g>
<title>BufferPoolManager::IsPageFree (101 samples, 0.01%)</title><rect x="148.49004804392584" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(223,97,44)" rx="2" ry="2" _orig_x="441.0" _orig_width="0.1"/>
<text x="151.49004804392584" y="1887.5" _orig_x="443.97"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_do_relocate (111 samples, 0.02%)</title><rect x="35.511324639670605" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(226,22,47)" rx="2" ry="2" _orig_x="413.1" _orig_width="0.2"/>
<text x="38.511324639670605" y="1759.5" _orig_x="416.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (527 samples, 0.08%)</title><rect x="18.905660377358615" y="1845" width="3.339622641509434" height="15.0" fill="rgb(225,63,29)" rx="2" ry="2" _orig_x="393.1" _orig_width="0.9"/>
<text x="21.905660377358615" y="1855.5" _orig_x="396.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (883 samples, 0.13%)</title><rect x="346.28757721345215" y="1829" width="1.6369251887439944" height="15.0" fill="rgb(242,120,48)" rx="2" ry="2" _orig_x="377.9" _orig_width="1.5"/>
<text x="349.28757721345215" y="1839.5" _orig_x="380.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (922 samples, 0.14%)</title><rect x="1183.8" y="1989" width="1.6" height="15.0" fill="rgb(235,103,31)" rx="2" ry="2"/>
<text x="1186.77" y="1999.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::deallocate (109 samples, 0.02%)</title><rect x="242.03157172271796" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(207,18,23)" rx="2" ry="2" _orig_x="464.1" _orig_width="0.2"/>
<text x="245.03157172271796" y="1743.5" _orig_x="467.07"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (794 samples, 0.12%)</title><rect x="627.1310912834593" y="1781" width="5.669183253260123" height="15.0" fill="rgb(221,172,39)" rx="2" ry="2" _orig_x="559.2" _orig_width="1.4"/>
<text x="630.1310912834593" y="1791.5" _orig_x="562.23"/>
</g>
<g class="hide">
<title>[code] (189 samples, 0.03%)</title><rect x="86.01647220315708" y="1397" width="0.3273850377487989" height="15.0" fill="rgb(240,71,17)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1407.5" _orig_x="142.36"/>
</g>
<g>
<title>DiskManager::IsPageFree (116 samples, 0.02%)</title><rect x="253.36993822923802" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(243,227,6)" rx="2" ry="2" _orig_x="466.9" _orig_width="0.2"/>
<text x="256.369938229238" y="1887.5" _orig_x="469.86"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (135 samples, 0.02%)</title><rect x="22.3" y="1973" width="0.3" height="15.0" fill="rgb(227,56,24)" rx="2" ry="2"/>
<text x="25.34" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (160 samples, 0.02%)</title><rect x="13.227865477007457" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(249,140,30)" rx="2" ry="2" _orig_x="72.7" _orig_width="0.3"/>
<text x="16.227865477007455" y="2015.5" _orig_x="75.73"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (89 samples, 0.01%)</title><rect x="167.11736444749488" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(214,188,36)" rx="2" ry="2" _orig_x="445.6" _orig_width="0.2"/>
<text x="170.11736444749488" y="1695.5" _orig_x="448.65"/>
</g>
<g class="hide">
<title>[code] (66 samples, 0.01%)</title><rect x="17.3" y="2021" width="0.1" height="15.0" fill="rgb(218,170,19)" rx="2" ry="2"/>
<text x="20.29" y="2031.5"/>
</g>
<g>
<title>LRUReplacer::Victim (242 samples, 0.04%)</title><rect x="58.99794097460522" y="1861" width="2.0247083047357584" height="15.0" fill="rgb(210,88,45)" rx="2" ry="2" _orig_x="418.9" _orig_width="0.5"/>
<text x="61.99794097460522" y="1871.5" _orig_x="421.95"/>
</g>
<g>
<title>Row::Row (239 samples, 0.04%)</title><rect x="291.8393960192174" y="1893" width="1.619766643788607" height="15.0" fill="rgb(250,168,5)" rx="2" ry="2" _orig_x="476.4" _orig_width="0.4"/>
<text x="294.8393960192174" y="1903.5" _orig_x="479.40"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,106 samples, 0.16%)</title><rect x="165.09265614275915" y="1765" width="7.693891557995882" height="15.0" fill="rgb(252,168,49)" rx="2" ry="2" _orig_x="445.1" _orig_width="1.9"/>
<text x="168.09265614275915" y="1775.5" _orig_x="448.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="223.40905971173635" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(230,205,54)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="1951.5" _orig_x="268.27"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (1,227 samples, 0.18%)</title><rect x="254.40150995195594" y="1989" width="2.400823610157859" height="15.0" fill="rgb(223,40,21)" rx="2" ry="2" _orig_x="293.7" _orig_width="2.2"/>
<text x="257.401509951956" y="1999.5" _orig_x="296.71"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (443 samples, 0.07%)</title><rect x="736.4653397391902" y="1893" width="2.8345916266300617" height="15.0" fill="rgb(242,86,22)" rx="2" ry="2" _orig_x="586.2" _orig_width="0.7"/>
<text x="739.4653397391902" y="1903.5" _orig_x="589.17"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (89 samples, 0.01%)</title><rect x="350.96087851750167" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(242,166,2)" rx="2" ry="2" _orig_x="491.0" _orig_width="0.1"/>
<text x="353.96087851750167" y="1839.5" _orig_x="493.96"/>
</g>
<g class="hide">
<title>[code] (157 samples, 0.02%)</title><rect x="86.01647220315708" y="1269" width="0.3273850377487989" height="15.0" fill="rgb(246,150,47)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1279.5" _orig_x="142.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (114 samples, 0.02%)</title><rect x="269.89773507206576" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(252,39,3)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="1903.5" _orig_x="310.95"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (74 samples, 0.01%)</title><rect x="872.120796156486" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(240,59,9)" rx="2" ry="2" _orig_x="619.7" _orig_width="0.1"/>
<text x="875.120796156486" y="1887.5" _orig_x="622.68"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (327 samples, 0.05%)</title><rect x="736.8702814001371" y="1877" width="2.42964996568291" height="15.0" fill="rgb(227,47,19)" rx="2" ry="2" _orig_x="586.3" _orig_width="0.6"/>
<text x="739.8702814001371" y="1887.5" _orig_x="589.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,481 samples, 0.22%)</title><rect x="296.85243651338357" y="2037" width="2.7282086479066576" height="15.0" fill="rgb(239,111,33)" rx="2" ry="2" _orig_x="332.6" _orig_width="2.5"/>
<text x="299.85243651338357" y="2047.5" _orig_x="335.55"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (67 samples, 0.01%)</title><rect x="34.701441317776116" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(214,187,38)" rx="2" ry="2" _orig_x="412.9" _orig_width="0.1"/>
<text x="37.701441317776116" y="1743.5" _orig_x="415.87"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (547 samples, 0.08%)</title><rect x="65.4" y="1909" width="1.0" height="15.0" fill="rgb(247,150,54)" rx="2" ry="2"/>
<text x="68.40" y="1919.5"/>
</g>
<g>
<title>Field::CompareLessThan (112 samples, 0.02%)</title><rect x="256.60947151681523" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(246,225,20)" rx="2" ry="2" _orig_x="467.7" _orig_width="0.2"/>
<text x="259.60947151681523" y="1903.5" _orig_x="470.66"/>
</g>
<g class="hide">
<title>Watcher::notify (233 samples, 0.03%)</title><rect x="134.5785861358956" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(242,73,40)" rx="2" ry="2" _orig_x="183.9" _orig_width="0.4"/>
<text x="137.5785861358956" y="1999.5" _orig_x="186.93"/>
</g>
<g>
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="57.783115991763935" y="1557" width="0.8098833218943035" height="15.0" fill="rgb(231,228,16)" rx="2" ry="2" _orig_x="418.6" _orig_width="0.2"/>
<text x="60.783115991763935" y="1567.5" _orig_x="421.60"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1061" width="2.182566918325326" height="15.0" fill="rgb(209,227,42)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1071.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (67 samples, 0.01%)</title><rect x="260.6588881262868" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(222,145,45)" rx="2" ry="2" _orig_x="468.7" _orig_width="0.1"/>
<text x="263.6588881262868" y="1727.5" _orig_x="471.68"/>
</g>
<g class="hide">
<title>[code] (70 samples, 0.01%)</title><rect x="14.3" y="1733" width="0.1" height="15.0" fill="rgb(239,101,23)" rx="2" ry="2"/>
<text x="17.30" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="179.10295126973222" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(213,138,20)" rx="2" ry="2" _orig_x="224.7" _orig_width="0.4"/>
<text x="182.10295126973222" y="1983.5" _orig_x="227.70"/>
</g>
<g class="hide">
<title>run_builtin (1,405 samples, 0.21%)</title><rect x="805.4996568291008" y="2021" width="2.7282086479066576" height="15.0" fill="rgb(220,202,18)" rx="2" ry="2" _orig_x="798.7" _orig_width="2.5"/>
<text x="808.4996568291008" y="2031.5" _orig_x="801.74"/>
</g>
<g class="hide">
<title>g_slice_alloc (151 samples, 0.02%)</title><rect x="337.5" y="2053" width="0.3" height="15.0" fill="rgb(231,75,54)" rx="2" ry="2"/>
<text x="340.54" y="2063.5"/>
</g>
<g class="hide">
<title>g_mutex_lock (144 samples, 0.02%)</title><rect x="52.6" y="2037" width="0.3" height="15.0" fill="rgb(226,107,9)" rx="2" ry="2"/>
<text x="55.62" y="2047.5"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field const&amp;&gt; (177 samples, 0.03%)</title><rect x="360.2745367192862" y="1941" width="1.214824982841455" height="15.0" fill="rgb(249,179,31)" rx="2" ry="2" _orig_x="493.3" _orig_width="0.3"/>
<text x="363.2745367192862" y="1951.5" _orig_x="496.31"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (24,924 samples, 3.70%)</title><rect x="1169.5518188057652" y="1925" width="47.689087165408374" height="15.0" fill="rgb(220,200,26)" rx="2" ry="2" _orig_x="1132.3" _orig_width="43.7"/>
<text x="1172.5518188057652" y="1935.5" _orig_x="1135.30">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="869" width="2.182566918325326" height="15.0" fill="rgb(206,38,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="879.5" _orig_x="117.41"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (2,260 samples, 0.34%)</title><rect x="411.2971859986272" y="1797" width="16.197666437886067" height="15.0" fill="rgb(251,17,40)" rx="2" ry="2" _orig_x="505.9" _orig_width="4.0"/>
<text x="414.2971859986272" y="1807.5" _orig_x="508.92"/>
</g>
<g class="hide">
<title>[unknown] (1,694 samples, 0.25%)</title><rect x="63.4" y="2053" width="3.0" height="15.0" fill="rgb(213,199,35)" rx="2" ry="2"/>
<text x="66.40" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (563 samples, 0.08%)</title><rect x="15.2" y="2005" width="1.0" height="15.0" fill="rgb(229,45,34)" rx="2" ry="2"/>
<text x="18.17" y="2015.5"/>
</g>
<g>
<title>IndexKeyComparator::operator (48,468 samples, 7.20%)</title><rect x="740.9196980096085" y="1925" width="343.7954701441318" height="15.0" fill="rgb(254,215,12)" rx="2" ry="2" _orig_x="587.3" _orig_width="84.9"/>
<text x="743.9196980096085" y="1935.5" _orig_x="590.25">IndexKeyComparator::operator </text>
</g>
<g class="hide">
<title>pthread_cond_signal@@GLIBC_2.3.2 (145 samples, 0.02%)</title><rect x="70.3" y="2053" width="0.2" height="15.0" fill="rgb(209,13,31)" rx="2" ry="2"/>
<text x="73.28" y="2063.5"/>
</g>
<g>
<title>DiskManager::ReadPage (658 samples, 0.10%)</title><rect x="54.138641043239446" y="1861" width="4.454358270418669" height="15.0" fill="rgb(216,78,37)" rx="2" ry="2" _orig_x="417.7" _orig_width="1.1"/>
<text x="57.138641043239446" y="1871.5" _orig_x="420.69"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (380 samples, 0.06%)</title><rect x="344.07687028140015" y="1861" width="2.8345916266300617" height="15.0" fill="rgb(233,225,2)" rx="2" ry="2" _orig_x="489.3" _orig_width="0.7"/>
<text x="347.07687028140015" y="1871.5" _orig_x="492.31"/>
</g>
<g>
<title>Field::CompareLessThan (107 samples, 0.02%)</title><rect x="367.1585449553877" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(239,136,24)" rx="2" ry="2" _orig_x="495.0" _orig_width="0.2"/>
<text x="370.1585449553877" y="1855.5" _orig_x="497.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="84.59780370624561" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(230,205,32)" rx="2" ry="2" _orig_x="138.1" _orig_width="0.2"/>
<text x="87.59780370624561" y="1871.5" _orig_x="141.10"/>
</g>
<g class="hide">
<title>__strlen_avx2 (103 samples, 0.02%)</title><rect x="791.7" y="2053" width="0.2" height="15.0" fill="rgb(221,161,17)" rx="2" ry="2"/>
<text x="794.72" y="2063.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (203 samples, 0.03%)</title><rect x="435.99862731640354" y="1829" width="1.619766643788607" height="15.0" fill="rgb(228,85,45)" rx="2" ry="2" _orig_x="512.0" _orig_width="0.4"/>
<text x="438.99862731640354" y="1839.5" _orig_x="515.02"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (74 samples, 0.01%)</title><rect x="858.3527796842826" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(246,202,46)" rx="2" ry="2" _orig_x="616.3" _orig_width="0.1"/>
<text x="861.3527796842826" y="1871.5" _orig_x="619.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,946 samples, 0.59%)</title><rect x="147.12834591626623" y="1941" width="7.529855868222375" height="15.0" fill="rgb(224,99,21)" rx="2" ry="2" _orig_x="195.4" _orig_width="6.9"/>
<text x="150.12834591626623" y="1951.5" _orig_x="198.43"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1349" width="2.182566918325326" height="15.0" fill="rgb(209,97,40)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1359.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (59 samples, 0.01%)</title><rect x="305.20247083047343" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(235,84,43)" rx="2" ry="2" _orig_x="479.7" _orig_width="0.1"/>
<text x="308.20247083047343" y="1855.5" _orig_x="482.74"/>
</g>
<g class="hide">
<title>g_get_monotonic_time (61 samples, 0.01%)</title><rect x="291.06863417982146" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(239,201,7)" rx="2" ry="2" _orig_x="327.3" _orig_width="0.1"/>
<text x="294.06863417982146" y="2047.5" _orig_x="330.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,486 samples, 0.37%)</title><rect x="348.5792724776938" y="1989" width="4.801647220315718" height="15.0" fill="rgb(215,26,20)" rx="2" ry="2" _orig_x="380.0" _orig_width="4.4"/>
<text x="351.5792724776938" y="1999.5" _orig_x="383.05"/>
</g>
<g class="hide">
<title>ib_log_wr_notif (149 samples, 0.02%)</title><rect x="342.8" y="2069" width="0.3" height="15.0" fill="rgb(241,187,18)" rx="2" ry="2"/>
<text x="345.80" y="2079.5"/>
</g>
<g>
<title>__memset_avx2_unaligned (66 samples, 0.01%)</title><rect x="964.4474948524364" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(250,72,42)" rx="2" ry="2" _orig_x="642.5" _orig_width="0.1"/>
<text x="967.4474948524364" y="1775.5" _orig_x="645.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (74 samples, 0.01%)</title><rect x="809.9739190116677" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(230,143,21)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1919.5" _orig_x="805.85"/>
</g>
<g>
<title>TypeChar::CompareLessThan (59 samples, 0.01%)</title><rect x="391.85998627316405" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(230,6,34)" rx="2" ry="2" _orig_x="501.1" _orig_width="0.1"/>
<text x="394.85998627316405" y="1855.5" _orig_x="504.10"/>
</g>
<g class="hide">
<title>[unknown] (1,310 samples, 0.19%)</title><rect x="58.407000686341696" y="1989" width="2.509951956074125" height="15.0" fill="rgb(212,5,40)" rx="2" ry="2" _orig_x="114.1" _orig_width="2.3"/>
<text x="61.407000686341696" y="1999.5" _orig_x="117.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,520 samples, 0.82%)</title><rect x="743.5147563486615" y="1845" width="10.585449553877831" height="15.0" fill="rgb(219,194,47)" rx="2" ry="2" _orig_x="741.9" _orig_width="9.7"/>
<text x="746.5147563486615" y="1855.5" _orig_x="744.94"/>
</g>
<g class="hide">
<title>_int_free (600 samples, 0.09%)</title><rect x="783.6739876458475" y="2037" width="1.091283459162663" height="15.0" fill="rgb(223,195,36)" rx="2" ry="2" _orig_x="778.7" _orig_width="1.0"/>
<text x="786.6739876458475" y="2047.5" _orig_x="781.68"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (400 samples, 0.06%)</title><rect x="333.1921757035002" y="2005" width="0.7638984214138641" height="15.0" fill="rgb(205,136,32)" rx="2" ry="2" _orig_x="365.9" _orig_width="0.7"/>
<text x="336.1921757035002" y="2015.5" _orig_x="368.86"/>
</g>
<g class="hide">
<title>[github-desktop] (60 samples, 0.01%)</title><rect x="178.44818119423465" y="1717" width="0.1091283459162663" height="15.0" fill="rgb(243,161,6)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.1"/>
<text x="181.44818119423465" y="1727.5" _orig_x="227.08"/>
</g>
<g class="hide">
<title>[perf-123031.map] (148 samples, 0.02%)</title><rect x="86.78037062457093" y="1525" width="0.3273850377487989" height="15.0" fill="rgb(213,122,34)" rx="2" ry="2" _orig_x="140.1" _orig_width="0.3"/>
<text x="89.78037062457093" y="1535.5" _orig_x="143.11"/>
</g>
<g class="hide">
<title>gdbus (4,162 samples, 0.62%)</title><rect x="212.3" y="2069" width="7.3" height="15.0" fill="rgb(249,98,1)" rx="2" ry="2"/>
<text x="215.28" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, IndexInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (164 samples, 0.02%)</title><rect x="1098.0782429649964" y="1893" width="1.214824982841455" height="15.0" fill="rgb(210,44,44)" rx="2" ry="2" _orig_x="675.5" _orig_width="0.3"/>
<text x="1101.0782429649964" y="1903.5" _orig_x="678.51"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (193 samples, 0.03%)</title><rect x="117.7144818119422" y="1765" width="1.214824982841455" height="15.0" fill="rgb(214,145,28)" rx="2" ry="2" _orig_x="433.4" _orig_width="0.3"/>
<text x="120.7144818119422" y="1775.5" _orig_x="436.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,204 samples, 0.18%)</title><rect x="14.452830188679204" y="1925" width="7.7924528301886795" height="15.0" fill="rgb(208,155,23)" rx="2" ry="2" _orig_x="391.9" _orig_width="2.1"/>
<text x="17.452830188679204" y="1935.5" _orig_x="394.87"/>
</g>
<g class="hide">
<title>[code] (128 samples, 0.02%)</title><rect x="66.6" y="2037" width="0.3" height="15.0" fill="rgb(220,90,16)" rx="2" ry="2"/>
<text x="69.63" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (402 samples, 0.06%)</title><rect x="188.92450240219617" y="2021" width="0.7638984214138641" height="15.0" fill="rgb(228,150,54)" rx="2" ry="2" _orig_x="233.7" _orig_width="0.7"/>
<text x="191.92450240219617" y="2031.5" _orig_x="236.65"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1781" width="1.091283459162663" height="15.0" fill="rgb(210,101,4)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1791.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[perf-123151.map] (350 samples, 0.05%)</title><rect x="88.19903912148241" y="1893" width="0.6547700754975978" height="15.0" fill="rgb(224,197,50)" rx="2" ry="2" _orig_x="141.4" _orig_width="0.6"/>
<text x="91.19903912148241" y="1903.5" _orig_x="144.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (271 samples, 0.04%)</title><rect x="68.01029512697315" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(239,209,53)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="1967.5" _orig_x="125.93"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (60 samples, 0.01%)</title><rect x="96.25257378174337" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(241,71,28)" rx="2" ry="2" _orig_x="428.1" _orig_width="0.1"/>
<text x="99.25257378174337" y="1839.5" _orig_x="431.09"/>
</g>
<g class="hide">
<title>[code] (158 samples, 0.02%)</title><rect x="14.31914893617012" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(227,186,24)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="2015.5" _orig_x="76.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,646 samples, 0.39%)</title><rect x="79.35964310226484" y="1877" width="5.01990391214825" height="15.0" fill="rgb(250,15,40)" rx="2" ry="2" _orig_x="133.3" _orig_width="4.6"/>
<text x="82.35964310226484" y="1887.5" _orig_x="136.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="332.86479066575146" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(246,71,11)" rx="2" ry="2" _orig_x="365.6" _orig_width="0.2"/>
<text x="335.86479066575146" y="1903.5" _orig_x="368.64"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (71 samples, 0.01%)</title><rect x="1116.3006177076184" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(243,125,30)" rx="2" ry="2" _orig_x="680.0" _orig_width="0.1"/>
<text x="1119.3006177076184" y="1887.5" _orig_x="682.95"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (80 samples, 0.01%)</title><rect x="660.3363074811255" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(240,131,8)" rx="2" ry="2" _orig_x="567.4" _orig_width="0.1"/>
<text x="663.3363074811255" y="1775.5" _orig_x="570.35"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (59 samples, 0.01%)</title><rect x="166.30748112560042" y="1717" width="0.4049416609471517" height="15.0" fill="rgb(219,227,35)" rx="2" ry="2" _orig_x="445.4" _orig_width="0.1"/>
<text x="169.30748112560042" y="1727.5" _orig_x="448.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (155 samples, 0.02%)</title><rect x="350.55593685655447" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(214,122,1)" rx="2" ry="2" _orig_x="490.9" _orig_width="0.2"/>
<text x="353.55593685655447" y="1855.5" _orig_x="493.87"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (116 samples, 0.02%)</title><rect x="289.1043239533287" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(245,120,52)" rx="2" ry="2" _orig_x="325.5" _orig_width="0.2"/>
<text x="292.1043239533287" y="2047.5" _orig_x="328.50"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node_ptr (365 samples, 0.05%)</title><rect x="628.7508579272478" y="1749" width="2.8345916266300617" height="15.0" fill="rgb(241,119,10)" rx="2" ry="2" _orig_x="559.6" _orig_width="0.7"/>
<text x="631.7508579272478" y="1759.5" _orig_x="562.65"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (108 samples, 0.02%)</title><rect x="254.98970487302674" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" _orig_x="467.3" _orig_width="0.2"/>
<text x="257.98970487302677" y="1919.5" _orig_x="470.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,749 samples, 1.00%)</title><rect x="716.0144131777624" y="1941" width="12.877144818119424" height="15.0" fill="rgb(238,72,23)" rx="2" ry="2" _orig_x="716.7" _orig_width="11.8"/>
<text x="719.0144131777624" y="1951.5" _orig_x="719.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="339.52161976664365" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(214,170,49)" rx="2" ry="2" _orig_x="371.7" _orig_width="0.1"/>
<text x="342.52161976664365" y="1887.5" _orig_x="374.73"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,046 samples, 1.05%)</title><rect x="715.3596431022648" y="1989" width="13.53191489361702" height="15.0" fill="rgb(218,103,34)" rx="2" ry="2" _orig_x="716.1" _orig_width="12.4"/>
<text x="718.3596431022648" y="1999.5" _orig_x="719.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,335 samples, 0.20%)</title><rect x="13.33962264150956" y="1957" width="8.90566037735849" height="15.0" fill="rgb(253,42,8)" rx="2" ry="2" _orig_x="391.6" _orig_width="2.4"/>
<text x="16.33962264150956" y="1967.5" _orig_x="394.64"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="164.47975291695255" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(224,176,25)" rx="2" ry="2" _orig_x="211.3" _orig_width="0.1"/>
<text x="167.47975291695255" y="2031.5" _orig_x="214.30"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (339 samples, 0.05%)</title><rect x="487.0212765957447" y="1749" width="2.42964996568291" height="15.0" fill="rgb(229,113,23)" rx="2" ry="2" _orig_x="524.6" _orig_width="0.6"/>
<text x="490.0212765957447" y="1759.5" _orig_x="527.58"/>
</g>
<g>
<title>DiskManager::WritePage (78 samples, 0.01%)</title><rect x="725.9368565545642" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(210,187,25)" rx="2" ry="2" _orig_x="583.6" _orig_width="0.2"/>
<text x="728.9368565545642" y="1919.5" _orig_x="586.62"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="485" width="2.182566918325326" height="15.0" fill="rgb(253,158,32)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="495.5" _orig_x="117.41"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (215 samples, 0.03%)</title><rect x="127.02814001372673" y="1845" width="1.619766643788607" height="15.0" fill="rgb(217,209,28)" rx="2" ry="2" _orig_x="435.7" _orig_width="0.4"/>
<text x="130.02814001372673" y="1855.5" _orig_x="438.70"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (147 samples, 0.02%)</title><rect x="216.52024708304734" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(213,207,49)" rx="2" ry="2" _orig_x="457.8" _orig_width="0.2"/>
<text x="219.52024708304734" y="1775.5" _orig_x="460.77"/>
</g>
<g>
<title>BPlusTree::InternalInsert (3,242 samples, 0.48%)</title><rect x="365.5387783115992" y="1877" width="23.08167467398765" height="15.0" fill="rgb(214,225,8)" rx="2" ry="2" _orig_x="494.6" _orig_width="5.7"/>
<text x="368.5387783115992" y="1887.5" _orig_x="497.65">B..</text>
</g>
<g class="hide">
<title>SyntheticaAnima (4,577 samples, 0.68%)</title><rect x="58.5" y="2069" width="8.0" height="15.0" fill="rgb(225,193,53)" rx="2" ry="2"/>
<text x="61.47" y="2079.5"/>
</g>
<g class="hide">
<title>uvm_isr_top_half (60 samples, 0.01%)</title><rect x="1168.24227865477" y="1781" width="0.1091283459162663" height="15.0" fill="rgb(252,10,13)" rx="2" ry="2" _orig_x="1131.1" _orig_width="0.1"/>
<text x="1171.24227865477" y="1791.5" _orig_x="1134.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (745 samples, 0.11%)</title><rect x="1184.1" y="1941" width="1.3" height="15.0" fill="rgb(239,228,7)" rx="2" ry="2"/>
<text x="1187.08" y="1951.5"/>
</g>
<g class="hide">
<title>runtime.park_m (248 samples, 0.04%)</title><rect x="159.67810569663686" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(245,101,30)" rx="2" ry="2" _orig_x="206.9" _orig_width="0.4"/>
<text x="162.67810569663686" y="1983.5" _orig_x="209.90"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.02%)</title><rect x="58.0" y="2021" width="0.2" height="15.0" fill="rgb(206,139,17)" rx="2" ry="2"/>
<text x="60.95" y="2031.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (67 samples, 0.01%)</title><rect x="1043.4111187371311" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(217,216,42)" rx="2" ry="2" _orig_x="662.0" _orig_width="0.1"/>
<text x="1046.4111187371311" y="1823.5" _orig_x="665.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (621 samples, 0.09%)</title><rect x="36.345911949685615" y="1957" width="4.081761006289309" height="15.0" fill="rgb(238,67,39)" rx="2" ry="2" _orig_x="397.8" _orig_width="1.1"/>
<text x="39.345911949685615" y="1967.5" _orig_x="400.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (167 samples, 0.02%)</title><rect x="56.4" y="2005" width="0.3" height="15.0" fill="rgb(235,168,35)" rx="2" ry="2"/>
<text x="59.44" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (10,518 samples, 1.56%)</title><rect x="757.5923129718598" y="1973" width="20.188743994509267" height="15.0" fill="rgb(215,51,49)" rx="2" ry="2" _orig_x="754.8" _orig_width="18.5"/>
<text x="760.5923129718598" y="1983.5" _orig_x="757.85">[[kernel.kallsyms]] </text>
</g>
<g>
<title>SimpleMemHeap::Allocate (517 samples, 0.08%)</title><rect x="655.4770075497598" y="1829" width="3.644474948524365" height="15.0" fill="rgb(210,26,36)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.9"/>
<text x="658.4770075497598" y="1839.5" _orig_x="569.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (963 samples, 0.14%)</title><rect x="63.31777625257368" y="1973" width="1.855181880576527" height="15.0" fill="rgb(238,209,33)" rx="2" ry="2" _orig_x="118.6" _orig_width="1.7"/>
<text x="66.31777625257368" y="1983.5" _orig_x="121.57"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (182 samples, 0.03%)</title><rect x="81.26973232669853" y="1717" width="1.214824982841455" height="15.0" fill="rgb(225,86,43)" rx="2" ry="2" _orig_x="424.4" _orig_width="0.3"/>
<text x="84.26973232669853" y="1727.5" _orig_x="427.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="10.742138364779832" y="2021" width="0.37106918238993714" height="15.0" fill="rgb(211,95,26)" rx="2" ry="2" _orig_x="390.9" _orig_width="0.1"/>
<text x="13.742138364779832" y="2031.5" _orig_x="393.88"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (509 samples, 0.08%)</title><rect x="902.8963623884692" y="1829" width="3.644474948524365" height="15.0" fill="rgb(223,154,22)" rx="2" ry="2" _orig_x="627.3" _orig_width="0.9"/>
<text x="905.8963623884692" y="1839.5" _orig_x="630.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (277 samples, 0.04%)</title><rect x="68.01029512697315" y="2005" width="0.5456417295813315" height="15.0" fill="rgb(252,118,6)" rx="2" ry="2" _orig_x="122.9" _orig_width="0.5"/>
<text x="71.01029512697315" y="2015.5" _orig_x="125.92"/>
</g>
<g class="hide">
<title>[libatspi.so.0.0.1] (67 samples, 0.01%)</title><rect x="239.7783115991763" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(254,15,5)" rx="2" ry="2" _orig_x="280.3" _orig_width="0.1"/>
<text x="242.7783115991763" y="2047.5" _orig_x="283.31"/>
</g>
<g>
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, long, std::pair&lt;TableHeap*, int&gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;TableHeap::cmp&gt; &gt; (257 samples, 0.04%)</title><rect x="1143.8366506520244" y="1877" width="1.619766643788607" height="15.0" fill="rgb(224,228,12)" rx="2" ry="2" _orig_x="686.8" _orig_width="0.4"/>
<text x="1146.8366506520244" y="1887.5" _orig_x="689.77"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,589 samples, 0.68%)</title><rect x="745.3699382292381" y="1797" width="8.730267673301304" height="15.0" fill="rgb(246,131,13)" rx="2" ry="2" _orig_x="743.6" _orig_width="8.0"/>
<text x="748.3699382292381" y="1807.5" _orig_x="746.57"/>
</g>
<g class="hide">
<title>__GI___writev (1,011 samples, 0.15%)</title><rect x="118.5" y="2053" width="1.8" height="15.0" fill="rgb(250,189,24)" rx="2" ry="2"/>
<text x="121.49" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (98 samples, 0.01%)</title><rect x="105.3321894303362" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(212,128,33)" rx="2" ry="2" _orig_x="157.1" _orig_width="0.1"/>
<text x="108.3321894303362" y="1983.5" _orig_x="160.06"/>
</g>
<g class="hide">
<title>[perf-123031.map] (81 samples, 0.01%)</title><rect x="86.45298558682215" y="1429" width="0.1091283459162663" height="15.0" fill="rgb(222,43,32)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1439.5" _orig_x="142.77"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (69 samples, 0.01%)</title><rect x="1094.028826355525" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(215,194,8)" rx="2" ry="2" _orig_x="674.5" _orig_width="0.1"/>
<text x="1097.028826355525" y="1919.5" _orig_x="677.45"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (471 samples, 0.07%)</title><rect x="655.4770075497598" y="1781" width="3.239533287577214" height="15.0" fill="rgb(224,179,38)" rx="2" ry="2" _orig_x="566.2" _orig_width="0.8"/>
<text x="658.4770075497598" y="1791.5" _orig_x="569.22"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (413 samples, 0.06%)</title><rect x="1140.1921757035002" y="1845" width="2.8345916266300617" height="15.0" fill="rgb(231,46,36)" rx="2" ry="2" _orig_x="685.9" _orig_width="0.7"/>
<text x="1143.1921757035002" y="1855.5" _orig_x="688.89"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_v (124 samples, 0.02%)</title><rect x="831.6266300617709" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(245,166,35)" rx="2" ry="2" _orig_x="609.7" _orig_width="0.2"/>
<text x="834.6266300617709" y="1775.5" _orig_x="612.66"/>
</g>
<g class="hide">
<title>kworker/7:0-eve (501 samples, 0.07%)</title><rect x="371.0" y="2069" width="0.8" height="15.0" fill="rgb(248,104,21)" rx="2" ry="2"/>
<text x="373.96" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (558 samples, 0.08%)</title><rect x="11.04529855868213" y="2037" width="1.091283459162663" height="15.0" fill="rgb(211,176,19)" rx="2" ry="2" _orig_x="70.7" _orig_width="1.0"/>
<text x="14.04529855868213" y="2047.5" _orig_x="73.69"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (73 samples, 0.01%)</title><rect x="916.2594371997255" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(230,121,15)" rx="2" ry="2" _orig_x="630.6" _orig_width="0.1"/>
<text x="919.2594371997255" y="1807.5" _orig_x="633.62"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (58 samples, 0.01%)</title><rect x="1106.5820178448869" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(230,175,39)" rx="2" ry="2" _orig_x="677.6" _orig_width="0.1"/>
<text x="1109.5820178448869" y="1887.5" _orig_x="680.58"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (113 samples, 0.02%)</title><rect x="535.614275909403" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(237,229,48)" rx="2" ry="2" _orig_x="536.6" _orig_width="0.2"/>
<text x="538.614275909403" y="1743.5" _orig_x="539.57"/>
</g>
<g class="hide">
<title>runtime.findrunnable (205 samples, 0.03%)</title><rect x="159.67810569663686" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(237,99,45)" rx="2" ry="2" _orig_x="206.9" _orig_width="0.4"/>
<text x="162.67810569663686" y="1951.5" _orig_x="209.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="270.00686341798206" y="1829" width="0.1091283459162663" height="15.0" fill="rgb(252,20,13)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1839.5" _orig_x="310.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (316 samples, 0.05%)</title><rect x="264.98695950583374" y="1797" width="0.6547700754975978" height="15.0" fill="rgb(237,189,8)" rx="2" ry="2" _orig_x="303.4" _orig_width="0.6"/>
<text x="267.98695950583374" y="1807.5" _orig_x="306.41"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (97 samples, 0.01%)</title><rect x="386.19080301990385" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(250,173,52)" rx="2" ry="2" _orig_x="499.7" _orig_width="0.2"/>
<text x="389.19080301990385" y="1743.5" _orig_x="502.72"/>
</g>
<g class="hide">
<title>[code] (380 samples, 0.06%)</title><rect x="16.5" y="1829" width="0.7" height="15.0" fill="rgb(245,140,43)" rx="2" ry="2"/>
<text x="19.49" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,044 samples, 0.30%)</title><rect x="261.71310912834576" y="1925" width="3.928620452985587" height="15.0" fill="rgb(214,67,16)" rx="2" ry="2" _orig_x="300.4" _orig_width="3.6"/>
<text x="264.71310912834576" y="1935.5" _orig_x="303.38"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (144 samples, 0.02%)</title><rect x="507.6733013040495" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(237,86,16)" rx="2" ry="2" _orig_x="529.7" _orig_width="0.2"/>
<text x="510.6733013040495" y="1903.5" _orig_x="532.69"/>
</g>
<g>
<title>Row::Row (397 samples, 0.06%)</title><rect x="126.62319835277974" y="1861" width="2.8345916266300617" height="15.0" fill="rgb(217,139,21)" rx="2" ry="2" _orig_x="435.6" _orig_width="0.7"/>
<text x="129.62319835277975" y="1871.5" _orig_x="438.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (63 samples, 0.01%)</title><rect x="13.4" y="1941" width="0.1" height="15.0" fill="rgb(225,77,36)" rx="2" ry="2"/>
<text x="16.37" y="1951.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (62 samples, 0.01%)</title><rect x="266.73301304049403" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(250,59,0)" rx="2" ry="2" _orig_x="470.2" _orig_width="0.1"/>
<text x="269.73301304049403" y="1775.5" _orig_x="473.21"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (262 samples, 0.04%)</title><rect x="697.9958819492108" y="1781" width="2.0247083047357584" height="15.0" fill="rgb(252,180,24)" rx="2" ry="2" _orig_x="576.7" _orig_width="0.5"/>
<text x="700.9958819492108" y="1791.5" _orig_x="579.71"/>
</g>
<g>
<title>[libminisql_shared.so] (67 samples, 0.01%)</title><rect x="687.8723404255321" y="1877" width="0.4049416609471517" height="15.0" fill="rgb(224,88,18)" rx="2" ry="2" _orig_x="574.2" _orig_width="0.1"/>
<text x="690.8723404255321" y="1887.5" _orig_x="577.20"/>
</g>
<g class="hide">
<title>__libc_read (3,721 samples, 0.55%)</title><rect x="135.88812628689078" y="2005" width="7.202470830473575" height="15.0" fill="rgb(213,113,21)" rx="2" ry="2" _orig_x="185.1" _orig_width="6.6"/>
<text x="138.88812628689078" y="2015.5" _orig_x="188.14"/>
</g>
<g class="hide">
<title>AWT-EventQueue- (2,046 samples, 0.30%)</title><rect x="10.0" y="2069" width="3.6" height="15.0" fill="rgb(253,66,46)" rx="2" ry="2"/>
<text x="13.02" y="2079.5"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (364 samples, 0.05%)</title><rect x="609.7185998627316" y="1861" width="2.8345916266300617" height="15.0" fill="rgb(223,134,51)" rx="2" ry="2" _orig_x="554.9" _orig_width="0.7"/>
<text x="612.7185998627316" y="1871.5" _orig_x="557.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (903 samples, 0.13%)</title><rect x="46.5" y="1829" width="1.6" height="15.0" fill="rgb(220,17,12)" rx="2" ry="2"/>
<text x="49.49" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (287 samples, 0.04%)</title><rect x="69.7" y="1973" width="0.5" height="15.0" fill="rgb(244,128,53)" rx="2" ry="2"/>
<text x="72.72" y="1983.5"/>
</g>
<g class="hide">
<title>[code] (79 samples, 0.01%)</title><rect x="86.12560054907334" y="1109" width="0.2182566918325326" height="15.0" fill="rgb(234,19,25)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1119.5" _orig_x="142.55"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (82 samples, 0.01%)</title><rect x="251.8915579958818" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(254,207,7)" rx="2" ry="2" _orig_x="291.4" _orig_width="0.1"/>
<text x="254.8915579958818" y="2031.5" _orig_x="294.38"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (125 samples, 0.02%)</title><rect x="79.64996568291005" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(239,174,13)" rx="2" ry="2" _orig_x="424.0" _orig_width="0.2"/>
<text x="82.64996568291005" y="1695.5" _orig_x="426.98"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (66 samples, 0.01%)</title><rect x="1107.7968428277281" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(234,223,24)" rx="2" ry="2" _orig_x="677.9" _orig_width="0.1"/>
<text x="1110.7968428277281" y="1871.5" _orig_x="680.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.02%)</title><rect x="333.6286890871653" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(245,12,18)" rx="2" ry="2" _orig_x="366.3" _orig_width="0.3"/>
<text x="336.6286890871653" y="1935.5" _orig_x="369.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="174.4104323953328" y="1845" width="0.2182566918325326" height="15.0" fill="rgb(225,128,50)" rx="2" ry="2" _orig_x="220.4" _orig_width="0.2"/>
<text x="177.4104323953328" y="1855.5" _orig_x="223.43"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (234 samples, 0.03%)</title><rect x="1019.114619080302" y="1861" width="1.619766643788607" height="15.0" fill="rgb(251,147,8)" rx="2" ry="2" _orig_x="656.0" _orig_width="0.4"/>
<text x="1022.114619080302" y="1871.5" _orig_x="659.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (593 samples, 0.09%)</title><rect x="211.29581331503076" y="1845" width="1.2004118050789294" height="15.0" fill="rgb(222,24,42)" rx="2" ry="2" _orig_x="254.2" _orig_width="1.1"/>
<text x="214.29581331503076" y="1855.5" _orig_x="257.25"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (483 samples, 0.07%)</title><rect x="486.61633493479746" y="1765" width="3.239533287577214" height="15.0" fill="rgb(245,71,23)" rx="2" ry="2" _orig_x="524.5" _orig_width="0.8"/>
<text x="489.61633493479746" y="1775.5" _orig_x="527.48"/>
</g>
<g class="hide">
<title>_nv033085rm (4,185 samples, 0.62%)</title><rect x="351.9" y="2053" width="7.4" height="15.0" fill="rgb(234,223,16)" rx="2" ry="2"/>
<text x="354.92" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (179 samples, 0.03%)</title><rect x="877.789979409746" y="1861" width="1.214824982841455" height="15.0" fill="rgb(233,161,51)" rx="2" ry="2" _orig_x="621.1" _orig_width="0.3"/>
<text x="880.789979409746" y="1871.5" _orig_x="624.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,086 samples, 0.16%)</title><rect x="345.8510638297871" y="1893" width="2.0734385724090596" height="15.0" fill="rgb(230,222,5)" rx="2" ry="2" _orig_x="377.5" _orig_width="1.9"/>
<text x="348.8510638297871" y="1903.5" _orig_x="380.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (318 samples, 0.05%)</title><rect x="308.8565545641729" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(246,38,26)" rx="2" ry="2" _orig_x="343.6" _orig_width="0.6"/>
<text x="311.8565545641729" y="2047.5" _orig_x="346.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.01%)</title><rect x="1167.805765271105" y="1541" width="0.1091283459162663" height="15.0" fill="rgb(229,163,40)" rx="2" ry="2" _orig_x="1130.7" _orig_width="0.1"/>
<text x="1170.805765271105" y="1551.5" _orig_x="1133.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="14.6" y="1861" width="0.1" height="15.0" fill="rgb(248,91,7)" rx="2" ry="2"/>
<text x="17.63" y="1871.5"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (2,787 samples, 0.41%)</title><rect x="533.5895676046672" y="1781" width="19.842141386410432" height="15.0" fill="rgb(234,210,26)" rx="2" ry="2" _orig_x="536.1" _orig_width="4.9"/>
<text x="536.5895676046672" y="1791.5" _orig_x="539.15"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (126 samples, 0.02%)</title><rect x="588.2566918325327" y="1845" width="1.214824982841455" height="15.0" fill="rgb(254,30,49)" rx="2" ry="2" _orig_x="549.6" _orig_width="0.3"/>
<text x="591.2566918325327" y="1855.5" _orig_x="552.64"/>
</g>
<g class="hide">
<title>[code] (478 samples, 0.07%)</title><rect x="85.47083047357575" y="1685" width="0.9821551132463967" height="15.0" fill="rgb(233,154,48)" rx="2" ry="2" _orig_x="138.9" _orig_width="0.9"/>
<text x="88.47083047357575" y="1695.5" _orig_x="141.92"/>
</g>
<g class="hide">
<title>[unknown] (1,683 samples, 0.25%)</title><rect x="207.7" y="2053" width="2.9" height="15.0" fill="rgb(250,130,46)" rx="2" ry="2"/>
<text x="210.69" y="2063.5"/>
</g>
<g class="hide">
<title>thread_entry (64 samples, 0.01%)</title><rect x="13.8" y="1989" width="0.1" height="15.0" fill="rgb(209,73,51)" rx="2" ry="2"/>
<text x="16.77" y="1999.5"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (77 samples, 0.01%)</title><rect x="804.9004804392588" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(207,154,10)" rx="2" ry="2" _orig_x="603.1" _orig_width="0.1"/>
<text x="807.9004804392588" y="1791.5" _orig_x="606.10"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (139 samples, 0.02%)</title><rect x="289.0048043925874" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(241,18,3)" rx="2" ry="2" _orig_x="475.7" _orig_width="0.2"/>
<text x="292.0048043925874" y="1855.5" _orig_x="478.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (141 samples, 0.02%)</title><rect x="161.86067261496217" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(229,64,36)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1935.5" _orig_x="211.87"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (85 samples, 0.01%)</title><rect x="506.8634179821551" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" _orig_x="529.5" _orig_width="0.2"/>
<text x="509.8634179821551" y="1887.5" _orig_x="532.50"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (304 samples, 0.05%)</title><rect x="169.14207275223066" y="1749" width="2.0247083047357584" height="15.0" fill="rgb(249,206,28)" rx="2" ry="2" _orig_x="446.1" _orig_width="0.5"/>
<text x="172.14207275223066" y="1759.5" _orig_x="449.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (674 samples, 0.10%)</title><rect x="213.15099519560735" y="1957" width="1.3095401509951956" height="15.0" fill="rgb(212,148,31)" rx="2" ry="2" _orig_x="255.9" _orig_width="1.2"/>
<text x="216.15099519560735" y="1967.5" _orig_x="258.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (604 samples, 0.09%)</title><rect x="335.81125600549063" y="2005" width="1.091283459162663" height="15.0" fill="rgb(207,152,22)" rx="2" ry="2" _orig_x="368.3" _orig_width="1.0"/>
<text x="338.81125600549063" y="2015.5" _orig_x="371.28"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (1,473 samples, 0.22%)</title><rect x="53.328757721345184" y="1877" width="10.528483184625944" height="15.0" fill="rgb(239,110,31)" rx="2" ry="2" _orig_x="417.5" _orig_width="2.6"/>
<text x="56.328757721345184" y="1887.5" _orig_x="420.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (414 samples, 0.06%)</title><rect x="808.5552505147563" y="2005" width="0.8730267673301304" height="15.0" fill="rgb(240,120,8)" rx="2" ry="2" _orig_x="801.5" _orig_width="0.8"/>
<text x="811.5552505147563" y="2015.5" _orig_x="804.53"/>
</g>
<g>
<title>[libminisql_shared.so] (107 samples, 0.02%)</title><rect x="813.8091969800959" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(218,129,50)" rx="2" ry="2" _orig_x="605.3" _orig_width="0.1"/>
<text x="816.8091969800959" y="1791.5" _orig_x="608.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.03%)</title><rect x="84.48867536032935" y="1957" width="0.3273850377487989" height="15.0" fill="rgb(239,183,35)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1967.5" _orig_x="140.97"/>
</g>
<g class="hide">
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (62 samples, 0.01%)</title><rect x="135.34248455730943" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(253,40,3)" rx="2" ry="2" _orig_x="184.6" _orig_width="0.1"/>
<text x="138.34248455730943" y="1999.5" _orig_x="187.59"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~vector (196 samples, 0.03%)</title><rect x="302.3678792038434" y="1877" width="1.619766643788607" height="15.0" fill="rgb(210,187,10)" rx="2" ry="2" _orig_x="479.0" _orig_width="0.4"/>
<text x="305.3678792038434" y="1887.5" _orig_x="482.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="305.91008922443365" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(222,87,40)" rx="2" ry="2" _orig_x="340.9" _orig_width="0.1"/>
<text x="308.91008922443365" y="1999.5" _orig_x="343.92"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::end (80 samples, 0.01%)</title><rect x="484.5916266300617" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(219,8,53)" rx="2" ry="2" _orig_x="524.0" _orig_width="0.1"/>
<text x="487.5916266300617" y="1823.5" _orig_x="526.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (529 samples, 0.08%)</title><rect x="372.9" y="2053" width="1.0" height="15.0" fill="rgb(237,63,19)" rx="2" ry="2"/>
<text x="375.93" y="2063.5"/>
</g>
<g class="hide">
<title>ntfs_extent_inode_open (225 samples, 0.03%)</title><rect x="796.2" y="2053" width="0.4" height="15.0" fill="rgb(229,95,49)" rx="2" ry="2"/>
<text x="799.21" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_cond_wait@@GLIBC_2.3.2 (192 samples, 0.03%)</title><rect x="12.9" y="2037" width="0.4" height="15.0" fill="rgb(254,153,41)" rx="2" ry="2"/>
<text x="15.92" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="277" width="1.091283459162663" height="15.0" fill="rgb(212,139,29)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="287.5" _orig_x="301.96"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (954 samples, 0.14%)</title><rect x="70.33630748112552" y="1797" width="6.884008236101578" height="15.0" fill="rgb(207,225,50)" rx="2" ry="2" _orig_x="421.7" _orig_width="1.7"/>
<text x="73.33630748112552" y="1807.5" _orig_x="424.70"/>
</g>
<g class="hide">
<title>[unknown] (393 samples, 0.06%)</title><rect x="58.73438572409051" y="53" width="0.7638984214138641" height="15.0" fill="rgb(229,69,2)" rx="2" ry="2" _orig_x="114.4" _orig_width="0.7"/>
<text x="61.73438572409051" y="63.5" _orig_x="117.42"/>
</g>
<g class="hide">
<title>g_main_context_dispatch (94 samples, 0.01%)</title><rect x="175.50171585449547" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(220,76,4)" rx="2" ry="2" _orig_x="221.4" _orig_width="0.2"/>
<text x="178.50171585449547" y="2047.5" _orig_x="224.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (205 samples, 0.03%)</title><rect x="338.32120796156477" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(253,128,54)" rx="2" ry="2" _orig_x="370.6" _orig_width="0.4"/>
<text x="341.32120796156477" y="1935.5" _orig_x="373.60"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,344 samples, 0.35%)</title><rect x="765.2161976664377" y="1797" width="16.60260809883322" height="15.0" fill="rgb(226,125,38)" rx="2" ry="2" _orig_x="593.3" _orig_width="4.1"/>
<text x="768.2161976664377" y="1807.5" _orig_x="596.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (515 samples, 0.08%)</title><rect x="66.4025157232704" y="1685" width="3.339622641509434" height="15.0" fill="rgb(251,169,29)" rx="2" ry="2" _orig_x="405.9" _orig_width="0.9"/>
<text x="69.4025157232704" y="1695.5" _orig_x="408.92"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (134 samples, 0.02%)</title><rect x="731.6060398078242" y="1845" width="1.214824982841455" height="15.0" fill="rgb(215,200,43)" rx="2" ry="2" _orig_x="585.0" _orig_width="0.3"/>
<text x="734.6060398078242" y="1855.5" _orig_x="588.03"/>
</g>
<g class="hide">
<title>__GI___writev (891 samples, 0.13%)</title><rect x="210.75017158544944" y="2037" width="1.7460535346602608" height="15.0" fill="rgb(216,119,52)" rx="2" ry="2" _orig_x="253.7" _orig_width="1.6"/>
<text x="213.75017158544944" y="2047.5" _orig_x="256.73"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="661" width="2.182566918325326" height="15.0" fill="rgb(234,86,38)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="671.5" _orig_x="117.41"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (1,213 samples, 0.18%)</title><rect x="402.3884694577899" y="1813" width="8.503774879890186" height="15.0" fill="rgb(243,226,18)" rx="2" ry="2" _orig_x="503.7" _orig_width="2.1"/>
<text x="405.3884694577899" y="1823.5" _orig_x="506.67"/>
</g>
<g class="hide">
<title>runtime.notetsleep_internal (74 samples, 0.01%)</title><rect x="159.35072065888804" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(207,149,16)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1967.5" _orig_x="209.56"/>
</g>
<g class="hide">
<title>[github-desktop] (76 samples, 0.01%)</title><rect x="16.2" y="1941" width="0.1" height="15.0" fill="rgb(237,182,33)" rx="2" ry="2"/>
<text x="19.16" y="1951.5"/>
</g>
<g class="hide">
<title>gnome-shell (24,161 samples, 3.59%)</title><rect x="225.9" y="2069" width="42.3" height="15.0" fill="rgb(227,113,21)" rx="2" ry="2"/>
<text x="228.88" y="2079.5">gno..</text>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (153 samples, 0.02%)</title><rect x="706.9045984900479" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(226,141,3)" rx="2" ry="2" _orig_x="578.9" _orig_width="0.2"/>
<text x="709.9045984900479" y="1903.5" _orig_x="581.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (9,313 samples, 1.38%)</title><rect x="759.9931365820178" y="1909" width="17.78792038435141" height="15.0" fill="rgb(207,74,8)" rx="2" ry="2" _orig_x="757.0" _orig_width="16.3"/>
<text x="762.9931365820178" y="1919.5" _orig_x="759.96">[[kernel.kallsyms]] </text>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (116 samples, 0.02%)</title><rect x="483.7817433081672" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(224,169,25)" rx="2" ry="2" _orig_x="523.8" _orig_width="0.2"/>
<text x="486.7817433081672" y="1823.5" _orig_x="526.77"/>
</g>
<g>
<title>TypeChar::CompareLessThan (119 samples, 0.02%)</title><rect x="15.66918325326003" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(235,52,22)" rx="2" ry="2" _orig_x="408.2" _orig_width="0.2"/>
<text x="18.66918325326003" y="1839.5" _orig_x="411.15"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1253" width="2.182566918325326" height="15.0" fill="rgb(228,174,42)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1263.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="195.0356897735071" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(233,47,37)" rx="2" ry="2" _orig_x="239.3" _orig_width="0.2"/>
<text x="198.0356897735071" y="1903.5" _orig_x="242.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="56.9" y="1893" width="0.1" height="15.0" fill="rgb(241,187,4)" rx="2" ry="2"/>
<text x="59.89" y="1903.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (292 samples, 0.04%)</title><rect x="11.481811942347187" y="1845" width="0.5456417295813315" height="15.0" fill="rgb(240,214,47)" rx="2" ry="2" _orig_x="71.1" _orig_width="0.5"/>
<text x="14.481811942347187" y="1855.5" _orig_x="74.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (586 samples, 0.09%)</title><rect x="330.9004804392587" y="2021" width="1.091283459162663" height="15.0" fill="rgb(243,80,48)" rx="2" ry="2" _orig_x="363.8" _orig_width="1.0"/>
<text x="333.9004804392587" y="2031.5" _orig_x="366.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,893 samples, 0.88%)</title><rect x="1165.6" y="1797" width="10.4" height="15.0" fill="rgb(220,221,50)" rx="2" ry="2"/>
<text x="1168.65" y="1807.5"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (476 samples, 0.07%)</title><rect x="264.3033630748113" y="1829" width="3.239533287577214" height="15.0" fill="rgb(207,36,27)" rx="2" ry="2" _orig_x="469.6" _orig_width="0.8"/>
<text x="267.3033630748113" y="1839.5" _orig_x="472.57"/>
</g>
<g>
<title>DiskManager::IsPageFree (93 samples, 0.01%)</title><rect x="334.7632120796156" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(238,14,43)" rx="2" ry="2" _orig_x="487.0" _orig_width="0.2"/>
<text x="337.7632120796156" y="1903.5" _orig_x="490.05"/>
</g>
<g class="hide">
<title>epoll_wait (153 samples, 0.02%)</title><rect x="89.07206588881252" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(235,1,5)" rx="2" ry="2" _orig_x="142.2" _orig_width="0.3"/>
<text x="92.07206588881252" y="1999.5" _orig_x="145.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.02%)</title><rect x="194.92656142759083" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(218,108,7)" rx="2" ry="2" _orig_x="239.2" _orig_width="0.3"/>
<text x="197.92656142759083" y="1919.5" _orig_x="242.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="168.40837336993815" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(249,87,41)" rx="2" ry="2" _orig_x="214.9" _orig_width="0.2"/>
<text x="171.40837336993815" y="1999.5" _orig_x="217.94"/>
</g>
<g class="hide">
<title>clutter_actor_paint (678 samples, 0.10%)</title><rect x="203.32944406314337" y="2005" width="1.3095401509951956" height="15.0" fill="rgb(214,189,39)" rx="2" ry="2" _orig_x="246.9" _orig_width="1.2"/>
<text x="206.32944406314337" y="2015.5" _orig_x="249.92"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1333" width="2.182566918325326" height="15.0" fill="rgb(217,37,12)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1343.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,888 samples, 0.28%)</title><rect x="794.2594371997253" y="1989" width="3.6012354152367876" height="15.0" fill="rgb(205,148,50)" rx="2" ry="2" _orig_x="788.4" _orig_width="3.3"/>
<text x="797.2594371997253" y="1999.5" _orig_x="791.38"/>
</g>
<g>
<title>__gnu_cxx::__ops::_Iter_comp_val&lt;TableHeap::cmp&gt;::operator (1,306 samples, 0.19%)</title><rect x="1146.6712422786547" y="1893" width="9.313658201784488" height="15.0" fill="rgb(253,107,3)" rx="2" ry="2" _orig_x="687.5" _orig_width="2.3"/>
<text x="1149.6712422786547" y="1903.5" _orig_x="690.49"/>
</g>
<g class="hide">
<title>[code] (893 samples, 0.13%)</title><rect x="87.32601235415227" y="1989" width="1.6369251887439944" height="15.0" fill="rgb(213,132,5)" rx="2" ry="2" _orig_x="140.6" _orig_width="1.5"/>
<text x="90.32601235415227" y="1999.5" _orig_x="143.58"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="917" width="1.091283459162663" height="15.0" fill="rgb(246,131,28)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="927.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (1,374 samples, 0.20%)</title><rect x="589.4715168153739" y="1845" width="9.71859986273164" height="15.0" fill="rgb(226,12,11)" rx="2" ry="2" _orig_x="549.9" _orig_width="2.4"/>
<text x="592.4715168153739" y="1855.5" _orig_x="552.92"/>
</g>
<g class="hide">
<title>[code] (131 samples, 0.02%)</title><rect x="86.12560054907334" y="1205" width="0.2182566918325326" height="15.0" fill="rgb(216,22,53)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1215.5" _orig_x="142.46"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (76 samples, 0.01%)</title><rect x="1092.8140013726838" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(209,133,39)" rx="2" ry="2" _orig_x="674.2" _orig_width="0.1"/>
<text x="1095.8140013726838" y="1919.5" _orig_x="677.21"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (453 samples, 0.07%)</title><rect x="580.9677419354836" y="1797" width="3.239533287577214" height="15.0" fill="rgb(214,128,35)" rx="2" ry="2" _orig_x="547.8" _orig_width="0.8"/>
<text x="583.9677419354836" y="1807.5" _orig_x="550.82"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (269 samples, 0.04%)</title><rect x="336.4" y="2053" width="0.4" height="15.0" fill="rgb(242,48,45)" rx="2" ry="2"/>
<text x="339.37" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::new_allocator (77 samples, 0.01%)</title><rect x="1008.1811942347287" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(206,133,48)" rx="2" ry="2" _orig_x="653.3" _orig_width="0.1"/>
<text x="1011.1811942347287" y="1855.5" _orig_x="656.28"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (1,024 samples, 0.15%)</title><rect x="77.6252573781743" y="1813" width="7.28894989704873" height="15.0" fill="rgb(238,52,34)" rx="2" ry="2" _orig_x="423.5" _orig_width="1.8"/>
<text x="80.6252573781743" y="1823.5" _orig_x="426.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (548 samples, 0.08%)</title><rect x="333.9560741249141" y="2021" width="1.091283459162663" height="15.0" fill="rgb(209,215,39)" rx="2" ry="2" _orig_x="366.6" _orig_width="1.0"/>
<text x="336.9560741249141" y="2031.5" _orig_x="369.59"/>
</g>
<g class="hide">
<title>[unknown] (63 samples, 0.01%)</title><rect x="201.69251887439938" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(239,121,52)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1903.5" _orig_x="248.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(239,69,36)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="1999.5" _orig_x="806.06"/>
</g>
<g>
<title>Field::CompareLessThan (108 samples, 0.02%)</title><rect x="648.9979409746054" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(224,30,27)" rx="2" ry="2" _orig_x="564.6" _orig_width="0.2"/>
<text x="651.9979409746054" y="1903.5" _orig_x="567.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="212.605353466026" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(253,103,38)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="2015.5" _orig_x="258.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (424 samples, 0.06%)</title><rect x="333.08304735758395" y="2021" width="0.8730267673301304" height="15.0" fill="rgb(214,202,41)" rx="2" ry="2" _orig_x="365.8" _orig_width="0.8"/>
<text x="336.08304735758395" y="2031.5" _orig_x="368.82"/>
</g>
<g class="hide">
<title>[code] (90 samples, 0.01%)</title><rect x="66.7" y="1909" width="0.1" height="15.0" fill="rgb(231,113,18)" rx="2" ry="2"/>
<text x="69.69" y="1919.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_check_len (1,816 samples, 0.27%)</title><rect x="911.8050789293068" y="1829" width="12.958133150308855" height="15.0" fill="rgb(235,163,4)" rx="2" ry="2" _orig_x="629.5" _orig_width="3.2"/>
<text x="914.8050789293068" y="1839.5" _orig_x="632.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (149 samples, 0.02%)</title><rect x="56.5" y="1925" width="0.2" height="15.0" fill="rgb(215,188,17)" rx="2" ry="2"/>
<text x="59.47" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="805.7179135209333" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(237,69,24)" rx="2" ry="2" _orig_x="798.9" _orig_width="0.1"/>
<text x="808.7179135209333" y="1951.5" _orig_x="801.87"/>
</g>
<g class="hide">
<title>[unknown] (1,137 samples, 0.17%)</title><rect x="58.73438572409051" y="309" width="2.182566918325326" height="15.0" fill="rgb(232,52,20)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="319.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (60 samples, 0.01%)</title><rect x="265.11324639670556" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(238,44,11)" rx="2" ry="2" _orig_x="469.8" _orig_width="0.1"/>
<text x="268.11324639670556" y="1743.5" _orig_x="472.81"/>
</g>
<g class="hide">
<title>[code] (221 samples, 0.03%)</title><rect x="86.67124227865467" y="1685" width="0.4365133836650652" height="15.0" fill="rgb(236,184,31)" rx="2" ry="2" _orig_x="140.0" _orig_width="0.4"/>
<text x="89.67124227865467" y="1695.5" _orig_x="142.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,865 samples, 1.02%)</title><rect x="715.6870281400136" y="1973" width="13.204529855868222" height="15.0" fill="rgb(234,134,23)" rx="2" ry="2" _orig_x="716.4" _orig_width="12.1"/>
<text x="718.6870281400136" y="1983.5" _orig_x="719.45"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (168 samples, 0.02%)</title><rect x="286.57515442690465" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(206,19,19)" rx="2" ry="2" _orig_x="475.1" _orig_width="0.2"/>
<text x="289.57515442690465" y="1855.5" _orig_x="478.05"/>
</g>
<g class="hide">
<title>ntfs_attr_open (208 samples, 0.03%)</title><rect x="786.9478380233355" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(251,174,5)" rx="2" ry="2" _orig_x="781.7" _orig_width="0.4"/>
<text x="789.9478380233355" y="2047.5" _orig_x="784.73"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (96 samples, 0.01%)</title><rect x="1047.8654770075498" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(234,96,52)" rx="2" ry="2" _orig_x="663.1" _orig_width="0.2"/>
<text x="1050.8654770075498" y="1791.5" _orig_x="666.09"/>
</g>
<g>
<title>BPlusTree::InternalInsert (18,961 samples, 2.82%)</title><rect x="12.834591626630015" y="1893" width="134.44063143445436" height="15.0" fill="rgb(218,30,27)" rx="2" ry="2" _orig_x="407.5" _orig_width="33.2"/>
<text x="15.834591626630015" y="1903.5" _orig_x="410.52">BPlusTree::Internal..</text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (150 samples, 0.02%)</title><rect x="677.343857240906" y="1797" width="1.214824982841455" height="15.0" fill="rgb(212,184,13)" rx="2" ry="2" _orig_x="571.6" _orig_width="0.3"/>
<text x="680.343857240906" y="1807.5" _orig_x="574.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="21.7" y="1925" width="0.2" height="15.0" fill="rgb(253,59,6)" rx="2" ry="2"/>
<text x="24.66" y="1935.5"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (946 samples, 0.14%)</title><rect x="156.62251201098138" y="2021" width="1.855181880576527" height="15.0" fill="rgb(232,122,11)" rx="2" ry="2" _orig_x="204.1" _orig_width="1.7"/>
<text x="159.62251201098138" y="2031.5" _orig_x="207.15"/>
</g>
<g class="hide">
<title>[code] (443 samples, 0.07%)</title><rect x="15.3" y="1861" width="0.8" height="15.0" fill="rgb(217,60,26)" rx="2" ry="2"/>
<text x="18.34" y="1871.5"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (148 samples, 0.02%)</title><rect x="22.3" y="2005" width="0.3" height="15.0" fill="rgb(244,160,12)" rx="2" ry="2"/>
<text x="25.33" y="2015.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (1,115 samples, 0.17%)</title><rect x="788.7028140013728" y="1781" width="8.098833218943033" height="15.0" fill="rgb(209,139,8)" rx="2" ry="2" _orig_x="599.1" _orig_width="2.0"/>
<text x="791.7028140013728" y="1791.5" _orig_x="602.12"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (160 samples, 0.02%)</title><rect x="469.2038435140701" y="1781" width="1.214824982841455" height="15.0" fill="rgb(234,99,13)" rx="2" ry="2" _orig_x="520.2" _orig_width="0.3"/>
<text x="472.2038435140701" y="1791.5" _orig_x="523.20"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (95 samples, 0.01%)</title><rect x="831.6266300617709" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(221,211,5)" rx="2" ry="2" _orig_x="609.7" _orig_width="0.2"/>
<text x="834.6266300617709" y="1759.5" _orig_x="612.71"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (608 samples, 0.09%)</title><rect x="240.00686341798217" y="1781" width="4.454358270418669" height="15.0" fill="rgb(237,212,35)" rx="2" ry="2" _orig_x="463.6" _orig_width="1.1"/>
<text x="243.00686341798217" y="1791.5" _orig_x="466.60"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (195 samples, 0.03%)</title><rect x="572.0590253946466" y="1797" width="1.619766643788607" height="15.0" fill="rgb(217,158,43)" rx="2" ry="2" _orig_x="545.6" _orig_width="0.4"/>
<text x="575.0590253946466" y="1807.5" _orig_x="548.62"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1237" width="1.091283459162663" height="15.0" fill="rgb(209,61,29)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1247.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (58 samples, 0.01%)</title><rect x="831.2216884008237" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(227,96,34)" rx="2" ry="2" _orig_x="609.6" _orig_width="0.1"/>
<text x="834.2216884008237" y="1775.5" _orig_x="612.55"/>
</g>
<g class="hide">
<title>[code] (128 samples, 0.02%)</title><rect x="66.6" y="2021" width="0.3" height="15.0" fill="rgb(214,102,13)" rx="2" ry="2"/>
<text x="69.63" y="2031.5"/>
</g>
<g class="hide">
<title>[perf-123031.map] (158 samples, 0.02%)</title><rect x="86.78037062457093" y="1541" width="0.3273850377487989" height="15.0" fill="rgb(212,83,52)" rx="2" ry="2" _orig_x="140.1" _orig_width="0.3"/>
<text x="89.78037062457093" y="1551.5" _orig_x="143.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (143 samples, 0.02%)</title><rect x="167.535346602608" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(222,58,7)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1935.5" _orig_x="217.05"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (75 samples, 0.01%)</title><rect x="675.3191489361703" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(241,31,45)" rx="2" ry="2" _orig_x="571.1" _orig_width="0.1"/>
<text x="678.3191489361703" y="1807.5" _orig_x="574.08"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (85 samples, 0.01%)</title><rect x="548.9773507206587" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(235,140,4)" rx="2" ry="2" _orig_x="539.9" _orig_width="0.1"/>
<text x="551.9773507206587" y="1759.5" _orig_x="542.89"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (91 samples, 0.01%)</title><rect x="1078.2361015785862" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(208,179,25)" rx="2" ry="2" _orig_x="670.6" _orig_width="0.1"/>
<text x="1081.2361015785862" y="1839.5" _orig_x="673.56"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (203 samples, 0.03%)</title><rect x="186.74193548387083" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(212,134,19)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="1999.5" _orig_x="234.71"/>
</g>
<g class="hide">
<title>[libmutter-6.so.0.0.0] (101 samples, 0.01%)</title><rect x="228.1" y="2053" width="0.2" height="15.0" fill="rgb(239,79,38)" rx="2" ry="2"/>
<text x="231.12" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (207 samples, 0.03%)</title><rect x="23.36307481125605" y="1701" width="1.214824982841455" height="15.0" fill="rgb(209,31,2)" rx="2" ry="2" _orig_x="410.1" _orig_width="0.3"/>
<text x="26.36307481125605" y="1711.5" _orig_x="413.06"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (103 samples, 0.02%)</title><rect x="1090.3843514070008" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(213,2,17)" rx="2" ry="2" _orig_x="673.6" _orig_width="0.2"/>
<text x="1093.3843514070008" y="1919.5" _orig_x="676.58"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (88 samples, 0.01%)</title><rect x="405.2230610844199" y="1669" width="0.8098833218943035" height="15.0" fill="rgb(231,183,54)" rx="2" ry="2" _orig_x="504.4" _orig_width="0.2"/>
<text x="408.2230610844199" y="1679.5" _orig_x="507.42"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (945 samples, 0.14%)</title><rect x="70.33630748112552" y="1781" width="6.884008236101578" height="15.0" fill="rgb(240,74,9)" rx="2" ry="2" _orig_x="421.7" _orig_width="1.7"/>
<text x="73.33630748112552" y="1791.5" _orig_x="424.72"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (203 samples, 0.03%)</title><rect x="678.9636238846946" y="1813" width="1.214824982841455" height="15.0" fill="rgb(254,131,35)" rx="2" ry="2" _orig_x="572.0" _orig_width="0.3"/>
<text x="681.9636238846946" y="1823.5" _orig_x="574.96"/>
</g>
<g class="hide">
<title>kworker/8:4-eve (620 samples, 0.09%)</title><rect x="371.8" y="2069" width="1.1" height="15.0" fill="rgb(239,201,36)" rx="2" ry="2"/>
<text x="374.85" y="2079.5"/>
</g>
<g class="hide">
<title>[unknown] (623 samples, 0.09%)</title><rect x="260.1853122855181" y="1845" width="1.2004118050789294" height="15.0" fill="rgb(205,135,2)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1855.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,761 samples, 0.26%)</title><rect x="262.2587508579271" y="1861" width="3.382978723404255" height="15.0" fill="rgb(236,200,47)" rx="2" ry="2" _orig_x="300.9" _orig_width="3.1"/>
<text x="265.2587508579271" y="1871.5" _orig_x="303.88"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (171 samples, 0.03%)</title><rect x="452.6012354152368" y="1749" width="1.214824982841455" height="15.0" fill="rgb(230,138,19)" rx="2" ry="2" _orig_x="516.1" _orig_width="0.3"/>
<text x="455.6012354152368" y="1759.5" _orig_x="519.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (523 samples, 0.08%)</title><rect x="157.49553877831153" y="1957" width="0.9821551132463967" height="15.0" fill="rgb(246,11,10)" rx="2" ry="2" _orig_x="204.9" _orig_width="0.9"/>
<text x="160.49553877831153" y="1967.5" _orig_x="207.89"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (512 samples, 0.08%)</title><rect x="37.08805031446545" y="1893" width="3.339622641509434" height="15.0" fill="rgb(237,197,17)" rx="2" ry="2" _orig_x="398.0" _orig_width="0.9"/>
<text x="40.08805031446545" y="1903.5" _orig_x="400.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,267 samples, 0.49%)</title><rect x="136.76115305422093" y="1973" width="6.329444063143446" height="15.0" fill="rgb(216,150,4)" rx="2" ry="2" _orig_x="185.9" _orig_width="5.8"/>
<text x="139.76115305422093" y="1983.5" _orig_x="188.93"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::empty (653 samples, 0.10%)</title><rect x="881.0295126973231" y="1877" width="4.454358270418669" height="15.0" fill="rgb(221,210,21)" rx="2" ry="2" _orig_x="621.9" _orig_width="1.1"/>
<text x="884.0295126973231" y="1887.5" _orig_x="624.87"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (209 samples, 0.03%)</title><rect x="1141.407000686342" y="1797" width="1.619766643788607" height="15.0" fill="rgb(254,170,17)" rx="2" ry="2" _orig_x="686.2" _orig_width="0.4"/>
<text x="1144.407000686342" y="1807.5" _orig_x="689.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (150 samples, 0.02%)</title><rect x="341.59505833905274" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(212,199,13)" rx="2" ry="2" _orig_x="373.6" _orig_width="0.3"/>
<text x="344.59505833905274" y="1919.5" _orig_x="376.60"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (85 samples, 0.01%)</title><rect x="706.0947151681538" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(239,99,17)" rx="2" ry="2" _orig_x="578.7" _orig_width="0.1"/>
<text x="709.0947151681538" y="1855.5" _orig_x="581.65"/>
</g>
<g class="hide">
<title>[code] (395 samples, 0.06%)</title><rect x="69.53809196980086" y="2021" width="0.7638984214138641" height="15.0" fill="rgb(235,164,17)" rx="2" ry="2" _orig_x="124.3" _orig_width="0.7"/>
<text x="72.53809196980086" y="2031.5" _orig_x="127.27"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,125 samples, 0.76%)</title><rect x="719.0700068634179" y="1861" width="9.821551132463966" height="15.0" fill="rgb(217,139,5)" rx="2" ry="2" _orig_x="719.5" _orig_width="9.0"/>
<text x="722.0700068634179" y="1871.5" _orig_x="722.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (265 samples, 0.04%)</title><rect x="340.3946465339738" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(217,46,11)" rx="2" ry="2" _orig_x="372.5" _orig_width="0.4"/>
<text x="343.3946465339738" y="1951.5" _orig_x="375.46"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,030 samples, 0.15%)</title><rect x="402.79341111873714" y="1749" width="7.28894989704873" height="15.0" fill="rgb(250,143,19)" rx="2" ry="2" _orig_x="503.8" _orig_width="1.8"/>
<text x="405.79341111873714" y="1759.5" _orig_x="506.83"/>
</g>
<g class="hide">
<title>_nv010980rm (96 samples, 0.01%)</title><rect x="346.4" y="2053" width="0.2" height="15.0" fill="rgb(223,144,48)" rx="2" ry="2"/>
<text x="349.42" y="2063.5"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (90 samples, 0.01%)</title><rect x="679.3685655456418" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(254,213,16)" rx="2" ry="2" _orig_x="572.1" _orig_width="0.2"/>
<text x="682.3685655456418" y="1791.5" _orig_x="575.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (278 samples, 0.04%)</title><rect x="220.6808510638297" y="1877" width="0.5456417295813315" height="15.0" fill="rgb(209,9,20)" rx="2" ry="2" _orig_x="262.8" _orig_width="0.5"/>
<text x="223.6808510638297" y="1887.5" _orig_x="265.81"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="629" width="1.091283459162663" height="15.0" fill="rgb(246,143,53)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="639.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__fill_a&lt;char&gt; (83 samples, 0.01%)</title><rect x="965.2573781743309" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(219,28,4)" rx="2" ry="2" _orig_x="642.7" _orig_width="0.1"/>
<text x="968.2573781743309" y="1775.5" _orig_x="645.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.02%)</title><rect x="161.86067261496217" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(241,172,14)" rx="2" ry="2" _orig_x="208.9" _orig_width="0.2"/>
<text x="164.86067261496217" y="1999.5" _orig_x="211.86"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (172 samples, 0.03%)</title><rect x="159.42347288949887" y="1733" width="1.214824982841455" height="15.0" fill="rgb(225,27,0)" rx="2" ry="2" _orig_x="443.7" _orig_width="0.3"/>
<text x="162.42347288949887" y="1743.5" _orig_x="446.70"/>
</g>
<g class="hide">
<title>[unknown] (25,456 samples, 3.78%)</title><rect x="1168.5696636925188" y="2021" width="48.67124227865477" height="15.0" fill="rgb(218,106,36)" rx="2" ry="2" _orig_x="1131.4" _orig_width="44.6"/>
<text x="1171.5696636925188" y="2031.5" _orig_x="1134.37">[unknown] </text>
</g>
<g>
<title>TableHeap::GetTuple (2,779 samples, 0.41%)</title><rect x="334.7632120796156" y="1941" width="19.842141386410432" height="15.0" fill="rgb(245,75,27)" rx="2" ry="2" _orig_x="487.0" _orig_width="4.9"/>
<text x="337.7632120796156" y="1951.5" _orig_x="490.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (204 samples, 0.03%)</title><rect x="194.81743308167458" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(239,88,37)" rx="2" ry="2" _orig_x="239.1" _orig_width="0.4"/>
<text x="197.81743308167458" y="1935.5" _orig_x="242.12"/>
</g>
<g class="hide">
<title>[code] (130 samples, 0.02%)</title><rect x="14.2" y="1797" width="0.3" height="15.0" fill="rgb(214,199,12)" rx="2" ry="2"/>
<text x="17.23" y="1807.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="933" width="2.182566918325326" height="15.0" fill="rgb(235,75,10)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="943.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1317" width="2.182566918325326" height="15.0" fill="rgb(231,173,4)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1327.5" _orig_x="117.41"/>
</g>
<g>
<title>TableHeap::InsertTuple (4,762 samples, 0.71%)</title><rect x="1123.18462594372" y="1957" width="33.61015785861359" height="15.0" fill="rgb(246,209,12)" rx="2" ry="2" _orig_x="681.7" _orig_width="8.3"/>
<text x="1126.18462594372" y="1967.5" _orig_x="684.67">Tab..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.02%)</title><rect x="1186.6" y="2037" width="0.3" height="15.0" fill="rgb(208,178,33)" rx="2" ry="2"/>
<text x="1189.60" y="2047.5"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (132 samples, 0.02%)</title><rect x="40.37062457103637" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(205,174,47)" rx="2" ry="2" _orig_x="414.3" _orig_width="0.2"/>
<text x="43.37062457103637" y="1823.5" _orig_x="417.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="14.6" y="1877" width="0.1" height="15.0" fill="rgb(235,73,36)" rx="2" ry="2"/>
<text x="17.63" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="265.42347288949884" y="1733" width="0.2182566918325326" height="15.0" fill="rgb(206,138,33)" rx="2" ry="2" _orig_x="303.8" _orig_width="0.2"/>
<text x="268.42347288949884" y="1743.5" _orig_x="306.77"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (510 samples, 0.08%)</title><rect x="929.6225120109814" y="1797" width="3.644474948524365" height="15.0" fill="rgb(248,227,47)" rx="2" ry="2" _orig_x="633.9" _orig_width="0.9"/>
<text x="932.6225120109814" y="1807.5" _orig_x="636.95"/>
</g>
<g class="hide">
<title>[code] (563 samples, 0.08%)</title><rect x="15.2" y="2037" width="1.0" height="15.0" fill="rgb(230,185,22)" rx="2" ry="2"/>
<text x="18.17" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="59.82566918325317" y="85" width="0.2182566918325326" height="15.0" fill="rgb(247,165,3)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="95.5" _orig_x="118.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (167 samples, 0.02%)</title><rect x="1167.364779874214" y="2021" width="1.1132075471698113" height="15.0" fill="rgb(222,138,4)" rx="2" ry="2" _orig_x="702.6" _orig_width="0.3"/>
<text x="1170.364779874214" y="2031.5" _orig_x="705.60"/>
</g>
<g>
<title>ExecuteEngine::Execute (166,300 samples, 24.69%)</title><rect x="10" y="2021" width="1180" height="15.0" fill="rgb(209,83,11)" rx="2" ry="2" _orig_x="406.8" _orig_width="291.4"/>
<text x="13" y="2031.5" _orig_x="409.83">ExecuteEngine::Execute </text>
</g>
<g class="hide">
<title>ntfs_mst_pre_write_fixup (67 samples, 0.01%)</title><rect x="792.8407687028139" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(252,82,20)" rx="2" ry="2" _orig_x="787.1" _orig_width="0.1"/>
<text x="795.8407687028139" y="2047.5" _orig_x="790.09"/>
</g>
<g>
<title>Field::CompareLessThan (164 samples, 0.02%)</title><rect x="15.26424159231301" y="1845" width="1.214824982841455" height="15.0" fill="rgb(250,141,4)" rx="2" ry="2" _orig_x="408.1" _orig_width="0.3"/>
<text x="18.26424159231301" y="1855.5" _orig_x="411.09"/>
</g>
<g class="hide">
<title>[code] (75 samples, 0.01%)</title><rect x="15.9" y="1685" width="0.2" height="15.0" fill="rgb(225,133,4)" rx="2" ry="2"/>
<text x="18.93" y="1695.5"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1589" width="2.182566918325326" height="15.0" fill="rgb(212,68,20)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1599.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (1,070 samples, 0.16%)</title><rect x="85.14344543582693" y="1845" width="2.0734385724090596" height="15.0" fill="rgb(213,221,9)" rx="2" ry="2" _orig_x="138.6" _orig_width="1.9"/>
<text x="88.14344543582693" y="1855.5" _orig_x="141.58"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (131 samples, 0.02%)</title><rect x="707.7144818119424" y="1925" width="1.214824982841455" height="15.0" fill="rgb(250,198,3)" rx="2" ry="2" _orig_x="579.1" _orig_width="0.3"/>
<text x="710.7144818119424" y="1935.5" _orig_x="582.13"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (939 samples, 0.14%)</title><rect x="78.03019903912153" y="1765" width="6.479066575154428" height="15.0" fill="rgb(236,63,9)" rx="2" ry="2" _orig_x="423.6" _orig_width="1.6"/>
<text x="81.03019903912153" y="1775.5" _orig_x="426.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,282 samples, 0.19%)</title><rect x="13.71069182389937" y="1941" width="8.534591194968552" height="15.0" fill="rgb(206,171,47)" rx="2" ry="2" _orig_x="391.7" _orig_width="2.3"/>
<text x="16.71069182389937" y="1951.5" _orig_x="394.74"/>
</g>
<g class="hide">
<title>__strcmp_avx2 (198 samples, 0.03%)</title><rect x="737.1853122855181" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(207,93,20)" rx="2" ry="2" _orig_x="736.1" _orig_width="0.3"/>
<text x="740.1853122855181" y="2015.5" _orig_x="739.05"/>
</g>
<g>
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (136 samples, 0.02%)</title><rect x="1096.0535346602608" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(227,168,7)" rx="2" ry="2" _orig_x="675.0" _orig_width="0.2"/>
<text x="1099.0535346602608" y="1919.5" _orig_x="677.99"/>
</g>
<g class="hide">
<title>[code] (958 samples, 0.14%)</title><rect x="85.2525737817432" y="1781" width="1.855181880576527" height="15.0" fill="rgb(215,60,27)" rx="2" ry="2" _orig_x="138.7" _orig_width="1.7"/>
<text x="88.2525737817432" y="1791.5" _orig_x="141.74"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,404 samples, 0.80%)</title><rect x="1166.5" y="1765" width="9.5" height="15.0" fill="rgb(250,109,37)" rx="2" ry="2"/>
<text x="1169.48" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,229 samples, 0.63%)</title><rect x="1159.8393960192175" y="1717" width="8.075497597803707" height="15.0" fill="rgb(244,63,36)" rx="2" ry="2" _orig_x="1123.4" _orig_width="7.4"/>
<text x="1162.8393960192175" y="1727.5" _orig_x="1126.40"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (116 samples, 0.02%)</title><rect x="186.95950583390524" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(221,99,26)" rx="2" ry="2" _orig_x="450.5" _orig_width="0.2"/>
<text x="189.95950583390524" y="1855.5" _orig_x="453.48"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (72 samples, 0.01%)</title><rect x="253.36993822923802" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(219,225,13)" rx="2" ry="2" _orig_x="466.9" _orig_width="0.1"/>
<text x="256.369938229238" y="1839.5" _orig_x="469.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,615 samples, 0.98%)</title><rect x="1164.4" y="1829" width="11.6" height="15.0" fill="rgb(251,95,8)" rx="2" ry="2"/>
<text x="1167.38" y="1839.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,791 samples, 1.01%)</title><rect x="715.9052848318462" y="1957" width="12.98627316403569" height="15.0" fill="rgb(249,201,14)" rx="2" ry="2" _orig_x="716.6" _orig_width="11.9"/>
<text x="718.9052848318462" y="1967.5" _orig_x="719.58"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (63 samples, 0.01%)</title><rect x="409.2724776938914" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(214,99,26)" rx="2" ry="2" _orig_x="505.4" _orig_width="0.1"/>
<text x="412.2724776938914" y="1743.5" _orig_x="508.38"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (273 samples, 0.04%)</title><rect x="69.7" y="1957" width="0.5" height="15.0" fill="rgb(226,131,18)" rx="2" ry="2"/>
<text x="72.74" y="1967.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,541 samples, 0.53%)</title><rect x="747.3342484557309" y="1749" width="6.76595744680851" height="15.0" fill="rgb(244,6,5)" rx="2" ry="2" _orig_x="745.4" _orig_width="6.2"/>
<text x="750.3342484557309" y="1759.5" _orig_x="748.40"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (3,225 samples, 0.48%)</title><rect x="785.0583390528484" y="1813" width="22.676733013040494" height="15.0" fill="rgb(216,152,28)" rx="2" ry="2" _orig_x="598.2" _orig_width="5.6"/>
<text x="788.0583390528484" y="1823.5" _orig_x="601.15">s..</text>
</g>
<g class="hide">
<title>__pthread_getspecific (106 samples, 0.02%)</title><rect x="711.5401509951955" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(254,197,24)" rx="2" ry="2" _orig_x="712.6" _orig_width="0.2"/>
<text x="714.5401509951955" y="2031.5" _orig_x="715.63"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (598 samples, 0.09%)</title><rect x="180.84900480439248" y="1989" width="1.091283459162663" height="15.0" fill="rgb(233,98,41)" rx="2" ry="2" _orig_x="226.3" _orig_width="1.0"/>
<text x="183.84900480439248" y="1999.5" _orig_x="229.30"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (4,773 samples, 0.71%)</title><rect x="269.6" y="2053" width="8.4" height="15.0" fill="rgb(244,24,5)" rx="2" ry="2"/>
<text x="272.64" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (417 samples, 0.06%)</title><rect x="165.9025394646534" y="1749" width="3.239533287577214" height="15.0" fill="rgb(218,167,34)" rx="2" ry="2" _orig_x="445.3" _orig_width="0.8"/>
<text x="168.9025394646534" y="1759.5" _orig_x="448.35"/>
</g>
<g>
<title>Field::CompareLessThan (188 samples, 0.03%)</title><rect x="65.47700754975975" y="1861" width="1.214824982841455" height="15.0" fill="rgb(212,111,5)" rx="2" ry="2" _orig_x="420.5" _orig_width="0.3"/>
<text x="68.47700754975975" y="1871.5" _orig_x="423.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (209 samples, 0.03%)</title><rect x="142.65408373369928" y="1813" width="0.4365133836650652" height="15.0" fill="rgb(228,18,43)" rx="2" ry="2" _orig_x="191.3" _orig_width="0.4"/>
<text x="145.65408373369928" y="1823.5" _orig_x="194.29"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,943 samples, 0.29%)</title><rect x="285.17570350034305" y="1877" width="3.710363761153054" height="15.0" fill="rgb(234,25,54)" rx="2" ry="2" _orig_x="321.9" _orig_width="3.4"/>
<text x="288.17570350034305" y="1887.5" _orig_x="324.87"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (370 samples, 0.05%)</title><rect x="867.26149622512" y="1877" width="2.42964996568291" height="15.0" fill="rgb(253,147,30)" rx="2" ry="2" _orig_x="618.5" _orig_width="0.6"/>
<text x="870.26149622512" y="1887.5" _orig_x="621.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="197" width="0.2182566918325326" height="15.0" fill="rgb(237,58,15)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="207.5" _orig_x="119.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (110 samples, 0.02%)</title><rect x="10.60878517501706" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(205,77,39)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="1951.5" _orig_x="73.35"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (116 samples, 0.02%)</title><rect x="518.6067261496223" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(220,229,31)" rx="2" ry="2" _orig_x="532.4" _orig_width="0.2"/>
<text x="521.6067261496223" y="1743.5" _orig_x="535.41"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (67 samples, 0.01%)</title><rect x="282.5257378174331" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(254,38,48)" rx="2" ry="2" _orig_x="474.1" _orig_width="0.1"/>
<text x="285.5257378174331" y="1791.5" _orig_x="477.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="307.98352779684274" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(248,81,53)" rx="2" ry="2" _orig_x="342.8" _orig_width="0.1"/>
<text x="310.98352779684274" y="1999.5" _orig_x="345.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,205 samples, 0.33%)</title><rect x="138.83459162662996" y="1893" width="4.256005490734386" height="15.0" fill="rgb(234,11,1)" rx="2" ry="2" _orig_x="187.8" _orig_width="3.9"/>
<text x="141.83459162662996" y="1903.5" _orig_x="190.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,887 samples, 1.02%)</title><rect x="275.68153740562786" y="2005" width="13.204529855868222" height="15.0" fill="rgb(244,69,16)" rx="2" ry="2" _orig_x="313.2" _orig_width="12.1"/>
<text x="278.68153740562786" y="2015.5" _orig_x="316.21"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (125 samples, 0.02%)</title><rect x="121.76389842141373" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(251,20,27)" rx="2" ry="2" _orig_x="434.4" _orig_width="0.2"/>
<text x="124.76389842141373" y="1791.5" _orig_x="437.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (76 samples, 0.01%)</title><rect x="10.390528483184525" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(229,151,22)" rx="2" ry="2" _orig_x="70.1" _orig_width="0.1"/>
<text x="13.390528483184525" y="1855.5" _orig_x="73.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (344 samples, 0.05%)</title><rect x="12.245710363761054" y="1957" width="0.6547700754975978" height="15.0" fill="rgb(220,111,21)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1967.5" _orig_x="74.76"/>
</g>
<g class="hide">
<title>[code] (215 samples, 0.03%)</title><rect x="85.90734385724082" y="1477" width="0.4365133836650652" height="15.0" fill="rgb(216,19,27)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1487.5" _orig_x="142.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (134 samples, 0.02%)</title><rect x="288.5586822237473" y="1797" width="0.3273850377487989" height="15.0" fill="rgb(210,75,52)" rx="2" ry="2" _orig_x="325.0" _orig_width="0.3"/>
<text x="291.5586822237473" y="1807.5" _orig_x="328.04"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="1989" width="0.4365133836650652" height="15.0" fill="rgb(221,131,45)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1999.5" _orig_x="77.08"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (68 samples, 0.01%)</title><rect x="305.20247083047343" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(225,22,43)" rx="2" ry="2" _orig_x="479.7" _orig_width="0.1"/>
<text x="308.20247083047343" y="1871.5" _orig_x="482.73"/>
</g>
<g class="hide">
<title>[unknown] (65 samples, 0.01%)</title><rect x="23.2" y="2053" width="0.2" height="15.0" fill="rgb(208,158,27)" rx="2" ry="2"/>
<text x="26.24" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (625 samples, 0.09%)</title><rect x="260.1853122855181" y="1893" width="1.2004118050789294" height="15.0" fill="rgb(231,156,38)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.1"/>
<text x="263.1853122855181" y="1903.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (495 samples, 0.07%)</title><rect x="937.3164035689772" y="1845" width="3.644474948524365" height="15.0" fill="rgb(250,75,52)" rx="2" ry="2" _orig_x="635.8" _orig_width="0.9"/>
<text x="940.3164035689772" y="1855.5" _orig_x="638.79"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field&gt; (251 samples, 0.04%)</title><rect x="1102.5326012354153" y="1909" width="2.0247083047357584" height="15.0" fill="rgb(209,81,4)" rx="2" ry="2" _orig_x="676.6" _orig_width="0.5"/>
<text x="1105.5326012354153" y="1919.5" _orig_x="679.62"/>
</g>
<g class="hide">
<title>[code] (200 samples, 0.03%)</title><rect x="85.90734385724082" y="1445" width="0.4365133836650652" height="15.0" fill="rgb(221,212,11)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1455.5" _orig_x="142.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (60 samples, 0.01%)</title><rect x="805.608785175017" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(235,206,17)" rx="2" ry="2" _orig_x="798.8" _orig_width="0.1"/>
<text x="808.608785175017" y="1935.5" _orig_x="801.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (333 samples, 0.05%)</title><rect x="12.245710363761054" y="1941" width="0.6547700754975978" height="15.0" fill="rgb(229,210,32)" rx="2" ry="2" _orig_x="71.8" _orig_width="0.6"/>
<text x="15.245710363761054" y="1951.5" _orig_x="74.78"/>
</g>
<g class="hide">
<title>os::sleep (129 samples, 0.02%)</title><rect x="18.8" y="2005" width="0.3" height="15.0" fill="rgb(237,200,54)" rx="2" ry="2"/>
<text x="21.84" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,590 samples, 0.24%)</title><rect x="344.97803706245696" y="1925" width="2.9464653397391904" height="15.0" fill="rgb(217,152,33)" rx="2" ry="2" _orig_x="376.7" _orig_width="2.7"/>
<text x="347.97803706245696" y="1935.5" _orig_x="379.65"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (152 samples, 0.02%)</title><rect x="220.5696636925189" y="1797" width="1.214824982841455" height="15.0" fill="rgb(217,30,23)" rx="2" ry="2" _orig_x="458.8" _orig_width="0.3"/>
<text x="223.5696636925189" y="1807.5" _orig_x="461.83"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,917 samples, 0.28%)</title><rect x="261.93136582017837" y="1877" width="3.710363761153054" height="15.0" fill="rgb(249,80,10)" rx="2" ry="2" _orig_x="300.6" _orig_width="3.4"/>
<text x="264.93136582017837" y="1887.5" _orig_x="303.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="307.7652711050102" y="1925" width="0.1091283459162663" height="15.0" fill="rgb(229,97,53)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="1935.5" _orig_x="345.62"/>
</g>
<g class="hide">
<title>code (48,596 samples, 7.22%)</title><rect x="121.4" y="2069" width="85.1" height="15.0" fill="rgb(210,5,2)" rx="2" ry="2"/>
<text x="124.38" y="2079.5">code</text>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (107 samples, 0.02%)</title><rect x="340.4323953328756" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(217,218,50)" rx="2" ry="2" _orig_x="488.4" _orig_width="0.2"/>
<text x="343.4323953328756" y="1807.5" _orig_x="491.44"/>
</g>
<g class="hide">
<title>[code] (1,204 samples, 0.18%)</title><rect x="85.03431708991069" y="2005" width="2.2916952642415924" height="15.0" fill="rgb(228,14,39)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="2015.5" _orig_x="141.46"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (122 samples, 0.02%)</title><rect x="1141.8119423472888" y="1765" width="1.214824982841455" height="15.0" fill="rgb(230,216,31)" rx="2" ry="2" _orig_x="686.3" _orig_width="0.3"/>
<text x="1144.8119423472888" y="1775.5" _orig_x="689.34"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator++ (85 samples, 0.01%)</title><rect x="232.71791352093345" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(208,41,52)" rx="2" ry="2" _orig_x="461.8" _orig_width="0.1"/>
<text x="235.71791352093345" y="1839.5" _orig_x="464.78"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (78 samples, 0.01%)</title><rect x="95.03774879890184" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(250,17,19)" rx="2" ry="2" _orig_x="427.8" _orig_width="0.1"/>
<text x="98.03774879890184" y="1839.5" _orig_x="430.78"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (870 samples, 0.13%)</title><rect x="157.80370624571037" y="1813" width="6.0741249142072755" height="15.0" fill="rgb(237,2,38)" rx="2" ry="2" _orig_x="443.3" _orig_width="1.5"/>
<text x="160.80370624571037" y="1823.5" _orig_x="446.29"/>
</g>
<g>
<title>ReaderWriterLatch::WLock (64 samples, 0.01%)</title><rect x="1124.8043925875086" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(226,13,1)" rx="2" ry="2" _orig_x="682.1" _orig_width="0.1"/>
<text x="1127.8043925875086" y="1935.5" _orig_x="685.10"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (346 samples, 0.05%)</title><rect x="298.3184625943719" y="1813" width="2.42964996568291" height="15.0" fill="rgb(240,188,33)" rx="2" ry="2" _orig_x="478.0" _orig_width="0.6"/>
<text x="301.3184625943719" y="1823.5" _orig_x="481.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (87 samples, 0.01%)</title><rect x="221.0082361015785" y="1797" width="0.2182566918325326" height="15.0" fill="rgb(221,112,15)" rx="2" ry="2" _orig_x="263.1" _orig_width="0.2"/>
<text x="224.0082361015785" y="1807.5" _orig_x="266.14"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (648 samples, 0.10%)</title><rect x="917.879203843514" y="1797" width="4.85929993136582" height="15.0" fill="rgb(217,116,51)" rx="2" ry="2" _orig_x="631.0" _orig_width="1.2"/>
<text x="920.879203843514" y="1807.5" _orig_x="634.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (501 samples, 0.07%)</title><rect x="331.00960878517486" y="1989" width="0.9821551132463967" height="15.0" fill="rgb(215,194,15)" rx="2" ry="2" _orig_x="363.9" _orig_width="0.9"/>
<text x="334.00960878517486" y="1999.5" _orig_x="366.93"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="2005" width="0.5456417295813315" height="15.0" fill="rgb(232,120,50)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="2015.5" _orig_x="226.92"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (80 samples, 0.01%)</title><rect x="340.8373369938228" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(226,62,41)" rx="2" ry="2" _orig_x="488.5" _orig_width="0.1"/>
<text x="343.8373369938228" y="1791.5" _orig_x="491.47"/>
</g>
<g class="hide">
<title>__GI___writev (129 samples, 0.02%)</title><rect x="269.89773507206576" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(236,200,46)" rx="2" ry="2" _orig_x="307.9" _orig_width="0.2"/>
<text x="272.89773507206576" y="2047.5" _orig_x="310.92"/>
</g>
<g class="hide">
<title>VMThread::run (64 samples, 0.01%)</title><rect x="13.88263555250505" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(214,81,33)" rx="2" ry="2" _orig_x="73.3" _orig_width="0.2"/>
<text x="16.88263555250505" y="2015.5" _orig_x="76.34"/>
</g>
<g class="hide">
<title>[unknown] (1,147 samples, 0.17%)</title><rect x="58.73438572409051" y="373" width="2.182566918325326" height="15.0" fill="rgb(241,103,39)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="383.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="149" width="0.2182566918325326" height="15.0" fill="rgb(224,188,30)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="159.5" _orig_x="119.14"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (67 samples, 0.01%)</title><rect x="990.3637611530542" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(240,162,6)" rx="2" ry="2" _orig_x="648.9" _orig_width="0.2"/>
<text x="993.3637611530542" y="1903.5" _orig_x="651.95"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (659 samples, 0.10%)</title><rect x="267.9478380233356" y="1797" width="4.454358270418669" height="15.0" fill="rgb(225,83,19)" rx="2" ry="2" _orig_x="470.5" _orig_width="1.1"/>
<text x="270.9478380233356" y="1807.5" _orig_x="473.46"/>
</g>
<g class="hide">
<title>[unknown] (1,521 samples, 0.23%)</title><rect x="58.0796156485929" y="2021" width="2.837336993822924" height="15.0" fill="rgb(253,20,34)" rx="2" ry="2" _orig_x="113.8" _orig_width="2.6"/>
<text x="61.0796156485929" y="2031.5" _orig_x="116.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (256 samples, 0.04%)</title><rect x="62.0082361015785" y="1813" width="0.4365133836650652" height="15.0" fill="rgb(231,143,15)" rx="2" ry="2" _orig_x="117.4" _orig_width="0.4"/>
<text x="65.00823610157849" y="1823.5" _orig_x="120.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (720 samples, 0.11%)</title><rect x="35.60377358490579" y="2021" width="4.823899371069182" height="15.0" fill="rgb(211,85,8)" rx="2" ry="2" _orig_x="397.6" _orig_width="1.3"/>
<text x="38.60377358490579" y="2031.5" _orig_x="400.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (753 samples, 0.11%)</title><rect x="211.07755662319823" y="1893" width="1.418668496911462" height="15.0" fill="rgb(232,205,30)" rx="2" ry="2" _orig_x="254.0" _orig_width="1.3"/>
<text x="214.07755662319823" y="1903.5" _orig_x="256.97"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (125 samples, 0.02%)</title><rect x="344.8867536032944" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(213,90,49)" rx="2" ry="2" _orig_x="489.5" _orig_width="0.2"/>
<text x="347.8867536032944" y="1807.5" _orig_x="492.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (171 samples, 0.03%)</title><rect x="64.84557309540142" y="1733" width="0.3273850377487989" height="15.0" fill="rgb(221,14,3)" rx="2" ry="2" _orig_x="120.0" _orig_width="0.3"/>
<text x="67.84557309540142" y="1743.5" _orig_x="122.96"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (774 samples, 0.11%)</title><rect x="490.2608098833217" y="1781" width="5.264241592312972" height="15.0" fill="rgb(225,59,4)" rx="2" ry="2" _orig_x="525.4" _orig_width="1.3"/>
<text x="493.2608098833217" y="1791.5" _orig_x="528.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (146 samples, 0.02%)</title><rect x="58.0" y="1941" width="0.2" height="15.0" fill="rgb(248,78,33)" rx="2" ry="2"/>
<text x="60.97" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (331 samples, 0.05%)</title><rect x="1165.1383647798743" y="2021" width="2.2264150943396226" height="15.0" fill="rgb(244,66,53)" rx="2" ry="2" _orig_x="702.0" _orig_width="0.6"/>
<text x="1168.1383647798743" y="2031.5" _orig_x="704.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (96 samples, 0.01%)</title><rect x="12.682223747426125" y="1781" width="0.2182566918325326" height="15.0" fill="rgb(253,49,38)" rx="2" ry="2" _orig_x="72.2" _orig_width="0.2"/>
<text x="15.682223747426125" y="1791.5" _orig_x="75.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (102 samples, 0.02%)</title><rect x="331.7735072065888" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(206,10,25)" rx="2" ry="2" _orig_x="364.6" _orig_width="0.2"/>
<text x="334.7735072065888" y="1903.5" _orig_x="367.63"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (2,603 samples, 0.39%)</title><rect x="533.9945092656144" y="1765" width="18.627316403568976" height="15.0" fill="rgb(216,21,14)" rx="2" ry="2" _orig_x="536.2" _orig_width="4.6"/>
<text x="536.9945092656144" y="1775.5" _orig_x="539.23"/>
</g>
<g class="hide">
<title>[github-desktop] (94 samples, 0.01%)</title><rect x="14.7" y="1989" width="0.2" height="15.0" fill="rgb(245,130,37)" rx="2" ry="2"/>
<text x="17.74" y="1999.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::allocate (78 samples, 0.01%)</title><rect x="776.5545641729582" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(245,155,8)" rx="2" ry="2" _orig_x="596.1" _orig_width="0.2"/>
<text x="779.5545641729582" y="1759.5" _orig_x="599.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="58.3" y="2005" width="0.1" height="15.0" fill="rgb(254,167,45)" rx="2" ry="2"/>
<text x="61.33" y="2015.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (89 samples, 0.01%)</title><rect x="1108.2017844886752" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(220,216,3)" rx="2" ry="2" _orig_x="678.0" _orig_width="0.2"/>
<text x="1111.2017844886752" y="1839.5" _orig_x="681.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (233 samples, 0.03%)</title><rect x="10.06314344543573" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(212,47,13)" rx="2" ry="2" _orig_x="69.8" _orig_width="0.4"/>
<text x="13.06314344543573" y="1951.5" _orig_x="72.81"/>
</g>
<g class="hide">
<title>[code] (105 samples, 0.02%)</title><rect x="14.973919011667713" y="1733" width="0.2182566918325326" height="15.0" fill="rgb(247,64,25)" rx="2" ry="2" _orig_x="74.3" _orig_width="0.2"/>
<text x="17.97391901166771" y="1743.5" _orig_x="77.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (764 samples, 0.11%)</title><rect x="17.05031446540893" y="1877" width="5.19496855345912" height="15.0" fill="rgb(209,218,39)" rx="2" ry="2" _orig_x="392.6" _orig_width="1.4"/>
<text x="20.05031446540893" y="1887.5" _orig_x="395.65"/>
</g>
<g>
<title>DiskManager::FetchMetaPage (72 samples, 0.01%)</title><rect x="148.49004804392584" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(221,183,22)" rx="2" ry="2" _orig_x="441.0" _orig_width="0.1"/>
<text x="151.49004804392584" y="1855.5" _orig_x="444.00"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (86 samples, 0.01%)</title><rect x="229.0734385724089" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(244,97,38)" rx="2" ry="2" _orig_x="460.9" _orig_width="0.2"/>
<text x="232.0734385724089" y="1839.5" _orig_x="463.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="181" width="0.2182566918325326" height="15.0" fill="rgb(230,211,5)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="191.5" _orig_x="119.14"/>
</g>
<g>
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (69 samples, 0.01%)</title><rect x="1151.5305422100207" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(226,78,34)" rx="2" ry="2" _orig_x="688.7" _orig_width="0.1"/>
<text x="1154.5305422100207" y="1775.5" _orig_x="691.71"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (121 samples, 0.02%)</title><rect x="804.0905971173643" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(252,178,12)" rx="2" ry="2" _orig_x="602.9" _orig_width="0.2"/>
<text x="807.0905971173643" y="1791.5" _orig_x="605.89"/>
</g>
<g class="hide">
<title>[ntfs-3g] (111 samples, 0.02%)</title><rect x="736.4214138641042" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(245,99,52)" rx="2" ry="2" _orig_x="735.4" _orig_width="0.2"/>
<text x="739.4214138641042" y="2015.5" _orig_x="738.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (479 samples, 0.07%)</title><rect x="338.7577213452298" y="2037" width="0.8730267673301304" height="15.0" fill="rgb(246,177,34)" rx="2" ry="2" _orig_x="371.0" _orig_width="0.8"/>
<text x="341.7577213452298" y="2047.5" _orig_x="374.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,624 samples, 0.24%)</title><rect x="59.35220125786168" y="1781" width="10.38993710691824" height="15.0" fill="rgb(217,194,47)" rx="2" ry="2" _orig_x="404.0" _orig_width="2.8"/>
<text x="62.35220125786168" y="1791.5" _orig_x="406.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(206,223,23)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="2047.5" _orig_x="806.06"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (70 samples, 0.01%)</title><rect x="506.8634179821551" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(235,87,0)" rx="2" ry="2" _orig_x="529.5" _orig_width="0.1"/>
<text x="509.8634179821551" y="1855.5" _orig_x="532.52"/>
</g>
<g>
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (86 samples, 0.01%)</title><rect x="1005.3466026080989" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(241,199,28)" rx="2" ry="2" _orig_x="652.6" _orig_width="0.1"/>
<text x="1008.3466026080989" y="1855.5" _orig_x="655.59"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (86 samples, 0.01%)</title><rect x="51.30404941660943" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(244,58,0)" rx="2" ry="2" _orig_x="417.0" _orig_width="0.1"/>
<text x="54.30404941660943" y="1823.5" _orig_x="419.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,487 samples, 0.22%)</title><rect x="262.80439258750846" y="1845" width="2.837336993822924" height="15.0" fill="rgb(221,142,7)" rx="2" ry="2" _orig_x="301.4" _orig_width="2.6"/>
<text x="265.80439258750846" y="1855.5" _orig_x="304.36"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (82 samples, 0.01%)</title><rect x="132.29238160603978" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(253,81,46)" rx="2" ry="2" _orig_x="437.0" _orig_width="0.1"/>
<text x="135.29238160603978" y="1823.5" _orig_x="439.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (511 samples, 0.08%)</title><rect x="220.2443376801646" y="1973" width="0.9821551132463967" height="15.0" fill="rgb(221,165,54)" rx="2" ry="2" _orig_x="262.4" _orig_width="0.9"/>
<text x="223.2443376801646" y="1983.5" _orig_x="265.40"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1829" width="2.182566918325326" height="15.0" fill="rgb(249,203,35)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1839.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (58 samples, 0.01%)</title><rect x="289.32258064516117" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(230,207,17)" rx="2" ry="2" _orig_x="325.7" _orig_width="0.1"/>
<text x="292.32258064516117" y="2047.5" _orig_x="328.70"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="405" width="1.091283459162663" height="15.0" fill="rgb(212,226,30)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="415.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (101 samples, 0.01%)</title><rect x="414.94166094715166" y="1701" width="0.4049416609471517" height="15.0" fill="rgb(223,86,26)" rx="2" ry="2" _orig_x="506.8" _orig_width="0.1"/>
<text x="417.94166094715166" y="1711.5" _orig_x="509.76"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (108 samples, 0.02%)</title><rect x="1133.3081674673988" y="1733" width="0.8098833218943035" height="15.0" fill="rgb(228,60,16)" rx="2" ry="2" _orig_x="684.2" _orig_width="0.2"/>
<text x="1136.3081674673988" y="1743.5" _orig_x="687.19"/>
</g>
<g class="hide">
<title>[Xorg] (81 samples, 0.01%)</title><rect x="58.51612903225797" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(248,30,24)" rx="2" ry="2" _orig_x="114.2" _orig_width="0.1"/>
<text x="61.51612903225797" y="1951.5" _orig_x="117.20"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (130 samples, 0.02%)</title><rect x="297.1036376115304" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(217,227,14)" rx="2" ry="2" _orig_x="477.7" _orig_width="0.2"/>
<text x="300.1036376115304" y="1791.5" _orig_x="480.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,931 samples, 0.29%)</title><rect x="93.21894303363065" y="1925" width="3.710363761153054" height="15.0" fill="rgb(215,79,14)" rx="2" ry="2" _orig_x="146.0" _orig_width="3.4"/>
<text x="96.21894303363065" y="1935.5" _orig_x="149.02"/>
</g>
<g class="hide">
<title>[code] (1,161 samples, 0.17%)</title><rect x="85.03431708991069" y="1861" width="2.2916952642415924" height="15.0" fill="rgb(222,44,7)" rx="2" ry="2" _orig_x="138.5" _orig_width="2.1"/>
<text x="88.03431708991069" y="1871.5" _orig_x="141.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,965 samples, 0.29%)</title><rect x="261.82223747426207" y="1893" width="3.8194921070693204" height="15.0" fill="rgb(230,175,10)" rx="2" ry="2" _orig_x="300.5" _orig_width="3.5"/>
<text x="264.82223747426207" y="1903.5" _orig_x="303.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (79 samples, 0.01%)</title><rect x="57.4" y="1845" width="0.1" height="15.0" fill="rgb(210,48,11)" rx="2" ry="2"/>
<text x="60.35" y="1855.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="11.700068634179724" y="1813" width="0.3273850377487989" height="15.0" fill="rgb(252,17,54)" rx="2" ry="2" _orig_x="71.3" _orig_width="0.3"/>
<text x="14.700068634179724" y="1823.5" _orig_x="74.26"/>
</g>
<g class="hide">
<title>kworker/u32:2-e (3,570 samples, 0.53%)</title><rect x="384.4" y="2069" width="6.3" height="15.0" fill="rgb(248,50,34)" rx="2" ry="2"/>
<text x="387.42" y="2079.5"/>
</g>
<g class="hide">
<title>[NetworkManager] (1,976 samples, 0.29%)</title><rect x="23.6" y="2053" width="3.5" height="15.0" fill="rgb(240,202,20)" rx="2" ry="2"/>
<text x="26.61" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="725" width="1.091283459162663" height="15.0" fill="rgb(252,140,14)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="735.5" _orig_x="301.96"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (223 samples, 0.03%)</title><rect x="202.7522306108441" y="1765" width="1.619766643788607" height="15.0" fill="rgb(244,80,54)" rx="2" ry="2" _orig_x="454.4" _orig_width="0.4"/>
<text x="205.7522306108441" y="1775.5" _orig_x="457.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (343 samples, 0.05%)</title><rect x="335.0473575840768" y="2037" width="0.6547700754975978" height="15.0" fill="rgb(213,156,52)" rx="2" ry="2" _orig_x="367.6" _orig_width="0.6"/>
<text x="338.0473575840768" y="2047.5" _orig_x="370.57"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (75 samples, 0.01%)</title><rect x="778.579272477694" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(246,89,17)" rx="2" ry="2" _orig_x="596.6" _orig_width="0.1"/>
<text x="781.579272477694" y="1791.5" _orig_x="599.60"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator- (72 samples, 0.01%)</title><rect x="585.8270418668496" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(239,147,24)" rx="2" ry="2" _orig_x="549.0" _orig_width="0.2"/>
<text x="588.8270418668496" y="1807.5" _orig_x="552.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (321 samples, 0.05%)</title><rect x="1165.1383647798743" y="2005" width="2.2264150943396226" height="15.0" fill="rgb(234,73,37)" rx="2" ry="2" _orig_x="702.0" _orig_width="0.6"/>
<text x="1168.1383647798743" y="2015.5" _orig_x="704.99"/>
</g>
<g class="hide">
<title>std::__1::condition_variable::__do_timed_wait (61 samples, 0.01%)</title><rect x="156.51338366506508" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(242,21,42)" rx="2" ry="2" _orig_x="204.0" _orig_width="0.1"/>
<text x="159.51338366506508" y="2015.5" _orig_x="207.04"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (66 samples, 0.01%)</title><rect x="942.5806451612904" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(253,20,47)" rx="2" ry="2" _orig_x="637.1" _orig_width="0.2"/>
<text x="945.5806451612904" y="1887.5" _orig_x="640.14"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable (231 samples, 0.03%)</title><rect x="610.528483184626" y="1829" width="1.619766643788607" height="15.0" fill="rgb(249,71,48)" rx="2" ry="2" _orig_x="555.1" _orig_width="0.4"/>
<text x="613.528483184626" y="1839.5" _orig_x="558.08"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (248 samples, 0.04%)</title><rect x="463.53466026080963" y="1765" width="1.619766643788607" height="15.0" fill="rgb(206,107,21)" rx="2" ry="2" _orig_x="518.8" _orig_width="0.4"/>
<text x="466.53466026080963" y="1775.5" _orig_x="521.80"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (58 samples, 0.01%)</title><rect x="819.8833218943031" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(236,141,50)" rx="2" ry="2" _orig_x="606.8" _orig_width="0.1"/>
<text x="822.8833218943031" y="1743.5" _orig_x="609.83"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::~new_allocator (106 samples, 0.02%)</title><rect x="1060.0137268359642" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(216,48,21)" rx="2" ry="2" _orig_x="666.1" _orig_width="0.2"/>
<text x="1063.0137268359642" y="1807.5" _orig_x="669.10"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (67 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.1" height="15.0" fill="rgb(252,70,28)" rx="2" ry="2"/>
<text x="1192.15" y="2047.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::_Vector_impl (111 samples, 0.02%)</title><rect x="478.51750171585445" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(241,111,48)" rx="2" ry="2" _orig_x="522.5" _orig_width="0.2"/>
<text x="481.51750171585445" y="1823.5" _orig_x="525.53"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (700 samples, 0.10%)</title><rect x="267.5428963623883" y="1845" width="4.85929993136582" height="15.0" fill="rgb(249,163,36)" rx="2" ry="2" _orig_x="470.4" _orig_width="1.2"/>
<text x="270.5428963623883" y="1855.5" _orig_x="473.42"/>
</g>
<g class="hide">
<title>jni_CallIntMethod (320 samples, 0.05%)</title><rect x="20.4" y="1989" width="0.5" height="15.0" fill="rgb(223,171,48)" rx="2" ry="2"/>
<text x="23.35" y="1999.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (191 samples, 0.03%)</title><rect x="71.95607412491424" y="1717" width="1.619766643788607" height="15.0" fill="rgb(217,20,29)" rx="2" ry="2" _orig_x="422.1" _orig_width="0.4"/>
<text x="74.95607412491424" y="1727.5" _orig_x="425.12"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (153 samples, 0.02%)</title><rect x="574.0837336993823" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(221,191,45)" rx="2" ry="2" _orig_x="546.1" _orig_width="0.2"/>
<text x="577.0837336993823" y="1807.5" _orig_x="549.07"/>
</g>
<g>
<title>Row::~Row (2,848 samples, 0.42%)</title><rect x="229.88332189430344" y="1877" width="20.247083047357584" height="15.0" fill="rgb(252,54,6)" rx="2" ry="2" _orig_x="461.1" _orig_width="5.0"/>
<text x="232.88332189430344" y="1887.5" _orig_x="464.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (213 samples, 0.03%)</title><rect x="1175.6" y="1589" width="0.3" height="15.0" fill="rgb(208,111,2)" rx="2" ry="2"/>
<text x="1178.56" y="1599.5"/>
</g>
<g class="hide">
<title>[perf-123151.map] (270 samples, 0.04%)</title><rect x="88.41729581331492" y="1845" width="0.4365133836650652" height="15.0" fill="rgb(234,132,22)" rx="2" ry="2" _orig_x="141.6" _orig_width="0.4"/>
<text x="91.41729581331492" y="1855.5" _orig_x="144.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,870 samples, 0.28%)</title><rect x="44.8" y="1861" width="3.3" height="15.0" fill="rgb(240,191,17)" rx="2" ry="2"/>
<text x="47.80" y="1871.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1877" width="0.1" height="15.0" fill="rgb(240,168,33)" rx="2" ry="2"/>
<text x="33.98" y="1887.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (255 samples, 0.04%)</title><rect x="807.5730954015098" y="1653" width="0.5456417295813315" height="15.0" fill="rgb(228,106,16)" rx="2" ry="2" _orig_x="800.6" _orig_width="0.5"/>
<text x="810.5730954015098" y="1663.5" _orig_x="803.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="333.73781743308155" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(234,23,0)" rx="2" ry="2" _orig_x="366.4" _orig_width="0.2"/>
<text x="336.73781743308155" y="1919.5" _orig_x="369.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (77 samples, 0.01%)</title><rect x="809.9739190116677" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(210,48,26)" rx="2" ry="2" _orig_x="802.8" _orig_width="0.2"/>
<text x="812.9739190116677" y="1935.5" _orig_x="805.84"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (118 samples, 0.02%)</title><rect x="199.91763898421408" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(239,131,3)" rx="2" ry="2" _orig_x="453.7" _orig_width="0.2"/>
<text x="202.91763898421408" y="1807.5" _orig_x="456.69"/>
</g>
<g>
<title>Field::DeserializeFrom (1,135 samples, 0.17%)</title><rect x="338.8126286890871" y="1893" width="8.098833218943033" height="15.0" fill="rgb(218,135,30)" rx="2" ry="2" _orig_x="488.0" _orig_width="2.0"/>
<text x="341.8126286890871" y="1903.5" _orig_x="491.02"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1093" width="1.091283459162663" height="15.0" fill="rgb(218,178,42)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1103.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>g_variant_type_get_string_length (61 samples, 0.01%)</title><rect x="171.1365820178448" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(217,134,1)" rx="2" ry="2" _orig_x="217.4" _orig_width="0.1"/>
<text x="174.1365820178448" y="2047.5" _orig_x="220.42"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1797" width="2.182566918325326" height="15.0" fill="rgb(235,226,33)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1807.5" _orig_x="117.41"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (135 samples, 0.02%)</title><rect x="324.6396705559368" y="1893" width="1.214824982841455" height="15.0" fill="rgb(239,208,49)" rx="2" ry="2" _orig_x="484.5" _orig_width="0.3"/>
<text x="327.6396705559368" y="1903.5" _orig_x="487.53"/>
</g>
<g class="hide">
<title>[libdbus-1.so.3.19.11] (399 samples, 0.06%)</title><rect x="241.306108442004" y="2037" width="0.7638984214138641" height="15.0" fill="rgb(224,70,18)" rx="2" ry="2" _orig_x="281.7" _orig_width="0.7"/>
<text x="244.306108442004" y="2047.5" _orig_x="284.72"/>
</g>
<g class="hide">
<title>[code] (191 samples, 0.03%)</title><rect x="15.8" y="1765" width="0.3" height="15.0" fill="rgb(254,148,50)" rx="2" ry="2"/>
<text x="18.75" y="1775.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (112 samples, 0.02%)</title><rect x="270.00686341798206" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(215,214,54)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1887.5" _orig_x="310.95"/>
</g>
<g>
<title>TypeChar::DeserializeFrom (364 samples, 0.05%)</title><rect x="339.2175703500343" y="1877" width="2.8345916266300617" height="15.0" fill="rgb(246,190,6)" rx="2" ry="2" _orig_x="488.1" _orig_width="0.7"/>
<text x="342.2175703500343" y="1887.5" _orig_x="491.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (637 samples, 0.09%)</title><rect x="63.86341798215501" y="1829" width="1.3095401509951956" height="15.0" fill="rgb(244,201,9)" rx="2" ry="2" _orig_x="119.1" _orig_width="1.2"/>
<text x="66.86341798215501" y="1839.5" _orig_x="122.14"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (86 samples, 0.01%)</title><rect x="186.74193548387083" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(225,154,41)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.2"/>
<text x="189.74193548387083" y="1951.5" _orig_x="234.73"/>
</g>
<g class="hide">
<title>runtime.notetsleep (74 samples, 0.01%)</title><rect x="159.35072065888804" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(246,141,26)" rx="2" ry="2" _orig_x="206.6" _orig_width="0.1"/>
<text x="162.35072065888804" y="1983.5" _orig_x="209.56"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (104 samples, 0.02%)</title><rect x="559.910775566232" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(247,222,25)" rx="2" ry="2" _orig_x="542.6" _orig_width="0.2"/>
<text x="562.910775566232" y="1855.5" _orig_x="545.62"/>
</g>
<g class="hide">
<title>Parker::park (84 samples, 0.01%)</title><rect x="69.0" y="1989" width="0.2" height="15.0" fill="rgb(241,6,54)" rx="2" ry="2"/>
<text x="72.01" y="1999.5"/>
</g>
<g>
<title>__gnu_cxx::operator!=&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt; (85 samples, 0.01%)</title><rect x="94.22786547700758" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(220,113,28)" rx="2" ry="2" _orig_x="427.6" _orig_width="0.2"/>
<text x="97.22786547700758" y="1839.5" _orig_x="430.63"/>
</g>
<g>
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;void*, false&gt;*&gt;::pointer_to (193 samples, 0.03%)</title><rect x="1053.939601921757" y="1765" width="1.214824982841455" height="15.0" fill="rgb(244,73,29)" rx="2" ry="2" _orig_x="664.6" _orig_width="0.3"/>
<text x="1056.939601921757" y="1775.5" _orig_x="667.58"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (604 samples, 0.09%)</title><rect x="735.2505147563485" y="1925" width="4.454358270418669" height="15.0" fill="rgb(216,39,4)" rx="2" ry="2" _orig_x="585.9" _orig_width="1.1"/>
<text x="738.2505147563485" y="1935.5" _orig_x="588.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (581 samples, 0.09%)</title><rect x="61.35346602608089" y="1941" width="1.091283459162663" height="15.0" fill="rgb(243,30,10)" rx="2" ry="2" _orig_x="116.8" _orig_width="1.0"/>
<text x="64.3534660260809" y="1951.5" _orig_x="119.79"/>
</g>
<g>
<title>BPlusTreeIndex::ScanKey (53,606 samples, 7.96%)</title><rect x="711.7638984214138" y="1957" width="380.6451612903226" height="15.0" fill="rgb(230,187,21)" rx="2" ry="2" _orig_x="580.1" _orig_width="94.0"/>
<text x="714.7638984214138" y="1967.5" _orig_x="583.14">BPlusTreeIndex::ScanKey </text>
</g>
<g>
<title>DiskManager::FetchMetaPage (273 samples, 0.04%)</title><rect x="1132.4982841455044" y="1797" width="1.619766643788607" height="15.0" fill="rgb(223,176,51)" rx="2" ry="2" _orig_x="684.0" _orig_width="0.4"/>
<text x="1135.4982841455044" y="1807.5" _orig_x="686.95"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (21,104 samples, 3.13%)</title><rect x="1176.863417982155" y="1877" width="40.37748798901853" height="15.0" fill="rgb(206,154,43)" rx="2" ry="2" _orig_x="1139.0" _orig_width="37.0"/>
<text x="1179.863417982155" y="1887.5" _orig_x="1142.00">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[libgtk-3.so.0.2404.16] (148 samples, 0.02%)</title><rect x="244.68908716540827" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(236,156,2)" rx="2" ry="2" _orig_x="284.8" _orig_width="0.3"/>
<text x="247.68908716540827" y="2047.5" _orig_x="287.84"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned_erms (281 samples, 0.04%)</title><rect x="273.8263555250514" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(229,44,26)" rx="2" ry="2" _orig_x="311.5" _orig_width="0.5"/>
<text x="276.8263555250514" y="2047.5" _orig_x="314.51"/>
</g>
<g class="hide">
<title>isl::iostreams::detail::file_lock::g_mutexPool (162 samples, 0.02%)</title><rect x="58.0" y="2053" width="0.2" height="15.0" fill="rgb(220,191,26)" rx="2" ry="2"/>
<text x="60.95" y="2063.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (821 samples, 0.12%)</title><rect x="414.13177762525737" y="1733" width="6.0741249142072755" height="15.0" fill="rgb(249,125,32)" rx="2" ry="2" _orig_x="506.6" _orig_width="1.5"/>
<text x="417.13177762525737" y="1743.5" _orig_x="509.63"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (232 samples, 0.03%)</title><rect x="1165.5094339622642" y="1957" width="1.8553459119496856" height="15.0" fill="rgb(230,111,17)" rx="2" ry="2" _orig_x="702.1" _orig_width="0.5"/>
<text x="1168.5094339622642" y="1967.5" _orig_x="705.14"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,119 samples, 0.17%)</title><rect x="402.79341111873714" y="1765" width="7.693891557995882" height="15.0" fill="rgb(218,122,37)" rx="2" ry="2" _orig_x="503.8" _orig_width="1.9"/>
<text x="405.79341111873714" y="1775.5" _orig_x="506.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (103 samples, 0.02%)</title><rect x="57.3" y="1861" width="0.2" height="15.0" fill="rgb(251,111,5)" rx="2" ry="2"/>
<text x="60.31" y="1871.5"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (239 samples, 0.04%)</title><rect x="819.4783802333562" y="1749" width="1.619766643788607" height="15.0" fill="rgb(237,125,44)" rx="2" ry="2" _orig_x="606.7" _orig_width="0.4"/>
<text x="822.4783802333562" y="1759.5" _orig_x="609.69"/>
</g>
<g class="hide">
<title>[perf-123031.map] (86 samples, 0.01%)</title><rect x="86.45298558682215" y="1477" width="0.1091283459162663" height="15.0" fill="rgb(213,108,28)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1487.5" _orig_x="142.76"/>
</g>
<g>
<title>[[kernel.kallsyms]] (120 samples, 0.02%)</title><rect x="57.783115991763935" y="1573" width="0.8098833218943035" height="15.0" fill="rgb(232,125,4)" rx="2" ry="2" _orig_x="418.6" _orig_width="0.2"/>
<text x="60.783115991763935" y="1583.5" _orig_x="421.57"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (100 samples, 0.01%)</title><rect x="901.2765957446807" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(228,134,50)" rx="2" ry="2" _orig_x="626.9" _orig_width="0.2"/>
<text x="904.2765957446807" y="1839.5" _orig_x="629.90"/>
</g>
<g class="hide">
<title>[code] (628 samples, 0.09%)</title><rect x="85.47083047357575" y="1717" width="1.2004118050789294" height="15.0" fill="rgb(252,145,43)" rx="2" ry="2" _orig_x="138.9" _orig_width="1.1"/>
<text x="88.47083047357575" y="1727.5" _orig_x="141.86"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (204 samples, 0.03%)</title><rect x="47.659574468085154" y="1749" width="1.619766643788607" height="15.0" fill="rgb(229,17,31)" rx="2" ry="2" _orig_x="416.1" _orig_width="0.4"/>
<text x="50.659574468085154" y="1759.5" _orig_x="419.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (518 samples, 0.08%)</title><rect x="220.2443376801646" y="1989" width="0.9821551132463967" height="15.0" fill="rgb(229,166,19)" rx="2" ry="2" _orig_x="262.4" _orig_width="0.9"/>
<text x="223.2443376801646" y="1999.5" _orig_x="265.39"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="389" width="1.091283459162663" height="15.0" fill="rgb(235,113,47)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="399.5" _orig_x="301.96"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (569 samples, 0.08%)</title><rect x="491.07069320521623" y="1749" width="4.049416609471517" height="15.0" fill="rgb(209,127,34)" rx="2" ry="2" _orig_x="525.6" _orig_width="1.0"/>
<text x="494.07069320521623" y="1759.5" _orig_x="528.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (177 samples, 0.03%)</title><rect x="221.55387783115984" y="1909" width="0.4365133836650652" height="15.0" fill="rgb(241,162,22)" rx="2" ry="2" _orig_x="263.6" _orig_width="0.4"/>
<text x="224.55387783115984" y="1919.5" _orig_x="266.64"/>
</g>
<g class="hide">
<title>[libQt5Core.so.5.12.8] (61 samples, 0.01%)</title><rect x="809.7556623198352" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(216,119,32)" rx="2" ry="2" _orig_x="802.6" _orig_width="0.1"/>
<text x="812.7556623198352" y="2047.5" _orig_x="805.63"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::destroy&lt;void*&gt; (119 samples, 0.02%)</title><rect x="1056.774193548387" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(238,91,45)" rx="2" ry="2" _orig_x="665.3" _orig_width="0.2"/>
<text x="1059.774193548387" y="1791.5" _orig_x="668.30"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (83 samples, 0.01%)</title><rect x="218.14001372683583" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(246,188,9)" rx="2" ry="2" _orig_x="458.2" _orig_width="0.2"/>
<text x="221.14001372683583" y="1823.5" _orig_x="461.25"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (963 samples, 0.14%)</title><rect x="975.7858613589565" y="1861" width="6.884008236101578" height="15.0" fill="rgb(244,124,30)" rx="2" ry="2" _orig_x="645.3" _orig_width="1.7"/>
<text x="978.7858613589565" y="1871.5" _orig_x="648.32"/>
</g>
<g class="hide">
<title>g_private_get (159 samples, 0.02%)</title><rect x="53.2" y="2037" width="0.3" height="15.0" fill="rgb(248,71,16)" rx="2" ry="2"/>
<text x="56.20" y="2047.5"/>
</g>
<g class="hide">
<title>Clone_persist_gtid::periodic_write (73 samples, 0.01%)</title><rect x="306.7831159917638" y="1973" width="0.1091283459162663" height="15.0" fill="rgb(206,33,20)" rx="2" ry="2" _orig_x="341.7" _orig_width="0.1"/>
<text x="309.7831159917638" y="1983.5" _orig_x="344.69"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (233 samples, 0.03%)</title><rect x="121.3589567604667" y="1813" width="1.619766643788607" height="15.0" fill="rgb(240,170,43)" rx="2" ry="2" _orig_x="434.3" _orig_width="0.4"/>
<text x="124.3589567604667" y="1823.5" _orig_x="437.29"/>
</g>
<g class="hide">
<title>[perf-123151.map] (208 samples, 0.03%)</title><rect x="88.52642415923118" y="1829" width="0.3273850377487989" height="15.0" fill="rgb(246,35,46)" rx="2" ry="2" _orig_x="141.7" _orig_width="0.3"/>
<text x="91.52642415923118" y="1839.5" _orig_x="144.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,141 samples, 0.47%)</title><rect x="354.1448181194234" y="1989" width="6.111187371310913" height="15.0" fill="rgb(218,20,16)" rx="2" ry="2" _orig_x="385.1" _orig_width="5.6"/>
<text x="357.1448181194234" y="1999.5" _orig_x="388.15"/>
</g>
<g>
<title>BPlusTreeInternalPage::KeyAt (73 samples, 0.01%)</title><rect x="713.3836650652024" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(236,91,50)" rx="2" ry="2" _orig_x="580.5" _orig_width="0.1"/>
<text x="716.3836650652024" y="1935.5" _orig_x="583.51"/>
</g>
<g class="hide">
<title>_int_malloc (734 samples, 0.11%)</title><rect x="791.9" y="2053" width="1.3" height="15.0" fill="rgb(240,167,29)" rx="2" ry="2"/>
<text x="794.95" y="2063.5"/>
</g>
<g>
<title>TableIterator::operator++ (606 samples, 0.09%)</title><rect x="354.605353466026" y="1957" width="4.454358270418669" height="15.0" fill="rgb(213,82,37)" rx="2" ry="2" _orig_x="491.9" _orig_width="1.1"/>
<text x="357.605353466026" y="1967.5" _orig_x="494.91"/>
</g>
<g>
<title>std::__niter_base&lt;Field**&gt; (69 samples, 0.01%)</title><rect x="452.19629375428957" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(247,112,46)" rx="2" ry="2" _orig_x="516.0" _orig_width="0.1"/>
<text x="455.19629375428957" y="1759.5" _orig_x="519.00"/>
</g>
<g class="hide">
<title>_nv023370rm (77 samples, 0.01%)</title><rect x="349.5" y="2053" width="0.1" height="15.0" fill="rgb(211,129,16)" rx="2" ry="2"/>
<text x="352.48" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,676 samples, 0.99%)</title><rect x="276.11805078929297" y="1973" width="12.768016472203156" height="15.0" fill="rgb(209,147,4)" rx="2" ry="2" _orig_x="313.6" _orig_width="11.7"/>
<text x="279.11805078929297" y="1983.5" _orig_x="316.58"/>
</g>
<g>
<title>IndexKeyComparator::operator (11,537 samples, 1.71%)</title><rect x="64.66712422786549" y="1877" width="81.79821551132463" height="15.0" fill="rgb(205,193,29)" rx="2" ry="2" _orig_x="420.3" _orig_width="20.2"/>
<text x="67.66712422786549" y="1887.5" _orig_x="423.33">IndexKey..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,188 samples, 0.18%)</title><rect x="1156.9748427672955" y="1989" width="7.7924528301886795" height="15.0" fill="rgb(253,145,10)" rx="2" ry="2" _orig_x="699.8" _orig_width="2.1"/>
<text x="1159.9748427672955" y="1999.5" _orig_x="702.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (863 samples, 0.13%)</title><rect x="63.426904598489955" y="1925" width="1.7460535346602608" height="15.0" fill="rgb(230,45,28)" rx="2" ry="2" _orig_x="118.7" _orig_width="1.6"/>
<text x="66.42690459848995" y="1935.5" _orig_x="121.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (746 samples, 0.11%)</title><rect x="351.96225120109807" y="1813" width="1.418668496911462" height="15.0" fill="rgb(206,183,3)" rx="2" ry="2" _orig_x="383.1" _orig_width="1.3"/>
<text x="354.96225120109807" y="1823.5" _orig_x="386.10"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (88 samples, 0.01%)</title><rect x="710.5490734385722" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(214,10,3)" rx="2" ry="2" _orig_x="579.8" _orig_width="0.2"/>
<text x="713.5490734385722" y="1919.5" _orig_x="582.83"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::clear (169 samples, 0.03%)</title><rect x="879.8146877144818" y="1877" width="1.214824982841455" height="15.0" fill="rgb(248,200,26)" rx="2" ry="2" _orig_x="621.6" _orig_width="0.3"/>
<text x="882.8146877144818" y="1887.5" _orig_x="624.56"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1445" width="1.091283459162663" height="15.0" fill="rgb(206,58,46)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1455.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,877 samples, 0.87%)</title><rect x="73.13932738503765" y="1989" width="11.24021962937543" height="15.0" fill="rgb(218,211,0)" rx="2" ry="2" _orig_x="127.6" _orig_width="10.3"/>
<text x="76.13932738503765" y="1999.5" _orig_x="130.64"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (385 samples, 0.06%)</title><rect x="462.7247769389156" y="1813" width="2.8345916266300617" height="15.0" fill="rgb(241,179,22)" rx="2" ry="2" _orig_x="518.6" _orig_width="0.7"/>
<text x="465.7247769389156" y="1823.5" _orig_x="521.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (150 samples, 0.02%)</title><rect x="405.2230610844199" y="1685" width="0.8098833218943035" height="15.0" fill="rgb(235,220,9)" rx="2" ry="2" _orig_x="504.4" _orig_width="0.2"/>
<text x="408.2230610844199" y="1695.5" _orig_x="507.36"/>
</g>
<g class="hide">
<title>[unknown] (1,150 samples, 0.17%)</title><rect x="58.73438572409051" y="1621" width="2.182566918325326" height="15.0" fill="rgb(226,211,27)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1631.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>VizCompositorTh (609 samples, 0.09%)</title><rect x="73.5" y="2069" width="1.0" height="15.0" fill="rgb(229,173,45)" rx="2" ry="2"/>
<text x="76.45" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (59 samples, 0.01%)</title><rect x="58.3" y="1973" width="0.1" height="15.0" fill="rgb(225,193,36)" rx="2" ry="2"/>
<text x="61.33" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="168.5175017158544" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(231,190,18)" rx="2" ry="2" _orig_x="215.0" _orig_width="0.1"/>
<text x="171.5175017158544" y="1887.5" _orig_x="218.02"/>
</g>
<g class="hide">
<title>JVM_DoPrivileged (193 samples, 0.03%)</title><rect x="19.6" y="2005" width="0.3" height="15.0" fill="rgb(253,193,41)" rx="2" ry="2"/>
<text x="22.56" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="223.40905971173635" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(242,27,24)" rx="2" ry="2" _orig_x="265.3" _orig_width="0.1"/>
<text x="226.40905971173635" y="1967.5" _orig_x="268.27"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1077" width="2.182566918325326" height="15.0" fill="rgb(227,39,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1087.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1989" width="0.5456417295813315" height="15.0" fill="rgb(251,218,33)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1999.5" _orig_x="226.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_bucket_begin (67 samples, 0.01%)</title><rect x="821.5030885380921" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(247,115,26)" rx="2" ry="2" _orig_x="607.2" _orig_width="0.1"/>
<text x="824.5030885380921" y="1775.5" _orig_x="610.15"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (163 samples, 0.02%)</title><rect x="370.39807824296497" y="1701" width="1.214824982841455" height="15.0" fill="rgb(208,21,7)" rx="2" ry="2" _orig_x="495.8" _orig_width="0.3"/>
<text x="373.39807824296497" y="1711.5" _orig_x="498.79"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (282 samples, 0.04%)</title><rect x="638.8743994509266" y="1845" width="2.0247083047357584" height="15.0" fill="rgb(248,36,40)" rx="2" ry="2" _orig_x="562.1" _orig_width="0.5"/>
<text x="641.8743994509266" y="1855.5" _orig_x="565.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,281 samples, 1.08%)</title><rect x="274.917638984214" y="2021" width="13.968428277282086" height="15.0" fill="rgb(219,221,3)" rx="2" ry="2" _orig_x="312.5" _orig_width="12.8"/>
<text x="277.917638984214" y="2031.5" _orig_x="315.52"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (114 samples, 0.02%)</title><rect x="644.9485243651338" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(254,154,33)" rx="2" ry="2" _orig_x="563.6" _orig_width="0.2"/>
<text x="647.9485243651338" y="1855.5" _orig_x="566.60"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (157 samples, 0.02%)</title><rect x="56.5" y="1973" width="0.2" height="15.0" fill="rgb(227,53,23)" rx="2" ry="2"/>
<text x="59.46" y="1983.5"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (425 samples, 0.06%)</title><rect x="265.7" y="2053" width="0.7" height="15.0" fill="rgb(245,202,47)" rx="2" ry="2"/>
<text x="268.68" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,634 samples, 0.24%)</title><rect x="794.6959505833904" y="1925" width="3.164722031571723" height="15.0" fill="rgb(241,59,33)" rx="2" ry="2" _orig_x="788.8" _orig_width="2.9"/>
<text x="797.6959505833904" y="1935.5" _orig_x="791.83"/>
</g>
<g class="hide">
<title>[code] (563 samples, 0.08%)</title><rect x="15.2" y="2021" width="1.0" height="15.0" fill="rgb(243,12,43)" rx="2" ry="2"/>
<text x="18.17" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (612 samples, 0.09%)</title><rect x="337.55730954015087" y="2037" width="1.2004118050789294" height="15.0" fill="rgb(211,156,30)" rx="2" ry="2" _orig_x="369.9" _orig_width="1.1"/>
<text x="340.55730954015087" y="2047.5" _orig_x="372.88"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (2,583 samples, 0.38%)</title><rect x="438.4282772820865" y="1813" width="18.627316403568976" height="15.0" fill="rgb(237,32,51)" rx="2" ry="2" _orig_x="512.6" _orig_width="4.6"/>
<text x="441.4282772820865" y="1823.5" _orig_x="515.63"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (203 samples, 0.03%)</title><rect x="186.74193548387083" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(248,157,39)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="2015.5" _orig_x="234.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (385 samples, 0.06%)</title><rect x="660.7412491420727" y="1765" width="2.8345916266300617" height="15.0" fill="rgb(216,216,51)" rx="2" ry="2" _orig_x="567.5" _orig_width="0.7"/>
<text x="663.7412491420727" y="1775.5" _orig_x="570.52"/>
</g>
<g class="hide">
<title>[perf-123031.map] (78 samples, 0.01%)</title><rect x="86.45298558682215" y="1285" width="0.1091283459162663" height="15.0" fill="rgb(250,127,12)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1295.5" _orig_x="142.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,828 samples, 0.42%)</title><rect x="379.5" y="2053" width="4.9" height="15.0" fill="rgb(254,80,33)" rx="2" ry="2"/>
<text x="382.46" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (458 samples, 0.07%)</title><rect x="952.7041866849692" y="1829" width="3.239533287577214" height="15.0" fill="rgb(233,106,7)" rx="2" ry="2" _orig_x="639.6" _orig_width="0.8"/>
<text x="955.7041866849692" y="1839.5" _orig_x="642.59"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (1,489 samples, 0.22%)</title><rect x="173.5964310226492" y="1813" width="10.528483184625944" height="15.0" fill="rgb(254,183,25)" rx="2" ry="2" _orig_x="447.2" _orig_width="2.6"/>
<text x="176.5964310226492" y="1823.5" _orig_x="450.22"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (663 samples, 0.10%)</title><rect x="729.5813315030884" y="1909" width="4.85929993136582" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" _orig_x="584.5" _orig_width="1.2"/>
<text x="732.5813315030884" y="1919.5" _orig_x="587.51"/>
</g>
<g>
<title>std::__detail::_Identity::operator (73 samples, 0.01%)</title><rect x="832.436513383665" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(220,126,9)" rx="2" ry="2" _orig_x="609.9" _orig_width="0.1"/>
<text x="835.436513383665" y="1775.5" _orig_x="612.91"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="149" width="1.091283459162663" height="15.0" fill="rgb(213,74,18)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="159.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>_nv009834rm (87 samples, 0.01%)</title><rect x="1176.1" y="2053" width="0.2" height="15.0" fill="rgb(241,199,46)" rx="2" ry="2"/>
<text x="1179.10" y="2063.5"/>
</g>
<g>
<title>DiskManager::IsPageFree (107 samples, 0.02%)</title><rect x="305.20247083047343" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(253,161,50)" rx="2" ry="2" _orig_x="479.7" _orig_width="0.2"/>
<text x="308.20247083047343" y="1903.5" _orig_x="482.67"/>
</g>
<g class="hide">
<title>_nv014426rm (75 samples, 0.01%)</title><rect x="347.6" y="2053" width="0.1" height="15.0" fill="rgb(206,105,52)" rx="2" ry="2"/>
<text x="350.61" y="2063.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (252 samples, 0.04%)</title><rect x="169.14207275223066" y="1733" width="2.0247083047357584" height="15.0" fill="rgb(236,63,52)" rx="2" ry="2" _orig_x="446.1" _orig_width="0.5"/>
<text x="172.14207275223066" y="1743.5" _orig_x="449.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="101" width="0.1091283459162663" height="15.0" fill="rgb(211,50,45)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="111.5" _orig_x="118.82"/>
</g>
<g class="hide">
<title>start_thread (159 samples, 0.02%)</title><rect x="66.6" y="2053" width="0.3" height="15.0" fill="rgb(228,207,10)" rx="2" ry="2"/>
<text x="69.63" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (501 samples, 0.07%)</title><rect x="371.0" y="2053" width="0.8" height="15.0" fill="rgb(245,83,49)" rx="2" ry="2"/>
<text x="373.96" y="2063.5"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1,304 samples, 0.19%)</title><rect x="175.719972546328" y="2037" width="2.509951956074125" height="15.0" fill="rgb(224,65,14)" rx="2" ry="2" _orig_x="221.6" _orig_width="2.3"/>
<text x="178.719972546328" y="2047.5" _orig_x="224.62"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (108 samples, 0.02%)</title><rect x="285.3603294440631" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(219,4,3)" rx="2" ry="2" _orig_x="474.8" _orig_width="0.1"/>
<text x="288.3603294440631" y="1839.5" _orig_x="477.75"/>
</g>
<g class="hide">
<title>[unknown] (614 samples, 0.09%)</title><rect x="260.1853122855181" y="1269" width="1.091283459162663" height="15.0" fill="rgb(249,190,30)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1279.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>SimBridge::WdbCircularBuffer::getPackets (63 samples, 0.01%)</title><rect x="1181.8" y="2053" width="0.1" height="15.0" fill="rgb(243,95,54)" rx="2" ry="2"/>
<text x="1184.80" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (365 samples, 0.05%)</title><rect x="12.136582017844795" y="2021" width="0.7638984214138641" height="15.0" fill="rgb(241,124,38)" rx="2" ry="2" _orig_x="71.7" _orig_width="0.7"/>
<text x="15.136582017844795" y="2031.5" _orig_x="74.73"/>
</g>
<g class="hide">
<title>[perf-105834.map] (1,233 samples, 0.18%)</title><rect x="19.2" y="2037" width="2.2" height="15.0" fill="rgb(240,132,22)" rx="2" ry="2"/>
<text x="22.21" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1813" width="2.182566918325326" height="15.0" fill="rgb(235,214,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1823.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (146 samples, 0.02%)</title><rect x="86.01647220315708" y="1237" width="0.3273850377487989" height="15.0" fill="rgb(228,127,29)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1247.5" _orig_x="142.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (352 samples, 0.05%)</title><rect x="367.6" y="2053" width="0.6" height="15.0" fill="rgb(206,28,10)" rx="2" ry="2"/>
<text x="370.55" y="2063.5"/>
</g>
<g class="hide">
<title>[libglib-2.0.so.0.6400.6] (76 samples, 0.01%)</title><rect x="27.5" y="2053" width="0.2" height="15.0" fill="rgb(253,87,46)" rx="2" ry="2"/>
<text x="30.52" y="2063.5"/>
</g>
<g class="hide">
<title>Messages_View_G (316 samples, 0.05%)</title><rect x="22.6" y="2069" width="0.6" height="15.0" fill="rgb(215,183,49)" rx="2" ry="2"/>
<text x="25.60" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (374 samples, 0.06%)</title><rect x="11.263555250514667" y="1893" width="0.7638984214138641" height="15.0" fill="rgb(226,60,12)" rx="2" ry="2" _orig_x="70.9" _orig_width="0.7"/>
<text x="14.263555250514667" y="1903.5" _orig_x="73.94"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (99 samples, 0.01%)</title><rect x="307.7652711050102" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(242,159,50)" rx="2" ry="2" _orig_x="342.6" _orig_width="0.1"/>
<text x="310.7652711050102" y="2047.5" _orig_x="345.55"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(206,123,36)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="1983.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="1973" width="0.7" height="15.0" fill="rgb(216,10,10)" rx="2" ry="2"/>
<text x="17.04" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (156 samples, 0.02%)</title><rect x="56.5" y="1957" width="0.2" height="15.0" fill="rgb(223,213,24)" rx="2" ry="2"/>
<text x="59.46" y="1967.5"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (67 samples, 0.01%)</title><rect x="624.7014413177762" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(215,84,14)" rx="2" ry="2" _orig_x="558.6" _orig_width="0.1"/>
<text x="627.7014413177762" y="1743.5" _orig_x="561.58"/>
</g>
<g class="hide">
<title>[code] (66 samples, 0.01%)</title><rect x="17.3" y="2005" width="0.1" height="15.0" fill="rgb(211,34,8)" rx="2" ry="2"/>
<text x="20.29" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.02%)</title><rect x="329.2635552505147" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(235,192,8)" rx="2" ry="2" _orig_x="362.3" _orig_width="0.3"/>
<text x="332.2635552505147" y="1919.5" _orig_x="365.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (93 samples, 0.01%)</title><rect x="1182.7" y="1973" width="0.2" height="15.0" fill="rgb(253,107,18)" rx="2" ry="2"/>
<text x="1185.69" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (432 samples, 0.06%)</title><rect x="272.5168153740562" y="1925" width="0.8730267673301304" height="15.0" fill="rgb(223,118,19)" rx="2" ry="2" _orig_x="310.3" _orig_width="0.8"/>
<text x="275.5168153740562" y="1935.5" _orig_x="313.33"/>
</g>
<g>
<title>DiskManager::ReadPage (116 samples, 0.02%)</title><rect x="355.82017844886747" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(236,220,52)" rx="2" ry="2" _orig_x="492.2" _orig_width="0.2"/>
<text x="358.82017844886747" y="1935.5" _orig_x="495.21"/>
</g>
<g class="hide">
<title>[unknown] (1,168 samples, 0.17%)</title><rect x="58.73438572409051" y="1909" width="2.182566918325326" height="15.0" fill="rgb(219,155,22)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1919.5" _orig_x="117.38"/>
</g>
<g class="hide">
<title>JVM_Sleep (642 samples, 0.10%)</title><rect x="61.9" y="2021" width="1.1" height="15.0" fill="rgb(230,25,27)" rx="2" ry="2"/>
<text x="64.88" y="2031.5"/>
</g>
<g>
<title>Row::DeserializeFrom (9,570 samples, 1.42%)</title><rect x="154.15923129718587" y="1861" width="68.03019903912148" height="15.0" fill="rgb(226,65,25)" rx="2" ry="2" _orig_x="442.4" _orig_width="16.8"/>
<text x="157.15923129718587" y="1871.5" _orig_x="445.42">Row::De..</text>
</g>
<g class="hide">
<title>[perf-123031.map] (79 samples, 0.01%)</title><rect x="86.45298558682215" y="1397" width="0.1091283459162663" height="15.0" fill="rgb(219,83,28)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1407.5" _orig_x="142.78"/>
</g>
<g>
<title>std::_Destroy&lt;Field**, Field*&gt; (199 samples, 0.03%)</title><rect x="1072.161976664379" y="1877" width="1.214824982841455" height="15.0" fill="rgb(250,70,27)" rx="2" ry="2" _orig_x="669.1" _orig_width="0.3"/>
<text x="1075.161976664379" y="1887.5" _orig_x="672.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,349 samples, 0.20%)</title><rect x="1165.295813315031" y="1685" width="2.619080301990391" height="15.0" fill="rgb(223,142,34)" rx="2" ry="2" _orig_x="1128.4" _orig_width="2.4"/>
<text x="1168.295813315031" y="1695.5" _orig_x="1131.45"/>
</g>
<g class="hide">
<title>clock_nanosleep@@GLIBC_2.17 (94 samples, 0.01%)</title><rect x="265.2" y="2053" width="0.2" height="15.0" fill="rgb(211,208,23)" rx="2" ry="2"/>
<text x="268.23" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1477" width="1.091283459162663" height="15.0" fill="rgb(233,72,30)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1487.5" _orig_x="301.96"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (1,102 samples, 0.16%)</title><rect x="84.91420727522306" y="1813" width="7.693891557995882" height="15.0" fill="rgb(243,61,21)" rx="2" ry="2" _orig_x="425.3" _orig_width="1.9"/>
<text x="87.91420727522306" y="1823.5" _orig_x="428.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,266 samples, 0.63%)</title><rect x="1168.5" y="1733" width="7.4" height="15.0" fill="rgb(247,99,39)" rx="2" ry="2"/>
<text x="1171.47" y="1743.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,065 samples, 1.05%)</title><rect x="764.2491420727521" y="1861" width="13.53191489361702" height="15.0" fill="rgb(238,163,13)" rx="2" ry="2" _orig_x="760.9" _orig_width="12.4"/>
<text x="767.2491420727521" y="1871.5" _orig_x="763.90"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (504 samples, 0.07%)</title><rect x="240.4118050789292" y="1765" width="3.644474948524365" height="15.0" fill="rgb(244,101,40)" rx="2" ry="2" _orig_x="463.7" _orig_width="0.9"/>
<text x="243.4118050789292" y="1775.5" _orig_x="466.70"/>
</g>
<g class="hide">
<title>__xstat64 (367 samples, 0.05%)</title><rect x="12.136582017844795" y="2037" width="0.7638984214138641" height="15.0" fill="rgb(254,70,46)" rx="2" ry="2" _orig_x="71.7" _orig_width="0.7"/>
<text x="15.136582017844795" y="2047.5" _orig_x="74.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,803 samples, 0.42%)</title><rect x="91.58201784488666" y="1973" width="5.347288949897049" height="15.0" fill="rgb(244,74,14)" rx="2" ry="2" _orig_x="144.5" _orig_width="4.9"/>
<text x="94.58201784488666" y="1983.5" _orig_x="147.49"/>
</g>
<g class="hide">
<title>[code] (195 samples, 0.03%)</title><rect x="14.864790665751453" y="1797" width="0.3273850377487989" height="15.0" fill="rgb(253,105,17)" rx="2" ry="2" _orig_x="74.2" _orig_width="0.3"/>
<text x="17.864790665751453" y="1807.5" _orig_x="77.16"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (199 samples, 0.03%)</title><rect x="770.480439258751" y="1717" width="1.214824982841455" height="15.0" fill="rgb(207,218,3)" rx="2" ry="2" _orig_x="594.6" _orig_width="0.3"/>
<text x="773.480439258751" y="1727.5" _orig_x="597.57"/>
</g>
<g>
<title>ExecuteEngine::ExecuteExecfile (165,266 samples, 24.54%)</title><rect x="10.404941660947005" y="2005" width="1172.7110501029515" height="15.0" fill="rgb(212,110,54)" rx="2" ry="2" _orig_x="406.9" _orig_width="289.6"/>
<text x="13.404941660947005" y="2015.5" _orig_x="409.88">ExecuteEngine::ExecuteExecfile </text>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (174 samples, 0.03%)</title><rect x="281.7158544955386" y="1813" width="1.214824982841455" height="15.0" fill="rgb(249,164,11)" rx="2" ry="2" _orig_x="473.9" _orig_width="0.3"/>
<text x="284.7158544955386" y="1823.5" _orig_x="476.93"/>
</g>
<g class="hide">
<title>[libX11.so.6.3.0] (70 samples, 0.01%)</title><rect x="186.30542210020582" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(208,64,36)" rx="2" ry="2" _orig_x="231.3" _orig_width="0.1"/>
<text x="189.30542210020582" y="2047.5" _orig_x="234.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="89.1811942347288" y="1829" width="0.2182566918325326" height="15.0" fill="rgb(225,164,6)" rx="2" ry="2" _orig_x="142.3" _orig_width="0.2"/>
<text x="92.1811942347288" y="1839.5" _orig_x="145.35"/>
</g>
<g class="hide">
<title>[code] (419 samples, 0.06%)</title><rect x="15.4" y="1845" width="0.7" height="15.0" fill="rgb(214,125,48)" rx="2" ry="2"/>
<text x="18.38" y="1855.5"/>
</g>
<g>
<title>[libminisql_shared.so] (121 samples, 0.02%)</title><rect x="859.162663006177" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(205,62,45)" rx="2" ry="2" _orig_x="616.5" _orig_width="0.2"/>
<text x="862.162663006177" y="1887.5" _orig_x="619.50"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (12,243 samples, 1.82%)</title><rect x="107.73301304049409" y="1941" width="23.353466026080987" height="15.0" fill="rgb(235,100,13)" rx="2" ry="2" _orig_x="159.3" _orig_width="21.4"/>
<text x="110.73301304049409" y="1951.5" _orig_x="162.28">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (4,082 samples, 0.61%)</title><rect x="746.3520933424844" y="1765" width="7.748112560054907" height="15.0" fill="rgb(235,151,13)" rx="2" ry="2" _orig_x="744.5" _orig_width="7.1"/>
<text x="749.3520933424844" y="1775.5" _orig_x="747.46"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (880 samples, 0.13%)</title><rect x="1183.8" y="1973" width="1.6" height="15.0" fill="rgb(253,216,23)" rx="2" ry="2"/>
<text x="1186.84" y="1983.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (355 samples, 0.05%)</title><rect x="11.372683596430928" y="1877" width="0.6547700754975978" height="15.0" fill="rgb(206,11,10)" rx="2" ry="2" _orig_x="71.0" _orig_width="0.6"/>
<text x="14.372683596430928" y="1887.5" _orig_x="73.97"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (242 samples, 0.04%)</title><rect x="1175.5" y="1605" width="0.4" height="15.0" fill="rgb(238,62,33)" rx="2" ry="2"/>
<text x="1178.51" y="1615.5"/>
</g>
<g class="hide">
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (65 samples, 0.01%)</title><rect x="308.4200411805078" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(210,125,0)" rx="2" ry="2" _orig_x="343.2" _orig_width="0.1"/>
<text x="311.4200411805078" y="1999.5" _orig_x="346.19"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="777.671928620453" y="1749" width="0.1091283459162663" height="15.0" fill="rgb(231,87,50)" rx="2" ry="2" _orig_x="773.2" _orig_width="0.1"/>
<text x="780.671928620453" y="1759.5" _orig_x="776.16"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (85 samples, 0.01%)</title><rect x="119.73919011667797" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(226,132,10)" rx="2" ry="2" _orig_x="433.9" _orig_width="0.2"/>
<text x="122.73919011667797" y="1807.5" _orig_x="436.91"/>
</g>
<g>
<title>[libminisql_shared.so] (93 samples, 0.01%)</title><rect x="1156.7947838023335" y="1957" width="0.8098833218943035" height="15.0" fill="rgb(205,186,54)" rx="2" ry="2" _orig_x="690.0" _orig_width="0.2"/>
<text x="1159.7947838023335" y="1967.5" _orig_x="693.04"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (189 samples, 0.03%)</title><rect x="84.48867536032935" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(217,109,3)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1983.5" _orig_x="140.96"/>
</g>
<g class="hide">
<title>dixLookupResourceByType (141 samples, 0.02%)</title><rect x="120.4" y="2053" width="0.3" height="15.0" fill="rgb(225,135,39)" rx="2" ry="2"/>
<text x="123.45" y="2063.5"/>
</g>
<g class="hide">
<title>kworker/10:1-ev (595 samples, 0.09%)</title><rect x="363.8" y="2069" width="1.0" height="15.0" fill="rgb(240,200,49)" rx="2" ry="2"/>
<text x="366.77" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,946 samples, 0.59%)</title><rect x="44.13836477987417" y="2037" width="25.603773584905664" height="15.0" fill="rgb(215,120,50)" rx="2" ry="2" _orig_x="399.9" _orig_width="6.9"/>
<text x="47.13836477987417" y="2047.5" _orig_x="402.91">[..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (634 samples, 0.09%)</title><rect x="369.8" y="2053" width="1.2" height="15.0" fill="rgb(250,82,5)" rx="2" ry="2"/>
<text x="372.85" y="2063.5"/>
</g>
<g class="hide">
<title>__memset_avx2_unaligned_erms (84 samples, 0.01%)</title><rect x="779.9636238846945" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(234,6,25)" rx="2" ry="2" _orig_x="775.3" _orig_width="0.1"/>
<text x="782.9636238846945" y="2047.5" _orig_x="778.25"/>
</g>
<g>
<title>ExecuteEngine::ExecuteInsert (113,906 samples, 16.91%)</title><rect x="362.29924502402196" y="1973" width="808.2635552505147" height="15.0" fill="rgb(234,138,16)" rx="2" ry="2" _orig_x="493.8" _orig_width="199.6"/>
<text x="365.29924502402196" y="1983.5" _orig_x="496.83">ExecuteEngine::ExecuteInsert </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (354 samples, 0.05%)</title><rect x="338.97597803706236" y="1973" width="0.6547700754975978" height="15.0" fill="rgb(236,166,51)" rx="2" ry="2" _orig_x="371.2" _orig_width="0.6"/>
<text x="341.97597803706236" y="1983.5" _orig_x="374.22"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="29.2" y="1973" width="0.3" height="15.0" fill="rgb(231,104,16)" rx="2" ry="2"/>
<text x="32.20" y="1983.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (210 samples, 0.03%)</title><rect x="398.3390528483184" y="1733" width="1.619766643788607" height="15.0" fill="rgb(227,177,52)" rx="2" ry="2" _orig_x="502.7" _orig_width="0.4"/>
<text x="401.3390528483184" y="1743.5" _orig_x="505.72"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (565 samples, 0.08%)</title><rect x="220.13520933424834" y="2037" width="1.091283459162663" height="15.0" fill="rgb(238,227,42)" rx="2" ry="2" _orig_x="262.3" _orig_width="1.0"/>
<text x="223.13520933424834" y="2047.5" _orig_x="265.30"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (153 samples, 0.02%)</title><rect x="13.227865477007457" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(205,130,5)" rx="2" ry="2" _orig_x="72.7" _orig_width="0.3"/>
<text x="16.227865477007455" y="1983.5" _orig_x="75.74"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (58 samples, 0.01%)</title><rect x="571.6540837336993" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(221,40,9)" rx="2" ry="2" _orig_x="545.5" _orig_width="0.1"/>
<text x="574.6540837336993" y="1807.5" _orig_x="548.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (88 samples, 0.01%)</title><rect x="161.96980096087842" y="1813" width="0.1091283459162663" height="15.0" fill="rgb(238,192,22)" rx="2" ry="2" _orig_x="209.0" _orig_width="0.1"/>
<text x="164.96980096087842" y="1823.5" _orig_x="211.96"/>
</g>
<g>
<title>IndexKeyComparator::operator (3,048 samples, 0.45%)</title><rect x="366.7536032944405" y="1861" width="21.866849691146193" height="15.0" fill="rgb(219,174,42)" rx="2" ry="2" _orig_x="494.9" _orig_width="5.4"/>
<text x="369.7536032944405" y="1871.5" _orig_x="497.91"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::operator* (94 samples, 0.01%)</title><rect x="938.1262868908716" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(236,168,49)" rx="2" ry="2" _orig_x="636.0" _orig_width="0.2"/>
<text x="941.1262868908716" y="1839.5" _orig_x="638.99"/>
</g>
<g class="hide">
<title>[unknown] (42,163 samples, 6.26%)</title><rect x="714.1" y="2053" width="73.9" height="15.0" fill="rgb(206,98,4)" rx="2" ry="2"/>
<text x="717.15" y="2063.5">[unknown]</text>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (126 samples, 0.02%)</title><rect x="1037.741935483871" y="1765" width="1.214824982841455" height="15.0" fill="rgb(240,54,17)" rx="2" ry="2" _orig_x="660.6" _orig_width="0.3"/>
<text x="1040.741935483871" y="1775.5" _orig_x="663.64"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,746 samples, 0.26%)</title><rect x="58.610062893081846" y="1797" width="11.132075471698114" height="15.0" fill="rgb(237,172,12)" rx="2" ry="2" _orig_x="403.8" _orig_width="3.0"/>
<text x="61.610062893081846" y="1807.5" _orig_x="406.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.02%)</title><rect x="167.535346602608" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(242,98,48)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1903.5" _orig_x="217.06"/>
</g>
<g>
<title>Row::~Row (582 samples, 0.09%)</title><rect x="384.166094715168" y="1845" width="4.049416609471517" height="15.0" fill="rgb(220,123,23)" rx="2" ry="2" _orig_x="499.2" _orig_width="1.0"/>
<text x="387.166094715168" y="1855.5" _orig_x="502.19"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="201.69251887439938" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(225,52,3)" rx="2" ry="2" _orig_x="245.4" _orig_width="0.1"/>
<text x="204.69251887439938" y="1887.5" _orig_x="248.41"/>
</g>
<g class="hide">
<title>_int_malloc (2,087 samples, 0.31%)</title><rect x="1151.0377358490568" y="2053" width="13.729559748427674" height="15.0" fill="rgb(223,39,43)" rx="2" ry="2" _orig_x="698.2" _orig_width="3.7"/>
<text x="1154.0377358490568" y="2063.5" _orig_x="701.25"/>
</g>
<g>
<title>std::fill_n&lt;char*, unsigned long, char&gt; (75 samples, 0.01%)</title><rect x="684.6328071379546" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(249,197,20)" rx="2" ry="2" _orig_x="573.4" _orig_width="0.1"/>
<text x="687.6328071379546" y="1791.5" _orig_x="576.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (69 samples, 0.01%)</title><rect x="370.803019903912" y="1653" width="0.4049416609471517" height="15.0" fill="rgb(250,37,26)" rx="2" ry="2" _orig_x="495.9" _orig_width="0.1"/>
<text x="373.803019903912" y="1663.5" _orig_x="498.87"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="133" width="1.091283459162663" height="15.0" fill="rgb(214,134,43)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="143.5" _orig_x="301.96"/>
</g>
<g>
<title>__vfprintf_internal (506 samples, 0.08%)</title><rect x="1184.735758407687" y="1989" width="3.644474948524365" height="15.0" fill="rgb(221,194,13)" rx="2" ry="2" _orig_x="696.9" _orig_width="0.9"/>
<text x="1187.735758407687" y="1999.5" _orig_x="699.89"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="261" width="1.091283459162663" height="15.0" fill="rgb(224,15,33)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="271.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[code] (1,014 samples, 0.15%)</title><rect x="85.2525737817432" y="1813" width="1.855181880576527" height="15.0" fill="rgb(215,172,20)" rx="2" ry="2" _orig_x="138.7" _orig_width="1.7"/>
<text x="88.2525737817432" y="1823.5" _orig_x="141.66"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="161.96980096087842" y="1781" width="0.1091283459162663" height="15.0" fill="rgb(234,5,31)" rx="2" ry="2" _orig_x="209.0" _orig_width="0.1"/>
<text x="164.96980096087842" y="1791.5" _orig_x="212.00"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (128 samples, 0.02%)</title><rect x="176.83596431022642" y="1685" width="1.214824982841455" height="15.0" fill="rgb(242,109,14)" rx="2" ry="2" _orig_x="448.0" _orig_width="0.3"/>
<text x="179.83596431022642" y="1695.5" _orig_x="451.03"/>
</g>
<g class="hide">
<title>swapper (215,591 samples, 32.01%)</title><rect x="803.7" y="2069" width="377.8" height="15.0" fill="rgb(206,87,21)" rx="2" ry="2"/>
<text x="806.73" y="2079.5">swapper</text>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (83 samples, 0.01%)</title><rect x="946.6300617707619" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(214,86,41)" rx="2" ry="2" _orig_x="638.1" _orig_width="0.2"/>
<text x="949.6300617707619" y="1887.5" _orig_x="641.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,767 samples, 0.41%)</title><rect x="348.14275909402875" y="2021" width="5.238160603980782" height="15.0" fill="rgb(215,42,47)" rx="2" ry="2" _orig_x="379.6" _orig_width="4.8"/>
<text x="351.14275909402875" y="2031.5" _orig_x="382.57"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (143 samples, 0.02%)</title><rect x="46.44474948524364" y="1749" width="1.214824982841455" height="15.0" fill="rgb(240,20,0)" rx="2" ry="2" _orig_x="415.8" _orig_width="0.3"/>
<text x="49.44474948524364" y="1759.5" _orig_x="418.82"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (245 samples, 0.04%)</title><rect x="21.5" y="2037" width="0.4" height="15.0" fill="rgb(243,159,50)" rx="2" ry="2"/>
<text x="24.50" y="2047.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (806 samples, 0.12%)</title><rect x="320.99519560741254" y="1941" width="5.669183253260123" height="15.0" fill="rgb(248,80,17)" rx="2" ry="2" _orig_x="483.6" _orig_width="1.4"/>
<text x="323.99519560741254" y="1951.5" _orig_x="486.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (61 samples, 0.01%)</title><rect x="60.26218256691823" y="53" width="0.1091283459162663" height="15.0" fill="rgb(226,20,30)" rx="2" ry="2" _orig_x="115.8" _orig_width="0.1"/>
<text x="63.26218256691823" y="63.5" _orig_x="118.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,214 samples, 0.48%)</title><rect x="282.66575154426897" y="1925" width="6.220315717227179" height="15.0" fill="rgb(208,126,44)" rx="2" ry="2" _orig_x="319.6" _orig_width="5.7"/>
<text x="285.66575154426897" y="1935.5" _orig_x="322.64"/>
</g>
<g class="hide">
<title>_XEventsQueued (150 samples, 0.02%)</title><rect x="269.570350034317" y="2037" width="0.3273850377487989" height="15.0" fill="rgb(212,222,34)" rx="2" ry="2" _orig_x="307.6" _orig_width="0.3"/>
<text x="272.570350034317" y="2047.5" _orig_x="310.61"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (297 samples, 0.04%)</title><rect x="1119.5401509951953" y="1909" width="2.0247083047357584" height="15.0" fill="rgb(214,27,8)" rx="2" ry="2" _orig_x="680.8" _orig_width="0.5"/>
<text x="1122.5401509951953" y="1919.5" _orig_x="683.79"/>
</g>
<g class="hide">
<title>record__mmap_read_evlist.constprop.0 (1,246 samples, 0.19%)</title><rect x="805.8270418668495" y="1989" width="2.400823610157859" height="15.0" fill="rgb(226,106,20)" rx="2" ry="2" _orig_x="799.0" _orig_width="2.2"/>
<text x="808.8270418668495" y="1999.5" _orig_x="802.01"/>
</g>
<g>
<title>__gnu_cxx::operator-&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt; (73 samples, 0.01%)</title><rect x="891.9629375428964" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(228,15,34)" rx="2" ry="2" _orig_x="624.6" _orig_width="0.1"/>
<text x="894.9629375428964" y="1855.5" _orig_x="627.59"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (66 samples, 0.01%)</title><rect x="132.29238160603978" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(209,176,14)" rx="2" ry="2" _orig_x="437.0" _orig_width="0.1"/>
<text x="135.29238160603978" y="1807.5" _orig_x="440.00"/>
</g>
<g>
<title>std::__detail::_Hash_node_value_base&lt;void*&gt;::_M_valptr (60 samples, 0.01%)</title><rect x="617.0075497597805" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(242,90,47)" rx="2" ry="2" _orig_x="556.7" _orig_width="0.1"/>
<text x="620.0075497597805" y="1807.5" _orig_x="559.73"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (1,207 samples, 0.18%)</title><rect x="18.503774879890045" y="1733" width="8.503774879890186" height="15.0" fill="rgb(222,216,49)" rx="2" ry="2" _orig_x="408.9" _orig_width="2.1"/>
<text x="21.503774879890045" y="1743.5" _orig_x="411.89"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (194 samples, 0.03%)</title><rect x="1141.407000686342" y="1781" width="1.619766643788607" height="15.0" fill="rgb(206,171,14)" rx="2" ry="2" _orig_x="686.2" _orig_width="0.4"/>
<text x="1144.407000686342" y="1791.5" _orig_x="689.22"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field const&amp;&gt; (402 samples, 0.06%)</title><rect x="1164.083733699382" y="1941" width="2.8345916266300617" height="15.0" fill="rgb(213,105,52)" rx="2" ry="2" _orig_x="691.8" _orig_width="0.7"/>
<text x="1167.083733699382" y="1951.5" _orig_x="694.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,214 samples, 0.33%)</title><rect x="1163.658888126287" y="1701" width="4.256005490734386" height="15.0" fill="rgb(206,164,48)" rx="2" ry="2" _orig_x="1126.9" _orig_width="3.9"/>
<text x="1166.658888126287" y="1711.5" _orig_x="1129.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (115 samples, 0.02%)</title><rect x="335.48387096774184" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(247,77,30)" rx="2" ry="2" _orig_x="368.0" _orig_width="0.2"/>
<text x="338.48387096774184" y="1935.5" _orig_x="370.97"/>
</g>
<g>
<title>Field::DeserializeFrom (2,213 samples, 0.33%)</title><rect x="651.4275909402884" y="1861" width="15.792724776938915" height="15.0" fill="rgb(243,110,34)" rx="2" ry="2" _orig_x="565.2" _orig_width="3.9"/>
<text x="654.4275909402884" y="1871.5" _orig_x="568.25"/>
</g>
<g>
<title>SimpleMemHeap::~SimpleMemHeap (2,323 samples, 0.34%)</title><rect x="230.28826355525038" y="1861" width="16.60260809883322" height="15.0" fill="rgb(241,110,50)" rx="2" ry="2" _orig_x="461.2" _orig_width="4.1"/>
<text x="233.28826355525038" y="1871.5" _orig_x="464.22"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (62 samples, 0.01%)</title><rect x="1123.9945092656142" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(243,194,31)" rx="2" ry="2" _orig_x="681.9" _orig_width="0.1"/>
<text x="1126.9945092656142" y="1935.5" _orig_x="684.88"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,322 samples, 1.24%)</title><rect x="738.1674673987645" y="2005" width="15.93273850377488" height="15.0" fill="rgb(253,70,9)" rx="2" ry="2" _orig_x="737.0" _orig_width="14.6"/>
<text x="741.1674673987645" y="2015.5" _orig_x="740.03"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (93 samples, 0.01%)</title><rect x="306.0123541523677" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(219,162,49)" rx="2" ry="2" _orig_x="479.9" _orig_width="0.2"/>
<text x="309.0123541523677" y="1919.5" _orig_x="482.89"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (94 samples, 0.01%)</title><rect x="657.5017158544956" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(236,84,9)" rx="2" ry="2" _orig_x="566.7" _orig_width="0.1"/>
<text x="660.5017158544956" y="1759.5" _orig_x="569.68"/>
</g>
<g class="hide">
<title>g_main_context_prepare (159 samples, 0.02%)</title><rect x="208.6767330130404" y="2021" width="0.3273850377487989" height="15.0" fill="rgb(220,72,30)" rx="2" ry="2" _orig_x="251.8" _orig_width="0.3"/>
<text x="211.6767330130404" y="2031.5" _orig_x="254.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (69 samples, 0.01%)</title><rect x="212.605353466026" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(248,209,7)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1919.5" _orig_x="258.44"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field* const*, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (58 samples, 0.01%)</title><rect x="884.2690459849006" y="1845" width="0.4049416609471517" height="15.0" fill="rgb(212,172,2)" rx="2" ry="2" _orig_x="622.7" _orig_width="0.1"/>
<text x="887.2690459849006" y="1855.5" _orig_x="625.67"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="59.82566918325317" y="69" width="0.2182566918325326" height="15.0" fill="rgb(225,53,28)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="79.5" _orig_x="118.44"/>
</g>
<g>
<title>Field::DeserializeFrom (5,363 samples, 0.80%)</title><rect x="516.1770761839393" y="1845" width="38.06451612903226" height="15.0" fill="rgb(229,177,51)" rx="2" ry="2" _orig_x="531.8" _orig_width="9.4"/>
<text x="519.1770761839393" y="1855.5" _orig_x="534.84">Fiel..</text>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1541" width="2.182566918325326" height="15.0" fill="rgb(248,14,21)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1551.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (370 samples, 0.05%)</title><rect x="600.4049416609472" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(217,202,16)" rx="2" ry="2" _orig_x="552.6" _orig_width="0.7"/>
<text x="603.4049416609472" y="1839.5" _orig_x="555.65"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (117 samples, 0.02%)</title><rect x="58.188743994509174" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(211,169,12)" rx="2" ry="2" _orig_x="113.9" _orig_width="0.2"/>
<text x="61.188743994509174" y="2015.5" _orig_x="116.92"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets (186 samples, 0.03%)</title><rect x="525.4907343857242" y="1701" width="1.214824982841455" height="15.0" fill="rgb(208,80,12)" rx="2" ry="2" _orig_x="534.1" _orig_width="0.3"/>
<text x="528.4907343857242" y="1711.5" _orig_x="537.11"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (221 samples, 0.03%)</title><rect x="161.04323953328765" y="1749" width="1.619766643788607" height="15.0" fill="rgb(233,181,18)" rx="2" ry="2" _orig_x="444.1" _orig_width="0.4"/>
<text x="164.04323953328765" y="1759.5" _orig_x="447.10"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (157 samples, 0.02%)</title><rect x="787.0830473575842" y="1765" width="1.214824982841455" height="15.0" fill="rgb(232,144,7)" rx="2" ry="2" _orig_x="598.7" _orig_width="0.3"/>
<text x="790.0830473575842" y="1775.5" _orig_x="601.72"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (320 samples, 0.05%)</title><rect x="1141.0020590253946" y="1813" width="2.0247083047357584" height="15.0" fill="rgb(229,103,24)" rx="2" ry="2" _orig_x="686.1" _orig_width="0.5"/>
<text x="1144.0020590253946" y="1823.5" _orig_x="689.05"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (1,146 samples, 0.17%)</title><rect x="834.866163349348" y="1765" width="8.098833218943033" height="15.0" fill="rgb(227,70,1)" rx="2" ry="2" _orig_x="610.5" _orig_width="2.0"/>
<text x="837.866163349348" y="1775.5" _orig_x="613.51"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::max_size (81 samples, 0.01%)</title><rect x="935.2916952642414" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(234,144,42)" rx="2" ry="2" _orig_x="635.3" _orig_width="0.1"/>
<text x="938.2916952642414" y="1839.5" _orig_x="638.26"/>
</g>
<g class="hide">
<title>[libvte-2.91.so.0.6000.3] (3,275 samples, 0.49%)</title><rect x="245.0164722031571" y="2037" width="6.329444063143446" height="15.0" fill="rgb(212,135,12)" rx="2" ry="2" _orig_x="285.1" _orig_width="5.8"/>
<text x="248.0164722031571" y="2047.5" _orig_x="288.11"/>
</g>
<g>
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TableHeap::cmp&gt; &gt; (2,357 samples, 0.35%)</title><rect x="1129.2587508579272" y="1909" width="16.60260809883322" height="15.0" fill="rgb(230,153,38)" rx="2" ry="2" _orig_x="683.2" _orig_width="4.1"/>
<text x="1132.2587508579272" y="1919.5" _orig_x="686.18"/>
</g>
<g class="hide">
<title>JSScript::traceChildren (148 samples, 0.02%)</title><rect x="181.1763898421413" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(216,188,9)" rx="2" ry="2" _orig_x="226.6" _orig_width="0.3"/>
<text x="184.1763898421413" y="1903.5" _orig_x="229.60"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (154 samples, 0.02%)</title><rect x="22.3" y="2037" width="0.3" height="15.0" fill="rgb(254,52,43)" rx="2" ry="2"/>
<text x="25.33" y="2047.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (329 samples, 0.05%)</title><rect x="312.8963623884695" y="1877" width="2.0247083047357584" height="15.0" fill="rgb(246,107,17)" rx="2" ry="2" _orig_x="481.6" _orig_width="0.5"/>
<text x="315.8963623884695" y="1887.5" _orig_x="484.57"/>
</g>
<g class="hide">
<title>[code] (398 samples, 0.06%)</title><rect x="14.0" y="1989" width="0.7" height="15.0" fill="rgb(228,161,47)" rx="2" ry="2"/>
<text x="17.04" y="1999.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (563 samples, 0.08%)</title><rect x="65.4" y="1925" width="1.0" height="15.0" fill="rgb(216,132,46)" rx="2" ry="2"/>
<text x="68.37" y="1935.5"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="405" width="2.182566918325326" height="15.0" fill="rgb(244,170,9)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="415.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (145 samples, 0.02%)</title><rect x="330.5730954015098" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(239,151,3)" rx="2" ry="2" _orig_x="363.5" _orig_width="0.3"/>
<text x="333.5730954015098" y="1919.5" _orig_x="366.52"/>
</g>
<g class="hide">
<title>[code] (159 samples, 0.02%)</title><rect x="14.31914893617012" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(247,92,51)" rx="2" ry="2" _orig_x="73.7" _orig_width="0.2"/>
<text x="17.31914893617012" y="2031.5" _orig_x="76.66"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (393 samples, 0.06%)</title><rect x="205.18188057652708" y="1797" width="2.8345916266300617" height="15.0" fill="rgb(239,52,40)" rx="2" ry="2" _orig_x="455.0" _orig_width="0.7"/>
<text x="208.18188057652708" y="1807.5" _orig_x="458.03"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (662 samples, 0.10%)</title><rect x="348.12628689087165" y="1893" width="4.85929993136582" height="15.0" fill="rgb(253,8,51)" rx="2" ry="2" _orig_x="490.3" _orig_width="1.2"/>
<text x="351.12628689087165" y="1903.5" _orig_x="493.32"/>
</g>
<g>
<title>malloc (84 samples, 0.01%)</title><rect x="905.3260123541522" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(233,42,21)" rx="2" ry="2" _orig_x="627.9" _orig_width="0.2"/>
<text x="908.3260123541522" y="1807.5" _orig_x="630.94"/>
</g>
<g>
<title>_int_free (113 samples, 0.02%)</title><rect x="979.0253946465341" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(245,215,0)" rx="2" ry="2" _orig_x="646.1" _orig_width="0.2"/>
<text x="982.0253946465341" y="1823.5" _orig_x="649.08"/>
</g>
<g>
<title>[libminisql_shared.so] (390 samples, 0.06%)</title><rect x="984.2896362388469" y="1893" width="2.8345916266300617" height="15.0" fill="rgb(225,153,25)" rx="2" ry="2" _orig_x="647.4" _orig_width="0.7"/>
<text x="987.2896362388469" y="1903.5" _orig_x="650.38"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (269 samples, 0.04%)</title><rect x="872.9306794783801" y="1877" width="2.0247083047357584" height="15.0" fill="rgb(216,158,38)" rx="2" ry="2" _orig_x="619.9" _orig_width="0.5"/>
<text x="875.9306794783801" y="1887.5" _orig_x="622.92"/>
</g>
<g class="hide">
<title>mount.ntfs (51,331 samples, 7.62%)</title><rect x="708.7" y="2069" width="89.9" height="15.0" fill="rgb(218,137,28)" rx="2" ry="2"/>
<text x="711.67" y="2079.5">mount.ntfs</text>
</g>
<g>
<title>std::priority_queue&lt;std::pair&lt;TableHeap*, int&gt;, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt;, TableHeap::cmp&gt;::empty (58 samples, 0.01%)</title><rect x="1128.4488675360328" y="1941" width="0.4049416609471517" height="15.0" fill="rgb(229,96,1)" rx="2" ry="2" _orig_x="683.0" _orig_width="0.1"/>
<text x="1131.4488675360328" y="1951.5" _orig_x="685.99"/>
</g>
<g>
<title>BufferPoolManager::UnpinPage (115 samples, 0.02%)</title><rect x="336.3829787234041" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(213,73,34)" rx="2" ry="2" _orig_x="487.4" _orig_width="0.2"/>
<text x="339.3829787234041" y="1935.5" _orig_x="490.35"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_nodes (185 samples, 0.03%)</title><rect x="328.6890871654083" y="1861" width="1.214824982841455" height="15.0" fill="rgb(213,68,33)" rx="2" ry="2" _orig_x="485.5" _orig_width="0.3"/>
<text x="331.6890871654083" y="1871.5" _orig_x="488.48"/>
</g>
<g class="hide">
<title>[code] (84 samples, 0.01%)</title><rect x="131.74124914207266" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(222,216,19)" rx="2" ry="2" _orig_x="181.3" _orig_width="0.2"/>
<text x="134.74124914207266" y="1951.5" _orig_x="184.34"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::construct&lt;void*, void* const&amp;&gt; (100 samples, 0.01%)</title><rect x="841.7501715854497" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(247,33,27)" rx="2" ry="2" _orig_x="612.2" _orig_width="0.1"/>
<text x="844.7501715854497" y="1743.5" _orig_x="615.17"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (78 samples, 0.01%)</title><rect x="79.64996568291005" y="1669" width="0.8098833218943035" height="15.0" fill="rgb(237,144,48)" rx="2" ry="2" _orig_x="424.0" _orig_width="0.2"/>
<text x="82.64996568291005" y="1679.5" _orig_x="427.02"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (5,122 samples, 0.76%)</title><rect x="1026.4035689773505" y="1861" width="36.444749485243655" height="15.0" fill="rgb(216,84,16)" rx="2" ry="2" _orig_x="657.8" _orig_width="9.0"/>
<text x="1029.4035689773505" y="1871.5" _orig_x="660.83">std..</text>
</g>
<g class="hide">
<title>__pthread_mutex_unlock (156 samples, 0.02%)</title><rect x="1182.6" y="2037" width="0.3" height="15.0" fill="rgb(235,145,19)" rx="2" ry="2"/>
<text x="1185.58" y="2047.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (244 samples, 0.04%)</title><rect x="134.31708991077554" y="1749" width="2.0247083047357584" height="15.0" fill="rgb(224,106,33)" rx="2" ry="2" _orig_x="437.5" _orig_width="0.5"/>
<text x="137.31708991077554" y="1759.5" _orig_x="440.54"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1045" width="1.091283459162663" height="15.0" fill="rgb(223,73,42)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1055.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (72 samples, 0.01%)</title><rect x="227.11942347288937" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(245,63,54)" rx="2" ry="2" _orig_x="268.7" _orig_width="0.2"/>
<text x="230.11942347288937" y="2047.5" _orig_x="271.75"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(212,68,54)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="2015.5" _orig_x="806.06"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (3,210 samples, 0.48%)</title><rect x="564.7700754975975" y="1845" width="22.676733013040494" height="15.0" fill="rgb(208,140,49)" rx="2" ry="2" _orig_x="543.8" _orig_width="5.6"/>
<text x="567.7700754975975" y="1855.5" _orig_x="546.81">s..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,446 samples, 0.36%)</title><rect x="724.1990391214824" y="1797" width="4.69251887439945" height="15.0" fill="rgb(233,30,14)" rx="2" ry="2" _orig_x="724.2" _orig_width="4.3"/>
<text x="727.1990391214824" y="1807.5" _orig_x="727.19"/>
</g>
<g>
<title>std::allocator&lt;std::__detail::_Hash_node_base*&gt;::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; (102 samples, 0.02%)</title><rect x="1034.907343857241" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(225,15,50)" rx="2" ry="2" _orig_x="659.9" _orig_width="0.2"/>
<text x="1037.907343857241" y="1791.5" _orig_x="662.94"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (316 samples, 0.05%)</title><rect x="100.53054221002049" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(236,10,17)" rx="2" ry="2" _orig_x="152.7" _orig_width="0.5"/>
<text x="103.53054221002049" y="1951.5" _orig_x="155.68"/>
</g>
<g>
<title>DiskManager::IsPageFree (122 samples, 0.02%)</title><rect x="505.64859299931373" y="1861" width="1.214824982841455" height="15.0" fill="rgb(231,17,36)" rx="2" ry="2" _orig_x="529.2" _orig_width="0.3"/>
<text x="508.64859299931373" y="1871.5" _orig_x="532.24"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (142 samples, 0.02%)</title><rect x="56.5" y="1909" width="0.2" height="15.0" fill="rgb(224,107,4)" rx="2" ry="2"/>
<text x="59.48" y="1919.5"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1493" width="1.091283459162663" height="15.0" fill="rgb(214,93,45)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1503.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[unknown] (1,535 samples, 0.23%)</title><rect x="67.5" y="2053" width="2.7" height="15.0" fill="rgb(240,158,43)" rx="2" ry="2"/>
<text x="70.54" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (456 samples, 0.07%)</title><rect x="337.88469457789967" y="1973" width="0.8730267673301304" height="15.0" fill="rgb(211,60,46)" rx="2" ry="2" _orig_x="370.2" _orig_width="0.8"/>
<text x="340.88469457789967" y="1983.5" _orig_x="373.16"/>
</g>
<g class="hide">
<title>__pthread_mutex_lock (176 samples, 0.03%)</title><rect x="154.9855868222374" y="2005" width="0.3273850377487989" height="15.0" fill="rgb(247,207,15)" rx="2" ry="2" _orig_x="202.6" _orig_width="0.3"/>
<text x="157.9855868222374" y="2015.5" _orig_x="205.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (187 samples, 0.03%)</title><rect x="220.89910775566221" y="1845" width="0.3273850377487989" height="15.0" fill="rgb(223,144,41)" rx="2" ry="2" _orig_x="263.0" _orig_width="0.3"/>
<text x="223.89910775566221" y="1855.5" _orig_x="265.97"/>
</g>
<g class="hide">
<title>__memmove_avx_unaligned (242 samples, 0.04%)</title><rect x="273.38984214138634" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(223,186,5)" rx="2" ry="2" _orig_x="311.1" _orig_width="0.4"/>
<text x="276.38984214138634" y="2047.5" _orig_x="314.09"/>
</g>
<g class="hide">
<title>_nv023367rm (103 samples, 0.02%)</title><rect x="349.1" y="2053" width="0.1" height="15.0" fill="rgb(247,112,39)" rx="2" ry="2"/>
<text x="352.06" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (1,044 samples, 0.16%)</title><rect x="19.5" y="2021" width="1.9" height="15.0" fill="rgb(231,186,13)" rx="2" ry="2"/>
<text x="22.54" y="2031.5"/>
</g>
<g class="hide">
<title>g_mutex_unlock (110 samples, 0.02%)</title><rect x="294.12422786547694" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(209,218,22)" rx="2" ry="2" _orig_x="330.1" _orig_width="0.2"/>
<text x="297.12422786547694" y="2047.5" _orig_x="333.07"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="85" width="0.2182566918325326" height="15.0" fill="rgb(233,215,25)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="95.5" _orig_x="119.14"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_get_Tp_allocator (168 samples, 0.02%)</title><rect x="893.1777625257376" y="1845" width="1.214824982841455" height="15.0" fill="rgb(217,105,35)" rx="2" ry="2" _orig_x="624.9" _orig_width="0.3"/>
<text x="896.1777625257376" y="1855.5" _orig_x="627.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (235 samples, 0.03%)</title><rect x="270.8798901853122" y="2005" width="0.4365133836650652" height="15.0" fill="rgb(249,106,37)" rx="2" ry="2" _orig_x="308.8" _orig_width="0.4"/>
<text x="273.8798901853122" y="2015.5" _orig_x="311.76"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (58 samples, 0.01%)</title><rect x="203.1571722717913" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(231,148,40)" rx="2" ry="2" _orig_x="454.5" _orig_width="0.2"/>
<text x="206.1571722717913" y="1759.5" _orig_x="457.55"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_allocate (159 samples, 0.02%)</title><rect x="198.29787234042556" y="1797" width="1.214824982841455" height="15.0" fill="rgb(209,202,25)" rx="2" ry="2" _orig_x="453.3" _orig_width="0.3"/>
<text x="201.29787234042556" y="1807.5" _orig_x="456.30"/>
</g>
<g>
<title>std::_Destroy&lt;Field**&gt; (76 samples, 0.01%)</title><rect x="1072.5669183253262" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(253,59,18)" rx="2" ry="2" _orig_x="669.2" _orig_width="0.1"/>
<text x="1075.5669183253262" y="1871.5" _orig_x="672.21"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (240 samples, 0.04%)</title><rect x="597.1654083733697" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(254,228,29)" rx="2" ry="2" _orig_x="551.8" _orig_width="0.5"/>
<text x="600.1654083733697" y="1839.5" _orig_x="554.84"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,207 samples, 0.33%)</title><rect x="55.641509433962305" y="1845" width="14.10062893081761" height="15.0" fill="rgb(249,209,26)" rx="2" ry="2" _orig_x="403.0" _orig_width="3.8"/>
<text x="58.641509433962305" y="1855.5" _orig_x="405.96"/>
</g>
<g>
<title>Row::Row (280 samples, 0.04%)</title><rect x="690.3019903912146" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(222,219,49)" rx="2" ry="2" _orig_x="574.8" _orig_width="0.5"/>
<text x="693.3019903912146" y="1903.5" _orig_x="577.78"/>
</g>
<g class="hide">
<title>[code] (829 samples, 0.12%)</title><rect x="87.32601235415227" y="1973" width="1.6369251887439944" height="15.0" fill="rgb(229,204,51)" rx="2" ry="2" _orig_x="140.6" _orig_width="1.5"/>
<text x="90.32601235415227" y="1983.5" _orig_x="143.65"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (282 samples, 0.04%)</title><rect x="1119.5401509951953" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(207,212,26)" rx="2" ry="2" _orig_x="680.8" _orig_width="0.5"/>
<text x="1122.5401509951953" y="1903.5" _orig_x="683.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(252,112,38)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="1951.5" _orig_x="806.06"/>
</g>
<g class="hide">
<title>[unknown] (985 samples, 0.15%)</title><rect x="58.73438572409051" y="229" width="1.855181880576527" height="15.0" fill="rgb(234,16,53)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.7"/>
<text x="61.73438572409051" y="239.5" _orig_x="117.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (86 samples, 0.01%)</title><rect x="1023.1640356897734" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(220,111,21)" rx="2" ry="2" _orig_x="657.0" _orig_width="0.2"/>
<text x="1026.1640356897733" y="1839.5" _orig_x="660.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,085 samples, 0.16%)</title><rect x="297.50720658888116" y="1957" width="2.0734385724090596" height="15.0" fill="rgb(225,158,34)" rx="2" ry="2" _orig_x="333.2" _orig_width="1.9"/>
<text x="300.50720658888116" y="1967.5" _orig_x="336.25"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (8,109 samples, 1.20%)</title><rect x="33.9" y="1973" width="14.2" height="15.0" fill="rgb(254,0,3)" rx="2" ry="2"/>
<text x="36.86" y="1983.5"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (312 samples, 0.05%)</title><rect x="148.08510638297858" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(246,139,39)" rx="2" ry="2" _orig_x="440.9" _orig_width="0.5"/>
<text x="151.08510638297858" y="1903.5" _orig_x="443.89"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (827 samples, 0.12%)</title><rect x="31.46190803019909" y="1813" width="5.669183253260123" height="15.0" fill="rgb(237,218,7)" rx="2" ry="2" _orig_x="412.1" _orig_width="1.4"/>
<text x="34.46190803019909" y="1823.5" _orig_x="415.08"/>
</g>
<g class="hide">
<title>VM_Thread (102 samples, 0.02%)</title><rect x="73.3" y="2069" width="0.2" height="15.0" fill="rgb(216,109,11)" rx="2" ry="2"/>
<text x="76.28" y="2079.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.01%)</title><rect x="327.40837336993815" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(208,100,5)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="330.40837336993815" y="2015.5" _orig_x="363.61"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (652 samples, 0.10%)</title><rect x="329.5909402882635" y="2037" width="1.3095401509951956" height="15.0" fill="rgb(235,52,41)" rx="2" ry="2" _orig_x="362.6" _orig_width="1.2"/>
<text x="332.5909402882635" y="2047.5" _orig_x="365.63"/>
</g>
<g class="hide">
<title>[code] (247 samples, 0.04%)</title><rect x="14.755662319835176" y="1973" width="0.4365133836650652" height="15.0" fill="rgb(252,148,17)" rx="2" ry="2" _orig_x="74.1" _orig_width="0.4"/>
<text x="17.755662319835174" y="1983.5" _orig_x="77.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,044 samples, 0.16%)</title><rect x="358.1825669183252" y="1861" width="2.0734385724090596" height="15.0" fill="rgb(231,176,53)" rx="2" ry="2" _orig_x="388.8" _orig_width="1.9"/>
<text x="361.1825669183252" y="1871.5" _orig_x="391.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,672 samples, 0.40%)</title><rect x="348.251887439945" y="2005" width="5.129032258064516" height="15.0" fill="rgb(221,170,40)" rx="2" ry="2" _orig_x="379.7" _orig_width="4.7"/>
<text x="351.251887439945" y="2015.5" _orig_x="382.73"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="773" width="1.091283459162663" height="15.0" fill="rgb(230,139,21)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="783.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="807.9004804392586" y="1589" width="0.2182566918325326" height="15.0" fill="rgb(244,64,52)" rx="2" ry="2" _orig_x="800.9" _orig_width="0.2"/>
<text x="810.9004804392586" y="1599.5" _orig_x="803.94"/>
</g>
<g>
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (88 samples, 0.01%)</title><rect x="1061.2285518188057" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(211,86,1)" rx="2" ry="2" _orig_x="666.4" _orig_width="0.2"/>
<text x="1064.2285518188057" y="1839.5" _orig_x="669.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (207 samples, 0.03%)</title><rect x="539.2587508579272" y="1685" width="1.619766643788607" height="15.0" fill="rgb(220,172,27)" rx="2" ry="2" _orig_x="537.5" _orig_width="0.4"/>
<text x="542.2587508579272" y="1695.5" _orig_x="540.54"/>
</g>
<g class="hide">
<title>kworker/1:3-eve (432 samples, 0.06%)</title><rect x="365.8" y="2069" width="0.8" height="15.0" fill="rgb(243,0,20)" rx="2" ry="2"/>
<text x="368.80" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (247 samples, 0.04%)</title><rect x="717.4330816746739" y="1845" width="1.619766643788607" height="15.0" fill="rgb(251,156,5)" rx="2" ry="2" _orig_x="581.5" _orig_width="0.4"/>
<text x="720.4330816746739" y="1855.5" _orig_x="584.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="810.7378174330815" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(229,203,21)" rx="2" ry="2" _orig_x="803.5" _orig_width="0.2"/>
<text x="813.7378174330815" y="1871.5" _orig_x="806.52"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="1141" width="1.091283459162663" height="15.0" fill="rgb(233,119,26)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1151.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>g_main_context_query (63 samples, 0.01%)</title><rect x="266.4" y="2053" width="0.2" height="15.0" fill="rgb(248,24,37)" rx="2" ry="2"/>
<text x="269.45" y="2063.5"/>
</g>
<g class="hide">
<title>Image_Animator (2,109 samples, 0.31%)</title><rect x="18.3" y="2069" width="3.7" height="15.0" fill="rgb(239,163,54)" rx="2" ry="2"/>
<text x="21.26" y="2079.5"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (261 samples, 0.04%)</title><rect x="227.04873026767316" y="1861" width="1.619766643788607" height="15.0" fill="rgb(223,162,39)" rx="2" ry="2" _orig_x="460.4" _orig_width="0.4"/>
<text x="230.04873026767316" y="1871.5" _orig_x="463.39"/>
</g>
<g class="hide">
<title>[unknown] (59 samples, 0.01%)</title><rect x="31.0" y="1765" width="0.1" height="15.0" fill="rgb(237,96,27)" rx="2" ry="2"/>
<text x="33.98" y="1775.5"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="2037" width="0.5456417295813315" height="15.0" fill="rgb(224,119,28)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="2047.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>operator new[] (80 samples, 0.01%)</title><rect x="131.95950583390518" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(240,225,20)" rx="2" ry="2" _orig_x="181.5" _orig_width="0.2"/>
<text x="134.95950583390518" y="1951.5" _orig_x="184.52"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (65 samples, 0.01%)</title><rect x="63.857240905971224" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(251,59,5)" rx="2" ry="2" _orig_x="420.1" _orig_width="0.1"/>
<text x="66.85724090597122" y="1871.5" _orig_x="423.13"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (7,915 samples, 1.18%)</title><rect x="738.9313658201784" y="1973" width="15.168840082361017" height="15.0" fill="rgb(244,37,24)" rx="2" ry="2" _orig_x="737.7" _orig_width="13.9"/>
<text x="741.9313658201784" y="1983.5" _orig_x="740.74"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (91 samples, 0.01%)</title><rect x="705.6897735072066" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(213,181,39)" rx="2" ry="2" _orig_x="578.6" _orig_width="0.2"/>
<text x="708.6897735072066" y="1871.5" _orig_x="581.64"/>
</g>
<g class="hide">
<title>_nv023368rm (65 samples, 0.01%)</title><rect x="1177.3" y="2053" width="0.1" height="15.0" fill="rgb(248,51,27)" rx="2" ry="2"/>
<text x="1180.31" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (263 samples, 0.04%)</title><rect x="330.3548387096773" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(215,202,13)" rx="2" ry="2" _orig_x="363.3" _orig_width="0.5"/>
<text x="333.3548387096773" y="1951.5" _orig_x="366.31"/>
</g>
<g class="hide">
<title>start_thread (32,598 samples, 4.84%)</title><rect x="149.4" y="2053" width="57.1" height="15.0" fill="rgb(230,81,19)" rx="2" ry="2"/>
<text x="152.41" y="2063.5">start_..</text>
</g>
<g class="hide">
<title>[github-desktop] (60 samples, 0.01%)</title><rect x="178.44818119423465" y="1701" width="0.1091283459162663" height="15.0" fill="rgb(219,24,51)" rx="2" ry="2" _orig_x="224.1" _orig_width="0.1"/>
<text x="181.44818119423465" y="1711.5" _orig_x="227.08"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (126 samples, 0.02%)</title><rect x="398.7439945092656" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(246,105,1)" rx="2" ry="2" _orig_x="502.8" _orig_width="0.2"/>
<text x="401.7439945092656" y="1727.5" _orig_x="505.79"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (690 samples, 0.10%)</title><rect x="46.9" y="1813" width="1.2" height="15.0" fill="rgb(207,172,9)" rx="2" ry="2"/>
<text x="49.86" y="1823.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (202 samples, 0.03%)</title><rect x="21.6" y="1989" width="0.3" height="15.0" fill="rgb(211,159,4)" rx="2" ry="2"/>
<text x="24.58" y="1999.5"/>
</g>
<g>
<title>IndexKeyComparator::operator (7,935 samples, 1.18%)</title><rect x="648.5929993136581" y="1909" width="56.28689087165409" height="15.0" fill="rgb(253,80,41)" rx="2" ry="2" _orig_x="564.5" _orig_width="13.9"/>
<text x="651.5929993136581" y="1919.5" _orig_x="567.46">Index..</text>
</g>
<g>
<title>std::equal_to&lt;int&gt;::operator (116 samples, 0.02%)</title><rect x="733.2258064516127" y="1813" width="0.8098833218943035" height="15.0" fill="rgb(240,6,29)" rx="2" ry="2" _orig_x="585.4" _orig_width="0.2"/>
<text x="736.2258064516127" y="1823.5" _orig_x="588.36"/>
</g>
<g>
<title>__gnu_cxx::__aligned_buffer&lt;void*&gt;::_M_ptr (74 samples, 0.01%)</title><rect x="1017.8997940974607" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(238,85,20)" rx="2" ry="2" _orig_x="655.7" _orig_width="0.1"/>
<text x="1020.8997940974607" y="1839.5" _orig_x="658.68"/>
</g>
<g class="hide">
<title>[github-desktop] (270 samples, 0.04%)</title><rect x="178.22992450240213" y="2021" width="0.5456417295813315" height="15.0" fill="rgb(212,29,36)" rx="2" ry="2" _orig_x="223.9" _orig_width="0.5"/>
<text x="181.22992450240213" y="2031.5" _orig_x="226.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (646 samples, 0.10%)</title><rect x="335.70212765957433" y="2021" width="1.2004118050789294" height="15.0" fill="rgb(225,67,33)" rx="2" ry="2" _orig_x="368.2" _orig_width="1.1"/>
<text x="338.70212765957433" y="2031.5" _orig_x="371.20"/>
</g>
<g class="hide">
<title>[perf-123031.map] (83 samples, 0.01%)</title><rect x="86.45298558682215" y="1461" width="0.1091283459162663" height="15.0" fill="rgb(213,229,45)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1471.5" _orig_x="142.77"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (610 samples, 0.09%)</title><rect x="397.5291695264241" y="1765" width="4.454358270418669" height="15.0" fill="rgb(249,32,4)" rx="2" ry="2" _orig_x="502.5" _orig_width="1.1"/>
<text x="400.5291695264241" y="1775.5" _orig_x="505.53"/>
</g>
<g class="hide">
<title>ntfs_rl_vcn_to_lcn (81 samples, 0.01%)</title><rect x="798.3" y="2053" width="0.1" height="15.0" fill="rgb(208,48,2)" rx="2" ry="2"/>
<text x="801.31" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,803 samples, 0.86%)</title><rect x="766.64996568291" y="1845" width="11.131091283459162" height="15.0" fill="rgb(253,100,3)" rx="2" ry="2" _orig_x="763.1" _orig_width="10.2"/>
<text x="769.64996568291" y="1855.5" _orig_x="766.11"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (990 samples, 0.15%)</title><rect x="1105.7721345229922" y="1941" width="6.884008236101578" height="15.0" fill="rgb(247,220,12)" rx="2" ry="2" _orig_x="677.4" _orig_width="1.7"/>
<text x="1108.7721345229922" y="1951.5" _orig_x="680.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (624 samples, 0.09%)</title><rect x="36.345911949685615" y="1973" width="4.081761006289309" height="15.0" fill="rgb(205,44,12)" rx="2" ry="2" _orig_x="397.8" _orig_width="1.1"/>
<text x="39.345911949685615" y="1983.5" _orig_x="400.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (186 samples, 0.03%)</title><rect x="810.5195607412489" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(237,174,6)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1951.5" _orig_x="806.33"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;unsigned int, std::pair&lt;unsigned int const, IndexInfo*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (130 samples, 0.02%)</title><rect x="1098.4831846259437" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(250,113,40)" rx="2" ry="2" _orig_x="675.6" _orig_width="0.2"/>
<text x="1101.4831846259437" y="1887.5" _orig_x="678.57"/>
</g>
<g class="hide">
<title>InotifyBackend::handleEvents (202 samples, 0.03%)</title><rect x="97.03843514069997" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(207,180,36)" rx="2" ry="2" _orig_x="149.5" _orig_width="0.4"/>
<text x="100.03843514069997" y="2031.5" _orig_x="152.50"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Field**, std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt; &gt;::__normal_iterator (83 samples, 0.01%)</title><rect x="941.7707618393958" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(219,111,45)" rx="2" ry="2" _orig_x="636.9" _orig_width="0.2"/>
<text x="944.7707618393958" y="1839.5" _orig_x="639.92"/>
</g>
<g>
<title>Field::Field (134 samples, 0.02%)</title><rect x="808.9498970487302" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(233,57,19)" rx="2" ry="2" _orig_x="604.1" _orig_width="0.2"/>
<text x="811.9498970487302" y="1855.5" _orig_x="607.06"/>
</g>
<g class="hide">
<title>[unknown] (1,049 samples, 0.16%)</title><rect x="58.73438572409051" y="245" width="2.0734385724090596" height="15.0" fill="rgb(236,105,19)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.9"/>
<text x="61.73438572409051" y="255.5" _orig_x="117.42"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (140 samples, 0.02%)</title><rect x="1120.35003431709" y="1877" width="1.214824982841455" height="15.0" fill="rgb(244,17,47)" rx="2" ry="2" _orig_x="681.0" _orig_width="0.3"/>
<text x="1123.35003431709" y="1887.5" _orig_x="684.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="335.48387096774184" y="1909" width="0.2182566918325326" height="15.0" fill="rgb(251,226,10)" rx="2" ry="2" _orig_x="368.0" _orig_width="0.2"/>
<text x="338.48387096774184" y="1919.5" _orig_x="371.02"/>
</g>
<g class="hide">
<title>[nvidia_drv.so] (1,306 samples, 0.19%)</title><rect x="54.914893617021185" y="2037" width="2.509951956074125" height="15.0" fill="rgb(207,223,54)" rx="2" ry="2" _orig_x="110.9" _orig_width="2.3"/>
<text x="57.914893617021185" y="2047.5" _orig_x="113.94"/>
</g>
<g class="hide">
<title>[code] (457 samples, 0.07%)</title><rect x="15.3" y="1877" width="0.8" height="15.0" fill="rgb(214,205,42)" rx="2" ry="2"/>
<text x="18.31" y="1887.5"/>
</g>
<g>
<title>cfree@GLIBC_2.2.5 (70 samples, 0.01%)</title><rect x="602.0247083047358" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(244,69,49)" rx="2" ry="2" _orig_x="553.0" _orig_width="0.1"/>
<text x="605.0247083047358" y="1791.5" _orig_x="556.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,094 samples, 0.16%)</title><rect x="795.787234042553" y="1877" width="2.0734385724090596" height="15.0" fill="rgb(220,204,30)" rx="2" ry="2" _orig_x="789.8" _orig_width="1.9"/>
<text x="798.787234042553" y="1887.5" _orig_x="792.77"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (203 samples, 0.03%)</title><rect x="186.74193548387083" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(224,177,31)" rx="2" ry="2" _orig_x="231.7" _orig_width="0.4"/>
<text x="189.74193548387083" y="1967.5" _orig_x="234.71"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (549 samples, 0.08%)</title><rect x="329.809196980096" y="1989" width="1.091283459162663" height="15.0" fill="rgb(218,16,1)" rx="2" ry="2" _orig_x="362.8" _orig_width="1.0"/>
<text x="332.809196980096" y="1999.5" _orig_x="365.81"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="362.0" y="2053" width="0.2" height="15.0" fill="rgb(247,75,12)" rx="2" ry="2"/>
<text x="365.05" y="2063.5"/>
</g>
<g class="hide">
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Backend::run (30,164 samples, 4.48%)</title><rect x="97.03843514069997" y="2037" width="57.72889498970487" height="15.0" fill="rgb(226,90,2)" rx="2" ry="2" _orig_x="149.5" _orig_width="52.9"/>
<text x="100.03843514069997" y="2047.5" _orig_x="152.50">std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Backend::run </text>
</g>
<g>
<title>TypeFloat::DeserializeFrom (1,463 samples, 0.22%)</title><rect x="522.2512010981466" y="1829" width="10.123541523678792" height="15.0" fill="rgb(231,1,52)" rx="2" ry="2" _orig_x="533.3" _orig_width="2.5"/>
<text x="525.2512010981466" y="1839.5" _orig_x="536.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,042 samples, 0.45%)</title><rect x="342.1407000686341" y="2005" width="5.892930679478381" height="15.0" fill="rgb(224,116,47)" rx="2" ry="2" _orig_x="374.1" _orig_width="5.4"/>
<text x="345.1407000686341" y="2015.5" _orig_x="377.13"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (95 samples, 0.01%)</title><rect x="871.3109128345916" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(222,188,2)" rx="2" ry="2" _orig_x="619.5" _orig_width="0.2"/>
<text x="874.3109128345916" y="1887.5" _orig_x="622.51"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (435 samples, 0.06%)</title><rect x="64.29993136582009" y="1797" width="0.8730267673301304" height="15.0" fill="rgb(245,172,10)" rx="2" ry="2" _orig_x="119.5" _orig_width="0.8"/>
<text x="67.29993136582009" y="1807.5" _orig_x="122.49"/>
</g>
<g>
<title>std::__relocate_a&lt;Field**, Field**, std::allocator&lt;Field*&gt; &gt; (198 samples, 0.03%)</title><rect x="582.5875085792727" y="1765" width="1.619766643788607" height="15.0" fill="rgb(229,196,39)" rx="2" ry="2" _orig_x="548.2" _orig_width="0.4"/>
<text x="585.5875085792727" y="1775.5" _orig_x="551.23"/>
</g>
<g class="hide">
<title>g_signal_emit (72 samples, 0.01%)</title><rect x="205.73026767330123" y="2005" width="0.2182566918325326" height="15.0" fill="rgb(233,142,50)" rx="2" ry="2" _orig_x="249.1" _orig_width="0.2"/>
<text x="208.73026767330123" y="2015.5" _orig_x="252.14"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (67 samples, 0.01%)</title><rect x="917.4742621825668" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(253,145,20)" rx="2" ry="2" _orig_x="630.9" _orig_width="0.1"/>
<text x="920.4742621825668" y="1807.5" _orig_x="633.93"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,348 samples, 0.35%)</title><rect x="54.528301886792455" y="1861" width="15.213836477987421" height="15.0" fill="rgb(218,60,52)" rx="2" ry="2" _orig_x="402.7" _orig_width="4.1"/>
<text x="57.528301886792455" y="1871.5" _orig_x="405.71"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (85 samples, 0.01%)</title><rect x="43.20521619766639" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(207,126,53)" rx="2" ry="2" _orig_x="415.0" _orig_width="0.1"/>
<text x="46.20521619766639" y="1823.5" _orig_x="417.98"/>
</g>
<g class="hide">
<title>[perf-123031.map] (62 samples, 0.01%)</title><rect x="86.45298558682215" y="1109" width="0.1091283459162663" height="15.0" fill="rgb(248,157,31)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1119.5" _orig_x="142.81"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75 samples, 0.01%)</title><rect x="508.0782429649964" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(243,97,21)" rx="2" ry="2" _orig_x="529.8" _orig_width="0.1"/>
<text x="511.0782429649964" y="1839.5" _orig_x="532.78"/>
</g>
<g class="hide">
<title>g_array_append_vals (140 samples, 0.02%)</title><rect x="256.9114619080301" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(212,159,38)" rx="2" ry="2" _orig_x="296.0" _orig_width="0.2"/>
<text x="259.9114619080301" y="1999.5" _orig_x="298.97"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::max_size (67 samples, 0.01%)</title><rect x="578.538091969801" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(235,48,26)" rx="2" ry="2" _orig_x="547.2" _orig_width="0.1"/>
<text x="581.538091969801" y="1759.5" _orig_x="550.18"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (1,241 samples, 0.18%)</title><rect x="672.8894989704874" y="1845" width="8.503774879890186" height="15.0" fill="rgb(205,93,42)" rx="2" ry="2" _orig_x="570.5" _orig_width="2.1"/>
<text x="675.8894989704874" y="1855.5" _orig_x="573.47"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (1,416 samples, 0.21%)</title><rect x="972.5463280713794" y="1877" width="10.123541523678792" height="15.0" fill="rgb(219,169,1)" rx="2" ry="2" _orig_x="644.5" _orig_width="2.5"/>
<text x="975.5463280713794" y="1887.5" _orig_x="647.53"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::max_size (137 samples, 0.02%)</title><rect x="920.3088538091971" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(231,180,48)" rx="2" ry="2" _orig_x="631.6" _orig_width="0.2"/>
<text x="923.3088538091971" y="1791.5" _orig_x="634.57"/>
</g>
<g class="hide">
<title>ntfs_get_size_for_mapping_pairs (122 samples, 0.02%)</title><rect x="796.9" y="2053" width="0.2" height="15.0" fill="rgb(210,92,50)" rx="2" ry="2"/>
<text x="799.93" y="2063.5"/>
</g>
<g class="hide">
<title>ib_log_writer (149 samples, 0.02%)</title><rect x="343.1" y="2069" width="0.2" height="15.0" fill="rgb(226,218,10)" rx="2" ry="2"/>
<text x="346.06" y="2079.5"/>
</g>
<g class="hide">
<title>[github-desktop] (77 samples, 0.01%)</title><rect x="175.6108442004117" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(217,139,46)" rx="2" ry="2" _orig_x="221.5" _orig_width="0.1"/>
<text x="178.6108442004117" y="1951.5" _orig_x="224.47"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (314 samples, 0.05%)</title><rect x="221.33562113932726" y="2005" width="0.6547700754975978" height="15.0" fill="rgb(234,164,54)" rx="2" ry="2" _orig_x="263.4" _orig_width="0.6"/>
<text x="224.33562113932726" y="2015.5" _orig_x="266.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="21.874213836477946" y="1701" width="0.37106918238993714" height="15.0" fill="rgb(218,27,5)" rx="2" ry="2" _orig_x="393.9" _orig_width="0.1"/>
<text x="24.874213836477946" y="1711.5" _orig_x="396.88"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (82 samples, 0.01%)</title><rect x="1034.5024021962936" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(207,94,47)" rx="2" ry="2" _orig_x="659.8" _orig_width="0.1"/>
<text x="1037.5024021962936" y="1791.5" _orig_x="662.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="159.78723404255308" y="1893" width="0.1091283459162663" height="15.0" fill="rgb(223,159,0)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1903.5" _orig_x="209.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (300 samples, 0.04%)</title><rect x="807.4639670555936" y="1669" width="0.6547700754975978" height="15.0" fill="rgb(215,62,50)" rx="2" ry="2" _orig_x="800.5" _orig_width="0.6"/>
<text x="810.4639670555936" y="1679.5" _orig_x="803.55"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (59 samples, 0.01%)</title><rect x="150.51475634866156" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(244,101,19)" rx="2" ry="2" _orig_x="441.5" _orig_width="0.1"/>
<text x="153.51475634866156" y="1871.5" _orig_x="444.51"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (80 samples, 0.01%)</title><rect x="140.39121482498282" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(230,122,25)" rx="2" ry="2" _orig_x="439.0" _orig_width="0.2"/>
<text x="143.39121482498282" y="1791.5" _orig_x="442.03"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="757" width="2.182566918325326" height="15.0" fill="rgb(212,151,15)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="767.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[code] (128 samples, 0.02%)</title><rect x="69.86547700754966" y="1765" width="0.3273850377487989" height="15.0" fill="rgb(223,9,27)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1775.5" _orig_x="127.63"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::begin (91 samples, 0.01%)</title><rect x="233.52779684282766" y="1829" width="0.8098833218943035" height="15.0" fill="rgb(233,220,40)" rx="2" ry="2" _orig_x="462.0" _orig_width="0.2"/>
<text x="236.52779684282766" y="1839.5" _orig_x="465.01"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (204 samples, 0.03%)</title><rect x="337.1207961564858" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(209,153,2)" rx="2" ry="2" _orig_x="369.5" _orig_width="0.3"/>
<text x="340.1207961564858" y="1983.5" _orig_x="372.49"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7,400 samples, 1.10%)</title><rect x="70.30199039121473" y="2037" width="14.077556623198353" height="15.0" fill="rgb(243,158,6)" rx="2" ry="2" _orig_x="125.0" _orig_width="12.9"/>
<text x="73.30199039121473" y="2047.5" _orig_x="127.98"/>
</g>
<g class="hide">
<title>[dbus-daemon] (219 samples, 0.03%)</title><rect x="160.55113246396692" y="2037" width="0.4365133836650652" height="15.0" fill="rgb(208,116,47)" rx="2" ry="2" _orig_x="207.7" _orig_width="0.4"/>
<text x="163.55113246396692" y="2047.5" _orig_x="210.69"/>
</g>
<g class="hide">
<title>[unknown] (104 samples, 0.02%)</title><rect x="57.315717227179036" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(232,201,26)" rx="2" ry="2" _orig_x="113.1" _orig_width="0.1"/>
<text x="60.315717227179036" y="2031.5" _orig_x="116.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (139 samples, 0.02%)</title><rect x="1166.251572327044" y="1925" width="1.1132075471698113" height="15.0" fill="rgb(216,191,8)" rx="2" ry="2" _orig_x="702.3" _orig_width="0.3"/>
<text x="1169.251572327044" y="1935.5" _orig_x="705.31"/>
</g>
<g class="hide">
<title>[code] (208 samples, 0.03%)</title><rect x="85.90734385724082" y="1461" width="0.4365133836650652" height="15.0" fill="rgb(233,221,52)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1471.5" _orig_x="142.34"/>
</g>
<g>
<title>BufferPoolManager::FetchPage (267 samples, 0.04%)</title><rect x="505.64859299931373" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(237,24,31)" rx="2" ry="2" _orig_x="529.2" _orig_width="0.5"/>
<text x="508.64859299931373" y="1903.5" _orig_x="532.18"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (189 samples, 0.03%)</title><rect x="810.5195607412489" y="1957" width="0.4365133836650652" height="15.0" fill="rgb(246,33,31)" rx="2" ry="2" _orig_x="803.3" _orig_width="0.4"/>
<text x="813.5195607412489" y="1967.5" _orig_x="806.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (772 samples, 0.11%)</title><rect x="210.96842827728202" y="1909" width="1.5277968428277282" height="15.0" fill="rgb(208,150,25)" rx="2" ry="2" _orig_x="253.9" _orig_width="1.4"/>
<text x="213.96842827728202" y="1919.5" _orig_x="256.93"/>
</g>
<g class="hide">
<title>adler32_z (77 samples, 0.01%)</title><rect x="336.2" y="2053" width="0.1" height="15.0" fill="rgb(253,66,12)" rx="2" ry="2"/>
<text x="339.20" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (915 samples, 0.14%)</title><rect x="85.3617021276595" y="1749" width="1.7460535346602608" height="15.0" fill="rgb(219,192,19)" rx="2" ry="2" _orig_x="138.8" _orig_width="1.6"/>
<text x="88.3617021276595" y="1759.5" _orig_x="141.80"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (610 samples, 0.09%)</title><rect x="339.7398764584762" y="2037" width="1.091283459162663" height="15.0" fill="rgb(226,54,38)" rx="2" ry="2" _orig_x="371.9" _orig_width="1.0"/>
<text x="342.7398764584762" y="2047.5" _orig_x="374.86"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (534 samples, 0.08%)</title><rect x="977.8105696636923" y="1829" width="3.644474948524365" height="15.0" fill="rgb(240,137,18)" rx="2" ry="2" _orig_x="645.8" _orig_width="0.9"/>
<text x="980.8105696636923" y="1839.5" _orig_x="648.78"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::shared_ptr&lt;InotifySubscription&gt; const&amp;&gt; (940 samples, 0.14%)</title><rect x="132.5051475634865" y="1973" width="1.855181880576527" height="15.0" fill="rgb(252,92,3)" rx="2" ry="2" _orig_x="182.0" _orig_width="1.7"/>
<text x="135.5051475634865" y="1983.5" _orig_x="185.05"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (108 samples, 0.02%)</title><rect x="810.3013040494166" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(236,163,7)" rx="2" ry="2" _orig_x="803.1" _orig_width="0.2"/>
<text x="813.3013040494166" y="2031.5" _orig_x="806.06"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (255 samples, 0.04%)</title><rect x="221.44474948524353" y="1973" width="0.5456417295813315" height="15.0" fill="rgb(241,138,6)" rx="2" ry="2" _orig_x="263.5" _orig_width="0.5"/>
<text x="224.44474948524353" y="1983.5" _orig_x="266.50"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (101 samples, 0.01%)</title><rect x="1040.9814687714481" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(226,165,30)" rx="2" ry="2" _orig_x="661.4" _orig_width="0.1"/>
<text x="1043.9814687714481" y="1807.5" _orig_x="664.35"/>
</g>
<g class="hide">
<title>epoll_wait (67 samples, 0.01%)</title><rect x="14.6" y="1925" width="0.1" height="15.0" fill="rgb(206,28,31)" rx="2" ry="2"/>
<text x="17.62" y="1935.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (6,187 samples, 0.92%)</title><rect x="1156.1290322580644" y="1749" width="11.785861358956762" height="15.0" fill="rgb(207,33,30)" rx="2" ry="2" _orig_x="1120.0" _orig_width="10.8"/>
<text x="1159.1290322580644" y="1759.5" _orig_x="1122.98"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::begin (59 samples, 0.01%)</title><rect x="453.8160603980781" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(239,92,25)" rx="2" ry="2" _orig_x="516.4" _orig_width="0.1"/>
<text x="456.8160603980781" y="1791.5" _orig_x="519.45"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (62 samples, 0.01%)</title><rect x="329.04529855868213" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(230,180,17)" rx="2" ry="2" _orig_x="362.1" _orig_width="0.1"/>
<text x="332.04529855868213" y="2031.5" _orig_x="365.05"/>
</g>
<g>
<title>std::__detail::_Node_iterator&lt;void*, true, false&gt;::operator* (289 samples, 0.04%)</title><rect x="1017.0899107755662" y="1861" width="2.0247083047357584" height="15.0" fill="rgb(233,5,19)" rx="2" ry="2" _orig_x="655.5" _orig_width="0.5"/>
<text x="1020.0899107755662" y="1871.5" _orig_x="658.53"/>
</g>
<g>
<title>Row::~Row (9,816 samples, 1.46%)</title><rect x="1010.6108442004116" y="1909" width="69.64996568291009" height="15.0" fill="rgb(250,29,9)" rx="2" ry="2" _orig_x="653.9" _orig_width="17.2"/>
<text x="1013.6108442004116" y="1919.5" _orig_x="656.88">Row::~..</text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,090 samples, 0.16%)</title><rect x="806.0452985586821" y="1909" width="2.0734385724090596" height="15.0" fill="rgb(244,187,18)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1919.5" _orig_x="802.16"/>
</g>
<g>
<title>std::__uninitialized_move_if_noexcept_a&lt;Field*, Field*, std::allocator&lt;Field&gt; &gt; (66 samples, 0.01%)</title><rect x="1103.3424845573093" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(218,205,45)" rx="2" ry="2" _orig_x="676.8" _orig_width="0.1"/>
<text x="1106.3424845573093" y="1903.5" _orig_x="679.78"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (66 samples, 0.01%)</title><rect x="445.7172271791351" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(214,73,0)" rx="2" ry="2" _orig_x="514.4" _orig_width="0.1"/>
<text x="448.7172271791351" y="1775.5" _orig_x="517.36"/>
</g>
<g class="hide">
<title>[unknown] (619 samples, 0.09%)</title><rect x="260.1853122855181" y="1605" width="1.091283459162663" height="15.0" fill="rgb(242,170,54)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1615.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,096 samples, 0.16%)</title><rect x="286.81262868908703" y="1845" width="2.0734385724090596" height="15.0" fill="rgb(208,177,22)" rx="2" ry="2" _orig_x="323.4" _orig_width="1.9"/>
<text x="289.81262868908703" y="1855.5" _orig_x="326.35"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (512 samples, 0.08%)</title><rect x="544.1180507892932" y="1733" width="3.644474948524365" height="15.0" fill="rgb(240,168,51)" rx="2" ry="2" _orig_x="538.7" _orig_width="0.9"/>
<text x="547.1180507892932" y="1743.5" _orig_x="541.73"/>
</g>
<g class="hide">
<title>[unknown] (617 samples, 0.09%)</title><rect x="260.1853122855181" y="1509" width="1.091283459162663" height="15.0" fill="rgb(253,8,26)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1519.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (126 samples, 0.02%)</title><rect x="174.4104323953328" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(221,26,3)" rx="2" ry="2" _orig_x="220.4" _orig_width="0.2"/>
<text x="177.4104323953328" y="1887.5" _orig_x="223.40"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::~unordered_set (183 samples, 0.03%)</title><rect x="1066.0878517501717" y="1877" width="1.214824982841455" height="15.0" fill="rgb(235,51,49)" rx="2" ry="2" _orig_x="667.6" _orig_width="0.3"/>
<text x="1069.0878517501717" y="1887.5" _orig_x="670.62"/>
</g>
<g class="hide">
<title>[code] (67 samples, 0.01%)</title><rect x="86.2347288949896" y="1093" width="0.1091283459162663" height="15.0" fill="rgb(207,76,12)" rx="2" ry="2" _orig_x="139.6" _orig_width="0.1"/>
<text x="89.2347288949896" y="1103.5" _orig_x="142.57"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="581" width="2.182566918325326" height="15.0" fill="rgb(247,168,48)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="591.5" _orig_x="117.41"/>
</g>
<g>
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::operator (338 samples, 0.05%)</title><rect x="179.26561427590943" y="1749" width="2.42964996568291" height="15.0" fill="rgb(207,202,23)" rx="2" ry="2" _orig_x="448.6" _orig_width="0.6"/>
<text x="182.26561427590943" y="1759.5" _orig_x="451.58"/>
</g>
<g class="hide">
<title>[dbus-daemon] (81 samples, 0.01%)</title><rect x="207.5" y="2053" width="0.2" height="15.0" fill="rgb(217,30,17)" rx="2" ry="2"/>
<text x="210.51" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="821" width="1.091283459162663" height="15.0" fill="rgb(240,138,38)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="831.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[libmutter-clutter-6.so.0.0.0] (970 samples, 0.14%)</title><rect x="188.05147563486608" y="2037" width="1.855181880576527" height="15.0" fill="rgb(217,15,30)" rx="2" ry="2" _orig_x="232.9" _orig_width="1.7"/>
<text x="191.05147563486608" y="2047.5" _orig_x="235.90"/>
</g>
<g class="hide">
<title>g_slice_free1 (107 samples, 0.02%)</title><rect x="268.91557995881936" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(217,67,48)" rx="2" ry="2" _orig_x="307.0" _orig_width="0.1"/>
<text x="271.91557995881936" y="2031.5" _orig_x="309.96"/>
</g>
<g>
<title>[[kernel.kallsyms]] (140 samples, 0.02%)</title><rect x="724.3170899107756" y="1637" width="1.214824982841455" height="15.0" fill="rgb(245,56,7)" rx="2" ry="2" _orig_x="583.2" _orig_width="0.3"/>
<text x="727.3170899107756" y="1647.5" _orig_x="586.24"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (65 samples, 0.01%)</title><rect x="431.5442690459848" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(250,26,11)" rx="2" ry="2" _orig_x="510.9" _orig_width="0.1"/>
<text x="434.5442690459848" y="1823.5" _orig_x="513.93"/>
</g>
<g class="hide">
<title>xcb_poll_for_event (218 samples, 0.03%)</title><rect x="269.1338366506519" y="2021" width="0.4365133836650652" height="15.0" fill="rgb(237,80,46)" rx="2" ry="2" _orig_x="307.2" _orig_width="0.4"/>
<text x="272.1338366506519" y="2031.5" _orig_x="310.20"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (116 samples, 0.02%)</title><rect x="59.82566918325317" y="101" width="0.2182566918325326" height="15.0" fill="rgb(216,51,40)" rx="2" ry="2" _orig_x="115.4" _orig_width="0.2"/>
<text x="62.82566918325317" y="111.5" _orig_x="118.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (172 samples, 0.03%)</title><rect x="807.7913520933423" y="1637" width="0.3273850377487989" height="15.0" fill="rgb(239,198,48)" rx="2" ry="2" _orig_x="800.8" _orig_width="0.3"/>
<text x="810.7913520933423" y="1647.5" _orig_x="803.77"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::~vector (90 samples, 0.01%)</title><rect x="361.8943033630747" y="1957" width="0.4049416609471517" height="15.0" fill="rgb(222,12,46)" rx="2" ry="2" _orig_x="493.7" _orig_width="0.1"/>
<text x="364.8943033630747" y="1967.5" _orig_x="496.67"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="533" width="1.091283459162663" height="15.0" fill="rgb(231,148,15)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="543.5" _orig_x="301.96"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (81 samples, 0.01%)</title><rect x="336.3829787234041" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(209,45,38)" rx="2" ry="2" _orig_x="487.4" _orig_width="0.1"/>
<text x="339.3829787234041" y="1903.5" _orig_x="490.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (111 samples, 0.02%)</title><rect x="271.0981468771447" y="1925" width="0.2182566918325326" height="15.0" fill="rgb(238,32,9)" rx="2" ry="2" _orig_x="309.0" _orig_width="0.2"/>
<text x="274.0981468771447" y="1935.5" _orig_x="311.98"/>
</g>
<g class="hide">
<title>[libntfs-3g.so.883.0.0] (66 samples, 0.01%)</title><rect x="714.8140013726835" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(236,56,41)" rx="2" ry="2" _orig_x="715.6" _orig_width="0.1"/>
<text x="717.8140013726835" y="2015.5" _orig_x="718.63"/>
</g>
<g class="hide">
<title>start_thread (154 samples, 0.02%)</title><rect x="22.3" y="2053" width="0.3" height="15.0" fill="rgb(221,227,15)" rx="2" ry="2"/>
<text x="25.33" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (328 samples, 0.05%)</title><rect x="69.64722031571714" y="1925" width="0.5456417295813315" height="15.0" fill="rgb(220,192,49)" rx="2" ry="2" _orig_x="124.4" _orig_width="0.5"/>
<text x="72.64722031571714" y="1935.5" _orig_x="127.37"/>
</g>
<g>
<title>[[kernel.kallsyms]] (291 samples, 0.04%)</title><rect x="723.5072065888812" y="1701" width="2.0247083047357584" height="15.0" fill="rgb(217,21,17)" rx="2" ry="2" _orig_x="583.0" _orig_width="0.5"/>
<text x="726.5072065888812" y="1711.5" _orig_x="585.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (133 samples, 0.02%)</title><rect x="10.60878517501706" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(228,114,14)" rx="2" ry="2" _orig_x="70.3" _orig_width="0.2"/>
<text x="13.60878517501706" y="1983.5" _orig_x="73.31"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="885" width="2.182566918325326" height="15.0" fill="rgb(227,108,35)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="895.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>g_hash_table_lookup (89 samples, 0.01%)</title><rect x="337.0" y="2053" width="0.1" height="15.0" fill="rgb(230,112,30)" rx="2" ry="2"/>
<text x="339.99" y="2063.5"/>
</g>
<g>
<title>operator new (76 samples, 0.01%)</title><rect x="955.5387783115989" y="1797" width="0.4049416609471517" height="15.0" fill="rgb(206,25,43)" rx="2" ry="2" _orig_x="640.3" _orig_width="0.1"/>
<text x="958.5387783115989" y="1807.5" _orig_x="643.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (175 samples, 0.03%)</title><rect x="57.2" y="2021" width="0.3" height="15.0" fill="rgb(207,80,16)" rx="2" ry="2"/>
<text x="60.18" y="2031.5"/>
</g>
<g class="hide">
<title>epoll_wait (352 samples, 0.05%)</title><rect x="28.9" y="2021" width="0.6" height="15.0" fill="rgb(226,121,19)" rx="2" ry="2"/>
<text x="31.93" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (80 samples, 0.01%)</title><rect x="13.3" y="2021" width="0.2" height="15.0" fill="rgb(233,166,29)" rx="2" ry="2"/>
<text x="16.34" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (167 samples, 0.02%)</title><rect x="214.13315030885371" y="1877" width="0.3273850377487989" height="15.0" fill="rgb(237,226,39)" rx="2" ry="2" _orig_x="256.8" _orig_width="0.3"/>
<text x="217.13315030885371" y="1887.5" _orig_x="259.80"/>
</g>
<g>
<title>std::__detail::_Insert_base&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (313 samples, 0.05%)</title><rect x="339.6225120109813" y="1829" width="2.0247083047357584" height="15.0" fill="rgb(210,101,52)" rx="2" ry="2" _orig_x="488.2" _orig_width="0.5"/>
<text x="342.6225120109813" y="1839.5" _orig_x="491.17"/>
</g>
<g class="hide">
<title>operator new[] (263 samples, 0.04%)</title><rect x="133.8146877144817" y="1941" width="0.5456417295813315" height="15.0" fill="rgb(217,18,16)" rx="2" ry="2" _orig_x="183.2" _orig_width="0.5"/>
<text x="136.8146877144817" y="1951.5" _orig_x="186.23"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (87 samples, 0.01%)</title><rect x="661.9560741249139" y="1701" width="0.8098833218943035" height="15.0" fill="rgb(230,77,21)" rx="2" ry="2" _orig_x="567.8" _orig_width="0.2"/>
<text x="664.9560741249139" y="1711.5" _orig_x="570.82"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,186 samples, 0.77%)</title><rect x="144.83665065202462" y="1973" width="9.821551132463966" height="15.0" fill="rgb(214,61,36)" rx="2" ry="2" _orig_x="193.3" _orig_width="9.0"/>
<text x="147.83665065202462" y="1983.5" _orig_x="196.26"/>
</g>
<g class="hide">
<title>[[vdso]] (235 samples, 0.03%)</title><rect x="54.4" y="2037" width="0.4" height="15.0" fill="rgb(228,192,15)" rx="2" ry="2"/>
<text x="57.41" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (122 samples, 0.02%)</title><rect x="299.36238846945764" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(225,148,9)" rx="2" ry="2" _orig_x="334.9" _orig_width="0.2"/>
<text x="302.36238846945764" y="1871.5" _orig_x="337.93"/>
</g>
<g class="hide">
<title>[unknown] (1,194 samples, 0.18%)</title><rect x="58.62525737817423" y="1957" width="2.2916952642415924" height="15.0" fill="rgb(245,174,25)" rx="2" ry="2" _orig_x="114.3" _orig_width="2.1"/>
<text x="61.62525737817423" y="1967.5" _orig_x="117.34"/>
</g>
<g class="hide">
<title>ib_log_flush (143 samples, 0.02%)</title><rect x="342.5" y="2069" width="0.3" height="15.0" fill="rgb(220,128,13)" rx="2" ry="2"/>
<text x="345.55" y="2079.5"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (273 samples, 0.04%)</title><rect x="342.05216197666437" y="1861" width="2.0247083047357584" height="15.0" fill="rgb(206,30,4)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.5"/>
<text x="345.05216197666437" y="1871.5" _orig_x="491.78"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,202 samples, 0.77%)</title><rect x="1157.984214138641" y="1733" width="9.930679478380233" height="15.0" fill="rgb(206,20,54)" rx="2" ry="2" _orig_x="1121.7" _orig_width="9.1"/>
<text x="1160.984214138641" y="1743.5" _orig_x="1124.70"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="485" width="1.091283459162663" height="15.0" fill="rgb(254,203,26)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="495.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>irq/32-MSFT0001 (69 samples, 0.01%)</title><rect x="361.3" y="2069" width="0.1" height="15.0" fill="rgb(213,164,23)" rx="2" ry="2"/>
<text x="364.28" y="2079.5"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (13,647 samples, 2.03%)</title><rect x="511.7227179135211" y="1877" width="96.78105696636925" height="15.0" fill="rgb(224,42,31)" rx="2" ry="2" _orig_x="530.7" _orig_width="23.9"/>
<text x="514.7227179135211" y="1887.5" _orig_x="533.66">IndexKey::D..</text>
</g>
<g>
<title>BPlusTree::InternalInsert (39,430 samples, 5.86%)</title><rect x="363.9190116678105" y="1909" width="279.8146877144818" height="15.0" fill="rgb(244,42,48)" rx="2" ry="2" _orig_x="494.2" _orig_width="69.1"/>
<text x="366.9190116678105" y="1919.5" _orig_x="497.25">BPlusTree::InternalInsert </text>
</g>
<g class="hide">
<title>Chrome_ChildIOT (561 samples, 0.08%)</title><rect x="13.9" y="2069" width="1.0" height="15.0" fill="rgb(207,8,47)" rx="2" ry="2"/>
<text x="16.92" y="2079.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::push_back (1,077 samples, 0.16%)</title><rect x="276.45161290322585" y="1861" width="7.693891557995882" height="15.0" fill="rgb(215,157,30)" rx="2" ry="2" _orig_x="472.6" _orig_width="1.9"/>
<text x="279.45161290322585" y="1871.5" _orig_x="475.61"/>
</g>
<g class="hide">
<title>JavaCalls::call_virtual (64 samples, 0.01%)</title><rect x="13.8" y="1957" width="0.1" height="15.0" fill="rgb(233,7,36)" rx="2" ry="2"/>
<text x="16.77" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (838 samples, 0.12%)</title><rect x="166.77144818119416" y="2037" width="1.6369251887439944" height="15.0" fill="rgb(206,34,21)" rx="2" ry="2" _orig_x="213.4" _orig_width="1.5"/>
<text x="169.77144818119416" y="2047.5" _orig_x="216.45"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (68 samples, 0.01%)</title><rect x="22.4" y="1925" width="0.2" height="15.0" fill="rgb(250,214,54)" rx="2" ry="2"/>
<text x="25.44" y="1935.5"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (184 samples, 0.03%)</title><rect x="841.3452299245025" y="1749" width="1.214824982841455" height="15.0" fill="rgb(254,169,40)" rx="2" ry="2" _orig_x="612.1" _orig_width="0.3"/>
<text x="844.3452299245025" y="1759.5" _orig_x="615.12"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (155 samples, 0.02%)</title><rect x="221.66300617707606" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(205,114,51)" rx="2" ry="2" _orig_x="263.7" _orig_width="0.3"/>
<text x="224.66300617707606" y="1903.5" _orig_x="266.68"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (116 samples, 0.02%)</title><rect x="647.3781743308168" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(232,184,16)" rx="2" ry="2" _orig_x="564.2" _orig_width="0.2"/>
<text x="650.3781743308168" y="1887.5" _orig_x="567.20"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,840 samples, 0.42%)</title><rect x="533.5895676046672" y="1797" width="19.842141386410432" height="15.0" fill="rgb(244,50,24)" rx="2" ry="2" _orig_x="536.1" _orig_width="4.9"/>
<text x="536.5895676046672" y="1807.5" _orig_x="539.05"/>
</g>
<g class="hide">
<title>[perf-105834.map] (281 samples, 0.04%)</title><rect x="12.2" y="2021" width="0.5" height="15.0" fill="rgb(242,104,39)" rx="2" ry="2"/>
<text x="15.19" y="2031.5"/>
</g>
<g>
<title>std::min&lt;unsigned long&gt; (63 samples, 0.01%)</title><rect x="203.9670555936856" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(243,92,52)" rx="2" ry="2" _orig_x="454.7" _orig_width="0.1"/>
<text x="206.9670555936856" y="1759.5" _orig_x="457.73"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_M_realloc_insert&lt;Field*&gt; (5,746 samples, 0.85%)</title><rect x="896.0123541523678" y="1845" width="40.49416609471517" height="15.0" fill="rgb(251,63,50)" rx="2" ry="2" _orig_x="625.6" _orig_width="10.0"/>
<text x="899.0123541523678" y="1855.5" _orig_x="628.57">std:..</text>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::construct&lt;void*, void* const&amp;&gt; (65 samples, 0.01%)</title><rect x="777.3644474948522" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(247,106,17)" rx="2" ry="2" _orig_x="596.3" _orig_width="0.1"/>
<text x="780.3644474948522" y="1759.5" _orig_x="599.26"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (422 samples, 0.06%)</title><rect x="193.39876458476311" y="2021" width="0.7638984214138641" height="15.0" fill="rgb(211,17,27)" rx="2" ry="2" _orig_x="237.8" _orig_width="0.7"/>
<text x="196.39876458476311" y="2031.5" _orig_x="240.75"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::~_Vector_base (173 samples, 0.03%)</title><rect x="144.44063143445433" y="1829" width="1.214824982841455" height="15.0" fill="rgb(220,87,25)" rx="2" ry="2" _orig_x="440.0" _orig_width="0.3"/>
<text x="147.44063143445433" y="1839.5" _orig_x="443.00"/>
</g>
<g class="hide">
<title>[unknown] (620 samples, 0.09%)</title><rect x="260.1853122855181" y="1669" width="1.091283459162663" height="15.0" fill="rgb(234,169,16)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1679.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (159 samples, 0.02%)</title><rect x="340.5037748798901" y="1909" width="0.3273850377487989" height="15.0" fill="rgb(236,46,32)" rx="2" ry="2" _orig_x="372.6" _orig_width="0.3"/>
<text x="343.5037748798901" y="1919.5" _orig_x="375.65"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (98 samples, 0.01%)</title><rect x="270.00686341798206" y="1845" width="0.1091283459162663" height="15.0" fill="rgb(238,156,53)" rx="2" ry="2" _orig_x="308.0" _orig_width="0.1"/>
<text x="273.00686341798206" y="1855.5" _orig_x="310.98"/>
</g>
<g>
<title>std::forward&lt;Field*&gt; (91 samples, 0.01%)</title><rect x="910.1853122855183" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(220,227,4)" rx="2" ry="2" _orig_x="629.1" _orig_width="0.1"/>
<text x="913.1853122855183" y="1823.5" _orig_x="632.08"/>
</g>
<g class="hide">
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string (92 samples, 0.01%)</title><rect x="105.00480439258743" y="1957" width="0.1091283459162663" height="15.0" fill="rgb(216,225,37)" rx="2" ry="2" _orig_x="156.8" _orig_width="0.1"/>
<text x="108.00480439258743" y="1967.5" _orig_x="159.78"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::insert (2,579 samples, 0.38%)</title><rect x="764.4063143445436" y="1829" width="18.222374742621827" height="15.0" fill="rgb(236,153,29)" rx="2" ry="2" _orig_x="593.1" _orig_width="4.5"/>
<text x="767.4063143445436" y="1839.5" _orig_x="596.10"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::construct&lt;Field*, Field*&gt; (125 samples, 0.02%)</title><rect x="445.3122855181878" y="1781" width="0.8098833218943035" height="15.0" fill="rgb(234,117,41)" rx="2" ry="2" _orig_x="514.3" _orig_width="0.2"/>
<text x="448.3122855181878" y="1791.5" _orig_x="517.33"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (73 samples, 0.01%)</title><rect x="357.03500343170896" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(250,29,49)" rx="2" ry="2" _orig_x="492.5" _orig_width="0.2"/>
<text x="360.03500343170896" y="1919.5" _orig_x="495.53"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (783 samples, 0.12%)</title><rect x="176.70212765957436" y="1909" width="1.5277968428277282" height="15.0" fill="rgb(219,212,50)" rx="2" ry="2" _orig_x="222.5" _orig_width="1.4"/>
<text x="179.70212765957436" y="1919.5" _orig_x="225.52"/>
</g>
<g>
<title>TypeFloat::DeserializeFrom (294 samples, 0.04%)</title><rect x="342.05216197666437" y="1877" width="2.0247083047357584" height="15.0" fill="rgb(229,195,51)" rx="2" ry="2" _orig_x="488.8" _orig_width="0.5"/>
<text x="345.05216197666437" y="1887.5" _orig_x="491.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (287 samples, 0.04%)</title><rect x="339.0851063829786" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(247,114,4)" rx="2" ry="2" _orig_x="371.3" _orig_width="0.5"/>
<text x="342.0851063829786" y="1967.5" _orig_x="374.34"/>
</g>
<g class="hide">
<title>[code] (139 samples, 0.02%)</title><rect x="69.86547700754966" y="1781" width="0.3273850377487989" height="15.0" fill="rgb(221,131,35)" rx="2" ry="2" _orig_x="124.6" _orig_width="0.3"/>
<text x="72.86547700754966" y="1791.5" _orig_x="127.62"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;Field*&gt;::construct&lt;Field*, Field*&gt; (71 samples, 0.01%)</title><rect x="574.0837336993823" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(206,85,2)" rx="2" ry="2" _orig_x="546.1" _orig_width="0.1"/>
<text x="577.0837336993823" y="1791.5" _orig_x="549.12"/>
</g>
<g>
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_check_len (108 samples, 0.02%)</title><rect x="1166.1084420041177" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(217,62,35)" rx="2" ry="2" _orig_x="692.3" _orig_width="0.2"/>
<text x="1169.1084420041177" y="1935.5" _orig_x="695.26"/>
</g>
<g class="hide">
<title>[libX11.so.6.3.0] (74 samples, 0.01%)</title><rect x="239.66918325326" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(214,82,49)" rx="2" ry="2" _orig_x="280.2" _orig_width="0.1"/>
<text x="242.66918325326" y="2047.5" _orig_x="283.17"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (109 samples, 0.02%)</title><rect x="328.71791352093334" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(224,23,1)" rx="2" ry="2" _orig_x="361.8" _orig_width="0.2"/>
<text x="331.71791352093334" y="2031.5" _orig_x="364.85"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::emplace_back&lt;Field*&gt; (788 samples, 0.12%)</title><rect x="31.46190803019909" y="1797" width="5.669183253260123" height="15.0" fill="rgb(217,213,3)" rx="2" ry="2" _orig_x="412.1" _orig_width="1.4"/>
<text x="34.46190803019909" y="1807.5" _orig_x="415.14"/>
</g>
<g>
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (68 samples, 0.01%)</title><rect x="39.15579958819488" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(210,180,51)" rx="2" ry="2" _orig_x="414.0" _orig_width="0.1"/>
<text x="42.15579958819488" y="1759.5" _orig_x="417.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (511 samples, 0.08%)</title><rect x="339.84900480439245" y="1989" width="0.9821551132463967" height="15.0" fill="rgb(243,213,9)" rx="2" ry="2" _orig_x="372.0" _orig_width="0.9"/>
<text x="342.84900480439245" y="1999.5" _orig_x="375.03"/>
</g>
<g class="hide">
<title>[unknown] (950 samples, 0.14%)</title><rect x="58.73438572409051" y="213" width="1.855181880576527" height="15.0" fill="rgb(249,29,9)" rx="2" ry="2" _orig_x="114.4" _orig_width="1.7"/>
<text x="61.73438572409051" y="223.5" _orig_x="117.42"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_node (233 samples, 0.03%)</title><rect x="299.1283459162662" y="1781" width="1.619766643788607" height="15.0" fill="rgb(219,181,47)" rx="2" ry="2" _orig_x="478.2" _orig_width="0.4"/>
<text x="302.1283459162662" y="1791.5" _orig_x="481.16"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (448 samples, 0.07%)</title><rect x="341.04941660947145" y="1989" width="0.8730267673301304" height="15.0" fill="rgb(242,135,47)" rx="2" ry="2" _orig_x="373.1" _orig_width="0.8"/>
<text x="344.04941660947145" y="1999.5" _orig_x="376.08"/>
</g>
<g class="hide">
<title>[code] (201 samples, 0.03%)</title><rect x="69.7563486616334" y="1845" width="0.4365133836650652" height="15.0" fill="rgb(216,25,16)" rx="2" ry="2" _orig_x="124.5" _orig_width="0.4"/>
<text x="72.7563486616334" y="1855.5" _orig_x="127.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (65 samples, 0.01%)</title><rect x="159.78723404255308" y="1861" width="0.1091283459162663" height="15.0" fill="rgb(238,71,54)" rx="2" ry="2" _orig_x="207.0" _orig_width="0.1"/>
<text x="162.78723404255308" y="1871.5" _orig_x="210.00"/>
</g>
<g class="hide">
<title>[unknown] (61 samples, 0.01%)</title><rect x="308.092656142759" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(210,78,54)" rx="2" ry="2" _orig_x="342.9" _orig_width="0.1"/>
<text x="311.092656142759" y="2031.5" _orig_x="345.94"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (287 samples, 0.04%)</title><rect x="1153.150308853809" y="1845" width="2.42964996568291" height="15.0" fill="rgb(207,99,11)" rx="2" ry="2" _orig_x="689.1" _orig_width="0.6"/>
<text x="1156.150308853809" y="1855.5" _orig_x="692.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (248 samples, 0.04%)</title><rect x="212.05971173644468" y="1733" width="0.4365133836650652" height="15.0" fill="rgb(232,190,30)" rx="2" ry="2" _orig_x="254.9" _orig_width="0.4"/>
<text x="215.05971173644468" y="1743.5" _orig_x="257.85"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (168 samples, 0.02%)</title><rect x="810.6286890871653" y="1893" width="0.3273850377487989" height="15.0" fill="rgb(246,72,47)" rx="2" ry="2" _orig_x="803.4" _orig_width="0.3"/>
<text x="813.6286890871653" y="1903.5" _orig_x="806.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (58 samples, 0.01%)</title><rect x="308.31091283459153" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(220,97,4)" rx="2" ry="2" _orig_x="343.1" _orig_width="0.1"/>
<text x="311.31091283459153" y="2031.5" _orig_x="346.09"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (381 samples, 0.06%)</title><rect x="420.6108442004117" y="1717" width="2.42964996568291" height="15.0" fill="rgb(214,166,23)" rx="2" ry="2" _orig_x="508.2" _orig_width="0.6"/>
<text x="423.6108442004117" y="1727.5" _orig_x="511.15"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (937 samples, 0.14%)</title><rect x="63.31777625257368" y="1957" width="1.855181880576527" height="15.0" fill="rgb(245,103,37)" rx="2" ry="2" _orig_x="118.6" _orig_width="1.7"/>
<text x="66.31777625257368" y="1967.5" _orig_x="121.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="66.15511324639661" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(214,111,31)" rx="2" ry="2" _orig_x="121.2" _orig_width="0.1"/>
<text x="69.15511324639661" y="1999.5" _orig_x="124.16"/>
</g>
<g>
<title>Column::GetType (76 samples, 0.01%)</title><rect x="749.4234728894987" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(219,132,46)" rx="2" ry="2" _orig_x="589.4" _orig_width="0.1"/>
<text x="752.4234728894987" y="1903.5" _orig_x="592.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (71 samples, 0.01%)</title><rect x="327.40837336993815" y="1989" width="0.1091283459162663" height="15.0" fill="rgb(224,109,41)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="330.40837336993815" y="1999.5" _orig_x="363.61"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1557" width="0.1091283459162663" height="15.0" fill="rgb(238,36,50)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1567.5" _orig_x="142.76"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux (97 samples, 0.01%)</title><rect x="518.6067261496223" y="1717" width="0.8098833218943035" height="15.0" fill="rgb(240,26,27)" rx="2" ry="2" _orig_x="532.4" _orig_width="0.2"/>
<text x="521.6067261496223" y="1727.5" _orig_x="535.45"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (344 samples, 0.05%)</title><rect x="120.54907343857245" y="1829" width="2.42964996568291" height="15.0" fill="rgb(206,145,15)" rx="2" ry="2" _orig_x="434.1" _orig_width="0.6"/>
<text x="123.54907343857245" y="1839.5" _orig_x="437.09"/>
</g>
<g>
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;TableHeap*, int&gt;*, std::vector&lt;std::pair&lt;TableHeap*, int&gt;, std::allocator&lt;std::pair&lt;TableHeap*, int&gt; &gt; &gt; &gt;, long, std::pair&lt;TableHeap*, int&gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;TableHeap::cmp&gt; &gt; (1,369 samples, 0.20%)</title><rect x="1146.2663006177074" y="1909" width="9.71859986273164" height="15.0" fill="rgb(228,115,38)" rx="2" ry="2" _orig_x="687.4" _orig_width="2.4"/>
<text x="1149.2663006177074" y="1919.5" _orig_x="690.40"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (181 samples, 0.03%)</title><rect x="1175.6" y="1573" width="0.3" height="15.0" fill="rgb(254,167,41)" rx="2" ry="2"/>
<text x="1178.62" y="1583.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (72 samples, 0.01%)</title><rect x="1182.7" y="1957" width="0.2" height="15.0" fill="rgb(222,227,5)" rx="2" ry="2"/>
<text x="1185.73" y="1967.5"/>
</g>
<g class="hide">
<title>[code] (193 samples, 0.03%)</title><rect x="86.01647220315708" y="1413" width="0.3273850377487989" height="15.0" fill="rgb(252,25,13)" rx="2" ry="2" _orig_x="139.4" _orig_width="0.3"/>
<text x="89.01647220315708" y="1423.5" _orig_x="142.35"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="517" width="1.091283459162663" height="15.0" fill="rgb(244,170,41)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="527.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (455 samples, 0.07%)</title><rect x="177.35689773507198" y="1861" width="0.8730267673301304" height="15.0" fill="rgb(228,79,13)" rx="2" ry="2" _orig_x="223.1" _orig_width="0.8"/>
<text x="180.35689773507198" y="1871.5" _orig_x="226.09"/>
</g>
<g>
<title>TypeInt::DeserializeFrom (6,875 samples, 1.02%)</title><rect x="808.1400137268358" y="1861" width="48.99794097460535" height="15.0" fill="rgb(210,142,43)" rx="2" ry="2" _orig_x="603.9" _orig_width="12.1"/>
<text x="811.1400137268358" y="1871.5" _orig_x="606.94">TypeI..</text>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1205" width="2.182566918325326" height="15.0" fill="rgb(226,93,9)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1215.5" _orig_x="117.41"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (202 samples, 0.03%)</title><rect x="296.6986959505834" y="1797" width="1.619766643788607" height="15.0" fill="rgb(234,116,50)" rx="2" ry="2" _orig_x="477.6" _orig_width="0.4"/>
<text x="299.6986959505834" y="1807.5" _orig_x="480.63"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (172 samples, 0.03%)</title><rect x="114.87989018531219" y="1797" width="1.214824982841455" height="15.0" fill="rgb(253,120,1)" rx="2" ry="2" _orig_x="432.7" _orig_width="0.3"/>
<text x="117.87989018531219" y="1807.5" _orig_x="435.72"/>
</g>
<g>
<title>std::__detail::_Hash_code_base&lt;void*, void*, std::__detail::_Identity, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (62 samples, 0.01%)</title><rect x="174.8112560054907" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(217,119,8)" rx="2" ry="2" _orig_x="447.5" _orig_width="0.1"/>
<text x="177.8112560054907" y="1743.5" _orig_x="450.49"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="1429" width="2.182566918325326" height="15.0" fill="rgb(206,75,26)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1439.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>g_mutex_lock (77 samples, 0.01%)</title><rect x="32.0" y="2021" width="0.1" height="15.0" fill="rgb(249,20,40)" rx="2" ry="2"/>
<text x="35.00" y="2031.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_node&lt;void* const&amp;&gt; (105 samples, 0.02%)</title><rect x="261.4687714481811" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(242,131,26)" rx="2" ry="2" _orig_x="468.9" _orig_width="0.2"/>
<text x="264.4687714481811" y="1759.5" _orig_x="471.94"/>
</g>
<g class="hide">
<title>__libc_recvmsg (67 samples, 0.01%)</title><rect x="14.5" y="1893" width="0.1" height="15.0" fill="rgb(238,81,51)" rx="2" ry="2"/>
<text x="17.48" y="1903.5"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (179 samples, 0.03%)</title><rect x="1153.9601921757032" y="1813" width="1.214824982841455" height="15.0" fill="rgb(214,204,35)" rx="2" ry="2" _orig_x="689.3" _orig_width="0.3"/>
<text x="1156.9601921757032" y="1823.5" _orig_x="692.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,708 samples, 0.25%)</title><rect x="794.5868222374742" y="1941" width="3.273850377487989" height="15.0" fill="rgb(233,84,54)" rx="2" ry="2" _orig_x="788.7" _orig_width="3.0"/>
<text x="797.5868222374742" y="1951.5" _orig_x="791.70"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,866 samples, 0.28%)</title><rect x="794.2594371997253" y="1973" width="3.6012354152367876" height="15.0" fill="rgb(234,65,11)" rx="2" ry="2" _orig_x="788.4" _orig_width="3.3"/>
<text x="797.2594371997253" y="1983.5" _orig_x="791.42"/>
</g>
<g>
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (1,106 samples, 0.16%)</title><rect x="959.1832532601236" y="1861" width="7.693891557995882" height="15.0" fill="rgb(232,193,46)" rx="2" ry="2" _orig_x="641.2" _orig_width="1.9"/>
<text x="962.1832532601236" y="1871.5" _orig_x="644.18"/>
</g>
<g>
<title>Page::WUnlatch (58 samples, 0.01%)</title><rect x="337.5978037062456" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(243,77,35)" rx="2" ry="2" _orig_x="487.7" _orig_width="0.1"/>
<text x="340.5978037062456" y="1935.5" _orig_x="490.68"/>
</g>
<g>
<title>std::_Destroy&lt;Field*&gt; (77 samples, 0.01%)</title><rect x="1167.3232669869594" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(225,130,23)" rx="2" ry="2" _orig_x="692.6" _orig_width="0.2"/>
<text x="1170.3232669869594" y="1935.5" _orig_x="695.64"/>
</g>
<g class="hide">
<title>[code] (134 samples, 0.02%)</title><rect x="86.12560054907334" y="1221" width="0.2182566918325326" height="15.0" fill="rgb(214,10,54)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1231.5" _orig_x="142.46"/>
</g>
<g>
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::find (139 samples, 0.02%)</title><rect x="1092.8140013726838" y="1941" width="0.8098833218943035" height="15.0" fill="rgb(217,164,43)" rx="2" ry="2" _orig_x="674.2" _orig_width="0.2"/>
<text x="1095.8140013726838" y="1951.5" _orig_x="677.16"/>
</g>
<g class="hide">
<title>[perf-123031.map] (88 samples, 0.01%)</title><rect x="86.45298558682215" y="1573" width="0.1091283459162663" height="15.0" fill="rgb(246,50,14)" rx="2" ry="2" _orig_x="139.8" _orig_width="0.1"/>
<text x="89.45298558682215" y="1583.5" _orig_x="142.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (325 samples, 0.05%)</title><rect x="335.0473575840768" y="2005" width="0.6547700754975978" height="15.0" fill="rgb(238,217,43)" rx="2" ry="2" _orig_x="367.6" _orig_width="0.6"/>
<text x="338.0473575840768" y="2015.5" _orig_x="370.60"/>
</g>
<g class="hide">
<title>[perf-105834.map] (478 samples, 0.07%)</title><rect x="18.3" y="2053" width="0.8" height="15.0" fill="rgb(223,184,28)" rx="2" ry="2"/>
<text x="21.28" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="212.1688400823609" y="1669" width="0.3273850377487989" height="15.0" fill="rgb(219,105,8)" rx="2" ry="2" _orig_x="255.0" _orig_width="0.3"/>
<text x="215.1688400823609" y="1679.5" _orig_x="258.00"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (128 samples, 0.02%)</title><rect x="167.535346602608" y="1877" width="0.2182566918325326" height="15.0" fill="rgb(224,20,20)" rx="2" ry="2" _orig_x="214.1" _orig_width="0.2"/>
<text x="170.535346602608" y="1887.5" _orig_x="217.08"/>
</g>
<g class="hide">
<title>[unknown] (849 samples, 0.13%)</title><rect x="56.2" y="2053" width="1.5" height="15.0" fill="rgb(215,84,41)" rx="2" ry="2"/>
<text x="59.23" y="2063.5"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (73 samples, 0.01%)</title><rect x="946.2251201098146" y="1861" width="0.4049416609471517" height="15.0" fill="rgb(243,175,33)" rx="2" ry="2" _orig_x="638.0" _orig_width="0.1"/>
<text x="949.2251201098146" y="1871.5" _orig_x="640.99"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (530 samples, 0.08%)</title><rect x="220.2443376801646" y="2005" width="0.9821551132463967" height="15.0" fill="rgb(245,189,43)" rx="2" ry="2" _orig_x="262.4" _orig_width="0.9"/>
<text x="223.2443376801646" y="2015.5" _orig_x="265.36"/>
</g>
<g class="hide">
<title>[code] (93 samples, 0.01%)</title><rect x="86.12560054907334" y="1141" width="0.2182566918325326" height="15.0" fill="rgb(219,120,50)" rx="2" ry="2" _orig_x="139.5" _orig_width="0.2"/>
<text x="89.12560054907334" y="1151.5" _orig_x="142.52"/>
</g>
<g>
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Field*&gt; (58 samples, 0.01%)</title><rect x="1167.728208647907" y="1909" width="0.4049416609471517" height="15.0" fill="rgb(230,141,31)" rx="2" ry="2" _orig_x="692.7" _orig_width="0.1"/>
<text x="1170.728208647907" y="1919.5" _orig_x="695.67"/>
</g>
<g class="hide">
<title>ntfs_get_collate_function (72 samples, 0.01%)</title><rect x="788.6938915579957" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(209,66,44)" rx="2" ry="2" _orig_x="783.3" _orig_width="0.2"/>
<text x="791.6938915579957" y="2047.5" _orig_x="786.34"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (86 samples, 0.01%)</title><rect x="56.8" y="2005" width="0.2" height="15.0" fill="rgb(250,150,14)" rx="2" ry="2"/>
<text x="59.85" y="2015.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (90 samples, 0.01%)</title><rect x="58.1" y="1829" width="0.1" height="15.0" fill="rgb(249,54,24)" rx="2" ry="2"/>
<text x="61.07" y="1839.5"/>
</g>
<g class="hide">
<title>Update_Runs_Swi (1,185 samples, 0.18%)</title><rect x="70.5" y="2069" width="2.1" height="15.0" fill="rgb(246,56,33)" rx="2" ry="2"/>
<text x="73.54" y="2079.5"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (282 samples, 0.04%)</title><rect x="327.87920384351406" y="1893" width="2.0247083047357584" height="15.0" fill="rgb(244,16,1)" rx="2" ry="2" _orig_x="485.3" _orig_width="0.5"/>
<text x="330.87920384351406" y="1903.5" _orig_x="488.34"/>
</g>
<g class="hide">
<title>[libnvidia-glcore.so.470.129.06] (343 samples, 0.05%)</title><rect x="196.5634866163348" y="2021" width="0.6547700754975978" height="15.0" fill="rgb(232,103,16)" rx="2" ry="2" _orig_x="240.7" _orig_width="0.6"/>
<text x="199.5634866163348" y="2031.5" _orig_x="243.71"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void* const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt; &gt; (882 samples, 0.13%)</title><rect x="78.03019903912153" y="1749" width="6.0741249142072755" height="15.0" fill="rgb(254,57,45)" rx="2" ry="2" _orig_x="423.6" _orig_width="1.5"/>
<text x="81.03019903912153" y="1759.5" _orig_x="426.58"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (591 samples, 0.09%)</title><rect x="337.55730954015087" y="2005" width="1.2004118050789294" height="15.0" fill="rgb(213,194,41)" rx="2" ry="2" _orig_x="369.9" _orig_width="1.1"/>
<text x="340.55730954015087" y="2015.5" _orig_x="372.92"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (507 samples, 0.08%)</title><rect x="796.8785175017157" y="1861" width="0.9821551132463967" height="15.0" fill="rgb(252,222,8)" rx="2" ry="2" _orig_x="790.8" _orig_width="0.9"/>
<text x="799.8785175017157" y="1871.5" _orig_x="793.80"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::back (63 samples, 0.01%)</title><rect x="680.9883321894304" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(231,64,4)" rx="2" ry="2" _orig_x="572.5" _orig_width="0.1"/>
<text x="683.9883321894304" y="1839.5" _orig_x="575.47"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (256 samples, 0.04%)</title><rect x="459.8901853122853" y="1797" width="1.619766643788607" height="15.0" fill="rgb(226,37,0)" rx="2" ry="2" _orig_x="517.9" _orig_width="0.4"/>
<text x="462.8901853122853" y="1807.5" _orig_x="520.88"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (143 samples, 0.02%)</title><rect x="686.6575154426904" y="1845" width="1.214824982841455" height="15.0" fill="rgb(221,62,40)" rx="2" ry="2" _orig_x="573.9" _orig_width="0.3"/>
<text x="689.6575154426904" y="1855.5" _orig_x="576.91"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (390 samples, 0.06%)</title><rect x="334.2834591626629" y="1973" width="0.7638984214138641" height="15.0" fill="rgb(224,17,14)" rx="2" ry="2" _orig_x="366.9" _orig_width="0.7"/>
<text x="337.2834591626629" y="1983.5" _orig_x="369.87"/>
</g>
<g>
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt;::deallocate (85 samples, 0.01%)</title><rect x="1051.9148936170213" y="1749" width="0.4049416609471517" height="15.0" fill="rgb(246,97,46)" rx="2" ry="2" _orig_x="664.1" _orig_width="0.1"/>
<text x="1054.9148936170213" y="1759.5" _orig_x="667.07"/>
</g>
<g>
<title>std::unordered_set&lt;void*, std::hash&lt;void*&gt;, std::equal_to&lt;void*&gt;, std::allocator&lt;void*&gt; &gt;::unordered_set (188 samples, 0.03%)</title><rect x="127.433081674674" y="1829" width="1.214824982841455" height="15.0" fill="rgb(244,82,8)" rx="2" ry="2" _orig_x="435.8" _orig_width="0.3"/>
<text x="130.43308167467399" y="1839.5" _orig_x="438.75"/>
</g>
<g class="hide">
<title>__ceilf_sse41 (87 samples, 0.01%)</title><rect x="105.44131777625246" y="1973" width="0.2182566918325326" height="15.0" fill="rgb(218,151,0)" rx="2" ry="2" _orig_x="157.2" _orig_width="0.2"/>
<text x="108.44131777625246" y="1983.5" _orig_x="160.24"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::~_Hashtable_alloc (62 samples, 0.01%)</title><rect x="700.0205902539466" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(221,105,47)" rx="2" ry="2" _orig_x="577.2" _orig_width="0.1"/>
<text x="703.0205902539466" y="1823.5" _orig_x="580.22"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (108 samples, 0.02%)</title><rect x="646.1633493479751" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(248,59,26)" rx="2" ry="2" _orig_x="563.9" _orig_width="0.2"/>
<text x="649.1633493479751" y="1855.5" _orig_x="566.91"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="981" width="2.182566918325326" height="15.0" fill="rgb(251,139,4)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="991.5" _orig_x="117.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,237 samples, 0.33%)</title><rect x="724.6355525051475" y="1781" width="4.256005490734386" height="15.0" fill="rgb(229,136,15)" rx="2" ry="2" _orig_x="724.6" _orig_width="3.9"/>
<text x="727.6355525051475" y="1791.5" _orig_x="727.56"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (225 samples, 0.03%)</title><rect x="331.5552505147562" y="1925" width="0.4365133836650652" height="15.0" fill="rgb(228,60,27)" rx="2" ry="2" _orig_x="364.4" _orig_width="0.4"/>
<text x="334.5552505147562" y="1935.5" _orig_x="367.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (135 samples, 0.02%)</title><rect x="327.08098833218935" y="2021" width="0.2182566918325326" height="15.0" fill="rgb(245,180,25)" rx="2" ry="2" _orig_x="360.3" _orig_width="0.2"/>
<text x="330.08098833218935" y="2031.5" _orig_x="363.27"/>
</g>
<g>
<title>IndexKey::SerializeFromKey (352 samples, 0.05%)</title><rect x="1089.1695264241591" y="1941" width="2.42964996568291" height="15.0" fill="rgb(235,69,13)" rx="2" ry="2" _orig_x="673.3" _orig_width="0.6"/>
<text x="1092.1695264241591" y="1951.5" _orig_x="676.28"/>
</g>
<g class="hide">
<title>boost::this_thread::sleep_for&lt;long, boost::ratio&lt;1l, 1000000000l&gt; &gt; (60 samples, 0.01%)</title><rect x="1183.1" y="2037" width="0.1" height="15.0" fill="rgb(229,52,49)" rx="2" ry="2"/>
<text x="1186.10" y="2047.5"/>
</g>
<g>
<title>[[kernel.kallsyms]] (81 samples, 0.01%)</title><rect x="356.22512010981467" y="1781" width="0.4049416609471517" height="15.0" fill="rgb(235,205,22)" rx="2" ry="2" _orig_x="492.3" _orig_width="0.1"/>
<text x="359.22512010981467" y="1791.5" _orig_x="495.26"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (67 samples, 0.01%)</title><rect x="307.98352779684274" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(218,206,29)" rx="2" ry="2" _orig_x="342.8" _orig_width="0.1"/>
<text x="310.98352779684274" y="2031.5" _orig_x="345.82"/>
</g>
<g class="hide">
<title>[unknown] (1,151 samples, 0.17%)</title><rect x="58.73438572409051" y="1717" width="2.182566918325326" height="15.0" fill="rgb(251,54,32)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="1727.5" _orig_x="117.41"/>
</g>
<g>
<title>std::__relocate_a_1&lt;Field*, Field*&gt; (78 samples, 0.01%)</title><rect x="583.3973919011667" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(254,127,46)" rx="2" ry="2" _orig_x="548.4" _orig_width="0.2"/>
<text x="586.3973919011667" y="1759.5" _orig_x="551.44"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (82 samples, 0.01%)</title><rect x="13.3" y="2037" width="0.2" height="15.0" fill="rgb(252,202,1)" rx="2" ry="2"/>
<text x="16.34" y="2047.5"/>
</g>
<g class="hide">
<title>[unknown] (612 samples, 0.09%)</title><rect x="260.1853122855181" y="549" width="1.091283459162663" height="15.0" fill="rgb(235,130,20)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="559.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[code] (392 samples, 0.06%)</title><rect x="14.0" y="1941" width="0.7" height="15.0" fill="rgb(247,220,21)" rx="2" ry="2"/>
<text x="17.05" y="1951.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (611 samples, 0.09%)</title><rect x="18.163522012578575" y="1861" width="4.081761006289309" height="15.0" fill="rgb(252,213,25)" rx="2" ry="2" _orig_x="392.9" _orig_width="1.1"/>
<text x="21.163522012578575" y="1871.5" _orig_x="395.91"/>
</g>
<g class="hide">
<title>[code] (444 samples, 0.07%)</title><rect x="16.4" y="1909" width="0.8" height="15.0" fill="rgb(235,122,30)" rx="2" ry="2"/>
<text x="19.41" y="1919.5"/>
</g>
<g class="hide">
<title>[NetworkManager] (1,017 samples, 0.15%)</title><rect x="27.8" y="2037" width="1.7" height="15.0" fill="rgb(221,1,46)" rx="2" ry="2"/>
<text x="30.76" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (23,196 samples, 3.44%)</title><rect x="1172.825669183253" y="1893" width="44.415236787920385" height="15.0" fill="rgb(242,111,26)" rx="2" ry="2" _orig_x="1135.3" _orig_width="40.7"/>
<text x="1175.825669183253" y="1903.5" _orig_x="1138.33">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (29,337 samples, 4.36%)</title><rect x="1112.477693891558" y="1877" width="56.091969800960875" height="15.0" fill="rgb(241,53,16)" rx="2" ry="2" _orig_x="1080.0" _orig_width="51.4"/>
<text x="1115.477693891558" y="1887.5" _orig_x="1082.97">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (195 samples, 0.03%)</title><rect x="96.6019217570349" y="1845" width="0.3273850377487989" height="15.0" fill="rgb(238,78,36)" rx="2" ry="2" _orig_x="149.1" _orig_width="0.3"/>
<text x="99.6019217570349" y="1855.5" _orig_x="152.06"/>
</g>
<g class="hide">
<title>[github-desktop] (78 samples, 0.01%)</title><rect x="16.2" y="1989" width="0.1" height="15.0" fill="rgb(236,70,47)" rx="2" ry="2"/>
<text x="19.15" y="1999.5"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_max_size (68 samples, 0.01%)</title><rect x="915.0446122168837" y="1813" width="0.4049416609471517" height="15.0" fill="rgb(231,17,24)" rx="2" ry="2" _orig_x="630.3" _orig_width="0.1"/>
<text x="918.0446122168837" y="1823.5" _orig_x="633.33"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (230 samples, 0.03%)</title><rect x="272.95332875772124" y="1893" width="0.4365133836650652" height="15.0" fill="rgb(208,96,16)" rx="2" ry="2" _orig_x="310.7" _orig_width="0.4"/>
<text x="275.95332875772124" y="1903.5" _orig_x="313.68"/>
</g>
<g class="hide">
<title>[code] (74 samples, 0.01%)</title><rect x="17.3" y="2037" width="0.1" height="15.0" fill="rgb(211,145,4)" rx="2" ry="2"/>
<text x="20.29" y="2047.5"/>
</g>
<g class="hide">
<title>[code] (363 samples, 0.05%)</title><rect x="85.68908716540827" y="1605" width="0.6547700754975978" height="15.0" fill="rgb(208,17,44)" rx="2" ry="2" _orig_x="139.1" _orig_width="0.6"/>
<text x="88.68908716540827" y="1615.5" _orig_x="142.09"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (172 samples, 0.03%)</title><rect x="68.6289308176101" y="1621" width="1.1132075471698113" height="15.0" fill="rgb(242,172,53)" rx="2" ry="2" _orig_x="406.5" _orig_width="0.3"/>
<text x="71.6289308176101" y="1631.5" _orig_x="409.52"/>
</g>
<g>
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, TableInfo*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, TableInfo*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (65 samples, 0.01%)</title><rect x="1094.028826355525" y="1893" width="0.4049416609471517" height="15.0" fill="rgb(213,188,32)" rx="2" ry="2" _orig_x="674.5" _orig_width="0.1"/>
<text x="1097.028826355525" y="1903.5" _orig_x="677.46"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="736.6396705559367" y="1941" width="0.1091283459162663" height="15.0" fill="rgb(251,124,34)" rx="2" ry="2" _orig_x="735.6" _orig_width="0.1"/>
<text x="739.6396705559367" y="1951.5" _orig_x="738.62"/>
</g>
<g class="hide">
<title>[code] (234 samples, 0.03%)</title><rect x="85.90734385724082" y="1493" width="0.4365133836650652" height="15.0" fill="rgb(231,38,25)" rx="2" ry="2" _orig_x="139.3" _orig_width="0.4"/>
<text x="88.90734385724082" y="1503.5" _orig_x="142.29"/>
</g>
<g>
<title>IndexKey::DeserializeToKey (87 samples, 0.01%)</title><rect x="740.1098146877144" y="1925" width="0.8098833218943035" height="15.0" fill="rgb(236,191,20)" rx="2" ry="2" _orig_x="587.1" _orig_width="0.2"/>
<text x="743.1098146877144" y="1935.5" _orig_x="590.10"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (148 samples, 0.02%)</title><rect x="167.42621825669173" y="1973" width="0.3273850377487989" height="15.0" fill="rgb(230,61,6)" rx="2" ry="2" _orig_x="214.0" _orig_width="0.3"/>
<text x="170.42621825669173" y="1983.5" _orig_x="217.04"/>
</g>
<g>
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (188 samples, 0.03%)</title><rect x="732.8208647906655" y="1845" width="1.214824982841455" height="15.0" fill="rgb(217,168,46)" rx="2" ry="2" _orig_x="585.3" _orig_width="0.3"/>
<text x="735.8208647906655" y="1855.5" _orig_x="588.28"/>
</g>
<g>
<title>Row::Row (62 samples, 0.01%)</title><rect x="1085.1201098146876" y="1925" width="0.4049416609471517" height="15.0" fill="rgb(219,169,27)" rx="2" ry="2" _orig_x="672.3" _orig_width="0.1"/>
<text x="1088.1201098146876" y="1935.5" _orig_x="675.29"/>
</g>
<g class="hide">
<title>ntfs_index_ctx_get (93 samples, 0.01%)</title><rect x="788.9121482498283" y="2037" width="0.2182566918325326" height="15.0" fill="rgb(228,26,27)" rx="2" ry="2" _orig_x="783.5" _orig_width="0.2"/>
<text x="791.9121482498283" y="2047.5" _orig_x="786.52"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (164 samples, 0.02%)</title><rect x="57.2" y="1973" width="0.3" height="15.0" fill="rgb(213,109,34)" rx="2" ry="2"/>
<text x="60.20" y="1983.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (90 samples, 0.01%)</title><rect x="506.05353466026054" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(248,39,35)" rx="2" ry="2" _orig_x="529.3" _orig_width="0.1"/>
<text x="509.05353466026054" y="1839.5" _orig_x="532.28"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (158 samples, 0.02%)</title><rect x="121.76389842141373" y="1797" width="0.8098833218943035" height="15.0" fill="rgb(251,217,6)" rx="2" ry="2" _orig_x="434.4" _orig_width="0.2"/>
<text x="124.76389842141373" y="1807.5" _orig_x="437.35"/>
</g>
<g>
<title>Row::Row (1,848 samples, 0.27%)</title><rect x="1105.3671928620452" y="1957" width="12.958133150308855" height="15.0" fill="rgb(241,141,29)" rx="2" ry="2" _orig_x="677.3" _orig_width="3.2"/>
<text x="1108.3671928620452" y="1967.5" _orig_x="680.26"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (87 samples, 0.01%)</title><rect x="991.1736444749486" y="1893" width="0.8098833218943035" height="15.0" fill="rgb(236,98,46)" rx="2" ry="2" _orig_x="649.1" _orig_width="0.2"/>
<text x="994.1736444749486" y="1903.5" _orig_x="652.11"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,042 samples, 0.15%)</title><rect x="806.0452985586821" y="1813" width="2.0734385724090596" height="15.0" fill="rgb(222,188,10)" rx="2" ry="2" _orig_x="799.2" _orig_width="1.9"/>
<text x="809.0452985586821" y="1823.5" _orig_x="802.25"/>
</g>
<g class="hide">
<title>[github-desktop] (67 samples, 0.01%)</title><rect x="16.2" y="1909" width="0.1" height="15.0" fill="rgb(235,83,40)" rx="2" ry="2"/>
<text x="19.17" y="1919.5"/>
</g>
<g class="hide">
<title>[code] (97 samples, 0.01%)</title><rect x="14.42827728208638" y="1877" width="0.1091283459162663" height="15.0" fill="rgb(230,66,4)" rx="2" ry="2" _orig_x="73.8" _orig_width="0.1"/>
<text x="17.42827728208638" y="1887.5" _orig_x="76.76"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (2,086 samples, 0.31%)</title><rect x="261.6039807824295" y="1941" width="4.037748798901854" height="15.0" fill="rgb(234,109,19)" rx="2" ry="2" _orig_x="300.3" _orig_width="3.7"/>
<text x="264.6039807824295" y="1951.5" _orig_x="303.31"/>
</g>
<g>
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (119 samples, 0.02%)</title><rect x="646.1633493479751" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(246,21,11)" rx="2" ry="2" _orig_x="563.9" _orig_width="0.2"/>
<text x="649.1633493479751" y="1871.5" _orig_x="566.90"/>
</g>
<g>
<title>std::vector&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_S_relocate (83 samples, 0.01%)</title><rect x="936.5065202470831" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(251,47,37)" rx="2" ry="2" _orig_x="635.6" _orig_width="0.2"/>
<text x="939.5065202470831" y="1855.5" _orig_x="638.64"/>
</g>
<g>
<title>[[kernel.kallsyms]] (494 samples, 0.07%)</title><rect x="721.8874399450926" y="1733" width="3.644474948524365" height="15.0" fill="rgb(228,2,17)" rx="2" ry="2" _orig_x="582.6" _orig_width="0.9"/>
<text x="724.8874399450926" y="1743.5" _orig_x="585.62"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (170 samples, 0.03%)</title><rect x="84.48867536032935" y="1925" width="0.3273850377487989" height="15.0" fill="rgb(238,124,10)" rx="2" ry="2" _orig_x="138.0" _orig_width="0.3"/>
<text x="87.48867536032935" y="1935.5" _orig_x="141.00"/>
</g>
<g class="hide">
<title>__GI___getdents64 (108 samples, 0.02%)</title><rect x="803.1" y="2053" width="0.2" height="15.0" fill="rgb(211,169,54)" rx="2" ry="2"/>
<text x="806.06" y="2063.5"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (328 samples, 0.05%)</title><rect x="1140.5971173644473" y="1829" width="2.42964996568291" height="15.0" fill="rgb(205,167,43)" rx="2" ry="2" _orig_x="686.0" _orig_width="0.6"/>
<text x="1143.5971173644473" y="1839.5" _orig_x="689.04"/>
</g>
<g class="hide">
<title>[perf-123031.map] (81 samples, 0.01%)</title><rect x="86.8894989704872" y="1461" width="0.2182566918325326" height="15.0" fill="rgb(241,127,35)" rx="2" ry="2" _orig_x="140.2" _orig_width="0.2"/>
<text x="89.8894989704872" y="1471.5" _orig_x="143.23"/>
</g>
<g class="hide">
<title>__libc_recvmsg (155 samples, 0.02%)</title><rect x="167.42621825669173" y="1989" width="0.3273850377487989" height="15.0" fill="rgb(222,102,50)" rx="2" ry="2" _orig_x="214.0" _orig_width="0.3"/>
<text x="170.42621825669173" y="1999.5" _orig_x="217.03"/>
</g>
<g>
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (85 samples, 0.01%)</title><rect x="306.82223747426224" y="1909" width="0.8098833218943035" height="15.0" fill="rgb(253,142,8)" rx="2" ry="2" _orig_x="480.1" _orig_width="0.2"/>
<text x="309.82223747426224" y="1919.5" _orig_x="483.10"/>
</g>
<g class="hide">
<title>[unknown] (7,963 samples, 1.18%)</title><rect x="252.43719972546313" y="2021" width="15.277968428277282" height="15.0" fill="rgb(214,73,35)" rx="2" ry="2" _orig_x="291.9" _orig_width="14.0"/>
<text x="255.43719972546313" y="2031.5" _orig_x="294.94"/>
</g>
<g>
<title>[[kernel.kallsyms]] (689 samples, 0.10%)</title><rect x="720.6726149622509" y="1781" width="4.85929993136582" height="15.0" fill="rgb(211,83,46)" rx="2" ry="2" _orig_x="582.3" _orig_width="1.2"/>
<text x="723.6726149622509" y="1791.5" _orig_x="585.28"/>
</g>
<g class="hide">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (75 samples, 0.01%)</title><rect x="307.98352779684274" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(246,136,17)" rx="2" ry="2" _orig_x="342.8" _orig_width="0.1"/>
<text x="310.98352779684274" y="2047.5" _orig_x="345.81"/>
</g>
<g>
<title>std::allocator_traits&lt;std::allocator&lt;Field*&gt; &gt;::allocate (129 samples, 0.02%)</title><rect x="444.09746053534656" y="1765" width="0.8098833218943035" height="15.0" fill="rgb(237,224,45)" rx="2" ry="2" _orig_x="514.0" _orig_width="0.2"/>
<text x="447.09746053534656" y="1775.5" _orig_x="516.98"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (68 samples, 0.01%)</title><rect x="328.172271791352" y="2021" width="0.1091283459162663" height="15.0" fill="rgb(239,100,35)" rx="2" ry="2" _orig_x="361.3" _orig_width="0.1"/>
<text x="331.172271791352" y="2031.5" _orig_x="364.28"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (235 samples, 0.03%)</title><rect x="68.25786163522008" y="1637" width="1.4842767295597485" height="15.0" fill="rgb(210,9,2)" rx="2" ry="2" _orig_x="406.4" _orig_width="0.4"/>
<text x="71.25786163522008" y="1647.5" _orig_x="409.41"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (179,424 samples, 26.64%)</title><rect x="825.4701441317775" y="1989" width="343.0995195607412" height="15.0" fill="rgb(246,30,24)" rx="2" ry="2" _orig_x="817.0" _orig_width="314.4"/>
<text x="828.4701441317775" y="1999.5" _orig_x="819.98">[[kernel.kallsyms]] </text>
</g>
<g class="hide">
<title>[unknown] (68 samples, 0.01%)</title><rect x="57.315717227179036" y="2005" width="0.1091283459162663" height="15.0" fill="rgb(248,179,0)" rx="2" ry="2" _orig_x="113.1" _orig_width="0.1"/>
<text x="60.315717227179036" y="2015.5" _orig_x="116.10"/>
</g>
<g>
<title>std::_Hashtable&lt;void*, void*, std::allocator&lt;void*&gt;, std::__detail::_Identity, std::equal_to&lt;void*&gt;, std::hash&lt;void*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_deallocate_buckets (597 samples, 0.09%)</title><rect x="622.2717913520933" y="1781" width="4.049416609471517" height="15.0" fill="rgb(219,110,12)" rx="2" ry="2" _orig_x="558.0" _orig_width="1.0"/>
<text x="625.2717913520933" y="1791.5" _orig_x="560.96"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (66 samples, 0.01%)</title><rect x="22.4" y="1909" width="0.2" height="15.0" fill="rgb(237,70,31)" rx="2" ry="2"/>
<text x="25.45" y="1919.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (3,568 samples, 0.53%)</title><rect x="384.4" y="2053" width="6.3" height="15.0" fill="rgb(217,152,31)" rx="2" ry="2"/>
<text x="387.42" y="2063.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (424 samples, 0.06%)</title><rect x="333.08304735758395" y="2037" width="0.8730267673301304" height="15.0" fill="rgb(252,49,45)" rx="2" ry="2" _orig_x="365.8" _orig_width="0.8"/>
<text x="336.08304735758395" y="2047.5" _orig_x="368.82"/>
</g>
<g>
<title>[libminisql_shared.so] (129 samples, 0.02%)</title><rect x="603.6444749485242" y="1861" width="0.8098833218943035" height="15.0" fill="rgb(254,36,51)" rx="2" ry="2" _orig_x="553.4" _orig_width="0.2"/>
<text x="606.6444749485242" y="1871.5" _orig_x="556.42"/>
</g>
<g>
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::begin (88 samples, 0.01%)</title><rect x="189.38915579958822" y="1845" width="0.8098833218943035" height="15.0" fill="rgb(232,117,12)" rx="2" ry="2" _orig_x="451.1" _orig_width="0.2"/>
<text x="192.38915579958822" y="1855.5" _orig_x="454.11"/>
</g>
<g class="hide">
<title>JavaCalls::call_helper (127 samples, 0.02%)</title><rect x="20.6" y="1957" width="0.2" height="15.0" fill="rgb(222,5,42)" rx="2" ry="2"/>
<text x="23.59" y="1967.5"/>
</g>
<g class="hide">
<title>[unknown] (81 samples, 0.01%)</title><rect x="736.6396705559367" y="1989" width="0.2182566918325326" height="15.0" fill="rgb(215,220,9)" rx="2" ry="2" _orig_x="735.6" _orig_width="0.2"/>
<text x="739.6396705559367" y="1999.5" _orig_x="738.62"/>
</g>
<g class="hide">
<title>operator new[] (76 samples, 0.01%)</title><rect x="102.38572409059702" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(245,74,35)" rx="2" ry="2" _orig_x="154.4" _orig_width="0.2"/>
<text x="105.38572409059702" y="1967.5" _orig_x="157.42"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (393 samples, 0.06%)</title><rect x="288.1221688400823" y="1813" width="0.7638984214138641" height="15.0" fill="rgb(228,165,17)" rx="2" ry="2" _orig_x="324.6" _orig_width="0.7"/>
<text x="291.1221688400823" y="1823.5" _orig_x="327.59"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (701 samples, 0.10%)</title><rect x="63.75428963623875" y="1861" width="1.418668496911462" height="15.0" fill="rgb(242,204,54)" rx="2" ry="2" _orig_x="119.0" _orig_width="1.3"/>
<text x="66.75428963623875" y="1871.5" _orig_x="122.03"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (1,821 samples, 0.27%)</title><rect x="127.59437199725454" y="1701" width="3.4921070693205216" height="15.0" fill="rgb(247,78,48)" rx="2" ry="2" _orig_x="177.5" _orig_width="3.2"/>
<text x="130.59437199725454" y="1711.5" _orig_x="180.55"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (85 samples, 0.01%)</title><rect x="1188.7" y="2037" width="0.2" height="15.0" fill="rgb(250,146,26)" rx="2" ry="2"/>
<text x="1191.73" y="2047.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (620 samples, 0.09%)</title><rect x="371.8" y="2053" width="1.1" height="15.0" fill="rgb(231,110,3)" rx="2" ry="2"/>
<text x="374.85" y="2063.5"/>
</g>
<g class="hide">
<title>[unknown] (60 samples, 0.01%)</title><rect x="31.0" y="1781" width="0.1" height="15.0" fill="rgb(226,88,35)" rx="2" ry="2"/>
<text x="33.98" y="1791.5"/>
</g>
<g>
<title>std::__detail::_Mod_range_hashing::operator (112 samples, 0.02%)</title><rect x="816.2388469457788" y="1749" width="0.8098833218943035" height="15.0" fill="rgb(219,14,41)" rx="2" ry="2" _orig_x="605.9" _orig_width="0.2"/>
<text x="819.2388469457788" y="1759.5" _orig_x="608.88"/>
</g>
<g class="hide">
<title>[unknown] (621 samples, 0.09%)</title><rect x="260.1853122855181" y="1749" width="1.091283459162663" height="15.0" fill="rgb(241,75,2)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1759.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (132 samples, 0.02%)</title><rect x="174.4104323953328" y="1893" width="0.2182566918325326" height="15.0" fill="rgb(238,166,6)" rx="2" ry="2" _orig_x="220.4" _orig_width="0.2"/>
<text x="177.4104323953328" y="1903.5" _orig_x="223.39"/>
</g>
<g class="hide">
<title>read (201 samples, 0.03%)</title><rect x="803.3" y="2053" width="0.4" height="15.0" fill="rgb(245,131,47)" rx="2" ry="2"/>
<text x="806.31" y="2063.5"/>
</g>
<g class="hide">
<title>[code] (330 samples, 0.05%)</title><rect x="85.68908716540827" y="1573" width="0.6547700754975978" height="15.0" fill="rgb(205,47,36)" rx="2" ry="2" _orig_x="139.1" _orig_width="0.6"/>
<text x="88.68908716540827" y="1583.5" _orig_x="142.14"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (64 samples, 0.01%)</title><rect x="60.589567604667025" y="101" width="0.2182566918325326" height="15.0" fill="rgb(245,218,33)" rx="2" ry="2" _orig_x="116.1" _orig_width="0.2"/>
<text x="63.589567604667025" y="111.5" _orig_x="119.14"/>
</g>
<g>
<title>__gnu_cxx::__normal_iterator&lt;Column* const*, std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt; &gt;::base (73 samples, 0.01%)</title><rect x="557.481125600549" y="1829" width="0.4049416609471517" height="15.0" fill="rgb(236,53,36)" rx="2" ry="2" _orig_x="542.0" _orig_width="0.1"/>
<text x="560.481125600549" y="1839.5" _orig_x="545.01"/>
</g>
<g>
<title>SimpleMemHeap::Allocate (413 samples, 0.06%)</title><rect x="652.2374742621824" y="1829" width="2.8345916266300617" height="15.0" fill="rgb(232,177,45)" rx="2" ry="2" _orig_x="565.4" _orig_width="0.7"/>
<text x="655.2374742621824" y="1839.5" _orig_x="568.40"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_node_allocator (78 samples, 0.01%)</title><rect x="1049.8901853122857" y="1765" width="0.4049416609471517" height="15.0" fill="rgb(248,205,53)" rx="2" ry="2" _orig_x="663.6" _orig_width="0.1"/>
<text x="1052.8901853122857" y="1775.5" _orig_x="666.57"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (296 samples, 0.04%)</title><rect x="142.43582704186676" y="1829" width="0.6547700754975978" height="15.0" fill="rgb(239,225,2)" rx="2" ry="2" _orig_x="191.1" _orig_width="0.6"/>
<text x="145.43582704186676" y="1839.5" _orig_x="194.14"/>
</g>
<g class="hide">
<title>[NetworkManager] (487 samples, 0.07%)</title><rect x="28.0" y="2021" width="0.9" height="15.0" fill="rgb(238,60,12)" rx="2" ry="2"/>
<text x="31.03" y="2031.5"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (226 samples, 0.03%)</title><rect x="194.81743308167458" y="1941" width="0.4365133836650652" height="15.0" fill="rgb(251,103,30)" rx="2" ry="2" _orig_x="239.1" _orig_width="0.4"/>
<text x="197.81743308167458" y="1951.5" _orig_x="242.08"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (223 samples, 0.03%)</title><rect x="66.0" y="1845" width="0.4" height="15.0" fill="rgb(212,52,2)" rx="2" ry="2"/>
<text x="68.97" y="1855.5"/>
</g>
<g class="hide">
<title>clock_gettime@GLIBC_2.2.5 (374 samples, 0.06%)</title><rect x="54.2" y="2053" width="0.6" height="15.0" fill="rgb(223,151,35)" rx="2" ry="2"/>
<text x="57.17" y="2063.5"/>
</g>
<g>
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (192 samples, 0.03%)</title><rect x="591.4962251201097" y="1797" width="1.619766643788607" height="15.0" fill="rgb(251,177,12)" rx="2" ry="2" _orig_x="550.4" _orig_width="0.4"/>
<text x="594.4962251201097" y="1807.5" _orig_x="553.44"/>
</g>
<g>
<title>SimpleMemHeap::SimpleMemHeap (122 samples, 0.02%)</title><rect x="292.2443376801647" y="1877" width="0.8098833218943035" height="15.0" fill="rgb(210,38,41)" rx="2" ry="2" _orig_x="476.5" _orig_width="0.2"/>
<text x="295.2443376801647" y="1887.5" _orig_x="479.48"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (84 samples, 0.01%)</title><rect x="1188.7" y="2021" width="0.2" height="15.0" fill="rgb(248,183,40)" rx="2" ry="2"/>
<text x="1191.73" y="2031.5"/>
</g>
<g class="hide">
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__rehash (274 samples, 0.04%)</title><rect x="133.8146877144817" y="1957" width="0.5456417295813315" height="15.0" fill="rgb(207,77,36)" rx="2" ry="2" _orig_x="183.2" _orig_width="0.5"/>
<text x="136.8146877144817" y="1967.5" _orig_x="186.21"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_deallocate_buckets (102 samples, 0.02%)</title><rect x="46.849691146190665" y="1733" width="0.4049416609471517" height="15.0" fill="rgb(250,193,8)" rx="2" ry="2" _orig_x="415.9" _orig_width="0.1"/>
<text x="49.849691146190665" y="1743.5" _orig_x="418.85"/>
</g>
<g class="hide">
<title>[unknown] (100 samples, 0.01%)</title><rect x="219.6" y="2053" width="0.2" height="15.0" fill="rgb(227,168,15)" rx="2" ry="2"/>
<text x="222.59" y="2063.5"/>
</g>
<g class="hide">
<title>operator new[] (93 samples, 0.01%)</title><rect x="131.74124914207266" y="1957" width="0.2182566918325326" height="15.0" fill="rgb(253,221,24)" rx="2" ry="2" _orig_x="181.3" _orig_width="0.2"/>
<text x="134.74124914207266" y="1967.5" _orig_x="184.32"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (78 samples, 0.01%)</title><rect x="56.6" y="1829" width="0.1" height="15.0" fill="rgb(239,27,37)" rx="2" ry="2"/>
<text x="59.59" y="1839.5"/>
</g>
<g>
<title>std::_Vector_base&lt;Field*, std::allocator&lt;Field*&gt; &gt;::_Vector_impl::~_Vector_impl (147 samples, 0.02%)</title><rect x="1078.6410432395335" y="1861" width="1.214824982841455" height="15.0" fill="rgb(247,138,34)" rx="2" ry="2" _orig_x="670.7" _orig_width="0.3"/>
<text x="1081.6410432395335" y="1871.5" _orig_x="673.73"/>
</g>
<g class="hide">
<title>[code] (366 samples, 0.05%)</title><rect x="133.1599176389841" y="1941" width="0.6547700754975978" height="15.0" fill="rgb(216,227,13)" rx="2" ry="2" _orig_x="182.6" _orig_width="0.6"/>
<text x="136.1599176389841" y="1951.5" _orig_x="185.57"/>
</g>
<g class="hide">
<title>[unknown] (618 samples, 0.09%)</title><rect x="260.1853122855181" y="1541" width="1.091283459162663" height="15.0" fill="rgb(250,138,40)" rx="2" ry="2" _orig_x="299.0" _orig_width="1.0"/>
<text x="263.1853122855181" y="1551.5" _orig_x="301.96"/>
</g>
<g class="hide">
<title>nv_post_event (88 samples, 0.01%)</title><rect x="327.40837336993815" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(208,141,1)" rx="2" ry="2" _orig_x="360.6" _orig_width="0.1"/>
<text x="330.40837336993815" y="2047.5" _orig_x="363.58"/>
</g>
<g class="hide">
<title>[libmozjs-68.so.68.6.0] (107 samples, 0.02%)</title><rect x="181.28551818805752" y="1861" width="0.2182566918325326" height="15.0" fill="rgb(242,7,50)" rx="2" ry="2" _orig_x="226.7" _orig_width="0.2"/>
<text x="184.28551818805752" y="1871.5" _orig_x="229.67"/>
</g>
<g class="hide">
<title>read (60 samples, 0.01%)</title><rect x="65.93685655456409" y="2037" width="0.1091283459162663" height="15.0" fill="rgb(226,21,46)" rx="2" ry="2" _orig_x="121.0" _orig_width="0.1"/>
<text x="68.93685655456409" y="2047.5" _orig_x="124.02"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (5,659 samples, 0.84%)</title><rect x="278.08236101578575" y="1957" width="10.803706245710364" height="15.0" fill="rgb(250,229,15)" rx="2" ry="2" _orig_x="315.4" _orig_width="9.9"/>
<text x="281.08236101578575" y="1967.5" _orig_x="318.36"/>
</g>
<g class="hide">
<title>[[kernel.kallsyms]] (73 samples, 0.01%)</title><rect x="212.605353466026" y="1941" width="0.2182566918325326" height="15.0" fill="rgb(210,145,44)" rx="2" ry="2" _orig_x="255.4" _orig_width="0.2"/>
<text x="215.605353466026" y="1951.5" _orig_x="258.43"/>
</g>
<g class="hide">
<title>[unknown] (4,792 samples, 0.71%)</title><rect x="110.1" y="2053" width="8.4" height="15.0" fill="rgb(241,129,42)" rx="2" ry="2"/>
<text x="113.08" y="2063.5"/>
</g>
<g class="hide">
<title>[perf-105834.map] (64 samples, 0.01%)</title><rect x="13.8" y="1925" width="0.1" height="15.0" fill="rgb(248,214,32)" rx="2" ry="2"/>
<text x="16.77" y="1935.5"/>
</g>
<g>
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void*, false&gt; &gt; &gt;::_M_allocate_buckets (265 samples, 0.04%)</title><rect x="791.9423472889498" y="1717" width="2.0247083047357584" height="15.0" fill="rgb(240,123,35)" rx="2" ry="2" _orig_x="599.9" _orig_width="0.5"/>
<text x="794.9423472889498" y="1727.5" _orig_x="602.93"/>
</g>
<g class="hide">
<title>[unknown] (1,148 samples, 0.17%)</title><rect x="58.73438572409051" y="645" width="2.182566918325326" height="15.0" fill="rgb(221,83,23)" rx="2" ry="2" _orig_x="114.4" _orig_width="2.0"/>
<text x="61.73438572409051" y="655.5" _orig_x="117.41"/>
</g>
</g>
</svg>
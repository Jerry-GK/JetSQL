<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1910.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1893" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1893" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (609 samples, 1.40%)</title><rect x="272.8" y="1589" width="16.6" height="15.0" fill="rgb(225,158,16)" rx="2" ry="2" />
<text  x="275.82" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="54.7" y="1701" width="0.1" height="15.0" fill="rgb(206,167,11)" rx="2" ry="2" />
<text  x="57.66" y="1711.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1813" width="0.1" height="15.0" fill="rgb(208,131,31)" rx="2" ry="2" />
<text  x="23.53" y="1823.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (8 samples, 0.02%)</title><rect x="499.4" y="1589" width="0.2" height="15.0" fill="rgb(238,78,40)" rx="2" ry="2" />
<text  x="502.35" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="61.1" y="1605" width="0.1" height="15.0" fill="rgb(250,187,32)" rx="2" ry="2" />
<text  x="64.11" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1749" width="0.1" height="15.0" fill="rgb(225,87,29)" rx="2" ry="2" />
<text  x="13.11" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (152 samples, 0.35%)</title><rect x="249.4" y="1637" width="4.2" height="15.0" fill="rgb(242,98,21)" rx="2" ry="2" />
<text  x="252.43" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61 samples, 0.14%)</title><rect x="236.5" y="1813" width="1.7" height="15.0" fill="rgb(250,149,11)" rx="2" ry="2" />
<text  x="239.51" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="20.7" y="1733" width="0.6" height="15.0" fill="rgb(254,226,2)" rx="2" ry="2" />
<text  x="23.69" y="1743.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (4 samples, 0.01%)</title><rect x="327.7" y="1605" width="0.1" height="15.0" fill="rgb(209,228,16)" rx="2" ry="2" />
<text  x="330.68" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1733" width="0.2" height="15.0" fill="rgb(241,144,31)" rx="2" ry="2" />
<text  x="691.25" y="1743.5" ></text>
</g>
<g >
<title>sh (9 samples, 0.02%)</title><rect x="689.8" y="1845" width="0.3" height="15.0" fill="rgb(250,90,39)" rx="2" ry="2" />
<text  x="692.85" y="1855.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="149" width="0.1" height="15.0" fill="rgb(227,207,43)" rx="2" ry="2" />
<text  x="61.79" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (79 samples, 0.18%)</title><rect x="370.4" y="1637" width="2.1" height="15.0" fill="rgb(229,10,22)" rx="2" ry="2" />
<text  x="373.35" y="1647.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1781" width="0.2" height="15.0" fill="rgb(233,177,47)" rx="2" ry="2" />
<text  x="26.79" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="331.9" y="1637" width="0.2" height="15.0" fill="rgb(245,186,41)" rx="2" ry="2" />
<text  x="334.87" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (28 samples, 0.06%)</title><rect x="369.1" y="1621" width="0.8" height="15.0" fill="rgb(232,144,2)" rx="2" ry="2" />
<text  x="372.10" y="1631.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (4 samples, 0.01%)</title><rect x="24.8" y="1813" width="0.1" height="15.0" fill="rgb(248,116,52)" rx="2" ry="2" />
<text  x="27.77" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (27 samples, 0.06%)</title><rect x="469.1" y="1685" width="0.7" height="15.0" fill="rgb(209,170,7)" rx="2" ry="2" />
<text  x="472.08" y="1695.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1733" width="0.3" height="15.0" fill="rgb(234,214,52)" rx="2" ry="2" />
<text  x="229.28" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (15 samples, 0.03%)</title><rect x="12.6" y="1573" width="0.4" height="15.0" fill="rgb(210,70,48)" rx="2" ry="2" />
<text  x="15.61" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="231.1" y="1829" width="0.1" height="15.0" fill="rgb(244,37,39)" rx="2" ry="2" />
<text  x="234.07" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="20.6" y="1781" width="0.7" height="15.0" fill="rgb(235,37,27)" rx="2" ry="2" />
<text  x="23.63" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="243.4" y="1781" width="0.6" height="15.0" fill="rgb(221,121,48)" rx="2" ry="2" />
<text  x="246.44" y="1791.5" ></text>
</g>
<g >
<title>ib_log_checkpt (4 samples, 0.01%)</title><rect x="231.4" y="1845" width="0.1" height="15.0" fill="rgb(230,229,44)" rx="2" ry="2" />
<text  x="234.42" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1781" width="0.1" height="15.0" fill="rgb(243,215,24)" rx="2" ry="2" />
<text  x="224.90" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (68 samples, 0.16%)</title><rect x="287.5" y="1397" width="1.9" height="15.0" fill="rgb(205,192,31)" rx="2" ry="2" />
<text  x="290.53" y="1407.5" ></text>
</g>
<g >
<title>Type::GetInstance (5 samples, 0.01%)</title><rect x="419.4" y="1637" width="0.2" height="15.0" fill="rgb(222,68,13)" rx="2" ry="2" />
<text  x="422.42" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%)</title><rect x="390.7" y="1621" width="0.2" height="15.0" fill="rgb(221,85,15)" rx="2" ry="2" />
<text  x="393.72" y="1631.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10 samples, 0.02%)</title><rect x="436.1" y="1589" width="0.2" height="15.0" fill="rgb(210,87,45)" rx="2" ry="2" />
<text  x="439.06" y="1599.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (5 samples, 0.01%)</title><rect x="18.0" y="1829" width="0.1" height="15.0" fill="rgb(231,126,19)" rx="2" ry="2" />
<text  x="20.97" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.8" y="1749" width="0.1" height="15.0" fill="rgb(205,48,1)" rx="2" ry="2" />
<text  x="17.79" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (197 samples, 0.45%)</title><rect x="429.3" y="1653" width="5.3" height="15.0" fill="rgb(218,91,49)" rx="2" ry="2" />
<text  x="432.29" y="1663.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (4 samples, 0.01%)</title><rect x="520.1" y="1781" width="0.1" height="15.0" fill="rgb(205,142,32)" rx="2" ry="2" />
<text  x="523.05" y="1791.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="16.4" y="1461" width="0.2" height="15.0" fill="rgb(222,3,34)" rx="2" ry="2" />
<text  x="19.42" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="237.7" y="1685" width="0.5" height="15.0" fill="rgb(238,51,4)" rx="2" ry="2" />
<text  x="240.65" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="224.8" y="1701" width="0.2" height="15.0" fill="rgb(220,6,15)" rx="2" ry="2" />
<text  x="227.84" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="1150.6" y="1365" width="0.3" height="15.0" fill="rgb(214,38,16)" rx="2" ry="2" />
<text  x="1153.62" y="1375.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53 samples, 0.12%)</title><rect x="680.3" y="1701" width="1.4" height="15.0" fill="rgb(215,35,31)" rx="2" ry="2" />
<text  x="683.30" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1653" width="0.3" height="15.0" fill="rgb(212,145,13)" rx="2" ry="2" />
<text  x="29.05" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (5 samples, 0.01%)</title><rect x="322.1" y="1605" width="0.2" height="15.0" fill="rgb(234,122,30)" rx="2" ry="2" />
<text  x="325.13" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="241.7" y="1717" width="0.2" height="15.0" fill="rgb(211,24,8)" rx="2" ry="2" />
<text  x="244.73" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.0" y="1749" width="0.1" height="15.0" fill="rgb(239,174,40)" rx="2" ry="2" />
<text  x="22.98" y="1759.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="629" width="0.1" height="15.0" fill="rgb(238,228,5)" rx="2" ry="2" />
<text  x="61.79" y="639.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="556.1" y="1717" width="0.2" height="15.0" fill="rgb(205,53,20)" rx="2" ry="2" />
<text  x="559.09" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="10.7" y="1765" width="0.4" height="15.0" fill="rgb(221,90,14)" rx="2" ry="2" />
<text  x="13.65" y="1775.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1765" width="0.2" height="15.0" fill="rgb(215,159,12)" rx="2" ry="2" />
<text  x="26.79" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53 samples, 0.12%)</title><rect x="680.3" y="1685" width="1.4" height="15.0" fill="rgb(226,180,40)" rx="2" ry="2" />
<text  x="683.30" y="1695.5" ></text>
</g>
<g >
<title>[msedge] (19 samples, 0.04%)</title><rect x="13.9" y="1669" width="0.5" height="15.0" fill="rgb(220,95,28)" rx="2" ry="2" />
<text  x="16.89" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (217 samples, 0.50%)</title><rect x="665.1" y="1781" width="5.9" height="15.0" fill="rgb(221,228,32)" rx="2" ry="2" />
<text  x="668.10" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (82 samples, 0.19%)</title><rect x="170.9" y="1637" width="2.2" height="15.0" fill="rgb(217,136,26)" rx="2" ry="2" />
<text  x="173.91" y="1647.5" ></text>
</g>
<g >
<title>[code] (13 samples, 0.03%)</title><rect x="11.5" y="1557" width="0.3" height="15.0" fill="rgb(236,111,31)" rx="2" ry="2" />
<text  x="14.50" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (678 samples, 1.56%)</title><rect x="574.3" y="1541" width="18.5" height="15.0" fill="rgb(235,103,11)" rx="2" ry="2" />
<text  x="577.34" y="1551.5" ></text>
</g>
<g >
<title>__poll (4 samples, 0.01%)</title><rect x="230.2" y="1813" width="0.1" height="15.0" fill="rgb(228,52,39)" rx="2" ry="2" />
<text  x="233.22" y="1823.5" ></text>
</g>
<g >
<title>kworker/2:0-eve (29 samples, 0.07%)</title><rect x="240.0" y="1845" width="0.8" height="15.0" fill="rgb(212,214,23)" rx="2" ry="2" />
<text  x="242.96" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="683.9" y="1733" width="1.7" height="15.0" fill="rgb(254,89,26)" rx="2" ry="2" />
<text  x="686.92" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27 samples, 0.06%)</title><rect x="240.0" y="1781" width="0.8" height="15.0" fill="rgb(249,85,35)" rx="2" ry="2" />
<text  x="243.02" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,150 samples, 2.65%)</title><rect x="126.6" y="1637" width="31.3" height="15.0" fill="rgb(214,168,47)" rx="2" ry="2" />
<text  x="129.57" y="1647.5" >[[..</text>
</g>
<g >
<title>__libc_start_main (9 samples, 0.02%)</title><rect x="687.8" y="1829" width="0.3" height="15.0" fill="rgb(206,119,49)" rx="2" ry="2" />
<text  x="690.84" y="1839.5" ></text>
</g>
<g >
<title>BPlusTree::InternalInsert (4 samples, 0.01%)</title><rect x="470.1" y="1749" width="0.1" height="15.0" fill="rgb(217,102,45)" rx="2" ry="2" />
<text  x="473.09" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (164 samples, 0.38%)</title><rect x="50.1" y="1621" width="4.5" height="15.0" fill="rgb(244,171,34)" rx="2" ry="2" />
<text  x="53.12" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="410.6" y="1349" width="0.1" height="15.0" fill="rgb(225,227,30)" rx="2" ry="2" />
<text  x="413.60" y="1359.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;char*&gt; (4 samples, 0.01%)</title><rect x="432.8" y="1573" width="0.1" height="15.0" fill="rgb(231,88,53)" rx="2" ry="2" />
<text  x="435.77" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (288 samples, 0.66%)</title><rect x="165.3" y="1749" width="7.8" height="15.0" fill="rgb(222,223,27)" rx="2" ry="2" />
<text  x="168.30" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (195 samples, 0.45%)</title><rect x="1145.6" y="1525" width="5.3" height="15.0" fill="rgb(231,115,46)" rx="2" ry="2" />
<text  x="1148.61" y="1535.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="12.8" y="1445" width="0.2" height="15.0" fill="rgb(241,68,24)" rx="2" ry="2" />
<text  x="15.80" y="1455.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="222.6" y="1765" width="0.4" height="15.0" fill="rgb(254,171,22)" rx="2" ry="2" />
<text  x="225.64" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (61 samples, 0.14%)</title><rect x="394.7" y="1605" width="1.7" height="15.0" fill="rgb(214,165,18)" rx="2" ry="2" />
<text  x="397.69" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1701" width="0.1" height="15.0" fill="rgb(237,73,44)" rx="2" ry="2" />
<text  x="17.81" y="1711.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (95 samples, 0.22%)</title><rect x="305.8" y="1557" width="2.6" height="15.0" fill="rgb(209,77,5)" rx="2" ry="2" />
<text  x="308.84" y="1567.5" ></text>
</g>
<g >
<title>ntfs_mft_records_write (7 samples, 0.02%)</title><rect x="657.0" y="1813" width="0.2" height="15.0" fill="rgb(244,155,50)" rx="2" ry="2" />
<text  x="660.02" y="1823.5" ></text>
</g>
<g >
<title>Compositor (82 samples, 0.19%)</title><rect x="14.6" y="1845" width="2.2" height="15.0" fill="rgb(216,20,2)" rx="2" ry="2" />
<text  x="17.57" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (366 samples, 0.84%)</title><rect x="147.9" y="1541" width="10.0" height="15.0" fill="rgb(238,32,33)" rx="2" ry="2" />
<text  x="150.90" y="1551.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="12.5" y="1653" width="0.5" height="15.0" fill="rgb(230,44,8)" rx="2" ry="2" />
<text  x="15.48" y="1663.5" ></text>
</g>
<g >
<title>mount.ntfs (6,013 samples, 13.86%)</title><rect x="514.9" y="1845" width="163.5" height="15.0" fill="rgb(249,63,6)" rx="2" ry="2" />
<text  x="517.86" y="1855.5" >mount.ntfs</text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="1184.7" y="1381" width="0.5" height="15.0" fill="rgb(226,19,49)" rx="2" ry="2" />
<text  x="1187.72" y="1391.5" ></text>
</g>
<g >
<title>code (6,901 samples, 15.91%)</title><rect x="25.4" y="1845" width="187.7" height="15.0" fill="rgb(207,90,37)" rx="2" ry="2" />
<text  x="28.39" y="1855.5" >code</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.02%)</title><rect x="486.4" y="1669" width="0.2" height="15.0" fill="rgb(253,39,54)" rx="2" ry="2" />
<text  x="489.35" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="11.7" y="1445" width="0.1" height="15.0" fill="rgb(210,86,20)" rx="2" ry="2" />
<text  x="14.69" y="1455.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,957 samples, 4.51%)</title><rect x="108.3" y="1765" width="53.2" height="15.0" fill="rgb(228,215,5)" rx="2" ry="2" />
<text  x="111.32" y="1775.5" >Inoti..</text>
</g>
<g >
<title>std::__1::chrono::steady_clock::now (42 samples, 0.10%)</title><rect x="207.8" y="1781" width="1.2" height="15.0" fill="rgb(247,225,46)" rx="2" ry="2" />
<text  x="210.84" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="469.3" y="1637" width="0.2" height="15.0" fill="rgb(240,156,10)" rx="2" ry="2" />
<text  x="472.30" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="242.1" y="1717" width="0.1" height="15.0" fill="rgb(229,17,25)" rx="2" ry="2" />
<text  x="245.08" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1185.1" y="1285" width="0.1" height="15.0" fill="rgb(224,40,20)" rx="2" ry="2" />
<text  x="1188.13" y="1295.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1781" width="0.8" height="15.0" fill="rgb(251,223,54)" rx="2" ry="2" />
<text  x="684.77" y="1791.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1765" width="0.1" height="15.0" fill="rgb(206,113,19)" rx="2" ry="2" />
<text  x="24.37" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="240.3" y="1733" width="0.5" height="15.0" fill="rgb(222,173,3)" rx="2" ry="2" />
<text  x="243.32" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (5 samples, 0.01%)</title><rect x="316.2" y="1605" width="0.1" height="15.0" fill="rgb(215,191,22)" rx="2" ry="2" />
<text  x="319.20" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1637" width="0.1" height="15.0" fill="rgb(214,223,14)" rx="2" ry="2" />
<text  x="1192.27" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1733" width="0.6" height="15.0" fill="rgb(225,229,15)" rx="2" ry="2" />
<text  x="16.86" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1701" width="0.1" height="15.0" fill="rgb(224,113,54)" rx="2" ry="2" />
<text  x="219.65" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="678.6" y="1749" width="0.3" height="15.0" fill="rgb(254,179,42)" rx="2" ry="2" />
<text  x="681.59" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,179 samples, 2.72%)</title><rect x="64.4" y="1781" width="32.0" height="15.0" fill="rgb(240,131,12)" rx="2" ry="2" />
<text  x="67.37" y="1791.5" >[[..</text>
</g>
<g >
<title>runtime.mcall (12 samples, 0.03%)</title><rect x="213.4" y="1765" width="0.3" height="15.0" fill="rgb(230,124,11)" rx="2" ry="2" />
<text  x="216.39" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,148 samples, 41.83%)</title><rect x="691.6" y="1829" width="493.6" height="15.0" fill="rgb(237,224,22)" rx="2" ry="2" />
<text  x="694.64" y="1839.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libwns_push_client.so] (5 samples, 0.01%)</title><rect x="20.7" y="1605" width="0.1" height="15.0" fill="rgb(226,118,16)" rx="2" ry="2" />
<text  x="23.69" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1669" width="0.2" height="15.0" fill="rgb(217,215,51)" rx="2" ry="2" />
<text  x="217.69" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="238.5" y="1749" width="0.3" height="15.0" fill="rgb(209,161,10)" rx="2" ry="2" />
<text  x="241.49" y="1759.5" ></text>
</g>
<g >
<title>BPlusTree::InternalInsert (5,608 samples, 12.93%)</title><rect x="290.8" y="1717" width="152.5" height="15.0" fill="rgb(220,164,0)" rx="2" ry="2" />
<text  x="293.77" y="1727.5" >BPlusTree::Internal..</text>
</g>
<g >
<title>swapper (18,218 samples, 41.99%)</title><rect x="691.6" y="1845" width="495.5" height="15.0" fill="rgb(207,52,40)" rx="2" ry="2" />
<text  x="694.64" y="1855.5" >swapper</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (14 samples, 0.03%)</title><rect x="683.3" y="1829" width="0.3" height="15.0" fill="rgb(234,18,41)" rx="2" ry="2" />
<text  x="686.27" y="1839.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="159.3" y="1749" width="0.2" height="15.0" fill="rgb(238,181,3)" rx="2" ry="2" />
<text  x="162.29" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (7 samples, 0.02%)</title><rect x="445.8" y="1637" width="0.2" height="15.0" fill="rgb(227,30,48)" rx="2" ry="2" />
<text  x="448.77" y="1647.5" ></text>
</g>
<g >
<title>ntfs_extent_inode_open (19 samples, 0.04%)</title><rect x="674.7" y="1829" width="0.5" height="15.0" fill="rgb(231,11,51)" rx="2" ry="2" />
<text  x="677.67" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1621" width="0.1" height="15.0" fill="rgb(248,116,22)" rx="2" ry="2" />
<text  x="23.25" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.8" y="1765" width="0.1" height="15.0" fill="rgb(236,137,31)" rx="2" ry="2" />
<text  x="17.79" y="1775.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1781" width="0.1" height="15.0" fill="rgb(209,203,33)" rx="2" ry="2" />
<text  x="24.37" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (4 samples, 0.01%)</title><rect x="502.3" y="1653" width="0.1" height="15.0" fill="rgb(232,18,35)" rx="2" ry="2" />
<text  x="505.32" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (444 samples, 1.02%)</title><rect x="619.8" y="1605" width="12.0" height="15.0" fill="rgb(215,185,41)" rx="2" ry="2" />
<text  x="622.76" y="1615.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WUnlock (4 samples, 0.01%)</title><rect x="368.0" y="1653" width="0.1" height="15.0" fill="rgb(223,130,39)" rx="2" ry="2" />
<text  x="370.96" y="1663.5" ></text>
</g>
<g >
<title>[libgjs.so.0.0.0] (11 samples, 0.03%)</title><rect x="225.4" y="1829" width="0.3" height="15.0" fill="rgb(214,48,16)" rx="2" ry="2" />
<text  x="228.41" y="1839.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (17 samples, 0.04%)</title><rect x="452.8" y="1589" width="0.5" height="15.0" fill="rgb(219,89,45)" rx="2" ry="2" />
<text  x="455.82" y="1599.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (4 samples, 0.01%)</title><rect x="232.3" y="1781" width="0.1" height="15.0" fill="rgb(243,72,11)" rx="2" ry="2" />
<text  x="235.29" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (290 samples, 0.67%)</title><rect x="150.0" y="1525" width="7.9" height="15.0" fill="rgb(232,38,7)" rx="2" ry="2" />
<text  x="152.96" y="1535.5" ></text>
</g>
<g >
<title>start_thread (51 samples, 0.12%)</title><rect x="15.4" y="1829" width="1.4" height="15.0" fill="rgb(221,157,13)" rx="2" ry="2" />
<text  x="18.41" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="512.3" y="1749" width="0.3" height="15.0" fill="rgb(223,113,24)" rx="2" ry="2" />
<text  x="515.30" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1637" width="0.2" height="15.0" fill="rgb(251,94,22)" rx="2" ry="2" />
<text  x="24.75" y="1647.5" ></text>
</g>
<g >
<title>operator delete[] (4 samples, 0.01%)</title><rect x="163.5" y="1765" width="0.1" height="15.0" fill="rgb(238,85,36)" rx="2" ry="2" />
<text  x="166.53" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (72 samples, 0.17%)</title><rect x="322.8" y="1589" width="1.9" height="15.0" fill="rgb(215,23,41)" rx="2" ry="2" />
<text  x="325.78" y="1599.5" ></text>
</g>
<g >
<title>TypeChar::DeserializeFrom (115 samples, 0.27%)</title><rect x="383.1" y="1621" width="3.1" height="15.0" fill="rgb(246,0,17)" rx="2" ry="2" />
<text  x="386.08" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="410.4" y="1509" width="0.3" height="15.0" fill="rgb(222,134,48)" rx="2" ry="2" />
<text  x="413.41" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="1187.6" y="1749" width="0.2" height="15.0" fill="rgb(228,180,16)" rx="2" ry="2" />
<text  x="1190.58" y="1759.5" ></text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="15.5" y="1685" width="1.2" height="15.0" fill="rgb(213,184,13)" rx="2" ry="2" />
<text  x="18.55" y="1695.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.01%)</title><rect x="256.2" y="1813" width="0.1" height="15.0" fill="rgb(244,171,11)" rx="2" ry="2" />
<text  x="259.20" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="213.8" y="1669" width="0.1" height="15.0" fill="rgb(211,159,46)" rx="2" ry="2" />
<text  x="216.82" y="1679.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7 samples, 0.02%)</title><rect x="232.1" y="1813" width="0.2" height="15.0" fill="rgb(223,129,32)" rx="2" ry="2" />
<text  x="235.10" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="472.3" y="1717" width="0.3" height="15.0" fill="rgb(212,76,41)" rx="2" ry="2" />
<text  x="475.32" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (20 samples, 0.05%)</title><rect x="485.4" y="1717" width="0.6" height="15.0" fill="rgb(231,23,41)" rx="2" ry="2" />
<text  x="488.43" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="689.0" y="1733" width="0.4" height="15.0" fill="rgb(227,187,34)" rx="2" ry="2" />
<text  x="692.03" y="1743.5" ></text>
</g>
<g >
<title>CompareStrings (8 samples, 0.02%)</title><rect x="298.7" y="1621" width="0.2" height="15.0" fill="rgb(219,206,41)" rx="2" ry="2" />
<text  x="301.68" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (231 samples, 0.53%)</title><rect x="247.3" y="1781" width="6.3" height="15.0" fill="rgb(242,207,49)" rx="2" ry="2" />
<text  x="250.28" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (761 samples, 1.75%)</title><rect x="137.2" y="1573" width="20.7" height="15.0" fill="rgb(242,74,13)" rx="2" ry="2" />
<text  x="140.15" y="1583.5" ></text>
</g>
<g >
<title>ntfs_pathname_to_inode (10 samples, 0.02%)</title><rect x="677.7" y="1829" width="0.3" height="15.0" fill="rgb(248,59,37)" rx="2" ry="2" />
<text  x="680.69" y="1839.5" ></text>
</g>
<g >
<title>[[vdso]] (10 samples, 0.02%)</title><rect x="23.5" y="1813" width="0.2" height="15.0" fill="rgb(217,99,28)" rx="2" ry="2" />
<text  x="26.46" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1685" width="0.1" height="15.0" fill="rgb(252,32,37)" rx="2" ry="2" />
<text  x="692.50" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="228.1" y="1797" width="0.2" height="15.0" fill="rgb(237,225,38)" rx="2" ry="2" />
<text  x="231.10" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (385 samples, 0.89%)</title><rect x="1140.5" y="1557" width="10.4" height="15.0" fill="rgb(222,32,2)" rx="2" ry="2" />
<text  x="1143.47" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (16 samples, 0.04%)</title><rect x="409.6" y="1605" width="0.5" height="15.0" fill="rgb(216,183,8)" rx="2" ry="2" />
<text  x="412.63" y="1615.5" ></text>
</g>
<g >
<title>__libc_sendmsg (4 samples, 0.01%)</title><rect x="1189.3" y="1813" width="0.1" height="15.0" fill="rgb(253,63,11)" rx="2" ry="2" />
<text  x="1192.27" y="1823.5" ></text>
</g>
<g >
<title>Field::SerializeTo (4 samples, 0.01%)</title><rect x="470.5" y="1733" width="0.1" height="15.0" fill="rgb(219,180,7)" rx="2" ry="2" />
<text  x="473.50" y="1743.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (4 samples, 0.01%)</title><rect x="520.2" y="1781" width="0.1" height="15.0" fill="rgb(242,196,9)" rx="2" ry="2" />
<text  x="523.16" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="242.6" y="1701" width="0.2" height="15.0" fill="rgb(247,115,11)" rx="2" ry="2" />
<text  x="245.57" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1749" width="0.3" height="15.0" fill="rgb(232,12,27)" rx="2" ry="2" />
<text  x="17.95" y="1759.5" ></text>
</g>
<g >
<title>Row::~Row (38 samples, 0.09%)</title><rect x="483.1" y="1749" width="1.0" height="15.0" fill="rgb(252,159,28)" rx="2" ry="2" />
<text  x="486.09" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (844 samples, 1.95%)</title><rect x="1128.0" y="1605" width="23.0" height="15.0" fill="rgb(230,171,47)" rx="2" ry="2" />
<text  x="1131.01" y="1615.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1717" width="0.1" height="15.0" fill="rgb(234,128,35)" rx="2" ry="2" />
<text  x="17.81" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="239.0" y="1749" width="0.3" height="15.0" fill="rgb(243,117,51)" rx="2" ry="2" />
<text  x="241.96" y="1759.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1,009 samples, 2.33%)</title><rect x="27.1" y="1813" width="27.5" height="15.0" fill="rgb(252,14,32)" rx="2" ry="2" />
<text  x="30.13" y="1823.5" >p..</text>
</g>
<g >
<title>kworker/11:2-ev (17 samples, 0.04%)</title><rect x="238.9" y="1845" width="0.4" height="15.0" fill="rgb(248,138,28)" rx="2" ry="2" />
<text  x="241.87" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="18.7" y="1733" width="0.1" height="15.0" fill="rgb(252,107,44)" rx="2" ry="2" />
<text  x="21.73" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="239.9" y="1669" width="0.1" height="15.0" fill="rgb(246,218,32)" rx="2" ry="2" />
<text  x="242.85" y="1679.5" ></text>
</g>
<g >
<title>[libwns_push_client.so] (7 samples, 0.02%)</title><rect x="20.7" y="1637" width="0.2" height="15.0" fill="rgb(229,39,36)" rx="2" ry="2" />
<text  x="23.69" y="1647.5" ></text>
</g>
<g >
<title>[perf-140378.map] (11 samples, 0.03%)</title><rect x="60.5" y="1605" width="0.3" height="15.0" fill="rgb(208,28,24)" rx="2" ry="2" />
<text  x="63.48" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (430 samples, 0.99%)</title><rect x="348.0" y="1589" width="11.7" height="15.0" fill="rgb(236,129,23)" rx="2" ry="2" />
<text  x="351.02" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="229.1" y="1781" width="0.4" height="15.0" fill="rgb(227,208,20)" rx="2" ry="2" />
<text  x="232.06" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="228.1" y="1749" width="0.2" height="15.0" fill="rgb(227,136,35)" rx="2" ry="2" />
<text  x="231.10" y="1759.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1109" width="1.0" height="15.0" fill="rgb(242,139,48)" rx="2" ry="2" />
<text  x="60.90" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (173 samples, 0.40%)</title><rect x="248.9" y="1653" width="4.7" height="15.0" fill="rgb(253,22,49)" rx="2" ry="2" />
<text  x="251.86" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52 samples, 0.12%)</title><rect x="210.8" y="1749" width="1.4" height="15.0" fill="rgb(250,39,14)" rx="2" ry="2" />
<text  x="213.75" y="1759.5" ></text>
</g>
<g >
<title>__errno_location (4 samples, 0.01%)</title><rect x="633.1" y="1813" width="0.1" height="15.0" fill="rgb(217,16,19)" rx="2" ry="2" />
<text  x="636.06" y="1823.5" ></text>
</g>
<g >
<title>[code] (23 samples, 0.05%)</title><rect x="11.3" y="1653" width="0.6" height="15.0" fill="rgb(215,62,18)" rx="2" ry="2" />
<text  x="14.28" y="1663.5" ></text>
</g>
<g >
<title>__libc_write (66 samples, 0.15%)</title><rect x="685.7" y="1717" width="1.8" height="15.0" fill="rgb(252,29,22)" rx="2" ry="2" />
<text  x="688.69" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.6" y="1669" width="0.1" height="15.0" fill="rgb(246,125,31)" rx="2" ry="2" />
<text  x="17.62" y="1679.5" ></text>
</g>
<g >
<title>BPlusTreeInternalPage::EntryAt (5 samples, 0.01%)</title><rect x="443.3" y="1717" width="0.1" height="15.0" fill="rgb(249,158,43)" rx="2" ry="2" />
<text  x="446.30" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (127 samples, 0.29%)</title><rect x="285.9" y="1429" width="3.5" height="15.0" fill="rgb(221,54,6)" rx="2" ry="2" />
<text  x="288.93" y="1439.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (95 samples, 0.22%)</title><rect x="450.9" y="1669" width="2.6" height="15.0" fill="rgb(235,81,32)" rx="2" ry="2" />
<text  x="453.91" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.0" y="1781" width="0.1" height="15.0" fill="rgb(206,203,1)" rx="2" ry="2" />
<text  x="22.98" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.03%)</title><rect x="431.4" y="1621" width="0.3" height="15.0" fill="rgb(241,83,13)" rx="2" ry="2" />
<text  x="434.38" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="12.2" y="1429" width="0.1" height="15.0" fill="rgb(215,121,24)" rx="2" ry="2" />
<text  x="15.18" y="1439.5" ></text>
</g>
<g >
<title>ntfs_pwrite (11 samples, 0.03%)</title><rect x="546.9" y="1781" width="0.3" height="15.0" fill="rgb(224,134,35)" rx="2" ry="2" />
<text  x="549.87" y="1791.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.470.129.06] (13 samples, 0.03%)</title><rect x="678.5" y="1829" width="0.4" height="15.0" fill="rgb(233,73,50)" rx="2" ry="2" />
<text  x="681.51" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="228.2" y="1717" width="0.1" height="15.0" fill="rgb(234,197,34)" rx="2" ry="2" />
<text  x="231.16" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10 samples, 0.02%)</title><rect x="314.8" y="1621" width="0.3" height="15.0" fill="rgb(219,34,30)" rx="2" ry="2" />
<text  x="317.84" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1605" width="0.3" height="15.0" fill="rgb(225,195,10)" rx="2" ry="2" />
<text  x="413.39" y="1615.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (10 samples, 0.02%)</title><rect x="59.1" y="1477" width="0.3" height="15.0" fill="rgb(228,111,21)" rx="2" ry="2" />
<text  x="62.12" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (5 samples, 0.01%)</title><rect x="462.3" y="1685" width="0.1" height="15.0" fill="rgb(224,97,39)" rx="2" ry="2" />
<text  x="465.28" y="1695.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (10 samples, 0.02%)</title><rect x="342.2" y="1669" width="0.3" height="15.0" fill="rgb(223,182,37)" rx="2" ry="2" />
<text  x="345.20" y="1679.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::fd (4 samples, 0.01%)</title><rect x="514.0" y="1829" width="0.1" height="15.0" fill="rgb(231,165,51)" rx="2" ry="2" />
<text  x="516.96" y="1839.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (5 samples, 0.01%)</title><rect x="514.6" y="1829" width="0.2" height="15.0" fill="rgb(233,25,54)" rx="2" ry="2" />
<text  x="517.64" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 0.12%)</title><rect x="684.2" y="1701" width="1.4" height="15.0" fill="rgb(234,176,26)" rx="2" ry="2" />
<text  x="687.19" y="1711.5" ></text>
</g>
<g >
<title>Field::CompareGreaterThan (25 samples, 0.06%)</title><rect x="415.3" y="1685" width="0.7" height="15.0" fill="rgb(233,71,39)" rx="2" ry="2" />
<text  x="418.34" y="1695.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="679.3" y="1781" width="0.3" height="15.0" fill="rgb(247,18,15)" rx="2" ry="2" />
<text  x="682.30" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::deallocate (6 samples, 0.01%)</title><rect x="369.4" y="1573" width="0.2" height="15.0" fill="rgb(234,92,24)" rx="2" ry="2" />
<text  x="372.43" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="240.8" y="1813" width="0.4" height="15.0" fill="rgb(246,214,31)" rx="2" ry="2" />
<text  x="243.75" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (116 samples, 0.27%)</title><rect x="51.4" y="1605" width="3.2" height="15.0" fill="rgb(227,177,3)" rx="2" ry="2" />
<text  x="54.42" y="1615.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::erase (10 samples, 0.02%)</title><rect x="295.3" y="1653" width="0.3" height="15.0" fill="rgb(211,85,0)" rx="2" ry="2" />
<text  x="298.31" y="1663.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="26.9" y="1733" width="0.2" height="15.0" fill="rgb(253,215,47)" rx="2" ry="2" />
<text  x="29.94" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="13.1" y="1669" width="0.1" height="15.0" fill="rgb(234,67,16)" rx="2" ry="2" />
<text  x="16.10" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="240.0" y="1829" width="0.8" height="15.0" fill="rgb(230,103,30)" rx="2" ry="2" />
<text  x="242.96" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (777 samples, 1.79%)</title><rect x="571.6" y="1573" width="21.2" height="15.0" fill="rgb(254,209,33)" rx="2" ry="2" />
<text  x="574.65" y="1583.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (15 samples, 0.03%)</title><rect x="636.2" y="1813" width="0.4" height="15.0" fill="rgb(239,39,45)" rx="2" ry="2" />
<text  x="639.19" y="1823.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (5 samples, 0.01%)</title><rect x="462.1" y="1685" width="0.1" height="15.0" fill="rgb(211,49,51)" rx="2" ry="2" />
<text  x="465.06" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (10 samples, 0.02%)</title><rect x="452.5" y="1589" width="0.3" height="15.0" fill="rgb(221,63,35)" rx="2" ry="2" />
<text  x="455.54" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="235.7" y="1765" width="0.3" height="15.0" fill="rgb(236,152,21)" rx="2" ry="2" />
<text  x="238.75" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (6 samples, 0.01%)</title><rect x="501.2" y="1669" width="0.1" height="15.0" fill="rgb(235,119,12)" rx="2" ry="2" />
<text  x="504.17" y="1679.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (5 samples, 0.01%)</title><rect x="225.6" y="1669" width="0.1" height="15.0" fill="rgb(227,187,53)" rx="2" ry="2" />
<text  x="228.57" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (429 samples, 0.99%)</title><rect x="348.0" y="1573" width="11.7" height="15.0" fill="rgb(227,29,47)" rx="2" ry="2" />
<text  x="351.05" y="1583.5" ></text>
</g>
<g >
<title>[perf-162284.map] (8 samples, 0.02%)</title><rect x="59.2" y="1429" width="0.2" height="15.0" fill="rgb(244,19,9)" rx="2" ry="2" />
<text  x="62.17" y="1439.5" ></text>
</g>
<g >
<title>[code] (26 samples, 0.06%)</title><rect x="15.9" y="1621" width="0.7" height="15.0" fill="rgb(229,43,1)" rx="2" ry="2" />
<text  x="18.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (7 samples, 0.02%)</title><rect x="496.1" y="1605" width="0.2" height="15.0" fill="rgb(248,197,28)" rx="2" ry="2" />
<text  x="499.09" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (12 samples, 0.03%)</title><rect x="346.7" y="1605" width="0.3" height="15.0" fill="rgb(223,25,18)" rx="2" ry="2" />
<text  x="349.66" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1733" width="0.2" height="15.0" fill="rgb(224,126,5)" rx="2" ry="2" />
<text  x="57.80" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.04%)</title><rect x="226.2" y="1797" width="0.4" height="15.0" fill="rgb(254,51,53)" rx="2" ry="2" />
<text  x="229.20" y="1807.5" ></text>
</g>
<g >
<title>Field::~Field (23 samples, 0.05%)</title><rect x="504.4" y="1733" width="0.6" height="15.0" fill="rgb(216,113,3)" rx="2" ry="2" />
<text  x="507.38" y="1743.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1,290 samples, 2.97%)</title><rect x="61.4" y="1829" width="35.0" height="15.0" fill="rgb(212,29,38)" rx="2" ry="2" />
<text  x="64.35" y="1839.5" >cl..</text>
</g>
<g >
<title>CompositorTileW (8 samples, 0.02%)</title><rect x="16.8" y="1845" width="0.2" height="15.0" fill="rgb(227,8,36)" rx="2" ry="2" />
<text  x="19.80" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1733" width="0.1" height="15.0" fill="rgb(235,221,17)" rx="2" ry="2" />
<text  x="692.50" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36 samples, 0.08%)</title><rect x="545.9" y="1509" width="0.9" height="15.0" fill="rgb(252,155,26)" rx="2" ry="2" />
<text  x="548.86" y="1519.5" ></text>
</g>
<g >
<title>Field::Field (4 samples, 0.01%)</title><rect x="473.1" y="1765" width="0.1" height="15.0" fill="rgb(248,195,12)" rx="2" ry="2" />
<text  x="476.05" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="231.1" y="1749" width="0.1" height="15.0" fill="rgb(237,41,13)" rx="2" ry="2" />
<text  x="234.10" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1765" width="0.1" height="15.0" fill="rgb(249,45,28)" rx="2" ry="2" />
<text  x="216.80" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,195 samples, 2.75%)</title><rect x="1152.7" y="1669" width="32.5" height="15.0" fill="rgb(232,109,41)" rx="2" ry="2" />
<text  x="1155.74" y="1679.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (339 samples, 0.78%)</title><rect x="350.5" y="1493" width="9.2" height="15.0" fill="rgb(228,14,23)" rx="2" ry="2" />
<text  x="353.50" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1717" width="0.2" height="15.0" fill="rgb(227,137,19)" rx="2" ry="2" />
<text  x="217.69" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (11 samples, 0.03%)</title><rect x="345.6" y="1557" width="0.3" height="15.0" fill="rgb(211,26,53)" rx="2" ry="2" />
<text  x="348.60" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (59 samples, 0.14%)</title><rect x="432.0" y="1637" width="1.6" height="15.0" fill="rgb(234,152,41)" rx="2" ry="2" />
<text  x="435.01" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="480.2" y="1669" width="0.6" height="15.0" fill="rgb(217,165,0)" rx="2" ry="2" />
<text  x="483.20" y="1679.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (10 samples, 0.02%)</title><rect x="424.7" y="1621" width="0.3" height="15.0" fill="rgb(221,217,37)" rx="2" ry="2" />
<text  x="427.75" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="221.2" y="1701" width="0.2" height="15.0" fill="rgb(209,152,22)" rx="2" ry="2" />
<text  x="224.22" y="1711.5" ></text>
</g>
<g >
<title>[postgres] (9 samples, 0.02%)</title><rect x="687.8" y="1765" width="0.3" height="15.0" fill="rgb(217,81,17)" rx="2" ry="2" />
<text  x="690.84" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (8 samples, 0.02%)</title><rect x="458.6" y="1637" width="0.2" height="15.0" fill="rgb(235,11,26)" rx="2" ry="2" />
<text  x="461.56" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="12.7" y="1477" width="0.3" height="15.0" fill="rgb(247,210,7)" rx="2" ry="2" />
<text  x="15.75" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (14 samples, 0.03%)</title><rect x="471.7" y="1701" width="0.3" height="15.0" fill="rgb(254,204,45)" rx="2" ry="2" />
<text  x="474.66" y="1711.5" ></text>
</g>
<g >
<title>AWT-XAWT (10 samples, 0.02%)</title><rect x="10.0" y="1845" width="0.3" height="15.0" fill="rgb(237,176,22)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="10.1" y="1669" width="0.1" height="15.0" fill="rgb(223,226,29)" rx="2" ry="2" />
<text  x="13.14" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,077 samples, 2.48%)</title><rect x="563.5" y="1669" width="29.3" height="15.0" fill="rgb(251,16,46)" rx="2" ry="2" />
<text  x="566.49" y="1679.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="60.9" y="1717" width="0.3" height="15.0" fill="rgb(221,48,47)" rx="2" ry="2" />
<text  x="63.92" y="1727.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1765" width="0.3" height="15.0" fill="rgb(236,29,34)" rx="2" ry="2" />
<text  x="229.28" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1797" width="0.1" height="15.0" fill="rgb(217,0,19)" rx="2" ry="2" />
<text  x="1192.27" y="1807.5" ></text>
</g>
<g >
<title>ntfs_attr_mst_pwrite (4 samples, 0.01%)</title><rect x="645.4" y="1813" width="0.1" height="15.0" fill="rgb(214,99,27)" rx="2" ry="2" />
<text  x="648.35" y="1823.5" ></text>
</g>
<g >
<title>[code] (160 samples, 0.37%)</title><rect x="55.3" y="1653" width="4.3" height="15.0" fill="rgb(250,37,29)" rx="2" ry="2" />
<text  x="58.26" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48 samples, 0.11%)</title><rect x="210.9" y="1733" width="1.3" height="15.0" fill="rgb(217,110,7)" rx="2" ry="2" />
<text  x="213.86" y="1743.5" ></text>
</g>
<g >
<title>CompareStrings (7 samples, 0.02%)</title><rect x="448.8" y="1669" width="0.2" height="15.0" fill="rgb(242,155,54)" rx="2" ry="2" />
<text  x="451.82" y="1679.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1749" width="4.4" height="15.0" fill="rgb(232,67,18)" rx="2" ry="2" />
<text  x="58.23" y="1759.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="679.4" y="1605" width="0.2" height="15.0" fill="rgb(221,36,52)" rx="2" ry="2" />
<text  x="682.43" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="237.5" y="1701" width="0.7" height="15.0" fill="rgb(253,194,11)" rx="2" ry="2" />
<text  x="240.51" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,100 samples, 2.54%)</title><rect x="601.9" y="1701" width="30.0" height="15.0" fill="rgb(250,94,6)" rx="2" ry="2" />
<text  x="604.94" y="1711.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="241.9" y="1797" width="0.3" height="15.0" fill="rgb(216,149,51)" rx="2" ry="2" />
<text  x="244.95" y="1807.5" ></text>
</g>
<g >
<title>[code] (24 samples, 0.06%)</title><rect x="16.0" y="1605" width="0.6" height="15.0" fill="rgb(234,82,33)" rx="2" ry="2" />
<text  x="18.98" y="1615.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (101 samples, 0.23%)</title><rect x="370.0" y="1669" width="2.7" height="15.0" fill="rgb(209,228,34)" rx="2" ry="2" />
<text  x="373.00" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (34 samples, 0.08%)</title><rect x="325.7" y="1589" width="1.0" height="15.0" fill="rgb(216,9,38)" rx="2" ry="2" />
<text  x="328.75" y="1599.5" ></text>
</g>
<g >
<title>uv_run (59 samples, 0.14%)</title><rect x="59.6" y="1781" width="1.6" height="15.0" fill="rgb(252,33,34)" rx="2" ry="2" />
<text  x="62.64" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1765" width="0.8" height="15.0" fill="rgb(242,156,31)" rx="2" ry="2" />
<text  x="15.39" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="688.6" y="1813" width="0.8" height="15.0" fill="rgb(214,198,49)" rx="2" ry="2" />
<text  x="691.63" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1749" width="0.4" height="15.0" fill="rgb(214,147,17)" rx="2" ry="2" />
<text  x="694.13" y="1759.5" ></text>
</g>
<g >
<title>CompareStrings (5 samples, 0.01%)</title><rect x="297.2" y="1621" width="0.1" height="15.0" fill="rgb(205,29,45)" rx="2" ry="2" />
<text  x="300.16" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="20.9" y="1589" width="0.2" height="15.0" fill="rgb(241,229,0)" rx="2" ry="2" />
<text  x="23.91" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="244.0" y="1781" width="0.7" height="15.0" fill="rgb(212,177,50)" rx="2" ry="2" />
<text  x="247.01" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (7 samples, 0.02%)</title><rect x="679.4" y="1637" width="0.2" height="15.0" fill="rgb(241,5,19)" rx="2" ry="2" />
<text  x="682.43" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58 samples, 0.13%)</title><rect x="53.0" y="1589" width="1.6" height="15.0" fill="rgb(244,92,37)" rx="2" ry="2" />
<text  x="56.00" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1653" width="0.2" height="15.0" fill="rgb(221,141,50)" rx="2" ry="2" />
<text  x="24.75" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1749" width="0.1" height="15.0" fill="rgb(243,44,34)" rx="2" ry="2" />
<text  x="223.90" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="239.0" y="1733" width="0.3" height="15.0" fill="rgb(220,116,25)" rx="2" ry="2" />
<text  x="242.04" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="660.3" y="1637" width="0.2" height="15.0" fill="rgb(213,62,5)" rx="2" ry="2" />
<text  x="663.29" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,115 samples, 2.57%)</title><rect x="127.5" y="1621" width="30.4" height="15.0" fill="rgb(209,190,35)" rx="2" ry="2" />
<text  x="130.52" y="1631.5" >[[..</text>
</g>
<g >
<title>[libminisql_shared.so] (8 samples, 0.02%)</title><rect x="505.1" y="1765" width="0.3" height="15.0" fill="rgb(253,145,23)" rx="2" ry="2" />
<text  x="508.15" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="236.1" y="1813" width="0.2" height="15.0" fill="rgb(225,7,31)" rx="2" ry="2" />
<text  x="239.07" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="368.8" y="1605" width="0.2" height="15.0" fill="rgb(212,89,32)" rx="2" ry="2" />
<text  x="371.83" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,197 samples, 2.76%)</title><rect x="560.2" y="1733" width="32.6" height="15.0" fill="rgb(236,130,15)" rx="2" ry="2" />
<text  x="563.22" y="1743.5" >[[..</text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (45 samples, 0.10%)</title><rect x="344.9" y="1669" width="1.2" height="15.0" fill="rgb(238,205,45)" rx="2" ry="2" />
<text  x="347.92" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="96.3" y="1541" width="0.1" height="15.0" fill="rgb(249,123,15)" rx="2" ry="2" />
<text  x="99.33" y="1551.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (28 samples, 0.06%)</title><rect x="345.2" y="1621" width="0.8" height="15.0" fill="rgb(244,81,2)" rx="2" ry="2" />
<text  x="348.25" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="20.6" y="1813" width="0.7" height="15.0" fill="rgb(232,188,48)" rx="2" ry="2" />
<text  x="23.63" y="1823.5" ></text>
</g>
<g >
<title>__poll (7 samples, 0.02%)</title><rect x="18.6" y="1813" width="0.2" height="15.0" fill="rgb(229,64,32)" rx="2" ry="2" />
<text  x="21.65" y="1823.5" ></text>
</g>
<g >
<title>[code] (6 samples, 0.01%)</title><rect x="58.7" y="725" width="0.2" height="15.0" fill="rgb(207,130,42)" rx="2" ry="2" />
<text  x="61.74" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (6 samples, 0.01%)</title><rect x="482.7" y="1653" width="0.1" height="15.0" fill="rgb(247,207,54)" rx="2" ry="2" />
<text  x="485.68" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1621" width="0.1" height="15.0" fill="rgb(249,189,3)" rx="2" ry="2" />
<text  x="692.50" y="1631.5" ></text>
</g>
<g >
<title>sed (5 samples, 0.01%)</title><rect x="689.7" y="1845" width="0.1" height="15.0" fill="rgb(247,148,0)" rx="2" ry="2" />
<text  x="692.71" y="1855.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;char&gt; (5 samples, 0.01%)</title><rect x="324.4" y="1509" width="0.1" height="15.0" fill="rgb(223,113,16)" rx="2" ry="2" />
<text  x="327.36" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="239.8" y="1685" width="0.2" height="15.0" fill="rgb(247,98,40)" rx="2" ry="2" />
<text  x="242.80" y="1695.5" ></text>
</g>
<g >
<title>[code] (11 samples, 0.03%)</title><rect x="112.7" y="1685" width="0.3" height="15.0" fill="rgb(220,93,53)" rx="2" ry="2" />
<text  x="115.67" y="1695.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="245" width="0.1" height="15.0" fill="rgb(237,44,11)" rx="2" ry="2" />
<text  x="61.79" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;Field*, Field*, std::allocator&lt;Field&gt; &gt; (5 samples, 0.01%)</title><rect x="507.7" y="1701" width="0.1" height="15.0" fill="rgb(224,194,26)" rx="2" ry="2" />
<text  x="510.70" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75 samples, 0.17%)</title><rect x="370.4" y="1621" width="2.0" height="15.0" fill="rgb(223,29,24)" rx="2" ry="2" />
<text  x="373.41" y="1631.5" ></text>
</g>
<g >
<title>stat64 (8 samples, 0.02%)</title><rect x="158.0" y="1749" width="0.2" height="15.0" fill="rgb(249,115,15)" rx="2" ry="2" />
<text  x="161.01" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1781" width="0.1" height="15.0" fill="rgb(242,193,11)" rx="2" ry="2" />
<text  x="1192.27" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (19 samples, 0.04%)</title><rect x="468.1" y="1685" width="0.5" height="15.0" fill="rgb(247,176,48)" rx="2" ry="2" />
<text  x="471.13" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="688.8" y="1765" width="0.6" height="15.0" fill="rgb(235,2,48)" rx="2" ry="2" />
<text  x="691.76" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (12 samples, 0.03%)</title><rect x="371.4" y="1589" width="0.3" height="15.0" fill="rgb(224,150,38)" rx="2" ry="2" />
<text  x="374.38" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::end (4 samples, 0.01%)</title><rect x="505.7" y="1765" width="0.1" height="15.0" fill="rgb(208,58,19)" rx="2" ry="2" />
<text  x="508.69" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (524 samples, 1.21%)</title><rect x="40.3" y="1701" width="14.3" height="15.0" fill="rgb(212,24,10)" rx="2" ry="2" />
<text  x="43.33" y="1711.5" ></text>
</g>
<g >
<title>[perf-162284.map] (4 samples, 0.01%)</title><rect x="59.0" y="1381" width="0.1" height="15.0" fill="rgb(239,206,36)" rx="2" ry="2" />
<text  x="61.96" y="1391.5" ></text>
</g>
<g >
<title>g_hash_table_lookup (5 samples, 0.01%)</title><rect x="229.6" y="1829" width="0.1" height="15.0" fill="rgb(217,227,38)" rx="2" ry="2" />
<text  x="232.60" y="1839.5" ></text>
</g>
<g >
<title>std::mutex::lock (5 samples, 0.01%)</title><rect x="487.3" y="1685" width="0.1" height="15.0" fill="rgb(207,97,38)" rx="2" ry="2" />
<text  x="490.30" y="1695.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (11 samples, 0.03%)</title><rect x="255.9" y="1781" width="0.3" height="15.0" fill="rgb(205,192,37)" rx="2" ry="2" />
<text  x="258.90" y="1791.5" ></text>
</g>
<g >
<title>BLeafEntry::operator= (20 samples, 0.05%)</title><rect x="292.4" y="1669" width="0.6" height="15.0" fill="rgb(226,162,7)" rx="2" ry="2" />
<text  x="295.43" y="1679.5" ></text>
</g>
<g >
<title>DBStorageEngine::DBStorageEngine (4 samples, 0.01%)</title><rect x="511.1" y="1781" width="0.1" height="15.0" fill="rgb(245,23,26)" rx="2" ry="2" />
<text  x="514.10" y="1791.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (46 samples, 0.11%)</title><rect x="409.1" y="1685" width="1.3" height="15.0" fill="rgb(209,46,30)" rx="2" ry="2" />
<text  x="412.11" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="1150.5" y="1381" width="0.4" height="15.0" fill="rgb(211,77,2)" rx="2" ry="2" />
<text  x="1153.51" y="1391.5" ></text>
</g>
<g >
<title>[perf-162284.map] (8 samples, 0.02%)</title><rect x="59.2" y="1397" width="0.2" height="15.0" fill="rgb(227,137,11)" rx="2" ry="2" />
<text  x="62.17" y="1407.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::end (4 samples, 0.01%)</title><rect x="485.3" y="1717" width="0.1" height="15.0" fill="rgb(250,150,33)" rx="2" ry="2" />
<text  x="488.32" y="1727.5" ></text>
</g>
<g >
<title>DiskManager::ReadPage (22 samples, 0.05%)</title><rect x="480.2" y="1733" width="0.6" height="15.0" fill="rgb(212,118,40)" rx="2" ry="2" />
<text  x="483.20" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,204 samples, 2.78%)</title><rect x="560.0" y="1749" width="32.8" height="15.0" fill="rgb(222,135,13)" rx="2" ry="2" />
<text  x="563.03" y="1759.5" >[[..</text>
</g>
<g >
<title>[libjvm.so] (7 samples, 0.02%)</title><rect x="22.0" y="1797" width="0.2" height="15.0" fill="rgb(242,98,5)" rx="2" ry="2" />
<text  x="24.99" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.03%)</title><rect x="216.8" y="1813" width="0.3" height="15.0" fill="rgb(230,54,2)" rx="2" ry="2" />
<text  x="219.76" y="1823.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (10 samples, 0.02%)</title><rect x="225.9" y="1733" width="0.3" height="15.0" fill="rgb(241,27,7)" rx="2" ry="2" />
<text  x="228.90" y="1743.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (110 samples, 0.25%)</title><rect x="310.5" y="1605" width="3.0" height="15.0" fill="rgb(235,67,34)" rx="2" ry="2" />
<text  x="313.49" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1653" width="0.2" height="15.0" fill="rgb(235,39,48)" rx="2" ry="2" />
<text  x="691.25" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.8" y="1813" width="0.1" height="15.0" fill="rgb(233,110,24)" rx="2" ry="2" />
<text  x="17.79" y="1823.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="23.9" y="1669" width="0.1" height="15.0" fill="rgb(236,127,42)" rx="2" ry="2" />
<text  x="26.87" y="1679.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (11 samples, 0.03%)</title><rect x="557.7" y="1781" width="0.3" height="15.0" fill="rgb(236,51,15)" rx="2" ry="2" />
<text  x="560.69" y="1791.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (48 samples, 0.11%)</title><rect x="464.6" y="1685" width="1.3" height="15.0" fill="rgb(252,54,49)" rx="2" ry="2" />
<text  x="467.59" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (645 samples, 1.49%)</title><rect x="1167.7" y="1621" width="17.5" height="15.0" fill="rgb(254,120,1)" rx="2" ry="2" />
<text  x="1170.70" y="1631.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::GetEntrySize (4 samples, 0.01%)</title><rect x="293.4" y="1653" width="0.1" height="15.0" fill="rgb(209,137,35)" rx="2" ry="2" />
<text  x="296.38" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.04%)</title><rect x="633.7" y="1813" width="0.4" height="15.0" fill="rgb(250,220,31)" rx="2" ry="2" />
<text  x="636.66" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (11 samples, 0.03%)</title><rect x="12.7" y="1525" width="0.3" height="15.0" fill="rgb(235,169,47)" rx="2" ry="2" />
<text  x="15.72" y="1535.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (27 samples, 0.06%)</title><rect x="459.2" y="1605" width="0.8" height="15.0" fill="rgb(229,194,1)" rx="2" ry="2" />
<text  x="462.23" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1733" width="0.3" height="15.0" fill="rgb(232,15,26)" rx="2" ry="2" />
<text  x="17.95" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="689.4" y="1813" width="0.2" height="15.0" fill="rgb(220,102,22)" rx="2" ry="2" />
<text  x="692.44" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (6 samples, 0.01%)</title><rect x="392.8" y="1557" width="0.2" height="15.0" fill="rgb(210,138,18)" rx="2" ry="2" />
<text  x="395.79" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_S_do_relocate (9 samples, 0.02%)</title><rect x="507.6" y="1717" width="0.2" height="15.0" fill="rgb(217,28,10)" rx="2" ry="2" />
<text  x="510.59" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303 samples, 0.70%)</title><rect x="97.9" y="1781" width="8.2" height="15.0" fill="rgb(253,1,6)" rx="2" ry="2" />
<text  x="100.91" y="1791.5" ></text>
</g>
<g >
<title>v8::Function::Call (26 samples, 0.06%)</title><rect x="60.1" y="1733" width="0.7" height="15.0" fill="rgb(206,71,18)" rx="2" ry="2" />
<text  x="63.10" y="1743.5" ></text>
</g>
<g >
<title>[postgres] (7 samples, 0.02%)</title><rect x="687.9" y="1733" width="0.2" height="15.0" fill="rgb(214,178,18)" rx="2" ry="2" />
<text  x="690.86" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,191 samples, 2.75%)</title><rect x="125.5" y="1653" width="32.4" height="15.0" fill="rgb(212,154,0)" rx="2" ry="2" />
<text  x="128.46" y="1663.5" >[[..</text>
</g>
<g >
<title>__pthread_mutex_lock (11 samples, 0.03%)</title><rect x="121.5" y="1749" width="0.3" height="15.0" fill="rgb(225,145,50)" rx="2" ry="2" />
<text  x="124.54" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30 samples, 0.07%)</title><rect x="1150.1" y="1461" width="0.8" height="15.0" fill="rgb(220,37,52)" rx="2" ry="2" />
<text  x="1153.10" y="1471.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1797" width="1.3" height="15.0" fill="rgb(211,111,18)" rx="2" ry="2" />
<text  x="14.12" y="1807.5" ></text>
</g>
<g >
<title>Field::GetData (17 samples, 0.04%)</title><rect x="299.0" y="1621" width="0.4" height="15.0" fill="rgb(225,70,52)" rx="2" ry="2" />
<text  x="301.98" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,238 samples, 2.85%)</title><rect x="124.2" y="1685" width="33.7" height="15.0" fill="rgb(236,85,11)" rx="2" ry="2" />
<text  x="127.18" y="1695.5" >[[..</text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (4 samples, 0.01%)</title><rect x="389.7" y="1637" width="0.2" height="15.0" fill="rgb(236,207,3)" rx="2" ry="2" />
<text  x="392.74" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (5 samples, 0.01%)</title><rect x="321.9" y="1589" width="0.1" height="15.0" fill="rgb(233,16,41)" rx="2" ry="2" />
<text  x="324.88" y="1599.5" ></text>
</g>
<g >
<title>postgres (18 samples, 0.04%)</title><rect x="687.7" y="1845" width="0.5" height="15.0" fill="rgb(219,81,39)" rx="2" ry="2" />
<text  x="690.67" y="1855.5" ></text>
</g>
<g >
<title>ntfs_pwrite (5 samples, 0.01%)</title><rect x="657.6" y="1813" width="0.2" height="15.0" fill="rgb(224,152,47)" rx="2" ry="2" />
<text  x="660.62" y="1823.5" ></text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="57.8" y="1205" width="1.1" height="15.0" fill="rgb(254,45,38)" rx="2" ry="2" />
<text  x="60.81" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="22.6" y="1685" width="0.1" height="15.0" fill="rgb(205,84,38)" rx="2" ry="2" />
<text  x="25.59" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1797" width="0.2" height="15.0" fill="rgb(217,168,54)" rx="2" ry="2" />
<text  x="693.91" y="1807.5" ></text>
</g>
<g >
<title>Field::~Field (96 samples, 0.22%)</title><rect x="401.6" y="1653" width="2.6" height="15.0" fill="rgb(243,213,54)" rx="2" ry="2" />
<text  x="404.63" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="238.2" y="1781" width="0.6" height="15.0" fill="rgb(205,225,23)" rx="2" ry="2" />
<text  x="241.22" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1733" width="34.0" height="15.0" fill="rgb(252,20,50)" rx="2" ry="2" />
<text  x="1154.22" y="1743.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="1187.6" y="1797" width="0.2" height="15.0" fill="rgb(234,212,36)" rx="2" ry="2" />
<text  x="1190.58" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (188 samples, 0.43%)</title><rect x="1180.1" y="1477" width="5.1" height="15.0" fill="rgb(227,172,26)" rx="2" ry="2" />
<text  x="1183.13" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="373.4" y="1621" width="0.3" height="15.0" fill="rgb(249,130,53)" rx="2" ry="2" />
<text  x="376.40" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (4 samples, 0.01%)</title><rect x="427.7" y="1653" width="0.1" height="15.0" fill="rgb(240,101,9)" rx="2" ry="2" />
<text  x="430.74" y="1663.5" ></text>
</g>
<g >
<title>ntfs_rl_get_compressed_size (5 samples, 0.01%)</title><rect x="657.8" y="1813" width="0.1" height="15.0" fill="rgb(247,126,20)" rx="2" ry="2" />
<text  x="660.76" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1685" width="0.2" height="15.0" fill="rgb(228,44,7)" rx="2" ry="2" />
<text  x="57.80" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (7 samples, 0.02%)</title><rect x="321.7" y="1573" width="0.2" height="15.0" fill="rgb(233,203,26)" rx="2" ry="2" />
<text  x="324.69" y="1583.5" ></text>
</g>
<g >
<title>[code] (13 samples, 0.03%)</title><rect x="158.5" y="1717" width="0.3" height="15.0" fill="rgb(247,16,52)" rx="2" ry="2" />
<text  x="161.48" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1669" width="0.1" height="15.0" fill="rgb(216,36,27)" rx="2" ry="2" />
<text  x="219.65" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="359.5" y="1253" width="0.2" height="15.0" fill="rgb(248,15,38)" rx="2" ry="2" />
<text  x="362.50" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1185.1" y="1301" width="0.1" height="15.0" fill="rgb(236,113,21)" rx="2" ry="2" />
<text  x="1188.10" y="1311.5" ></text>
</g>
<g >
<title>ntfs_inode_open (5 samples, 0.01%)</title><rect x="676.6" y="1829" width="0.2" height="15.0" fill="rgb(243,209,49)" rx="2" ry="2" />
<text  x="679.63" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="410.6" y="1365" width="0.1" height="15.0" fill="rgb(243,87,4)" rx="2" ry="2" />
<text  x="413.60" y="1375.5" ></text>
</g>
<g >
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Debounce::Debounce (281 samples, 0.65%)</title><rect x="205.4" y="1813" width="7.7" height="15.0" fill="rgb(229,100,12)" rx="2" ry="2" />
<text  x="208.45" y="1823.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (4 samples, 0.01%)</title><rect x="678.3" y="1829" width="0.1" height="15.0" fill="rgb(250,27,50)" rx="2" ry="2" />
<text  x="681.29" y="1839.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (4 samples, 0.01%)</title><rect x="232.3" y="1765" width="0.1" height="15.0" fill="rgb(220,174,34)" rx="2" ry="2" />
<text  x="235.29" y="1775.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (7 samples, 0.02%)</title><rect x="474.6" y="1701" width="0.2" height="15.0" fill="rgb(241,14,47)" rx="2" ry="2" />
<text  x="477.57" y="1711.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1701" width="0.8" height="15.0" fill="rgb(227,31,49)" rx="2" ry="2" />
<text  x="15.39" y="1711.5" ></text>
</g>
<g >
<title>[code] (14 samples, 0.03%)</title><rect x="16.2" y="1557" width="0.4" height="15.0" fill="rgb(216,220,31)" rx="2" ry="2" />
<text  x="19.20" y="1567.5" ></text>
</g>
<g >
<title>kworker/0:1-eve (62 samples, 0.14%)</title><rect x="236.5" y="1845" width="1.7" height="15.0" fill="rgb(211,134,22)" rx="2" ry="2" />
<text  x="239.48" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1797" width="0.4" height="15.0" fill="rgb(215,0,47)" rx="2" ry="2" />
<text  x="218.02" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="238.5" y="1701" width="0.3" height="15.0" fill="rgb(214,45,26)" rx="2" ry="2" />
<text  x="241.55" y="1711.5" ></text>
</g>
<g >
<title>ntfs_runlists_merge (10 samples, 0.02%)</title><rect x="657.9" y="1813" width="0.3" height="15.0" fill="rgb(227,15,43)" rx="2" ry="2" />
<text  x="660.95" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28 samples, 0.06%)</title><rect x="688.7" y="1781" width="0.7" height="15.0" fill="rgb(211,72,2)" rx="2" ry="2" />
<text  x="691.65" y="1791.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (9 samples, 0.02%)</title><rect x="116.6" y="1717" width="0.3" height="15.0" fill="rgb(238,133,0)" rx="2" ry="2" />
<text  x="119.62" y="1727.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::GetFirstChunkFor (6 samples, 0.01%)</title><rect x="425.7" y="1637" width="0.1" height="15.0" fill="rgb(216,172,12)" rx="2" ry="2" />
<text  x="428.67" y="1647.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.02%)</title><rect x="22.0" y="1829" width="0.2" height="15.0" fill="rgb(213,121,52)" rx="2" ry="2" />
<text  x="24.99" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="238.4" y="1765" width="0.4" height="15.0" fill="rgb(222,25,6)" rx="2" ry="2" />
<text  x="241.36" y="1775.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (7 samples, 0.02%)</title><rect x="255.6" y="1781" width="0.2" height="15.0" fill="rgb(224,130,38)" rx="2" ry="2" />
<text  x="258.60" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="1188.8" y="1829" width="0.1" height="15.0" fill="rgb(254,10,24)" rx="2" ry="2" />
<text  x="1191.78" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="239.4" y="1797" width="0.6" height="15.0" fill="rgb(245,42,51)" rx="2" ry="2" />
<text  x="242.36" y="1807.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (8 samples, 0.02%)</title><rect x="17.6" y="1717" width="0.2" height="15.0" fill="rgb(217,14,16)" rx="2" ry="2" />
<text  x="20.62" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="679.4" y="1685" width="0.2" height="15.0" fill="rgb(216,219,51)" rx="2" ry="2" />
<text  x="682.35" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1621" width="0.1" height="15.0" fill="rgb(222,51,4)" rx="2" ry="2" />
<text  x="1192.27" y="1631.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4 samples, 0.01%)</title><rect x="255.8" y="1781" width="0.1" height="15.0" fill="rgb(210,48,44)" rx="2" ry="2" />
<text  x="258.79" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1717" width="0.1" height="15.0" fill="rgb(250,65,41)" rx="2" ry="2" />
<text  x="238.23" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (4 samples, 0.01%)</title><rect x="482.1" y="1717" width="0.1" height="15.0" fill="rgb(227,198,26)" rx="2" ry="2" />
<text  x="485.11" y="1727.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (766 samples, 1.77%)</title><rect x="379.8" y="1669" width="20.9" height="15.0" fill="rgb(221,39,40)" rx="2" ry="2" />
<text  x="382.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;char*&gt; (6 samples, 0.01%)</title><rect x="327.5" y="1589" width="0.2" height="15.0" fill="rgb(250,173,10)" rx="2" ry="2" />
<text  x="330.51" y="1599.5" ></text>
</g>
<g >
<title>Field::GetData (5 samples, 0.01%)</title><rect x="416.7" y="1653" width="0.1" height="15.0" fill="rgb(211,61,41)" rx="2" ry="2" />
<text  x="419.67" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.03%)</title><rect x="556.1" y="1749" width="0.3" height="15.0" fill="rgb(220,113,41)" rx="2" ry="2" />
<text  x="559.06" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="61.0" y="1669" width="0.2" height="15.0" fill="rgb(210,102,26)" rx="2" ry="2" />
<text  x="64.00" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (25 samples, 0.06%)</title><rect x="494.2" y="1621" width="0.7" height="15.0" fill="rgb(248,171,20)" rx="2" ry="2" />
<text  x="497.24" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (894 samples, 2.06%)</title><rect x="265.1" y="1653" width="24.3" height="15.0" fill="rgb(213,117,1)" rx="2" ry="2" />
<text  x="268.07" y="1663.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="239.3" y="1829" width="0.7" height="15.0" fill="rgb(218,20,17)" rx="2" ry="2" />
<text  x="242.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="14.6" y="1829" width="0.2" height="15.0" fill="rgb(230,196,23)" rx="2" ry="2" />
<text  x="17.60" y="1839.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (21 samples, 0.05%)</title><rect x="479.5" y="1685" width="0.6" height="15.0" fill="rgb(247,111,9)" rx="2" ry="2" />
<text  x="482.52" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="480.2" y="1621" width="0.6" height="15.0" fill="rgb(230,139,38)" rx="2" ry="2" />
<text  x="483.20" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="12.1" y="1461" width="0.2" height="15.0" fill="rgb(248,5,20)" rx="2" ry="2" />
<text  x="15.15" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1749" width="0.4" height="15.0" fill="rgb(240,47,24)" rx="2" ry="2" />
<text  x="218.02" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (206 samples, 0.47%)</title><rect x="100.5" y="1701" width="5.6" height="15.0" fill="rgb(224,196,2)" rx="2" ry="2" />
<text  x="103.54" y="1711.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1701" width="0.2" height="15.0" fill="rgb(238,138,13)" rx="2" ry="2" />
<text  x="26.79" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="96.3" y="1573" width="0.1" height="15.0" fill="rgb(217,77,45)" rx="2" ry="2" />
<text  x="99.33" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="690.6" y="1813" width="0.1" height="15.0" fill="rgb(219,170,14)" rx="2" ry="2" />
<text  x="693.64" y="1823.5" ></text>
</g>
<g >
<title>std::mutex::lock (5 samples, 0.01%)</title><rect x="367.5" y="1621" width="0.2" height="15.0" fill="rgb(230,184,17)" rx="2" ry="2" />
<text  x="370.52" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (310 samples, 0.71%)</title><rect x="46.1" y="1653" width="8.5" height="15.0" fill="rgb(218,151,29)" rx="2" ry="2" />
<text  x="49.15" y="1663.5" ></text>
</g>
<g >
<title>CompareStrings (6 samples, 0.01%)</title><rect x="378.5" y="1637" width="0.2" height="15.0" fill="rgb(226,147,17)" rx="2" ry="2" />
<text  x="381.51" y="1647.5" ></text>
</g>
<g >
<title>ieee80211_rx_napi (5 samples, 0.01%)</title><rect x="235.1" y="1685" width="0.1" height="15.0" fill="rgb(247,59,51)" rx="2" ry="2" />
<text  x="238.07" y="1695.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (4 samples, 0.01%)</title><rect x="514.1" y="1829" width="0.1" height="15.0" fill="rgb(237,42,24)" rx="2" ry="2" />
<text  x="517.09" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (8 samples, 0.02%)</title><rect x="469.3" y="1653" width="0.2" height="15.0" fill="rgb(231,224,41)" rx="2" ry="2" />
<text  x="472.30" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1685" width="0.1" height="15.0" fill="rgb(243,149,14)" rx="2" ry="2" />
<text  x="233.22" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (7 samples, 0.02%)</title><rect x="393.8" y="1589" width="0.2" height="15.0" fill="rgb(231,8,16)" rx="2" ry="2" />
<text  x="396.82" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="10.7" y="1733" width="0.4" height="15.0" fill="rgb(244,136,1)" rx="2" ry="2" />
<text  x="13.65" y="1743.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (4 samples, 0.01%)</title><rect x="636.6" y="1813" width="0.1" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="639.60" y="1823.5" ></text>
</g>
<g >
<title>runtime.mstart1 (5 samples, 0.01%)</title><rect x="213.1" y="1781" width="0.1" height="15.0" fill="rgb(216,174,51)" rx="2" ry="2" />
<text  x="216.09" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (6 samples, 0.01%)</title><rect x="409.8" y="1557" width="0.2" height="15.0" fill="rgb(218,69,46)" rx="2" ry="2" />
<text  x="412.79" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1717" width="0.1" height="15.0" fill="rgb(229,99,9)" rx="2" ry="2" />
<text  x="223.90" y="1727.5" ></text>
</g>
<g >
<title>iwl_pcie_rx_handle (6 samples, 0.01%)</title><rect x="235.2" y="1749" width="0.2" height="15.0" fill="rgb(210,145,40)" rx="2" ry="2" />
<text  x="238.20" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="235.2" y="1797" width="0.2" height="15.0" fill="rgb(243,89,15)" rx="2" ry="2" />
<text  x="238.20" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (5 samples, 0.01%)</title><rect x="360.5" y="1557" width="0.2" height="15.0" fill="rgb(214,95,32)" rx="2" ry="2" />
<text  x="363.53" y="1567.5" ></text>
</g>
<g >
<title>kworker/3:2-eve (18 samples, 0.04%)</title><rect x="240.8" y="1845" width="0.4" height="15.0" fill="rgb(215,214,24)" rx="2" ry="2" />
<text  x="243.75" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="241.9" y="1781" width="0.3" height="15.0" fill="rgb(240,147,52)" rx="2" ry="2" />
<text  x="244.95" y="1791.5" ></text>
</g>
<g >
<title>[[vdso]] (1,245 samples, 2.87%)</title><rect x="62.6" y="1813" width="33.8" height="15.0" fill="rgb(235,162,4)" rx="2" ry="2" />
<text  x="65.57" y="1823.5" >[[..</text>
</g>
<g >
<title>[libwns_push_client.so] (6 samples, 0.01%)</title><rect x="20.7" y="1621" width="0.2" height="15.0" fill="rgb(238,163,38)" rx="2" ry="2" />
<text  x="23.69" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1781" width="0.1" height="15.0" fill="rgb(205,100,5)" rx="2" ry="2" />
<text  x="223.90" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (9 samples, 0.02%)</title><rect x="496.1" y="1621" width="0.2" height="15.0" fill="rgb(242,70,32)" rx="2" ry="2" />
<text  x="499.09" y="1631.5" ></text>
</g>
<g >
<title>ib_log_writer (14 samples, 0.03%)</title><rect x="232.1" y="1845" width="0.4" height="15.0" fill="rgb(217,35,47)" rx="2" ry="2" />
<text  x="235.10" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1685" width="0.1" height="15.0" fill="rgb(229,38,8)" rx="2" ry="2" />
<text  x="1192.27" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1669" width="0.3" height="15.0" fill="rgb(227,164,11)" rx="2" ry="2" />
<text  x="222.64" y="1679.5" ></text>
</g>
<g >
<title>Field::GetLength (4 samples, 0.01%)</title><rect x="415.8" y="1653" width="0.1" height="15.0" fill="rgb(249,183,23)" rx="2" ry="2" />
<text  x="418.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (4 samples, 0.01%)</title><rect x="360.5" y="1541" width="0.1" height="15.0" fill="rgb(218,137,0)" rx="2" ry="2" />
<text  x="363.53" y="1551.5" ></text>
</g>
<g >
<title>iwl_mvm_rx_mpdu_mq (5 samples, 0.01%)</title><rect x="235.1" y="1701" width="0.1" height="15.0" fill="rgb(219,60,18)" rx="2" ry="2" />
<text  x="238.07" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1653" width="0.2" height="15.0" fill="rgb(226,102,36)" rx="2" ry="2" />
<text  x="217.69" y="1663.5" ></text>
</g>
<g >
<title>kworker/10:1-ev (24 samples, 0.06%)</title><rect x="238.2" y="1845" width="0.6" height="15.0" fill="rgb(213,180,19)" rx="2" ry="2" />
<text  x="241.17" y="1855.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (58 samples, 0.13%)</title><rect x="488.4" y="1701" width="1.5" height="15.0" fill="rgb(249,73,0)" rx="2" ry="2" />
<text  x="491.36" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="239.1" y="1717" width="0.2" height="15.0" fill="rgb(244,120,31)" rx="2" ry="2" />
<text  x="242.06" y="1727.5" ></text>
</g>
<g >
<title>Page::WLatch (22 samples, 0.05%)</title><rect x="496.4" y="1701" width="0.6" height="15.0" fill="rgb(214,98,48)" rx="2" ry="2" />
<text  x="499.42" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="244.7" y="1781" width="0.5" height="15.0" fill="rgb(212,61,32)" rx="2" ry="2" />
<text  x="247.69" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (51 samples, 0.12%)</title><rect x="328.5" y="1589" width="1.4" height="15.0" fill="rgb(214,34,4)" rx="2" ry="2" />
<text  x="331.49" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1749" width="0.1" height="15.0" fill="rgb(216,95,30)" rx="2" ry="2" />
<text  x="1192.27" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="241.2" y="1813" width="0.7" height="15.0" fill="rgb(215,123,1)" rx="2" ry="2" />
<text  x="244.24" y="1823.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (11 samples, 0.03%)</title><rect x="307.5" y="1541" width="0.3" height="15.0" fill="rgb(237,89,37)" rx="2" ry="2" />
<text  x="310.47" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="56.2" y="1413" width="0.1" height="15.0" fill="rgb(205,178,35)" rx="2" ry="2" />
<text  x="59.16" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1605" width="0.1" height="15.0" fill="rgb(254,138,1)" rx="2" ry="2" />
<text  x="23.25" y="1615.5" ></text>
</g>
<g >
<title>_int_malloc (123 samples, 0.28%)</title><rect x="660.7" y="1829" width="3.4" height="15.0" fill="rgb(230,12,17)" rx="2" ry="2" />
<text  x="663.75" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="220.7" y="1669" width="0.1" height="15.0" fill="rgb(225,140,11)" rx="2" ry="2" />
<text  x="223.71" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1653" width="0.1" height="15.0" fill="rgb(247,176,6)" rx="2" ry="2" />
<text  x="23.25" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="480.3" y="1557" width="0.5" height="15.0" fill="rgb(248,203,35)" rx="2" ry="2" />
<text  x="483.29" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1701" width="0.2" height="15.0" fill="rgb(245,179,5)" rx="2" ry="2" />
<text  x="223.62" y="1711.5" ></text>
</g>
<g >
<title>ntfs_index_lookup (7 samples, 0.02%)</title><rect x="648.6" y="1813" width="0.2" height="15.0" fill="rgb(246,164,19)" rx="2" ry="2" />
<text  x="651.59" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="241.5" y="1765" width="0.4" height="15.0" fill="rgb(247,8,35)" rx="2" ry="2" />
<text  x="244.49" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="241.8" y="1685" width="0.1" height="15.0" fill="rgb(213,84,2)" rx="2" ry="2" />
<text  x="244.76" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (17 samples, 0.04%)</title><rect x="495.2" y="1685" width="0.5" height="15.0" fill="rgb(235,181,9)" rx="2" ry="2" />
<text  x="498.25" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="480.4" y="1525" width="0.4" height="15.0" fill="rgb(250,224,33)" rx="2" ry="2" />
<text  x="483.45" y="1535.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="679.4" y="1589" width="0.2" height="15.0" fill="rgb(254,225,1)" rx="2" ry="2" />
<text  x="682.43" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="215.1" y="1685" width="0.3" height="15.0" fill="rgb(212,38,31)" rx="2" ry="2" />
<text  x="218.10" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1733" width="0.2" height="15.0" fill="rgb(254,54,15)" rx="2" ry="2" />
<text  x="24.75" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="243.4" y="1813" width="0.6" height="15.0" fill="rgb(240,139,9)" rx="2" ry="2" />
<text  x="246.44" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (9 samples, 0.02%)</title><rect x="376.3" y="1589" width="0.2" height="15.0" fill="rgb(206,118,50)" rx="2" ry="2" />
<text  x="379.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (7 samples, 0.02%)</title><rect x="484.8" y="1605" width="0.2" height="15.0" fill="rgb(210,74,51)" rx="2" ry="2" />
<text  x="487.77" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="546.6" y="1461" width="0.2" height="15.0" fill="rgb(241,127,4)" rx="2" ry="2" />
<text  x="549.57" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="1187.6" y="1765" width="0.2" height="15.0" fill="rgb(211,164,44)" rx="2" ry="2" />
<text  x="1190.58" y="1775.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (17 samples, 0.04%)</title><rect x="504.5" y="1717" width="0.5" height="15.0" fill="rgb(211,203,32)" rx="2" ry="2" />
<text  x="507.52" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (339 samples, 0.78%)</title><rect x="96.9" y="1813" width="9.2" height="15.0" fill="rgb(217,123,45)" rx="2" ry="2" />
<text  x="99.93" y="1823.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, char&gt; (6 samples, 0.01%)</title><rect x="432.6" y="1573" width="0.1" height="15.0" fill="rgb(224,170,36)" rx="2" ry="2" />
<text  x="435.58" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="20.9" y="1605" width="0.2" height="15.0" fill="rgb(205,182,36)" rx="2" ry="2" />
<text  x="23.91" y="1615.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="115.5" y="1733" width="0.2" height="15.0" fill="rgb(216,59,43)" rx="2" ry="2" />
<text  x="118.53" y="1743.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="117" width="0.1" height="15.0" fill="rgb(205,47,9)" rx="2" ry="2" />
<text  x="61.79" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="682.8" y="1781" width="0.5" height="15.0" fill="rgb(218,90,42)" rx="2" ry="2" />
<text  x="685.83" y="1791.5" ></text>
</g>
<g >
<title>Field::GetData (7 samples, 0.02%)</title><rect x="449.1" y="1669" width="0.2" height="15.0" fill="rgb(234,16,27)" rx="2" ry="2" />
<text  x="452.06" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (8 samples, 0.02%)</title><rect x="446.9" y="1637" width="0.2" height="15.0" fill="rgb(218,1,29)" rx="2" ry="2" />
<text  x="449.89" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (15 samples, 0.03%)</title><rect x="390.5" y="1637" width="0.4" height="15.0" fill="rgb(223,163,2)" rx="2" ry="2" />
<text  x="393.53" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (545 samples, 1.26%)</title><rect x="274.6" y="1557" width="14.8" height="15.0" fill="rgb(250,90,31)" rx="2" ry="2" />
<text  x="277.56" y="1567.5" ></text>
</g>
<g >
<title>__pthread_rwlock_unlock (9 samples, 0.02%)</title><rect x="521.9" y="1797" width="0.2" height="15.0" fill="rgb(243,152,23)" rx="2" ry="2" />
<text  x="524.90" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1701" width="0.1" height="15.0" fill="rgb(252,200,30)" rx="2" ry="2" />
<text  x="238.23" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (39 samples, 0.09%)</title><rect x="446.7" y="1669" width="1.1" height="15.0" fill="rgb(230,227,23)" rx="2" ry="2" />
<text  x="449.72" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="683.0" y="1733" width="0.3" height="15.0" fill="rgb(228,114,0)" rx="2" ry="2" />
<text  x="686.00" y="1743.5" ></text>
</g>
<g >
<title>Field::GetLength (9 samples, 0.02%)</title><rect x="449.3" y="1669" width="0.2" height="15.0" fill="rgb(248,181,10)" rx="2" ry="2" />
<text  x="452.25" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="410.6" y="1397" width="0.1" height="15.0" fill="rgb(243,109,32)" rx="2" ry="2" />
<text  x="413.60" y="1407.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (35 samples, 0.08%)</title><rect x="469.0" y="1717" width="0.9" height="15.0" fill="rgb(243,213,22)" rx="2" ry="2" />
<text  x="471.97" y="1727.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (4 samples, 0.01%)</title><rect x="472.6" y="1733" width="0.2" height="15.0" fill="rgb(231,15,38)" rx="2" ry="2" />
<text  x="475.64" y="1743.5" ></text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="377.7" y="1621" width="0.1" height="15.0" fill="rgb(253,65,13)" rx="2" ry="2" />
<text  x="380.72" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (34 samples, 0.08%)</title><rect x="445.4" y="1653" width="1.0" height="15.0" fill="rgb(219,222,25)" rx="2" ry="2" />
<text  x="448.45" y="1663.5" ></text>
</g>
<g >
<title>IndexKeyComparator::operator (1,085 samples, 2.50%)</title><rect x="377.0" y="1685" width="29.5" height="15.0" fill="rgb(211,189,40)" rx="2" ry="2" />
<text  x="379.99" y="1695.5" >In..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="243.4" y="1797" width="0.6" height="15.0" fill="rgb(240,62,14)" rx="2" ry="2" />
<text  x="246.44" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (285 samples, 0.66%)</title><rect x="197.7" y="1637" width="7.7" height="15.0" fill="rgb(209,106,21)" rx="2" ry="2" />
<text  x="200.67" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1653" width="0.1" height="15.0" fill="rgb(243,36,6)" rx="2" ry="2" />
<text  x="1192.27" y="1663.5" ></text>
</g>
<g >
<title>[code] (127 samples, 0.29%)</title><rect x="56.0" y="1509" width="3.4" height="15.0" fill="rgb(217,100,7)" rx="2" ry="2" />
<text  x="58.97" y="1519.5" ></text>
</g>
<g >
<title>[code] (26 samples, 0.06%)</title><rect x="58.2" y="981" width="0.7" height="15.0" fill="rgb(215,116,25)" rx="2" ry="2" />
<text  x="61.22" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="682.9" y="1765" width="0.4" height="15.0" fill="rgb(228,227,16)" rx="2" ry="2" />
<text  x="685.86" y="1775.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.01%)</title><rect x="16.9" y="1829" width="0.1" height="15.0" fill="rgb(210,170,48)" rx="2" ry="2" />
<text  x="19.88" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="13.3" y="1733" width="0.5" height="15.0" fill="rgb(205,20,54)" rx="2" ry="2" />
<text  x="16.35" y="1743.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (4 samples, 0.01%)</title><rect x="440.4" y="1653" width="0.1" height="15.0" fill="rgb(223,189,40)" rx="2" ry="2" />
<text  x="443.44" y="1663.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (4 samples, 0.01%)</title><rect x="460.8" y="1637" width="0.1" height="15.0" fill="rgb(253,190,41)" rx="2" ry="2" />
<text  x="463.84" y="1647.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (55 samples, 0.13%)</title><rect x="451.8" y="1621" width="1.5" height="15.0" fill="rgb(250,153,15)" rx="2" ry="2" />
<text  x="454.81" y="1631.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="309" width="0.1" height="15.0" fill="rgb(208,165,0)" rx="2" ry="2" />
<text  x="61.79" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (5 samples, 0.01%)</title><rect x="456.3" y="1669" width="0.2" height="15.0" fill="rgb(216,127,20)" rx="2" ry="2" />
<text  x="459.32" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="244.7" y="1829" width="0.5" height="15.0" fill="rgb(216,152,6)" rx="2" ry="2" />
<text  x="247.69" y="1839.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.01%)</title><rect x="430.9" y="1573" width="0.2" height="15.0" fill="rgb(233,186,29)" rx="2" ry="2" />
<text  x="433.95" y="1583.5" ></text>
</g>
<g >
<title>__libc_start_main (8,163 samples, 18.82%)</title><rect x="289.4" y="1829" width="222.0" height="15.0" fill="rgb(218,199,8)" rx="2" ry="2" />
<text  x="292.41" y="1839.5" >__libc_start_main</text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (6 samples, 0.01%)</title><rect x="502.2" y="1637" width="0.1" height="15.0" fill="rgb(206,108,22)" rx="2" ry="2" />
<text  x="505.15" y="1647.5" ></text>
</g>
<g >
<title>[code] (35 samples, 0.08%)</title><rect x="58.0" y="1013" width="0.9" height="15.0" fill="rgb(240,16,49)" rx="2" ry="2" />
<text  x="60.98" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="234.9" y="1813" width="0.3" height="15.0" fill="rgb(216,228,21)" rx="2" ry="2" />
<text  x="237.93" y="1823.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="15.4" y="1797" width="1.4" height="15.0" fill="rgb(214,176,23)" rx="2" ry="2" />
<text  x="18.41" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="235.7" y="1797" width="0.3" height="15.0" fill="rgb(237,147,30)" rx="2" ry="2" />
<text  x="238.75" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (85 samples, 0.20%)</title><rect x="397.7" y="1637" width="2.3" height="15.0" fill="rgb(249,83,30)" rx="2" ry="2" />
<text  x="400.69" y="1647.5" ></text>
</g>
<g >
<title>gdbus (201 samples, 0.46%)</title><rect x="218.4" y="1845" width="5.4" height="15.0" fill="rgb(250,181,52)" rx="2" ry="2" />
<text  x="221.37" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (8 samples, 0.02%)</title><rect x="446.9" y="1621" width="0.2" height="15.0" fill="rgb(223,103,0)" rx="2" ry="2" />
<text  x="449.89" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="231.7" y="1797" width="0.2" height="15.0" fill="rgb(220,47,16)" rx="2" ry="2" />
<text  x="234.69" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (7 samples, 0.02%)</title><rect x="397.2" y="1589" width="0.2" height="15.0" fill="rgb(240,221,49)" rx="2" ry="2" />
<text  x="400.20" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="239.2" y="1685" width="0.1" height="15.0" fill="rgb(240,165,35)" rx="2" ry="2" />
<text  x="242.23" y="1695.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::GetFirstChunkFor (7 samples, 0.02%)</title><rect x="308.4" y="1557" width="0.2" height="15.0" fill="rgb(234,141,19)" rx="2" ry="2" />
<text  x="311.42" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="235.8" y="1669" width="0.2" height="15.0" fill="rgb(246,30,4)" rx="2" ry="2" />
<text  x="238.80" y="1679.5" ></text>
</g>
<g >
<title>ksoftirqd/3 (4 samples, 0.01%)</title><rect x="236.3" y="1845" width="0.2" height="15.0" fill="rgb(213,167,19)" rx="2" ry="2" />
<text  x="239.34" y="1855.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="297.6" y="1621" width="0.1" height="15.0" fill="rgb(212,76,29)" rx="2" ry="2" />
<text  x="300.60" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (15 samples, 0.03%)</title><rect x="495.9" y="1653" width="0.4" height="15.0" fill="rgb(246,28,32)" rx="2" ry="2" />
<text  x="498.93" y="1663.5" ></text>
</g>
<g >
<title>[perf-140378.map] (19 samples, 0.04%)</title><rect x="60.3" y="1653" width="0.5" height="15.0" fill="rgb(215,156,20)" rx="2" ry="2" />
<text  x="63.26" y="1663.5" ></text>
</g>
<g >
<title>main (133 samples, 0.31%)</title><rect x="683.9" y="1813" width="3.6" height="15.0" fill="rgb(210,168,48)" rx="2" ry="2" />
<text  x="686.92" y="1823.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, char&gt; (14 samples, 0.03%)</title><rect x="459.6" y="1573" width="0.3" height="15.0" fill="rgb(210,102,41)" rx="2" ry="2" />
<text  x="462.56" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61 samples, 0.14%)</title><rect x="685.8" y="1685" width="1.7" height="15.0" fill="rgb(249,11,8)" rx="2" ry="2" />
<text  x="688.82" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1653" width="0.2" height="15.0" fill="rgb(251,43,34)" rx="2" ry="2" />
<text  x="234.72" y="1663.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.01%)</title><rect x="1188.0" y="1813" width="0.1" height="15.0" fill="rgb(228,117,6)" rx="2" ry="2" />
<text  x="1191.01" y="1823.5" ></text>
</g>
<g >
<title>Field::Field (6 samples, 0.01%)</title><rect x="498.5" y="1653" width="0.1" height="15.0" fill="rgb(249,195,38)" rx="2" ry="2" />
<text  x="501.48" y="1663.5" ></text>
</g>
<g >
<title>Field::Field (28 samples, 0.06%)</title><rect x="488.7" y="1669" width="0.8" height="15.0" fill="rgb(241,125,19)" rx="2" ry="2" />
<text  x="491.72" y="1679.5" ></text>
</g>
<g >
<title>[code] (23 samples, 0.05%)</title><rect x="22.8" y="1797" width="0.6" height="15.0" fill="rgb(252,42,10)" rx="2" ry="2" />
<text  x="25.78" y="1807.5" ></text>
</g>
<g >
<title>TypeChar::CompareGreaterThan (11 samples, 0.03%)</title><rect x="448.2" y="1685" width="0.3" height="15.0" fill="rgb(230,87,47)" rx="2" ry="2" />
<text  x="451.19" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="214.2" y="1765" width="0.1" height="15.0" fill="rgb(245,47,9)" rx="2" ry="2" />
<text  x="217.18" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (741 samples, 1.71%)</title><rect x="526.7" y="1749" width="20.1" height="15.0" fill="rgb(237,17,46)" rx="2" ry="2" />
<text  x="529.69" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 0.08%)</title><rect x="684.6" y="1621" width="1.0" height="15.0" fill="rgb(223,124,6)" rx="2" ry="2" />
<text  x="687.60" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="214.2" y="1797" width="0.1" height="15.0" fill="rgb(240,99,40)" rx="2" ry="2" />
<text  x="217.18" y="1807.5" ></text>
</g>
<g >
<title>Row::~Row (75 samples, 0.17%)</title><rect x="476.2" y="1765" width="2.0" height="15.0" fill="rgb(243,46,13)" rx="2" ry="2" />
<text  x="479.21" y="1775.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (24 samples, 0.06%)</title><rect x="488.8" y="1653" width="0.7" height="15.0" fill="rgb(213,111,2)" rx="2" ry="2" />
<text  x="491.83" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_get_Tp_allocator (5 samples, 0.01%)</title><rect x="505.4" y="1765" width="0.2" height="15.0" fill="rgb(216,1,10)" rx="2" ry="2" />
<text  x="508.44" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1765" width="0.2" height="15.0" fill="rgb(236,111,46)" rx="2" ry="2" />
<text  x="24.75" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="238.5" y="1733" width="0.3" height="15.0" fill="rgb(252,99,17)" rx="2" ry="2" />
<text  x="241.49" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_Vector_base (12 samples, 0.03%)</title><rect x="508.2" y="1749" width="0.3" height="15.0" fill="rgb(227,15,52)" rx="2" ry="2" />
<text  x="511.16" y="1759.5" ></text>
</g>
<g >
<title>__xstat64 (13 samples, 0.03%)</title><rect x="410.4" y="1653" width="0.3" height="15.0" fill="rgb(222,69,1)" rx="2" ry="2" />
<text  x="413.36" y="1663.5" ></text>
</g>
<g >
<title>run_builtin (133 samples, 0.31%)</title><rect x="683.9" y="1797" width="3.6" height="15.0" fill="rgb(241,163,21)" rx="2" ry="2" />
<text  x="686.92" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1749" width="0.2" height="15.0" fill="rgb(247,18,35)" rx="2" ry="2" />
<text  x="57.63" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="342.5" y="1669" width="0.4" height="15.0" fill="rgb(248,53,38)" rx="2" ry="2" />
<text  x="345.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="373.5" y="1589" width="0.1" height="15.0" fill="rgb(245,217,45)" rx="2" ry="2" />
<text  x="376.48" y="1599.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (6 samples, 0.01%)</title><rect x="17.7" y="1685" width="0.1" height="15.0" fill="rgb(244,128,8)" rx="2" ry="2" />
<text  x="20.67" y="1695.5" ></text>
</g>
<g >
<title>__pthread_rwlock_rdlock (4 samples, 0.01%)</title><rect x="556.5" y="1781" width="0.1" height="15.0" fill="rgb(241,207,38)" rx="2" ry="2" />
<text  x="559.47" y="1791.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (10 samples, 0.02%)</title><rect x="471.8" y="1669" width="0.2" height="15.0" fill="rgb(225,181,31)" rx="2" ry="2" />
<text  x="474.77" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="229.1" y="1797" width="0.4" height="15.0" fill="rgb(222,221,41)" rx="2" ry="2" />
<text  x="232.06" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="689.5" y="1749" width="0.1" height="15.0" fill="rgb(227,140,48)" rx="2" ry="2" />
<text  x="692.47" y="1759.5" ></text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="59.7" y="1749" width="1.1" height="15.0" fill="rgb(250,193,13)" rx="2" ry="2" />
<text  x="62.69" y="1759.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="319.3" y="1605" width="0.1" height="15.0" fill="rgb(242,61,46)" rx="2" ry="2" />
<text  x="322.27" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1781" width="0.4" height="15.0" fill="rgb(251,45,8)" rx="2" ry="2" />
<text  x="218.02" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="679.5" y="1541" width="0.1" height="15.0" fill="rgb(245,122,26)" rx="2" ry="2" />
<text  x="682.46" y="1551.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.01%)</title><rect x="678.4" y="1829" width="0.1" height="15.0" fill="rgb(245,209,45)" rx="2" ry="2" />
<text  x="681.40" y="1839.5" ></text>
</g>
<g >
<title>_nv033085rm (24 samples, 0.06%)</title><rect x="1186.1" y="1829" width="0.7" height="15.0" fill="rgb(215,152,16)" rx="2" ry="2" />
<text  x="1189.11" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (49 samples, 0.11%)</title><rect x="659.2" y="1733" width="1.3" height="15.0" fill="rgb(211,205,54)" rx="2" ry="2" />
<text  x="662.20" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (555 samples, 1.28%)</title><rect x="531.7" y="1637" width="15.1" height="15.0" fill="rgb(236,167,8)" rx="2" ry="2" />
<text  x="534.75" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (5 samples, 0.01%)</title><rect x="457.5" y="1653" width="0.1" height="15.0" fill="rgb(218,217,9)" rx="2" ry="2" />
<text  x="460.49" y="1663.5" ></text>
</g>
<g >
<title>DiskManager::GetFileSize (4 samples, 0.01%)</title><rect x="347.2" y="1637" width="0.1" height="15.0" fill="rgb(251,221,4)" rx="2" ry="2" />
<text  x="350.15" y="1647.5" ></text>
</g>
<g >
<title>ib_srv_err_mon (4 samples, 0.01%)</title><rect x="232.5" y="1845" width="0.1" height="15.0" fill="rgb(225,119,41)" rx="2" ry="2" />
<text  x="235.54" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,258 samples, 2.90%)</title><rect x="558.6" y="1781" width="34.2" height="15.0" fill="rgb(253,18,32)" rx="2" ry="2" />
<text  x="561.56" y="1791.5" >[[..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (17 samples, 0.04%)</title><rect x="10.6" y="1829" width="0.5" height="15.0" fill="rgb(235,178,48)" rx="2" ry="2" />
<text  x="13.60" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1765" width="0.1" height="15.0" fill="rgb(237,121,4)" rx="2" ry="2" />
<text  x="1192.27" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1701" width="0.1" height="15.0" fill="rgb(226,53,36)" rx="2" ry="2" />
<text  x="216.80" y="1711.5" ></text>
</g>
<g >
<title>Row::SerializeTo (72 samples, 0.17%)</title><rect x="470.6" y="1733" width="2.0" height="15.0" fill="rgb(238,224,29)" rx="2" ry="2" />
<text  x="473.60" y="1743.5" ></text>
</g>
<g >
<title>BPlusTreePage::GetSize (5 samples, 0.01%)</title><rect x="343.5" y="1685" width="0.1" height="15.0" fill="rgb(227,17,15)" rx="2" ry="2" />
<text  x="346.51" y="1695.5" ></text>
</g>
<g >
<title>[libgio-2.0.so.0.6400.6] (6 samples, 0.01%)</title><rect x="218.7" y="1813" width="0.2" height="15.0" fill="rgb(215,14,49)" rx="2" ry="2" />
<text  x="221.75" y="1823.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (8 samples, 0.02%)</title><rect x="493.0" y="1701" width="0.2" height="15.0" fill="rgb(221,136,33)" rx="2" ry="2" />
<text  x="496.02" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1749" width="0.3" height="15.0" fill="rgb(206,74,17)" rx="2" ry="2" />
<text  x="222.64" y="1759.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (8 samples, 0.02%)</title><rect x="388.4" y="1637" width="0.3" height="15.0" fill="rgb(249,97,0)" rx="2" ry="2" />
<text  x="391.44" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="235.2" y="1829" width="0.2" height="15.0" fill="rgb(253,228,4)" rx="2" ry="2" />
<text  x="238.20" y="1839.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (27 samples, 0.06%)</title><rect x="499.1" y="1605" width="0.7" height="15.0" fill="rgb(221,120,29)" rx="2" ry="2" />
<text  x="502.05" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1781" width="0.8" height="15.0" fill="rgb(222,136,33)" rx="2" ry="2" />
<text  x="15.39" y="1791.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::KeyAt (12 samples, 0.03%)</title><rect x="293.7" y="1669" width="0.3" height="15.0" fill="rgb(205,71,34)" rx="2" ry="2" />
<text  x="296.65" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1765" width="0.1" height="15.0" fill="rgb(251,138,23)" rx="2" ry="2" />
<text  x="223.90" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Field&gt;::construct&lt;Field, Field const&amp;&gt; (13 samples, 0.03%)</title><rect x="506.6" y="1717" width="0.4" height="15.0" fill="rgb(250,110,47)" rx="2" ry="2" />
<text  x="509.61" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1557" width="0.3" height="15.0" fill="rgb(253,153,32)" rx="2" ry="2" />
<text  x="14.99" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (16 samples, 0.04%)</title><rect x="371.4" y="1605" width="0.4" height="15.0" fill="rgb(221,152,3)" rx="2" ry="2" />
<text  x="374.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4 samples, 0.01%)</title><rect x="413.7" y="1605" width="0.1" height="15.0" fill="rgb(214,16,16)" rx="2" ry="2" />
<text  x="416.68" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (56 samples, 0.13%)</title><rect x="411.4" y="1637" width="1.5" height="15.0" fill="rgb(253,123,29)" rx="2" ry="2" />
<text  x="414.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (21 samples, 0.05%)</title><rect x="412.3" y="1605" width="0.6" height="15.0" fill="rgb(241,35,1)" rx="2" ry="2" />
<text  x="415.35" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1813" width="0.2" height="15.0" fill="rgb(236,175,52)" rx="2" ry="2" />
<text  x="693.91" y="1823.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::RUnlock (4 samples, 0.01%)</title><rect x="368.3" y="1669" width="0.1" height="15.0" fill="rgb(252,97,53)" rx="2" ry="2" />
<text  x="371.28" y="1679.5" ></text>
</g>
<g >
<title>[libgjs.so.0.0.0] (8 samples, 0.02%)</title><rect x="227.0" y="1797" width="0.2" height="15.0" fill="rgb(210,149,30)" rx="2" ry="2" />
<text  x="229.99" y="1807.5" ></text>
</g>
<g >
<title>gsd-sharing (31 samples, 0.07%)</title><rect x="229.9" y="1845" width="0.8" height="15.0" fill="rgb(211,122,18)" rx="2" ry="2" />
<text  x="232.90" y="1855.5" ></text>
</g>
<g >
<title>CompareStrings (5 samples, 0.01%)</title><rect x="416.5" y="1653" width="0.1" height="15.0" fill="rgb(249,78,26)" rx="2" ry="2" />
<text  x="419.48" y="1663.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (15 samples, 0.03%)</title><rect x="500.5" y="1669" width="0.4" height="15.0" fill="rgb(240,82,48)" rx="2" ry="2" />
<text  x="503.47" y="1679.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (76 samples, 0.18%)</title><rect x="438.4" y="1653" width="2.0" height="15.0" fill="rgb(223,149,16)" rx="2" ry="2" />
<text  x="441.37" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.03%)</title><rect x="556.1" y="1765" width="0.3" height="15.0" fill="rgb(211,7,28)" rx="2" ry="2" />
<text  x="559.06" y="1775.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (5 samples, 0.01%)</title><rect x="506.8" y="1685" width="0.1" height="15.0" fill="rgb(224,23,32)" rx="2" ry="2" />
<text  x="509.78" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,012 samples, 2.33%)</title><rect x="130.3" y="1605" width="27.6" height="15.0" fill="rgb(237,79,1)" rx="2" ry="2" />
<text  x="133.33" y="1615.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="685.0" y="1573" width="0.6" height="15.0" fill="rgb(233,101,22)" rx="2" ry="2" />
<text  x="688.01" y="1583.5" ></text>
</g>
<g >
<title>main (9,908 samples, 22.84%)</title><rect x="245.3" y="1845" width="269.5" height="15.0" fill="rgb(222,70,19)" rx="2" ry="2" />
<text  x="248.32" y="1855.5" >main</text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1733" width="0.1" height="15.0" fill="rgb(212,89,41)" rx="2" ry="2" />
<text  x="24.37" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1797" width="0.1" height="15.0" fill="rgb(219,51,40)" rx="2" ry="2" />
<text  x="17.60" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="444.6" y="1605" width="0.4" height="15.0" fill="rgb(251,144,50)" rx="2" ry="2" />
<text  x="447.58" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="678.6" y="1765" width="0.3" height="15.0" fill="rgb(240,120,36)" rx="2" ry="2" />
<text  x="681.59" y="1775.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (10 samples, 0.02%)</title><rect x="225.9" y="1749" width="0.3" height="15.0" fill="rgb(217,112,6)" rx="2" ry="2" />
<text  x="228.90" y="1759.5" ></text>
</g>
<g >
<title>systemd-journal (39 samples, 0.09%)</title><rect x="1187.1" y="1845" width="1.1" height="15.0" fill="rgb(216,209,36)" rx="2" ry="2" />
<text  x="1190.14" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (231 samples, 0.53%)</title><rect x="283.1" y="1477" width="6.3" height="15.0" fill="rgb(225,183,52)" rx="2" ry="2" />
<text  x="286.10" y="1487.5" ></text>
</g>
<g >
<title>TypeChar::DeserializeFrom (78 samples, 0.18%)</title><rect x="451.3" y="1653" width="2.2" height="15.0" fill="rgb(211,189,23)" rx="2" ry="2" />
<text  x="454.35" y="1663.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (24 samples, 0.06%)</title><rect x="556.7" y="1781" width="0.6" height="15.0" fill="rgb(205,43,7)" rx="2" ry="2" />
<text  x="559.66" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1797" width="0.6" height="15.0" fill="rgb(213,175,52)" rx="2" ry="2" />
<text  x="16.86" y="1807.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="162.8" y="1765" width="0.2" height="15.0" fill="rgb(232,222,16)" rx="2" ry="2" />
<text  x="165.77" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.1" y="1797" width="0.1" height="15.0" fill="rgb(223,137,48)" rx="2" ry="2" />
<text  x="234.07" y="1807.5" ></text>
</g>
<g >
<title>[libntfs-3g.so.883.0.0] (9 samples, 0.02%)</title><rect x="552.0" y="1797" width="0.2" height="15.0" fill="rgb(245,93,20)" rx="2" ry="2" />
<text  x="554.95" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="241.2" y="1829" width="0.7" height="15.0" fill="rgb(246,92,2)" rx="2" ry="2" />
<text  x="244.24" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (62 samples, 0.14%)</title><rect x="545.2" y="1525" width="1.6" height="15.0" fill="rgb(229,212,25)" rx="2" ry="2" />
<text  x="548.15" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (865 samples, 1.99%)</title><rect x="181.9" y="1701" width="23.5" height="15.0" fill="rgb(241,123,1)" rx="2" ry="2" />
<text  x="184.89" y="1711.5" >[..</text>
</g>
<g >
<title>BlockHeader::GetBlockSize (9 samples, 0.02%)</title><rect x="387.2" y="1605" width="0.3" height="15.0" fill="rgb(217,126,47)" rx="2" ry="2" />
<text  x="390.24" y="1615.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (149 samples, 0.34%)</title><rect x="487.9" y="1717" width="4.1" height="15.0" fill="rgb(225,53,25)" rx="2" ry="2" />
<text  x="490.93" y="1727.5" ></text>
</g>
<g >
<title>[code] (17 samples, 0.04%)</title><rect x="11.4" y="1589" width="0.5" height="15.0" fill="rgb(210,9,11)" rx="2" ry="2" />
<text  x="14.41" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="244.0" y="1797" width="0.7" height="15.0" fill="rgb(239,42,33)" rx="2" ry="2" />
<text  x="246.99" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (4 samples, 0.01%)</title><rect x="120.3" y="1749" width="0.1" height="15.0" fill="rgb(220,184,9)" rx="2" ry="2" />
<text  x="123.29" y="1759.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (47 samples, 0.11%)</title><rect x="468.6" y="1733" width="1.3" height="15.0" fill="rgb(226,88,36)" rx="2" ry="2" />
<text  x="471.65" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1621" width="0.1" height="15.0" fill="rgb(253,1,25)" rx="2" ry="2" />
<text  x="13.46" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (661 samples, 1.52%)</title><rect x="613.9" y="1621" width="17.9" height="15.0" fill="rgb(207,175,38)" rx="2" ry="2" />
<text  x="616.86" y="1631.5" ></text>
</g>
<g >
<title>iwl_pcie_irq_rx_msix_handler (10 samples, 0.02%)</title><rect x="234.9" y="1765" width="0.3" height="15.0" fill="rgb(233,211,35)" rx="2" ry="2" />
<text  x="237.93" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,165 samples, 2.69%)</title><rect x="257.7" y="1781" width="31.7" height="15.0" fill="rgb(212,122,48)" rx="2" ry="2" />
<text  x="260.70" y="1791.5" >[[..</text>
</g>
<g >
<title>ntfs_get_nr_significant_bytes (9 samples, 0.02%)</title><rect x="675.7" y="1829" width="0.2" height="15.0" fill="rgb(211,196,26)" rx="2" ry="2" />
<text  x="678.65" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="679.3" y="1765" width="0.3" height="15.0" fill="rgb(244,179,1)" rx="2" ry="2" />
<text  x="682.30" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="1150.3" y="1413" width="0.6" height="15.0" fill="rgb(217,228,12)" rx="2" ry="2" />
<text  x="1153.32" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (13 samples, 0.03%)</title><rect x="317.1" y="1621" width="0.3" height="15.0" fill="rgb(249,87,42)" rx="2" ry="2" />
<text  x="320.07" y="1631.5" ></text>
</g>
<g >
<title>Field::GetData (7 samples, 0.02%)</title><rect x="297.3" y="1621" width="0.2" height="15.0" fill="rgb(253,87,10)" rx="2" ry="2" />
<text  x="300.30" y="1631.5" ></text>
</g>
<g >
<title>TableHeap::End (7 samples, 0.02%)</title><rect x="478.6" y="1765" width="0.2" height="15.0" fill="rgb(228,68,1)" rx="2" ry="2" />
<text  x="481.57" y="1775.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (7 samples, 0.02%)</title><rect x="399.6" y="1573" width="0.2" height="15.0" fill="rgb(208,47,9)" rx="2" ry="2" />
<text  x="402.59" y="1583.5" ></text>
</g>
<g >
<title>[code] (28 samples, 0.06%)</title><rect x="160.2" y="1717" width="0.7" height="15.0" fill="rgb(218,11,36)" rx="2" ry="2" />
<text  x="163.16" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.05%)</title><rect x="230.0" y="1829" width="0.6" height="15.0" fill="rgb(211,194,47)" rx="2" ry="2" />
<text  x="233.01" y="1839.5" ></text>
</g>
<g >
<title>[vmnet-natd] (4 samples, 0.01%)</title><rect x="1188.5" y="1829" width="0.1" height="15.0" fill="rgb(242,84,32)" rx="2" ry="2" />
<text  x="1191.53" y="1839.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (26 samples, 0.06%)</title><rect x="481.4" y="1733" width="0.7" height="15.0" fill="rgb(247,130,3)" rx="2" ry="2" />
<text  x="484.40" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="512.0" y="1781" width="0.6" height="15.0" fill="rgb(214,136,40)" rx="2" ry="2" />
<text  x="515.00" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (39 samples, 0.09%)</title><rect x="237.1" y="1733" width="1.1" height="15.0" fill="rgb(227,72,18)" rx="2" ry="2" />
<text  x="240.11" y="1743.5" ></text>
</g>
<g >
<title>[code] (23 samples, 0.05%)</title><rect x="60.2" y="1701" width="0.6" height="15.0" fill="rgb(217,54,1)" rx="2" ry="2" />
<text  x="63.18" y="1711.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="426.4" y="1653" width="0.2" height="15.0" fill="rgb(238,217,37)" rx="2" ry="2" />
<text  x="429.41" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="243.5" y="1765" width="0.5" height="15.0" fill="rgb(244,156,37)" rx="2" ry="2" />
<text  x="246.50" y="1775.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (4 samples, 0.01%)</title><rect x="443.1" y="1701" width="0.1" height="15.0" fill="rgb(248,38,32)" rx="2" ry="2" />
<text  x="446.05" y="1711.5" ></text>
</g>
<g >
<title>__poll (13 samples, 0.03%)</title><rect x="221.0" y="1813" width="0.4" height="15.0" fill="rgb(249,148,27)" rx="2" ry="2" />
<text  x="224.00" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="54.7" y="1685" width="0.1" height="15.0" fill="rgb(210,112,52)" rx="2" ry="2" />
<text  x="57.69" y="1695.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (8 samples, 0.02%)</title><rect x="504.1" y="1749" width="0.2" height="15.0" fill="rgb(235,150,3)" rx="2" ry="2" />
<text  x="507.11" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="683.3" y="1765" width="0.3" height="15.0" fill="rgb(211,107,12)" rx="2" ry="2" />
<text  x="686.27" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (62 samples, 0.14%)</title><rect x="236.5" y="1829" width="1.7" height="15.0" fill="rgb(211,199,2)" rx="2" ry="2" />
<text  x="239.48" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="12.8" y="1429" width="0.2" height="15.0" fill="rgb(208,22,2)" rx="2" ry="2" />
<text  x="15.83" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (6 samples, 0.01%)</title><rect x="479.8" y="1621" width="0.2" height="15.0" fill="rgb(242,60,54)" rx="2" ry="2" />
<text  x="482.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (4 samples, 0.01%)</title><rect x="494.5" y="1557" width="0.1" height="15.0" fill="rgb(214,194,21)" rx="2" ry="2" />
<text  x="497.54" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (42 samples, 0.10%)</title><rect x="680.6" y="1653" width="1.1" height="15.0" fill="rgb(230,227,27)" rx="2" ry="2" />
<text  x="683.60" y="1663.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (49 samples, 0.11%)</title><rect x="493.8" y="1685" width="1.3" height="15.0" fill="rgb(224,89,26)" rx="2" ry="2" />
<text  x="496.78" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.04%)</title><rect x="223.9" y="1829" width="0.4" height="15.0" fill="rgb(236,84,29)" rx="2" ry="2" />
<text  x="226.89" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (733 samples, 1.69%)</title><rect x="34.6" y="1749" width="20.0" height="15.0" fill="rgb(227,30,23)" rx="2" ry="2" />
<text  x="37.64" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (4 samples, 0.01%)</title><rect x="483.8" y="1701" width="0.1" height="15.0" fill="rgb(218,41,31)" rx="2" ry="2" />
<text  x="486.82" y="1711.5" ></text>
</g>
<g >
<title>__libc_sendto (6 samples, 0.01%)</title><rect x="20.3" y="1829" width="0.1" height="15.0" fill="rgb(215,54,36)" rx="2" ry="2" />
<text  x="23.25" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (197 samples, 0.45%)</title><rect x="152.5" y="1493" width="5.4" height="15.0" fill="rgb(243,205,24)" rx="2" ry="2" />
<text  x="155.49" y="1503.5" ></text>
</g>
<g >
<title>start_thread (26 samples, 0.06%)</title><rect x="13.8" y="1829" width="0.7" height="15.0" fill="rgb(253,198,44)" rx="2" ry="2" />
<text  x="16.83" y="1839.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="110.7" y="1717" width="0.2" height="15.0" fill="rgb(239,181,52)" rx="2" ry="2" />
<text  x="113.72" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (69 samples, 0.16%)</title><rect x="411.1" y="1685" width="1.9" height="15.0" fill="rgb(237,194,12)" rx="2" ry="2" />
<text  x="414.12" y="1695.5" ></text>
</g>
<g >
<title>operator new[] (56 samples, 0.13%)</title><rect x="117.4" y="1717" width="1.5" height="15.0" fill="rgb(223,14,4)" rx="2" ry="2" />
<text  x="120.41" y="1727.5" ></text>
</g>
<g >
<title>[perf-162284.map] (8 samples, 0.02%)</title><rect x="59.2" y="1413" width="0.2" height="15.0" fill="rgb(235,188,41)" rx="2" ry="2" />
<text  x="62.17" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (21 samples, 0.05%)</title><rect x="427.1" y="1653" width="0.6" height="15.0" fill="rgb(253,199,23)" rx="2" ry="2" />
<text  x="430.11" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (701 samples, 1.62%)</title><rect x="35.5" y="1733" width="19.1" height="15.0" fill="rgb(221,51,16)" rx="2" ry="2" />
<text  x="38.51" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (13 samples, 0.03%)</title><rect x="14.0" y="1637" width="0.3" height="15.0" fill="rgb(228,150,30)" rx="2" ry="2" />
<text  x="16.97" y="1647.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1733" width="0.2" height="15.0" fill="rgb(251,77,43)" rx="2" ry="2" />
<text  x="26.79" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1765" width="0.1" height="15.0" fill="rgb(250,65,31)" rx="2" ry="2" />
<text  x="248.21" y="1775.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="17.5" y="1781" width="0.3" height="15.0" fill="rgb(213,63,48)" rx="2" ry="2" />
<text  x="20.48" y="1791.5" ></text>
</g>
<g >
<title>DiskManager::MapPageId (4 samples, 0.01%)</title><rect x="346.1" y="1669" width="0.2" height="15.0" fill="rgb(239,7,45)" rx="2" ry="2" />
<text  x="349.14" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="240.2" y="1749" width="0.6" height="15.0" fill="rgb(223,37,27)" rx="2" ry="2" />
<text  x="243.15" y="1759.5" ></text>
</g>
<g >
<title>[perf-6346.map] (5 samples, 0.01%)</title><rect x="17.0" y="1813" width="0.2" height="15.0" fill="rgb(242,126,0)" rx="2" ry="2" />
<text  x="20.02" y="1823.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (173 samples, 0.40%)</title><rect x="408.3" y="1701" width="4.8" height="15.0" fill="rgb(221,213,18)" rx="2" ry="2" />
<text  x="411.35" y="1711.5" ></text>
</g>
<g >
<title>TypeChar::CompareLessThan (52 samples, 0.12%)</title><rect x="378.4" y="1653" width="1.4" height="15.0" fill="rgb(247,55,2)" rx="2" ry="2" />
<text  x="381.37" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1733" width="0.2" height="15.0" fill="rgb(208,58,7)" rx="2" ry="2" />
<text  x="26.46" y="1743.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (5 samples, 0.01%)</title><rect x="525.1" y="1765" width="0.1" height="15.0" fill="rgb(222,153,0)" rx="2" ry="2" />
<text  x="528.11" y="1775.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (182 samples, 0.42%)</title><rect x="497.8" y="1685" width="5.0" height="15.0" fill="rgb(236,173,7)" rx="2" ry="2" />
<text  x="500.80" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (4 samples, 0.01%)</title><rect x="485.7" y="1637" width="0.1" height="15.0" fill="rgb(244,160,36)" rx="2" ry="2" />
<text  x="488.70" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (42 samples, 0.10%)</title><rect x="328.7" y="1573" width="1.2" height="15.0" fill="rgb(239,223,14)" rx="2" ry="2" />
<text  x="331.74" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="233.1" y="1765" width="0.1" height="15.0" fill="rgb(210,70,8)" rx="2" ry="2" />
<text  x="236.14" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="229.1" y="1749" width="0.4" height="15.0" fill="rgb(224,205,24)" rx="2" ry="2" />
<text  x="232.08" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51 samples, 0.12%)</title><rect x="659.1" y="1781" width="1.4" height="15.0" fill="rgb(254,158,29)" rx="2" ry="2" />
<text  x="662.14" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1765" width="0.8" height="15.0" fill="rgb(238,182,15)" rx="2" ry="2" />
<text  x="684.77" y="1775.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Field*&gt; (5 samples, 0.01%)</title><rect x="509.3" y="1733" width="0.2" height="15.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="512.33" y="1743.5" ></text>
</g>
<g >
<title>IndexKeyComparator::operator (666 samples, 1.54%)</title><rect x="447.9" y="1717" width="18.1" height="15.0" fill="rgb(226,194,5)" rx="2" ry="2" />
<text  x="450.92" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (771 samples, 1.78%)</title><rect x="525.9" y="1765" width="20.9" height="15.0" fill="rgb(228,183,8)" rx="2" ry="2" />
<text  x="528.87" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="289.1" y="1349" width="0.3" height="15.0" fill="rgb(226,54,41)" rx="2" ry="2" />
<text  x="292.05" y="1359.5" ></text>
</g>
<g >
<title>DirTree::update (83 samples, 0.19%)</title><rect x="110.7" y="1733" width="2.3" height="15.0" fill="rgb(250,193,38)" rx="2" ry="2" />
<text  x="113.72" y="1743.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (120 samples, 0.28%)</title><rect x="338.0" y="1637" width="3.2" height="15.0" fill="rgb(222,29,35)" rx="2" ry="2" />
<text  x="340.96" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,170 samples, 2.70%)</title><rect x="600.0" y="1733" width="31.9" height="15.0" fill="rgb(215,14,31)" rx="2" ry="2" />
<text  x="603.04" y="1743.5" >[[..</text>
</g>
<g >
<title>[unknown] (56 samples, 0.13%)</title><rect x="219.1" y="1813" width="1.5" height="15.0" fill="rgb(221,181,16)" rx="2" ry="2" />
<text  x="222.10" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1717" width="0.1" height="15.0" fill="rgb(236,134,35)" rx="2" ry="2" />
<text  x="58.07" y="1727.5" ></text>
</g>
<g >
<title>start_thread (77 samples, 0.18%)</title><rect x="11.1" y="1829" width="2.1" height="15.0" fill="rgb(254,28,23)" rx="2" ry="2" />
<text  x="14.12" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="556.1" y="1733" width="0.2" height="15.0" fill="rgb(221,161,22)" rx="2" ry="2" />
<text  x="559.09" y="1743.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="26.9" y="1781" width="0.2" height="15.0" fill="rgb(207,27,0)" rx="2" ry="2" />
<text  x="29.92" y="1791.5" ></text>
</g>
<g >
<title>Field::Field (115 samples, 0.27%)</title><rect x="419.7" y="1621" width="3.1" height="15.0" fill="rgb(241,25,10)" rx="2" ry="2" />
<text  x="422.66" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="659.7" y="1653" width="0.8" height="15.0" fill="rgb(249,131,4)" rx="2" ry="2" />
<text  x="662.74" y="1663.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (20 samples, 0.05%)</title><rect x="346.4" y="1637" width="0.6" height="15.0" fill="rgb(236,96,52)" rx="2" ry="2" />
<text  x="349.44" y="1647.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (84 samples, 0.19%)</title><rect x="498.2" y="1669" width="2.3" height="15.0" fill="rgb(251,26,46)" rx="2" ry="2" />
<text  x="501.18" y="1679.5" ></text>
</g>
<g >
<title>[perf-133463.map] (11 samples, 0.03%)</title><rect x="682.2" y="1429" width="0.3" height="15.0" fill="rgb(214,26,51)" rx="2" ry="2" />
<text  x="685.18" y="1439.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="238.2" y="1829" width="0.6" height="15.0" fill="rgb(212,199,38)" rx="2" ry="2" />
<text  x="241.17" y="1839.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="27.0" y="1653" width="0.1" height="15.0" fill="rgb(250,65,44)" rx="2" ry="2" />
<text  x="30.00" y="1663.5" ></text>
</g>
<g >
<title>iwl_pcie_rx_handle_rb.constprop.0 (8 samples, 0.02%)</title><rect x="235.0" y="1733" width="0.2" height="15.0" fill="rgb(217,74,35)" rx="2" ry="2" />
<text  x="237.98" y="1743.5" ></text>
</g>
<g >
<title>__libc_start_main (133 samples, 0.31%)</title><rect x="683.9" y="1829" width="3.6" height="15.0" fill="rgb(246,121,1)" rx="2" ry="2" />
<text  x="686.92" y="1839.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1717" width="4.4" height="15.0" fill="rgb(212,217,13)" rx="2" ry="2" />
<text  x="58.23" y="1727.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="400.1" y="1653" width="0.2" height="15.0" fill="rgb(252,135,7)" rx="2" ry="2" />
<text  x="403.13" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (13 samples, 0.03%)</title><rect x="12.7" y="1557" width="0.3" height="15.0" fill="rgb(213,158,46)" rx="2" ry="2" />
<text  x="15.67" y="1567.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1765" width="0.3" height="15.0" fill="rgb(243,198,39)" rx="2" ry="2" />
<text  x="228.41" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1685" width="0.3" height="15.0" fill="rgb(247,197,8)" rx="2" ry="2" />
<text  x="222.64" y="1695.5" ></text>
</g>
<g >
<title>[[vdso]] (14 samples, 0.03%)</title><rect x="25.4" y="1829" width="0.4" height="15.0" fill="rgb(235,75,36)" rx="2" ry="2" />
<text  x="28.39" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="240.0" y="1813" width="0.8" height="15.0" fill="rgb(251,211,36)" rx="2" ry="2" />
<text  x="242.96" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (21 samples, 0.05%)</title><rect x="409.6" y="1621" width="0.5" height="15.0" fill="rgb(220,167,15)" rx="2" ry="2" />
<text  x="412.57" y="1631.5" ></text>
</g>
<g >
<title>Row::~Row (320 samples, 0.74%)</title><rect x="332.8" y="1653" width="8.7" height="15.0" fill="rgb(206,20,47)" rx="2" ry="2" />
<text  x="335.76" y="1663.5" ></text>
</g>
<g >
<title>[[vdso]] (12 samples, 0.03%)</title><rect x="222.6" y="1813" width="0.4" height="15.0" fill="rgb(251,134,37)" rx="2" ry="2" />
<text  x="225.64" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1813" width="0.8" height="15.0" fill="rgb(210,66,30)" rx="2" ry="2" />
<text  x="15.39" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 0.21%)</title><rect x="555.5" y="1797" width="2.5" height="15.0" fill="rgb(247,54,2)" rx="2" ry="2" />
<text  x="558.54" y="1807.5" ></text>
</g>
<g >
<title>TableHeap::End (4 samples, 0.01%)</title><rect x="510.7" y="1781" width="0.1" height="15.0" fill="rgb(207,216,26)" rx="2" ry="2" />
<text  x="513.67" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (5 samples, 0.01%)</title><rect x="462.4" y="1685" width="0.2" height="15.0" fill="rgb(228,101,34)" rx="2" ry="2" />
<text  x="465.42" y="1695.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="26.9" y="1765" width="0.2" height="15.0" fill="rgb(250,141,39)" rx="2" ry="2" />
<text  x="29.92" y="1775.5" ></text>
</g>
<g >
<title>epoll_wait (4 samples, 0.01%)</title><rect x="13.1" y="1685" width="0.1" height="15.0" fill="rgb(232,58,39)" rx="2" ry="2" />
<text  x="16.10" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,057 samples, 2.44%)</title><rect x="603.1" y="1685" width="28.8" height="15.0" fill="rgb(254,199,5)" rx="2" ry="2" />
<text  x="606.11" y="1695.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1781" width="0.2" height="15.0" fill="rgb(243,60,32)" rx="2" ry="2" />
<text  x="691.25" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 0.07%)</title><rect x="1187.2" y="1829" width="0.8" height="15.0" fill="rgb(210,217,42)" rx="2" ry="2" />
<text  x="1190.20" y="1839.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (8 samples, 0.02%)</title><rect x="316.3" y="1621" width="0.3" height="15.0" fill="rgb(237,7,37)" rx="2" ry="2" />
<text  x="319.33" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="689.4" y="1797" width="0.2" height="15.0" fill="rgb(210,110,28)" rx="2" ry="2" />
<text  x="692.44" y="1807.5" ></text>
</g>
<g >
<title>ib_log_fl_notif (6 samples, 0.01%)</title><rect x="231.5" y="1845" width="0.2" height="15.0" fill="rgb(246,145,1)" rx="2" ry="2" />
<text  x="234.53" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1701" width="0.2" height="15.0" fill="rgb(229,110,45)" rx="2" ry="2" />
<text  x="217.69" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1669" width="0.1" height="15.0" fill="rgb(209,140,28)" rx="2" ry="2" />
<text  x="99.30" y="1679.5" ></text>
</g>
<g >
<title>gnome-control-c (4 samples, 0.01%)</title><rect x="225.1" y="1845" width="0.1" height="15.0" fill="rgb(213,25,35)" rx="2" ry="2" />
<text  x="228.08" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (27 samples, 0.06%)</title><rect x="345.3" y="1605" width="0.7" height="15.0" fill="rgb(242,207,49)" rx="2" ry="2" />
<text  x="348.27" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="24.0" y="1813" width="0.2" height="15.0" fill="rgb(226,133,46)" rx="2" ry="2" />
<text  x="26.98" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (91 samples, 0.21%)</title><rect x="322.3" y="1605" width="2.5" height="15.0" fill="rgb(247,12,43)" rx="2" ry="2" />
<text  x="325.35" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="243.8" y="1685" width="0.2" height="15.0" fill="rgb(246,106,32)" rx="2" ry="2" />
<text  x="246.77" y="1695.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="20.6" y="1765" width="0.7" height="15.0" fill="rgb(219,105,2)" rx="2" ry="2" />
<text  x="23.63" y="1775.5" ></text>
</g>
<g >
<title>BPlusTree::InternalInsert (4,288 samples, 9.88%)</title><rect x="291.1" y="1701" width="116.7" height="15.0" fill="rgb(225,93,10)" rx="2" ry="2" />
<text  x="294.15" y="1711.5" >BPlusTree::Int..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1733" width="0.2" height="15.0" fill="rgb(227,156,46)" rx="2" ry="2" />
<text  x="234.72" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (4 samples, 0.01%)</title><rect x="502.6" y="1637" width="0.2" height="15.0" fill="rgb(221,9,39)" rx="2" ry="2" />
<text  x="505.64" y="1647.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WUnlock (8 samples, 0.02%)</title><rect x="497.0" y="1685" width="0.3" height="15.0" fill="rgb(242,189,14)" rx="2" ry="2" />
<text  x="500.04" y="1695.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (36 samples, 0.08%)</title><rect x="444.2" y="1701" width="0.9" height="15.0" fill="rgb(224,75,33)" rx="2" ry="2" />
<text  x="447.17" y="1711.5" ></text>
</g>
<g >
<title>__xstat64 (1,322 samples, 3.05%)</title><rect x="121.9" y="1749" width="36.0" height="15.0" fill="rgb(208,6,23)" rx="2" ry="2" />
<text  x="124.89" y="1759.5" >__x..</text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_S_relocate (12 samples, 0.03%)</title><rect x="507.5" y="1733" width="0.3" height="15.0" fill="rgb(206,78,33)" rx="2" ry="2" />
<text  x="510.51" y="1743.5" ></text>
</g>
<g >
<title>std::allocator&lt;Field&gt;::allocator (4 samples, 0.01%)</title><rect x="508.4" y="1733" width="0.1" height="15.0" fill="rgb(234,123,39)" rx="2" ry="2" />
<text  x="511.38" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (225 samples, 0.52%)</title><rect x="247.4" y="1749" width="6.2" height="15.0" fill="rgb(244,55,2)" rx="2" ry="2" />
<text  x="250.44" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="682.8" y="1813" width="0.5" height="15.0" fill="rgb(222,175,44)" rx="2" ry="2" />
<text  x="685.78" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (14 samples, 0.03%)</title><rect x="456.8" y="1669" width="0.4" height="15.0" fill="rgb(236,201,17)" rx="2" ry="2" />
<text  x="459.84" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (400 samples, 0.92%)</title><rect x="348.8" y="1525" width="10.9" height="15.0" fill="rgb(238,191,38)" rx="2" ry="2" />
<text  x="351.84" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="11.7" y="1509" width="0.1" height="15.0" fill="rgb(249,156,14)" rx="2" ry="2" />
<text  x="14.66" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1797" width="0.2" height="15.0" fill="rgb(220,138,13)" rx="2" ry="2" />
<text  x="24.75" y="1807.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.19.11] (25 samples, 0.06%)</title><rect x="216.1" y="1813" width="0.7" height="15.0" fill="rgb(248,86,17)" rx="2" ry="2" />
<text  x="219.08" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (44 samples, 0.10%)</title><rect x="396.4" y="1621" width="1.2" height="15.0" fill="rgb(224,115,25)" rx="2" ry="2" />
<text  x="399.38" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (32 samples, 0.07%)</title><rect x="490.9" y="1701" width="0.9" height="15.0" fill="rgb(247,24,7)" rx="2" ry="2" />
<text  x="493.95" y="1711.5" ></text>
</g>
<g >
<title>TypeFloat::DeserializeFrom (7 samples, 0.02%)</title><rect x="499.9" y="1653" width="0.2" height="15.0" fill="rgb(234,67,42)" rx="2" ry="2" />
<text  x="502.92" y="1663.5" ></text>
</g>
<g >
<title>[code] (136 samples, 0.31%)</title><rect x="55.8" y="1541" width="3.7" height="15.0" fill="rgb(246,32,5)" rx="2" ry="2" />
<text  x="58.77" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1573" width="0.3" height="15.0" fill="rgb(214,138,29)" rx="2" ry="2" />
<text  x="14.99" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1717" width="0.1" height="15.0" fill="rgb(248,118,54)" rx="2" ry="2" />
<text  x="216.80" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="239.6" y="1749" width="0.4" height="15.0" fill="rgb(227,169,2)" rx="2" ry="2" />
<text  x="242.55" y="1759.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="405" width="0.1" height="15.0" fill="rgb(218,115,52)" rx="2" ry="2" />
<text  x="61.79" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 0.10%)</title><rect x="686.3" y="1525" width="1.2" height="15.0" fill="rgb(245,60,15)" rx="2" ry="2" />
<text  x="689.26" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="238.9" y="1813" width="0.4" height="15.0" fill="rgb(215,109,47)" rx="2" ry="2" />
<text  x="241.87" y="1823.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;char&gt; (7 samples, 0.02%)</title><rect x="323.7" y="1525" width="0.2" height="15.0" fill="rgb(235,150,27)" rx="2" ry="2" />
<text  x="326.73" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1797" width="34.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="1154.22" y="1807.5" >[u..</text>
</g>
<g >
<title>std::__1::mutex::lock (4 samples, 0.01%)</title><rect x="212.8" y="1797" width="0.1" height="15.0" fill="rgb(230,64,24)" rx="2" ry="2" />
<text  x="215.76" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1685" width="0.1" height="15.0" fill="rgb(236,78,21)" rx="2" ry="2" />
<text  x="219.65" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (20 samples, 0.05%)</title><rect x="495.8" y="1669" width="0.6" height="15.0" fill="rgb(254,33,34)" rx="2" ry="2" />
<text  x="498.84" y="1679.5" ></text>
</g>
<g >
<title>__strlen_avx2 (6 samples, 0.01%)</title><rect x="660.5" y="1829" width="0.2" height="15.0" fill="rgb(254,56,22)" rx="2" ry="2" />
<text  x="663.53" y="1839.5" ></text>
</g>
<g >
<title>Field::GetData (4 samples, 0.01%)</title><rect x="415.7" y="1653" width="0.1" height="15.0" fill="rgb(231,72,38)" rx="2" ry="2" />
<text  x="418.69" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (28 samples, 0.06%)</title><rect x="461.2" y="1653" width="0.8" height="15.0" fill="rgb(244,175,37)" rx="2" ry="2" />
<text  x="464.19" y="1663.5" ></text>
</g>
<g >
<title>Page::RLatch (5 samples, 0.01%)</title><rect x="367.3" y="1669" width="0.1" height="15.0" fill="rgb(213,131,12)" rx="2" ry="2" />
<text  x="370.30" y="1679.5" ></text>
</g>
<g >
<title>Field::Field (149 samples, 0.34%)</title><rect x="304.7" y="1589" width="4.1" height="15.0" fill="rgb(235,166,21)" rx="2" ry="2" />
<text  x="307.75" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="231.7" y="1765" width="0.2" height="15.0" fill="rgb(243,146,53)" rx="2" ry="2" />
<text  x="234.69" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="482.1" y="1733" width="0.1" height="15.0" fill="rgb(214,113,8)" rx="2" ry="2" />
<text  x="485.11" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.02%)</title><rect x="245.3" y="1829" width="0.2" height="15.0" fill="rgb(243,95,44)" rx="2" ry="2" />
<text  x="248.32" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="691.3" y="1653" width="0.2" height="15.0" fill="rgb(242,121,3)" rx="2" ry="2" />
<text  x="694.29" y="1663.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="261" width="0.1" height="15.0" fill="rgb(240,49,19)" rx="2" ry="2" />
<text  x="61.79" y="271.5" ></text>
</g>
<g >
<title>ntfs_mbstoucs (35 samples, 0.08%)</title><rect x="656.1" y="1813" width="0.9" height="15.0" fill="rgb(247,110,44)" rx="2" ry="2" />
<text  x="659.07" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1669" width="0.2" height="15.0" fill="rgb(217,19,42)" rx="2" ry="2" />
<text  x="57.80" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="241.3" y="1781" width="0.6" height="15.0" fill="rgb(219,92,7)" rx="2" ry="2" />
<text  x="244.32" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1701" width="0.3" height="15.0" fill="rgb(235,19,51)" rx="2" ry="2" />
<text  x="222.64" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58 samples, 0.13%)</title><rect x="236.6" y="1781" width="1.6" height="15.0" fill="rgb(251,106,43)" rx="2" ry="2" />
<text  x="239.59" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,061 samples, 2.45%)</title><rect x="1122.4" y="1637" width="28.8" height="15.0" fill="rgb(245,216,44)" rx="2" ry="2" />
<text  x="1125.36" y="1647.5" >[[..</text>
</g>
<g >
<title>[unknown] (94 samples, 0.22%)</title><rect x="253.6" y="1797" width="2.6" height="15.0" fill="rgb(247,143,31)" rx="2" ry="2" />
<text  x="256.64" y="1807.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (10 samples, 0.02%)</title><rect x="337.2" y="1605" width="0.2" height="15.0" fill="rgb(206,16,11)" rx="2" ry="2" />
<text  x="340.17" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (55 samples, 0.13%)</title><rect x="686.0" y="1573" width="1.5" height="15.0" fill="rgb(245,174,46)" rx="2" ry="2" />
<text  x="688.99" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (458 samples, 1.06%)</title><rect x="276.9" y="1525" width="12.5" height="15.0" fill="rgb(249,70,18)" rx="2" ry="2" />
<text  x="279.92" y="1535.5" ></text>
</g>
<g >
<title>Schema::GetColumns (5 samples, 0.01%)</title><rect x="388.7" y="1637" width="0.1" height="15.0" fill="rgb(241,96,43)" rx="2" ry="2" />
<text  x="391.66" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1765" width="0.1" height="15.0" fill="rgb(205,107,23)" rx="2" ry="2" />
<text  x="17.60" y="1775.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (72 samples, 0.17%)</title><rect x="685.6" y="1765" width="1.9" height="15.0" fill="rgb(248,188,34)" rx="2" ry="2" />
<text  x="688.58" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1749" width="0.2" height="15.0" fill="rgb(247,176,37)" rx="2" ry="2" />
<text  x="24.75" y="1759.5" ></text>
</g>
<g >
<title>[code] (150 samples, 0.35%)</title><rect x="55.4" y="1621" width="4.1" height="15.0" fill="rgb(218,163,31)" rx="2" ry="2" />
<text  x="58.45" y="1631.5" ></text>
</g>
<g >
<title>[code] (22 samples, 0.05%)</title><rect x="119.5" y="1749" width="0.6" height="15.0" fill="rgb(246,205,19)" rx="2" ry="2" />
<text  x="122.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (10 samples, 0.02%)</title><rect x="409.8" y="1573" width="0.3" height="15.0" fill="rgb(246,176,28)" rx="2" ry="2" />
<text  x="412.79" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1733" width="0.1" height="15.0" fill="rgb(236,220,10)" rx="2" ry="2" />
<text  x="13.11" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (6 samples, 0.01%)</title><rect x="388.5" y="1621" width="0.2" height="15.0" fill="rgb(208,112,14)" rx="2" ry="2" />
<text  x="391.49" y="1631.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="15.4" y="1717" width="1.3" height="15.0" fill="rgb(228,49,45)" rx="2" ry="2" />
<text  x="18.44" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1717" width="0.2" height="15.0" fill="rgb(247,151,11)" rx="2" ry="2" />
<text  x="223.62" y="1727.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;char&gt; (6 samples, 0.01%)</title><rect x="395.9" y="1525" width="0.1" height="15.0" fill="rgb(231,95,12)" rx="2" ry="2" />
<text  x="398.86" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="236.2" y="1717" width="0.1" height="15.0" fill="rgb(209,197,24)" rx="2" ry="2" />
<text  x="239.18" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="243.8" y="1669" width="0.2" height="15.0" fill="rgb(229,227,22)" rx="2" ry="2" />
<text  x="246.80" y="1679.5" ></text>
</g>
<g >
<title>Field::CompareLessThan (48 samples, 0.11%)</title><rect x="448.5" y="1701" width="1.4" height="15.0" fill="rgb(250,147,18)" rx="2" ry="2" />
<text  x="451.55" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (56 samples, 0.13%)</title><rect x="411.4" y="1653" width="1.5" height="15.0" fill="rgb(215,9,21)" rx="2" ry="2" />
<text  x="414.42" y="1663.5" ></text>
</g>
<g >
<title>Type::GetInstance (5 samples, 0.01%)</title><rect x="379.0" y="1621" width="0.2" height="15.0" fill="rgb(217,65,17)" rx="2" ry="2" />
<text  x="382.03" y="1631.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (20 samples, 0.05%)</title><rect x="483.4" y="1717" width="0.5" height="15.0" fill="rgb(222,190,12)" rx="2" ry="2" />
<text  x="486.39" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="679.4" y="1669" width="0.2" height="15.0" fill="rgb(220,92,21)" rx="2" ry="2" />
<text  x="682.41" y="1679.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (10 samples, 0.02%)</title><rect x="422.4" y="1573" width="0.2" height="15.0" fill="rgb(243,165,8)" rx="2" ry="2" />
<text  x="425.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4 samples, 0.01%)</title><rect x="375.8" y="1621" width="0.2" height="15.0" fill="rgb(224,118,35)" rx="2" ry="2" />
<text  x="378.84" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1685" width="0.2" height="15.0" fill="rgb(248,100,24)" rx="2" ry="2" />
<text  x="235.10" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (4 samples, 0.01%)</title><rect x="481.5" y="1701" width="0.1" height="15.0" fill="rgb(226,193,18)" rx="2" ry="2" />
<text  x="484.48" y="1711.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (5 samples, 0.01%)</title><rect x="475.7" y="1749" width="0.2" height="15.0" fill="rgb(232,214,48)" rx="2" ry="2" />
<text  x="478.72" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (10 samples, 0.02%)</title><rect x="368.8" y="1621" width="0.3" height="15.0" fill="rgb(238,153,29)" rx="2" ry="2" />
<text  x="371.83" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (10 samples, 0.02%)</title><rect x="331.3" y="1637" width="0.3" height="15.0" fill="rgb(206,223,26)" rx="2" ry="2" />
<text  x="334.32" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (636 samples, 1.47%)</title><rect x="529.5" y="1669" width="17.3" height="15.0" fill="rgb(209,176,37)" rx="2" ry="2" />
<text  x="532.54" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (27 samples, 0.06%)</title><rect x="469.1" y="1669" width="0.7" height="15.0" fill="rgb(214,203,19)" rx="2" ry="2" />
<text  x="472.08" y="1679.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (11 samples, 0.03%)</title><rect x="406.0" y="1637" width="0.3" height="15.0" fill="rgb(230,159,5)" rx="2" ry="2" />
<text  x="408.98" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="13.4" y="1717" width="0.4" height="15.0" fill="rgb(228,126,6)" rx="2" ry="2" />
<text  x="16.37" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,107 samples, 2.55%)</title><rect x="562.7" y="1685" width="30.1" height="15.0" fill="rgb(223,64,48)" rx="2" ry="2" />
<text  x="565.67" y="1695.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,161 samples, 2.68%)</title><rect x="257.8" y="1749" width="31.6" height="15.0" fill="rgb(234,187,21)" rx="2" ry="2" />
<text  x="260.80" y="1759.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 0.06%)</title><rect x="359.0" y="1285" width="0.7" height="15.0" fill="rgb(218,27,23)" rx="2" ry="2" />
<text  x="362.01" y="1295.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (4 samples, 0.01%)</title><rect x="388.2" y="1621" width="0.2" height="15.0" fill="rgb(229,116,23)" rx="2" ry="2" />
<text  x="391.25" y="1631.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, char&gt; (21 samples, 0.05%)</title><rect x="323.9" y="1525" width="0.6" height="15.0" fill="rgb(235,194,9)" rx="2" ry="2" />
<text  x="326.92" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,242 samples, 2.86%)</title><rect x="124.1" y="1701" width="33.8" height="15.0" fill="rgb(207,50,10)" rx="2" ry="2" />
<text  x="127.07" y="1711.5" >[[..</text>
</g>
<g >
<title>[code] (40 samples, 0.09%)</title><rect x="15.6" y="1669" width="1.1" height="15.0" fill="rgb(216,73,37)" rx="2" ry="2" />
<text  x="18.58" y="1679.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="677" width="0.1" height="15.0" fill="rgb(233,186,7)" rx="2" ry="2" />
<text  x="61.79" y="687.5" ></text>
</g>
<g >
<title>Field::Field (4 samples, 0.01%)</title><rect x="489.6" y="1669" width="0.1" height="15.0" fill="rgb(207,78,50)" rx="2" ry="2" />
<text  x="492.59" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="214.7" y="1621" width="0.2" height="15.0" fill="rgb(225,92,11)" rx="2" ry="2" />
<text  x="217.75" y="1631.5" ></text>
</g>
<g >
<title>[perf-140378.map] (4 samples, 0.01%)</title><rect x="60.7" y="1589" width="0.1" height="15.0" fill="rgb(228,113,36)" rx="2" ry="2" />
<text  x="63.67" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="216.6" y="1765" width="0.2" height="15.0" fill="rgb(219,171,29)" rx="2" ry="2" />
<text  x="219.63" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="691.3" y="1637" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="694.35" y="1647.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (10 samples, 0.02%)</title><rect x="454.7" y="1637" width="0.2" height="15.0" fill="rgb(228,63,19)" rx="2" ry="2" />
<text  x="457.67" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="25.1" y="1749" width="0.2" height="15.0" fill="rgb(239,91,13)" rx="2" ry="2" />
<text  x="28.15" y="1759.5" ></text>
</g>
<g >
<title>Row::~Row (115 samples, 0.27%)</title><rect x="462.8" y="1701" width="3.1" height="15.0" fill="rgb(218,98,0)" rx="2" ry="2" />
<text  x="465.80" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1781" width="0.2" height="15.0" fill="rgb(223,176,51)" rx="2" ry="2" />
<text  x="223.62" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (220 samples, 0.51%)</title><rect x="665.0" y="1797" width="6.0" height="15.0" fill="rgb(221,179,50)" rx="2" ry="2" />
<text  x="668.02" y="1807.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.02%)</title><rect x="435.9" y="1589" width="0.2" height="15.0" fill="rgb(213,160,28)" rx="2" ry="2" />
<text  x="438.87" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="239.4" y="1813" width="0.6" height="15.0" fill="rgb(252,30,34)" rx="2" ry="2" />
<text  x="242.36" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="685.9" y="1653" width="1.6" height="15.0" fill="rgb(241,137,25)" rx="2" ry="2" />
<text  x="688.85" y="1663.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (5 samples, 0.01%)</title><rect x="337.8" y="1621" width="0.2" height="15.0" fill="rgb(230,130,41)" rx="2" ry="2" />
<text  x="340.82" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="222.6" y="1781" width="0.4" height="15.0" fill="rgb(228,141,20)" rx="2" ry="2" />
<text  x="225.64" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1717" width="0.1" height="15.0" fill="rgb(251,178,18)" rx="2" ry="2" />
<text  x="27.61" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (164 samples, 0.38%)</title><rect x="101.7" y="1685" width="4.4" height="15.0" fill="rgb(243,138,53)" rx="2" ry="2" />
<text  x="104.69" y="1695.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;char*&gt; (9 samples, 0.02%)</title><rect x="396.1" y="1541" width="0.2" height="15.0" fill="rgb(242,92,32)" rx="2" ry="2" />
<text  x="399.08" y="1551.5" ></text>
</g>
<g >
<title>[perf-140378.map] (14 samples, 0.03%)</title><rect x="60.4" y="1621" width="0.4" height="15.0" fill="rgb(215,200,39)" rx="2" ry="2" />
<text  x="63.40" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,237 samples, 2.85%)</title><rect x="1151.6" y="1701" width="33.6" height="15.0" fill="rgb(229,0,34)" rx="2" ry="2" />
<text  x="1154.60" y="1711.5" >[[..</text>
</g>
<g >
<title>[ntfs-3g] (98 samples, 0.23%)</title><rect x="517.3" y="1797" width="2.7" height="15.0" fill="rgb(232,147,48)" rx="2" ry="2" />
<text  x="520.30" y="1807.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__emplace_unique_key_args&lt;Watcher*, Watcher* const&amp;&gt; (32 samples, 0.07%)</title><rect x="158.2" y="1749" width="0.9" height="15.0" fill="rgb(244,123,30)" rx="2" ry="2" />
<text  x="161.23" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (136 samples, 0.31%)</title><rect x="356.0" y="1413" width="3.7" height="15.0" fill="rgb(241,58,8)" rx="2" ry="2" />
<text  x="359.02" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (62 samples, 0.14%)</title><rect x="1149.2" y="1477" width="1.7" height="15.0" fill="rgb(230,95,38)" rx="2" ry="2" />
<text  x="1152.23" y="1487.5" ></text>
</g>
<g >
<title>std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, Backend::run (3,650 samples, 8.41%)</title><rect x="106.2" y="1813" width="99.2" height="15.0" fill="rgb(222,163,22)" rx="2" ry="2" />
<text  x="109.17" y="1823.5" >std::__1::__..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (4 samples, 0.01%)</title><rect x="495.5" y="1605" width="0.1" height="15.0" fill="rgb(227,77,41)" rx="2" ry="2" />
<text  x="498.52" y="1615.5" ></text>
</g>
<g >
<title>LRUReplacer::Victim (16 samples, 0.04%)</title><rect x="294.6" y="1653" width="0.4" height="15.0" fill="rgb(222,21,46)" rx="2" ry="2" />
<text  x="297.60" y="1663.5" ></text>
</g>
<g >
<title>__strrchr_avx2 (14 samples, 0.03%)</title><rect x="640.6" y="1813" width="0.3" height="15.0" fill="rgb(241,160,50)" rx="2" ry="2" />
<text  x="643.57" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202 samples, 0.47%)</title><rect x="665.5" y="1749" width="5.5" height="15.0" fill="rgb(222,89,36)" rx="2" ry="2" />
<text  x="668.51" y="1759.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="57.5" y="1285" width="1.4" height="15.0" fill="rgb(216,17,49)" rx="2" ry="2" />
<text  x="60.54" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="232.2" y="1669" width="0.1" height="15.0" fill="rgb(254,69,47)" rx="2" ry="2" />
<text  x="235.16" y="1679.5" ></text>
</g>
<g >
<title>[libQt5Core.so.5.12.8] (4 samples, 0.01%)</title><rect x="690.5" y="1813" width="0.1" height="15.0" fill="rgb(243,41,37)" rx="2" ry="2" />
<text  x="693.53" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1813" width="0.6" height="15.0" fill="rgb(220,220,3)" rx="2" ry="2" />
<text  x="16.86" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.8" y="1797" width="0.1" height="15.0" fill="rgb(252,54,13)" rx="2" ry="2" />
<text  x="17.79" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="218.4" y="1813" width="0.2" height="15.0" fill="rgb(217,129,21)" rx="2" ry="2" />
<text  x="221.45" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="485.6" y="1669" width="0.3" height="15.0" fill="rgb(236,142,2)" rx="2" ry="2" />
<text  x="488.62" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (41 samples, 0.09%)</title><rect x="458.9" y="1653" width="1.1" height="15.0" fill="rgb(222,84,38)" rx="2" ry="2" />
<text  x="461.91" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (22 samples, 0.05%)</title><rect x="468.0" y="1717" width="0.6" height="15.0" fill="rgb(238,128,4)" rx="2" ry="2" />
<text  x="471.05" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (4 samples, 0.01%)</title><rect x="328.6" y="1573" width="0.1" height="15.0" fill="rgb(222,133,18)" rx="2" ry="2" />
<text  x="331.63" y="1583.5" ></text>
</g>
<g >
<title>Row::Row (4 samples, 0.01%)</title><rect x="341.8" y="1669" width="0.1" height="15.0" fill="rgb(216,215,38)" rx="2" ry="2" />
<text  x="344.79" y="1679.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (126 samples, 0.29%)</title><rect x="334.4" y="1621" width="3.4" height="15.0" fill="rgb(250,221,20)" rx="2" ry="2" />
<text  x="337.39" y="1631.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (9 samples, 0.02%)</title><rect x="403.3" y="1621" width="0.3" height="15.0" fill="rgb(252,184,19)" rx="2" ry="2" />
<text  x="406.32" y="1631.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (8 samples, 0.02%)</title><rect x="405.6" y="1637" width="0.2" height="15.0" fill="rgb(244,139,25)" rx="2" ry="2" />
<text  x="408.57" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 0.11%)</title><rect x="659.3" y="1717" width="1.2" height="15.0" fill="rgb(236,215,54)" rx="2" ry="2" />
<text  x="662.28" y="1727.5" ></text>
</g>
<g >
<title>std::fill_n&lt;char*, unsigned long, char&gt; (20 samples, 0.05%)</title><rect x="459.4" y="1589" width="0.6" height="15.0" fill="rgb(230,166,20)" rx="2" ry="2" />
<text  x="462.43" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="496.0" y="1637" width="0.3" height="15.0" fill="rgb(210,28,34)" rx="2" ry="2" />
<text  x="498.95" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (11 samples, 0.03%)</title><rect x="12.7" y="1509" width="0.3" height="15.0" fill="rgb(237,192,30)" rx="2" ry="2" />
<text  x="15.72" y="1519.5" ></text>
</g>
<g >
<title>[perf-162284.map] (7 samples, 0.02%)</title><rect x="59.2" y="1365" width="0.2" height="15.0" fill="rgb(254,31,25)" rx="2" ry="2" />
<text  x="62.20" y="1375.5" ></text>
</g>
<g >
<title>Row::GetField (5 samples, 0.01%)</title><rect x="341.7" y="1669" width="0.1" height="15.0" fill="rgb(248,86,51)" rx="2" ry="2" />
<text  x="344.66" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="242.9" y="1797" width="0.5" height="15.0" fill="rgb(208,0,45)" rx="2" ry="2" />
<text  x="245.87" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt;::construct&lt;std::pair&lt;int const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (12 samples, 0.03%)</title><rect x="374.5" y="1605" width="0.3" height="15.0" fill="rgb(231,160,32)" rx="2" ry="2" />
<text  x="377.48" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="24.4" y="1829" width="0.2" height="15.0" fill="rgb(230,164,31)" rx="2" ry="2" />
<text  x="27.44" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1781" width="0.1" height="15.0" fill="rgb(245,149,29)" rx="2" ry="2" />
<text  x="27.61" y="1791.5" ></text>
</g>
<g >
<title>malloc (9 samples, 0.02%)</title><rect x="643.0" y="1813" width="0.3" height="15.0" fill="rgb(210,211,38)" rx="2" ry="2" />
<text  x="646.01" y="1823.5" ></text>
</g>
<g >
<title>__GI___execve (6 samples, 0.01%)</title><rect x="214.2" y="1813" width="0.1" height="15.0" fill="rgb(220,160,26)" rx="2" ry="2" />
<text  x="217.18" y="1823.5" ></text>
</g>
<g >
<title>kworker/4:1-eve (25 samples, 0.06%)</title><rect x="241.2" y="1845" width="0.7" height="15.0" fill="rgb(232,221,23)" rx="2" ry="2" />
<text  x="244.24" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (226 samples, 0.52%)</title><rect x="247.4" y="1765" width="6.2" height="15.0" fill="rgb(240,188,14)" rx="2" ry="2" />
<text  x="250.41" y="1775.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="58.6" y="805" width="0.3" height="15.0" fill="rgb(214,198,0)" rx="2" ry="2" />
<text  x="61.63" y="815.5" ></text>
</g>
<g >
<title>Field::IsNull (8 samples, 0.02%)</title><rect x="298.1" y="1637" width="0.2" height="15.0" fill="rgb(254,226,15)" rx="2" ry="2" />
<text  x="301.11" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (9 samples, 0.02%)</title><rect x="319.4" y="1605" width="0.3" height="15.0" fill="rgb(241,12,26)" rx="2" ry="2" />
<text  x="322.44" y="1615.5" ></text>
</g>
<g >
<title>[code] (89 samples, 0.21%)</title><rect x="56.5" y="1397" width="2.4" height="15.0" fill="rgb(205,90,30)" rx="2" ry="2" />
<text  x="59.51" y="1407.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="682.3" y="1333" width="0.1" height="15.0" fill="rgb(236,201,52)" rx="2" ry="2" />
<text  x="685.26" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="221.0" y="1781" width="0.4" height="15.0" fill="rgb(206,40,27)" rx="2" ry="2" />
<text  x="224.03" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1589" width="0.3" height="15.0" fill="rgb(221,48,38)" rx="2" ry="2" />
<text  x="413.39" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="1185.1" y="1317" width="0.1" height="15.0" fill="rgb(240,32,0)" rx="2" ry="2" />
<text  x="1188.08" y="1327.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (43 samples, 0.10%)</title><rect x="409.1" y="1669" width="1.2" height="15.0" fill="rgb(223,74,2)" rx="2" ry="2" />
<text  x="412.11" y="1679.5" ></text>
</g>
<g >
<title>Chrome_IOThread (49 samples, 0.11%)</title><rect x="13.2" y="1845" width="1.3" height="15.0" fill="rgb(208,157,16)" rx="2" ry="2" />
<text  x="16.21" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="410.6" y="1381" width="0.1" height="15.0" fill="rgb(210,139,20)" rx="2" ry="2" />
<text  x="413.60" y="1391.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1637" width="0.3" height="15.0" fill="rgb(218,172,3)" rx="2" ry="2" />
<text  x="14.99" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (591 samples, 1.36%)</title><rect x="141.8" y="1557" width="16.1" height="15.0" fill="rgb(237,170,34)" rx="2" ry="2" />
<text  x="144.78" y="1567.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (4 samples, 0.01%)</title><rect x="226.4" y="1637" width="0.1" height="15.0" fill="rgb(249,119,53)" rx="2" ry="2" />
<text  x="229.39" y="1647.5" ></text>
</g>
<g >
<title>[code] (45 samples, 0.10%)</title><rect x="15.4" y="1701" width="1.3" height="15.0" fill="rgb(217,96,4)" rx="2" ry="2" />
<text  x="18.44" y="1711.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1733" width="0.1" height="15.0" fill="rgb(244,56,26)" rx="2" ry="2" />
<text  x="23.53" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (22 samples, 0.05%)</title><rect x="444.5" y="1637" width="0.6" height="15.0" fill="rgb(212,61,16)" rx="2" ry="2" />
<text  x="447.49" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (6 samples, 0.01%)</title><rect x="491.5" y="1685" width="0.1" height="15.0" fill="rgb(249,204,54)" rx="2" ry="2" />
<text  x="494.47" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61 samples, 0.14%)</title><rect x="236.5" y="1797" width="1.7" height="15.0" fill="rgb(251,68,46)" rx="2" ry="2" />
<text  x="239.51" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1749" width="0.2" height="15.0" fill="rgb(243,65,25)" rx="2" ry="2" />
<text  x="26.46" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (4 samples, 0.01%)</title><rect x="334.0" y="1621" width="0.1" height="15.0" fill="rgb(206,52,45)" rx="2" ry="2" />
<text  x="336.99" y="1631.5" ></text>
</g>
<g >
<title>NetworkManager (73 samples, 0.17%)</title><rect x="17.9" y="1845" width="1.9" height="15.0" fill="rgb(231,212,46)" rx="2" ry="2" />
<text  x="20.86" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (621 samples, 1.43%)</title><rect x="37.7" y="1717" width="16.9" height="15.0" fill="rgb(226,145,41)" rx="2" ry="2" />
<text  x="40.69" y="1727.5" ></text>
</g>
<g >
<title>BitmapPage&lt;4096ul&gt;::IsPageFree (6 samples, 0.01%)</title><rect x="493.9" y="1653" width="0.1" height="15.0" fill="rgb(236,173,51)" rx="2" ry="2" />
<text  x="496.89" y="1663.5" ></text>
</g>
<g >
<title>[code] (25 samples, 0.06%)</title><rect x="58.2" y="965" width="0.7" height="15.0" fill="rgb(240,213,3)" rx="2" ry="2" />
<text  x="61.22" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="61.1" y="1653" width="0.1" height="15.0" fill="rgb(214,17,1)" rx="2" ry="2" />
<text  x="64.08" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1717" width="0.1" height="15.0" fill="rgb(218,122,52)" rx="2" ry="2" />
<text  x="13.46" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="244.2" y="1701" width="0.5" height="15.0" fill="rgb(246,61,11)" rx="2" ry="2" />
<text  x="247.20" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (839 samples, 1.93%)</title><rect x="570.0" y="1589" width="22.8" height="15.0" fill="rgb(222,89,52)" rx="2" ry="2" />
<text  x="572.96" y="1599.5" >[..</text>
</g>
<g >
<title>Schema::GetColumns (4 samples, 0.01%)</title><rect x="400.0" y="1653" width="0.1" height="15.0" fill="rgb(205,130,17)" rx="2" ry="2" />
<text  x="403.02" y="1663.5" ></text>
</g>
<g >
<title>[libgjs.so.0.0.0] (11 samples, 0.03%)</title><rect x="225.4" y="1797" width="0.3" height="15.0" fill="rgb(236,92,1)" rx="2" ry="2" />
<text  x="228.41" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1797" width="0.2" height="15.0" fill="rgb(218,172,19)" rx="2" ry="2" />
<text  x="26.46" y="1807.5" ></text>
</g>
<g >
<title>Column::GetType (5 samples, 0.01%)</title><rect x="498.0" y="1669" width="0.2" height="15.0" fill="rgb(221,106,20)" rx="2" ry="2" />
<text  x="501.05" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14 samples, 0.03%)</title><rect x="484.7" y="1653" width="0.3" height="15.0" fill="rgb(215,202,42)" rx="2" ry="2" />
<text  x="487.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_deallocate_node (19 samples, 0.04%)</title><rect x="369.3" y="1605" width="0.5" height="15.0" fill="rgb(233,87,38)" rx="2" ry="2" />
<text  x="372.29" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (4 samples, 0.01%)</title><rect x="522.4" y="1813" width="0.1" height="15.0" fill="rgb(211,223,9)" rx="2" ry="2" />
<text  x="525.42" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (4 samples, 0.01%)</title><rect x="447.5" y="1605" width="0.1" height="15.0" fill="rgb(208,168,48)" rx="2" ry="2" />
<text  x="450.46" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1829" width="0.1" height="15.0" fill="rgb(246,22,33)" rx="2" ry="2" />
<text  x="248.21" y="1839.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (35 samples, 0.08%)</title><rect x="430.4" y="1605" width="1.0" height="15.0" fill="rgb(230,29,43)" rx="2" ry="2" />
<text  x="433.43" y="1615.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (4 samples, 0.01%)</title><rect x="458.7" y="1621" width="0.1" height="15.0" fill="rgb(253,67,13)" rx="2" ry="2" />
<text  x="461.66" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (13 samples, 0.03%)</title><rect x="20.9" y="1653" width="0.4" height="15.0" fill="rgb(214,201,8)" rx="2" ry="2" />
<text  x="23.91" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1797" width="0.8" height="15.0" fill="rgb(219,54,10)" rx="2" ry="2" />
<text  x="15.39" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (5 samples, 0.01%)</title><rect x="472.2" y="1685" width="0.1" height="15.0" fill="rgb(254,64,20)" rx="2" ry="2" />
<text  x="475.18" y="1695.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1157" width="1.0" height="15.0" fill="rgb(232,73,46)" rx="2" ry="2" />
<text  x="60.90" y="1167.5" ></text>
</g>
<g >
<title>[code] (46 samples, 0.11%)</title><rect x="11.1" y="1717" width="1.3" height="15.0" fill="rgb(212,211,45)" rx="2" ry="2" />
<text  x="14.14" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="360.5" y="1573" width="0.2" height="15.0" fill="rgb(205,161,48)" rx="2" ry="2" />
<text  x="363.51" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (10 samples, 0.02%)</title><rect x="412.0" y="1621" width="0.3" height="15.0" fill="rgb(246,174,44)" rx="2" ry="2" />
<text  x="414.99" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (277 samples, 0.64%)</title><rect x="165.6" y="1733" width="7.5" height="15.0" fill="rgb(207,200,27)" rx="2" ry="2" />
<text  x="168.60" y="1743.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (5 samples, 0.01%)</title><rect x="405.8" y="1637" width="0.1" height="15.0" fill="rgb(245,53,54)" rx="2" ry="2" />
<text  x="408.79" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (30 samples, 0.07%)</title><rect x="501.6" y="1669" width="0.9" height="15.0" fill="rgb(209,67,8)" rx="2" ry="2" />
<text  x="504.64" y="1679.5" ></text>
</g>
<g >
<title>ntfs_enter_cache (12 samples, 0.03%)</title><rect x="557.4" y="1781" width="0.3" height="15.0" fill="rgb(241,191,11)" rx="2" ry="2" />
<text  x="560.37" y="1791.5" ></text>
</g>
<g >
<title>Field::CompareLessThan (52 samples, 0.12%)</title><rect x="416.0" y="1685" width="1.4" height="15.0" fill="rgb(224,187,17)" rx="2" ry="2" />
<text  x="419.02" y="1695.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="114.7" y="1685" width="0.3" height="15.0" fill="rgb(242,141,7)" rx="2" ry="2" />
<text  x="117.71" y="1695.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (13 samples, 0.03%)</title><rect x="112.6" y="1717" width="0.4" height="15.0" fill="rgb(231,82,26)" rx="2" ry="2" />
<text  x="115.62" y="1727.5" ></text>
</g>
<g >
<title>__libc_start_main (29 samples, 0.07%)</title><rect x="681.8" y="1829" width="0.8" height="15.0" fill="rgb(252,0,14)" rx="2" ry="2" />
<text  x="684.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, int&gt; &gt;::_M_valptr (4 samples, 0.01%)</title><rect x="482.3" y="1717" width="0.1" height="15.0" fill="rgb(224,181,43)" rx="2" ry="2" />
<text  x="485.27" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (614 samples, 1.42%)</title><rect x="1168.5" y="1605" width="16.7" height="15.0" fill="rgb(232,144,44)" rx="2" ry="2" />
<text  x="1171.54" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (7 samples, 0.02%)</title><rect x="426.9" y="1653" width="0.2" height="15.0" fill="rgb(240,207,36)" rx="2" ry="2" />
<text  x="429.92" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="238.9" y="1765" width="0.4" height="15.0" fill="rgb(233,196,29)" rx="2" ry="2" />
<text  x="241.93" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1765" width="0.2" height="15.0" fill="rgb(240,131,49)" rx="2" ry="2" />
<text  x="57.80" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="60.9" y="1701" width="0.3" height="15.0" fill="rgb(212,106,41)" rx="2" ry="2" />
<text  x="63.92" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="13.3" y="1781" width="0.5" height="15.0" fill="rgb(231,199,6)" rx="2" ry="2" />
<text  x="16.35" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="679.5" y="1573" width="0.1" height="15.0" fill="rgb(206,206,12)" rx="2" ry="2" />
<text  x="682.46" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="546.7" y="1445" width="0.1" height="15.0" fill="rgb(218,95,34)" rx="2" ry="2" />
<text  x="549.68" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.06%)</title><rect x="1189.0" y="1829" width="0.7" height="15.0" fill="rgb(215,111,11)" rx="2" ry="2" />
<text  x="1191.99" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1749" width="0.1" height="15.0" fill="rgb(206,187,51)" rx="2" ry="2" />
<text  x="27.61" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (9 samples, 0.02%)</title><rect x="422.0" y="1573" width="0.2" height="15.0" fill="rgb(222,151,53)" rx="2" ry="2" />
<text  x="424.97" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (27 samples, 0.06%)</title><rect x="681.8" y="1653" width="0.7" height="15.0" fill="rgb(216,138,21)" rx="2" ry="2" />
<text  x="684.80" y="1663.5" ></text>
</g>
<g >
<title>ksoftirqd/0 (10 samples, 0.02%)</title><rect x="236.1" y="1845" width="0.2" height="15.0" fill="rgb(209,27,11)" rx="2" ry="2" />
<text  x="239.07" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1781" width="0.1" height="15.0" fill="rgb(253,162,45)" rx="2" ry="2" />
<text  x="216.80" y="1791.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (4 samples, 0.01%)</title><rect x="509.2" y="1653" width="0.1" height="15.0" fill="rgb(225,92,29)" rx="2" ry="2" />
<text  x="512.17" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.04%)</title><rect x="227.2" y="1797" width="0.5" height="15.0" fill="rgb(240,107,0)" rx="2" ry="2" />
<text  x="230.23" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="242.0" y="1733" width="0.2" height="15.0" fill="rgb(206,46,16)" rx="2" ry="2" />
<text  x="245.00" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="242.2" y="1781" width="0.6" height="15.0" fill="rgb(237,227,4)" rx="2" ry="2" />
<text  x="245.25" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (97 samples, 0.22%)</title><rect x="370.1" y="1653" width="2.6" height="15.0" fill="rgb(249,182,47)" rx="2" ry="2" />
<text  x="373.08" y="1663.5" ></text>
</g>
<g >
<title>[[vdso]] (7 samples, 0.02%)</title><rect x="206.0" y="1765" width="0.2" height="15.0" fill="rgb(238,182,19)" rx="2" ry="2" />
<text  x="209.05" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="240.8" y="1829" width="0.4" height="15.0" fill="rgb(239,209,21)" rx="2" ry="2" />
<text  x="243.75" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1765" width="0.1" height="15.0" fill="rgb(232,126,4)" rx="2" ry="2" />
<text  x="27.61" y="1775.5" ></text>
</g>
<g >
<title>__libc_write (7 samples, 0.02%)</title><rect x="11.7" y="1541" width="0.1" height="15.0" fill="rgb(232,199,1)" rx="2" ry="2" />
<text  x="14.66" y="1551.5" ></text>
</g>
<g >
<title>VizCompositorTh (65 samples, 0.15%)</title><rect x="22.2" y="1845" width="1.8" height="15.0" fill="rgb(246,214,44)" rx="2" ry="2" />
<text  x="25.21" y="1855.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (9 samples, 0.02%)</title><rect x="460.8" y="1653" width="0.2" height="15.0" fill="rgb(237,166,27)" rx="2" ry="2" />
<text  x="463.79" y="1663.5" ></text>
</g>
<g >
<title>Field::CompareGreaterThan (30 samples, 0.07%)</title><rect x="296.9" y="1653" width="0.8" height="15.0" fill="rgb(227,153,29)" rx="2" ry="2" />
<text  x="299.92" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (99 samples, 0.23%)</title><rect x="357.0" y="1365" width="2.7" height="15.0" fill="rgb(239,224,25)" rx="2" ry="2" />
<text  x="360.02" y="1375.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242 samples, 0.56%)</title><rect x="48.0" y="1637" width="6.6" height="15.0" fill="rgb(250,218,30)" rx="2" ry="2" />
<text  x="51.00" y="1647.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="16.4" y="1493" width="0.2" height="15.0" fill="rgb(239,164,25)" rx="2" ry="2" />
<text  x="19.36" y="1503.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="23.2" y="1557" width="0.1" height="15.0" fill="rgb(208,209,54)" rx="2" ry="2" />
<text  x="26.16" y="1567.5" ></text>
</g>
<g >
<title>Clone_persist_gtid::periodic_write (7 samples, 0.02%)</title><rect x="230.9" y="1749" width="0.1" height="15.0" fill="rgb(234,10,47)" rx="2" ry="2" />
<text  x="233.85" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1573" width="0.3" height="15.0" fill="rgb(243,199,42)" rx="2" ry="2" />
<text  x="413.39" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1733" width="0.8" height="15.0" fill="rgb(210,26,30)" rx="2" ry="2" />
<text  x="684.77" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (44 samples, 0.10%)</title><rect x="446.6" y="1701" width="1.2" height="15.0" fill="rgb(233,46,22)" rx="2" ry="2" />
<text  x="449.61" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 0.08%)</title><rect x="684.6" y="1637" width="1.0" height="15.0" fill="rgb(245,197,46)" rx="2" ry="2" />
<text  x="687.60" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1717" width="0.2" height="15.0" fill="rgb(223,169,16)" rx="2" ry="2" />
<text  x="235.10" y="1727.5" ></text>
</g>
<g >
<title>Page::RUnlatch (18 samples, 0.04%)</title><rect x="367.4" y="1669" width="0.5" height="15.0" fill="rgb(224,143,45)" rx="2" ry="2" />
<text  x="370.44" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (10 samples, 0.02%)</title><rect x="295.3" y="1637" width="0.3" height="15.0" fill="rgb(251,189,51)" rx="2" ry="2" />
<text  x="298.31" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="21.7" y="1829" width="0.2" height="15.0" fill="rgb(245,4,52)" rx="2" ry="2" />
<text  x="24.72" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (128 samples, 0.30%)</title><rect x="356.2" y="1397" width="3.5" height="15.0" fill="rgb(234,23,54)" rx="2" ry="2" />
<text  x="359.23" y="1407.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (194 samples, 0.45%)</title><rect x="248.3" y="1669" width="5.3" height="15.0" fill="rgb(224,210,27)" rx="2" ry="2" />
<text  x="251.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (15 samples, 0.03%)</title><rect x="371.8" y="1589" width="0.5" height="15.0" fill="rgb(229,140,2)" rx="2" ry="2" />
<text  x="374.85" y="1599.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (4 samples, 0.01%)</title><rect x="442.6" y="1685" width="0.1" height="15.0" fill="rgb(228,117,4)" rx="2" ry="2" />
<text  x="445.56" y="1695.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="443.2" y="1701" width="0.1" height="15.0" fill="rgb(210,224,53)" rx="2" ry="2" />
<text  x="446.16" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1605" width="0.1" height="15.0" fill="rgb(221,7,25)" rx="2" ry="2" />
<text  x="13.46" y="1615.5" ></text>
</g>
<g >
<title>[code] (39 samples, 0.09%)</title><rect x="57.9" y="1189" width="1.0" height="15.0" fill="rgb(237,54,21)" rx="2" ry="2" />
<text  x="60.87" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1187.2" y="1765" width="0.1" height="15.0" fill="rgb(236,177,17)" rx="2" ry="2" />
<text  x="1190.20" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63 samples, 0.15%)</title><rect x="171.4" y="1621" width="1.7" height="15.0" fill="rgb(237,44,50)" rx="2" ry="2" />
<text  x="174.42" y="1631.5" ></text>
</g>
<g >
<title>ntfs_get_collate_function (9 samples, 0.02%)</title><rect x="647.7" y="1813" width="0.2" height="15.0" fill="rgb(208,213,31)" rx="2" ry="2" />
<text  x="650.69" y="1823.5" ></text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="379.5" y="1637" width="0.1" height="15.0" fill="rgb(240,73,19)" rx="2" ry="2" />
<text  x="382.49" y="1647.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="373.1" y="1637" width="0.2" height="15.0" fill="rgb(219,20,22)" rx="2" ry="2" />
<text  x="376.10" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1733" width="0.1" height="15.0" fill="rgb(226,119,12)" rx="2" ry="2" />
<text  x="238.23" y="1743.5" ></text>
</g>
<g >
<title>std::mutex::lock (7 samples, 0.02%)</title><rect x="486.8" y="1669" width="0.2" height="15.0" fill="rgb(239,16,21)" rx="2" ry="2" />
<text  x="489.76" y="1679.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (45 samples, 0.10%)</title><rect x="493.8" y="1669" width="1.2" height="15.0" fill="rgb(248,39,30)" rx="2" ry="2" />
<text  x="496.78" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (13 samples, 0.03%)</title><rect x="458.2" y="1605" width="0.3" height="15.0" fill="rgb(218,205,22)" rx="2" ry="2" />
<text  x="461.17" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1717" width="0.1" height="15.0" fill="rgb(237,208,21)" rx="2" ry="2" />
<text  x="224.90" y="1727.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (150 samples, 0.35%)</title><rect x="419.1" y="1653" width="4.1" height="15.0" fill="rgb(230,168,29)" rx="2" ry="2" />
<text  x="422.14" y="1663.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (94 samples, 0.22%)</title><rect x="253.6" y="1813" width="2.6" height="15.0" fill="rgb(242,65,29)" rx="2" ry="2" />
<text  x="256.64" y="1823.5" ></text>
</g>
<g >
<title>__GI___libc_write (8 samples, 0.02%)</title><rect x="220.6" y="1813" width="0.2" height="15.0" fill="rgb(240,9,21)" rx="2" ry="2" />
<text  x="223.62" y="1823.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%)</title><rect x="20.4" y="1829" width="0.1" height="15.0" fill="rgb(211,222,2)" rx="2" ry="2" />
<text  x="23.42" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="331.0" y="1637" width="0.1" height="15.0" fill="rgb(226,111,20)" rx="2" ry="2" />
<text  x="333.99" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="215.0" y="1701" width="0.4" height="15.0" fill="rgb(208,47,10)" rx="2" ry="2" />
<text  x="218.05" y="1711.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (5 samples, 0.01%)</title><rect x="388.9" y="1637" width="0.1" height="15.0" fill="rgb(236,146,0)" rx="2" ry="2" />
<text  x="391.90" y="1647.5" ></text>
</g>
<g >
<title>runtime.mstart.abi0 (5 samples, 0.01%)</title><rect x="213.1" y="1813" width="0.1" height="15.0" fill="rgb(212,95,51)" rx="2" ry="2" />
<text  x="216.09" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 0.07%)</title><rect x="252.7" y="1621" width="0.9" height="15.0" fill="rgb(213,114,7)" rx="2" ry="2" />
<text  x="255.72" y="1631.5" ></text>
</g>
<g >
<title>operator new[] (5 samples, 0.01%)</title><rect x="157.9" y="1749" width="0.1" height="15.0" fill="rgb(248,57,14)" rx="2" ry="2" />
<text  x="160.88" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1717" width="0.2" height="15.0" fill="rgb(213,122,46)" rx="2" ry="2" />
<text  x="691.25" y="1727.5" ></text>
</g>
<g >
<title>Row::Row (90 samples, 0.21%)</title><rect x="473.6" y="1765" width="2.4" height="15.0" fill="rgb(251,192,44)" rx="2" ry="2" />
<text  x="476.60" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (395 samples, 0.91%)</title><rect x="1174.5" y="1509" width="10.7" height="15.0" fill="rgb(211,122,8)" rx="2" ry="2" />
<text  x="1177.50" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (157 samples, 0.36%)</title><rect x="588.5" y="1461" width="4.3" height="15.0" fill="rgb(253,106,36)" rx="2" ry="2" />
<text  x="591.51" y="1471.5" ></text>
</g>
<g >
<title>[code] (26 samples, 0.06%)</title><rect x="11.3" y="1669" width="0.7" height="15.0" fill="rgb(213,15,48)" rx="2" ry="2" />
<text  x="14.25" y="1679.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1781" width="0.6" height="15.0" fill="rgb(239,197,38)" rx="2" ry="2" />
<text  x="16.86" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="413.7" y="1621" width="0.1" height="15.0" fill="rgb(211,87,53)" rx="2" ry="2" />
<text  x="416.65" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (672 samples, 1.55%)</title><rect x="1132.7" y="1589" width="18.2" height="15.0" fill="rgb(207,122,49)" rx="2" ry="2" />
<text  x="1135.67" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (31 samples, 0.07%)</title><rect x="413.5" y="1669" width="0.8" height="15.0" fill="rgb(230,63,45)" rx="2" ry="2" />
<text  x="416.46" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="239.7" y="1701" width="0.3" height="15.0" fill="rgb(235,15,2)" rx="2" ry="2" />
<text  x="242.74" y="1711.5" ></text>
</g>
<g >
<title>[code] (12 samples, 0.03%)</title><rect x="58.6" y="821" width="0.3" height="15.0" fill="rgb(237,210,14)" rx="2" ry="2" />
<text  x="61.58" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="242.9" y="1781" width="0.5" height="15.0" fill="rgb(242,99,21)" rx="2" ry="2" />
<text  x="245.87" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="241.2" y="1797" width="0.7" height="15.0" fill="rgb(205,131,9)" rx="2" ry="2" />
<text  x="244.24" y="1807.5" ></text>
</g>
<g >
<title>TableIterator::TableIterator (4 samples, 0.01%)</title><rect x="478.7" y="1749" width="0.1" height="15.0" fill="rgb(212,221,23)" rx="2" ry="2" />
<text  x="481.65" y="1759.5" ></text>
</g>
<g >
<title>[code] (21 samples, 0.05%)</title><rect x="22.8" y="1749" width="0.6" height="15.0" fill="rgb(212,62,2)" rx="2" ry="2" />
<text  x="25.84" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (7 samples, 0.02%)</title><rect x="360.5" y="1589" width="0.2" height="15.0" fill="rgb(221,31,39)" rx="2" ry="2" />
<text  x="363.48" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1701" width="0.1" height="15.0" fill="rgb(250,25,0)" rx="2" ry="2" />
<text  x="23.25" y="1711.5" ></text>
</g>
<g >
<title>ieee80211_sta_rx_queued_mgmt (11 samples, 0.03%)</title><rect x="244.9" y="1749" width="0.3" height="15.0" fill="rgb(242,160,3)" rx="2" ry="2" />
<text  x="247.91" y="1759.5" ></text>
</g>
<g >
<title>[code] (66 samples, 0.15%)</title><rect x="57.1" y="1333" width="1.8" height="15.0" fill="rgb(244,73,46)" rx="2" ry="2" />
<text  x="60.13" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 0.24%)</title><rect x="678.9" y="1829" width="2.8" height="15.0" fill="rgb(207,166,6)" rx="2" ry="2" />
<text  x="681.86" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38 samples, 0.09%)</title><rect x="172.1" y="1605" width="1.0" height="15.0" fill="rgb(238,22,0)" rx="2" ry="2" />
<text  x="175.10" y="1615.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (8 samples, 0.02%)</title><rect x="487.0" y="1701" width="0.2" height="15.0" fill="rgb(251,155,31)" rx="2" ry="2" />
<text  x="490.00" y="1711.5" ></text>
</g>
<g >
<title>TypeChar::DeserializeFrom (135 samples, 0.31%)</title><rect x="419.6" y="1637" width="3.6" height="15.0" fill="rgb(226,130,35)" rx="2" ry="2" />
<text  x="422.55" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (748 samples, 1.72%)</title><rect x="1164.9" y="1637" width="20.3" height="15.0" fill="rgb(242,166,53)" rx="2" ry="2" />
<text  x="1167.90" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 0.07%)</title><rect x="546.0" y="1493" width="0.8" height="15.0" fill="rgb(241,153,17)" rx="2" ry="2" />
<text  x="549.00" y="1503.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.01%)</title><rect x="56.2" y="1445" width="0.1" height="15.0" fill="rgb(254,49,1)" rx="2" ry="2" />
<text  x="59.16" y="1455.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (66 samples, 0.15%)</title><rect x="420.8" y="1589" width="1.8" height="15.0" fill="rgb(212,189,29)" rx="2" ry="2" />
<text  x="423.83" y="1599.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="58.7" y="741" width="0.2" height="15.0" fill="rgb(248,190,42)" rx="2" ry="2" />
<text  x="61.71" y="751.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (5 samples, 0.01%)</title><rect x="465.6" y="1669" width="0.2" height="15.0" fill="rgb(227,161,29)" rx="2" ry="2" />
<text  x="468.63" y="1679.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (35 samples, 0.08%)</title><rect x="498.9" y="1621" width="0.9" height="15.0" fill="rgb(215,3,6)" rx="2" ry="2" />
<text  x="501.86" y="1631.5" ></text>
</g>
<g >
<title>Field::IsNull (5 samples, 0.01%)</title><rect x="299.9" y="1621" width="0.1" height="15.0" fill="rgb(226,72,26)" rx="2" ry="2" />
<text  x="302.91" y="1631.5" ></text>
</g>
<g >
<title>free (29 samples, 0.07%)</title><rect x="681.8" y="1813" width="0.8" height="15.0" fill="rgb(241,41,53)" rx="2" ry="2" />
<text  x="684.77" y="1823.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="85" width="0.1" height="15.0" fill="rgb(242,97,34)" rx="2" ry="2" />
<text  x="61.79" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (23 samples, 0.05%)</title><rect x="371.8" y="1605" width="0.6" height="15.0" fill="rgb(213,98,48)" rx="2" ry="2" />
<text  x="374.82" y="1615.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, char&gt; (17 samples, 0.04%)</title><rect x="433.0" y="1557" width="0.5" height="15.0" fill="rgb(230,43,47)" rx="2" ry="2" />
<text  x="436.02" y="1567.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="15.4" y="1749" width="1.4" height="15.0" fill="rgb(245,150,0)" rx="2" ry="2" />
<text  x="18.41" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1765" width="0.1" height="15.0" fill="rgb(233,198,36)" rx="2" ry="2" />
<text  x="224.90" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (85 samples, 0.20%)</title><rect x="319.7" y="1605" width="2.3" height="15.0" fill="rgb(237,14,36)" rx="2" ry="2" />
<text  x="322.71" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1150.8" y="1317" width="0.1" height="15.0" fill="rgb(227,51,11)" rx="2" ry="2" />
<text  x="1153.81" y="1327.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="613" width="0.1" height="15.0" fill="rgb(241,63,39)" rx="2" ry="2" />
<text  x="61.79" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (13 samples, 0.03%)</title><rect x="491.1" y="1685" width="0.4" height="15.0" fill="rgb(235,41,19)" rx="2" ry="2" />
<text  x="494.11" y="1695.5" ></text>
</g>
<g >
<title>[perf-140378.map] (19 samples, 0.04%)</title><rect x="60.3" y="1669" width="0.5" height="15.0" fill="rgb(226,190,9)" rx="2" ry="2" />
<text  x="63.26" y="1679.5" ></text>
</g>
<g >
<title>std::__1::mutex::unlock (8 samples, 0.02%)</title><rect x="212.9" y="1797" width="0.2" height="15.0" fill="rgb(224,210,46)" rx="2" ry="2" />
<text  x="215.87" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7 samples, 0.02%)</title><rect x="456.0" y="1669" width="0.2" height="15.0" fill="rgb(233,156,3)" rx="2" ry="2" />
<text  x="459.03" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (46 samples, 0.11%)</title><rect x="254.2" y="1781" width="1.2" height="15.0" fill="rgb(246,191,16)" rx="2" ry="2" />
<text  x="257.16" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="18.7" y="1781" width="0.1" height="15.0" fill="rgb(240,183,39)" rx="2" ry="2" />
<text  x="21.68" y="1791.5" ></text>
</g>
<g >
<title>VM_Periodic_Tas (18 samples, 0.04%)</title><rect x="21.7" y="1845" width="0.5" height="15.0" fill="rgb(237,179,16)" rx="2" ry="2" />
<text  x="24.70" y="1855.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (25 samples, 0.06%)</title><rect x="484.4" y="1685" width="0.6" height="15.0" fill="rgb(210,227,48)" rx="2" ry="2" />
<text  x="487.37" y="1695.5" ></text>
</g>
<g >
<title>[code] (46 samples, 0.11%)</title><rect x="117.7" y="1701" width="1.2" height="15.0" fill="rgb(253,111,23)" rx="2" ry="2" />
<text  x="120.68" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,162 samples, 2.68%)</title><rect x="64.8" y="1765" width="31.6" height="15.0" fill="rgb(231,51,47)" rx="2" ry="2" />
<text  x="67.83" y="1775.5" >[[..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (6 samples, 0.01%)</title><rect x="496.7" y="1669" width="0.2" height="15.0" fill="rgb(240,189,28)" rx="2" ry="2" />
<text  x="499.74" y="1679.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (10 samples, 0.02%)</title><rect x="235.7" y="1813" width="0.3" height="15.0" fill="rgb(206,219,4)" rx="2" ry="2" />
<text  x="238.72" y="1823.5" ></text>
</g>
<g >
<title>Field::~Field (46 samples, 0.11%)</title><rect x="476.6" y="1749" width="1.2" height="15.0" fill="rgb(237,200,40)" rx="2" ry="2" />
<text  x="479.56" y="1759.5" ></text>
</g>
<g >
<title>Row::~Row (30 samples, 0.07%)</title><rect x="504.3" y="1749" width="0.8" height="15.0" fill="rgb(211,134,15)" rx="2" ry="2" />
<text  x="507.33" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1765" width="0.3" height="15.0" fill="rgb(208,20,6)" rx="2" ry="2" />
<text  x="29.05" y="1775.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="12.9" y="1413" width="0.1" height="15.0" fill="rgb(217,191,43)" rx="2" ry="2" />
<text  x="15.86" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (724 samples, 1.67%)</title><rect x="527.1" y="1701" width="19.7" height="15.0" fill="rgb(244,17,28)" rx="2" ry="2" />
<text  x="530.15" y="1711.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (43 samples, 0.10%)</title><rect x="375.5" y="1685" width="1.2" height="15.0" fill="rgb(205,226,35)" rx="2" ry="2" />
<text  x="378.52" y="1695.5" ></text>
</g>
<g >
<title>[perf-133463.map] (11 samples, 0.03%)</title><rect x="682.2" y="1445" width="0.3" height="15.0" fill="rgb(212,17,14)" rx="2" ry="2" />
<text  x="685.18" y="1455.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (189 samples, 0.44%)</title><rect x="284.2" y="1461" width="5.2" height="15.0" fill="rgb(216,90,52)" rx="2" ry="2" />
<text  x="287.24" y="1471.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1093" width="1.0" height="15.0" fill="rgb(222,184,36)" rx="2" ry="2" />
<text  x="60.90" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.0" y="1765" width="0.1" height="15.0" fill="rgb(215,72,51)" rx="2" ry="2" />
<text  x="22.98" y="1775.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (9 samples, 0.02%)</title><rect x="341.2" y="1637" width="0.3" height="15.0" fill="rgb(208,22,50)" rx="2" ry="2" />
<text  x="344.22" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="12.7" y="1461" width="0.3" height="15.0" fill="rgb(229,115,2)" rx="2" ry="2" />
<text  x="15.75" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1717" width="0.2" height="15.0" fill="rgb(217,144,6)" rx="2" ry="2" />
<text  x="26.46" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (15 samples, 0.03%)</title><rect x="495.3" y="1669" width="0.4" height="15.0" fill="rgb(229,106,11)" rx="2" ry="2" />
<text  x="498.27" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (11 samples, 0.03%)</title><rect x="502.5" y="1669" width="0.3" height="15.0" fill="rgb(207,132,48)" rx="2" ry="2" />
<text  x="505.45" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1653" width="0.1" height="15.0" fill="rgb(241,229,9)" rx="2" ry="2" />
<text  x="692.50" y="1663.5" ></text>
</g>
<g >
<title>Row::Row (15 samples, 0.03%)</title><rect x="332.4" y="1653" width="0.4" height="15.0" fill="rgb(236,91,19)" rx="2" ry="2" />
<text  x="335.35" y="1663.5" ></text>
</g>
<g >
<title>BPlusTreeInternalPage::KeyAt (8 samples, 0.02%)</title><rect x="443.5" y="1717" width="0.2" height="15.0" fill="rgb(226,178,15)" rx="2" ry="2" />
<text  x="446.49" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1621" width="0.3" height="15.0" fill="rgb(214,61,18)" rx="2" ry="2" />
<text  x="14.99" y="1631.5" ></text>
</g>
<g >
<title>Row::GetField (4 samples, 0.01%)</title><rect x="400.7" y="1669" width="0.1" height="15.0" fill="rgb(238,186,45)" rx="2" ry="2" />
<text  x="403.70" y="1679.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1749" width="0.3" height="15.0" fill="rgb(220,23,31)" rx="2" ry="2" />
<text  x="229.28" y="1759.5" ></text>
</g>
<g >
<title>TypeChar::CompareGreaterThan (23 samples, 0.05%)</title><rect x="297.1" y="1637" width="0.6" height="15.0" fill="rgb(216,21,44)" rx="2" ry="2" />
<text  x="300.11" y="1647.5" ></text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="57.8" y="1221" width="1.1" height="15.0" fill="rgb(230,228,30)" rx="2" ry="2" />
<text  x="60.81" y="1231.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (23 samples, 0.05%)</title><rect x="495.8" y="1701" width="0.6" height="15.0" fill="rgb(252,214,11)" rx="2" ry="2" />
<text  x="498.76" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="60.9" y="1733" width="0.3" height="15.0" fill="rgb(243,146,26)" rx="2" ry="2" />
<text  x="63.92" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="19.9" y="1797" width="0.2" height="15.0" fill="rgb(249,103,16)" rx="2" ry="2" />
<text  x="22.93" y="1807.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (25 samples, 0.06%)</title><rect x="486.0" y="1733" width="0.7" height="15.0" fill="rgb(240,18,29)" rx="2" ry="2" />
<text  x="489.00" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1717" width="0.2" height="15.0" fill="rgb(251,210,13)" rx="2" ry="2" />
<text  x="24.48" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="10.6" y="1797" width="0.5" height="15.0" fill="rgb(226,37,23)" rx="2" ry="2" />
<text  x="13.63" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (41 samples, 0.09%)</title><rect x="445.3" y="1685" width="1.1" height="15.0" fill="rgb(240,122,8)" rx="2" ry="2" />
<text  x="448.31" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1797" width="0.1" height="15.0" fill="rgb(215,208,30)" rx="2" ry="2" />
<text  x="216.80" y="1807.5" ></text>
</g>
<g >
<title>[code] (54 samples, 0.12%)</title><rect x="57.5" y="1301" width="1.4" height="15.0" fill="rgb(239,80,8)" rx="2" ry="2" />
<text  x="60.46" y="1311.5" ></text>
</g>
<g >
<title>ExecuteEngine::ExecuteEngine (4 samples, 0.01%)</title><rect x="511.1" y="1797" width="0.1" height="15.0" fill="rgb(254,100,37)" rx="2" ry="2" />
<text  x="514.10" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1781" width="0.2" height="15.0" fill="rgb(222,217,45)" rx="2" ry="2" />
<text  x="235.10" y="1791.5" ></text>
</g>
<g >
<title>TableHeap::GetTuple (363 samples, 0.84%)</title><rect x="493.5" y="1717" width="9.8" height="15.0" fill="rgb(239,77,16)" rx="2" ry="2" />
<text  x="496.45" y="1727.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (44 samples, 0.10%)</title><rect x="466.8" y="1701" width="1.2" height="15.0" fill="rgb(207,70,5)" rx="2" ry="2" />
<text  x="469.80" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (68 samples, 0.16%)</title><rect x="679.9" y="1733" width="1.8" height="15.0" fill="rgb(221,169,29)" rx="2" ry="2" />
<text  x="682.90" y="1743.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="437" width="0.1" height="15.0" fill="rgb(210,70,22)" rx="2" ry="2" />
<text  x="61.79" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (43 samples, 0.10%)</title><rect x="446.6" y="1685" width="1.2" height="15.0" fill="rgb(245,14,46)" rx="2" ry="2" />
<text  x="449.64" y="1695.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (155 samples, 0.36%)</title><rect x="309.5" y="1621" width="4.2" height="15.0" fill="rgb(247,46,45)" rx="2" ry="2" />
<text  x="312.48" y="1631.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (6 samples, 0.01%)</title><rect x="502.2" y="1621" width="0.1" height="15.0" fill="rgb(219,161,47)" rx="2" ry="2" />
<text  x="505.15" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_check_len (14 samples, 0.03%)</title><rect x="507.1" y="1733" width="0.4" height="15.0" fill="rgb(222,87,30)" rx="2" ry="2" />
<text  x="510.10" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="157.5" y="1381" width="0.3" height="15.0" fill="rgb(214,157,37)" rx="2" ry="2" />
<text  x="160.52" y="1391.5" ></text>
</g>
<g >
<title>[code] (140 samples, 0.32%)</title><rect x="55.7" y="1573" width="3.8" height="15.0" fill="rgb(233,24,26)" rx="2" ry="2" />
<text  x="58.67" y="1583.5" ></text>
</g>
<g >
<title>Page::WLatch (21 samples, 0.05%)</title><rect x="486.7" y="1733" width="0.5" height="15.0" fill="rgb(213,107,45)" rx="2" ry="2" />
<text  x="489.68" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (123 samples, 0.28%)</title><rect x="326.8" y="1621" width="3.3" height="15.0" fill="rgb(251,221,2)" rx="2" ry="2" />
<text  x="329.78" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="679.3" y="1733" width="0.3" height="15.0" fill="rgb(235,38,26)" rx="2" ry="2" />
<text  x="682.30" y="1743.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (30 samples, 0.07%)</title><rect x="409.4" y="1653" width="0.8" height="15.0" fill="rgb(215,34,18)" rx="2" ry="2" />
<text  x="412.35" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="244.0" y="1829" width="0.7" height="15.0" fill="rgb(211,212,32)" rx="2" ry="2" />
<text  x="246.99" y="1839.5" ></text>
</g>
<g >
<title>[code] (14 samples, 0.03%)</title><rect x="58.5" y="853" width="0.4" height="15.0" fill="rgb(230,75,15)" rx="2" ry="2" />
<text  x="61.52" y="863.5" ></text>
</g>
<g >
<title>__strdup (5 samples, 0.01%)</title><rect x="631.9" y="1797" width="0.2" height="15.0" fill="rgb(235,154,37)" rx="2" ry="2" />
<text  x="634.94" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63 samples, 0.15%)</title><rect x="210.5" y="1765" width="1.7" height="15.0" fill="rgb(236,123,28)" rx="2" ry="2" />
<text  x="213.45" y="1775.5" ></text>
</g>
<g >
<title>iwl_mvm_rx_mq (7 samples, 0.02%)</title><rect x="235.0" y="1717" width="0.2" height="15.0" fill="rgb(247,96,16)" rx="2" ry="2" />
<text  x="238.01" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="11.7" y="1461" width="0.1" height="15.0" fill="rgb(245,35,4)" rx="2" ry="2" />
<text  x="14.66" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (2,982 samples, 6.87%)</title><rect x="552.0" y="1813" width="81.1" height="15.0" fill="rgb(245,64,50)" rx="2" ry="2" />
<text  x="554.95" y="1823.5" >[unknown]</text>
</g>
<g >
<title>std::_Destroy&lt;Field&gt; (24 samples, 0.06%)</title><rect x="508.7" y="1701" width="0.6" height="15.0" fill="rgb(209,214,49)" rx="2" ry="2" />
<text  x="511.65" y="1711.5" ></text>
</g>
<g >
<title>[code] (148 samples, 0.34%)</title><rect x="55.5" y="1605" width="4.0" height="15.0" fill="rgb(236,73,16)" rx="2" ry="2" />
<text  x="58.50" y="1615.5" ></text>
</g>
<g >
<title>DiskManager::WritePhysicalPage (5 samples, 0.01%)</title><rect x="360.7" y="1653" width="0.2" height="15.0" fill="rgb(254,163,5)" rx="2" ry="2" />
<text  x="363.75" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1669" width="0.1" height="15.0" fill="rgb(235,36,19)" rx="2" ry="2" />
<text  x="233.22" y="1679.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="23.8" y="1685" width="0.2" height="15.0" fill="rgb(219,109,6)" rx="2" ry="2" />
<text  x="26.84" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="243.1" y="1701" width="0.3" height="15.0" fill="rgb(250,128,34)" rx="2" ry="2" />
<text  x="246.14" y="1711.5" ></text>
</g>
<g >
<title>iwl_pcie_irq_rx_msix_handler (6 samples, 0.01%)</title><rect x="235.2" y="1765" width="0.2" height="15.0" fill="rgb(219,1,4)" rx="2" ry="2" />
<text  x="238.20" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.03%)</title><rect x="253.8" y="1781" width="0.3" height="15.0" fill="rgb(237,142,32)" rx="2" ry="2" />
<text  x="256.81" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (19 samples, 0.04%)</title><rect x="13.9" y="1685" width="0.5" height="15.0" fill="rgb(249,104,7)" rx="2" ry="2" />
<text  x="16.89" y="1695.5" ></text>
</g>
<g >
<title>runtime.park_m (12 samples, 0.03%)</title><rect x="213.4" y="1749" width="0.3" height="15.0" fill="rgb(249,156,48)" rx="2" ry="2" />
<text  x="216.39" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (4 samples, 0.01%)</title><rect x="442.1" y="1653" width="0.1" height="15.0" fill="rgb(234,127,8)" rx="2" ry="2" />
<text  x="445.10" y="1663.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (1,159 samples, 2.67%)</title><rect x="343.9" y="1685" width="31.5" height="15.0" fill="rgb(244,1,36)" rx="2" ry="2" />
<text  x="346.91" y="1695.5" >Bu..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (4 samples, 0.01%)</title><rect x="322.7" y="1589" width="0.1" height="15.0" fill="rgb(237,72,10)" rx="2" ry="2" />
<text  x="325.67" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (96 samples, 0.22%)</title><rect x="286.8" y="1413" width="2.6" height="15.0" fill="rgb(237,183,50)" rx="2" ry="2" />
<text  x="289.77" y="1423.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="300.3" y="1621" width="0.1" height="15.0" fill="rgb(205,39,1)" rx="2" ry="2" />
<text  x="303.26" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1653" width="0.3" height="15.0" fill="rgb(234,49,6)" rx="2" ry="2" />
<text  x="14.99" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::push_back (82 samples, 0.19%)</title><rect x="505.9" y="1765" width="2.2" height="15.0" fill="rgb(252,198,44)" rx="2" ry="2" />
<text  x="508.88" y="1775.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (7 samples, 0.02%)</title><rect x="218.9" y="1813" width="0.2" height="15.0" fill="rgb(233,118,7)" rx="2" ry="2" />
<text  x="221.91" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="235.7" y="1781" width="0.3" height="15.0" fill="rgb(244,191,19)" rx="2" ry="2" />
<text  x="238.75" y="1791.5" ></text>
</g>
<g >
<title>kworker/8:4-eve (20 samples, 0.05%)</title><rect x="243.4" y="1845" width="0.6" height="15.0" fill="rgb(211,183,5)" rx="2" ry="2" />
<text  x="246.44" y="1855.5" ></text>
</g>
<g >
<title>realloc (4 samples, 0.01%)</title><rect x="658.7" y="1813" width="0.1" height="15.0" fill="rgb(207,52,51)" rx="2" ry="2" />
<text  x="661.73" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="243.7" y="1701" width="0.3" height="15.0" fill="rgb(243,97,34)" rx="2" ry="2" />
<text  x="246.72" y="1711.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (5 samples, 0.01%)</title><rect x="442.2" y="1653" width="0.1" height="15.0" fill="rgb(254,12,22)" rx="2" ry="2" />
<text  x="445.21" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="218.1" y="1829" width="0.3" height="15.0" fill="rgb(250,217,43)" rx="2" ry="2" />
<text  x="221.12" y="1839.5" ></text>
</g>
<g >
<title>Field::~Field (91 samples, 0.21%)</title><rect x="438.1" y="1669" width="2.4" height="15.0" fill="rgb(252,225,47)" rx="2" ry="2" />
<text  x="441.07" y="1679.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (5 samples, 0.01%)</title><rect x="226.6" y="1813" width="0.2" height="15.0" fill="rgb(218,219,45)" rx="2" ry="2" />
<text  x="229.63" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.01%)</title><rect x="399.9" y="1605" width="0.1" height="15.0" fill="rgb(242,139,52)" rx="2" ry="2" />
<text  x="402.89" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (18 samples, 0.04%)</title><rect x="12.5" y="1605" width="0.5" height="15.0" fill="rgb(205,99,8)" rx="2" ry="2" />
<text  x="15.53" y="1615.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (12 samples, 0.03%)</title><rect x="222.6" y="1829" width="0.4" height="15.0" fill="rgb(241,60,34)" rx="2" ry="2" />
<text  x="225.64" y="1839.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::EntryAt (4 samples, 0.01%)</title><rect x="343.2" y="1685" width="0.1" height="15.0" fill="rgb(213,114,24)" rx="2" ry="2" />
<text  x="346.18" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (6 samples, 0.01%)</title><rect x="444.7" y="1573" width="0.1" height="15.0" fill="rgb(244,112,3)" rx="2" ry="2" />
<text  x="447.68" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="240.4" y="1717" width="0.4" height="15.0" fill="rgb(252,75,30)" rx="2" ry="2" />
<text  x="243.37" y="1727.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::KeyAt (6 samples, 0.01%)</title><rect x="343.3" y="1685" width="0.2" height="15.0" fill="rgb(247,37,51)" rx="2" ry="2" />
<text  x="346.29" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (9 samples, 0.02%)</title><rect x="471.8" y="1653" width="0.2" height="15.0" fill="rgb(234,208,13)" rx="2" ry="2" />
<text  x="474.80" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="224.8" y="1717" width="0.2" height="15.0" fill="rgb(218,73,15)" rx="2" ry="2" />
<text  x="227.81" y="1727.5" ></text>
</g>
<g >
<title>PostmasterMain (9 samples, 0.02%)</title><rect x="687.8" y="1797" width="0.3" height="15.0" fill="rgb(214,136,6)" rx="2" ry="2" />
<text  x="690.84" y="1807.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (6 samples, 0.01%)</title><rect x="327.4" y="1589" width="0.1" height="15.0" fill="rgb(247,113,6)" rx="2" ry="2" />
<text  x="330.35" y="1599.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::RUnlock (11 samples, 0.03%)</title><rect x="367.4" y="1653" width="0.3" height="15.0" fill="rgb(242,140,14)" rx="2" ry="2" />
<text  x="370.44" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (20 samples, 0.05%)</title><rect x="479.5" y="1669" width="0.6" height="15.0" fill="rgb(227,105,2)" rx="2" ry="2" />
<text  x="482.52" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="410.6" y="1413" width="0.1" height="15.0" fill="rgb(235,121,36)" rx="2" ry="2" />
<text  x="413.58" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1557" width="0.3" height="15.0" fill="rgb(221,190,40)" rx="2" ry="2" />
<text  x="413.39" y="1567.5" ></text>
</g>
<g >
<title>runtime.sysmon (5 samples, 0.01%)</title><rect x="213.1" y="1765" width="0.1" height="15.0" fill="rgb(241,154,4)" rx="2" ry="2" />
<text  x="216.09" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1685" width="0.2" height="15.0" fill="rgb(218,154,22)" rx="2" ry="2" />
<text  x="234.72" y="1695.5" ></text>
</g>
<g >
<title>IndexKeyComparator::operator (4 samples, 0.01%)</title><rect x="469.9" y="1733" width="0.1" height="15.0" fill="rgb(212,77,5)" rx="2" ry="2" />
<text  x="472.92" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1685" width="0.4" height="15.0" fill="rgb(209,163,52)" rx="2" ry="2" />
<text  x="694.13" y="1695.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="709" width="0.1" height="15.0" fill="rgb(251,216,49)" rx="2" ry="2" />
<text  x="61.79" y="719.5" ></text>
</g>
<g >
<title>Row::~Row (179 samples, 0.41%)</title><rect x="437.7" y="1685" width="4.9" height="15.0" fill="rgb(247,153,10)" rx="2" ry="2" />
<text  x="440.69" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (17 samples, 0.04%)</title><rect x="482.5" y="1717" width="0.5" height="15.0" fill="rgb(223,53,44)" rx="2" ry="2" />
<text  x="485.49" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.03%)</title><rect x="225.4" y="1813" width="0.3" height="15.0" fill="rgb(229,111,39)" rx="2" ry="2" />
<text  x="228.41" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="242.2" y="1797" width="0.6" height="15.0" fill="rgb(229,194,2)" rx="2" ry="2" />
<text  x="245.22" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (33 samples, 0.08%)</title><rect x="317.9" y="1621" width="0.9" height="15.0" fill="rgb(248,97,18)" rx="2" ry="2" />
<text  x="320.91" y="1631.5" ></text>
</g>
<g >
<title>runtime.mstart0 (5 samples, 0.01%)</title><rect x="213.1" y="1797" width="0.1" height="15.0" fill="rgb(248,85,51)" rx="2" ry="2" />
<text  x="216.09" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="236.3" y="1829" width="0.2" height="15.0" fill="rgb(211,194,32)" rx="2" ry="2" />
<text  x="239.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.09%)</title><rect x="226.9" y="1813" width="1.0" height="15.0" fill="rgb(237,181,21)" rx="2" ry="2" />
<text  x="229.91" y="1823.5" ></text>
</g>
<g >
<title>IndexKeyComparator::operator (1,029 samples, 2.37%)</title><rect x="414.7" y="1701" width="28.0" height="15.0" fill="rgb(217,167,35)" rx="2" ry="2" />
<text  x="417.74" y="1711.5" >I..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (67 samples, 0.15%)</title><rect x="411.2" y="1669" width="1.8" height="15.0" fill="rgb(243,76,51)" rx="2" ry="2" />
<text  x="414.18" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1653" width="0.1" height="15.0" fill="rgb(225,46,18)" rx="2" ry="2" />
<text  x="233.22" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1669" width="0.1" height="15.0" fill="rgb(226,147,26)" rx="2" ry="2" />
<text  x="1192.27" y="1679.5" ></text>
</g>
<g >
<title>[perf-162284.map] (5 samples, 0.01%)</title><rect x="59.3" y="1333" width="0.1" height="15.0" fill="rgb(228,142,21)" rx="2" ry="2" />
<text  x="62.26" y="1343.5" ></text>
</g>
<g >
<title>malloc (76 samples, 0.18%)</title><rect x="671.0" y="1829" width="2.1" height="15.0" fill="rgb(251,2,27)" rx="2" ry="2" />
<text  x="674.03" y="1839.5" ></text>
</g>
<g >
<title>__libc_write (5 samples, 0.01%)</title><rect x="689.5" y="1781" width="0.1" height="15.0" fill="rgb(212,124,8)" rx="2" ry="2" />
<text  x="692.47" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57 samples, 0.13%)</title><rect x="685.9" y="1589" width="1.6" height="15.0" fill="rgb(211,50,53)" rx="2" ry="2" />
<text  x="688.93" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="10.7" y="1749" width="0.4" height="15.0" fill="rgb(207,47,24)" rx="2" ry="2" />
<text  x="13.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.06%)</title><rect x="214.0" y="1829" width="0.6" height="15.0" fill="rgb(237,139,41)" rx="2" ry="2" />
<text  x="216.99" y="1839.5" ></text>
</g>
<g >
<title>[perf-162284.map] (8 samples, 0.02%)</title><rect x="59.2" y="1381" width="0.2" height="15.0" fill="rgb(231,18,54)" rx="2" ry="2" />
<text  x="62.17" y="1391.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="231.1" y="1717" width="0.1" height="15.0" fill="rgb(221,80,30)" rx="2" ry="2" />
<text  x="234.12" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1781" width="0.2" height="15.0" fill="rgb(206,1,29)" rx="2" ry="2" />
<text  x="57.63" y="1791.5" ></text>
</g>
<g >
<title>TypeChar::CompareGreaterThan (19 samples, 0.04%)</title><rect x="415.5" y="1669" width="0.5" height="15.0" fill="rgb(234,80,15)" rx="2" ry="2" />
<text  x="418.47" y="1679.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (17 samples, 0.04%)</title><rect x="407.0" y="1685" width="0.5" height="15.0" fill="rgb(243,5,0)" rx="2" ry="2" />
<text  x="410.01" y="1695.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (19 samples, 0.04%)</title><rect x="329.3" y="1557" width="0.6" height="15.0" fill="rgb(234,89,31)" rx="2" ry="2" />
<text  x="332.34" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1701" width="0.1" height="15.0" fill="rgb(246,25,24)" rx="2" ry="2" />
<text  x="99.30" y="1711.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (6 samples, 0.01%)</title><rect x="496.6" y="1653" width="0.1" height="15.0" fill="rgb(216,38,26)" rx="2" ry="2" />
<text  x="499.55" y="1663.5" ></text>
</g>
<g >
<title>[ntfs-3g] (176 samples, 0.41%)</title><rect x="547.2" y="1813" width="4.8" height="15.0" fill="rgb(229,34,17)" rx="2" ry="2" />
<text  x="550.17" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (732 samples, 1.69%)</title><rect x="526.9" y="1717" width="19.9" height="15.0" fill="rgb(241,78,1)" rx="2" ry="2" />
<text  x="529.93" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="591.5" y="1429" width="1.3" height="15.0" fill="rgb(238,2,18)" rx="2" ry="2" />
<text  x="594.50" y="1439.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1813" width="0.1" height="15.0" fill="rgb(226,198,10)" rx="2" ry="2" />
<text  x="248.21" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (4 samples, 0.01%)</title><rect x="320.9" y="1541" width="0.1" height="15.0" fill="rgb(221,83,18)" rx="2" ry="2" />
<text  x="323.93" y="1551.5" ></text>
</g>
<g >
<title>std::ostream::write (5 samples, 0.01%)</title><rect x="245.6" y="1797" width="0.2" height="15.0" fill="rgb(207,7,18)" rx="2" ry="2" />
<text  x="248.62" y="1807.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (20 samples, 0.05%)</title><rect x="521.2" y="1797" width="0.5" height="15.0" fill="rgb(236,129,40)" rx="2" ry="2" />
<text  x="524.19" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,227 samples, 2.83%)</title><rect x="124.5" y="1669" width="33.4" height="15.0" fill="rgb(249,198,53)" rx="2" ry="2" />
<text  x="127.48" y="1679.5" >[[..</text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="57.8" y="1237" width="1.1" height="15.0" fill="rgb(218,189,54)" rx="2" ry="2" />
<text  x="60.81" y="1247.5" ></text>
</g>
<g >
<title>epoll_wait (4 samples, 0.01%)</title><rect x="14.4" y="1685" width="0.1" height="15.0" fill="rgb(251,108,0)" rx="2" ry="2" />
<text  x="17.43" y="1695.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="501" width="0.1" height="15.0" fill="rgb(246,95,31)" rx="2" ry="2" />
<text  x="61.79" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1151.1" y="1541" width="0.1" height="15.0" fill="rgb(253,30,26)" rx="2" ry="2" />
<text  x="1154.05" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="317.8" y="1605" width="0.1" height="15.0" fill="rgb(213,14,24)" rx="2" ry="2" />
<text  x="320.80" y="1615.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::ValueAt (11 samples, 0.03%)</title><rect x="294.0" y="1669" width="0.3" height="15.0" fill="rgb(244,116,53)" rx="2" ry="2" />
<text  x="296.98" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (5 samples, 0.01%)</title><rect x="502.6" y="1653" width="0.2" height="15.0" fill="rgb(241,224,31)" rx="2" ry="2" />
<text  x="505.62" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (31 samples, 0.07%)</title><rect x="399.0" y="1589" width="0.8" height="15.0" fill="rgb(238,129,21)" rx="2" ry="2" />
<text  x="401.96" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (247 samples, 0.57%)</title><rect x="353.0" y="1461" width="6.7" height="15.0" fill="rgb(206,192,6)" rx="2" ry="2" />
<text  x="356.00" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="61.1" y="1589" width="0.1" height="15.0" fill="rgb(211,25,11)" rx="2" ry="2" />
<text  x="64.11" y="1599.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (5 samples, 0.01%)</title><rect x="465.8" y="1669" width="0.1" height="15.0" fill="rgb(250,184,13)" rx="2" ry="2" />
<text  x="468.76" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (13 samples, 0.03%)</title><rect x="471.3" y="1701" width="0.3" height="15.0" fill="rgb(221,132,13)" rx="2" ry="2" />
<text  x="474.28" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1749" width="0.1" height="15.0" fill="rgb(210,191,45)" rx="2" ry="2" />
<text  x="219.65" y="1759.5" ></text>
</g>
<g >
<title>DefaultDispatch (10 samples, 0.02%)</title><rect x="17.0" y="1845" width="0.3" height="15.0" fill="rgb(232,39,45)" rx="2" ry="2" />
<text  x="20.02" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (33 samples, 0.08%)</title><rect x="659.6" y="1669" width="0.9" height="15.0" fill="rgb(246,142,32)" rx="2" ry="2" />
<text  x="662.63" y="1679.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="20.6" y="1797" width="0.7" height="15.0" fill="rgb(234,198,48)" rx="2" ry="2" />
<text  x="23.63" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (4 samples, 0.01%)</title><rect x="326.7" y="1605" width="0.1" height="15.0" fill="rgb(225,28,15)" rx="2" ry="2" />
<text  x="329.67" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (93 samples, 0.21%)</title><rect x="155.3" y="1445" width="2.5" height="15.0" fill="rgb(240,13,2)" rx="2" ry="2" />
<text  x="158.29" y="1455.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.01%)</title><rect x="321.0" y="1541" width="0.1" height="15.0" fill="rgb(251,33,3)" rx="2" ry="2" />
<text  x="324.04" y="1551.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (43 samples, 0.10%)</title><rect x="453.8" y="1653" width="1.1" height="15.0" fill="rgb(209,125,2)" rx="2" ry="2" />
<text  x="456.77" y="1663.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WLock (18 samples, 0.04%)</title><rect x="496.4" y="1685" width="0.5" height="15.0" fill="rgb(213,0,36)" rx="2" ry="2" />
<text  x="499.42" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (10 samples, 0.02%)</title><rect x="310.2" y="1605" width="0.3" height="15.0" fill="rgb(219,138,7)" rx="2" ry="2" />
<text  x="313.22" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 0.10%)</title><rect x="684.3" y="1653" width="1.3" height="15.0" fill="rgb(243,156,43)" rx="2" ry="2" />
<text  x="687.33" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="12.7" y="1541" width="0.3" height="15.0" fill="rgb(231,161,32)" rx="2" ry="2" />
<text  x="15.69" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="234.9" y="1797" width="0.3" height="15.0" fill="rgb(220,217,42)" rx="2" ry="2" />
<text  x="237.93" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="236.1" y="1749" width="0.2" height="15.0" fill="rgb(250,182,30)" rx="2" ry="2" />
<text  x="239.13" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1765" width="0.1" height="15.0" fill="rgb(223,52,33)" rx="2" ry="2" />
<text  x="13.11" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (8 samples, 0.02%)</title><rect x="484.7" y="1637" width="0.3" height="15.0" fill="rgb(227,122,33)" rx="2" ry="2" />
<text  x="487.75" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (9 samples, 0.02%)</title><rect x="427.4" y="1637" width="0.3" height="15.0" fill="rgb(241,1,9)" rx="2" ry="2" />
<text  x="430.44" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (549 samples, 1.27%)</title><rect x="1170.3" y="1573" width="14.9" height="15.0" fill="rgb(207,34,37)" rx="2" ry="2" />
<text  x="1173.31" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1765" width="0.2" height="15.0" fill="rgb(237,186,38)" rx="2" ry="2" />
<text  x="57.63" y="1775.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (9 samples, 0.02%)</title><rect x="325.5" y="1589" width="0.2" height="15.0" fill="rgb(236,43,23)" rx="2" ry="2" />
<text  x="328.50" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="234.9" y="1829" width="0.3" height="15.0" fill="rgb(243,4,28)" rx="2" ry="2" />
<text  x="237.93" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (6 samples, 0.01%)</title><rect x="491.6" y="1685" width="0.2" height="15.0" fill="rgb(242,26,35)" rx="2" ry="2" />
<text  x="494.63" y="1695.5" ></text>
</g>
<g >
<title>Field::Field (96 samples, 0.22%)</title><rect x="383.2" y="1605" width="2.6" height="15.0" fill="rgb(249,81,14)" rx="2" ry="2" />
<text  x="386.22" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%)</title><rect x="19.9" y="1829" width="0.2" height="15.0" fill="rgb(253,215,40)" rx="2" ry="2" />
<text  x="22.93" y="1839.5" ></text>
</g>
<g >
<title>__poll (1,160 samples, 2.67%)</title><rect x="173.9" y="1797" width="31.5" height="15.0" fill="rgb(232,214,17)" rx="2" ry="2" />
<text  x="176.90" y="1807.5" >__..</text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="23.1" y="1653" width="0.2" height="15.0" fill="rgb(232,179,50)" rx="2" ry="2" />
<text  x="26.08" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1701" width="0.2" height="15.0" fill="rgb(221,152,5)" rx="2" ry="2" />
<text  x="24.75" y="1711.5" ></text>
</g>
<g >
<title>Page::WUnlatch (17 samples, 0.04%)</title><rect x="497.0" y="1701" width="0.5" height="15.0" fill="rgb(221,228,42)" rx="2" ry="2" />
<text  x="500.01" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (10 samples, 0.02%)</title><rect x="295.7" y="1653" width="0.2" height="15.0" fill="rgb(214,23,6)" rx="2" ry="2" />
<text  x="298.66" y="1663.5" ></text>
</g>
<g >
<title>__libc_send (6 samples, 0.01%)</title><rect x="10.4" y="1829" width="0.2" height="15.0" fill="rgb(216,40,42)" rx="2" ry="2" />
<text  x="13.44" y="1839.5" ></text>
</g>
<g >
<title>[postgres] (8 samples, 0.02%)</title><rect x="687.8" y="1749" width="0.3" height="15.0" fill="rgb(246,119,20)" rx="2" ry="2" />
<text  x="690.84" y="1759.5" ></text>
</g>
<g >
<title>vmnet-natd (8 samples, 0.02%)</title><rect x="1188.4" y="1845" width="0.3" height="15.0" fill="rgb(221,93,28)" rx="2" ry="2" />
<text  x="1191.45" y="1855.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (17 samples, 0.04%)</title><rect x="385.2" y="1557" width="0.5" height="15.0" fill="rgb(246,223,36)" rx="2" ry="2" />
<text  x="388.23" y="1567.5" ></text>
</g>
<g >
<title>[perf-162284.map] (4 samples, 0.01%)</title><rect x="59.3" y="1317" width="0.1" height="15.0" fill="rgb(224,199,39)" rx="2" ry="2" />
<text  x="62.28" y="1327.5" ></text>
</g>
<g >
<title>[msedge] (9 samples, 0.02%)</title><rect x="20.9" y="1621" width="0.3" height="15.0" fill="rgb(241,123,0)" rx="2" ry="2" />
<text  x="23.91" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="679.4" y="1701" width="0.2" height="15.0" fill="rgb(240,180,21)" rx="2" ry="2" />
<text  x="682.35" y="1711.5" ></text>
</g>
<g >
<title>malloc_consolidate (20 samples, 0.05%)</title><rect x="673.1" y="1829" width="0.5" height="15.0" fill="rgb(234,229,48)" rx="2" ry="2" />
<text  x="676.10" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (437 samples, 1.01%)</title><rect x="347.8" y="1605" width="11.9" height="15.0" fill="rgb(214,48,28)" rx="2" ry="2" />
<text  x="350.83" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,112 samples, 2.56%)</title><rect x="66.2" y="1749" width="30.2" height="15.0" fill="rgb(231,113,2)" rx="2" ry="2" />
<text  x="69.19" y="1759.5" >[[..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.03%)</title><rect x="495.4" y="1637" width="0.3" height="15.0" fill="rgb(253,164,51)" rx="2" ry="2" />
<text  x="498.35" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="25.1" y="1813" width="0.2" height="15.0" fill="rgb(228,24,34)" rx="2" ry="2" />
<text  x="28.12" y="1823.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1733" width="0.3" height="15.0" fill="rgb(219,144,44)" rx="2" ry="2" />
<text  x="228.41" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1653" width="0.1" height="15.0" fill="rgb(243,0,2)" rx="2" ry="2" />
<text  x="219.65" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="242.3" y="1749" width="0.5" height="15.0" fill="rgb(221,67,44)" rx="2" ry="2" />
<text  x="245.30" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (18 samples, 0.04%)</title><rect x="486.2" y="1701" width="0.5" height="15.0" fill="rgb(206,116,12)" rx="2" ry="2" />
<text  x="489.19" y="1711.5" ></text>
</g>
<g >
<title>gmain (22 samples, 0.05%)</title><rect x="224.5" y="1845" width="0.6" height="15.0" fill="rgb(250,184,12)" rx="2" ry="2" />
<text  x="227.49" y="1855.5" ></text>
</g>
<g >
<title>BPlusTreeIndex::AdjustBufferFor (5 samples, 0.01%)</title><rect x="470.2" y="1749" width="0.1" height="15.0" fill="rgb(241,82,13)" rx="2" ry="2" />
<text  x="473.20" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (8 samples, 0.02%)</title><rect x="316.7" y="1621" width="0.2" height="15.0" fill="rgb(238,169,22)" rx="2" ry="2" />
<text  x="319.72" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="224.0" y="1813" width="0.1" height="15.0" fill="rgb(217,52,48)" rx="2" ry="2" />
<text  x="226.97" y="1823.5" ></text>
</g>
<g >
<title>dbus-daemon (82 samples, 0.19%)</title><rect x="215.8" y="1845" width="2.2" height="15.0" fill="rgb(237,102,14)" rx="2" ry="2" />
<text  x="218.81" y="1855.5" ></text>
</g>
<g >
<title>g_main_context_dispatch (12 samples, 0.03%)</title><rect x="679.3" y="1813" width="0.3" height="15.0" fill="rgb(251,102,51)" rx="2" ry="2" />
<text  x="682.30" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (367 samples, 0.85%)</title><rect x="621.9" y="1589" width="9.9" height="15.0" fill="rgb(234,5,8)" rx="2" ry="2" />
<text  x="624.85" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="60.9" y="1749" width="0.3" height="15.0" fill="rgb(247,67,33)" rx="2" ry="2" />
<text  x="63.92" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (35 samples, 0.08%)</title><rect x="320.6" y="1573" width="0.9" height="15.0" fill="rgb(227,149,10)" rx="2" ry="2" />
<text  x="323.55" y="1583.5" ></text>
</g>
<g >
<title>ib_io_log (6 samples, 0.01%)</title><rect x="231.1" y="1845" width="0.1" height="15.0" fill="rgb(242,159,48)" rx="2" ry="2" />
<text  x="234.07" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="228.2" y="1701" width="0.1" height="15.0" fill="rgb(210,81,15)" rx="2" ry="2" />
<text  x="231.16" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (47 samples, 0.11%)</title><rect x="392.4" y="1589" width="1.2" height="15.0" fill="rgb(216,55,16)" rx="2" ry="2" />
<text  x="395.35" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (827 samples, 1.91%)</title><rect x="524.7" y="1797" width="22.5" height="15.0" fill="rgb(249,205,13)" rx="2" ry="2" />
<text  x="527.67" y="1807.5" >[..</text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (12 samples, 0.03%)</title><rect x="492.9" y="1717" width="0.3" height="15.0" fill="rgb(244,171,30)" rx="2" ry="2" />
<text  x="495.91" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1797" width="0.8" height="15.0" fill="rgb(227,201,48)" rx="2" ry="2" />
<text  x="684.77" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (7 samples, 0.02%)</title><rect x="501.8" y="1621" width="0.2" height="15.0" fill="rgb(249,40,38)" rx="2" ry="2" />
<text  x="504.83" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="240.8" y="1781" width="0.4" height="15.0" fill="rgb(241,221,16)" rx="2" ry="2" />
<text  x="243.81" y="1791.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (18 samples, 0.04%)</title><rect x="116.4" y="1733" width="0.5" height="15.0" fill="rgb(232,78,54)" rx="2" ry="2" />
<text  x="119.37" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (6 samples, 0.01%)</title><rect x="472.4" y="1701" width="0.2" height="15.0" fill="rgb(254,203,37)" rx="2" ry="2" />
<text  x="475.40" y="1711.5" ></text>
</g>
<g >
<title>BPlusTreeInternalPage::KeyAt (10 samples, 0.02%)</title><rect x="408.0" y="1701" width="0.2" height="15.0" fill="rgb(238,116,13)" rx="2" ry="2" />
<text  x="410.97" y="1711.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (13 samples, 0.03%)</title><rect x="106.2" y="1797" width="0.3" height="15.0" fill="rgb(247,143,47)" rx="2" ry="2" />
<text  x="109.17" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="358.4" y="1301" width="1.3" height="15.0" fill="rgb(208,162,12)" rx="2" ry="2" />
<text  x="361.44" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="243.6" y="1733" width="0.4" height="15.0" fill="rgb(250,107,41)" rx="2" ry="2" />
<text  x="246.61" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (19 samples, 0.04%)</title><rect x="485.4" y="1701" width="0.5" height="15.0" fill="rgb(234,162,44)" rx="2" ry="2" />
<text  x="488.43" y="1711.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1749" width="1.3" height="15.0" fill="rgb(254,75,19)" rx="2" ry="2" />
<text  x="14.12" y="1759.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (21 samples, 0.05%)</title><rect x="682.7" y="1829" width="0.6" height="15.0" fill="rgb(247,135,51)" rx="2" ry="2" />
<text  x="685.70" y="1839.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="357" width="0.1" height="15.0" fill="rgb(245,20,47)" rx="2" ry="2" />
<text  x="61.79" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (5 samples, 0.01%)</title><rect x="486.4" y="1653" width="0.2" height="15.0" fill="rgb(251,80,38)" rx="2" ry="2" />
<text  x="489.43" y="1663.5" ></text>
</g>
<g >
<title>Page::WUnlatch (13 samples, 0.03%)</title><rect x="487.2" y="1733" width="0.4" height="15.0" fill="rgb(213,115,29)" rx="2" ry="2" />
<text  x="490.25" y="1743.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (5 samples, 0.01%)</title><rect x="334.1" y="1621" width="0.1" height="15.0" fill="rgb(252,152,23)" rx="2" ry="2" />
<text  x="337.10" y="1631.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (24 samples, 0.06%)</title><rect x="307.8" y="1541" width="0.6" height="15.0" fill="rgb(220,141,40)" rx="2" ry="2" />
<text  x="310.77" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1717" width="0.2" height="15.0" fill="rgb(238,91,51)" rx="2" ry="2" />
<text  x="57.63" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="691.2" y="1669" width="0.3" height="15.0" fill="rgb(249,221,54)" rx="2" ry="2" />
<text  x="694.18" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="236.1" y="1765" width="0.2" height="15.0" fill="rgb(230,177,54)" rx="2" ry="2" />
<text  x="239.10" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (5 samples, 0.01%)</title><rect x="327.9" y="1605" width="0.2" height="15.0" fill="rgb(239,157,30)" rx="2" ry="2" />
<text  x="330.92" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1717" width="0.2" height="15.0" fill="rgb(235,3,41)" rx="2" ry="2" />
<text  x="234.72" y="1727.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (10 samples, 0.02%)</title><rect x="112.3" y="1701" width="0.3" height="15.0" fill="rgb(210,81,27)" rx="2" ry="2" />
<text  x="115.29" y="1711.5" ></text>
</g>
<g >
<title>ntfs_index_entry_inconsistent (4 samples, 0.01%)</title><rect x="648.5" y="1813" width="0.1" height="15.0" fill="rgb(233,105,18)" rx="2" ry="2" />
<text  x="651.48" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1797" width="0.1" height="15.0" fill="rgb(236,200,32)" rx="2" ry="2" />
<text  x="223.90" y="1807.5" ></text>
</g>
<g >
<title>nvme_complete_rq (4 samples, 0.01%)</title><rect x="1151.1" y="1573" width="0.1" height="15.0" fill="rgb(215,48,35)" rx="2" ry="2" />
<text  x="1154.05" y="1583.5" ></text>
</g>
<g >
<title>DiskManager::WritePage (4 samples, 0.01%)</title><rect x="480.8" y="1733" width="0.1" height="15.0" fill="rgb(222,105,53)" rx="2" ry="2" />
<text  x="483.80" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1749" width="0.1" height="15.0" fill="rgb(224,183,50)" rx="2" ry="2" />
<text  x="23.25" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1813" width="0.2" height="15.0" fill="rgb(226,4,20)" rx="2" ry="2" />
<text  x="217.69" y="1823.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.01%)</title><rect x="21.7" y="1813" width="0.2" height="15.0" fill="rgb(212,168,44)" rx="2" ry="2" />
<text  x="24.72" y="1823.5" ></text>
</g>
<g >
<title>ThreadPoolServi (15 samples, 0.03%)</title><rect x="21.3" y="1845" width="0.4" height="15.0" fill="rgb(233,163,22)" rx="2" ry="2" />
<text  x="24.29" y="1855.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (7 samples, 0.02%)</title><rect x="296.1" y="1669" width="0.2" height="15.0" fill="rgb(245,61,14)" rx="2" ry="2" />
<text  x="299.10" y="1679.5" ></text>
</g>
<g >
<title>atopacctd (4 samples, 0.01%)</title><rect x="24.3" y="1845" width="0.1" height="15.0" fill="rgb(223,7,18)" rx="2" ry="2" />
<text  x="27.28" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (8 samples, 0.02%)</title><rect x="426.1" y="1637" width="0.2" height="15.0" fill="rgb(246,86,51)" rx="2" ry="2" />
<text  x="429.11" y="1647.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (12 samples, 0.03%)</title><rect x="17.5" y="1765" width="0.3" height="15.0" fill="rgb(230,221,5)" rx="2" ry="2" />
<text  x="20.51" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (10 samples, 0.02%)</title><rect x="373.8" y="1637" width="0.2" height="15.0" fill="rgb(206,129,47)" rx="2" ry="2" />
<text  x="376.75" y="1647.5" ></text>
</g>
<g >
<title>IndexKey::operator== (8 samples, 0.02%)</title><rect x="414.5" y="1701" width="0.2" height="15.0" fill="rgb(237,150,38)" rx="2" ry="2" />
<text  x="417.52" y="1711.5" ></text>
</g>
<g >
<title>[ntfs-3g] (202 samples, 0.47%)</title><rect x="516.8" y="1829" width="5.5" height="15.0" fill="rgb(221,76,16)" rx="2" ry="2" />
<text  x="519.81" y="1839.5" ></text>
</g>
<g >
<title>cmd_record (133 samples, 0.31%)</title><rect x="683.9" y="1781" width="3.6" height="15.0" fill="rgb(233,112,27)" rx="2" ry="2" />
<text  x="686.92" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (25 samples, 0.06%)</title><rect x="315.7" y="1621" width="0.6" height="15.0" fill="rgb(221,216,8)" rx="2" ry="2" />
<text  x="318.65" y="1631.5" ></text>
</g>
<g >
<title>[perf-162284.map] (4 samples, 0.01%)</title><rect x="59.0" y="1365" width="0.1" height="15.0" fill="rgb(220,51,49)" rx="2" ry="2" />
<text  x="61.96" y="1375.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1717" width="0.1" height="15.0" fill="rgb(221,201,26)" rx="2" ry="2" />
<text  x="1192.27" y="1727.5" ></text>
</g>
<g >
<title>JSScript::traceChildren (4 samples, 0.01%)</title><rect x="226.4" y="1653" width="0.1" height="15.0" fill="rgb(246,157,28)" rx="2" ry="2" />
<text  x="229.39" y="1663.5" ></text>
</g>
<g >
<title>systemd-resolve (4 samples, 0.01%)</title><rect x="1188.2" y="1845" width="0.1" height="15.0" fill="rgb(211,49,53)" rx="2" ry="2" />
<text  x="1191.20" y="1855.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (96 samples, 0.22%)</title><rect x="423.2" y="1653" width="2.6" height="15.0" fill="rgb(236,90,7)" rx="2" ry="2" />
<text  x="426.22" y="1663.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (66 samples, 0.15%)</title><rect x="117.1" y="1733" width="1.8" height="15.0" fill="rgb(243,196,2)" rx="2" ry="2" />
<text  x="120.13" y="1743.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (15 samples, 0.03%)</title><rect x="475.3" y="1733" width="0.4" height="15.0" fill="rgb(246,80,46)" rx="2" ry="2" />
<text  x="478.28" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (6 samples, 0.01%)</title><rect x="481.7" y="1653" width="0.2" height="15.0" fill="rgb(230,57,4)" rx="2" ry="2" />
<text  x="484.73" y="1663.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (9 samples, 0.02%)</title><rect x="486.7" y="1685" width="0.3" height="15.0" fill="rgb(240,24,18)" rx="2" ry="2" />
<text  x="489.71" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="253.4" y="1605" width="0.2" height="15.0" fill="rgb(240,33,53)" rx="2" ry="2" />
<text  x="256.43" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="214.7" y="1637" width="0.2" height="15.0" fill="rgb(239,0,9)" rx="2" ry="2" />
<text  x="217.75" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (963 samples, 2.22%)</title><rect x="179.2" y="1717" width="26.2" height="15.0" fill="rgb(215,27,26)" rx="2" ry="2" />
<text  x="182.23" y="1727.5" >[..</text>
</g>
<g >
<title>[libnvidia-glcore.so.470.129.06] (4 samples, 0.01%)</title><rect x="678.9" y="1813" width="0.1" height="15.0" fill="rgb(243,155,20)" rx="2" ry="2" />
<text  x="681.92" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1749" width="0.1" height="15.0" fill="rgb(218,86,8)" rx="2" ry="2" />
<text  x="248.21" y="1759.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.1" y="1621" width="0.2" height="15.0" fill="rgb(216,152,29)" rx="2" ry="2" />
<text  x="26.11" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="689.5" y="1765" width="0.1" height="15.0" fill="rgb(253,14,43)" rx="2" ry="2" />
<text  x="692.47" y="1775.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.01%)</title><rect x="26.7" y="1813" width="0.1" height="15.0" fill="rgb(244,208,8)" rx="2" ry="2" />
<text  x="29.67" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (154 samples, 0.35%)</title><rect x="355.5" y="1429" width="4.2" height="15.0" fill="rgb(238,211,38)" rx="2" ry="2" />
<text  x="358.53" y="1439.5" ></text>
</g>
<g >
<title>[[vdso]] (14 samples, 0.03%)</title><rect x="14.9" y="1813" width="0.4" height="15.0" fill="rgb(210,49,2)" rx="2" ry="2" />
<text  x="17.92" y="1823.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (8 samples, 0.02%)</title><rect x="394.1" y="1621" width="0.2" height="15.0" fill="rgb(228,181,41)" rx="2" ry="2" />
<text  x="397.09" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="26.1" y="1637" width="0.2" height="15.0" fill="rgb(228,52,39)" rx="2" ry="2" />
<text  x="29.13" y="1647.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (9 samples, 0.02%)</title><rect x="340.8" y="1621" width="0.2" height="15.0" fill="rgb(213,77,14)" rx="2" ry="2" />
<text  x="343.79" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="370.2" y="1637" width="0.1" height="15.0" fill="rgb(242,107,6)" rx="2" ry="2" />
<text  x="373.16" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (215 samples, 0.50%)</title><rect x="100.3" y="1717" width="5.8" height="15.0" fill="rgb(235,153,54)" rx="2" ry="2" />
<text  x="103.30" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1765" width="0.2" height="15.0" fill="rgb(209,6,15)" rx="2" ry="2" />
<text  x="26.46" y="1775.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="679.3" y="1797" width="0.3" height="15.0" fill="rgb(237,50,11)" rx="2" ry="2" />
<text  x="682.30" y="1807.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (5 samples, 0.01%)</title><rect x="475.0" y="1701" width="0.1" height="15.0" fill="rgb(239,226,43)" rx="2" ry="2" />
<text  x="477.96" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="389.5" y="1637" width="0.2" height="15.0" fill="rgb(228,97,46)" rx="2" ry="2" />
<text  x="392.47" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (16 samples, 0.04%)</title><rect x="12.6" y="1589" width="0.4" height="15.0" fill="rgb(215,87,21)" rx="2" ry="2" />
<text  x="15.58" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="239.6" y="1733" width="0.4" height="15.0" fill="rgb(222,44,44)" rx="2" ry="2" />
<text  x="242.61" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27 samples, 0.06%)</title><rect x="240.0" y="1765" width="0.8" height="15.0" fill="rgb(235,186,24)" rx="2" ry="2" />
<text  x="243.02" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="242.0" y="1749" width="0.2" height="15.0" fill="rgb(206,93,36)" rx="2" ry="2" />
<text  x="244.97" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (4 samples, 0.01%)</title><rect x="295.8" y="1621" width="0.1" height="15.0" fill="rgb(254,40,37)" rx="2" ry="2" />
<text  x="298.80" y="1631.5" ></text>
</g>
<g >
<title>Field::GetLength (4 samples, 0.01%)</title><rect x="448.3" y="1669" width="0.1" height="15.0" fill="rgb(246,191,2)" rx="2" ry="2" />
<text  x="451.33" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (208 samples, 0.48%)</title><rect x="247.9" y="1701" width="5.7" height="15.0" fill="rgb(231,218,48)" rx="2" ry="2" />
<text  x="250.90" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (13 samples, 0.03%)</title><rect x="321.5" y="1589" width="0.4" height="15.0" fill="rgb(242,118,39)" rx="2" ry="2" />
<text  x="324.53" y="1599.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (16 samples, 0.04%)</title><rect x="489.9" y="1701" width="0.5" height="15.0" fill="rgb(233,141,43)" rx="2" ry="2" />
<text  x="492.94" y="1711.5" ></text>
</g>
<g >
<title>[code] (17 samples, 0.04%)</title><rect x="58.4" y="917" width="0.5" height="15.0" fill="rgb(245,74,27)" rx="2" ry="2" />
<text  x="61.44" y="927.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (5 samples, 0.01%)</title><rect x="397.9" y="1621" width="0.2" height="15.0" fill="rgb(245,196,16)" rx="2" ry="2" />
<text  x="400.93" y="1631.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="466.2" y="1717" width="0.1" height="15.0" fill="rgb(231,133,35)" rx="2" ry="2" />
<text  x="469.20" y="1727.5" ></text>
</g>
<g >
<title>[[vdso]] (17 samples, 0.04%)</title><rect x="10.6" y="1813" width="0.5" height="15.0" fill="rgb(206,86,35)" rx="2" ry="2" />
<text  x="13.60" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="253.4" y="1573" width="0.2" height="15.0" fill="rgb(231,130,9)" rx="2" ry="2" />
<text  x="256.43" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1765" width="0.6" height="15.0" fill="rgb(245,172,25)" rx="2" ry="2" />
<text  x="16.86" y="1775.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (18 samples, 0.04%)</title><rect x="13.3" y="1829" width="0.5" height="15.0" fill="rgb(246,170,37)" rx="2" ry="2" />
<text  x="16.35" y="1839.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (10 samples, 0.02%)</title><rect x="217.1" y="1813" width="0.2" height="15.0" fill="rgb(220,172,8)" rx="2" ry="2" />
<text  x="220.06" y="1823.5" ></text>
</g>
<g >
<title>kworker/1:1-eve (23 samples, 0.05%)</title><rect x="239.3" y="1845" width="0.7" height="15.0" fill="rgb(217,128,54)" rx="2" ry="2" />
<text  x="242.34" y="1855.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="533" width="0.1" height="15.0" fill="rgb(242,209,35)" rx="2" ry="2" />
<text  x="61.79" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="417.3" y="1653" width="0.1" height="15.0" fill="rgb(215,205,47)" rx="2" ry="2" />
<text  x="420.32" y="1663.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (133 samples, 0.31%)</title><rect x="382.7" y="1637" width="3.6" height="15.0" fill="rgb(252,137,24)" rx="2" ry="2" />
<text  x="385.67" y="1647.5" ></text>
</g>
<g >
<title>TypeChar::CompareLessThan (40 samples, 0.09%)</title><rect x="416.3" y="1669" width="1.1" height="15.0" fill="rgb(215,219,53)" rx="2" ry="2" />
<text  x="419.34" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (22 samples, 0.05%)</title><rect x="397.0" y="1605" width="0.6" height="15.0" fill="rgb(248,182,40)" rx="2" ry="2" />
<text  x="399.98" y="1615.5" ></text>
</g>
<g >
<title>DiskManager::WritePage (4 samples, 0.01%)</title><rect x="376.7" y="1685" width="0.1" height="15.0" fill="rgb(247,175,3)" rx="2" ry="2" />
<text  x="379.69" y="1695.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (46 samples, 0.11%)</title><rect x="413.1" y="1701" width="1.2" height="15.0" fill="rgb(210,65,15)" rx="2" ry="2" />
<text  x="416.05" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="687.4" y="1381" width="0.1" height="15.0" fill="rgb(253,183,13)" rx="2" ry="2" />
<text  x="690.37" y="1391.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (4 samples, 0.01%)</title><rect x="491.5" y="1637" width="0.1" height="15.0" fill="rgb(225,53,7)" rx="2" ry="2" />
<text  x="494.52" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="215.3" y="1653" width="0.1" height="15.0" fill="rgb(246,202,33)" rx="2" ry="2" />
<text  x="218.29" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="240.6" y="1653" width="0.2" height="15.0" fill="rgb(214,52,41)" rx="2" ry="2" />
<text  x="243.64" y="1663.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (55 samples, 0.13%)</title><rect x="394.9" y="1589" width="1.5" height="15.0" fill="rgb(220,202,41)" rx="2" ry="2" />
<text  x="397.86" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="243.1" y="1717" width="0.3" height="15.0" fill="rgb(211,116,6)" rx="2" ry="2" />
<text  x="246.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (5 samples, 0.01%)</title><rect x="495.5" y="1621" width="0.2" height="15.0" fill="rgb(250,140,28)" rx="2" ry="2" />
<text  x="498.52" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%)</title><rect x="481.6" y="1685" width="0.4" height="15.0" fill="rgb(210,147,22)" rx="2" ry="2" />
<text  x="484.65" y="1695.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (58 samples, 0.13%)</title><rect x="453.5" y="1669" width="1.6" height="15.0" fill="rgb(220,113,25)" rx="2" ry="2" />
<text  x="456.50" y="1679.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.01%)</title><rect x="223.6" y="1829" width="0.2" height="15.0" fill="rgb(248,198,21)" rx="2" ry="2" />
<text  x="226.62" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="546.5" y="1477" width="0.3" height="15.0" fill="rgb(226,142,48)" rx="2" ry="2" />
<text  x="549.51" y="1487.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="58.7" y="757" width="0.2" height="15.0" fill="rgb(210,45,38)" rx="2" ry="2" />
<text  x="61.69" y="767.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WLock (20 samples, 0.05%)</title><rect x="486.7" y="1717" width="0.5" height="15.0" fill="rgb(219,220,9)" rx="2" ry="2" />
<text  x="489.68" y="1727.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (34 samples, 0.08%)</title><rect x="484.3" y="1717" width="0.9" height="15.0" fill="rgb(205,146,45)" rx="2" ry="2" />
<text  x="487.28" y="1727.5" ></text>
</g>
<g >
<title>operator new[] (10 samples, 0.02%)</title><rect x="114.7" y="1701" width="0.3" height="15.0" fill="rgb(217,45,47)" rx="2" ry="2" />
<text  x="117.71" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="688.3" y="1637" width="0.1" height="15.0" fill="rgb(217,71,52)" rx="2" ry="2" />
<text  x="691.27" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121 samples, 0.28%)</title><rect x="102.9" y="1669" width="3.2" height="15.0" fill="rgb(236,176,14)" rx="2" ry="2" />
<text  x="105.86" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::max_size (9 samples, 0.02%)</title><rect x="507.2" y="1717" width="0.3" height="15.0" fill="rgb(218,28,20)" rx="2" ry="2" />
<text  x="510.21" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (228 samples, 0.53%)</title><rect x="540.6" y="1573" width="6.2" height="15.0" fill="rgb(230,129,27)" rx="2" ry="2" />
<text  x="543.64" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (7 samples, 0.02%)</title><rect x="430.7" y="1573" width="0.2" height="15.0" fill="rgb(224,77,36)" rx="2" ry="2" />
<text  x="433.68" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="373.9" y="1605" width="0.1" height="15.0" fill="rgb(244,53,45)" rx="2" ry="2" />
<text  x="376.89" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (17 samples, 0.04%)</title><rect x="682.0" y="1493" width="0.5" height="15.0" fill="rgb(233,59,23)" rx="2" ry="2" />
<text  x="685.04" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30 samples, 0.07%)</title><rect x="288.6" y="1365" width="0.8" height="15.0" fill="rgb(216,23,54)" rx="2" ry="2" />
<text  x="291.57" y="1375.5" ></text>
</g>
<g >
<title>BPlusTreeInternalPage::KeyAt (8 samples, 0.02%)</title><rect x="343.0" y="1685" width="0.2" height="15.0" fill="rgb(232,47,33)" rx="2" ry="2" />
<text  x="345.96" y="1695.5" ></text>
</g>
<g >
<title>__libc_calloc (25 samples, 0.06%)</title><rect x="593.1" y="1797" width="0.7" height="15.0" fill="rgb(245,78,20)" rx="2" ry="2" />
<text  x="596.08" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,141 samples, 2.63%)</title><rect x="561.7" y="1701" width="31.1" height="15.0" fill="rgb(250,147,11)" rx="2" ry="2" />
<text  x="564.75" y="1711.5" >[[..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%)</title><rect x="1188.0" y="1829" width="0.1" height="15.0" fill="rgb(215,145,51)" rx="2" ry="2" />
<text  x="1191.01" y="1839.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (109 samples, 0.25%)</title><rect x="209.2" y="1797" width="3.0" height="15.0" fill="rgb(239,75,40)" rx="2" ry="2" />
<text  x="212.20" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="10.1" y="1829" width="0.1" height="15.0" fill="rgb(252,6,15)" rx="2" ry="2" />
<text  x="13.05" y="1839.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::erase (53 samples, 0.12%)</title><rect x="368.6" y="1669" width="1.4" height="15.0" fill="rgb(233,148,32)" rx="2" ry="2" />
<text  x="371.56" y="1679.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="159.9" y="1733" width="0.2" height="15.0" fill="rgb(241,203,22)" rx="2" ry="2" />
<text  x="162.86" y="1743.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (2,081 samples, 4.80%)</title><rect x="107.2" y="1781" width="56.6" height="15.0" fill="rgb(211,22,1)" rx="2" ry="2" />
<text  x="110.21" y="1791.5" >Inoti..</text>
</g>
<g >
<title>[code] (111 samples, 0.26%)</title><rect x="56.0" y="1477" width="3.1" height="15.0" fill="rgb(228,69,13)" rx="2" ry="2" />
<text  x="59.05" y="1487.5" ></text>
</g>
<g >
<title>kworker/u32:1-p (19 samples, 0.04%)</title><rect x="244.7" y="1845" width="0.5" height="15.0" fill="rgb(212,141,20)" rx="2" ry="2" />
<text  x="247.69" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="18.7" y="1765" width="0.1" height="15.0" fill="rgb(239,170,33)" rx="2" ry="2" />
<text  x="21.68" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (13 samples, 0.03%)</title><rect x="428.2" y="1653" width="0.3" height="15.0" fill="rgb(250,76,5)" rx="2" ry="2" />
<text  x="431.17" y="1663.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="372.7" y="1653" width="0.2" height="15.0" fill="rgb(232,125,49)" rx="2" ry="2" />
<text  x="375.74" y="1663.5" ></text>
</g>
<g >
<title>mmap64 (6 samples, 0.01%)</title><rect x="25.1" y="1829" width="0.2" height="15.0" fill="rgb(224,221,48)" rx="2" ry="2" />
<text  x="28.12" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="228.1" y="1781" width="0.2" height="15.0" fill="rgb(227,106,10)" rx="2" ry="2" />
<text  x="231.10" y="1791.5" ></text>
</g>
<g >
<title>[code] (14 samples, 0.03%)</title><rect x="59.7" y="1733" width="0.4" height="15.0" fill="rgb(211,109,0)" rx="2" ry="2" />
<text  x="62.72" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="214.7" y="1605" width="0.2" height="15.0" fill="rgb(240,214,39)" rx="2" ry="2" />
<text  x="217.75" y="1615.5" ></text>
</g>
<g >
<title>[libwns_push_client.so] (4 samples, 0.01%)</title><rect x="20.7" y="1589" width="0.1" height="15.0" fill="rgb(249,21,15)" rx="2" ry="2" />
<text  x="23.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (6 samples, 0.01%)</title><rect x="485.7" y="1653" width="0.2" height="15.0" fill="rgb(252,134,31)" rx="2" ry="2" />
<text  x="488.70" y="1663.5" ></text>
</g>
<g >
<title>DiskManager::ReadPhysicalPage (464 samples, 1.07%)</title><rect x="347.1" y="1653" width="12.6" height="15.0" fill="rgb(236,147,16)" rx="2" ry="2" />
<text  x="350.10" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,228 samples, 2.83%)</title><rect x="1151.8" y="1685" width="33.4" height="15.0" fill="rgb(247,187,33)" rx="2" ry="2" />
<text  x="1154.84" y="1695.5" >[[..</text>
</g>
<g >
<title>DiskManager::FetchMetaPage (27 samples, 0.06%)</title><rect x="444.4" y="1669" width="0.7" height="15.0" fill="rgb(226,197,13)" rx="2" ry="2" />
<text  x="447.36" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1765" width="0.1" height="15.0" fill="rgb(236,86,45)" rx="2" ry="2" />
<text  x="23.25" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="219.8" y="1557" width="0.1" height="15.0" fill="rgb(245,205,30)" rx="2" ry="2" />
<text  x="222.78" y="1567.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (51 samples, 0.12%)</title><rect x="451.9" y="1605" width="1.4" height="15.0" fill="rgb(205,202,48)" rx="2" ry="2" />
<text  x="454.89" y="1615.5" ></text>
</g>
<g >
<title>RowId::Get (4 samples, 0.01%)</title><rect x="478.2" y="1765" width="0.2" height="15.0" fill="rgb(253,136,28)" rx="2" ry="2" />
<text  x="481.25" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (233 samples, 0.54%)</title><rect x="391.3" y="1637" width="6.4" height="15.0" fill="rgb(223,7,39)" rx="2" ry="2" />
<text  x="394.35" y="1647.5" ></text>
</g>
<g >
<title>__poll (5 samples, 0.01%)</title><rect x="10.1" y="1781" width="0.1" height="15.0" fill="rgb(251,117,13)" rx="2" ry="2" />
<text  x="13.11" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58 samples, 0.13%)</title><rect x="680.2" y="1717" width="1.5" height="15.0" fill="rgb(244,130,30)" rx="2" ry="2" />
<text  x="683.17" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (33 samples, 0.08%)</title><rect x="430.5" y="1589" width="0.9" height="15.0" fill="rgb(227,139,47)" rx="2" ry="2" />
<text  x="433.49" y="1599.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (41 samples, 0.09%)</title><rect x="435.4" y="1637" width="1.1" height="15.0" fill="rgb(251,152,33)" rx="2" ry="2" />
<text  x="438.35" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="678.6" y="1781" width="0.3" height="15.0" fill="rgb(208,120,41)" rx="2" ry="2" />
<text  x="681.56" y="1791.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (9 samples, 0.02%)</title><rect x="454.4" y="1637" width="0.3" height="15.0" fill="rgb(213,212,31)" rx="2" ry="2" />
<text  x="457.42" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44 samples, 0.10%)</title><rect x="659.3" y="1701" width="1.2" height="15.0" fill="rgb(220,4,24)" rx="2" ry="2" />
<text  x="662.33" y="1711.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (7 samples, 0.02%)</title><rect x="474.8" y="1701" width="0.2" height="15.0" fill="rgb(251,131,13)" rx="2" ry="2" />
<text  x="477.77" y="1711.5" ></text>
</g>
<g >
<title>perf_mmap__push (67 samples, 0.15%)</title><rect x="685.7" y="1749" width="1.8" height="15.0" fill="rgb(221,140,10)" rx="2" ry="2" />
<text  x="688.66" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (758 samples, 1.75%)</title><rect x="572.2" y="1557" width="20.6" height="15.0" fill="rgb(238,80,6)" rx="2" ry="2" />
<text  x="575.16" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.01%)</title><rect x="407.5" y="1685" width="0.1" height="15.0" fill="rgb(205,60,54)" rx="2" ry="2" />
<text  x="410.53" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="18.7" y="1749" width="0.1" height="15.0" fill="rgb(209,189,18)" rx="2" ry="2" />
<text  x="21.68" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (391 samples, 0.90%)</title><rect x="582.1" y="1493" width="10.7" height="15.0" fill="rgb(244,130,29)" rx="2" ry="2" />
<text  x="585.14" y="1503.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.01%)</title><rect x="322.0" y="1605" width="0.1" height="15.0" fill="rgb(219,122,4)" rx="2" ry="2" />
<text  x="325.02" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="679.5" y="1557" width="0.1" height="15.0" fill="rgb(250,41,35)" rx="2" ry="2" />
<text  x="682.46" y="1567.5" ></text>
</g>
<g >
<title>LRUReplacer::Victim (10 samples, 0.02%)</title><rect x="481.0" y="1733" width="0.2" height="15.0" fill="rgb(230,45,43)" rx="2" ry="2" />
<text  x="483.97" y="1743.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (7 samples, 0.02%)</title><rect x="436.7" y="1669" width="0.2" height="15.0" fill="rgb(220,190,3)" rx="2" ry="2" />
<text  x="439.66" y="1679.5" ></text>
</g>
<g >
<title>InotifyBackend::start (2,454 samples, 5.66%)</title><rect x="106.5" y="1797" width="66.8" height="15.0" fill="rgb(244,35,4)" rx="2" ry="2" />
<text  x="109.53" y="1807.5" >Inotify..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="242.4" y="1733" width="0.4" height="15.0" fill="rgb(244,95,38)" rx="2" ry="2" />
<text  x="245.41" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1781" width="34.0" height="15.0" fill="rgb(220,100,52)" rx="2" ry="2" />
<text  x="1154.22" y="1791.5" >[u..</text>
</g>
<g >
<title>TypeInt::DeserializeFrom (7 samples, 0.02%)</title><rect x="489.8" y="1685" width="0.1" height="15.0" fill="rgb(252,5,43)" rx="2" ry="2" />
<text  x="492.75" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (69 samples, 0.16%)</title><rect x="203.5" y="1573" width="1.9" height="15.0" fill="rgb(225,114,1)" rx="2" ry="2" />
<text  x="206.54" y="1583.5" ></text>
</g>
<g >
<title>ntfs_ucsnlen (9 samples, 0.02%)</title><rect x="658.3" y="1813" width="0.2" height="15.0" fill="rgb(223,107,19)" rx="2" ry="2" />
<text  x="661.27" y="1823.5" ></text>
</g>
<g >
<title>ntfs_mst_pre_write_fixup (6 samples, 0.01%)</title><rect x="657.3" y="1813" width="0.1" height="15.0" fill="rgb(215,143,8)" rx="2" ry="2" />
<text  x="660.27" y="1823.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="389" width="0.1" height="15.0" fill="rgb(220,98,53)" rx="2" ry="2" />
<text  x="61.79" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (6 samples, 0.01%)</title><rect x="324.1" y="1509" width="0.2" height="15.0" fill="rgb(247,124,11)" rx="2" ry="2" />
<text  x="327.11" y="1519.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__rehash (16 samples, 0.04%)</title><rect x="160.9" y="1733" width="0.5" height="15.0" fill="rgb(228,188,46)" rx="2" ry="2" />
<text  x="163.92" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1717" width="0.1" height="15.0" fill="rgb(228,110,45)" rx="2" ry="2" />
<text  x="23.25" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1797" width="0.1" height="15.0" fill="rgb(238,97,54)" rx="2" ry="2" />
<text  x="248.21" y="1807.5" ></text>
</g>
<g >
<title>ntfs_cluster_alloc (8 samples, 0.02%)</title><rect x="674.5" y="1829" width="0.2" height="15.0" fill="rgb(212,154,30)" rx="2" ry="2" />
<text  x="677.46" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (37 samples, 0.09%)</title><rect x="375.7" y="1653" width="1.0" height="15.0" fill="rgb(208,83,34)" rx="2" ry="2" />
<text  x="378.65" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (53 samples, 0.12%)</title><rect x="368.6" y="1653" width="1.4" height="15.0" fill="rgb(210,39,3)" rx="2" ry="2" />
<text  x="371.56" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 0.08%)</title><rect x="686.5" y="1493" width="1.0" height="15.0" fill="rgb(251,1,12)" rx="2" ry="2" />
<text  x="689.53" y="1503.5" ></text>
</g>
<g >
<title>g_socket_send_message (4 samples, 0.01%)</title><rect x="221.9" y="1813" width="0.1" height="15.0" fill="rgb(245,29,4)" rx="2" ry="2" />
<text  x="224.90" y="1823.5" ></text>
</g>
<g >
<title>GetCmpBool (5 samples, 0.01%)</title><rect x="300.0" y="1621" width="0.2" height="15.0" fill="rgb(215,195,40)" rx="2" ry="2" />
<text  x="303.04" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (33 samples, 0.08%)</title><rect x="459.1" y="1637" width="0.9" height="15.0" fill="rgb(228,186,35)" rx="2" ry="2" />
<text  x="462.10" y="1647.5" ></text>
</g>
<g >
<title>TableIterator::operator++ (924 samples, 2.13%)</title><rect x="478.9" y="1765" width="25.1" height="15.0" fill="rgb(233,27,18)" rx="2" ry="2" />
<text  x="481.87" y="1775.5" >T..</text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (5 samples, 0.01%)</title><rect x="456.5" y="1669" width="0.1" height="15.0" fill="rgb(240,198,49)" rx="2" ry="2" />
<text  x="459.49" y="1679.5" ></text>
</g>
<g >
<title>sogoupinyinServ (51 samples, 0.12%)</title><rect x="690.2" y="1845" width="1.4" height="15.0" fill="rgb(250,64,34)" rx="2" ry="2" />
<text  x="693.18" y="1855.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.1" y="1605" width="0.2" height="15.0" fill="rgb(230,133,18)" rx="2" ry="2" />
<text  x="26.11" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="242.9" y="1765" width="0.5" height="15.0" fill="rgb(218,86,15)" rx="2" ry="2" />
<text  x="245.90" y="1775.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1781" width="0.3" height="15.0" fill="rgb(226,221,52)" rx="2" ry="2" />
<text  x="228.41" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,146 samples, 2.64%)</title><rect x="258.2" y="1717" width="31.2" height="15.0" fill="rgb(210,29,10)" rx="2" ry="2" />
<text  x="261.21" y="1727.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="233.1" y="1797" width="0.1" height="15.0" fill="rgb(233,14,35)" rx="2" ry="2" />
<text  x="236.08" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1733" width="0.1" height="15.0" fill="rgb(219,38,30)" rx="2" ry="2" />
<text  x="219.65" y="1743.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (4 samples, 0.01%)</title><rect x="497.3" y="1685" width="0.1" height="15.0" fill="rgb(230,163,36)" rx="2" ry="2" />
<text  x="500.26" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (4 samples, 0.01%)</title><rect x="337.1" y="1605" width="0.1" height="15.0" fill="rgb(205,26,41)" rx="2" ry="2" />
<text  x="340.06" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="687.4" y="1349" width="0.1" height="15.0" fill="rgb(233,185,45)" rx="2" ry="2" />
<text  x="690.37" y="1359.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 0.12%)</title><rect x="659.2" y="1765" width="1.3" height="15.0" fill="rgb(235,211,53)" rx="2" ry="2" />
<text  x="662.17" y="1775.5" ></text>
</g>
<g >
<title>std::ostream::flush (5 samples, 0.01%)</title><rect x="361.1" y="1653" width="0.1" height="15.0" fill="rgb(251,9,33)" rx="2" ry="2" />
<text  x="364.10" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="231.8" y="1637" width="0.1" height="15.0" fill="rgb(208,36,48)" rx="2" ry="2" />
<text  x="234.78" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="480.7" y="1413" width="0.1" height="15.0" fill="rgb(233,69,9)" rx="2" ry="2" />
<text  x="483.69" y="1423.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (4 samples, 0.01%)</title><rect x="218.6" y="1829" width="0.1" height="15.0" fill="rgb(231,190,52)" rx="2" ry="2" />
<text  x="221.61" y="1839.5" ></text>
</g>
<g >
<title>[perf-140378.map] (19 samples, 0.04%)</title><rect x="60.3" y="1685" width="0.5" height="15.0" fill="rgb(234,64,45)" rx="2" ry="2" />
<text  x="63.26" y="1695.5" ></text>
</g>
<g >
<title>read (6 samples, 0.01%)</title><rect x="54.6" y="1813" width="0.2" height="15.0" fill="rgb(253,92,18)" rx="2" ry="2" />
<text  x="57.63" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (5 samples, 0.01%)</title><rect x="491.3" y="1653" width="0.1" height="15.0" fill="rgb(250,88,53)" rx="2" ry="2" />
<text  x="494.27" y="1663.5" ></text>
</g>
<g >
<title>__libc_read (335 samples, 0.77%)</title><rect x="164.0" y="1781" width="9.1" height="15.0" fill="rgb(230,202,35)" rx="2" ry="2" />
<text  x="167.02" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1669" width="0.3" height="15.0" fill="rgb(238,0,44)" rx="2" ry="2" />
<text  x="29.05" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (211 samples, 0.49%)</title><rect x="167.4" y="1669" width="5.7" height="15.0" fill="rgb(249,149,40)" rx="2" ry="2" />
<text  x="170.40" y="1679.5" ></text>
</g>
<g >
<title>JS_Helper (21 samples, 0.05%)</title><rect x="17.3" y="1845" width="0.6" height="15.0" fill="rgb(238,195,36)" rx="2" ry="2" />
<text  x="20.29" y="1855.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (8 samples, 0.02%)</title><rect x="491.2" y="1669" width="0.2" height="15.0" fill="rgb(240,96,15)" rx="2" ry="2" />
<text  x="494.19" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,220 samples, 2.81%)</title><rect x="63.3" y="1797" width="33.1" height="15.0" fill="rgb(214,175,37)" rx="2" ry="2" />
<text  x="66.25" y="1807.5" >[[..</text>
</g>
<g >
<title>BlockHeader::SetBlockFree (8 samples, 0.02%)</title><rect x="385.0" y="1557" width="0.2" height="15.0" fill="rgb(249,117,30)" rx="2" ry="2" />
<text  x="388.01" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.1" y="1781" width="0.1" height="15.0" fill="rgb(254,0,27)" rx="2" ry="2" />
<text  x="234.07" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="206.0" y="1749" width="0.2" height="15.0" fill="rgb(249,168,27)" rx="2" ry="2" />
<text  x="209.05" y="1759.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4 samples, 0.01%)</title><rect x="486.8" y="1653" width="0.1" height="15.0" fill="rgb(210,115,11)" rx="2" ry="2" />
<text  x="489.81" y="1663.5" ></text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="416.9" y="1637" width="0.1" height="15.0" fill="rgb(225,140,52)" rx="2" ry="2" />
<text  x="419.89" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="236.1" y="1829" width="0.2" height="15.0" fill="rgb(221,44,17)" rx="2" ry="2" />
<text  x="239.07" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (9 samples, 0.02%)</title><rect x="314.1" y="1605" width="0.2" height="15.0" fill="rgb(226,122,44)" rx="2" ry="2" />
<text  x="317.10" y="1615.5" ></text>
</g>
<g >
<title>all (43,385 samples, 100%)</title><rect x="10.0" y="1861" width="1180.0" height="15.0" fill="rgb(231,143,7)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1813" width="0.1" height="15.0" fill="rgb(231,116,4)" rx="2" ry="2" />
<text  x="24.37" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (19 samples, 0.04%)</title><rect x="461.3" y="1637" width="0.5" height="15.0" fill="rgb(221,1,23)" rx="2" ry="2" />
<text  x="464.33" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (10 samples, 0.02%)</title><rect x="471.3" y="1685" width="0.3" height="15.0" fill="rgb(229,189,2)" rx="2" ry="2" />
<text  x="474.34" y="1695.5" ></text>
</g>
<g >
<title>TypeChar::CompareGreaterThan (18 samples, 0.04%)</title><rect x="377.5" y="1653" width="0.5" height="15.0" fill="rgb(242,140,3)" rx="2" ry="2" />
<text  x="380.50" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1765" width="0.2" height="15.0" fill="rgb(243,172,15)" rx="2" ry="2" />
<text  x="693.91" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="688.2" y="1813" width="0.2" height="15.0" fill="rgb(234,130,10)" rx="2" ry="2" />
<text  x="691.22" y="1823.5" ></text>
</g>
<g >
<title>kworker/7:1-eve (22 samples, 0.05%)</title><rect x="242.8" y="1845" width="0.6" height="15.0" fill="rgb(214,75,34)" rx="2" ry="2" />
<text  x="245.84" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="206.0" y="1781" width="0.2" height="15.0" fill="rgb(237,15,31)" rx="2" ry="2" />
<text  x="209.05" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1151.1" y="1557" width="0.1" height="15.0" fill="rgb(214,132,16)" rx="2" ry="2" />
<text  x="1154.05" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (22 samples, 0.05%)</title><rect x="468.0" y="1701" width="0.6" height="15.0" fill="rgb(223,11,9)" rx="2" ry="2" />
<text  x="471.05" y="1711.5" ></text>
</g>
<g >
<title>DiskManager::ReadPage (514 samples, 1.18%)</title><rect x="346.3" y="1669" width="13.9" height="15.0" fill="rgb(228,81,29)" rx="2" ry="2" />
<text  x="349.25" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 0.07%)</title><rect x="237.3" y="1717" width="0.9" height="15.0" fill="rgb(227,227,8)" rx="2" ry="2" />
<text  x="240.32" y="1727.5" ></text>
</g>
<g >
<title>IndexKey::SerializeFromKey (5 samples, 0.01%)</title><rect x="473.3" y="1765" width="0.2" height="15.0" fill="rgb(210,161,5)" rx="2" ry="2" />
<text  x="476.32" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1749" width="34.0" height="15.0" fill="rgb(247,132,52)" rx="2" ry="2" />
<text  x="1154.22" y="1759.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="22.3" y="1797" width="0.4" height="15.0" fill="rgb(216,51,33)" rx="2" ry="2" />
<text  x="25.32" y="1807.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1733" width="0.8" height="15.0" fill="rgb(236,138,39)" rx="2" ry="2" />
<text  x="15.39" y="1743.5" ></text>
</g>
<g >
<title>[code] (221 samples, 0.51%)</title><rect x="55.2" y="1797" width="6.0" height="15.0" fill="rgb(245,185,14)" rx="2" ry="2" />
<text  x="58.23" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,206 samples, 2.78%)</title><rect x="599.1" y="1765" width="32.8" height="15.0" fill="rgb(219,118,11)" rx="2" ry="2" />
<text  x="602.06" y="1775.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,132 samples, 2.61%)</title><rect x="258.6" y="1701" width="30.8" height="15.0" fill="rgb(205,218,34)" rx="2" ry="2" />
<text  x="261.59" y="1711.5" >[[..</text>
</g>
<g >
<title>ntfs_index_ctx_get (19 samples, 0.04%)</title><rect x="648.0" y="1813" width="0.5" height="15.0" fill="rgb(253,52,23)" rx="2" ry="2" />
<text  x="650.96" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="1185.1" y="1333" width="0.1" height="15.0" fill="rgb(214,221,30)" rx="2" ry="2" />
<text  x="1188.08" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="234.9" y="1781" width="0.3" height="15.0" fill="rgb(247,81,54)" rx="2" ry="2" />
<text  x="237.93" y="1791.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="293" width="0.1" height="15.0" fill="rgb(231,39,0)" rx="2" ry="2" />
<text  x="61.79" y="303.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (41 samples, 0.09%)</title><rect x="344.9" y="1653" width="1.2" height="15.0" fill="rgb(218,212,51)" rx="2" ry="2" />
<text  x="347.95" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="682.1" y="1445" width="0.1" height="15.0" fill="rgb(224,208,8)" rx="2" ry="2" />
<text  x="685.07" y="1455.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1813" width="0.2" height="15.0" fill="rgb(222,86,35)" rx="2" ry="2" />
<text  x="26.79" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1187.2" y="1797" width="0.1" height="15.0" fill="rgb(216,60,23)" rx="2" ry="2" />
<text  x="1190.20" y="1807.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="101" width="0.1" height="15.0" fill="rgb(217,74,20)" rx="2" ry="2" />
<text  x="61.79" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1717" width="0.3" height="15.0" fill="rgb(239,202,40)" rx="2" ry="2" />
<text  x="17.95" y="1727.5" ></text>
</g>
<g >
<title>ExecuteEngine::Execute (8,151 samples, 18.79%)</title><rect x="289.4" y="1797" width="221.7" height="15.0" fill="rgb(219,26,3)" rx="2" ry="2" />
<text  x="292.41" y="1807.5" >ExecuteEngine::Execute</text>
</g>
<g >
<title>_int_free (8 samples, 0.02%)</title><rect x="399.4" y="1573" width="0.2" height="15.0" fill="rgb(235,106,53)" rx="2" ry="2" />
<text  x="402.37" y="1583.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="485" width="0.1" height="15.0" fill="rgb(222,47,44)" rx="2" ry="2" />
<text  x="61.79" y="495.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="421" width="0.1" height="15.0" fill="rgb(219,69,40)" rx="2" ry="2" />
<text  x="61.79" y="431.5" ></text>
</g>
<g >
<title>syscall (6 samples, 0.01%)</title><rect x="231.1" y="1813" width="0.1" height="15.0" fill="rgb(209,4,12)" rx="2" ry="2" />
<text  x="234.07" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="214.2" y="1733" width="0.1" height="15.0" fill="rgb(218,74,21)" rx="2" ry="2" />
<text  x="217.18" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (68 samples, 0.16%)</title><rect x="324.8" y="1605" width="1.9" height="15.0" fill="rgb(243,141,30)" rx="2" ry="2" />
<text  x="327.82" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="345.6" y="1573" width="0.3" height="15.0" fill="rgb(254,42,13)" rx="2" ry="2" />
<text  x="348.57" y="1583.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (7 samples, 0.02%)</title><rect x="230.9" y="1765" width="0.1" height="15.0" fill="rgb(211,77,47)" rx="2" ry="2" />
<text  x="233.85" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="691.4" y="1621" width="0.1" height="15.0" fill="rgb(231,13,15)" rx="2" ry="2" />
<text  x="694.43" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (337 samples, 0.78%)</title><rect x="196.3" y="1653" width="9.1" height="15.0" fill="rgb(205,65,54)" rx="2" ry="2" />
<text  x="199.25" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="241.7" y="1733" width="0.2" height="15.0" fill="rgb(247,70,45)" rx="2" ry="2" />
<text  x="244.70" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (11 samples, 0.03%)</title><rect x="14.0" y="1621" width="0.3" height="15.0" fill="rgb(209,216,29)" rx="2" ry="2" />
<text  x="17.03" y="1631.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1781" width="0.1" height="15.0" fill="rgb(234,165,40)" rx="2" ry="2" />
<text  x="23.53" y="1791.5" ></text>
</g>
<g >
<title>dbus_message_get_interface (9 samples, 0.02%)</title><rect x="217.5" y="1813" width="0.2" height="15.0" fill="rgb(239,30,0)" rx="2" ry="2" />
<text  x="220.47" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="359.3" y="1269" width="0.4" height="15.0" fill="rgb(211,163,9)" rx="2" ry="2" />
<text  x="362.34" y="1279.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="510.9" y="1781" width="0.2" height="15.0" fill="rgb(230,159,4)" rx="2" ry="2" />
<text  x="513.91" y="1791.5" ></text>
</g>
<g >
<title>[perf-6346.map] (7 samples, 0.02%)</title><rect x="10.1" y="1813" width="0.1" height="15.0" fill="rgb(245,93,39)" rx="2" ry="2" />
<text  x="13.05" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1637" width="0.2" height="15.0" fill="rgb(208,1,14)" rx="2" ry="2" />
<text  x="57.80" y="1647.5" ></text>
</g>
<g >
<title>[code] (49 samples, 0.11%)</title><rect x="15.4" y="1733" width="1.4" height="15.0" fill="rgb(219,160,27)" rx="2" ry="2" />
<text  x="18.44" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="479.6" y="1637" width="0.4" height="15.0" fill="rgb(219,119,45)" rx="2" ry="2" />
<text  x="482.63" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1749" width="0.2" height="15.0" fill="rgb(245,49,24)" rx="2" ry="2" />
<text  x="24.48" y="1759.5" ></text>
</g>
<g >
<title>[code] (133 samples, 0.31%)</title><rect x="55.9" y="1525" width="3.6" height="15.0" fill="rgb(245,144,23)" rx="2" ry="2" />
<text  x="58.86" y="1535.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1701" width="0.6" height="15.0" fill="rgb(231,174,29)" rx="2" ry="2" />
<text  x="16.86" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 0.08%)</title><rect x="684.6" y="1605" width="1.0" height="15.0" fill="rgb(220,164,15)" rx="2" ry="2" />
<text  x="687.60" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="683.3" y="1781" width="0.3" height="15.0" fill="rgb(249,8,45)" rx="2" ry="2" />
<text  x="686.27" y="1791.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (5 samples, 0.01%)</title><rect x="414.4" y="1701" width="0.1" height="15.0" fill="rgb(205,68,20)" rx="2" ry="2" />
<text  x="417.38" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="10.7" y="1781" width="0.4" height="15.0" fill="rgb(244,221,17)" rx="2" ry="2" />
<text  x="13.65" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="12.1" y="1477" width="0.2" height="15.0" fill="rgb(254,15,52)" rx="2" ry="2" />
<text  x="15.09" y="1487.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="244.7" y="1797" width="0.5" height="15.0" fill="rgb(216,212,7)" rx="2" ry="2" />
<text  x="247.69" y="1807.5" ></text>
</g>
<g >
<title>ntfs_attr_find_vcn (15 samples, 0.03%)</title><rect x="632.4" y="1797" width="0.4" height="15.0" fill="rgb(253,2,41)" rx="2" ry="2" />
<text  x="635.43" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (398 samples, 0.92%)</title><rect x="245.5" y="1829" width="10.8" height="15.0" fill="rgb(225,98,39)" rx="2" ry="2" />
<text  x="248.51" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="480.2" y="1637" width="0.6" height="15.0" fill="rgb(221,88,39)" rx="2" ry="2" />
<text  x="483.20" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1797" width="0.2" height="15.0" fill="rgb(213,42,52)" rx="2" ry="2" />
<text  x="57.63" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1685" width="0.1" height="15.0" fill="rgb(245,79,50)" rx="2" ry="2" />
<text  x="216.80" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (22 samples, 0.05%)</title><rect x="467.1" y="1653" width="0.6" height="15.0" fill="rgb(235,177,24)" rx="2" ry="2" />
<text  x="470.15" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (46 samples, 0.11%)</title><rect x="395.1" y="1573" width="1.2" height="15.0" fill="rgb(247,197,29)" rx="2" ry="2" />
<text  x="398.07" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (312 samples, 0.72%)</title><rect x="280.9" y="1493" width="8.5" height="15.0" fill="rgb(215,206,22)" rx="2" ry="2" />
<text  x="283.90" y="1503.5" ></text>
</g>
<g >
<title>Field::Field (6 samples, 0.01%)</title><rect x="500.1" y="1637" width="0.2" height="15.0" fill="rgb(206,60,52)" rx="2" ry="2" />
<text  x="503.14" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="1150.7" y="1349" width="0.2" height="15.0" fill="rgb(242,146,5)" rx="2" ry="2" />
<text  x="1153.70" y="1359.5" ></text>
</g>
<g >
<title>[code] (20 samples, 0.05%)</title><rect x="22.9" y="1717" width="0.5" height="15.0" fill="rgb(239,66,3)" rx="2" ry="2" />
<text  x="25.86" y="1727.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1765" width="0.1" height="15.0" fill="rgb(219,70,33)" rx="2" ry="2" />
<text  x="23.53" y="1775.5" ></text>
</g>
<g >
<title>__libc_sendmsg (5 samples, 0.01%)</title><rect x="216.6" y="1797" width="0.2" height="15.0" fill="rgb(254,93,22)" rx="2" ry="2" />
<text  x="219.63" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="689.2" y="1685" width="0.2" height="15.0" fill="rgb(220,213,40)" rx="2" ry="2" />
<text  x="692.22" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="244.0" y="1813" width="0.7" height="15.0" fill="rgb(225,97,50)" rx="2" ry="2" />
<text  x="246.99" y="1823.5" ></text>
</g>
<g >
<title>kworker/6:2-eve (24 samples, 0.06%)</title><rect x="242.2" y="1845" width="0.6" height="15.0" fill="rgb(210,155,18)" rx="2" ry="2" />
<text  x="245.19" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="410.5" y="1477" width="0.2" height="15.0" fill="rgb(221,68,11)" rx="2" ry="2" />
<text  x="413.52" y="1487.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (17 samples, 0.04%)</title><rect x="330.4" y="1637" width="0.5" height="15.0" fill="rgb(210,71,35)" rx="2" ry="2" />
<text  x="333.40" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="110.9" y="1717" width="0.1" height="15.0" fill="rgb(253,99,51)" rx="2" ry="2" />
<text  x="113.93" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1765" width="0.4" height="15.0" fill="rgb(208,136,1)" rx="2" ry="2" />
<text  x="218.02" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1829" width="0.1" height="15.0" fill="rgb(249,129,1)" rx="2" ry="2" />
<text  x="216.80" y="1839.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (10 samples, 0.02%)</title><rect x="312.4" y="1589" width="0.2" height="15.0" fill="rgb(235,219,14)" rx="2" ry="2" />
<text  x="315.36" y="1599.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1717" width="0.8" height="15.0" fill="rgb(236,70,22)" rx="2" ry="2" />
<text  x="15.39" y="1727.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (438 samples, 1.01%)</title><rect x="450.0" y="1685" width="12.0" height="15.0" fill="rgb(249,45,10)" rx="2" ry="2" />
<text  x="453.04" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1781" width="0.3" height="15.0" fill="rgb(253,98,1)" rx="2" ry="2" />
<text  x="17.95" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38 samples, 0.09%)</title><rect x="659.5" y="1685" width="1.0" height="15.0" fill="rgb(244,17,19)" rx="2" ry="2" />
<text  x="662.50" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="204.8" y="1541" width="0.6" height="15.0" fill="rgb(242,199,14)" rx="2" ry="2" />
<text  x="207.77" y="1551.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="682.3" y="1365" width="0.1" height="15.0" fill="rgb(217,60,45)" rx="2" ry="2" />
<text  x="685.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (7 samples, 0.02%)</title><rect x="469.6" y="1637" width="0.2" height="15.0" fill="rgb(239,195,4)" rx="2" ry="2" />
<text  x="472.60" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="244.4" y="1669" width="0.3" height="15.0" fill="rgb(239,202,35)" rx="2" ry="2" />
<text  x="247.37" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="216.6" y="1781" width="0.2" height="15.0" fill="rgb(213,90,37)" rx="2" ry="2" />
<text  x="219.63" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_deallocate (4 samples, 0.01%)</title><rect x="510.0" y="1733" width="0.1" height="15.0" fill="rgb(222,123,6)" rx="2" ry="2" />
<text  x="512.96" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (170 samples, 0.39%)</title><rect x="542.2" y="1541" width="4.6" height="15.0" fill="rgb(218,128,51)" rx="2" ry="2" />
<text  x="545.22" y="1551.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1029" width="1.0" height="15.0" fill="rgb(205,89,44)" rx="2" ry="2" />
<text  x="60.90" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12 samples, 0.03%)</title><rect x="346.7" y="1589" width="0.3" height="15.0" fill="rgb(210,36,30)" rx="2" ry="2" />
<text  x="349.66" y="1599.5" ></text>
</g>
<g >
<title>BPlusTreePage::GetKeySize (4 samples, 0.01%)</title><rect x="443.6" y="1701" width="0.1" height="15.0" fill="rgb(222,194,53)" rx="2" ry="2" />
<text  x="446.60" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::~_Vector_base (15 samples, 0.03%)</title><rect x="509.9" y="1749" width="0.4" height="15.0" fill="rgb(209,183,38)" rx="2" ry="2" />
<text  x="512.88" y="1759.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1717" width="0.1" height="15.0" fill="rgb(211,84,40)" rx="2" ry="2" />
<text  x="24.37" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="1150.4" y="1397" width="0.5" height="15.0" fill="rgb(250,118,26)" rx="2" ry="2" />
<text  x="1153.37" y="1407.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.0" y="1733" width="0.1" height="15.0" fill="rgb(223,178,38)" rx="2" ry="2" />
<text  x="22.98" y="1743.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (468 samples, 1.08%)</title><rect x="449.9" y="1701" width="12.7" height="15.0" fill="rgb(218,57,2)" rx="2" ry="2" />
<text  x="452.88" y="1711.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1701" width="0.3" height="15.0" fill="rgb(250,129,12)" rx="2" ry="2" />
<text  x="228.41" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="10.3" y="1829" width="0.1" height="15.0" fill="rgb(241,3,21)" rx="2" ry="2" />
<text  x="13.33" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="54.9" y="1605" width="0.1" height="15.0" fill="rgb(215,139,20)" rx="2" ry="2" />
<text  x="57.93" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="231.7" y="1829" width="0.2" height="15.0" fill="rgb(251,152,36)" rx="2" ry="2" />
<text  x="234.69" y="1839.5" ></text>
</g>
<g >
<title>[code] (13 samples, 0.03%)</title><rect x="59.7" y="1717" width="0.4" height="15.0" fill="rgb(224,112,18)" rx="2" ry="2" />
<text  x="62.72" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="468.1" y="1669" width="0.5" height="15.0" fill="rgb(246,24,11)" rx="2" ry="2" />
<text  x="471.13" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1733" width="0.1" height="15.0" fill="rgb(227,142,33)" rx="2" ry="2" />
<text  x="233.22" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="480.6" y="1493" width="0.2" height="15.0" fill="rgb(249,52,6)" rx="2" ry="2" />
<text  x="483.59" y="1503.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1685" width="0.3" height="15.0" fill="rgb(235,74,26)" rx="2" ry="2" />
<text  x="228.41" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100 samples, 0.23%)</title><rect x="202.7" y="1589" width="2.7" height="15.0" fill="rgb(222,7,50)" rx="2" ry="2" />
<text  x="205.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (6 samples, 0.01%)</title><rect x="346.7" y="1541" width="0.2" height="15.0" fill="rgb(224,190,29)" rx="2" ry="2" />
<text  x="349.74" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="17.0" y="1829" width="0.2" height="15.0" fill="rgb(236,1,16)" rx="2" ry="2" />
<text  x="20.02" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1701" width="0.2" height="15.0" fill="rgb(235,143,25)" rx="2" ry="2" />
<text  x="235.10" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1765" width="0.1" height="15.0" fill="rgb(218,196,49)" rx="2" ry="2" />
<text  x="58.07" y="1775.5" ></text>
</g>
<g >
<title>msedge (193 samples, 0.44%)</title><rect x="678.4" y="1845" width="5.2" height="15.0" fill="rgb(252,119,46)" rx="2" ry="2" />
<text  x="681.40" y="1855.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WUnlock (9 samples, 0.02%)</title><rect x="487.2" y="1717" width="0.3" height="15.0" fill="rgb(254,219,37)" rx="2" ry="2" />
<text  x="490.25" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (5 samples, 0.01%)</title><rect x="429.2" y="1653" width="0.1" height="15.0" fill="rgb(250,213,51)" rx="2" ry="2" />
<text  x="432.15" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="480.2" y="1685" width="0.6" height="15.0" fill="rgb(230,227,8)" rx="2" ry="2" />
<text  x="483.20" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="20.0" y="1685" width="0.1" height="15.0" fill="rgb(234,183,14)" rx="2" ry="2" />
<text  x="23.01" y="1695.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (27 samples, 0.06%)</title><rect x="346.3" y="1653" width="0.8" height="15.0" fill="rgb(235,112,54)" rx="2" ry="2" />
<text  x="349.33" y="1663.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (5 samples, 0.01%)</title><rect x="465.4" y="1669" width="0.2" height="15.0" fill="rgb(232,194,49)" rx="2" ry="2" />
<text  x="468.44" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1701" width="0.1" height="15.0" fill="rgb(205,199,38)" rx="2" ry="2" />
<text  x="692.50" y="1711.5" ></text>
</g>
<g >
<title>[msedge] (12 samples, 0.03%)</title><rect x="679.3" y="1749" width="0.3" height="15.0" fill="rgb(246,92,42)" rx="2" ry="2" />
<text  x="682.30" y="1759.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1717" width="0.2" height="15.0" fill="rgb(215,11,44)" rx="2" ry="2" />
<text  x="26.79" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="20.7" y="1685" width="0.6" height="15.0" fill="rgb(247,124,41)" rx="2" ry="2" />
<text  x="23.69" y="1695.5" ></text>
</g>
<g >
<title>[libntfs-3g.so.883.0.0] (59 samples, 0.14%)</title><rect x="515.2" y="1829" width="1.6" height="15.0" fill="rgb(250,59,21)" rx="2" ry="2" />
<text  x="518.21" y="1839.5" ></text>
</g>
<g >
<title>__libc_pread64 (57 samples, 0.13%)</title><rect x="659.0" y="1829" width="1.5" height="15.0" fill="rgb(211,35,22)" rx="2" ry="2" />
<text  x="661.98" y="1839.5" ></text>
</g>
<g >
<title>__libc_pwrite64 (789 samples, 1.82%)</title><rect x="525.4" y="1781" width="21.5" height="15.0" fill="rgb(249,48,37)" rx="2" ry="2" />
<text  x="528.41" y="1791.5" >_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="242.5" y="1717" width="0.3" height="15.0" fill="rgb(221,16,25)" rx="2" ry="2" />
<text  x="245.49" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="233.1" y="1829" width="0.1" height="15.0" fill="rgb(247,76,19)" rx="2" ry="2" />
<text  x="236.08" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1781" width="0.1" height="15.0" fill="rgb(240,115,26)" rx="2" ry="2" />
<text  x="58.07" y="1791.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (7 samples, 0.02%)</title><rect x="483.9" y="1733" width="0.2" height="15.0" fill="rgb(245,134,10)" rx="2" ry="2" />
<text  x="486.93" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1669" width="0.1" height="15.0" fill="rgb(249,189,28)" rx="2" ry="2" />
<text  x="238.23" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1,067 samples, 2.46%)</title><rect x="25.8" y="1829" width="29.0" height="15.0" fill="rgb(226,213,45)" rx="2" ry="2" />
<text  x="28.78" y="1839.5" >[u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="238.9" y="1797" width="0.4" height="15.0" fill="rgb(206,104,17)" rx="2" ry="2" />
<text  x="241.87" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (5 samples, 0.01%)</title><rect x="376.3" y="1573" width="0.2" height="15.0" fill="rgb(205,187,41)" rx="2" ry="2" />
<text  x="379.33" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="14.2" y="1525" width="0.1" height="15.0" fill="rgb(250,168,48)" rx="2" ry="2" />
<text  x="17.19" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="359.6" y="1237" width="0.1" height="15.0" fill="rgb(206,169,8)" rx="2" ry="2" />
<text  x="362.61" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.03%)</title><rect x="393.7" y="1605" width="0.3" height="15.0" fill="rgb(250,72,24)" rx="2" ry="2" />
<text  x="396.69" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1685" width="0.1" height="15.0" fill="rgb(240,43,9)" rx="2" ry="2" />
<text  x="99.30" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="685.9" y="1605" width="1.6" height="15.0" fill="rgb(244,213,30)" rx="2" ry="2" />
<text  x="688.85" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="21.6" y="1669" width="0.1" height="15.0" fill="rgb(221,143,39)" rx="2" ry="2" />
<text  x="24.59" y="1679.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="15.4" y="1813" width="1.4" height="15.0" fill="rgb(253,208,0)" rx="2" ry="2" />
<text  x="18.41" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 0.06%)</title><rect x="1150.2" y="1445" width="0.7" height="15.0" fill="rgb(247,46,2)" rx="2" ry="2" />
<text  x="1153.21" y="1455.5" ></text>
</g>
<g >
<title>[code] (12 samples, 0.03%)</title><rect x="23.0" y="1685" width="0.3" height="15.0" fill="rgb(215,83,8)" rx="2" ry="2" />
<text  x="25.97" y="1695.5" ></text>
</g>
<g >
<title>g_main_context_dispatch (8 samples, 0.02%)</title><rect x="26.9" y="1813" width="0.2" height="15.0" fill="rgb(250,147,10)" rx="2" ry="2" />
<text  x="29.92" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="235.8" y="1717" width="0.2" height="15.0" fill="rgb(211,81,8)" rx="2" ry="2" />
<text  x="238.77" y="1727.5" ></text>
</g>
<g >
<title>std::fill_n&lt;char*, unsigned long, char&gt; (25 samples, 0.06%)</title><rect x="432.9" y="1573" width="0.7" height="15.0" fill="rgb(242,22,45)" rx="2" ry="2" />
<text  x="435.88" y="1583.5" ></text>
</g>
<g >
<title>LRUReplacer::Victim (6 samples, 0.01%)</title><rect x="410.8" y="1685" width="0.2" height="15.0" fill="rgb(218,10,50)" rx="2" ry="2" />
<text  x="413.82" y="1695.5" ></text>
</g>
<g >
<title>[msedge] (28 samples, 0.06%)</title><rect x="681.8" y="1685" width="0.7" height="15.0" fill="rgb(239,137,14)" rx="2" ry="2" />
<text  x="684.77" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (955 samples, 2.20%)</title><rect x="566.8" y="1637" width="26.0" height="15.0" fill="rgb(214,142,20)" rx="2" ry="2" />
<text  x="569.80" y="1647.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1765" width="0.4" height="15.0" fill="rgb(215,104,10)" rx="2" ry="2" />
<text  x="694.13" y="1775.5" ></text>
</g>
<g >
<title>__poll (14 samples, 0.03%)</title><rect x="22.3" y="1813" width="0.4" height="15.0" fill="rgb(231,172,12)" rx="2" ry="2" />
<text  x="25.32" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="681.1" y="1621" width="0.6" height="15.0" fill="rgb(245,103,53)" rx="2" ry="2" />
<text  x="684.15" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="244.1" y="1733" width="0.6" height="15.0" fill="rgb(244,211,14)" rx="2" ry="2" />
<text  x="247.07" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1701" width="0.1" height="15.0" fill="rgb(245,57,21)" rx="2" ry="2" />
<text  x="17.60" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (9 samples, 0.02%)</title><rect x="390.0" y="1637" width="0.2" height="15.0" fill="rgb(241,158,13)" rx="2" ry="2" />
<text  x="392.99" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,212 samples, 2.79%)</title><rect x="256.4" y="1813" width="33.0" height="15.0" fill="rgb(209,118,27)" rx="2" ry="2" />
<text  x="259.42" y="1823.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1685" width="0.1" height="15.0" fill="rgb(220,212,41)" rx="2" ry="2" />
<text  x="58.07" y="1695.5" ></text>
</g>
<g >
<title>[ntfs-3g] (123 samples, 0.28%)</title><rect x="552.2" y="1797" width="3.3" height="15.0" fill="rgb(247,17,43)" rx="2" ry="2" />
<text  x="555.20" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="242.2" y="1829" width="0.6" height="15.0" fill="rgb(249,103,47)" rx="2" ry="2" />
<text  x="245.19" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (585 samples, 1.35%)</title><rect x="530.9" y="1653" width="15.9" height="15.0" fill="rgb(217,11,9)" rx="2" ry="2" />
<text  x="533.93" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (39 samples, 0.09%)</title><rect x="375.6" y="1669" width="1.1" height="15.0" fill="rgb(239,22,2)" rx="2" ry="2" />
<text  x="378.63" y="1679.5" ></text>
</g>
<g >
<title>[libntfs-3g.so.883.0.0] (6 samples, 0.01%)</title><rect x="555.5" y="1781" width="0.2" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="558.54" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="688.6" y="1797" width="0.8" height="15.0" fill="rgb(238,85,1)" rx="2" ry="2" />
<text  x="691.63" y="1807.5" ></text>
</g>
<g >
<title>BufferPoolManager::FlushAll (5 samples, 0.01%)</title><rect x="511.2" y="1781" width="0.1" height="15.0" fill="rgb(207,53,3)" rx="2" ry="2" />
<text  x="514.21" y="1791.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="114.3" y="1717" width="0.3" height="15.0" fill="rgb(218,213,12)" rx="2" ry="2" />
<text  x="117.31" y="1727.5" ></text>
</g>
<g >
<title>[perf-140378.map] (4 samples, 0.01%)</title><rect x="60.7" y="1573" width="0.1" height="15.0" fill="rgb(226,91,6)" rx="2" ry="2" />
<text  x="63.67" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="690.9" y="1701" width="0.2" height="15.0" fill="rgb(229,129,35)" rx="2" ry="2" />
<text  x="693.94" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="20.0" y="1653" width="0.1" height="15.0" fill="rgb(248,10,9)" rx="2" ry="2" />
<text  x="23.01" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 0.26%)</title><rect x="225.9" y="1829" width="3.0" height="15.0" fill="rgb(239,213,44)" rx="2" ry="2" />
<text  x="228.87" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (196 samples, 0.45%)</title><rect x="665.7" y="1733" width="5.3" height="15.0" fill="rgb(237,109,53)" rx="2" ry="2" />
<text  x="668.67" y="1743.5" ></text>
</g>
<g >
<title>__libc_recvmsg (13 samples, 0.03%)</title><rect x="12.0" y="1669" width="0.3" height="15.0" fill="rgb(254,40,13)" rx="2" ry="2" />
<text  x="14.96" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 0.17%)</title><rect x="215.9" y="1829" width="2.0" height="15.0" fill="rgb(226,72,12)" rx="2" ry="2" />
<text  x="218.89" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 0.12%)</title><rect x="659.2" y="1749" width="1.3" height="15.0" fill="rgb(205,215,7)" rx="2" ry="2" />
<text  x="662.17" y="1759.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1061" width="1.0" height="15.0" fill="rgb(235,106,26)" rx="2" ry="2" />
<text  x="60.90" y="1071.5" ></text>
</g>
<g >
<title>operator new[] (13 samples, 0.03%)</title><rect x="158.5" y="1733" width="0.3" height="15.0" fill="rgb(224,104,51)" rx="2" ry="2" />
<text  x="161.48" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1589" width="0.1" height="15.0" fill="rgb(248,38,45)" rx="2" ry="2" />
<text  x="13.46" y="1599.5" ></text>
</g>
<g >
<title>[code] (96 samples, 0.22%)</title><rect x="56.3" y="1429" width="2.6" height="15.0" fill="rgb(236,158,19)" rx="2" ry="2" />
<text  x="59.32" y="1439.5" ></text>
</g>
<g >
<title>ntfs_enter_cache (12 samples, 0.03%)</title><rect x="647.2" y="1813" width="0.3" height="15.0" fill="rgb(239,145,29)" rx="2" ry="2" />
<text  x="650.18" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="242.2" y="1813" width="0.6" height="15.0" fill="rgb(225,203,5)" rx="2" ry="2" />
<text  x="245.22" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="411.3" y="1637" width="0.1" height="15.0" fill="rgb(230,70,21)" rx="2" ry="2" />
<text  x="414.28" y="1647.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1749" width="0.3" height="15.0" fill="rgb(247,14,27)" rx="2" ry="2" />
<text  x="228.41" y="1759.5" ></text>
</g>
<g >
<title>DiskManager::ReadPage (15 samples, 0.03%)</title><rect x="410.4" y="1685" width="0.4" height="15.0" fill="rgb(230,78,16)" rx="2" ry="2" />
<text  x="413.36" y="1695.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (4 samples, 0.01%)</title><rect x="225.9" y="1717" width="0.1" height="15.0" fill="rgb(239,183,16)" rx="2" ry="2" />
<text  x="228.90" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="243.4" y="1829" width="0.6" height="15.0" fill="rgb(235,184,51)" rx="2" ry="2" />
<text  x="246.44" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (72 samples, 0.17%)</title><rect x="357.8" y="1317" width="1.9" height="15.0" fill="rgb(226,99,14)" rx="2" ry="2" />
<text  x="360.76" y="1327.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="216.7" y="1717" width="0.1" height="15.0" fill="rgb(237,208,39)" rx="2" ry="2" />
<text  x="219.65" y="1727.5" ></text>
</g>
<g >
<title>cpuUsage.sh (74 samples, 0.17%)</title><rect x="213.8" y="1845" width="2.0" height="15.0" fill="rgb(242,172,3)" rx="2" ry="2" />
<text  x="216.80" y="1855.5" ></text>
</g>
<g >
<title>LRUReplacer::Victim (5 samples, 0.01%)</title><rect x="406.5" y="1685" width="0.1" height="15.0" fill="rgb(207,128,45)" rx="2" ry="2" />
<text  x="409.50" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (56 samples, 0.13%)</title><rect x="323.2" y="1557" width="1.5" height="15.0" fill="rgb(218,4,37)" rx="2" ry="2" />
<text  x="326.16" y="1567.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (4 samples, 0.01%)</title><rect x="491.5" y="1653" width="0.1" height="15.0" fill="rgb(214,58,49)" rx="2" ry="2" />
<text  x="494.52" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (4 samples, 0.01%)</title><rect x="437.3" y="1669" width="0.1" height="15.0" fill="rgb(239,1,27)" rx="2" ry="2" />
<text  x="440.26" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,150 samples, 2.65%)</title><rect x="258.1" y="1733" width="31.3" height="15.0" fill="rgb(241,175,50)" rx="2" ry="2" />
<text  x="261.10" y="1743.5" >[[..</text>
</g>
<g >
<title>TypeChar::DeserializeFrom (180 samples, 0.41%)</title><rect x="304.4" y="1605" width="4.9" height="15.0" fill="rgb(215,194,45)" rx="2" ry="2" />
<text  x="307.45" y="1615.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (26 samples, 0.06%)</title><rect x="482.2" y="1749" width="0.8" height="15.0" fill="rgb(239,64,43)" rx="2" ry="2" />
<text  x="485.24" y="1759.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="682.3" y="1317" width="0.1" height="15.0" fill="rgb(217,223,9)" rx="2" ry="2" />
<text  x="685.26" y="1327.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1669" width="0.2" height="15.0" fill="rgb(222,64,25)" rx="2" ry="2" />
<text  x="234.72" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="220.7" y="1685" width="0.1" height="15.0" fill="rgb(211,24,0)" rx="2" ry="2" />
<text  x="223.71" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,164 samples, 2.68%)</title><rect x="257.7" y="1765" width="31.7" height="15.0" fill="rgb(249,106,25)" rx="2" ry="2" />
<text  x="260.72" y="1775.5" >[[..</text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="181" width="0.1" height="15.0" fill="rgb(221,62,54)" rx="2" ry="2" />
<text  x="61.79" y="191.5" ></text>
</g>
<g >
<title>DiskManager::ReadPhysicalPage (22 samples, 0.05%)</title><rect x="480.2" y="1717" width="0.6" height="15.0" fill="rgb(228,79,19)" rx="2" ry="2" />
<text  x="483.20" y="1727.5" ></text>
</g>
<g >
<title>[perf-133463.map] (11 samples, 0.03%)</title><rect x="682.2" y="1461" width="0.3" height="15.0" fill="rgb(239,7,38)" rx="2" ry="2" />
<text  x="685.18" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1765" width="0.2" height="15.0" fill="rgb(231,74,26)" rx="2" ry="2" />
<text  x="691.25" y="1775.5" ></text>
</g>
<g >
<title>__GI___execve (7 samples, 0.02%)</title><rect x="214.7" y="1829" width="0.2" height="15.0" fill="rgb(213,1,50)" rx="2" ry="2" />
<text  x="217.69" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,311 samples, 7.63%)</title><rect x="1061.2" y="1669" width="90.0" height="15.0" fill="rgb(219,135,20)" rx="2" ry="2" />
<text  x="1064.16" y="1679.5" >[[kernel.k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1749" width="0.2" height="15.0" fill="rgb(227,9,33)" rx="2" ry="2" />
<text  x="691.25" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,250 samples, 2.88%)</title><rect x="1151.2" y="1717" width="34.0" height="15.0" fill="rgb(254,40,47)" rx="2" ry="2" />
<text  x="1154.24" y="1727.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1637" width="0.3" height="15.0" fill="rgb(233,213,16)" rx="2" ry="2" />
<text  x="413.39" y="1647.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1733" width="4.4" height="15.0" fill="rgb(253,49,15)" rx="2" ry="2" />
<text  x="58.23" y="1743.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.03%)</title><rect x="207.5" y="1781" width="0.3" height="15.0" fill="rgb(228,216,28)" rx="2" ry="2" />
<text  x="210.54" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1797" width="0.2" height="15.0" fill="rgb(216,170,30)" rx="2" ry="2" />
<text  x="223.62" y="1807.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="565" width="0.1" height="15.0" fill="rgb(249,101,30)" rx="2" ry="2" />
<text  x="61.79" y="575.5" ></text>
</g>
<g >
<title>std::istream::read (4 samples, 0.01%)</title><rect x="360.0" y="1653" width="0.2" height="15.0" fill="rgb(241,148,35)" rx="2" ry="2" />
<text  x="363.04" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="389.4" y="1621" width="0.1" height="15.0" fill="rgb(253,147,7)" rx="2" ry="2" />
<text  x="392.36" y="1631.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::RLock (4 samples, 0.01%)</title><rect x="367.3" y="1653" width="0.1" height="15.0" fill="rgb(211,87,22)" rx="2" ry="2" />
<text  x="370.33" y="1663.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (5 samples, 0.01%)</title><rect x="310.0" y="1605" width="0.1" height="15.0" fill="rgb(237,157,48)" rx="2" ry="2" />
<text  x="313.00" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="22.6" y="1669" width="0.1" height="15.0" fill="rgb(233,26,35)" rx="2" ry="2" />
<text  x="25.59" y="1679.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="681.9" y="1637" width="0.6" height="15.0" fill="rgb(249,176,53)" rx="2" ry="2" />
<text  x="684.88" y="1647.5" ></text>
</g>
<g >
<title>ib_log_wr_notif (5 samples, 0.01%)</title><rect x="232.0" y="1845" width="0.1" height="15.0" fill="rgb(244,32,34)" rx="2" ry="2" />
<text  x="234.97" y="1855.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="27.0" y="1637" width="0.1" height="15.0" fill="rgb(205,226,31)" rx="2" ry="2" />
<text  x="30.00" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="240.4" y="1685" width="0.4" height="15.0" fill="rgb(248,141,41)" rx="2" ry="2" />
<text  x="243.42" y="1695.5" ></text>
</g>
<g >
<title>[libgio-2.0.so.0.6400.6] (6 samples, 0.01%)</title><rect x="218.4" y="1829" width="0.2" height="15.0" fill="rgb(206,40,4)" rx="2" ry="2" />
<text  x="221.45" y="1839.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, char&gt; (18 samples, 0.04%)</title><rect x="395.5" y="1541" width="0.5" height="15.0" fill="rgb(252,137,11)" rx="2" ry="2" />
<text  x="398.54" y="1551.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (4 samples, 0.01%)</title><rect x="346.8" y="1525" width="0.1" height="15.0" fill="rgb(252,102,31)" rx="2" ry="2" />
<text  x="349.80" y="1535.5" ></text>
</g>
<g >
<title>[msedge] (19 samples, 0.04%)</title><rect x="12.5" y="1621" width="0.5" height="15.0" fill="rgb(231,67,16)" rx="2" ry="2" />
<text  x="15.53" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="219.8" y="1573" width="0.1" height="15.0" fill="rgb(230,12,42)" rx="2" ry="2" />
<text  x="222.75" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="240.9" y="1749" width="0.3" height="15.0" fill="rgb(221,7,12)" rx="2" ry="2" />
<text  x="243.94" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="228.1" y="1733" width="0.2" height="15.0" fill="rgb(223,106,28)" rx="2" ry="2" />
<text  x="231.10" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65 samples, 0.15%)</title><rect x="685.7" y="1701" width="1.8" height="15.0" fill="rgb(242,181,54)" rx="2" ry="2" />
<text  x="688.72" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73 samples, 0.17%)</title><rect x="679.8" y="1781" width="1.9" height="15.0" fill="rgb(215,158,34)" rx="2" ry="2" />
<text  x="682.76" y="1791.5" ></text>
</g>
<g >
<title>[perf-133463.map] (11 samples, 0.03%)</title><rect x="682.2" y="1397" width="0.3" height="15.0" fill="rgb(215,56,10)" rx="2" ry="2" />
<text  x="685.18" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="491.8" y="1701" width="0.2" height="15.0" fill="rgb(217,217,27)" rx="2" ry="2" />
<text  x="494.82" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1765" width="0.2" height="15.0" fill="rgb(245,101,14)" rx="2" ry="2" />
<text  x="217.69" y="1775.5" ></text>
</g>
<g >
<title>Field::CompareLessThan (66 samples, 0.15%)</title><rect x="378.0" y="1669" width="1.8" height="15.0" fill="rgb(241,10,12)" rx="2" ry="2" />
<text  x="380.99" y="1679.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (32 samples, 0.07%)</title><rect x="466.9" y="1685" width="0.9" height="15.0" fill="rgb(213,160,37)" rx="2" ry="2" />
<text  x="469.93" y="1695.5" ></text>
</g>
<g >
<title>TablePage::GetTuple (201 samples, 0.46%)</title><rect x="497.6" y="1701" width="5.5" height="15.0" fill="rgb(218,18,19)" rx="2" ry="2" />
<text  x="500.64" y="1711.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (6 samples, 0.01%)</title><rect x="454.3" y="1637" width="0.1" height="15.0" fill="rgb(233,86,13)" rx="2" ry="2" />
<text  x="457.26" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1669" width="0.1" height="15.0" fill="rgb(239,148,48)" rx="2" ry="2" />
<text  x="23.25" y="1679.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (5 samples, 0.01%)</title><rect x="226.5" y="1653" width="0.1" height="15.0" fill="rgb(250,65,0)" rx="2" ry="2" />
<text  x="229.50" y="1663.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (4 samples, 0.01%)</title><rect x="386.5" y="1621" width="0.1" height="15.0" fill="rgb(233,63,50)" rx="2" ry="2" />
<text  x="389.53" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1781" width="0.2" height="15.0" fill="rgb(252,55,29)" rx="2" ry="2" />
<text  x="24.75" y="1791.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="16.9" y="1813" width="0.1" height="15.0" fill="rgb(207,79,49)" rx="2" ry="2" />
<text  x="19.88" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="11.7" y="1493" width="0.1" height="15.0" fill="rgb(220,78,11)" rx="2" ry="2" />
<text  x="14.66" y="1503.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::EntryAt (21 samples, 0.05%)</title><rect x="293.0" y="1669" width="0.5" height="15.0" fill="rgb(217,71,43)" rx="2" ry="2" />
<text  x="295.97" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14 samples, 0.03%)</title><rect x="446.0" y="1637" width="0.4" height="15.0" fill="rgb(228,125,3)" rx="2" ry="2" />
<text  x="448.99" y="1647.5" ></text>
</g>
<g >
<title>runtime.selectgo (13 samples, 0.03%)</title><rect x="213.4" y="1781" width="0.3" height="15.0" fill="rgb(210,203,25)" rx="2" ry="2" />
<text  x="216.36" y="1791.5" ></text>
</g>
<g >
<title>TableHeap::GetTuple (308 samples, 0.71%)</title><rect x="484.1" y="1749" width="8.4" height="15.0" fill="rgb(239,97,9)" rx="2" ry="2" />
<text  x="487.12" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (13 samples, 0.03%)</title><rect x="460.3" y="1637" width="0.3" height="15.0" fill="rgb(232,153,32)" rx="2" ry="2" />
<text  x="463.27" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (8 samples, 0.02%)</title><rect x="393.0" y="1557" width="0.2" height="15.0" fill="rgb(240,227,32)" rx="2" ry="2" />
<text  x="395.95" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1781" width="0.3" height="15.0" fill="rgb(210,218,9)" rx="2" ry="2" />
<text  x="29.05" y="1791.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (6 samples, 0.01%)</title><rect x="403.7" y="1621" width="0.2" height="15.0" fill="rgb(208,116,38)" rx="2" ry="2" />
<text  x="406.72" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="482.6" y="1685" width="0.3" height="15.0" fill="rgb(240,202,9)" rx="2" ry="2" />
<text  x="485.63" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.04%)</title><rect x="224.5" y="1829" width="0.6" height="15.0" fill="rgb(214,185,11)" rx="2" ry="2" />
<text  x="227.54" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (762 samples, 1.76%)</title><rect x="33.9" y="1765" width="20.7" height="15.0" fill="rgb(209,40,20)" rx="2" ry="2" />
<text  x="36.85" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (5 samples, 0.01%)</title><rect x="501.4" y="1669" width="0.2" height="15.0" fill="rgb(219,32,11)" rx="2" ry="2" />
<text  x="504.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_deallocate_node (5 samples, 0.01%)</title><rect x="295.4" y="1589" width="0.2" height="15.0" fill="rgb(231,55,6)" rx="2" ry="2" />
<text  x="298.45" y="1599.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1749" width="0.8" height="15.0" fill="rgb(226,116,23)" rx="2" ry="2" />
<text  x="684.77" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (35 samples, 0.08%)</title><rect x="469.0" y="1701" width="0.9" height="15.0" fill="rgb(240,109,24)" rx="2" ry="2" />
<text  x="471.97" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (10 samples, 0.02%)</title><rect x="472.0" y="1701" width="0.3" height="15.0" fill="rgb(226,98,49)" rx="2" ry="2" />
<text  x="475.05" y="1711.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.1" y="1589" width="0.2" height="15.0" fill="rgb(212,8,17)" rx="2" ry="2" />
<text  x="26.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (9 samples, 0.02%)</title><rect x="413.8" y="1605" width="0.3" height="15.0" fill="rgb(236,97,52)" rx="2" ry="2" />
<text  x="416.84" y="1615.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (10 samples, 0.02%)</title><rect x="225.9" y="1765" width="0.3" height="15.0" fill="rgb(213,94,3)" rx="2" ry="2" />
<text  x="228.90" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38 samples, 0.09%)</title><rect x="511.6" y="1813" width="1.0" height="15.0" fill="rgb(215,70,26)" rx="2" ry="2" />
<text  x="514.56" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="228.2" y="1685" width="0.1" height="15.0" fill="rgb(244,144,2)" rx="2" ry="2" />
<text  x="231.19" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="60.9" y="1685" width="0.3" height="15.0" fill="rgb(227,78,6)" rx="2" ry="2" />
<text  x="63.92" y="1695.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="27.0" y="1669" width="0.1" height="15.0" fill="rgb(232,141,16)" rx="2" ry="2" />
<text  x="30.00" y="1679.5" ></text>
</g>
<g >
<title>TypeInt::DeserializeFrom (11 samples, 0.03%)</title><rect x="500.1" y="1653" width="0.3" height="15.0" fill="rgb(211,112,12)" rx="2" ry="2" />
<text  x="503.11" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (11 samples, 0.03%)</title><rect x="385.9" y="1605" width="0.3" height="15.0" fill="rgb(220,19,8)" rx="2" ry="2" />
<text  x="388.85" y="1615.5" ></text>
</g>
<g >
<title>__GI___writev (1,279 samples, 2.95%)</title><rect x="558.0" y="1797" width="34.8" height="15.0" fill="rgb(242,98,29)" rx="2" ry="2" />
<text  x="560.99" y="1807.5" >__..</text>
</g>
<g >
<title>[libminisql_shared.so] (6 samples, 0.01%)</title><rect x="308.6" y="1557" width="0.2" height="15.0" fill="rgb(253,217,45)" rx="2" ry="2" />
<text  x="311.61" y="1567.5" ></text>
</g>
<g >
<title>Type::GetInstance (6 samples, 0.01%)</title><rect x="299.3" y="1605" width="0.1" height="15.0" fill="rgb(248,13,53)" rx="2" ry="2" />
<text  x="302.28" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1669" width="0.1" height="15.0" fill="rgb(206,65,34)" rx="2" ry="2" />
<text  x="224.90" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (4 samples, 0.01%)</title><rect x="316.6" y="1621" width="0.1" height="15.0" fill="rgb(236,108,9)" rx="2" ry="2" />
<text  x="319.61" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="229.1" y="1717" width="0.4" height="15.0" fill="rgb(242,157,33)" rx="2" ry="2" />
<text  x="232.14" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (41 samples, 0.09%)</title><rect x="392.5" y="1573" width="1.1" height="15.0" fill="rgb(248,153,33)" rx="2" ry="2" />
<text  x="395.52" y="1583.5" ></text>
</g>
<g >
<title>std::__1::chrono::system_clock::now (9 samples, 0.02%)</title><rect x="212.5" y="1797" width="0.2" height="15.0" fill="rgb(223,136,30)" rx="2" ry="2" />
<text  x="215.49" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1797" width="0.3" height="15.0" fill="rgb(244,205,31)" rx="2" ry="2" />
<text  x="17.95" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (24 samples, 0.06%)</title><rect x="457.9" y="1637" width="0.7" height="15.0" fill="rgb(220,155,40)" rx="2" ry="2" />
<text  x="460.90" y="1647.5" ></text>
</g>
<g >
<title>[code] (113 samples, 0.26%)</title><rect x="56.0" y="1493" width="3.1" height="15.0" fill="rgb(250,22,15)" rx="2" ry="2" />
<text  x="59.02" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="687.2" y="1413" width="0.3" height="15.0" fill="rgb(224,34,2)" rx="2" ry="2" />
<text  x="690.24" y="1423.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (8 samples, 0.02%)</title><rect x="439.8" y="1637" width="0.2" height="15.0" fill="rgb(234,199,26)" rx="2" ry="2" />
<text  x="442.76" y="1647.5" ></text>
</g>
<g >
<title>in:imuxsock (8 samples, 0.02%)</title><rect x="232.8" y="1845" width="0.2" height="15.0" fill="rgb(227,139,28)" rx="2" ry="2" />
<text  x="235.78" y="1855.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (4 samples, 0.01%)</title><rect x="379.7" y="1637" width="0.1" height="15.0" fill="rgb(246,47,54)" rx="2" ry="2" />
<text  x="382.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (12 samples, 0.03%)</title><rect x="444.7" y="1589" width="0.3" height="15.0" fill="rgb(246,50,16)" rx="2" ry="2" />
<text  x="447.66" y="1599.5" ></text>
</g>
<g >
<title>__poll (7 samples, 0.02%)</title><rect x="228.1" y="1813" width="0.2" height="15.0" fill="rgb(247,92,27)" rx="2" ry="2" />
<text  x="231.10" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="682.1" y="1461" width="0.1" height="15.0" fill="rgb(234,216,27)" rx="2" ry="2" />
<text  x="685.07" y="1471.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::end (4 samples, 0.01%)</title><rect x="479.4" y="1685" width="0.1" height="15.0" fill="rgb(225,90,28)" rx="2" ry="2" />
<text  x="482.42" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (407 samples, 0.94%)</title><rect x="43.5" y="1669" width="11.1" height="15.0" fill="rgb(235,13,40)" rx="2" ry="2" />
<text  x="46.51" y="1679.5" ></text>
</g>
<g >
<title>[code] (16 samples, 0.04%)</title><rect x="160.9" y="1701" width="0.5" height="15.0" fill="rgb(221,13,46)" rx="2" ry="2" />
<text  x="163.92" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1781" width="0.1" height="15.0" fill="rgb(212,166,19)" rx="2" ry="2" />
<text  x="17.60" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%)</title><rect x="24.0" y="1829" width="0.2" height="15.0" fill="rgb(237,88,51)" rx="2" ry="2" />
<text  x="26.98" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (13 samples, 0.03%)</title><rect x="326.1" y="1573" width="0.4" height="15.0" fill="rgb(229,16,16)" rx="2" ry="2" />
<text  x="329.13" y="1583.5" ></text>
</g>
<g >
<title>Field::Field (39 samples, 0.09%)</title><rect x="498.8" y="1637" width="1.0" height="15.0" fill="rgb(214,51,33)" rx="2" ry="2" />
<text  x="501.75" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (16 samples, 0.04%)</title><rect x="315.2" y="1621" width="0.5" height="15.0" fill="rgb(218,157,5)" rx="2" ry="2" />
<text  x="318.22" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="682.8" y="1797" width="0.5" height="15.0" fill="rgb(253,149,37)" rx="2" ry="2" />
<text  x="685.78" y="1807.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (4 samples, 0.01%)</title><rect x="333.6" y="1637" width="0.1" height="15.0" fill="rgb(226,161,0)" rx="2" ry="2" />
<text  x="336.61" y="1647.5" ></text>
</g>
<g >
<title>__xstat64 (458 samples, 1.06%)</title><rect x="347.3" y="1637" width="12.4" height="15.0" fill="rgb(249,66,32)" rx="2" ry="2" />
<text  x="350.26" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="219.7" y="1605" width="0.2" height="15.0" fill="rgb(213,97,24)" rx="2" ry="2" />
<text  x="222.73" y="1615.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_allocate (4 samples, 0.01%)</title><rect x="506.3" y="1733" width="0.2" height="15.0" fill="rgb(213,140,35)" rx="2" ry="2" />
<text  x="509.34" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1717" width="0.1" height="15.0" fill="rgb(216,209,6)" rx="2" ry="2" />
<text  x="248.21" y="1727.5" ></text>
</g>
<g >
<title>Row::~Row (7 samples, 0.02%)</title><rect x="341.9" y="1669" width="0.2" height="15.0" fill="rgb(230,85,7)" rx="2" ry="2" />
<text  x="344.90" y="1679.5" ></text>
</g>
<g >
<title>__libc_recvmsg (11 samples, 0.03%)</title><rect x="219.6" y="1765" width="0.3" height="15.0" fill="rgb(237,227,5)" rx="2" ry="2" />
<text  x="222.64" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="157.3" y="1397" width="0.5" height="15.0" fill="rgb(253,175,21)" rx="2" ry="2" />
<text  x="160.25" y="1407.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="1187.6" y="1781" width="0.2" height="15.0" fill="rgb(225,97,29)" rx="2" ry="2" />
<text  x="1190.58" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242 samples, 0.56%)</title><rect x="247.0" y="1797" width="6.6" height="15.0" fill="rgb(242,34,42)" rx="2" ry="2" />
<text  x="249.98" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,022 samples, 2.36%)</title><rect x="604.1" y="1669" width="27.8" height="15.0" fill="rgb(231,190,22)" rx="2" ry="2" />
<text  x="607.07" y="1679.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40 samples, 0.09%)</title><rect x="288.3" y="1381" width="1.1" height="15.0" fill="rgb(225,147,49)" rx="2" ry="2" />
<text  x="291.29" y="1391.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="14.1" y="1605" width="0.2" height="15.0" fill="rgb(244,4,31)" rx="2" ry="2" />
<text  x="17.05" y="1615.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (4 samples, 0.01%)</title><rect x="507.0" y="1733" width="0.1" height="15.0" fill="rgb(242,166,45)" rx="2" ry="2" />
<text  x="510.00" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1733" width="0.2" height="15.0" fill="rgb(254,137,9)" rx="2" ry="2" />
<text  x="693.91" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1621" width="0.1" height="15.0" fill="rgb(252,165,14)" rx="2" ry="2" />
<text  x="99.30" y="1631.5" ></text>
</g>
<g >
<title>[[vdso]] (18 samples, 0.04%)</title><rect x="13.3" y="1813" width="0.5" height="15.0" fill="rgb(244,53,6)" rx="2" ry="2" />
<text  x="16.35" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="239.7" y="1717" width="0.3" height="15.0" fill="rgb(207,113,35)" rx="2" ry="2" />
<text  x="242.69" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1717" width="0.1" height="15.0" fill="rgb(214,135,38)" rx="2" ry="2" />
<text  x="692.50" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="410.5" y="1445" width="0.2" height="15.0" fill="rgb(218,211,4)" rx="2" ry="2" />
<text  x="413.55" y="1455.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (7 samples, 0.02%)</title><rect x="230.9" y="1813" width="0.1" height="15.0" fill="rgb(225,177,14)" rx="2" ry="2" />
<text  x="233.85" y="1823.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (35 samples, 0.08%)</title><rect x="345.1" y="1637" width="0.9" height="15.0" fill="rgb(251,136,14)" rx="2" ry="2" />
<text  x="348.06" y="1647.5" ></text>
</g>
<g >
<title>__poll (14 samples, 0.03%)</title><rect x="224.6" y="1813" width="0.4" height="15.0" fill="rgb(213,222,22)" rx="2" ry="2" />
<text  x="227.62" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (5 samples, 0.01%)</title><rect x="389.0" y="1637" width="0.2" height="15.0" fill="rgb(236,39,7)" rx="2" ry="2" />
<text  x="392.04" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.01%)</title><rect x="329.9" y="1589" width="0.1" height="15.0" fill="rgb(232,122,54)" rx="2" ry="2" />
<text  x="332.88" y="1599.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="158.9" y="1701" width="0.2" height="15.0" fill="rgb(208,9,28)" rx="2" ry="2" />
<text  x="161.91" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,178 samples, 2.72%)</title><rect x="599.8" y="1749" width="32.1" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="602.82" y="1759.5" >[[..</text>
</g>
<g >
<title>Chrome_ChildIOT (108 samples, 0.25%)</title><rect x="10.3" y="1845" width="2.9" height="15.0" fill="rgb(205,153,37)" rx="2" ry="2" />
<text  x="13.27" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1797" width="0.3" height="15.0" fill="rgb(235,1,20)" rx="2" ry="2" />
<text  x="29.05" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (55 samples, 0.13%)</title><rect x="659.0" y="1813" width="1.5" height="15.0" fill="rgb(234,97,29)" rx="2" ry="2" />
<text  x="662.03" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="345.4" y="1589" width="0.1" height="15.0" fill="rgb(251,1,5)" rx="2" ry="2" />
<text  x="348.38" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="20.0" y="1669" width="0.1" height="15.0" fill="rgb(207,54,36)" rx="2" ry="2" />
<text  x="23.01" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.01%)</title><rect x="213.1" y="1829" width="0.1" height="15.0" fill="rgb(254,222,20)" rx="2" ry="2" />
<text  x="216.09" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.10%)</title><rect x="22.2" y="1829" width="1.2" height="15.0" fill="rgb(252,127,4)" rx="2" ry="2" />
<text  x="25.21" y="1839.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (6 samples, 0.01%)</title><rect x="111.0" y="1717" width="0.2" height="15.0" fill="rgb(214,221,16)" rx="2" ry="2" />
<text  x="114.04" y="1727.5" ></text>
</g>
<g >
<title>std::ostream::seekp (8 samples, 0.02%)</title><rect x="361.2" y="1653" width="0.3" height="15.0" fill="rgb(219,107,26)" rx="2" ry="2" />
<text  x="364.24" y="1663.5" ></text>
</g>
<g >
<title>TypeChar::DeserializeFrom (5 samples, 0.01%)</title><rect x="314.4" y="1621" width="0.2" height="15.0" fill="rgb(243,65,27)" rx="2" ry="2" />
<text  x="317.43" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (7 samples, 0.02%)</title><rect x="373.8" y="1621" width="0.2" height="15.0" fill="rgb(213,5,47)" rx="2" ry="2" />
<text  x="376.83" y="1631.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1·dwrap·1 (18 samples, 0.04%)</title><rect x="213.2" y="1813" width="0.5" height="15.0" fill="rgb(207,195,24)" rx="2" ry="2" />
<text  x="216.23" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (10 samples, 0.02%)</title><rect x="481.7" y="1669" width="0.3" height="15.0" fill="rgb(244,137,4)" rx="2" ry="2" />
<text  x="484.73" y="1679.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="26.9" y="1749" width="0.2" height="15.0" fill="rgb(221,86,47)" rx="2" ry="2" />
<text  x="29.92" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (887 samples, 2.04%)</title><rect x="30.5" y="1797" width="24.1" height="15.0" fill="rgb(237,114,47)" rx="2" ry="2" />
<text  x="33.45" y="1807.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="231.1" y="1733" width="0.1" height="15.0" fill="rgb(227,134,0)" rx="2" ry="2" />
<text  x="234.12" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1797" width="0.2" height="15.0" fill="rgb(238,111,43)" rx="2" ry="2" />
<text  x="24.48" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (651 samples, 1.50%)</title><rect x="271.7" y="1605" width="17.7" height="15.0" fill="rgb(225,211,2)" rx="2" ry="2" />
<text  x="274.68" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (138 samples, 0.32%)</title><rect x="218.7" y="1829" width="3.8" height="15.0" fill="rgb(226,119,22)" rx="2" ry="2" />
<text  x="221.75" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1733" width="0.1" height="15.0" fill="rgb(242,177,40)" rx="2" ry="2" />
<text  x="58.07" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (17 samples, 0.04%)</title><rect x="461.4" y="1621" width="0.4" height="15.0" fill="rgb(222,84,32)" rx="2" ry="2" />
<text  x="464.38" y="1631.5" ></text>
</g>
<g >
<title>[perf-162284.map] (8 samples, 0.02%)</title><rect x="59.2" y="1445" width="0.2" height="15.0" fill="rgb(211,166,35)" rx="2" ry="2" />
<text  x="62.17" y="1455.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Field*&gt; (26 samples, 0.06%)</title><rect x="508.6" y="1717" width="0.7" height="15.0" fill="rgb(211,220,21)" rx="2" ry="2" />
<text  x="511.60" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,105 samples, 2.55%)</title><rect x="1155.2" y="1653" width="30.0" height="15.0" fill="rgb(245,56,54)" rx="2" ry="2" />
<text  x="1158.19" y="1663.5" >[[..</text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="11.5" y="1541" width="0.2" height="15.0" fill="rgb(250,185,39)" rx="2" ry="2" />
<text  x="14.52" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="105.7" y="1605" width="0.4" height="15.0" fill="rgb(225,42,36)" rx="2" ry="2" />
<text  x="108.66" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212 samples, 0.49%)</title><rect x="665.2" y="1765" width="5.8" height="15.0" fill="rgb(226,55,15)" rx="2" ry="2" />
<text  x="668.24" y="1775.5" ></text>
</g>
<g >
<title>[code] (13 samples, 0.03%)</title><rect x="11.5" y="1573" width="0.3" height="15.0" fill="rgb(216,153,8)" rx="2" ry="2" />
<text  x="14.50" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="22.5" y="1701" width="0.2" height="15.0" fill="rgb(209,134,36)" rx="2" ry="2" />
<text  x="25.54" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,165 samples, 2.69%)</title><rect x="257.7" y="1797" width="31.7" height="15.0" fill="rgb(207,208,21)" rx="2" ry="2" />
<text  x="260.70" y="1807.5" >[[..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (10 samples, 0.02%)</title><rect x="469.5" y="1653" width="0.3" height="15.0" fill="rgb(246,18,7)" rx="2" ry="2" />
<text  x="472.54" y="1663.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="26.9" y="1701" width="0.2" height="15.0" fill="rgb(220,155,10)" rx="2" ry="2" />
<text  x="29.94" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="243.0" y="1749" width="0.4" height="15.0" fill="rgb(249,114,16)" rx="2" ry="2" />
<text  x="245.95" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (512 samples, 1.18%)</title><rect x="275.5" y="1541" width="13.9" height="15.0" fill="rgb(226,162,39)" rx="2" ry="2" />
<text  x="278.46" y="1551.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn_2 (11 samples, 0.03%)</title><rect x="514.2" y="1829" width="0.3" height="15.0" fill="rgb(231,26,1)" rx="2" ry="2" />
<text  x="517.20" y="1839.5" ></text>
</g>
<g >
<title>irq/95-iwlwifi: (10 samples, 0.02%)</title><rect x="234.9" y="1845" width="0.3" height="15.0" fill="rgb(254,141,36)" rx="2" ry="2" />
<text  x="237.93" y="1855.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (9 samples, 0.02%)</title><rect x="434.9" y="1637" width="0.2" height="15.0" fill="rgb(219,122,12)" rx="2" ry="2" />
<text  x="437.87" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34 samples, 0.08%)</title><rect x="1184.3" y="1413" width="0.9" height="15.0" fill="rgb(210,223,53)" rx="2" ry="2" />
<text  x="1187.32" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (297 samples, 0.68%)</title><rect x="98.1" y="1765" width="8.0" height="15.0" fill="rgb(237,130,33)" rx="2" ry="2" />
<text  x="101.07" y="1775.5" ></text>
</g>
<g >
<title>Field::GetLength (17 samples, 0.04%)</title><rect x="299.4" y="1621" width="0.5" height="15.0" fill="rgb(217,170,1)" rx="2" ry="2" />
<text  x="302.44" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="480.6" y="1461" width="0.2" height="15.0" fill="rgb(231,74,1)" rx="2" ry="2" />
<text  x="483.61" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1765" width="0.2" height="15.0" fill="rgb(249,59,22)" rx="2" ry="2" />
<text  x="223.62" y="1775.5" ></text>
</g>
<g >
<title>__restore_rt (9 samples, 0.02%)</title><rect x="687.8" y="1781" width="0.3" height="15.0" fill="rgb(233,109,35)" rx="2" ry="2" />
<text  x="690.84" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.10%)</title><rect x="18.1" y="1829" width="1.2" height="15.0" fill="rgb(230,113,34)" rx="2" ry="2" />
<text  x="21.13" y="1839.5" ></text>
</g>
<g >
<title>iwl_pcie_rx_handle (10 samples, 0.02%)</title><rect x="234.9" y="1749" width="0.3" height="15.0" fill="rgb(247,116,15)" rx="2" ry="2" />
<text  x="237.93" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (986 samples, 2.27%)</title><rect x="262.6" y="1669" width="26.8" height="15.0" fill="rgb(238,34,44)" rx="2" ry="2" />
<text  x="265.56" y="1679.5" >[..</text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::hash&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::equal_to&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__1::shared_ptr&lt;InotifySubscription&gt;, std::__1::shared_ptr&lt;InotifySubscription&gt; const&amp;&gt; (67 samples, 0.15%)</title><rect x="159.5" y="1749" width="1.9" height="15.0" fill="rgb(225,185,3)" rx="2" ry="2" />
<text  x="162.54" y="1759.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (8 samples, 0.02%)</title><rect x="17.6" y="1733" width="0.2" height="15.0" fill="rgb(215,90,14)" rx="2" ry="2" />
<text  x="20.62" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1653" width="0.1" height="15.0" fill="rgb(215,27,50)" rx="2" ry="2" />
<text  x="17.81" y="1663.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="469" width="0.1" height="15.0" fill="rgb(214,98,6)" rx="2" ry="2" />
<text  x="61.79" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 0.11%)</title><rect x="236.9" y="1749" width="1.3" height="15.0" fill="rgb(211,26,44)" rx="2" ry="2" />
<text  x="239.92" y="1759.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (696 samples, 1.60%)</title><rect x="417.5" y="1669" width="19.0" height="15.0" fill="rgb(223,162,18)" rx="2" ry="2" />
<text  x="420.54" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (6 samples, 0.01%)</title><rect x="472.4" y="1669" width="0.2" height="15.0" fill="rgb(229,159,53)" rx="2" ry="2" />
<text  x="475.40" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1187.2" y="1781" width="0.1" height="15.0" fill="rgb(206,34,9)" rx="2" ry="2" />
<text  x="1190.20" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="315.5" y="1605" width="0.2" height="15.0" fill="rgb(205,176,47)" rx="2" ry="2" />
<text  x="318.55" y="1615.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (97 samples, 0.22%)</title><rect x="443.8" y="1717" width="2.6" height="15.0" fill="rgb(217,213,37)" rx="2" ry="2" />
<text  x="446.79" y="1727.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Field*, Field&gt; (35 samples, 0.08%)</title><rect x="508.5" y="1749" width="1.0" height="15.0" fill="rgb(239,32,49)" rx="2" ry="2" />
<text  x="511.52" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (24 samples, 0.06%)</title><rect x="425.0" y="1621" width="0.7" height="15.0" fill="rgb(209,116,39)" rx="2" ry="2" />
<text  x="428.02" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (20 samples, 0.05%)</title><rect x="682.0" y="1557" width="0.5" height="15.0" fill="rgb(214,25,21)" rx="2" ry="2" />
<text  x="684.96" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="238.2" y="1813" width="0.6" height="15.0" fill="rgb(249,16,23)" rx="2" ry="2" />
<text  x="241.17" y="1823.5" ></text>
</g>
<g >
<title>Row::~Row (199 samples, 0.46%)</title><rect x="400.9" y="1669" width="5.4" height="15.0" fill="rgb(230,116,53)" rx="2" ry="2" />
<text  x="403.92" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="242.9" y="1813" width="0.5" height="15.0" fill="rgb(232,221,9)" rx="2" ry="2" />
<text  x="245.87" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1669" width="0.1" height="15.0" fill="rgb(253,78,28)" rx="2" ry="2" />
<text  x="17.81" y="1679.5" ></text>
</g>
<g >
<title>IndexKeyComparator::operator (1,668 samples, 3.84%)</title><rect x="296.3" y="1669" width="45.4" height="15.0" fill="rgb(254,205,9)" rx="2" ry="2" />
<text  x="299.29" y="1679.5" >Inde..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (5 samples, 0.01%)</title><rect x="398.2" y="1621" width="0.1" height="15.0" fill="rgb(253,143,21)" rx="2" ry="2" />
<text  x="401.20" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1765" width="34.0" height="15.0" fill="rgb(250,213,29)" rx="2" ry="2" />
<text  x="1154.22" y="1775.5" >[u..</text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.01%)</title><rect x="508.2" y="1733" width="0.1" height="15.0" fill="rgb(218,62,5)" rx="2" ry="2" />
<text  x="511.19" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (6 samples, 0.01%)</title><rect x="437.1" y="1669" width="0.2" height="15.0" fill="rgb(208,213,15)" rx="2" ry="2" />
<text  x="440.10" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (15 samples, 0.03%)</title><rect x="412.5" y="1589" width="0.4" height="15.0" fill="rgb(228,105,37)" rx="2" ry="2" />
<text  x="415.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (9 samples, 0.02%)</title><rect x="369.4" y="1589" width="0.2" height="15.0" fill="rgb(246,11,31)" rx="2" ry="2" />
<text  x="372.37" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,051 samples, 2.42%)</title><rect x="176.8" y="1733" width="28.6" height="15.0" fill="rgb(223,190,5)" rx="2" ry="2" />
<text  x="179.83" y="1743.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1669" width="0.2" height="15.0" fill="rgb(234,92,32)" rx="2" ry="2" />
<text  x="24.75" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (4 samples, 0.01%)</title><rect x="491.5" y="1669" width="0.1" height="15.0" fill="rgb(225,22,50)" rx="2" ry="2" />
<text  x="494.52" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="228.1" y="1765" width="0.2" height="15.0" fill="rgb(219,33,47)" rx="2" ry="2" />
<text  x="231.10" y="1775.5" ></text>
</g>
<g >
<title>[code] (28 samples, 0.06%)</title><rect x="58.2" y="997" width="0.7" height="15.0" fill="rgb(254,83,36)" rx="2" ry="2" />
<text  x="61.17" y="1007.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="14.1" y="1573" width="0.2" height="15.0" fill="rgb(237,162,18)" rx="2" ry="2" />
<text  x="17.08" y="1583.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::bad (5 samples, 0.01%)</title><rect x="360.9" y="1653" width="0.2" height="15.0" fill="rgb(232,66,4)" rx="2" ry="2" />
<text  x="363.94" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="238.9" y="1781" width="0.4" height="15.0" fill="rgb(249,60,6)" rx="2" ry="2" />
<text  x="241.90" y="1791.5" ></text>
</g>
<g >
<title>perf (135 samples, 0.31%)</title><rect x="683.9" y="1845" width="3.7" height="15.0" fill="rgb(205,54,47)" rx="2" ry="2" />
<text  x="686.92" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (269 samples, 0.62%)</title><rect x="624.5" y="1573" width="7.3" height="15.0" fill="rgb(236,65,52)" rx="2" ry="2" />
<text  x="627.52" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="224.7" y="1733" width="0.3" height="15.0" fill="rgb(218,194,35)" rx="2" ry="2" />
<text  x="227.70" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73 samples, 0.17%)</title><rect x="679.8" y="1765" width="1.9" height="15.0" fill="rgb(218,115,51)" rx="2" ry="2" />
<text  x="682.76" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="239.4" y="1781" width="0.6" height="15.0" fill="rgb(244,170,44)" rx="2" ry="2" />
<text  x="242.36" y="1791.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Field*&gt; (7 samples, 0.02%)</title><rect x="509.5" y="1749" width="0.2" height="15.0" fill="rgb(254,150,49)" rx="2" ry="2" />
<text  x="512.47" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="219.7" y="1637" width="0.2" height="15.0" fill="rgb(233,214,16)" rx="2" ry="2" />
<text  x="222.67" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="240.5" y="1669" width="0.3" height="15.0" fill="rgb(216,46,13)" rx="2" ry="2" />
<text  x="243.48" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="241.9" y="1829" width="0.3" height="15.0" fill="rgb(254,109,7)" rx="2" ry="2" />
<text  x="244.95" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1813" width="0.2" height="15.0" fill="rgb(247,36,45)" rx="2" ry="2" />
<text  x="13.44" y="1823.5" ></text>
</g>
<g >
<title>Field::GetLength (5 samples, 0.01%)</title><rect x="298.0" y="1637" width="0.1" height="15.0" fill="rgb(228,20,31)" rx="2" ry="2" />
<text  x="300.98" y="1647.5" ></text>
</g>
<g >
<title>BufferPoolManager::NewPage (58 samples, 0.13%)</title><rect x="294.4" y="1669" width="1.6" height="15.0" fill="rgb(254,202,52)" rx="2" ry="2" />
<text  x="297.39" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1813" width="0.1" height="15.0" fill="rgb(241,21,12)" rx="2" ry="2" />
<text  x="27.61" y="1823.5" ></text>
</g>
<g >
<title>Xorg (10 samples, 0.02%)</title><rect x="24.0" y="1845" width="0.3" height="15.0" fill="rgb(221,99,43)" rx="2" ry="2" />
<text  x="26.98" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="682.9" y="1749" width="0.4" height="15.0" fill="rgb(233,54,46)" rx="2" ry="2" />
<text  x="685.94" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (4 samples, 0.01%)</title><rect x="400.5" y="1653" width="0.1" height="15.0" fill="rgb(245,205,26)" rx="2" ry="2" />
<text  x="403.46" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1797" width="0.1" height="15.0" fill="rgb(219,224,14)" rx="2" ry="2" />
<text  x="23.25" y="1807.5" ></text>
</g>
<g >
<title>Field::Field (45 samples, 0.10%)</title><rect x="474.0" y="1749" width="1.2" height="15.0" fill="rgb(226,79,44)" rx="2" ry="2" />
<text  x="476.98" y="1759.5" ></text>
</g>
<g >
<title>Field::~Field (49 samples, 0.11%)</title><rect x="463.3" y="1685" width="1.3" height="15.0" fill="rgb(253,100,19)" rx="2" ry="2" />
<text  x="466.26" y="1695.5" ></text>
</g>
<g >
<title>ieee80211_set_disassoc (4 samples, 0.01%)</title><rect x="245.1" y="1733" width="0.1" height="15.0" fill="rgb(222,62,15)" rx="2" ry="2" />
<text  x="248.10" y="1743.5" ></text>
</g>
<g >
<title>Row::Row (5 samples, 0.01%)</title><rect x="406.8" y="1685" width="0.1" height="15.0" fill="rgb(251,152,32)" rx="2" ry="2" />
<text  x="409.80" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (12 samples, 0.03%)</title><rect x="376.3" y="1605" width="0.3" height="15.0" fill="rgb(244,37,42)" rx="2" ry="2" />
<text  x="379.25" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1765" width="0.2" height="15.0" fill="rgb(235,70,20)" rx="2" ry="2" />
<text  x="13.44" y="1775.5" ></text>
</g>
<g >
<title>[perf-140378.map] (18 samples, 0.04%)</title><rect x="60.3" y="1637" width="0.5" height="15.0" fill="rgb(229,137,13)" rx="2" ry="2" />
<text  x="63.29" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1685" width="0.1" height="15.0" fill="rgb(227,29,24)" rx="2" ry="2" />
<text  x="224.90" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,625 samples, 38.32%)</title><rect x="699.0" y="1797" width="452.2" height="15.0" fill="rgb(237,80,53)" rx="2" ry="2" />
<text  x="702.04" y="1807.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (38 samples, 0.09%)</title><rect x="432.5" y="1589" width="1.1" height="15.0" fill="rgb(208,3,25)" rx="2" ry="2" />
<text  x="435.53" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (955 samples, 2.20%)</title><rect x="70.5" y="1717" width="25.9" height="15.0" fill="rgb(227,82,10)" rx="2" ry="2" />
<text  x="73.46" y="1727.5" >[..</text>
</g>
<g >
<title>llseek@GLIBC_2.2.5 (42 samples, 0.10%)</title><rect x="511.5" y="1829" width="1.1" height="15.0" fill="rgb(237,206,52)" rx="2" ry="2" />
<text  x="514.46" y="1839.5" ></text>
</g>
<g >
<title>ntfs_attr_lookup (58 samples, 0.13%)</title><rect x="643.7" y="1813" width="1.6" height="15.0" fill="rgb(252,165,38)" rx="2" ry="2" />
<text  x="646.75" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,384 samples, 3.19%)</title><rect x="594.2" y="1781" width="37.7" height="15.0" fill="rgb(246,135,33)" rx="2" ry="2" />
<text  x="597.22" y="1791.5" >[[k..</text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="213" width="0.1" height="15.0" fill="rgb(209,131,45)" rx="2" ry="2" />
<text  x="61.79" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (7 samples, 0.02%)</title><rect x="502.1" y="1653" width="0.2" height="15.0" fill="rgb(249,179,37)" rx="2" ry="2" />
<text  x="505.13" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (11 samples, 0.03%)</title><rect x="679.3" y="1717" width="0.3" height="15.0" fill="rgb(210,163,22)" rx="2" ry="2" />
<text  x="682.32" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="233.1" y="1781" width="0.1" height="15.0" fill="rgb(225,173,44)" rx="2" ry="2" />
<text  x="236.14" y="1791.5" ></text>
</g>
<g >
<title>[code] (20 samples, 0.05%)</title><rect x="16.1" y="1573" width="0.5" height="15.0" fill="rgb(208,52,45)" rx="2" ry="2" />
<text  x="19.09" y="1583.5" ></text>
</g>
<g >
<title>TypeChar::CompareLessThan (75 samples, 0.17%)</title><rect x="298.5" y="1637" width="2.0" height="15.0" fill="rgb(227,147,38)" rx="2" ry="2" />
<text  x="301.47" y="1647.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (4 samples, 0.01%)</title><rect x="17.7" y="1669" width="0.1" height="15.0" fill="rgb(232,223,0)" rx="2" ry="2" />
<text  x="20.72" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.05%)</title><rect x="690.3" y="1829" width="0.6" height="15.0" fill="rgb(246,140,27)" rx="2" ry="2" />
<text  x="693.31" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="467.1" y="1637" width="0.2" height="15.0" fill="rgb(246,44,37)" rx="2" ry="2" />
<text  x="470.15" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (44 samples, 0.10%)</title><rect x="457.6" y="1653" width="1.2" height="15.0" fill="rgb(238,84,31)" rx="2" ry="2" />
<text  x="460.63" y="1663.5" ></text>
</g>
<g >
<title>_nv033085rm (30 samples, 0.07%)</title><rect x="234.1" y="1829" width="0.8" height="15.0" fill="rgb(224,229,50)" rx="2" ry="2" />
<text  x="237.06" y="1839.5" ></text>
</g>
<g >
<title>read (15 samples, 0.03%)</title><rect x="691.1" y="1829" width="0.4" height="15.0" fill="rgb(250,31,36)" rx="2" ry="2" />
<text  x="694.13" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (8 samples, 0.02%)</title><rect x="318.8" y="1621" width="0.2" height="15.0" fill="rgb(227,204,53)" rx="2" ry="2" />
<text  x="321.81" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (16 samples, 0.04%)</title><rect x="447.2" y="1621" width="0.4" height="15.0" fill="rgb(217,213,5)" rx="2" ry="2" />
<text  x="450.19" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1733" width="0.2" height="15.0" fill="rgb(239,38,19)" rx="2" ry="2" />
<text  x="24.48" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="232.0" y="1829" width="0.1" height="15.0" fill="rgb(225,147,54)" rx="2" ry="2" />
<text  x="234.97" y="1839.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (366 samples, 0.84%)</title><rect x="109.6" y="1749" width="9.9" height="15.0" fill="rgb(250,97,28)" rx="2" ry="2" />
<text  x="112.57" y="1759.5" ></text>
</g>
<g >
<title>[msedge] (20 samples, 0.05%)</title><rect x="682.0" y="1573" width="0.5" height="15.0" fill="rgb(245,110,16)" rx="2" ry="2" />
<text  x="684.96" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1733" width="0.4" height="15.0" fill="rgb(209,227,33)" rx="2" ry="2" />
<text  x="694.13" y="1743.5" ></text>
</g>
<g >
<title>__GI___writev (1,213 samples, 2.80%)</title><rect x="256.4" y="1829" width="33.0" height="15.0" fill="rgb(206,139,37)" rx="2" ry="2" />
<text  x="259.39" y="1839.5" >__..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (198 samples, 0.46%)</title><rect x="354.3" y="1445" width="5.4" height="15.0" fill="rgb(231,39,38)" rx="2" ry="2" />
<text  x="357.33" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;int const, int&gt;, false, false&gt;::operator (4 samples, 0.01%)</title><rect x="482.3" y="1733" width="0.1" height="15.0" fill="rgb(221,20,47)" rx="2" ry="2" />
<text  x="485.27" y="1743.5" ></text>
</g>
<g >
<title>[code] (48 samples, 0.11%)</title><rect x="57.6" y="1269" width="1.3" height="15.0" fill="rgb(249,185,47)" rx="2" ry="2" />
<text  x="60.62" y="1279.5" ></text>
</g>
<g >
<title>__errno_location (11 samples, 0.03%)</title><rect x="592.8" y="1797" width="0.3" height="15.0" fill="rgb(210,32,15)" rx="2" ry="2" />
<text  x="595.78" y="1807.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (6 samples, 0.01%)</title><rect x="487.3" y="1701" width="0.1" height="15.0" fill="rgb(226,7,27)" rx="2" ry="2" />
<text  x="490.28" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="219.8" y="1589" width="0.1" height="15.0" fill="rgb(250,128,42)" rx="2" ry="2" />
<text  x="222.75" y="1599.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (13 samples, 0.03%)</title><rect x="371.9" y="1573" width="0.4" height="15.0" fill="rgb(246,55,1)" rx="2" ry="2" />
<text  x="374.90" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="219.7" y="1653" width="0.2" height="15.0" fill="rgb(206,150,39)" rx="2" ry="2" />
<text  x="222.67" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1733" width="0.1" height="15.0" fill="rgb(241,149,51)" rx="2" ry="2" />
<text  x="1192.27" y="1743.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (11 samples, 0.03%)</title><rect x="384.7" y="1557" width="0.3" height="15.0" fill="rgb(209,35,53)" rx="2" ry="2" />
<text  x="387.71" y="1567.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (5 samples, 0.01%)</title><rect x="506.8" y="1669" width="0.1" height="15.0" fill="rgb(243,208,46)" rx="2" ry="2" />
<text  x="509.78" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (70 samples, 0.16%)</title><rect x="328.2" y="1605" width="1.9" height="15.0" fill="rgb(230,36,17)" rx="2" ry="2" />
<text  x="331.22" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (5 samples, 0.01%)</title><rect x="390.3" y="1637" width="0.2" height="15.0" fill="rgb(224,36,33)" rx="2" ry="2" />
<text  x="393.31" y="1647.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::basic_string (11 samples, 0.03%)</title><rect x="119.1" y="1733" width="0.3" height="15.0" fill="rgb(227,206,20)" rx="2" ry="2" />
<text  x="122.09" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="229.1" y="1733" width="0.4" height="15.0" fill="rgb(209,150,45)" rx="2" ry="2" />
<text  x="232.11" y="1743.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.01%)</title><rect x="393.2" y="1557" width="0.1" height="15.0" fill="rgb(225,104,37)" rx="2" ry="2" />
<text  x="396.17" y="1567.5" ></text>
</g>
<g >
<title>[code] (42 samples, 0.10%)</title><rect x="11.2" y="1701" width="1.1" height="15.0" fill="rgb(243,205,4)" rx="2" ry="2" />
<text  x="14.17" y="1711.5" ></text>
</g>
<g >
<title>[msedge] (9 samples, 0.02%)</title><rect x="14.1" y="1589" width="0.2" height="15.0" fill="rgb(247,192,46)" rx="2" ry="2" />
<text  x="17.08" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="1184.9" y="1365" width="0.3" height="15.0" fill="rgb(214,222,21)" rx="2" ry="2" />
<text  x="1187.91" y="1375.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (78 samples, 0.18%)</title><rect x="679.6" y="1813" width="2.1" height="15.0" fill="rgb(238,109,54)" rx="2" ry="2" />
<text  x="682.62" y="1823.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (17 samples, 0.04%)</title><rect x="425.9" y="1653" width="0.4" height="15.0" fill="rgb(207,216,24)" rx="2" ry="2" />
<text  x="428.86" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1813" width="0.1" height="15.0" fill="rgb(208,157,23)" rx="2" ry="2" />
<text  x="216.80" y="1823.5" ></text>
</g>
<g >
<title>Field::IsNull (4 samples, 0.01%)</title><rect x="416.2" y="1669" width="0.1" height="15.0" fill="rgb(233,25,46)" rx="2" ry="2" />
<text  x="419.18" y="1679.5" ></text>
</g>
<g >
<title>[code] (5 samples, 0.01%)</title><rect x="23.2" y="1541" width="0.1" height="15.0" fill="rgb(243,151,44)" rx="2" ry="2" />
<text  x="26.16" y="1551.5" ></text>
</g>
<g >
<title>_int_free (60 samples, 0.14%)</title><rect x="640.9" y="1813" width="1.7" height="15.0" fill="rgb(242,21,38)" rx="2" ry="2" />
<text  x="643.95" y="1823.5" ></text>
</g>
<g >
<title>ReaderWriterLatch::WUnlock (4 samples, 0.01%)</title><rect x="368.4" y="1669" width="0.1" height="15.0" fill="rgb(225,209,35)" rx="2" ry="2" />
<text  x="371.39" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1813" width="0.1" height="15.0" fill="rgb(235,166,2)" rx="2" ry="2" />
<text  x="23.25" y="1823.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.01%)</title><rect x="14.6" y="1813" width="0.1" height="15.0" fill="rgb(245,107,2)" rx="2" ry="2" />
<text  x="17.60" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="25.2" y="1685" width="0.1" height="15.0" fill="rgb(221,194,53)" rx="2" ry="2" />
<text  x="28.18" y="1695.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__rehash (7 samples, 0.02%)</title><rect x="159.1" y="1749" width="0.2" height="15.0" fill="rgb(251,115,54)" rx="2" ry="2" />
<text  x="162.10" y="1759.5" ></text>
</g>
<g >
<title>Nan::imp::FunctionCallbackWrapper (7 samples, 0.02%)</title><rect x="60.5" y="1589" width="0.2" height="15.0" fill="rgb(229,167,5)" rx="2" ry="2" />
<text  x="63.48" y="1599.5" ></text>
</g>
<g >
<title>Type::GetInstance (8 samples, 0.02%)</title><rect x="304.2" y="1605" width="0.2" height="15.0" fill="rgb(208,170,13)" rx="2" ry="2" />
<text  x="307.23" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (512 samples, 1.18%)</title><rect x="532.9" y="1621" width="13.9" height="15.0" fill="rgb(207,105,4)" rx="2" ry="2" />
<text  x="535.92" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (30 samples, 0.07%)</title><rect x="12.4" y="1749" width="0.8" height="15.0" fill="rgb(211,118,34)" rx="2" ry="2" />
<text  x="15.39" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="240.9" y="1765" width="0.3" height="15.0" fill="rgb(213,59,23)" rx="2" ry="2" />
<text  x="243.89" y="1775.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (5 samples, 0.01%)</title><rect x="397.4" y="1589" width="0.2" height="15.0" fill="rgb(231,27,48)" rx="2" ry="2" />
<text  x="400.44" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::operator[] (6 samples, 0.01%)</title><rect x="391.2" y="1637" width="0.1" height="15.0" fill="rgb(213,9,34)" rx="2" ry="2" />
<text  x="394.18" y="1647.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (31 samples, 0.07%)</title><rect x="312.6" y="1589" width="0.9" height="15.0" fill="rgb(238,192,29)" rx="2" ry="2" />
<text  x="315.64" y="1599.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1685" width="4.4" height="15.0" fill="rgb(223,223,29)" rx="2" ry="2" />
<text  x="58.23" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (21 samples, 0.05%)</title><rect x="376.0" y="1637" width="0.6" height="15.0" fill="rgb(241,213,9)" rx="2" ry="2" />
<text  x="379.01" y="1647.5" ></text>
</g>
<g >
<title>__strncmp_avx2 (5 samples, 0.01%)</title><rect x="639.6" y="1813" width="0.2" height="15.0" fill="rgb(212,61,9)" rx="2" ry="2" />
<text  x="642.64" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1701" width="0.3" height="15.0" fill="rgb(219,15,39)" rx="2" ry="2" />
<text  x="29.05" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1733" width="0.3" height="15.0" fill="rgb(222,29,54)" rx="2" ry="2" />
<text  x="222.64" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="239.4" y="1765" width="0.6" height="15.0" fill="rgb(254,228,1)" rx="2" ry="2" />
<text  x="242.45" y="1775.5" ></text>
</g>
<g >
<title>Debounce::loop (137 samples, 0.32%)</title><rect x="205.4" y="1797" width="3.8" height="15.0" fill="rgb(254,193,13)" rx="2" ry="2" />
<text  x="208.45" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,071 samples, 2.47%)</title><rect x="67.3" y="1733" width="29.1" height="15.0" fill="rgb(210,79,6)" rx="2" ry="2" />
<text  x="70.31" y="1743.5" >[[..</text>
</g>
<g >
<title>__pthread_mutex_trylock (4 samples, 0.01%)</title><rect x="10.3" y="1813" width="0.1" height="15.0" fill="rgb(225,131,21)" rx="2" ry="2" />
<text  x="13.33" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12 samples, 0.03%)</title><rect x="345.6" y="1589" width="0.3" height="15.0" fill="rgb(211,122,54)" rx="2" ry="2" />
<text  x="348.57" y="1599.5" ></text>
</g>
<g >
<title>ntfs_allowed_access (8 samples, 0.02%)</title><rect x="643.3" y="1813" width="0.2" height="15.0" fill="rgb(241,82,38)" rx="2" ry="2" />
<text  x="646.26" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="12.2" y="1445" width="0.1" height="15.0" fill="rgb(225,114,7)" rx="2" ry="2" />
<text  x="15.18" y="1455.5" ></text>
</g>
<g >
<title>[libntfs-3g.so.883.0.0] (906 samples, 2.09%)</title><rect x="522.5" y="1813" width="24.7" height="15.0" fill="rgb(253,180,38)" rx="2" ry="2" />
<text  x="525.53" y="1823.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 0.10%)</title><rect x="684.3" y="1669" width="1.3" height="15.0" fill="rgb(245,28,17)" rx="2" ry="2" />
<text  x="687.33" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1637" width="0.1" height="15.0" fill="rgb(254,158,22)" rx="2" ry="2" />
<text  x="692.50" y="1647.5" ></text>
</g>
<g >
<title>rcu_sched (29 samples, 0.07%)</title><rect x="688.6" y="1845" width="0.8" height="15.0" fill="rgb(206,210,48)" rx="2" ry="2" />
<text  x="691.63" y="1855.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (80 samples, 0.18%)</title><rect x="420.5" y="1605" width="2.2" height="15.0" fill="rgb(248,4,42)" rx="2" ry="2" />
<text  x="423.53" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="172.6" y="1589" width="0.5" height="15.0" fill="rgb(239,28,22)" rx="2" ry="2" />
<text  x="175.65" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1797" width="0.2" height="15.0" fill="rgb(241,40,23)" rx="2" ry="2" />
<text  x="57.80" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (4 samples, 0.01%)</title><rect x="429.7" y="1637" width="0.1" height="15.0" fill="rgb(225,14,35)" rx="2" ry="2" />
<text  x="432.67" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (14 samples, 0.03%)</title><rect x="317.5" y="1621" width="0.4" height="15.0" fill="rgb(215,184,20)" rx="2" ry="2" />
<text  x="320.53" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1701" width="0.1" height="15.0" fill="rgb(225,35,51)" rx="2" ry="2" />
<text  x="27.61" y="1711.5" ></text>
</g>
<g >
<title>g_main_context_dispatch (23 samples, 0.05%)</title><rect x="22.8" y="1813" width="0.6" height="15.0" fill="rgb(224,86,24)" rx="2" ry="2" />
<text  x="25.78" y="1823.5" ></text>
</g>
<g >
<title>[code] (159 samples, 0.37%)</title><rect x="55.3" y="1637" width="4.3" height="15.0" fill="rgb(209,121,0)" rx="2" ry="2" />
<text  x="58.29" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (218 samples, 0.50%)</title><rect x="247.6" y="1717" width="6.0" height="15.0" fill="rgb(222,69,38)" rx="2" ry="2" />
<text  x="250.63" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (16 samples, 0.04%)</title><rect x="308.8" y="1589" width="0.5" height="15.0" fill="rgb(247,125,12)" rx="2" ry="2" />
<text  x="311.83" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1733" width="0.2" height="15.0" fill="rgb(216,210,32)" rx="2" ry="2" />
<text  x="235.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (4 samples, 0.01%)</title><rect x="345.4" y="1557" width="0.1" height="15.0" fill="rgb(219,127,17)" rx="2" ry="2" />
<text  x="348.44" y="1567.5" ></text>
</g>
<g >
<title>main (8,163 samples, 18.82%)</title><rect x="289.4" y="1813" width="222.0" height="15.0" fill="rgb(231,64,52)" rx="2" ry="2" />
<text  x="292.41" y="1823.5" >main</text>
</g>
<g >
<title>BlockHeader::GetBlockSize (14 samples, 0.03%)</title><rect x="311.9" y="1589" width="0.4" height="15.0" fill="rgb(214,69,40)" rx="2" ry="2" />
<text  x="314.93" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (763 samples, 1.76%)</title><rect x="268.6" y="1637" width="20.8" height="15.0" fill="rgb(225,109,46)" rx="2" ry="2" />
<text  x="271.63" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.02%)</title><rect x="689.4" y="1829" width="0.3" height="15.0" fill="rgb(208,100,0)" rx="2" ry="2" />
<text  x="692.44" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="480.4" y="1541" width="0.4" height="15.0" fill="rgb(216,133,41)" rx="2" ry="2" />
<text  x="483.40" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1653" width="0.1" height="15.0" fill="rgb(233,92,31)" rx="2" ry="2" />
<text  x="99.30" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (736 samples, 1.70%)</title><rect x="526.8" y="1733" width="20.0" height="15.0" fill="rgb(209,117,23)" rx="2" ry="2" />
<text  x="529.82" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="480.2" y="1653" width="0.6" height="15.0" fill="rgb(235,156,38)" rx="2" ry="2" />
<text  x="483.20" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="1187.6" y="1717" width="0.1" height="15.0" fill="rgb(225,53,30)" rx="2" ry="2" />
<text  x="1190.58" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (13 samples, 0.03%)</title><rect x="318.5" y="1605" width="0.3" height="15.0" fill="rgb(251,185,4)" rx="2" ry="2" />
<text  x="321.46" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="14.1" y="1557" width="0.2" height="15.0" fill="rgb(232,176,42)" rx="2" ry="2" />
<text  x="17.08" y="1567.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="20.9" y="1573" width="0.1" height="15.0" fill="rgb(215,149,43)" rx="2" ry="2" />
<text  x="23.93" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="12.1" y="1493" width="0.2" height="15.0" fill="rgb(242,148,53)" rx="2" ry="2" />
<text  x="15.07" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="480.6" y="1445" width="0.2" height="15.0" fill="rgb(229,69,6)" rx="2" ry="2" />
<text  x="483.64" y="1455.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (126 samples, 0.29%)</title><rect x="305.3" y="1573" width="3.5" height="15.0" fill="rgb(228,48,47)" rx="2" ry="2" />
<text  x="308.35" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (290 samples, 0.67%)</title><rect x="98.3" y="1749" width="7.8" height="15.0" fill="rgb(250,92,36)" rx="2" ry="2" />
<text  x="101.26" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (125 samples, 0.29%)</title><rect x="457.3" y="1669" width="3.4" height="15.0" fill="rgb(239,174,27)" rx="2" ry="2" />
<text  x="460.30" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="512.1" y="1765" width="0.5" height="15.0" fill="rgb(223,191,13)" rx="2" ry="2" />
<text  x="515.11" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (11 samples, 0.03%)</title><rect x="467.4" y="1605" width="0.3" height="15.0" fill="rgb(220,98,38)" rx="2" ry="2" />
<text  x="470.39" y="1615.5" ></text>
</g>
<g >
<title>ntfs_inode_close (19 samples, 0.04%)</title><rect x="648.8" y="1813" width="0.5" height="15.0" fill="rgb(226,141,6)" rx="2" ry="2" />
<text  x="651.78" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1669" width="0.1" height="15.0" fill="rgb(240,9,21)" rx="2" ry="2" />
<text  x="692.50" y="1679.5" ></text>
</g>
<g >
<title>[libsystemd-shared-245.so] (5 samples, 0.01%)</title><rect x="1187.2" y="1813" width="0.1" height="15.0" fill="rgb(221,107,18)" rx="2" ry="2" />
<text  x="1190.20" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1797" width="0.1" height="15.0" fill="rgb(209,66,26)" rx="2" ry="2" />
<text  x="58.07" y="1807.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (1,156 samples, 2.66%)</title><rect x="300.7" y="1653" width="31.4" height="15.0" fill="rgb(246,75,38)" rx="2" ry="2" />
<text  x="303.67" y="1663.5" >In..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (5 samples, 0.01%)</title><rect x="471.5" y="1653" width="0.1" height="15.0" fill="rgb(234,103,51)" rx="2" ry="2" />
<text  x="474.47" y="1663.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1749" width="0.1" height="15.0" fill="rgb(228,184,21)" rx="2" ry="2" />
<text  x="24.37" y="1759.5" ></text>
</g>
<g >
<title>std::__1::__murmur2_or_cityhash&lt;unsigned long, 64ul&gt;::operator (10 samples, 0.02%)</title><rect x="116.9" y="1733" width="0.2" height="15.0" fill="rgb(247,83,12)" rx="2" ry="2" />
<text  x="119.86" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 0.07%)</title><rect x="631.0" y="1525" width="0.8" height="15.0" fill="rgb(253,10,39)" rx="2" ry="2" />
<text  x="633.99" y="1535.5" ></text>
</g>
<g >
<title>runtime.findrunnable (11 samples, 0.03%)</title><rect x="213.4" y="1717" width="0.3" height="15.0" fill="rgb(248,61,1)" rx="2" ry="2" />
<text  x="216.39" y="1727.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (7 samples, 0.02%)</title><rect x="647.5" y="1813" width="0.2" height="15.0" fill="rgb(251,3,5)" rx="2" ry="2" />
<text  x="650.50" y="1823.5" ></text>
</g>
<g >
<title>[code] (16 samples, 0.04%)</title><rect x="22.9" y="1701" width="0.5" height="15.0" fill="rgb(221,89,35)" rx="2" ry="2" />
<text  x="25.92" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (4 samples, 0.01%)</title><rect x="315.1" y="1621" width="0.1" height="15.0" fill="rgb(214,187,31)" rx="2" ry="2" />
<text  x="318.11" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="241.8" y="1653" width="0.1" height="15.0" fill="rgb(241,152,34)" rx="2" ry="2" />
<text  x="244.81" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (5 samples, 0.01%)</title><rect x="460.4" y="1621" width="0.1" height="15.0" fill="rgb(224,89,25)" rx="2" ry="2" />
<text  x="463.38" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (89 samples, 0.21%)</title><rect x="1182.8" y="1461" width="2.4" height="15.0" fill="rgb(227,123,41)" rx="2" ry="2" />
<text  x="1185.82" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222 samples, 0.51%)</title><rect x="247.5" y="1733" width="6.1" height="15.0" fill="rgb(242,227,18)" rx="2" ry="2" />
<text  x="250.52" y="1743.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__init_copy_ctor_external (10 samples, 0.02%)</title><rect x="114.7" y="1717" width="0.3" height="15.0" fill="rgb(212,142,9)" rx="2" ry="2" />
<text  x="117.71" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1187.2" y="1733" width="0.1" height="15.0" fill="rgb(250,132,1)" rx="2" ry="2" />
<text  x="1190.20" y="1743.5" ></text>
</g>
<g >
<title>__xstat64 (22 samples, 0.05%)</title><rect x="480.2" y="1701" width="0.6" height="15.0" fill="rgb(238,55,43)" rx="2" ry="2" />
<text  x="483.20" y="1711.5" ></text>
</g>
<g >
<title>[code] (6 samples, 0.01%)</title><rect x="59.8" y="1669" width="0.2" height="15.0" fill="rgb(218,31,24)" rx="2" ry="2" />
<text  x="62.83" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="689.1" y="1717" width="0.3" height="15.0" fill="rgb(246,30,52)" rx="2" ry="2" />
<text  x="692.09" y="1727.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="37" width="0.1" height="15.0" fill="rgb(214,64,21)" rx="2" ry="2" />
<text  x="61.79" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1749" width="0.2" height="15.0" fill="rgb(217,137,43)" rx="2" ry="2" />
<text  x="223.62" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (150 samples, 0.35%)</title><rect x="201.3" y="1605" width="4.1" height="15.0" fill="rgb(225,180,34)" rx="2" ry="2" />
<text  x="204.34" y="1615.5" ></text>
</g>
<g >
<title>__libc_fork (5 samples, 0.01%)</title><rect x="55.1" y="1829" width="0.1" height="15.0" fill="rgb(251,197,44)" rx="2" ry="2" />
<text  x="58.07" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="221.0" y="1797" width="0.4" height="15.0" fill="rgb(219,75,24)" rx="2" ry="2" />
<text  x="224.03" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%)</title><rect x="428.4" y="1637" width="0.1" height="15.0" fill="rgb(224,44,22)" rx="2" ry="2" />
<text  x="431.39" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (29 samples, 0.07%)</title><rect x="681.8" y="1717" width="0.8" height="15.0" fill="rgb(243,9,20)" rx="2" ry="2" />
<text  x="684.77" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="25.1" y="1781" width="0.2" height="15.0" fill="rgb(249,181,25)" rx="2" ry="2" />
<text  x="28.15" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1749" width="0.1" height="15.0" fill="rgb(205,23,47)" rx="2" ry="2" />
<text  x="216.80" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.8" y="1781" width="0.1" height="15.0" fill="rgb(245,57,6)" rx="2" ry="2" />
<text  x="17.79" y="1791.5" ></text>
</g>
<g >
<title>[libgjs.so.0.0.0] (16 samples, 0.04%)</title><rect x="226.2" y="1781" width="0.4" height="15.0" fill="rgb(240,70,0)" rx="2" ry="2" />
<text  x="229.20" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1749" width="0.2" height="15.0" fill="rgb(250,97,53)" rx="2" ry="2" />
<text  x="235.10" y="1759.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (6 samples, 0.01%)</title><rect x="161.4" y="1749" width="0.1" height="15.0" fill="rgb(207,19,54)" rx="2" ry="2" />
<text  x="164.36" y="1759.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (239 samples, 0.55%)</title><rect x="664.5" y="1829" width="6.5" height="15.0" fill="rgb(209,11,40)" rx="2" ry="2" />
<text  x="667.53" y="1839.5" ></text>
</g>
<g >
<title>ntfs_attr_get_search_ctx (7 samples, 0.02%)</title><rect x="643.6" y="1813" width="0.1" height="15.0" fill="rgb(239,53,51)" rx="2" ry="2" />
<text  x="646.56" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="687.3" y="1397" width="0.2" height="15.0" fill="rgb(254,127,4)" rx="2" ry="2" />
<text  x="690.32" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (86 samples, 0.20%)</title><rect x="373.0" y="1653" width="2.3" height="15.0" fill="rgb(254,155,33)" rx="2" ry="2" />
<text  x="375.99" y="1663.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (17 samples, 0.04%)</title><rect x="229.1" y="1829" width="0.4" height="15.0" fill="rgb(254,192,50)" rx="2" ry="2" />
<text  x="232.06" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="224.6" y="1765" width="0.4" height="15.0" fill="rgb(248,142,20)" rx="2" ry="2" />
<text  x="227.62" y="1775.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1797" width="0.1" height="15.0" fill="rgb(221,125,47)" rx="2" ry="2" />
<text  x="23.53" y="1807.5" ></text>
</g>
<g >
<title>[msedge] (11 samples, 0.03%)</title><rect x="20.9" y="1637" width="0.3" height="15.0" fill="rgb(215,37,26)" rx="2" ry="2" />
<text  x="23.91" y="1647.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="16.3" y="1525" width="0.3" height="15.0" fill="rgb(225,215,17)" rx="2" ry="2" />
<text  x="19.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (9 samples, 0.02%)</title><rect x="494.5" y="1573" width="0.3" height="15.0" fill="rgb(245,140,21)" rx="2" ry="2" />
<text  x="497.51" y="1583.5" ></text>
</g>
<g >
<title>ntfs_inode_update_times (6 samples, 0.01%)</title><rect x="649.4" y="1813" width="0.1" height="15.0" fill="rgb(216,154,34)" rx="2" ry="2" />
<text  x="652.38" y="1823.5" ></text>
</g>
<g >
<title>[code] (24 samples, 0.06%)</title><rect x="58.2" y="949" width="0.7" height="15.0" fill="rgb(234,218,31)" rx="2" ry="2" />
<text  x="61.25" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (508 samples, 1.17%)</title><rect x="1171.4" y="1557" width="13.8" height="15.0" fill="rgb(225,143,29)" rx="2" ry="2" />
<text  x="1174.42" y="1567.5" ></text>
</g>
<g >
<title>__GI___libc_open (7 samples, 0.02%)</title><rect x="1187.6" y="1813" width="0.2" height="15.0" fill="rgb(239,117,5)" rx="2" ry="2" />
<text  x="1190.58" y="1823.5" ></text>
</g>
<g >
<title>[libgjs.so.0.0.0] (28 samples, 0.06%)</title><rect x="225.9" y="1813" width="0.7" height="15.0" fill="rgb(241,94,47)" rx="2" ry="2" />
<text  x="228.87" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="229.1" y="1765" width="0.4" height="15.0" fill="rgb(222,108,12)" rx="2" ry="2" />
<text  x="232.08" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="233.1" y="1813" width="0.1" height="15.0" fill="rgb(210,165,42)" rx="2" ry="2" />
<text  x="236.08" y="1823.5" ></text>
</g>
<g >
<title>[code] (9 samples, 0.02%)</title><rect x="117.2" y="1717" width="0.2" height="15.0" fill="rgb(207,205,3)" rx="2" ry="2" />
<text  x="120.16" y="1727.5" ></text>
</g>
<g >
<title>v8::Function::Call (10 samples, 0.02%)</title><rect x="59.1" y="1493" width="0.3" height="15.0" fill="rgb(239,15,12)" rx="2" ry="2" />
<text  x="62.12" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (184 samples, 0.42%)</title><rect x="517.3" y="1813" width="5.0" height="15.0" fill="rgb(235,165,20)" rx="2" ry="2" />
<text  x="520.30" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (16 samples, 0.04%)</title><rect x="458.1" y="1621" width="0.4" height="15.0" fill="rgb(214,189,23)" rx="2" ry="2" />
<text  x="461.09" y="1631.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (7 samples, 0.02%)</title><rect x="17.6" y="1701" width="0.2" height="15.0" fill="rgb(208,119,24)" rx="2" ry="2" />
<text  x="20.64" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1701" width="0.1" height="15.0" fill="rgb(221,87,37)" rx="2" ry="2" />
<text  x="13.11" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (4 samples, 0.01%)</title><rect x="494.8" y="1605" width="0.1" height="15.0" fill="rgb(229,44,40)" rx="2" ry="2" />
<text  x="497.76" y="1615.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1749" width="0.2" height="15.0" fill="rgb(211,100,48)" rx="2" ry="2" />
<text  x="26.79" y="1759.5" ></text>
</g>
<g >
<title>[code] (9 samples, 0.02%)</title><rect x="58.7" y="789" width="0.2" height="15.0" fill="rgb(214,191,1)" rx="2" ry="2" />
<text  x="61.66" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1589" width="0.1" height="15.0" fill="rgb(251,50,29)" rx="2" ry="2" />
<text  x="23.25" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="243.6" y="1717" width="0.4" height="15.0" fill="rgb(205,96,27)" rx="2" ry="2" />
<text  x="246.63" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (15 samples, 0.03%)</title><rect x="467.3" y="1637" width="0.4" height="15.0" fill="rgb(239,31,2)" rx="2" ry="2" />
<text  x="470.29" y="1647.5" ></text>
</g>
<g >
<title>BPlusTreePage::IsLeafPage (8 samples, 0.02%)</title><rect x="343.6" y="1685" width="0.3" height="15.0" fill="rgb(223,206,40)" rx="2" ry="2" />
<text  x="346.64" y="1695.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (10 samples, 0.02%)</title><rect x="225.9" y="1781" width="0.3" height="15.0" fill="rgb(238,41,46)" rx="2" ry="2" />
<text  x="228.90" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1733" width="0.1" height="15.0" fill="rgb(246,224,5)" rx="2" ry="2" />
<text  x="224.90" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1781" width="0.4" height="15.0" fill="rgb(206,157,38)" rx="2" ry="2" />
<text  x="694.13" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="683.3" y="1733" width="0.3" height="15.0" fill="rgb(224,124,31)" rx="2" ry="2" />
<text  x="686.27" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (285 samples, 0.66%)</title><rect x="319.0" y="1621" width="7.8" height="15.0" fill="rgb(217,45,36)" rx="2" ry="2" />
<text  x="322.03" y="1631.5" ></text>
</g>
<g >
<title>[perf-6346.map] (7 samples, 0.02%)</title><rect x="10.1" y="1797" width="0.1" height="15.0" fill="rgb(212,184,6)" rx="2" ry="2" />
<text  x="13.05" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1589" width="0.3" height="15.0" fill="rgb(230,215,31)" rx="2" ry="2" />
<text  x="14.99" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (8 samples, 0.02%)</title><rect x="295.7" y="1637" width="0.2" height="15.0" fill="rgb(254,83,45)" rx="2" ry="2" />
<text  x="298.69" y="1647.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (65 samples, 0.15%)</title><rect x="484.2" y="1733" width="1.8" height="15.0" fill="rgb(239,4,20)" rx="2" ry="2" />
<text  x="487.20" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (37 samples, 0.09%)</title><rect x="398.8" y="1605" width="1.0" height="15.0" fill="rgb(236,167,43)" rx="2" ry="2" />
<text  x="401.80" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (871 samples, 2.01%)</title><rect x="608.2" y="1653" width="23.7" height="15.0" fill="rgb(224,114,54)" rx="2" ry="2" />
<text  x="611.17" y="1663.5" >[..</text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="12.4" y="1669" width="0.7" height="15.0" fill="rgb(234,124,14)" rx="2" ry="2" />
<text  x="15.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (29 samples, 0.07%)</title><rect x="374.1" y="1637" width="0.8" height="15.0" fill="rgb(243,170,5)" rx="2" ry="2" />
<text  x="377.10" y="1647.5" ></text>
</g>
<g >
<title>[perf-133463.map] (11 samples, 0.03%)</title><rect x="682.2" y="1413" width="0.3" height="15.0" fill="rgb(254,129,26)" rx="2" ry="2" />
<text  x="685.18" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.03%)</title><rect x="232.1" y="1829" width="0.3" height="15.0" fill="rgb(254,107,22)" rx="2" ry="2" />
<text  x="235.10" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.0" y="1717" width="0.1" height="15.0" fill="rgb(246,213,26)" rx="2" ry="2" />
<text  x="22.98" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (43 samples, 0.10%)</title><rect x="368.8" y="1637" width="1.1" height="15.0" fill="rgb(244,186,47)" rx="2" ry="2" />
<text  x="371.77" y="1647.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.01%)</title><rect x="220.1" y="1797" width="0.2" height="15.0" fill="rgb(211,50,8)" rx="2" ry="2" />
<text  x="223.11" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (16 samples, 0.04%)</title><rect x="422.8" y="1621" width="0.4" height="15.0" fill="rgb(238,102,19)" rx="2" ry="2" />
<text  x="425.79" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (5 samples, 0.01%)</title><rect x="446.1" y="1605" width="0.2" height="15.0" fill="rgb(214,160,4)" rx="2" ry="2" />
<text  x="449.13" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (16 samples, 0.04%)</title><rect x="413.8" y="1621" width="0.4" height="15.0" fill="rgb(232,103,24)" rx="2" ry="2" />
<text  x="416.81" y="1631.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (18 samples, 0.04%)</title><rect x="482.5" y="1733" width="0.5" height="15.0" fill="rgb(218,112,45)" rx="2" ry="2" />
<text  x="485.46" y="1743.5" ></text>
</g>
<g >
<title>[[vdso]] (12 samples, 0.03%)</title><rect x="678.5" y="1813" width="0.4" height="15.0" fill="rgb(228,144,18)" rx="2" ry="2" />
<text  x="681.54" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,180 samples, 2.72%)</title><rect x="560.7" y="1717" width="32.1" height="15.0" fill="rgb(208,215,5)" rx="2" ry="2" />
<text  x="563.68" y="1727.5" >[[..</text>
</g>
<g >
<title>BlockHeader::GetBlockSize (4 samples, 0.01%)</title><rect x="333.5" y="1637" width="0.1" height="15.0" fill="rgb(205,178,0)" rx="2" ry="2" />
<text  x="336.50" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1589" width="0.1" height="15.0" fill="rgb(206,10,42)" rx="2" ry="2" />
<text  x="99.30" y="1599.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.03%)</title><rect x="393.3" y="1557" width="0.3" height="15.0" fill="rgb(242,224,39)" rx="2" ry="2" />
<text  x="396.33" y="1567.5" ></text>
</g>
<g >
<title>__pthread_rwlock_rdlock (6 samples, 0.01%)</title><rect x="521.7" y="1797" width="0.2" height="15.0" fill="rgb(233,211,1)" rx="2" ry="2" />
<text  x="524.74" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (11 samples, 0.03%)</title><rect x="468.3" y="1653" width="0.3" height="15.0" fill="rgb(226,164,29)" rx="2" ry="2" />
<text  x="471.35" y="1663.5" ></text>
</g>
<g >
<title>DiskManager::WritePage (47 samples, 0.11%)</title><rect x="360.2" y="1669" width="1.3" height="15.0" fill="rgb(221,160,19)" rx="2" ry="2" />
<text  x="363.23" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (4 samples, 0.01%)</title><rect x="455.3" y="1653" width="0.1" height="15.0" fill="rgb(254,169,14)" rx="2" ry="2" />
<text  x="458.29" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,250 samples, 2.88%)</title><rect x="123.9" y="1717" width="34.0" height="15.0" fill="rgb(234,41,54)" rx="2" ry="2" />
<text  x="126.85" y="1727.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="244.3" y="1685" width="0.4" height="15.0" fill="rgb(237,21,37)" rx="2" ry="2" />
<text  x="247.26" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1749" width="0.2" height="15.0" fill="rgb(246,126,37)" rx="2" ry="2" />
<text  x="217.69" y="1759.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (32 samples, 0.07%)</title><rect x="494.0" y="1653" width="0.9" height="15.0" fill="rgb(211,197,21)" rx="2" ry="2" />
<text  x="497.05" y="1663.5" ></text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="498.6" y="1653" width="0.2" height="15.0" fill="rgb(243,94,36)" rx="2" ry="2" />
<text  x="501.65" y="1663.5" ></text>
</g>
<g >
<title>Field::~Field (29 samples, 0.07%)</title><rect x="483.1" y="1733" width="0.8" height="15.0" fill="rgb(214,95,44)" rx="2" ry="2" />
<text  x="486.14" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1781" width="0.2" height="15.0" fill="rgb(208,32,50)" rx="2" ry="2" />
<text  x="693.91" y="1791.5" ></text>
</g>
<g >
<title>kworker/u32:2-p (4 samples, 0.01%)</title><rect x="245.2" y="1845" width="0.1" height="15.0" fill="rgb(219,145,32)" rx="2" ry="2" />
<text  x="248.21" y="1855.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (4 samples, 0.01%)</title><rect x="300.5" y="1637" width="0.1" height="15.0" fill="rgb(237,86,3)" rx="2" ry="2" />
<text  x="303.51" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1733" width="0.1" height="15.0" fill="rgb(241,165,3)" rx="2" ry="2" />
<text  x="17.60" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="221.1" y="1733" width="0.3" height="15.0" fill="rgb(217,99,46)" rx="2" ry="2" />
<text  x="224.09" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (200 samples, 0.46%)</title><rect x="541.4" y="1557" width="5.4" height="15.0" fill="rgb(245,140,48)" rx="2" ry="2" />
<text  x="544.40" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="217.8" y="1797" width="0.1" height="15.0" fill="rgb(227,96,51)" rx="2" ry="2" />
<text  x="220.80" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1685" width="0.2" height="15.0" fill="rgb(205,209,12)" rx="2" ry="2" />
<text  x="24.75" y="1695.5" ></text>
</g>
<g >
<title>TablePage::GetTupleSize (4 samples, 0.01%)</title><rect x="503.6" y="1733" width="0.1" height="15.0" fill="rgb(218,106,27)" rx="2" ry="2" />
<text  x="506.60" y="1743.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="59.8" y="1701" width="0.2" height="15.0" fill="rgb(248,214,45)" rx="2" ry="2" />
<text  x="62.77" y="1711.5" ></text>
</g>
<g >
<title>ntfs_enter_cache (7 samples, 0.02%)</title><rect x="556.1" y="1701" width="0.2" height="15.0" fill="rgb(247,94,47)" rx="2" ry="2" />
<text  x="559.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="689.9" y="1829" width="0.1" height="15.0" fill="rgb(230,202,17)" rx="2" ry="2" />
<text  x="692.90" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.03%)</title><rect x="688.2" y="1829" width="0.3" height="15.0" fill="rgb(243,214,48)" rx="2" ry="2" />
<text  x="691.19" y="1839.5" ></text>
</g>
<g >
<title>[code] (30 samples, 0.07%)</title><rect x="15.8" y="1637" width="0.8" height="15.0" fill="rgb(242,77,44)" rx="2" ry="2" />
<text  x="18.82" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="683.3" y="1749" width="0.3" height="15.0" fill="rgb(233,177,22)" rx="2" ry="2" />
<text  x="686.27" y="1759.5" ></text>
</g>
<g >
<title>gnome-shell (172 samples, 0.40%)</title><rect x="225.2" y="1845" width="4.7" height="15.0" fill="rgb(212,197,0)" rx="2" ry="2" />
<text  x="228.22" y="1855.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (35 samples, 0.08%)</title><rect x="479.3" y="1733" width="0.9" height="15.0" fill="rgb(231,184,49)" rx="2" ry="2" />
<text  x="482.25" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (9 samples, 0.02%)</title><rect x="390.9" y="1637" width="0.3" height="15.0" fill="rgb(232,206,25)" rx="2" ry="2" />
<text  x="393.94" y="1647.5" ></text>
</g>
<g >
<title>kworker/9:1-eve (25 samples, 0.06%)</title><rect x="244.0" y="1845" width="0.7" height="15.0" fill="rgb(233,141,30)" rx="2" ry="2" />
<text  x="246.99" y="1855.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (21 samples, 0.05%)</title><rect x="327.1" y="1605" width="0.6" height="15.0" fill="rgb(215,117,28)" rx="2" ry="2" />
<text  x="330.11" y="1615.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (60 samples, 0.14%)</title><rect x="323.1" y="1573" width="1.6" height="15.0" fill="rgb(214,103,2)" rx="2" ry="2" />
<text  x="326.11" y="1583.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1813" width="1.3" height="15.0" fill="rgb(223,5,52)" rx="2" ry="2" />
<text  x="14.12" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1637" width="0.1" height="15.0" fill="rgb(251,26,28)" rx="2" ry="2" />
<text  x="13.46" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (6 samples, 0.01%)</title><rect x="501.9" y="1605" width="0.1" height="15.0" fill="rgb(234,152,43)" rx="2" ry="2" />
<text  x="504.85" y="1615.5" ></text>
</g>
<g >
<title>g_variant_type_get_string_length (4 samples, 0.01%)</title><rect x="222.2" y="1813" width="0.1" height="15.0" fill="rgb(242,220,4)" rx="2" ry="2" />
<text  x="225.23" y="1823.5" ></text>
</g>
<g >
<title>_int_free (11 samples, 0.03%)</title><rect x="329.0" y="1557" width="0.3" height="15.0" fill="rgb(235,140,26)" rx="2" ry="2" />
<text  x="332.04" y="1567.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (8 samples, 0.02%)</title><rect x="490.1" y="1685" width="0.2" height="15.0" fill="rgb(248,194,12)" rx="2" ry="2" />
<text  x="493.11" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (6 samples, 0.01%)</title><rect x="426.7" y="1653" width="0.1" height="15.0" fill="rgb(240,101,12)" rx="2" ry="2" />
<text  x="429.68" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (55 samples, 0.13%)</title><rect x="684.1" y="1717" width="1.5" height="15.0" fill="rgb(212,127,47)" rx="2" ry="2" />
<text  x="687.06" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="373.9" y="1589" width="0.1" height="15.0" fill="rgb(206,143,44)" rx="2" ry="2" />
<text  x="376.89" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="96.3" y="1557" width="0.1" height="15.0" fill="rgb(212,115,33)" rx="2" ry="2" />
<text  x="99.33" y="1567.5" ></text>
</g>
<g >
<title>epoll_wait (4 samples, 0.01%)</title><rect x="217.8" y="1813" width="0.1" height="15.0" fill="rgb(207,179,36)" rx="2" ry="2" />
<text  x="220.80" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1621" width="0.2" height="15.0" fill="rgb(209,202,32)" rx="2" ry="2" />
<text  x="57.80" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (359 samples, 0.83%)</title><rect x="195.7" y="1669" width="9.7" height="15.0" fill="rgb(241,78,6)" rx="2" ry="2" />
<text  x="198.66" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (140 samples, 0.32%)</title><rect x="169.3" y="1653" width="3.8" height="15.0" fill="rgb(229,130,10)" rx="2" ry="2" />
<text  x="172.33" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,292 samples, 37.55%)</title><rect x="708.1" y="1765" width="443.1" height="15.0" fill="rgb(212,14,52)" rx="2" ry="2" />
<text  x="711.10" y="1775.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (6 samples, 0.01%)</title><rect x="399.2" y="1573" width="0.2" height="15.0" fill="rgb(231,60,16)" rx="2" ry="2" />
<text  x="402.21" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1717" width="0.1" height="15.0" fill="rgb(240,151,47)" rx="2" ry="2" />
<text  x="13.11" y="1727.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4 samples, 0.01%)</title><rect x="434.1" y="1621" width="0.1" height="15.0" fill="rgb(227,16,22)" rx="2" ry="2" />
<text  x="437.08" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (80 samples, 0.18%)</title><rect x="391.9" y="1621" width="2.2" height="15.0" fill="rgb(253,122,7)" rx="2" ry="2" />
<text  x="394.92" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="215.2" y="1669" width="0.2" height="15.0" fill="rgb(236,27,4)" rx="2" ry="2" />
<text  x="218.21" y="1679.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (18 samples, 0.04%)</title><rect x="213.2" y="1797" width="0.5" height="15.0" fill="rgb(241,13,0)" rx="2" ry="2" />
<text  x="216.23" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1765" width="0.2" height="15.0" fill="rgb(222,224,5)" rx="2" ry="2" />
<text  x="235.10" y="1775.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Field&gt; &gt;::construct&lt;Field, Field const&amp;&gt; (15 samples, 0.03%)</title><rect x="506.6" y="1733" width="0.4" height="15.0" fill="rgb(206,229,30)" rx="2" ry="2" />
<text  x="509.56" y="1743.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="165" width="0.1" height="15.0" fill="rgb(246,131,35)" rx="2" ry="2" />
<text  x="61.79" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (13 samples, 0.03%)</title><rect x="373.4" y="1637" width="0.3" height="15.0" fill="rgb(228,196,31)" rx="2" ry="2" />
<text  x="376.37" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (74 samples, 0.17%)</title><rect x="429.8" y="1637" width="2.0" height="15.0" fill="rgb(223,174,43)" rx="2" ry="2" />
<text  x="432.78" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.02%)</title><rect x="484.8" y="1621" width="0.2" height="15.0" fill="rgb(212,153,29)" rx="2" ry="2" />
<text  x="487.77" y="1631.5" ></text>
</g>
<g >
<title>ntfs_mapping_pairs_build (10 samples, 0.02%)</title><rect x="649.8" y="1813" width="0.3" height="15.0" fill="rgb(229,76,39)" rx="2" ry="2" />
<text  x="652.81" y="1823.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1669" width="0.3" height="15.0" fill="rgb(224,184,49)" rx="2" ry="2" />
<text  x="229.28" y="1679.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::GetFirstChunkFor (5 samples, 0.01%)</title><rect x="313.5" y="1605" width="0.1" height="15.0" fill="rgb(218,3,7)" rx="2" ry="2" />
<text  x="316.48" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (456 samples, 1.05%)</title><rect x="1172.8" y="1525" width="12.4" height="15.0" fill="rgb(224,71,49)" rx="2" ry="2" />
<text  x="1175.84" y="1535.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.19.11] (9 samples, 0.02%)</title><rect x="216.8" y="1797" width="0.2" height="15.0" fill="rgb(233,220,26)" rx="2" ry="2" />
<text  x="219.76" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="235.7" y="1733" width="0.3" height="15.0" fill="rgb(245,127,2)" rx="2" ry="2" />
<text  x="238.75" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53 samples, 0.12%)</title><rect x="630.4" y="1541" width="1.4" height="15.0" fill="rgb(243,103,19)" rx="2" ry="2" />
<text  x="633.39" y="1551.5" ></text>
</g>
<g >
<title>[code] (71 samples, 0.16%)</title><rect x="57.0" y="1365" width="1.9" height="15.0" fill="rgb(251,122,53)" rx="2" ry="2" />
<text  x="60.00" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (14 samples, 0.03%)</title><rect x="14.9" y="1829" width="0.4" height="15.0" fill="rgb(247,156,2)" rx="2" ry="2" />
<text  x="17.92" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1813" width="0.2" height="15.0" fill="rgb(228,105,39)" rx="2" ry="2" />
<text  x="57.80" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1605" width="0.1" height="15.0" fill="rgb(251,138,25)" rx="2" ry="2" />
<text  x="99.30" y="1615.5" ></text>
</g>
<g >
<title>epoll_wait (12 samples, 0.03%)</title><rect x="60.9" y="1765" width="0.3" height="15.0" fill="rgb(234,201,44)" rx="2" ry="2" />
<text  x="63.89" y="1775.5" ></text>
</g>
<g >
<title>Column::GetType (6 samples, 0.01%)</title><rect x="303.6" y="1621" width="0.2" height="15.0" fill="rgb(218,148,50)" rx="2" ry="2" />
<text  x="306.61" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (567 samples, 1.31%)</title><rect x="1169.8" y="1589" width="15.4" height="15.0" fill="rgb(247,19,19)" rx="2" ry="2" />
<text  x="1172.82" y="1599.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (17 samples, 0.04%)</title><rect x="675.2" y="1829" width="0.5" height="15.0" fill="rgb(222,142,41)" rx="2" ry="2" />
<text  x="678.19" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="220.6" y="1733" width="0.2" height="15.0" fill="rgb(245,100,19)" rx="2" ry="2" />
<text  x="223.62" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (18 samples, 0.04%)</title><rect x="682.0" y="1525" width="0.5" height="15.0" fill="rgb(215,57,53)" rx="2" ry="2" />
<text  x="685.02" y="1535.5" ></text>
</g>
<g >
<title>ntfs_attr_pwrite (45 samples, 0.10%)</title><rect x="645.9" y="1813" width="1.2" height="15.0" fill="rgb(251,201,16)" rx="2" ry="2" />
<text  x="648.92" y="1823.5" ></text>
</g>
<g >
<title>Field::~Field (154 samples, 0.35%)</title><rect x="333.8" y="1637" width="4.2" height="15.0" fill="rgb(235,106,19)" rx="2" ry="2" />
<text  x="336.77" y="1647.5" ></text>
</g>
<g >
<title>__GI___libc_open (8 samples, 0.02%)</title><rect x="26.0" y="1813" width="0.3" height="15.0" fill="rgb(254,149,27)" rx="2" ry="2" />
<text  x="29.05" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="22.5" y="1717" width="0.2" height="15.0" fill="rgb(210,55,51)" rx="2" ry="2" />
<text  x="25.48" y="1727.5" ></text>
</g>
<g >
<title>ntfs_inode_update_times (4 samples, 0.01%)</title><rect x="676.8" y="1829" width="0.1" height="15.0" fill="rgb(221,37,10)" rx="2" ry="2" />
<text  x="679.77" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1685" width="0.1" height="15.0" fill="rgb(232,119,17)" rx="2" ry="2" />
<text  x="23.25" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (8 samples, 0.02%)</title><rect x="295.4" y="1621" width="0.2" height="15.0" fill="rgb(229,163,46)" rx="2" ry="2" />
<text  x="298.36" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (10 samples, 0.02%)</title><rect x="482.6" y="1701" width="0.3" height="15.0" fill="rgb(254,58,41)" rx="2" ry="2" />
<text  x="485.60" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="690.9" y="1749" width="0.2" height="15.0" fill="rgb(205,194,11)" rx="2" ry="2" />
<text  x="693.91" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="683.3" y="1717" width="0.3" height="15.0" fill="rgb(223,211,5)" rx="2" ry="2" />
<text  x="686.35" y="1727.5" ></text>
</g>
<g >
<title>journal_file_move_to_object (6 samples, 0.01%)</title><rect x="1187.4" y="1797" width="0.2" height="15.0" fill="rgb(245,209,54)" rx="2" ry="2" />
<text  x="1190.42" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="236.1" y="1797" width="0.2" height="15.0" fill="rgb(247,31,12)" rx="2" ry="2" />
<text  x="239.07" y="1807.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, int&gt;::pair&lt;int const&amp;&gt; (5 samples, 0.01%)</title><rect x="374.6" y="1589" width="0.1" height="15.0" fill="rgb(217,123,0)" rx="2" ry="2" />
<text  x="377.59" y="1599.5" ></text>
</g>
<g >
<title>IndexInfo::GetIndexKeySchema (5 samples, 0.01%)</title><rect x="473.2" y="1765" width="0.1" height="15.0" fill="rgb(233,208,4)" rx="2" ry="2" />
<text  x="476.19" y="1775.5" ></text>
</g>
<g >
<title>Type::GetTypeSize (4 samples, 0.01%)</title><rect x="489.8" y="1669" width="0.1" height="15.0" fill="rgb(228,182,48)" rx="2" ry="2" />
<text  x="492.81" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (11 samples, 0.03%)</title><rect x="471.7" y="1685" width="0.3" height="15.0" fill="rgb(212,38,16)" rx="2" ry="2" />
<text  x="474.75" y="1695.5" ></text>
</g>
<g >
<title>[code] (16 samples, 0.04%)</title><rect x="58.5" y="885" width="0.4" height="15.0" fill="rgb(245,108,24)" rx="2" ry="2" />
<text  x="61.47" y="895.5" ></text>
</g>
<g >
<title>[code] (21 samples, 0.05%)</title><rect x="11.3" y="1637" width="0.6" height="15.0" fill="rgb(233,118,26)" rx="2" ry="2" />
<text  x="14.33" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="235.2" y="1813" width="0.2" height="15.0" fill="rgb(236,183,47)" rx="2" ry="2" />
<text  x="238.20" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.01%)</title><rect x="509.8" y="1749" width="0.1" height="15.0" fill="rgb(229,221,34)" rx="2" ry="2" />
<text  x="512.77" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="231.7" y="1749" width="0.2" height="15.0" fill="rgb(235,156,15)" rx="2" ry="2" />
<text  x="234.69" y="1759.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (76 samples, 0.18%)</title><rect x="493.6" y="1701" width="2.1" height="15.0" fill="rgb(234,187,32)" rx="2" ry="2" />
<text  x="496.64" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="20.0" y="1701" width="0.1" height="15.0" fill="rgb(205,180,4)" rx="2" ry="2" />
<text  x="23.01" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="222.7" y="1717" width="0.3" height="15.0" fill="rgb(210,94,27)" rx="2" ry="2" />
<text  x="225.75" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="231.1" y="1765" width="0.1" height="15.0" fill="rgb(221,184,17)" rx="2" ry="2" />
<text  x="234.10" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (20 samples, 0.05%)</title><rect x="376.0" y="1621" width="0.6" height="15.0" fill="rgb(221,180,1)" rx="2" ry="2" />
<text  x="379.04" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (7 samples, 0.02%)</title><rect x="345.7" y="1541" width="0.1" height="15.0" fill="rgb(225,8,12)" rx="2" ry="2" />
<text  x="348.65" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1797" width="0.1" height="15.0" fill="rgb(236,32,1)" rx="2" ry="2" />
<text  x="233.22" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.01%)</title><rect x="510.1" y="1733" width="0.1" height="15.0" fill="rgb(247,38,34)" rx="2" ry="2" />
<text  x="513.07" y="1743.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (8 samples, 0.02%)</title><rect x="314.6" y="1621" width="0.2" height="15.0" fill="rgb(243,71,50)" rx="2" ry="2" />
<text  x="317.57" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (4 samples, 0.01%)</title><rect x="502.3" y="1637" width="0.1" height="15.0" fill="rgb(254,222,43)" rx="2" ry="2" />
<text  x="505.32" y="1647.5" ></text>
</g>
<g >
<title>[code] (161 samples, 0.37%)</title><rect x="55.2" y="1669" width="4.4" height="15.0" fill="rgb(208,106,32)" rx="2" ry="2" />
<text  x="58.23" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="231.7" y="1701" width="0.2" height="15.0" fill="rgb(242,54,50)" rx="2" ry="2" />
<text  x="234.72" y="1711.5" ></text>
</g>
<g >
<title>rs:main_Q:Reg (11 samples, 0.03%)</title><rect x="689.4" y="1845" width="0.3" height="15.0" fill="rgb(240,85,53)" rx="2" ry="2" />
<text  x="692.41" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="241.9" y="1813" width="0.3" height="15.0" fill="rgb(220,36,45)" rx="2" ry="2" />
<text  x="244.95" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1685" width="0.2" height="15.0" fill="rgb(232,58,1)" rx="2" ry="2" />
<text  x="691.25" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (13 samples, 0.03%)</title><rect x="494.4" y="1605" width="0.4" height="15.0" fill="rgb(250,133,21)" rx="2" ry="2" />
<text  x="497.40" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="10.1" y="1653" width="0.1" height="15.0" fill="rgb(208,227,30)" rx="2" ry="2" />
<text  x="13.14" y="1663.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1781" width="4.4" height="15.0" fill="rgb(225,7,49)" rx="2" ry="2" />
<text  x="58.23" y="1791.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="69" width="0.1" height="15.0" fill="rgb(229,197,33)" rx="2" ry="2" />
<text  x="61.79" y="79.5" ></text>
</g>
<g >
<title>expressvpnd (9 samples, 0.02%)</title><rect x="218.1" y="1845" width="0.3" height="15.0" fill="rgb(206,53,17)" rx="2" ry="2" />
<text  x="221.12" y="1855.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (11 samples, 0.03%)</title><rect x="500.5" y="1653" width="0.3" height="15.0" fill="rgb(213,126,17)" rx="2" ry="2" />
<text  x="503.49" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1605" width="0.3" height="15.0" fill="rgb(227,57,51)" rx="2" ry="2" />
<text  x="14.99" y="1615.5" ></text>
</g>
<g >
<title>Row::Row (4 samples, 0.01%)</title><rect x="442.9" y="1701" width="0.1" height="15.0" fill="rgb(230,179,29)" rx="2" ry="2" />
<text  x="445.92" y="1711.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1701" width="0.2" height="15.0" fill="rgb(213,95,11)" rx="2" ry="2" />
<text  x="24.48" y="1711.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (72 samples, 0.17%)</title><rect x="440.5" y="1669" width="2.0" height="15.0" fill="rgb(215,222,8)" rx="2" ry="2" />
<text  x="443.55" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 0.04%)</title><rect x="243.6" y="1749" width="0.4" height="15.0" fill="rgb(234,18,32)" rx="2" ry="2" />
<text  x="246.55" y="1759.5" ></text>
</g>
<g >
<title>Schema::GetColumn (4 samples, 0.01%)</title><rect x="510.5" y="1781" width="0.1" height="15.0" fill="rgb(215,137,5)" rx="2" ry="2" />
<text  x="513.53" y="1791.5" ></text>
</g>
<g >
<title>TypeChar::CompareLessThan (39 samples, 0.09%)</title><rect x="448.8" y="1685" width="1.1" height="15.0" fill="rgb(234,63,9)" rx="2" ry="2" />
<text  x="451.79" y="1695.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (10 samples, 0.02%)</title><rect x="486.7" y="1701" width="0.3" height="15.0" fill="rgb(217,147,27)" rx="2" ry="2" />
<text  x="489.68" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (11 samples, 0.03%)</title><rect x="446.0" y="1621" width="0.3" height="15.0" fill="rgb(237,222,13)" rx="2" ry="2" />
<text  x="448.99" y="1631.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="26.9" y="1717" width="0.2" height="15.0" fill="rgb(212,81,24)" rx="2" ry="2" />
<text  x="29.94" y="1727.5" ></text>
</g>
<g >
<title>[perf-3893.map] (4 samples, 0.01%)</title><rect x="225.9" y="1701" width="0.1" height="15.0" fill="rgb(253,66,16)" rx="2" ry="2" />
<text  x="228.90" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="54.6" y="1733" width="0.2" height="15.0" fill="rgb(210,57,27)" rx="2" ry="2" />
<text  x="57.63" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="230.9" y="1797" width="0.1" height="15.0" fill="rgb(227,177,37)" rx="2" ry="2" />
<text  x="233.85" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,586 samples, 38.23%)</title><rect x="700.1" y="1781" width="451.1" height="15.0" fill="rgb(250,3,30)" rx="2" ry="2" />
<text  x="703.10" y="1791.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>Row::GetField (5 samples, 0.01%)</title><rect x="437.5" y="1685" width="0.1" height="15.0" fill="rgb(239,150,48)" rx="2" ry="2" />
<text  x="440.48" y="1695.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7 samples, 0.02%)</title><rect x="231.7" y="1813" width="0.2" height="15.0" fill="rgb(237,13,50)" rx="2" ry="2" />
<text  x="234.69" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1733" width="0.2" height="15.0" fill="rgb(207,74,31)" rx="2" ry="2" />
<text  x="13.44" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (200 samples, 0.46%)</title><rect x="248.1" y="1685" width="5.5" height="15.0" fill="rgb(251,83,19)" rx="2" ry="2" />
<text  x="251.12" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="687.4" y="1365" width="0.1" height="15.0" fill="rgb(235,20,12)" rx="2" ry="2" />
<text  x="690.37" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (40 samples, 0.09%)</title><rect x="471.2" y="1717" width="1.1" height="15.0" fill="rgb(231,220,53)" rx="2" ry="2" />
<text  x="474.23" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="219.6" y="1717" width="0.3" height="15.0" fill="rgb(248,145,43)" rx="2" ry="2" />
<text  x="222.64" y="1727.5" ></text>
</g>
<g >
<title>ib_clone_gtid (9 samples, 0.02%)</title><rect x="230.8" y="1845" width="0.2" height="15.0" fill="rgb(211,49,34)" rx="2" ry="2" />
<text  x="233.80" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="238.6" y="1685" width="0.2" height="15.0" fill="rgb(220,171,47)" rx="2" ry="2" />
<text  x="241.60" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (23 samples, 0.05%)</title><rect x="444.5" y="1653" width="0.6" height="15.0" fill="rgb(210,118,1)" rx="2" ry="2" />
<text  x="447.47" y="1663.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1765" width="4.4" height="15.0" fill="rgb(207,175,32)" rx="2" ry="2" />
<text  x="58.23" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059 samples, 2.44%)</title><rect x="260.6" y="1685" width="28.8" height="15.0" fill="rgb(243,81,10)" rx="2" ry="2" />
<text  x="263.58" y="1695.5" >[[..</text>
</g>
<g >
<title>runtime.stealWork (4 samples, 0.01%)</title><rect x="213.5" y="1701" width="0.1" height="15.0" fill="rgb(214,43,12)" rx="2" ry="2" />
<text  x="216.53" y="1711.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (11 samples, 0.03%)</title><rect x="253.8" y="1765" width="0.3" height="15.0" fill="rgb(220,72,24)" rx="2" ry="2" />
<text  x="256.83" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1797" width="0.2" height="15.0" fill="rgb(254,0,12)" rx="2" ry="2" />
<text  x="217.69" y="1807.5" ></text>
</g>
<g >
<title>start_thread (14 samples, 0.03%)</title><rect x="17.5" y="1829" width="0.4" height="15.0" fill="rgb(214,144,23)" rx="2" ry="2" />
<text  x="20.48" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 0.08%)</title><rect x="211.2" y="1717" width="1.0" height="15.0" fill="rgb(211,188,0)" rx="2" ry="2" />
<text  x="214.21" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="369.1" y="1589" width="0.2" height="15.0" fill="rgb(225,161,16)" rx="2" ry="2" />
<text  x="372.10" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1797" width="0.1" height="15.0" fill="rgb(212,222,8)" rx="2" ry="2" />
<text  x="27.61" y="1807.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (10 samples, 0.02%)</title><rect x="106.9" y="1781" width="0.3" height="15.0" fill="rgb(252,74,24)" rx="2" ry="2" />
<text  x="109.93" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (154 samples, 0.35%)</title><rect x="153.6" y="1477" width="4.2" height="15.0" fill="rgb(214,203,37)" rx="2" ry="2" />
<text  x="156.63" y="1487.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (26 samples, 0.06%)</title><rect x="494.2" y="1637" width="0.7" height="15.0" fill="rgb(227,83,36)" rx="2" ry="2" />
<text  x="497.21" y="1647.5" ></text>
</g>
<g >
<title>malloc (48 samples, 0.11%)</title><rect x="512.6" y="1829" width="1.3" height="15.0" fill="rgb(225,182,22)" rx="2" ry="2" />
<text  x="515.60" y="1839.5" ></text>
</g>
<g >
<title>Field::GetData (7 samples, 0.02%)</title><rect x="378.7" y="1637" width="0.2" height="15.0" fill="rgb(229,47,40)" rx="2" ry="2" />
<text  x="381.70" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.03%)</title><rect x="235.6" y="1829" width="0.4" height="15.0" fill="rgb(248,51,42)" rx="2" ry="2" />
<text  x="238.61" y="1839.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (6 samples, 0.01%)</title><rect x="401.9" y="1637" width="0.2" height="15.0" fill="rgb(205,221,11)" rx="2" ry="2" />
<text  x="404.93" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (877 samples, 2.02%)</title><rect x="568.9" y="1605" width="23.9" height="15.0" fill="rgb(208,223,36)" rx="2" ry="2" />
<text  x="571.93" y="1615.5" >[..</text>
</g>
<g >
<title>BlockHeader::GetBlockSize (9 samples, 0.02%)</title><rect x="424.4" y="1621" width="0.3" height="15.0" fill="rgb(208,91,46)" rx="2" ry="2" />
<text  x="427.45" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="682.3" y="1301" width="0.1" height="15.0" fill="rgb(218,109,2)" rx="2" ry="2" />
<text  x="685.29" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12 samples, 0.03%)</title><rect x="485.5" y="1685" width="0.4" height="15.0" fill="rgb(214,74,12)" rx="2" ry="2" />
<text  x="488.54" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (503 samples, 1.16%)</title><rect x="579.1" y="1509" width="13.7" height="15.0" fill="rgb(250,28,12)" rx="2" ry="2" />
<text  x="582.10" y="1519.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="321.1" y="1541" width="0.4" height="15.0" fill="rgb(234,45,50)" rx="2" ry="2" />
<text  x="324.15" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (4 samples, 0.01%)</title><rect x="486.6" y="1685" width="0.1" height="15.0" fill="rgb(221,151,46)" rx="2" ry="2" />
<text  x="489.57" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1701" width="0.2" height="15.0" fill="rgb(222,149,12)" rx="2" ry="2" />
<text  x="57.80" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494 samples, 1.14%)</title><rect x="1171.8" y="1541" width="13.4" height="15.0" fill="rgb(220,84,17)" rx="2" ry="2" />
<text  x="1174.80" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="1187.6" y="1733" width="0.2" height="15.0" fill="rgb(235,36,45)" rx="2" ry="2" />
<text  x="1190.58" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1781" width="0.1" height="15.0" fill="rgb(247,220,1)" rx="2" ry="2" />
<text  x="23.25" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1717" width="0.4" height="15.0" fill="rgb(232,202,8)" rx="2" ry="2" />
<text  x="694.13" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;int const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (14 samples, 0.03%)</title><rect x="374.5" y="1621" width="0.3" height="15.0" fill="rgb(217,123,50)" rx="2" ry="2" />
<text  x="377.46" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="240.8" y="1797" width="0.4" height="15.0" fill="rgb(227,68,49)" rx="2" ry="2" />
<text  x="243.75" y="1807.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="225.4" y="1717" width="0.3" height="15.0" fill="rgb(235,9,11)" rx="2" ry="2" />
<text  x="228.41" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="253.5" y="1541" width="0.1" height="15.0" fill="rgb(242,134,35)" rx="2" ry="2" />
<text  x="256.45" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,061 samples, 37.02%)</title><rect x="714.4" y="1749" width="436.8" height="15.0" fill="rgb(209,151,3)" rx="2" ry="2" />
<text  x="717.38" y="1759.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1701" width="0.1" height="15.0" fill="rgb(229,30,34)" rx="2" ry="2" />
<text  x="224.90" y="1711.5" ></text>
</g>
<g >
<title>ib_log_flush (10 samples, 0.02%)</title><rect x="231.7" y="1845" width="0.3" height="15.0" fill="rgb(211,101,42)" rx="2" ry="2" />
<text  x="234.69" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="222.6" y="1749" width="0.4" height="15.0" fill="rgb(241,40,1)" rx="2" ry="2" />
<text  x="225.64" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_S_max_size (4 samples, 0.01%)</title><rect x="507.3" y="1701" width="0.2" height="15.0" fill="rgb(243,176,37)" rx="2" ry="2" />
<text  x="510.35" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (25 samples, 0.06%)</title><rect x="467.1" y="1669" width="0.7" height="15.0" fill="rgb(208,89,8)" rx="2" ry="2" />
<text  x="470.12" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1749" width="0.1" height="15.0" fill="rgb(205,183,27)" rx="2" ry="2" />
<text  x="17.60" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="219.8" y="1541" width="0.1" height="15.0" fill="rgb(238,133,10)" rx="2" ry="2" />
<text  x="222.81" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (287 samples, 0.66%)</title><rect x="539.0" y="1589" width="7.8" height="15.0" fill="rgb(243,48,26)" rx="2" ry="2" />
<text  x="542.03" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (8 samples, 0.02%)</title><rect x="331.1" y="1637" width="0.2" height="15.0" fill="rgb(213,146,0)" rx="2" ry="2" />
<text  x="334.10" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (15 samples, 0.03%)</title><rect x="481.6" y="1701" width="0.4" height="15.0" fill="rgb(253,105,2)" rx="2" ry="2" />
<text  x="484.59" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="214.2" y="1717" width="0.1" height="15.0" fill="rgb(224,18,21)" rx="2" ry="2" />
<text  x="217.21" y="1727.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (11 samples, 0.03%)</title><rect x="360.4" y="1637" width="0.3" height="15.0" fill="rgb(211,179,30)" rx="2" ry="2" />
<text  x="363.37" y="1647.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (6 samples, 0.01%)</title><rect x="26.4" y="1813" width="0.1" height="15.0" fill="rgb(248,193,21)" rx="2" ry="2" />
<text  x="29.37" y="1823.5" ></text>
</g>
<g >
<title>[dbus-daemon] (7 samples, 0.02%)</title><rect x="215.9" y="1813" width="0.2" height="15.0" fill="rgb(221,207,3)" rx="2" ry="2" />
<text  x="218.89" y="1823.5" ></text>
</g>
<g >
<title>[code] (44 samples, 0.10%)</title><rect x="59.6" y="1765" width="1.2" height="15.0" fill="rgb(235,38,31)" rx="2" ry="2" />
<text  x="62.64" y="1775.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="597" width="0.1" height="15.0" fill="rgb(232,166,0)" rx="2" ry="2" />
<text  x="61.79" y="607.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (4 samples, 0.01%)</title><rect x="300.8" y="1637" width="0.1" height="15.0" fill="rgb(223,95,40)" rx="2" ry="2" />
<text  x="303.80" y="1647.5" ></text>
</g>
<g >
<title>[msedge] (18 samples, 0.04%)</title><rect x="682.0" y="1541" width="0.5" height="15.0" fill="rgb(220,62,3)" rx="2" ry="2" />
<text  x="685.02" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1685" width="0.1" height="15.0" fill="rgb(214,30,7)" rx="2" ry="2" />
<text  x="238.23" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1685" width="0.3" height="15.0" fill="rgb(231,37,36)" rx="2" ry="2" />
<text  x="29.05" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (609 samples, 1.40%)</title><rect x="576.2" y="1525" width="16.6" height="15.0" fill="rgb(228,158,31)" rx="2" ry="2" />
<text  x="579.22" y="1535.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (6 samples, 0.01%)</title><rect x="464.2" y="1653" width="0.1" height="15.0" fill="rgb(206,44,52)" rx="2" ry="2" />
<text  x="467.16" y="1663.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.01%)</title><rect x="461.7" y="1605" width="0.1" height="15.0" fill="rgb(250,147,54)" rx="2" ry="2" />
<text  x="464.71" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="232.1" y="1797" width="0.2" height="15.0" fill="rgb(206,162,18)" rx="2" ry="2" />
<text  x="235.10" y="1807.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.1" y="1573" width="0.2" height="15.0" fill="rgb(252,17,10)" rx="2" ry="2" />
<text  x="26.11" y="1583.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (4 samples, 0.01%)</title><rect x="489.2" y="1621" width="0.1" height="15.0" fill="rgb(236,16,21)" rx="2" ry="2" />
<text  x="492.15" y="1631.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (114 samples, 0.26%)</title><rect x="479.1" y="1749" width="3.1" height="15.0" fill="rgb(238,204,44)" rx="2" ry="2" />
<text  x="482.12" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (294 samples, 0.68%)</title><rect x="351.7" y="1477" width="8.0" height="15.0" fill="rgb(205,25,39)" rx="2" ry="2" />
<text  x="354.72" y="1487.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (641 samples, 1.48%)</title><rect x="188.0" y="1685" width="17.4" height="15.0" fill="rgb(230,172,4)" rx="2" ry="2" />
<text  x="190.99" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,071 samples, 2.47%)</title><rect x="176.3" y="1749" width="29.1" height="15.0" fill="rgb(234,99,50)" rx="2" ry="2" />
<text  x="179.29" y="1759.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="243.3" y="1669" width="0.1" height="15.0" fill="rgb(219,46,34)" rx="2" ry="2" />
<text  x="246.31" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (67 samples, 0.15%)</title><rect x="434.6" y="1653" width="1.9" height="15.0" fill="rgb(232,27,8)" rx="2" ry="2" />
<text  x="437.65" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="13.3" y="1749" width="0.5" height="15.0" fill="rgb(210,131,39)" rx="2" ry="2" />
<text  x="16.35" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="680.5" y="1669" width="1.2" height="15.0" fill="rgb(219,96,23)" rx="2" ry="2" />
<text  x="683.47" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34 samples, 0.08%)</title><rect x="156.9" y="1413" width="0.9" height="15.0" fill="rgb(221,169,48)" rx="2" ry="2" />
<text  x="159.90" y="1423.5" ></text>
</g>
<g >
<title>__pthread_getspecific (7 samples, 0.02%)</title><rect x="520.3" y="1797" width="0.2" height="15.0" fill="rgb(249,135,40)" rx="2" ry="2" />
<text  x="523.27" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="244.2" y="1717" width="0.5" height="15.0" fill="rgb(213,217,14)" rx="2" ry="2" />
<text  x="247.15" y="1727.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (4 samples, 0.01%)</title><rect x="449.7" y="1669" width="0.2" height="15.0" fill="rgb(210,140,43)" rx="2" ry="2" />
<text  x="452.74" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,314 samples, 35.30%)</title><rect x="734.7" y="1733" width="416.5" height="15.0" fill="rgb(217,84,29)" rx="2" ry="2" />
<text  x="737.70" y="1743.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1701" width="0.2" height="15.0" fill="rgb(233,36,2)" rx="2" ry="2" />
<text  x="691.25" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="242.8" y="1829" width="0.6" height="15.0" fill="rgb(243,104,35)" rx="2" ry="2" />
<text  x="245.84" y="1839.5" ></text>
</g>
<g >
<title>Row::operator= (5 samples, 0.01%)</title><rect x="476.1" y="1765" width="0.1" height="15.0" fill="rgb(250,210,33)" rx="2" ry="2" />
<text  x="479.07" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::size (7 samples, 0.02%)</title><rect x="428.0" y="1653" width="0.1" height="15.0" fill="rgb(239,181,25)" rx="2" ry="2" />
<text  x="430.96" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (15 samples, 0.03%)</title><rect x="484.6" y="1669" width="0.4" height="15.0" fill="rgb(242,161,36)" rx="2" ry="2" />
<text  x="487.64" y="1679.5" ></text>
</g>
<g >
<title>DiskManager::FetchMetaPage (27 samples, 0.06%)</title><rect x="479.4" y="1701" width="0.7" height="15.0" fill="rgb(251,198,28)" rx="2" ry="2" />
<text  x="482.36" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="1187.2" y="1749" width="0.1" height="15.0" fill="rgb(228,137,51)" rx="2" ry="2" />
<text  x="1190.20" y="1759.5" ></text>
</g>
<g >
<title>RowId::RowId (4 samples, 0.01%)</title><rect x="492.7" y="1733" width="0.1" height="15.0" fill="rgb(247,185,2)" rx="2" ry="2" />
<text  x="495.66" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="222.7" y="1733" width="0.3" height="15.0" fill="rgb(248,189,30)" rx="2" ry="2" />
<text  x="225.66" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (6 samples, 0.01%)</title><rect x="295.4" y="1605" width="0.2" height="15.0" fill="rgb(221,165,39)" rx="2" ry="2" />
<text  x="298.42" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::vector (12 samples, 0.03%)</title><rect x="508.2" y="1765" width="0.3" height="15.0" fill="rgb(216,32,3)" rx="2" ry="2" />
<text  x="511.16" y="1775.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.02%)</title><rect x="431.1" y="1573" width="0.3" height="15.0" fill="rgb(216,91,31)" rx="2" ry="2" />
<text  x="434.11" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (28 samples, 0.06%)</title><rect x="320.7" y="1557" width="0.8" height="15.0" fill="rgb(214,186,2)" rx="2" ry="2" />
<text  x="323.74" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="232.2" y="1653" width="0.1" height="15.0" fill="rgb(243,147,2)" rx="2" ry="2" />
<text  x="235.16" y="1663.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (14 samples, 0.03%)</title><rect x="17.5" y="1813" width="0.4" height="15.0" fill="rgb(246,221,18)" rx="2" ry="2" />
<text  x="20.48" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (20 samples, 0.05%)</title><rect x="12.5" y="1637" width="0.5" height="15.0" fill="rgb(206,186,8)" rx="2" ry="2" />
<text  x="15.50" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,318 samples, 3.04%)</title><rect x="122.0" y="1733" width="35.9" height="15.0" fill="rgb(248,30,15)" rx="2" ry="2" />
<text  x="125.00" y="1743.5" >[[k..</text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (19 samples, 0.04%)</title><rect x="475.2" y="1749" width="0.5" height="15.0" fill="rgb(223,148,44)" rx="2" ry="2" />
<text  x="478.20" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="685.9" y="1637" width="1.6" height="15.0" fill="rgb(225,74,43)" rx="2" ry="2" />
<text  x="688.85" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61 samples, 0.14%)</title><rect x="104.5" y="1653" width="1.6" height="15.0" fill="rgb(247,198,27)" rx="2" ry="2" />
<text  x="107.49" y="1663.5" ></text>
</g>
<g >
<title>containerd (26 samples, 0.06%)</title><rect x="213.1" y="1845" width="0.7" height="15.0" fill="rgb(241,120,37)" rx="2" ry="2" />
<text  x="216.09" y="1855.5" ></text>
</g>
<g >
<title>Field::CompareGreaterThan (23 samples, 0.05%)</title><rect x="377.4" y="1669" width="0.6" height="15.0" fill="rgb(239,25,5)" rx="2" ry="2" />
<text  x="380.37" y="1679.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (5 samples, 0.01%)</title><rect x="323.2" y="1541" width="0.1" height="15.0" fill="rgb(213,13,7)" rx="2" ry="2" />
<text  x="326.19" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="213.8" y="1733" width="0.1" height="15.0" fill="rgb(247,193,20)" rx="2" ry="2" />
<text  x="216.80" y="1743.5" ></text>
</g>
<g >
<title>BPlusTree::InternalInsert (1,877 samples, 4.33%)</title><rect x="291.9" y="1685" width="51.0" height="15.0" fill="rgb(223,152,24)" rx="2" ry="2" />
<text  x="294.86" y="1695.5" >BPlus..</text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (8 samples, 0.02%)</title><rect x="19.9" y="1813" width="0.2" height="15.0" fill="rgb(248,216,51)" rx="2" ry="2" />
<text  x="22.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.03%)</title><rect x="18.3" y="1813" width="0.3" height="15.0" fill="rgb(226,177,18)" rx="2" ry="2" />
<text  x="21.27" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="687.0" y="1445" width="0.5" height="15.0" fill="rgb(239,25,12)" rx="2" ry="2" />
<text  x="689.99" y="1455.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="549" width="0.1" height="15.0" fill="rgb(244,129,42)" rx="2" ry="2" />
<text  x="61.79" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="345.4" y="1573" width="0.1" height="15.0" fill="rgb(206,211,19)" rx="2" ry="2" />
<text  x="348.41" y="1583.5" ></text>
</g>
<g >
<title>[msedge] (23 samples, 0.05%)</title><rect x="681.9" y="1621" width="0.6" height="15.0" fill="rgb(218,190,18)" rx="2" ry="2" />
<text  x="684.91" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1797" width="0.2" height="15.0" fill="rgb(222,36,37)" rx="2" ry="2" />
<text  x="13.44" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="480.3" y="1573" width="0.5" height="15.0" fill="rgb(222,63,35)" rx="2" ry="2" />
<text  x="483.26" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="676.4" y="1797" width="0.2" height="15.0" fill="rgb(242,9,52)" rx="2" ry="2" />
<text  x="679.36" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="22.4" y="1749" width="0.3" height="15.0" fill="rgb(232,90,2)" rx="2" ry="2" />
<text  x="25.43" y="1759.5" ></text>
</g>
<g >
<title>Type::GetInstance (5 samples, 0.01%)</title><rect x="382.9" y="1621" width="0.2" height="15.0" fill="rgb(244,163,3)" rx="2" ry="2" />
<text  x="385.94" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="243.2" y="1685" width="0.2" height="15.0" fill="rgb(231,223,35)" rx="2" ry="2" />
<text  x="246.20" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%)</title><rect x="429.0" y="1637" width="0.2" height="15.0" fill="rgb(211,64,6)" rx="2" ry="2" />
<text  x="432.02" y="1647.5" ></text>
</g>
<g >
<title>record__pushfn (67 samples, 0.15%)</title><rect x="685.7" y="1733" width="1.8" height="15.0" fill="rgb(247,212,38)" rx="2" ry="2" />
<text  x="688.66" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1685" width="0.1" height="15.0" fill="rgb(207,51,17)" rx="2" ry="2" />
<text  x="17.60" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (16 samples, 0.04%)</title><rect x="336.6" y="1605" width="0.5" height="15.0" fill="rgb(205,62,54)" rx="2" ry="2" />
<text  x="339.62" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="241.6" y="1749" width="0.3" height="15.0" fill="rgb(239,75,31)" rx="2" ry="2" />
<text  x="244.59" y="1759.5" ></text>
</g>
<g >
<title>__libc_sendmsg (4 samples, 0.01%)</title><rect x="221.9" y="1797" width="0.1" height="15.0" fill="rgb(213,178,48)" rx="2" ry="2" />
<text  x="224.90" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (770 samples, 1.77%)</title><rect x="33.6" y="1781" width="21.0" height="15.0" fill="rgb(246,49,22)" rx="2" ry="2" />
<text  x="36.64" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1653" width="0.1" height="15.0" fill="rgb(219,112,28)" rx="2" ry="2" />
<text  x="224.90" y="1663.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1701" width="0.3" height="15.0" fill="rgb(240,178,42)" rx="2" ry="2" />
<text  x="229.28" y="1711.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1781" width="1.3" height="15.0" fill="rgb(229,126,29)" rx="2" ry="2" />
<text  x="14.12" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="1150.8" y="1333" width="0.1" height="15.0" fill="rgb(248,119,6)" rx="2" ry="2" />
<text  x="1153.75" y="1343.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1765" width="0.2" height="15.0" fill="rgb(216,59,40)" rx="2" ry="2" />
<text  x="24.48" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="221.0" y="1765" width="0.4" height="15.0" fill="rgb(226,78,39)" rx="2" ry="2" />
<text  x="224.03" y="1775.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (6 samples, 0.01%)</title><rect x="633.5" y="1813" width="0.2" height="15.0" fill="rgb(225,72,30)" rx="2" ry="2" />
<text  x="636.49" y="1823.5" ></text>
</g>
<g >
<title>[code] (19 samples, 0.04%)</title><rect x="11.4" y="1621" width="0.5" height="15.0" fill="rgb(220,181,38)" rx="2" ry="2" />
<text  x="14.36" y="1631.5" ></text>
</g>
<g >
<title>__evlist__enable (60 samples, 0.14%)</title><rect x="683.9" y="1765" width="1.7" height="15.0" fill="rgb(223,106,31)" rx="2" ry="2" />
<text  x="686.92" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="232.2" y="1637" width="0.1" height="15.0" fill="rgb(250,64,46)" rx="2" ry="2" />
<text  x="235.18" y="1647.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1045" width="1.0" height="15.0" fill="rgb(250,100,13)" rx="2" ry="2" />
<text  x="60.90" y="1055.5" ></text>
</g>
<g >
<title>[code] (110 samples, 0.25%)</title><rect x="56.1" y="1461" width="3.0" height="15.0" fill="rgb(209,144,41)" rx="2" ry="2" />
<text  x="59.07" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1813" width="0.1" height="15.0" fill="rgb(207,164,0)" rx="2" ry="2" />
<text  x="58.07" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (9 samples, 0.02%)</title><rect x="346.7" y="1557" width="0.3" height="15.0" fill="rgb(218,43,17)" rx="2" ry="2" />
<text  x="349.74" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="222.6" y="1797" width="0.4" height="15.0" fill="rgb(245,166,22)" rx="2" ry="2" />
<text  x="225.64" y="1807.5" ></text>
</g>
<g >
<title>runtime.schedule (12 samples, 0.03%)</title><rect x="213.4" y="1733" width="0.3" height="15.0" fill="rgb(211,47,17)" rx="2" ry="2" />
<text  x="216.39" y="1743.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (14 samples, 0.03%)</title><rect x="17.5" y="1797" width="0.4" height="15.0" fill="rgb(218,20,39)" rx="2" ry="2" />
<text  x="20.48" y="1807.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (50 samples, 0.12%)</title><rect x="111.2" y="1717" width="1.4" height="15.0" fill="rgb(225,1,33)" rx="2" ry="2" />
<text  x="114.21" y="1727.5" ></text>
</g>
<g >
<title>ntfs_attr_open (15 samples, 0.03%)</title><rect x="645.5" y="1813" width="0.4" height="15.0" fill="rgb(217,178,22)" rx="2" ry="2" />
<text  x="648.46" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="243.1" y="1733" width="0.3" height="15.0" fill="rgb(228,161,40)" rx="2" ry="2" />
<text  x="246.06" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="689.3" y="1669" width="0.1" height="15.0" fill="rgb(224,122,40)" rx="2" ry="2" />
<text  x="692.25" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (456 samples, 1.05%)</title><rect x="347.3" y="1621" width="12.4" height="15.0" fill="rgb(233,69,23)" rx="2" ry="2" />
<text  x="350.31" y="1631.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1765" width="1.3" height="15.0" fill="rgb(215,201,47)" rx="2" ry="2" />
<text  x="14.12" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="235.9" y="1637" width="0.1" height="15.0" fill="rgb(215,170,10)" rx="2" ry="2" />
<text  x="238.86" y="1647.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.470.129.06] (4 samples, 0.01%)</title><rect x="25.9" y="1813" width="0.1" height="15.0" fill="rgb(249,169,23)" rx="2" ry="2" />
<text  x="28.91" y="1823.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (78 samples, 0.18%)</title><rect x="423.6" y="1637" width="2.1" height="15.0" fill="rgb(245,40,12)" rx="2" ry="2" />
<text  x="426.55" y="1647.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (75 samples, 0.17%)</title><rect x="404.2" y="1653" width="2.1" height="15.0" fill="rgb(226,141,52)" rx="2" ry="2" />
<text  x="407.24" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (27 samples, 0.06%)</title><rect x="413.5" y="1653" width="0.7" height="15.0" fill="rgb(229,35,35)" rx="2" ry="2" />
<text  x="416.51" y="1663.5" ></text>
</g>
<g >
<title>[code] (17 samples, 0.04%)</title><rect x="115.0" y="1733" width="0.4" height="15.0" fill="rgb(214,126,1)" rx="2" ry="2" />
<text  x="117.99" y="1743.5" ></text>
</g>
<g >
<title>nautilus (9 samples, 0.02%)</title><rect x="683.6" y="1845" width="0.3" height="15.0" fill="rgb(227,214,2)" rx="2" ry="2" />
<text  x="686.65" y="1855.5" ></text>
</g>
<g >
<title>std::__1::__hash_table&lt;Watcher*, std::__1::hash&lt;Watcher*&gt;, std::__1::equal_to&lt;Watcher*&gt;, std::__1::allocator&lt;Watcher*&gt; &gt;::__rehash (10 samples, 0.02%)</title><rect x="158.8" y="1733" width="0.3" height="15.0" fill="rgb(229,152,42)" rx="2" ry="2" />
<text  x="161.83" y="1743.5" ></text>
</g>
<g >
<title>__GI___getdents64 (6 samples, 0.01%)</title><rect x="690.9" y="1829" width="0.2" height="15.0" fill="rgb(229,202,54)" rx="2" ry="2" />
<text  x="693.91" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="681.9" y="1589" width="0.6" height="15.0" fill="rgb(217,127,18)" rx="2" ry="2" />
<text  x="684.94" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1765" width="0.1" height="15.0" fill="rgb(226,153,2)" rx="2" ry="2" />
<text  x="233.22" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="11.7" y="1477" width="0.1" height="15.0" fill="rgb(234,99,8)" rx="2" ry="2" />
<text  x="14.66" y="1487.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1077" width="1.0" height="15.0" fill="rgb(222,36,6)" rx="2" ry="2" />
<text  x="60.90" y="1087.5" ></text>
</g>
<g >
<title>Field::~Field (23 samples, 0.05%)</title><rect x="508.7" y="1685" width="0.6" height="15.0" fill="rgb(236,169,47)" rx="2" ry="2" />
<text  x="511.65" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1749" width="0.3" height="15.0" fill="rgb(254,156,24)" rx="2" ry="2" />
<text  x="29.05" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="12.0" y="1509" width="0.3" height="15.0" fill="rgb(240,141,44)" rx="2" ry="2" />
<text  x="15.04" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.5" y="1605" width="0.1" height="15.0" fill="rgb(240,184,52)" rx="2" ry="2" />
<text  x="692.50" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (148 samples, 0.34%)</title><rect x="1146.9" y="1509" width="4.0" height="15.0" fill="rgb(207,174,27)" rx="2" ry="2" />
<text  x="1149.89" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="25.1" y="1797" width="0.2" height="15.0" fill="rgb(246,95,40)" rx="2" ry="2" />
<text  x="28.15" y="1807.5" ></text>
</g>
<g >
<title>std::__1::condition_variable::__do_timed_wait (4 samples, 0.01%)</title><rect x="209.1" y="1781" width="0.1" height="15.0" fill="rgb(229,193,25)" rx="2" ry="2" />
<text  x="212.06" y="1791.5" ></text>
</g>
<g >
<title>GetCmpBool (4 samples, 0.01%)</title><rect x="417.2" y="1653" width="0.1" height="15.0" fill="rgb(252,141,22)" rx="2" ry="2" />
<text  x="420.21" y="1663.5" ></text>
</g>
<g >
<title>irq/99-iwlwifi: (6 samples, 0.01%)</title><rect x="235.2" y="1845" width="0.2" height="15.0" fill="rgb(233,98,34)" rx="2" ry="2" />
<text  x="238.20" y="1855.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (4 samples, 0.01%)</title><rect x="406.3" y="1669" width="0.1" height="15.0" fill="rgb(247,89,5)" rx="2" ry="2" />
<text  x="409.33" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_deallocate (4 samples, 0.01%)</title><rect x="509.7" y="1749" width="0.1" height="15.0" fill="rgb(235,135,51)" rx="2" ry="2" />
<text  x="512.66" y="1759.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="23.0" y="1669" width="0.3" height="15.0" fill="rgb(230,102,15)" rx="2" ry="2" />
<text  x="26.03" y="1679.5" ></text>
</g>
<g >
<title>[code] (20 samples, 0.05%)</title><rect x="22.9" y="1733" width="0.5" height="15.0" fill="rgb(207,141,12)" rx="2" ry="2" />
<text  x="25.86" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (4 samples, 0.01%)</title><rect x="397.6" y="1621" width="0.1" height="15.0" fill="rgb(214,55,31)" rx="2" ry="2" />
<text  x="400.58" y="1631.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1717" width="0.3" height="15.0" fill="rgb(240,76,40)" rx="2" ry="2" />
<text  x="229.28" y="1727.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (355 samples, 0.82%)</title><rect x="96.5" y="1829" width="9.6" height="15.0" fill="rgb(226,96,2)" rx="2" ry="2" />
<text  x="99.49" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.3" y="1637" width="0.1" height="15.0" fill="rgb(248,8,24)" rx="2" ry="2" />
<text  x="99.30" y="1647.5" ></text>
</g>
<g >
<title>operator new[] (11 samples, 0.03%)</title><rect x="112.7" y="1701" width="0.3" height="15.0" fill="rgb(215,167,38)" rx="2" ry="2" />
<text  x="115.67" y="1711.5" ></text>
</g>
<g >
<title>BPlusTreeLeafPage::GetEntrySize (4 samples, 0.01%)</title><rect x="293.5" y="1669" width="0.2" height="15.0" fill="rgb(207,134,51)" rx="2" ry="2" />
<text  x="296.54" y="1679.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="453" width="0.1" height="15.0" fill="rgb(217,64,43)" rx="2" ry="2" />
<text  x="61.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="25.2" y="1733" width="0.1" height="15.0" fill="rgb(237,129,7)" rx="2" ry="2" />
<text  x="28.18" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (411 samples, 0.95%)</title><rect x="348.5" y="1541" width="11.2" height="15.0" fill="rgb(225,227,9)" rx="2" ry="2" />
<text  x="351.54" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1781" width="0.2" height="15.0" fill="rgb(240,205,30)" rx="2" ry="2" />
<text  x="57.80" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 0.09%)</title><rect x="686.5" y="1509" width="1.0" height="15.0" fill="rgb(216,117,20)" rx="2" ry="2" />
<text  x="689.48" y="1519.5" ></text>
</g>
<g >
<title>[code] (137 samples, 0.32%)</title><rect x="55.7" y="1557" width="3.8" height="15.0" fill="rgb(252,107,44)" rx="2" ry="2" />
<text  x="58.75" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1701" width="0.4" height="15.0" fill="rgb(213,151,35)" rx="2" ry="2" />
<text  x="694.13" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1733" width="0.2" height="15.0" fill="rgb(252,217,50)" rx="2" ry="2" />
<text  x="217.69" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (574 samples, 1.32%)</title><rect x="273.8" y="1573" width="15.6" height="15.0" fill="rgb(234,76,53)" rx="2" ry="2" />
<text  x="276.77" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (10 samples, 0.02%)</title><rect x="389.2" y="1637" width="0.3" height="15.0" fill="rgb(239,161,7)" rx="2" ry="2" />
<text  x="392.20" y="1647.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (10 samples, 0.02%)</title><rect x="403.9" y="1621" width="0.3" height="15.0" fill="rgb(251,181,51)" rx="2" ry="2" />
<text  x="406.89" y="1631.5" ></text>
</g>
<g >
<title>ntfs_get_size_for_mapping_pairs (16 samples, 0.04%)</title><rect x="675.9" y="1829" width="0.4" height="15.0" fill="rgb(239,1,22)" rx="2" ry="2" />
<text  x="678.90" y="1839.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="581" width="0.1" height="15.0" fill="rgb(239,148,25)" rx="2" ry="2" />
<text  x="61.79" y="591.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="325" width="0.1" height="15.0" fill="rgb(223,160,46)" rx="2" ry="2" />
<text  x="61.79" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="687.1" y="1429" width="0.4" height="15.0" fill="rgb(208,213,4)" rx="2" ry="2" />
<text  x="690.08" y="1439.5" ></text>
</g>
<g >
<title>[code] (143 samples, 0.33%)</title><rect x="55.6" y="1589" width="3.9" height="15.0" fill="rgb(243,151,32)" rx="2" ry="2" />
<text  x="58.61" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (66 samples, 0.15%)</title><rect x="1183.4" y="1445" width="1.8" height="15.0" fill="rgb(227,165,21)" rx="2" ry="2" />
<text  x="1186.45" y="1455.5" ></text>
</g>
<g >
<title>[msedge] (15 samples, 0.03%)</title><rect x="682.1" y="1477" width="0.4" height="15.0" fill="rgb(238,99,17)" rx="2" ry="2" />
<text  x="685.07" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="426.6" y="1653" width="0.1" height="15.0" fill="rgb(212,103,52)" rx="2" ry="2" />
<text  x="429.57" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="25.2" y="1717" width="0.1" height="15.0" fill="rgb(250,5,9)" rx="2" ry="2" />
<text  x="28.18" y="1727.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (5 samples, 0.01%)</title><rect x="341.0" y="1621" width="0.2" height="15.0" fill="rgb(229,215,45)" rx="2" ry="2" />
<text  x="344.03" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="232.8" y="1829" width="0.1" height="15.0" fill="rgb(239,227,29)" rx="2" ry="2" />
<text  x="235.78" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (10 samples, 0.02%)</title><rect x="12.7" y="1493" width="0.3" height="15.0" fill="rgb(215,153,48)" rx="2" ry="2" />
<text  x="15.75" y="1503.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="23.1" y="1637" width="0.2" height="15.0" fill="rgb(213,83,45)" rx="2" ry="2" />
<text  x="26.08" y="1647.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (17 samples, 0.04%)</title><rect x="387.7" y="1605" width="0.5" height="15.0" fill="rgb(214,188,13)" rx="2" ry="2" />
<text  x="390.70" y="1615.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (12 samples, 0.03%)</title><rect x="346.7" y="1621" width="0.3" height="15.0" fill="rgb(239,23,2)" rx="2" ry="2" />
<text  x="349.66" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, int&gt;, false&gt; &gt; &gt;::allocate (4 samples, 0.01%)</title><rect x="374.3" y="1621" width="0.2" height="15.0" fill="rgb(225,155,37)" rx="2" ry="2" />
<text  x="377.35" y="1631.5" ></text>
</g>
<g >
<title>EventList::update (71 samples, 0.16%)</title><rect x="113.1" y="1733" width="1.9" height="15.0" fill="rgb(210,111,0)" rx="2" ry="2" />
<text  x="116.05" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (8 samples, 0.02%)</title><rect x="331.6" y="1637" width="0.3" height="15.0" fill="rgb(219,52,7)" rx="2" ry="2" />
<text  x="334.65" y="1647.5" ></text>
</g>
<g >
<title>[[vdso]] (17 samples, 0.04%)</title><rect x="229.1" y="1813" width="0.4" height="15.0" fill="rgb(252,147,18)" rx="2" ry="2" />
<text  x="232.06" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1701" width="0.1" height="15.0" fill="rgb(240,184,42)" rx="2" ry="2" />
<text  x="1192.27" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, int&gt; &gt;::_M_v (8 samples, 0.02%)</title><rect x="447.2" y="1605" width="0.3" height="15.0" fill="rgb(218,184,49)" rx="2" ry="2" />
<text  x="450.24" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="241.0" y="1733" width="0.2" height="15.0" fill="rgb(247,72,51)" rx="2" ry="2" />
<text  x="244.05" y="1743.5" ></text>
</g>
<g >
<title>[perf-162284.map] (7 samples, 0.02%)</title><rect x="59.2" y="1349" width="0.2" height="15.0" fill="rgb(223,45,36)" rx="2" ry="2" />
<text  x="62.20" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="375.8" y="1637" width="0.2" height="15.0" fill="rgb(240,23,49)" rx="2" ry="2" />
<text  x="378.79" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="409.7" y="1589" width="0.4" height="15.0" fill="rgb(214,212,17)" rx="2" ry="2" />
<text  x="412.65" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="25.1" y="1765" width="0.2" height="15.0" fill="rgb(209,189,9)" rx="2" ry="2" />
<text  x="28.15" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52 samples, 0.12%)</title><rect x="236.8" y="1765" width="1.4" height="15.0" fill="rgb(211,82,2)" rx="2" ry="2" />
<text  x="239.75" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (378 samples, 0.87%)</title><rect x="349.4" y="1509" width="10.3" height="15.0" fill="rgb(249,16,42)" rx="2" ry="2" />
<text  x="352.44" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="10.5" y="1557" width="0.1" height="15.0" fill="rgb(212,18,26)" rx="2" ry="2" />
<text  x="13.46" y="1567.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="23.8" y="1797" width="0.2" height="15.0" fill="rgb(220,168,17)" rx="2" ry="2" />
<text  x="26.79" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="238.5" y="1717" width="0.3" height="15.0" fill="rgb(219,204,18)" rx="2" ry="2" />
<text  x="241.52" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (127 samples, 0.29%)</title><rect x="1147.5" y="1493" width="3.4" height="15.0" fill="rgb(208,173,50)" rx="2" ry="2" />
<text  x="1150.46" y="1503.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (71 samples, 0.16%)</title><rect x="383.9" y="1589" width="1.9" height="15.0" fill="rgb(211,8,14)" rx="2" ry="2" />
<text  x="386.87" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (23 samples, 0.05%)</title><rect x="428.5" y="1653" width="0.7" height="15.0" fill="rgb(244,104,23)" rx="2" ry="2" />
<text  x="431.53" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="219.8" y="1525" width="0.1" height="15.0" fill="rgb(237,202,37)" rx="2" ry="2" />
<text  x="222.84" y="1535.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (4 samples, 0.01%)</title><rect x="334.2" y="1621" width="0.1" height="15.0" fill="rgb(245,6,5)" rx="2" ry="2" />
<text  x="337.23" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="235.8" y="1701" width="0.2" height="15.0" fill="rgb(238,193,20)" rx="2" ry="2" />
<text  x="238.77" y="1711.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (5 samples, 0.01%)</title><rect x="1151.1" y="1589" width="0.1" height="15.0" fill="rgb(241,126,49)" rx="2" ry="2" />
<text  x="1154.05" y="1599.5" ></text>
</g>
<g >
<title>ntfs_inode_close (11 samples, 0.03%)</title><rect x="676.3" y="1829" width="0.3" height="15.0" fill="rgb(245,138,47)" rx="2" ry="2" />
<text  x="679.33" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (7 samples, 0.02%)</title><rect x="412.0" y="1605" width="0.2" height="15.0" fill="rgb(230,152,24)" rx="2" ry="2" />
<text  x="414.99" y="1615.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;char&gt; (5 samples, 0.01%)</title><rect x="459.8" y="1557" width="0.1" height="15.0" fill="rgb(229,185,42)" rx="2" ry="2" />
<text  x="462.81" y="1567.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (5 samples, 0.01%)</title><rect x="401.4" y="1653" width="0.1" height="15.0" fill="rgb(234,98,1)" rx="2" ry="2" />
<text  x="404.38" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="1185.0" y="1349" width="0.2" height="15.0" fill="rgb(219,8,28)" rx="2" ry="2" />
<text  x="1187.97" y="1359.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="240.0" y="1797" width="0.8" height="15.0" fill="rgb(223,40,5)" rx="2" ry="2" />
<text  x="242.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (23 samples, 0.05%)</title><rect x="412.3" y="1621" width="0.6" height="15.0" fill="rgb(216,181,20)" rx="2" ry="2" />
<text  x="415.32" y="1631.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="20.5" y="1749" width="0.1" height="15.0" fill="rgb(233,190,43)" rx="2" ry="2" />
<text  x="23.53" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="235.8" y="1685" width="0.2" height="15.0" fill="rgb(251,179,7)" rx="2" ry="2" />
<text  x="238.80" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (6 samples, 0.01%)</title><rect x="442.3" y="1653" width="0.2" height="15.0" fill="rgb(247,7,11)" rx="2" ry="2" />
<text  x="445.34" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="237.8" y="1669" width="0.4" height="15.0" fill="rgb(243,28,26)" rx="2" ry="2" />
<text  x="240.84" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="12.0" y="1541" width="0.3" height="15.0" fill="rgb(205,160,20)" rx="2" ry="2" />
<text  x="14.99" y="1551.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="341" width="0.1" height="15.0" fill="rgb(225,223,8)" rx="2" ry="2" />
<text  x="61.79" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="13.3" y="1765" width="0.5" height="15.0" fill="rgb(229,53,48)" rx="2" ry="2" />
<text  x="16.35" y="1775.5" ></text>
</g>
<g >
<title>LRUReplacer::Victim (211 samples, 0.49%)</title><rect x="361.6" y="1669" width="5.7" height="15.0" fill="rgb(251,129,39)" rx="2" ry="2" />
<text  x="364.57" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="410.4" y="1493" width="0.3" height="15.0" fill="rgb(246,57,24)" rx="2" ry="2" />
<text  x="413.44" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="18.3" y="1797" width="0.2" height="15.0" fill="rgb(213,227,22)" rx="2" ry="2" />
<text  x="21.27" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (4 samples, 0.01%)</title><rect x="491.9" y="1685" width="0.1" height="15.0" fill="rgb(226,69,5)" rx="2" ry="2" />
<text  x="494.87" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1813" width="0.4" height="15.0" fill="rgb(228,203,45)" rx="2" ry="2" />
<text  x="218.02" y="1823.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (14 samples, 0.03%)</title><rect x="337.4" y="1605" width="0.4" height="15.0" fill="rgb(247,202,18)" rx="2" ry="2" />
<text  x="340.44" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="11.7" y="1429" width="0.1" height="15.0" fill="rgb(241,16,54)" rx="2" ry="2" />
<text  x="14.69" y="1439.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (4 samples, 0.01%)</title><rect x="499.6" y="1589" width="0.1" height="15.0" fill="rgb(233,225,36)" rx="2" ry="2" />
<text  x="502.60" y="1599.5" ></text>
</g>
<g >
<title>[code] (18 samples, 0.04%)</title><rect x="11.4" y="1605" width="0.5" height="15.0" fill="rgb(214,173,42)" rx="2" ry="2" />
<text  x="14.39" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242 samples, 0.56%)</title><rect x="1178.7" y="1493" width="6.5" height="15.0" fill="rgb(241,145,21)" rx="2" ry="2" />
<text  x="1181.66" y="1503.5" ></text>
</g>
<g >
<title>[libntfs-3g.so.883.0.0] (6 samples, 0.01%)</title><rect x="524.7" y="1781" width="0.1" height="15.0" fill="rgb(211,62,40)" rx="2" ry="2" />
<text  x="527.67" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="61.1" y="1637" width="0.1" height="15.0" fill="rgb(231,54,22)" rx="2" ry="2" />
<text  x="64.08" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="61.1" y="1621" width="0.1" height="15.0" fill="rgb(206,27,33)" rx="2" ry="2" />
<text  x="64.11" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (310 samples, 0.71%)</title><rect x="164.7" y="1765" width="8.4" height="15.0" fill="rgb(252,165,1)" rx="2" ry="2" />
<text  x="167.70" y="1775.5" ></text>
</g>
<g >
<title>operator new[] (16 samples, 0.04%)</title><rect x="160.9" y="1717" width="0.5" height="15.0" fill="rgb(245,217,49)" rx="2" ry="2" />
<text  x="163.92" y="1727.5" ></text>
</g>
<g >
<title>getSectionId (4 samples, 0.01%)</title><rect x="485.0" y="1685" width="0.2" height="15.0" fill="rgb(214,19,21)" rx="2" ry="2" />
<text  x="488.05" y="1695.5" ></text>
</g>
<g >
<title>Field::DeserializeFrom (210 samples, 0.48%)</title><rect x="303.8" y="1621" width="5.7" height="15.0" fill="rgb(243,53,24)" rx="2" ry="2" />
<text  x="306.77" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="241.8" y="1701" width="0.1" height="15.0" fill="rgb(206,112,30)" rx="2" ry="2" />
<text  x="244.76" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="53.3" y="1573" width="1.3" height="15.0" fill="rgb(226,178,19)" rx="2" ry="2" />
<text  x="56.30" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="244.0" y="1765" width="0.7" height="15.0" fill="rgb(238,196,21)" rx="2" ry="2" />
<text  x="247.04" y="1775.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="679.4" y="1653" width="0.2" height="15.0" fill="rgb(229,226,18)" rx="2" ry="2" />
<text  x="682.41" y="1663.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (4 samples, 0.01%)</title><rect x="505.0" y="1733" width="0.1" height="15.0" fill="rgb(246,37,52)" rx="2" ry="2" />
<text  x="508.01" y="1743.5" ></text>
</g>
<g >
<title>[code] (103 samples, 0.24%)</title><rect x="56.3" y="1445" width="2.8" height="15.0" fill="rgb(208,145,42)" rx="2" ry="2" />
<text  x="59.26" y="1455.5" ></text>
</g>
<g >
<title>Field::SerializeTo (5 samples, 0.01%)</title><rect x="470.7" y="1717" width="0.1" height="15.0" fill="rgb(230,133,51)" rx="2" ry="2" />
<text  x="473.71" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1733" width="0.1" height="15.0" fill="rgb(208,119,32)" rx="2" ry="2" />
<text  x="248.21" y="1743.5" ></text>
</g>
<g >
<title>[code] (221 samples, 0.51%)</title><rect x="55.2" y="1813" width="6.0" height="15.0" fill="rgb(251,181,48)" rx="2" ry="2" />
<text  x="58.23" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (7 samples, 0.02%)</title><rect x="484.8" y="1589" width="0.2" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="487.77" y="1599.5" ></text>
</g>
<g >
<title>Type::GetInstance (7 samples, 0.02%)</title><rect x="451.2" y="1653" width="0.1" height="15.0" fill="rgb(226,184,52)" rx="2" ry="2" />
<text  x="454.16" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="10.7" y="1717" width="0.4" height="15.0" fill="rgb(206,117,27)" rx="2" ry="2" />
<text  x="13.68" y="1727.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1797" width="0.1" height="15.0" fill="rgb(212,219,48)" rx="2" ry="2" />
<text  x="24.37" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (22 samples, 0.05%)</title><rect x="447.1" y="1637" width="0.6" height="15.0" fill="rgb(247,87,16)" rx="2" ry="2" />
<text  x="450.13" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (30 samples, 0.07%)</title><rect x="435.5" y="1621" width="0.8" height="15.0" fill="rgb(221,146,7)" rx="2" ry="2" />
<text  x="438.52" y="1631.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (6 samples, 0.01%)</title><rect x="253.6" y="1781" width="0.2" height="15.0" fill="rgb(240,185,47)" rx="2" ry="2" />
<text  x="256.64" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 0.12%)</title><rect x="684.2" y="1685" width="1.4" height="15.0" fill="rgb(218,222,23)" rx="2" ry="2" />
<text  x="687.19" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 0.11%)</title><rect x="686.2" y="1541" width="1.3" height="15.0" fill="rgb(242,99,16)" rx="2" ry="2" />
<text  x="689.23" y="1551.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11 samples, 0.03%)</title><rect x="642.7" y="1813" width="0.3" height="15.0" fill="rgb(234,122,28)" rx="2" ry="2" />
<text  x="645.71" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (183 samples, 0.42%)</title><rect x="666.0" y="1717" width="5.0" height="15.0" fill="rgb(239,26,47)" rx="2" ry="2" />
<text  x="669.02" y="1727.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::GetFirstChunkFor (4 samples, 0.01%)</title><rect x="454.9" y="1653" width="0.1" height="15.0" fill="rgb(231,2,46)" rx="2" ry="2" />
<text  x="457.94" y="1663.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10 samples, 0.02%)</title><rect x="23.5" y="1829" width="0.2" height="15.0" fill="rgb(209,69,47)" rx="2" ry="2" />
<text  x="26.46" y="1839.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (19 samples, 0.04%)</title><rect x="173.3" y="1797" width="0.5" height="15.0" fill="rgb(254,109,41)" rx="2" ry="2" />
<text  x="176.30" y="1807.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (4 samples, 0.01%)</title><rect x="500.6" y="1637" width="0.1" height="15.0" fill="rgb(231,136,49)" rx="2" ry="2" />
<text  x="503.58" y="1647.5" ></text>
</g>
<g >
<title>ieee80211_rx_bss_info (4 samples, 0.01%)</title><rect x="245.0" y="1733" width="0.1" height="15.0" fill="rgb(208,63,14)" rx="2" ry="2" />
<text  x="247.99" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (28 samples, 0.06%)</title><rect x="681.8" y="1669" width="0.7" height="15.0" fill="rgb(254,146,16)" rx="2" ry="2" />
<text  x="684.77" y="1679.5" ></text>
</g>
<g >
<title>__libc_start_main (221 samples, 0.51%)</title><rect x="55.2" y="1829" width="6.0" height="15.0" fill="rgb(237,32,0)" rx="2" ry="2" />
<text  x="58.23" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,145 samples, 2.64%)</title><rect x="174.3" y="1781" width="31.1" height="15.0" fill="rgb(249,138,47)" rx="2" ry="2" />
<text  x="177.28" y="1791.5" >[[..</text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="297.0" y="1637" width="0.1" height="15.0" fill="rgb(222,203,32)" rx="2" ry="2" />
<text  x="300.00" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (56 samples, 0.13%)</title><rect x="392.2" y="1605" width="1.5" height="15.0" fill="rgb(215,109,27)" rx="2" ry="2" />
<text  x="395.16" y="1615.5" ></text>
</g>
<g >
<title>Field::IsNull (8 samples, 0.02%)</title><rect x="417.0" y="1653" width="0.2" height="15.0" fill="rgb(249,12,9)" rx="2" ry="2" />
<text  x="420.00" y="1663.5" ></text>
</g>
<g >
<title>BlockHeader::IsBlockFree (6 samples, 0.01%)</title><rect x="403.6" y="1621" width="0.1" height="15.0" fill="rgb(211,113,49)" rx="2" ry="2" />
<text  x="406.56" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.05%)</title><rect x="524.8" y="1781" width="0.6" height="15.0" fill="rgb(213,212,44)" rx="2" ry="2" />
<text  x="527.84" y="1791.5" ></text>
</g>
<g >
<title>[[vdso]] (224 samples, 0.52%)</title><rect x="664.9" y="1813" width="6.1" height="15.0" fill="rgb(249,0,45)" rx="2" ry="2" />
<text  x="667.94" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (276 samples, 0.64%)</title><rect x="165.6" y="1717" width="7.5" height="15.0" fill="rgb(205,132,38)" rx="2" ry="2" />
<text  x="168.63" y="1727.5" ></text>
</g>
<g >
<title>ntfs_xattr_system_type (8 samples, 0.02%)</title><rect x="658.5" y="1813" width="0.2" height="15.0" fill="rgb(241,27,40)" rx="2" ry="2" />
<text  x="661.52" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="20.3" y="1573" width="0.1" height="15.0" fill="rgb(252,87,25)" rx="2" ry="2" />
<text  x="23.31" y="1583.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (59 samples, 0.14%)</title><rect x="384.1" y="1573" width="1.6" height="15.0" fill="rgb(222,67,47)" rx="2" ry="2" />
<text  x="387.09" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.08%)</title><rect x="219.2" y="1797" width="0.9" height="15.0" fill="rgb(243,126,26)" rx="2" ry="2" />
<text  x="222.16" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (309 samples, 0.71%)</title><rect x="97.7" y="1797" width="8.4" height="15.0" fill="rgb(241,178,13)" rx="2" ry="2" />
<text  x="100.74" y="1807.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1749" width="0.6" height="15.0" fill="rgb(243,224,49)" rx="2" ry="2" />
<text  x="16.86" y="1759.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10 samples, 0.02%)</title><rect x="632.1" y="1797" width="0.3" height="15.0" fill="rgb(244,31,1)" rx="2" ry="2" />
<text  x="635.13" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="22.5" y="1733" width="0.2" height="15.0" fill="rgb(220,75,16)" rx="2" ry="2" />
<text  x="25.46" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1733" width="0.1" height="15.0" fill="rgb(240,2,12)" rx="2" ry="2" />
<text  x="17.81" y="1743.5" ></text>
</g>
<g >
<title>Row::GetField (6 samples, 0.01%)</title><rect x="462.6" y="1701" width="0.2" height="15.0" fill="rgb(212,213,21)" rx="2" ry="2" />
<text  x="465.63" y="1711.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="517" width="0.1" height="15.0" fill="rgb(236,88,17)" rx="2" ry="2" />
<text  x="61.79" y="527.5" ></text>
</g>
<g >
<title>irq/112-nvidia (68 samples, 0.16%)</title><rect x="233.1" y="1845" width="1.8" height="15.0" fill="rgb(252,21,46)" rx="2" ry="2" />
<text  x="236.08" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="241.1" y="1717" width="0.1" height="15.0" fill="rgb(223,93,43)" rx="2" ry="2" />
<text  x="244.13" y="1727.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (4 samples, 0.01%)</title><rect x="398.0" y="1605" width="0.1" height="15.0" fill="rgb(218,140,23)" rx="2" ry="2" />
<text  x="400.96" y="1615.5" ></text>
</g>
<g >
<title>[[vdso]] (14 samples, 0.03%)</title><rect x="683.3" y="1813" width="0.3" height="15.0" fill="rgb(236,71,17)" rx="2" ry="2" />
<text  x="686.27" y="1823.5" ></text>
</g>
<g >
<title>Field::CompareLessThan (106 samples, 0.24%)</title><rect x="297.7" y="1653" width="2.9" height="15.0" fill="rgb(220,115,45)" rx="2" ry="2" />
<text  x="300.73" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (4 samples, 0.01%)</title><rect x="14.2" y="1509" width="0.1" height="15.0" fill="rgb(238,204,4)" rx="2" ry="2" />
<text  x="17.19" y="1519.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (27 samples, 0.06%)</title><rect x="474.4" y="1717" width="0.7" height="15.0" fill="rgb(211,137,25)" rx="2" ry="2" />
<text  x="477.36" y="1727.5" ></text>
</g>
<g >
<title>CompareStrings (5 samples, 0.01%)</title><rect x="415.6" y="1653" width="0.1" height="15.0" fill="rgb(231,164,23)" rx="2" ry="2" />
<text  x="418.55" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1669" width="0.1" height="15.0" fill="rgb(230,174,54)" rx="2" ry="2" />
<text  x="13.46" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="253.4" y="1589" width="0.2" height="15.0" fill="rgb(250,41,34)" rx="2" ry="2" />
<text  x="256.43" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="1189.0" y="1813" width="0.2" height="15.0" fill="rgb(213,111,43)" rx="2" ry="2" />
<text  x="1192.05" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,876 samples, 11.24%)</title><rect x="1018.6" y="1685" width="132.6" height="15.0" fill="rgb(209,189,5)" rx="2" ry="2" />
<text  x="1021.60" y="1695.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="253.5" y="1557" width="0.1" height="15.0" fill="rgb(229,104,39)" rx="2" ry="2" />
<text  x="256.45" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="373.5" y="1605" width="0.1" height="15.0" fill="rgb(216,103,40)" rx="2" ry="2" />
<text  x="376.48" y="1615.5" ></text>
</g>
<g >
<title>[code] (7 samples, 0.02%)</title><rect x="26.9" y="1685" width="0.2" height="15.0" fill="rgb(208,89,1)" rx="2" ry="2" />
<text  x="29.94" y="1695.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="20.7" y="1669" width="0.6" height="15.0" fill="rgb(216,38,0)" rx="2" ry="2" />
<text  x="23.69" y="1679.5" ></text>
</g>
<g >
<title>Row::GetField (7 samples, 0.02%)</title><rect x="332.2" y="1653" width="0.2" height="15.0" fill="rgb(245,15,53)" rx="2" ry="2" />
<text  x="335.16" y="1663.5" ></text>
</g>
<g >
<title>BufferPoolManager::FlushPage (4 samples, 0.01%)</title><rect x="511.2" y="1765" width="0.1" height="15.0" fill="rgb(215,97,24)" rx="2" ry="2" />
<text  x="514.24" y="1775.5" ></text>
</g>
<g >
<title>BPlusTree::Insert (6,616 samples, 15.25%)</title><rect x="290.1" y="1749" width="180.0" height="15.0" fill="rgb(241,209,41)" rx="2" ry="2" />
<text  x="293.14" y="1759.5" >BPlusTree::Insert</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,084 samples, 2.50%)</title><rect x="175.9" y="1765" width="29.5" height="15.0" fill="rgb(237,98,33)" rx="2" ry="2" />
<text  x="178.94" y="1775.5" >[[..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (23 samples, 0.05%)</title><rect x="481.5" y="1717" width="0.6" height="15.0" fill="rgb(226,228,43)" rx="2" ry="2" />
<text  x="484.46" y="1727.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (11 samples, 0.03%)</title><rect x="441.8" y="1653" width="0.3" height="15.0" fill="rgb(240,146,32)" rx="2" ry="2" />
<text  x="444.80" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (909 samples, 2.10%)</title><rect x="568.1" y="1621" width="24.7" height="15.0" fill="rgb(238,87,4)" rx="2" ry="2" />
<text  x="571.06" y="1631.5" >[..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="467.3" y="1621" width="0.4" height="15.0" fill="rgb(216,138,32)" rx="2" ry="2" />
<text  x="470.31" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (113 samples, 0.26%)</title><rect x="356.6" y="1381" width="3.1" height="15.0" fill="rgb(234,182,25)" rx="2" ry="2" />
<text  x="359.64" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="427.8" y="1653" width="0.2" height="15.0" fill="rgb(251,11,15)" rx="2" ry="2" />
<text  x="430.85" y="1663.5" ></text>
</g>
<g >
<title>Field::IsNull (5 samples, 0.01%)</title><rect x="378.2" y="1653" width="0.1" height="15.0" fill="rgb(221,35,18)" rx="2" ry="2" />
<text  x="381.16" y="1663.5" ></text>
</g>
<g >
<title>ieee80211_bss_info_update (4 samples, 0.01%)</title><rect x="245.0" y="1717" width="0.1" height="15.0" fill="rgb(230,178,42)" rx="2" ry="2" />
<text  x="247.99" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="689.0" y="1749" width="0.4" height="15.0" fill="rgb(243,74,53)" rx="2" ry="2" />
<text  x="691.95" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (5 samples, 0.01%)</title><rect x="435.7" y="1589" width="0.2" height="15.0" fill="rgb(225,122,5)" rx="2" ry="2" />
<text  x="438.74" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1637" width="0.1" height="15.0" fill="rgb(235,91,5)" rx="2" ry="2" />
<text  x="23.25" y="1647.5" ></text>
</g>
<g >
<title>std::fill_n&lt;char*, unsigned long, char&gt; (7 samples, 0.02%)</title><rect x="471.9" y="1637" width="0.1" height="15.0" fill="rgb(215,3,4)" rx="2" ry="2" />
<text  x="474.86" y="1647.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (18 samples, 0.04%)</title><rect x="486.2" y="1717" width="0.5" height="15.0" fill="rgb(224,20,43)" rx="2" ry="2" />
<text  x="489.19" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="236.2" y="1733" width="0.1" height="15.0" fill="rgb(211,140,8)" rx="2" ry="2" />
<text  x="239.15" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (722 samples, 1.66%)</title><rect x="269.7" y="1621" width="19.7" height="15.0" fill="rgb(251,147,23)" rx="2" ry="2" />
<text  x="272.74" y="1631.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="373" width="0.1" height="15.0" fill="rgb(245,7,2)" rx="2" ry="2" />
<text  x="61.79" y="383.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void  (4 samples, 0.01%)</title><rect x="232.3" y="1813" width="0.1" height="15.0" fill="rgb(228,140,46)" rx="2" ry="2" />
<text  x="235.29" y="1823.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="53" width="0.1" height="15.0" fill="rgb(221,60,9)" rx="2" ry="2" />
<text  x="61.79" y="63.5" ></text>
</g>
<g >
<title>[code] (93 samples, 0.21%)</title><rect x="56.4" y="1413" width="2.5" height="15.0" fill="rgb(218,48,36)" rx="2" ry="2" />
<text  x="59.40" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.1" y="1685" width="0.1" height="15.0" fill="rgb(230,89,52)" rx="2" ry="2" />
<text  x="13.11" y="1695.5" ></text>
</g>
<g >
<title>TableIterator::~TableIterator (41 samples, 0.09%)</title><rect x="504.0" y="1765" width="1.1" height="15.0" fill="rgb(248,58,25)" rx="2" ry="2" />
<text  x="507.03" y="1775.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (13 samples, 0.03%)</title><rect x="307.1" y="1541" width="0.3" height="15.0" fill="rgb(239,193,41)" rx="2" ry="2" />
<text  x="310.06" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1749" width="0.1" height="15.0" fill="rgb(250,161,14)" rx="2" ry="2" />
<text  x="58.07" y="1759.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (76 samples, 0.18%)</title><rect x="386.3" y="1637" width="2.1" height="15.0" fill="rgb(231,155,21)" rx="2" ry="2" />
<text  x="389.29" y="1647.5" ></text>
</g>
<g >
<title>__libc_write (4 samples, 0.01%)</title><rect x="220.9" y="1813" width="0.1" height="15.0" fill="rgb(232,67,41)" rx="2" ry="2" />
<text  x="223.90" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (6 samples, 0.01%)</title><rect x="472.4" y="1685" width="0.2" height="15.0" fill="rgb(253,149,19)" rx="2" ry="2" />
<text  x="475.40" y="1695.5" ></text>
</g>
<g >
<title>Schema::GetColumns (6 samples, 0.01%)</title><rect x="455.4" y="1669" width="0.2" height="15.0" fill="rgb(236,213,51)" rx="2" ry="2" />
<text  x="458.40" y="1679.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (737 samples, 1.70%)</title><rect x="380.0" y="1653" width="20.0" height="15.0" fill="rgb(242,170,34)" rx="2" ry="2" />
<text  x="382.95" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="96.3" y="1525" width="0.1" height="15.0" fill="rgb(247,199,29)" rx="2" ry="2" />
<text  x="99.33" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (10 samples, 0.02%)</title><rect x="360.4" y="1605" width="0.3" height="15.0" fill="rgb(225,155,43)" rx="2" ry="2" />
<text  x="363.40" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="236.1" y="1781" width="0.2" height="15.0" fill="rgb(221,145,18)" rx="2" ry="2" />
<text  x="239.10" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (66 samples, 0.15%)</title><rect x="156.0" y="1429" width="1.8" height="15.0" fill="rgb(221,168,45)" rx="2" ry="2" />
<text  x="159.03" y="1439.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (11 samples, 0.03%)</title><rect x="440.1" y="1637" width="0.3" height="15.0" fill="rgb(238,176,28)" rx="2" ry="2" />
<text  x="443.14" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242 samples, 0.56%)</title><rect x="166.6" y="1685" width="6.5" height="15.0" fill="rgb(236,186,39)" rx="2" ry="2" />
<text  x="169.55" y="1695.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (44 samples, 0.10%)</title><rect x="432.4" y="1605" width="1.2" height="15.0" fill="rgb(211,194,14)" rx="2" ry="2" />
<text  x="435.36" y="1615.5" ></text>
</g>
<g >
<title>std::fill_n&lt;char*, unsigned long, char&gt; (42 samples, 0.10%)</title><rect x="323.5" y="1541" width="1.2" height="15.0" fill="rgb(248,203,0)" rx="2" ry="2" />
<text  x="326.54" y="1551.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="133" width="0.1" height="15.0" fill="rgb(219,23,11)" rx="2" ry="2" />
<text  x="61.79" y="143.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="682.3" y="1349" width="0.1" height="15.0" fill="rgb(211,80,0)" rx="2" ry="2" />
<text  x="685.26" y="1359.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (735 samples, 1.69%)</title><rect x="417.4" y="1685" width="20.0" height="15.0" fill="rgb(241,224,30)" rx="2" ry="2" />
<text  x="420.43" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="445.8" y="1621" width="0.1" height="15.0" fill="rgb(232,178,29)" rx="2" ry="2" />
<text  x="448.80" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="224.6" y="1749" width="0.4" height="15.0" fill="rgb(239,76,18)" rx="2" ry="2" />
<text  x="227.62" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (5 samples, 0.01%)</title><rect x="327.8" y="1605" width="0.1" height="15.0" fill="rgb(220,40,38)" rx="2" ry="2" />
<text  x="330.79" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="22.4" y="1765" width="0.3" height="15.0" fill="rgb(224,67,33)" rx="2" ry="2" />
<text  x="25.40" y="1775.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (15 samples, 0.03%)</title><rect x="360.3" y="1653" width="0.4" height="15.0" fill="rgb(219,139,1)" rx="2" ry="2" />
<text  x="363.29" y="1663.5" ></text>
</g>
<g >
<title>[msedge] (23 samples, 0.05%)</title><rect x="20.6" y="1749" width="0.7" height="15.0" fill="rgb(252,81,1)" rx="2" ry="2" />
<text  x="23.63" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (13 samples, 0.03%)</title><rect x="501.7" y="1653" width="0.4" height="15.0" fill="rgb(242,95,3)" rx="2" ry="2" />
<text  x="504.75" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (22 samples, 0.05%)</title><rect x="460.0" y="1653" width="0.6" height="15.0" fill="rgb(236,136,16)" rx="2" ry="2" />
<text  x="463.02" y="1663.5" ></text>
</g>
<g >
<title>ntfs_mapping_pairs_build (15 samples, 0.03%)</title><rect x="676.9" y="1829" width="0.4" height="15.0" fill="rgb(235,120,43)" rx="2" ry="2" />
<text  x="679.88" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="20.3" y="1733" width="0.1" height="15.0" fill="rgb(239,166,21)" rx="2" ry="2" />
<text  x="23.25" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,332 samples, 16.90%)</title><rect x="951.8" y="1701" width="199.4" height="15.0" fill="rgb(250,120,13)" rx="2" ry="2" />
<text  x="954.80" y="1711.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (13 samples, 0.03%)</title><rect x="226.3" y="1685" width="0.3" height="15.0" fill="rgb(223,216,26)" rx="2" ry="2" />
<text  x="229.28" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (384 samples, 0.89%)</title><rect x="278.9" y="1509" width="10.5" height="15.0" fill="rgb(217,24,4)" rx="2" ry="2" />
<text  x="281.94" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="512.5" y="1733" width="0.1" height="15.0" fill="rgb(210,104,46)" rx="2" ry="2" />
<text  x="515.49" y="1743.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1813" width="0.2" height="15.0" fill="rgb(211,159,31)" rx="2" ry="2" />
<text  x="24.48" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="686.9" y="1461" width="0.6" height="15.0" fill="rgb(254,139,36)" rx="2" ry="2" />
<text  x="689.91" y="1471.5" ></text>
</g>
<g >
<title>BufferPoolManager::FetchPage (79 samples, 0.18%)</title><rect x="466.5" y="1733" width="2.1" height="15.0" fill="rgb(223,224,1)" rx="2" ry="2" />
<text  x="469.50" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="21.7" y="1717" width="0.2" height="15.0" fill="rgb(249,158,26)" rx="2" ry="2" />
<text  x="24.75" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (5,023 samples, 11.58%)</title><rect x="522.3" y="1829" width="136.6" height="15.0" fill="rgb(250,116,29)" rx="2" ry="2" />
<text  x="525.31" y="1839.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="480.7" y="1429" width="0.1" height="15.0" fill="rgb(214,166,28)" rx="2" ry="2" />
<text  x="483.67" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (5 samples, 0.01%)</title><rect x="467.4" y="1589" width="0.2" height="15.0" fill="rgb(246,229,18)" rx="2" ry="2" />
<text  x="470.42" y="1599.5" ></text>
</g>
<g >
<title>avahi-daemon (8 samples, 0.02%)</title><rect x="24.4" y="1845" width="0.2" height="15.0" fill="rgb(214,216,49)" rx="2" ry="2" />
<text  x="27.39" y="1855.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (6 samples, 0.01%)</title><rect x="328.1" y="1605" width="0.1" height="15.0" fill="rgb(208,29,47)" rx="2" ry="2" />
<text  x="331.06" y="1615.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;char&gt; (7 samples, 0.02%)</title><rect x="433.3" y="1541" width="0.2" height="15.0" fill="rgb(250,83,29)" rx="2" ry="2" />
<text  x="436.29" y="1551.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (56 samples, 0.13%)</title><rect x="386.6" y="1621" width="1.6" height="15.0" fill="rgb(234,206,0)" rx="2" ry="2" />
<text  x="389.64" y="1631.5" ></text>
</g>
<g >
<title>[libmozjs-68.so.68.6.0] (11 samples, 0.03%)</title><rect x="17.5" y="1749" width="0.3" height="15.0" fill="rgb(245,126,19)" rx="2" ry="2" />
<text  x="20.53" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (7 samples, 0.02%)</title><rect x="431.5" y="1605" width="0.2" height="15.0" fill="rgb(210,13,17)" rx="2" ry="2" />
<text  x="434.52" y="1615.5" ></text>
</g>
<g >
<title>[libwns_push_client.so] (8 samples, 0.02%)</title><rect x="20.7" y="1653" width="0.2" height="15.0" fill="rgb(235,9,26)" rx="2" ry="2" />
<text  x="23.69" y="1663.5" ></text>
</g>
<g >
<title>EventList::update (5 samples, 0.01%)</title><rect x="109.4" y="1749" width="0.2" height="15.0" fill="rgb(208,98,10)" rx="2" ry="2" />
<text  x="112.44" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (483 samples, 1.11%)</title><rect x="1137.8" y="1573" width="13.1" height="15.0" fill="rgb(249,209,1)" rx="2" ry="2" />
<text  x="1140.81" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="480.6" y="1477" width="0.2" height="15.0" fill="rgb(228,110,44)" rx="2" ry="2" />
<text  x="483.61" y="1487.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.6" y="1717" width="0.1" height="15.0" fill="rgb(224,163,5)" rx="2" ry="2" />
<text  x="17.60" y="1727.5" ></text>
</g>
<g >
<title>[code] (41 samples, 0.09%)</title><rect x="11.2" y="1685" width="1.1" height="15.0" fill="rgb(249,144,51)" rx="2" ry="2" />
<text  x="14.20" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (31 samples, 0.07%)</title><rect x="413.5" y="1685" width="0.8" height="15.0" fill="rgb(209,157,12)" rx="2" ry="2" />
<text  x="416.46" y="1695.5" ></text>
</g>
<g >
<title>[code] (60 samples, 0.14%)</title><rect x="57.3" y="1317" width="1.6" height="15.0" fill="rgb(237,148,12)" rx="2" ry="2" />
<text  x="60.30" y="1327.5" ></text>
</g>
<g >
<title>main (9 samples, 0.02%)</title><rect x="687.8" y="1813" width="0.3" height="15.0" fill="rgb(226,200,52)" rx="2" ry="2" />
<text  x="690.84" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="244.0" y="1749" width="0.7" height="15.0" fill="rgb(223,122,2)" rx="2" ry="2" />
<text  x="247.04" y="1759.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockFree (7 samples, 0.02%)</title><rect x="387.5" y="1605" width="0.2" height="15.0" fill="rgb(248,27,29)" rx="2" ry="2" />
<text  x="390.51" y="1615.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (9 samples, 0.02%)</title><rect x="455.2" y="1669" width="0.2" height="15.0" fill="rgb(237,76,14)" rx="2" ry="2" />
<text  x="458.16" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="690.9" y="1717" width="0.2" height="15.0" fill="rgb(228,23,24)" rx="2" ry="2" />
<text  x="693.94" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (7 samples, 0.02%)</title><rect x="431.8" y="1637" width="0.2" height="15.0" fill="rgb(248,68,39)" rx="2" ry="2" />
<text  x="434.82" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (7 samples, 0.02%)</title><rect x="395.6" y="1525" width="0.2" height="15.0" fill="rgb(216,60,17)" rx="2" ry="2" />
<text  x="398.65" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="224.6" y="1781" width="0.4" height="15.0" fill="rgb(221,173,54)" rx="2" ry="2" />
<text  x="227.62" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1749" width="0.1" height="15.0" fill="rgb(239,95,17)" rx="2" ry="2" />
<text  x="233.22" y="1759.5" ></text>
</g>
<g >
<title>std::mutex::lock (5 samples, 0.01%)</title><rect x="496.6" y="1637" width="0.1" height="15.0" fill="rgb(241,209,21)" rx="2" ry="2" />
<text  x="499.58" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1781" width="0.2" height="15.0" fill="rgb(231,14,17)" rx="2" ry="2" />
<text  x="13.44" y="1791.5" ></text>
</g>
<g >
<title>__libc_fork (15 samples, 0.03%)</title><rect x="215.0" y="1829" width="0.4" height="15.0" fill="rgb(208,120,49)" rx="2" ry="2" />
<text  x="218.02" y="1839.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::GetFirstChunkFor (4 samples, 0.01%)</title><rect x="385.7" y="1573" width="0.1" height="15.0" fill="rgb(238,195,24)" rx="2" ry="2" />
<text  x="388.69" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="410.6" y="1429" width="0.1" height="15.0" fill="rgb(233,207,42)" rx="2" ry="2" />
<text  x="413.58" y="1439.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (239 samples, 0.55%)</title><rect x="99.6" y="1733" width="6.5" height="15.0" fill="rgb(244,129,42)" rx="2" ry="2" />
<text  x="102.65" y="1743.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (36 samples, 0.08%)</title><rect x="444.2" y="1685" width="0.9" height="15.0" fill="rgb(245,109,28)" rx="2" ry="2" />
<text  x="447.17" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (37 samples, 0.09%)</title><rect x="433.6" y="1637" width="1.0" height="15.0" fill="rgb(219,95,15)" rx="2" ry="2" />
<text  x="436.61" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="242.7" y="1685" width="0.1" height="15.0" fill="rgb(254,138,30)" rx="2" ry="2" />
<text  x="245.68" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1733" width="0.1" height="15.0" fill="rgb(252,169,12)" rx="2" ry="2" />
<text  x="27.61" y="1743.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42 samples, 0.10%)</title><rect x="120.4" y="1749" width="1.1" height="15.0" fill="rgb(253,99,31)" rx="2" ry="2" />
<text  x="123.40" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="410.6" y="1333" width="0.1" height="15.0" fill="rgb(214,96,30)" rx="2" ry="2" />
<text  x="413.60" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1573" width="0.1" height="15.0" fill="rgb(212,213,35)" rx="2" ry="2" />
<text  x="13.46" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90 samples, 0.21%)</title><rect x="357.3" y="1349" width="2.4" height="15.0" fill="rgb(228,134,33)" rx="2" ry="2" />
<text  x="360.27" y="1359.5" ></text>
</g>
<g >
<title>Row::Row (4 samples, 0.01%)</title><rect x="400.8" y="1669" width="0.1" height="15.0" fill="rgb(240,29,38)" rx="2" ry="2" />
<text  x="403.81" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 0.06%)</title><rect x="684.9" y="1589" width="0.7" height="15.0" fill="rgb(246,116,44)" rx="2" ry="2" />
<text  x="687.87" y="1599.5" ></text>
</g>
<g >
<title>kotlinx.corouti (19 samples, 0.04%)</title><rect x="235.6" y="1845" width="0.5" height="15.0" fill="rgb(249,184,9)" rx="2" ry="2" />
<text  x="238.56" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="235.8" y="1653" width="0.2" height="15.0" fill="rgb(215,198,54)" rx="2" ry="2" />
<text  x="238.80" y="1663.5" ></text>
</g>
<g >
<title>epoll_wait (4 samples, 0.01%)</title><rect x="21.6" y="1685" width="0.1" height="15.0" fill="rgb(236,194,15)" rx="2" ry="2" />
<text  x="24.59" y="1695.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (11 samples, 0.03%)</title><rect x="115.7" y="1733" width="0.3" height="15.0" fill="rgb(250,200,9)" rx="2" ry="2" />
<text  x="118.69" y="1743.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="645" width="0.1" height="15.0" fill="rgb(221,194,20)" rx="2" ry="2" />
<text  x="61.79" y="655.5" ></text>
</g>
<g >
<title>BPlusTree::InternalInsert (6,476 samples, 14.93%)</title><rect x="290.3" y="1733" width="176.1" height="15.0" fill="rgb(251,89,22)" rx="2" ry="2" />
<text  x="293.31" y="1743.5" >BPlusTree::InternalIns..</text>
</g>
<g >
<title>Watcher::notify (5 samples, 0.01%)</title><rect x="163.8" y="1781" width="0.1" height="15.0" fill="rgb(244,190,18)" rx="2" ry="2" />
<text  x="166.81" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="244.7" y="1813" width="0.5" height="15.0" fill="rgb(231,26,30)" rx="2" ry="2" />
<text  x="247.69" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1749" width="0.2" height="15.0" fill="rgb(206,94,25)" rx="2" ry="2" />
<text  x="57.80" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="232.3" y="1797" width="0.1" height="15.0" fill="rgb(241,55,38)" rx="2" ry="2" />
<text  x="235.29" y="1807.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (15 samples, 0.03%)</title><rect x="477.8" y="1749" width="0.4" height="15.0" fill="rgb(229,12,21)" rx="2" ry="2" />
<text  x="480.81" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (26 samples, 0.06%)</title><rect x="413.5" y="1637" width="0.7" height="15.0" fill="rgb(215,147,32)" rx="2" ry="2" />
<text  x="416.54" y="1647.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (20 samples, 0.05%)</title><rect x="313.8" y="1621" width="0.5" height="15.0" fill="rgb(221,32,34)" rx="2" ry="2" />
<text  x="316.81" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1701" width="0.1" height="15.0" fill="rgb(213,30,12)" rx="2" ry="2" />
<text  x="248.21" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="689.3" y="1653" width="0.1" height="15.0" fill="rgb(224,220,36)" rx="2" ry="2" />
<text  x="692.31" y="1663.5" ></text>
</g>
<g >
<title>__libc_calloc (12 samples, 0.03%)</title><rect x="633.2" y="1813" width="0.3" height="15.0" fill="rgb(250,224,35)" rx="2" ry="2" />
<text  x="636.17" y="1823.5" ></text>
</g>
<g >
<title>operator new[] (6 samples, 0.01%)</title><rect x="116.1" y="1733" width="0.1" height="15.0" fill="rgb(225,121,42)" rx="2" ry="2" />
<text  x="119.07" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (84 samples, 0.19%)</title><rect x="357.4" y="1333" width="2.3" height="15.0" fill="rgb(238,208,21)" rx="2" ry="2" />
<text  x="360.43" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,157 samples, 2.67%)</title><rect x="600.4" y="1717" width="31.5" height="15.0" fill="rgb(238,210,12)" rx="2" ry="2" />
<text  x="603.39" y="1727.5" >[[..</text>
</g>
<g >
<title>ntfs_mapping_pairs_decompress (220 samples, 0.51%)</title><rect x="650.1" y="1813" width="6.0" height="15.0" fill="rgb(247,99,1)" rx="2" ry="2" />
<text  x="653.09" y="1823.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="21.4" y="1701" width="0.1" height="15.0" fill="rgb(217,107,7)" rx="2" ry="2" />
<text  x="24.37" y="1711.5" ></text>
</g>
<g >
<title>Type::GetInstance (7 samples, 0.02%)</title><rect x="299.7" y="1605" width="0.2" height="15.0" fill="rgb(245,95,33)" rx="2" ry="2" />
<text  x="302.69" y="1615.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (32 samples, 0.07%)</title><rect x="476.9" y="1733" width="0.9" height="15.0" fill="rgb(237,219,37)" rx="2" ry="2" />
<text  x="479.91" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="289.2" y="1333" width="0.2" height="15.0" fill="rgb(214,210,19)" rx="2" ry="2" />
<text  x="292.22" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (146 samples, 0.34%)</title><rect x="627.9" y="1557" width="3.9" height="15.0" fill="rgb(230,12,16)" rx="2" ry="2" />
<text  x="630.86" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83 samples, 0.19%)</title><rect x="590.5" y="1445" width="2.3" height="15.0" fill="rgb(224,135,49)" rx="2" ry="2" />
<text  x="593.52" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.01%)</title><rect x="214.1" y="1813" width="0.1" height="15.0" fill="rgb(230,47,31)" rx="2" ry="2" />
<text  x="217.07" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (26 samples, 0.06%)</title><rect x="435.6" y="1605" width="0.7" height="15.0" fill="rgb(249,132,49)" rx="2" ry="2" />
<text  x="438.63" y="1615.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (4 samples, 0.01%)</title><rect x="471.9" y="1621" width="0.1" height="15.0" fill="rgb(245,204,1)" rx="2" ry="2" />
<text  x="474.94" y="1631.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="16.3" y="1509" width="0.3" height="15.0" fill="rgb(251,193,3)" rx="2" ry="2" />
<text  x="19.31" y="1519.5" ></text>
</g>
<g >
<title>read (245 samples, 0.56%)</title><rect x="246.9" y="1813" width="6.7" height="15.0" fill="rgb(212,134,44)" rx="2" ry="2" />
<text  x="249.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (4 samples, 0.01%)</title><rect x="469.8" y="1685" width="0.1" height="15.0" fill="rgb(234,139,19)" rx="2" ry="2" />
<text  x="472.82" y="1695.5" ></text>
</g>
<g >
<title>TablePage::GetTuple (171 samples, 0.39%)</title><rect x="487.7" y="1733" width="4.7" height="15.0" fill="rgb(248,166,44)" rx="2" ry="2" />
<text  x="490.74" y="1743.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (34 samples, 0.08%)</title><rect x="484.3" y="1701" width="0.9" height="15.0" fill="rgb(230,216,3)" rx="2" ry="2" />
<text  x="487.28" y="1711.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;char*, unsigned long, char&gt; (4 samples, 0.01%)</title><rect x="502.2" y="1605" width="0.1" height="15.0" fill="rgb(236,68,16)" rx="2" ry="2" />
<text  x="505.18" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (18 samples, 0.04%)</title><rect x="682.0" y="1509" width="0.5" height="15.0" fill="rgb(213,46,37)" rx="2" ry="2" />
<text  x="685.02" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1525" width="0.3" height="15.0" fill="rgb(240,108,46)" rx="2" ry="2" />
<text  x="413.39" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (58 samples, 0.13%)</title><rect x="398.4" y="1621" width="1.6" height="15.0" fill="rgb(213,107,26)" rx="2" ry="2" />
<text  x="401.42" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (15 samples, 0.03%)</title><rect x="444.6" y="1621" width="0.4" height="15.0" fill="rgb(208,34,37)" rx="2" ry="2" />
<text  x="447.58" y="1631.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (21 samples, 0.05%)</title><rect x="213.2" y="1829" width="0.6" height="15.0" fill="rgb(251,228,15)" rx="2" ry="2" />
<text  x="216.23" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1781" width="0.1" height="15.0" fill="rgb(241,43,32)" rx="2" ry="2" />
<text  x="233.22" y="1791.5" ></text>
</g>
<g >
<title>[code] (162 samples, 0.37%)</title><rect x="55.2" y="1701" width="4.4" height="15.0" fill="rgb(222,167,23)" rx="2" ry="2" />
<text  x="58.23" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1733" width="0.1" height="15.0" fill="rgb(251,127,49)" rx="2" ry="2" />
<text  x="223.90" y="1743.5" ></text>
</g>
<g >
<title>_int_free (41 samples, 0.09%)</title><rect x="245.8" y="1813" width="1.1" height="15.0" fill="rgb(214,123,43)" rx="2" ry="2" />
<text  x="248.78" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="1189.3" y="1605" width="0.1" height="15.0" fill="rgb(229,213,35)" rx="2" ry="2" />
<text  x="1192.27" y="1615.5" ></text>
</g>
<g >
<title>[code] (8 samples, 0.02%)</title><rect x="26.9" y="1797" width="0.2" height="15.0" fill="rgb(234,228,22)" rx="2" ry="2" />
<text  x="29.92" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%)</title><rect x="1187.4" y="1813" width="0.2" height="15.0" fill="rgb(216,76,5)" rx="2" ry="2" />
<text  x="1190.36" y="1823.5" ></text>
</g>
<g >
<title>BlockHeader::SetBlockSize (6 samples, 0.01%)</title><rect x="489.3" y="1621" width="0.1" height="15.0" fill="rgb(234,122,28)" rx="2" ry="2" />
<text  x="492.26" y="1631.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.02%)</title><rect x="23.8" y="1829" width="0.2" height="15.0" fill="rgb(209,14,20)" rx="2" ry="2" />
<text  x="26.79" y="1839.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="277" width="0.1" height="15.0" fill="rgb(223,21,53)" rx="2" ry="2" />
<text  x="61.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_fill_initialize (73 samples, 0.17%)</title><rect x="394.4" y="1621" width="2.0" height="15.0" fill="rgb(227,43,25)" rx="2" ry="2" />
<text  x="397.39" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="230.8" y="1829" width="0.2" height="15.0" fill="rgb(209,38,45)" rx="2" ry="2" />
<text  x="233.80" y="1839.5" ></text>
</g>
<g >
<title>Watcher::notify (45 samples, 0.10%)</title><rect x="161.5" y="1765" width="1.3" height="15.0" fill="rgb(249,110,54)" rx="2" ry="2" />
<text  x="164.55" y="1775.5" ></text>
</g>
<g >
<title>DirTree::update (4 samples, 0.01%)</title><rect x="109.3" y="1749" width="0.1" height="15.0" fill="rgb(230,44,5)" rx="2" ry="2" />
<text  x="112.33" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (9 samples, 0.02%)</title><rect x="501.8" y="1637" width="0.2" height="15.0" fill="rgb(225,116,50)" rx="2" ry="2" />
<text  x="504.77" y="1647.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Field*&gt; (30 samples, 0.07%)</title><rect x="508.5" y="1733" width="0.8" height="15.0" fill="rgb(241,202,52)" rx="2" ry="2" />
<text  x="511.52" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="231.7" y="1781" width="0.2" height="15.0" fill="rgb(226,72,2)" rx="2" ry="2" />
<text  x="234.69" y="1791.5" ></text>
</g>
<g >
<title>ntfs_malloc (10 samples, 0.02%)</title><rect x="649.5" y="1813" width="0.3" height="15.0" fill="rgb(221,169,19)" rx="2" ry="2" />
<text  x="652.54" y="1823.5" ></text>
</g>
<g >
<title>ExecuteEngine::~ExecuteEngine (8 samples, 0.02%)</title><rect x="511.2" y="1797" width="0.2" height="15.0" fill="rgb(224,87,17)" rx="2" ry="2" />
<text  x="514.21" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (811 samples, 1.87%)</title><rect x="609.8" y="1637" width="22.1" height="15.0" fill="rgb(218,115,27)" rx="2" ry="2" />
<text  x="612.81" y="1647.5" >[..</text>
</g>
<g >
<title>TypeChar::DeserializeFrom (33 samples, 0.08%)</title><rect x="488.7" y="1685" width="0.9" height="15.0" fill="rgb(233,196,41)" rx="2" ry="2" />
<text  x="491.66" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1701" width="0.1" height="15.0" fill="rgb(206,57,31)" rx="2" ry="2" />
<text  x="13.46" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="215.0" y="1733" width="0.4" height="15.0" fill="rgb(220,42,12)" rx="2" ry="2" />
<text  x="218.02" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (482 samples, 1.11%)</title><rect x="41.5" y="1685" width="13.1" height="15.0" fill="rgb(208,130,6)" rx="2" ry="2" />
<text  x="44.47" y="1695.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (5 samples, 0.01%)</title><rect x="326.5" y="1573" width="0.2" height="15.0" fill="rgb(253,226,35)" rx="2" ry="2" />
<text  x="329.53" y="1583.5" ></text>
</g>
<g >
<title>BufferPoolManager::IsPageFree (45 samples, 0.10%)</title><rect x="466.8" y="1717" width="1.2" height="15.0" fill="rgb(254,131,35)" rx="2" ry="2" />
<text  x="469.77" y="1727.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (8 samples, 0.02%)</title><rect x="496.5" y="1669" width="0.2" height="15.0" fill="rgb(238,118,16)" rx="2" ry="2" />
<text  x="499.50" y="1679.5" ></text>
</g>
<g >
<title>vpnagentd (7 samples, 0.02%)</title><rect x="1188.8" y="1845" width="0.2" height="15.0" fill="rgb(213,111,19)" rx="2" ry="2" />
<text  x="1191.78" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="104.9" y="1637" width="1.2" height="15.0" fill="rgb(228,198,23)" rx="2" ry="2" />
<text  x="107.87" y="1647.5" ></text>
</g>
<g >
<title>[libminisql_shared.so] (8 samples, 0.02%)</title><rect x="455.6" y="1669" width="0.2" height="15.0" fill="rgb(209,63,28)" rx="2" ry="2" />
<text  x="458.62" y="1679.5" ></text>
</g>
<g >
<title>start_thread (3,932 samples, 9.06%)</title><rect x="106.1" y="1829" width="107.0" height="15.0" fill="rgb(251,24,47)" rx="2" ry="2" />
<text  x="109.15" y="1839.5" >start_thread</text>
</g>
<g >
<title>std::__detail::_Select1st::operator (4 samples, 0.01%)</title><rect x="413.9" y="1589" width="0.1" height="15.0" fill="rgb(235,229,25)" rx="2" ry="2" />
<text  x="416.90" y="1599.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="197" width="0.1" height="15.0" fill="rgb(218,169,30)" rx="2" ry="2" />
<text  x="61.79" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="214.2" y="1781" width="0.1" height="15.0" fill="rgb(233,37,1)" rx="2" ry="2" />
<text  x="217.18" y="1791.5" ></text>
</g>
<g >
<title>Field::GetLength (7 samples, 0.02%)</title><rect x="416.8" y="1653" width="0.2" height="15.0" fill="rgb(253,18,18)" rx="2" ry="2" />
<text  x="419.81" y="1663.5" ></text>
</g>
<g >
<title>v8::Function::Call (4 samples, 0.01%)</title><rect x="59.0" y="1429" width="0.1" height="15.0" fill="rgb(245,150,47)" rx="2" ry="2" />
<text  x="61.96" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.03%)</title><rect x="556.1" y="1781" width="0.3" height="15.0" fill="rgb(225,12,33)" rx="2" ry="2" />
<text  x="559.06" y="1791.5" ></text>
</g>
<g >
<title>ExecuteEngine::ExecuteCreateIndex (8,121 samples, 18.72%)</title><rect x="289.4" y="1781" width="220.9" height="15.0" fill="rgb(205,79,24)" rx="2" ry="2" />
<text  x="292.41" y="1791.5" >ExecuteEngine::ExecuteCreateI..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (426 samples, 0.98%)</title><rect x="348.1" y="1557" width="11.6" height="15.0" fill="rgb(229,20,30)" rx="2" ry="2" />
<text  x="351.13" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="238.2" y="1797" width="0.6" height="15.0" fill="rgb(214,140,9)" rx="2" ry="2" />
<text  x="241.17" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="457.1" y="1653" width="0.1" height="15.0" fill="rgb(233,125,26)" rx="2" ry="2" />
<text  x="460.11" y="1663.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (21 samples, 0.05%)</title><rect x="508.7" y="1669" width="0.6" height="15.0" fill="rgb(244,221,22)" rx="2" ry="2" />
<text  x="511.71" y="1679.5" ></text>
</g>
<g >
<title>TableIterator::TableIterator (390 samples, 0.90%)</title><rect x="492.8" y="1733" width="10.6" height="15.0" fill="rgb(220,135,35)" rx="2" ry="2" />
<text  x="495.77" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (418 samples, 0.96%)</title><rect x="535.5" y="1605" width="11.3" height="15.0" fill="rgb(253,175,45)" rx="2" ry="2" />
<text  x="538.47" y="1615.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1125" width="1.0" height="15.0" fill="rgb(207,117,43)" rx="2" ry="2" />
<text  x="60.90" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="235.2" y="1653" width="0.1" height="15.0" fill="rgb(224,211,36)" rx="2" ry="2" />
<text  x="238.23" y="1663.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (73 samples, 0.17%)</title><rect x="402.2" y="1637" width="2.0" height="15.0" fill="rgb(212,26,46)" rx="2" ry="2" />
<text  x="405.17" y="1647.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::operator[] (99 samples, 0.23%)</title><rect x="372.7" y="1669" width="2.7" height="15.0" fill="rgb(251,52,11)" rx="2" ry="2" />
<text  x="375.74" y="1679.5" ></text>
</g>
<g >
<title>[code] (35 samples, 0.08%)</title><rect x="15.7" y="1653" width="1.0" height="15.0" fill="rgb(230,159,11)" rx="2" ry="2" />
<text  x="18.71" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="25.2" y="1701" width="0.1" height="15.0" fill="rgb(217,3,13)" rx="2" ry="2" />
<text  x="28.18" y="1711.5" ></text>
</g>
<g >
<title>geoclue (24 samples, 0.06%)</title><rect x="223.8" y="1845" width="0.7" height="15.0" fill="rgb(247,52,11)" rx="2" ry="2" />
<text  x="226.83" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="681.3" y="1605" width="0.4" height="15.0" fill="rgb(226,151,47)" rx="2" ry="2" />
<text  x="684.28" y="1615.5" ></text>
</g>
<g >
<title>[ntfs-3g] (13 samples, 0.03%)</title><rect x="555.7" y="1781" width="0.4" height="15.0" fill="rgb(234,50,38)" rx="2" ry="2" />
<text  x="558.71" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="685.9" y="1669" width="1.6" height="15.0" fill="rgb(211,126,4)" rx="2" ry="2" />
<text  x="688.85" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="242.7" y="1669" width="0.1" height="15.0" fill="rgb(253,129,54)" rx="2" ry="2" />
<text  x="245.71" y="1679.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (7 samples, 0.02%)</title><rect x="487.0" y="1685" width="0.2" height="15.0" fill="rgb(218,92,43)" rx="2" ry="2" />
<text  x="490.03" y="1695.5" ></text>
</g>
<g >
<title>wpa_supplicant (34 samples, 0.08%)</title><rect x="1189.0" y="1845" width="0.9" height="15.0" fill="rgb(217,225,38)" rx="2" ry="2" />
<text  x="1191.97" y="1855.5" ></text>
</g>
<g >
<title>__libc_send (5 samples, 0.01%)</title><rect x="14.8" y="1829" width="0.1" height="15.0" fill="rgb(210,61,26)" rx="2" ry="2" />
<text  x="17.79" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="410.5" y="1461" width="0.2" height="15.0" fill="rgb(239,99,20)" rx="2" ry="2" />
<text  x="413.52" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="689.1" y="1701" width="0.3" height="15.0" fill="rgb(247,179,28)" rx="2" ry="2" />
<text  x="692.14" y="1711.5" ></text>
</g>
<g >
<title>Page::GetData (4 samples, 0.01%)</title><rect x="442.8" y="1701" width="0.1" height="15.0" fill="rgb(241,44,52)" rx="2" ry="2" />
<text  x="445.75" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="238.7" y="1669" width="0.1" height="15.0" fill="rgb(242,61,8)" rx="2" ry="2" />
<text  x="241.66" y="1679.5" ></text>
</g>
<g >
<title>GetCmpBool (7 samples, 0.02%)</title><rect x="379.3" y="1637" width="0.2" height="15.0" fill="rgb(215,129,51)" rx="2" ry="2" />
<text  x="382.30" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,625 samples, 38.32%)</title><rect x="699.0" y="1813" width="452.2" height="15.0" fill="rgb(236,106,5)" rx="2" ry="2" />
<text  x="702.04" y="1823.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, DirEntry&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="116.2" y="1733" width="0.2" height="15.0" fill="rgb(247,74,26)" rx="2" ry="2" />
<text  x="119.24" y="1743.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Allocate (33 samples, 0.08%)</title><rect x="474.3" y="1733" width="0.9" height="15.0" fill="rgb(234,120,53)" rx="2" ry="2" />
<text  x="477.28" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 0.07%)</title><rect x="688.6" y="1829" width="0.8" height="15.0" fill="rgb(217,133,12)" rx="2" ry="2" />
<text  x="691.63" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="211.9" y="1701" width="0.3" height="15.0" fill="rgb(254,95,38)" rx="2" ry="2" />
<text  x="214.89" y="1711.5" ></text>
</g>
<g >
<title>[code] (11 samples, 0.03%)</title><rect x="16.3" y="1541" width="0.3" height="15.0" fill="rgb(218,0,21)" rx="2" ry="2" />
<text  x="19.28" y="1551.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 0.11%)</title><rect x="686.2" y="1557" width="1.3" height="15.0" fill="rgb(235,219,1)" rx="2" ry="2" />
<text  x="689.21" y="1567.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (196 samples, 0.45%)</title><rect x="200.1" y="1621" width="5.3" height="15.0" fill="rgb(242,94,18)" rx="2" ry="2" />
<text  x="203.09" y="1631.5" ></text>
</g>
<g >
<title>Schema::GetColumns (4 samples, 0.01%)</title><rect x="436.6" y="1669" width="0.1" height="15.0" fill="rgb(251,13,20)" rx="2" ry="2" />
<text  x="439.55" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1621" width="0.3" height="15.0" fill="rgb(226,177,53)" rx="2" ry="2" />
<text  x="413.39" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="11.7" y="1525" width="0.1" height="15.0" fill="rgb(239,71,51)" rx="2" ry="2" />
<text  x="14.66" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="235.2" y="1781" width="0.2" height="15.0" fill="rgb(210,72,21)" rx="2" ry="2" />
<text  x="238.20" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="15.0" y="1765" width="0.3" height="15.0" fill="rgb(223,4,47)" rx="2" ry="2" />
<text  x="17.95" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (896 samples, 2.07%)</title><rect x="133.5" y="1589" width="24.4" height="15.0" fill="rgb(247,75,31)" rx="2" ry="2" />
<text  x="136.48" y="1599.5" >[..</text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="488.6" y="1685" width="0.1" height="15.0" fill="rgb(238,110,41)" rx="2" ry="2" />
<text  x="491.55" y="1695.5" ></text>
</g>
<g >
<title>__GI___execve (9 samples, 0.02%)</title><rect x="54.8" y="1829" width="0.2" height="15.0" fill="rgb(233,198,36)" rx="2" ry="2" />
<text  x="57.80" y="1839.5" ></text>
</g>
<g >
<title>operator new[] (9 samples, 0.02%)</title><rect x="158.9" y="1717" width="0.2" height="15.0" fill="rgb(254,33,6)" rx="2" ry="2" />
<text  x="161.86" y="1727.5" ></text>
</g>
<g >
<title>ntfs_attr_lookup (15 samples, 0.03%)</title><rect x="673.8" y="1829" width="0.4" height="15.0" fill="rgb(254,77,10)" rx="2" ry="2" />
<text  x="676.80" y="1839.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.03%)</title><rect x="635.6" y="1813" width="0.4" height="15.0" fill="rgb(235,153,14)" rx="2" ry="2" />
<text  x="638.62" y="1823.5" ></text>
</g>
<g >
<title>[msedge] (24 samples, 0.06%)</title><rect x="12.4" y="1685" width="0.7" height="15.0" fill="rgb(234,124,9)" rx="2" ry="2" />
<text  x="15.45" y="1695.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (8 samples, 0.02%)</title><rect x="452.3" y="1589" width="0.2" height="15.0" fill="rgb(244,48,52)" rx="2" ry="2" />
<text  x="455.30" y="1599.5" ></text>
</g>
<g >
<title>DiskManager::ReadPhysicalPage (13 samples, 0.03%)</title><rect x="410.4" y="1669" width="0.3" height="15.0" fill="rgb(230,208,40)" rx="2" ry="2" />
<text  x="413.36" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;char*, unsigned long, char, char&gt; (50 samples, 0.12%)</title><rect x="432.2" y="1621" width="1.4" height="15.0" fill="rgb(235,40,32)" rx="2" ry="2" />
<text  x="435.20" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="13.3" y="1797" width="0.5" height="15.0" fill="rgb(223,184,48)" rx="2" ry="2" />
<text  x="16.35" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1653" width="0.1" height="15.0" fill="rgb(221,59,48)" rx="2" ry="2" />
<text  x="13.46" y="1663.5" ></text>
</g>
<g >
<title>__strncpy_avx2 (29 samples, 0.07%)</title><rect x="639.8" y="1813" width="0.8" height="15.0" fill="rgb(216,56,24)" rx="2" ry="2" />
<text  x="642.78" y="1823.5" ></text>
</g>
<g >
<title>[code] (13 samples, 0.03%)</title><rect x="58.5" y="837" width="0.4" height="15.0" fill="rgb(240,64,48)" rx="2" ry="2" />
<text  x="61.55" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="224.6" y="1797" width="0.4" height="15.0" fill="rgb(214,38,45)" rx="2" ry="2" />
<text  x="227.62" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (36 samples, 0.08%)</title><rect x="445.4" y="1669" width="1.0" height="15.0" fill="rgb(238,108,51)" rx="2" ry="2" />
<text  x="448.39" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;Column*, std::allocator&lt;Column*&gt; &gt;::operator[] (5 samples, 0.01%)</title><rect x="316.9" y="1621" width="0.2" height="15.0" fill="rgb(242,58,16)" rx="2" ry="2" />
<text  x="319.93" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (46 samples, 0.11%)</title><rect x="460.7" y="1669" width="1.3" height="15.0" fill="rgb(249,162,11)" rx="2" ry="2" />
<text  x="463.70" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="215.0" y="1717" width="0.4" height="15.0" fill="rgb(226,54,22)" rx="2" ry="2" />
<text  x="218.05" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17 samples, 0.04%)</title><rect x="238.9" y="1829" width="0.4" height="15.0" fill="rgb(209,54,51)" rx="2" ry="2" />
<text  x="241.87" y="1839.5" ></text>
</g>
<g >
<title>ntfs_mft_records_write (9 samples, 0.02%)</title><rect x="677.4" y="1829" width="0.2" height="15.0" fill="rgb(233,136,3)" rx="2" ry="2" />
<text  x="680.37" y="1839.5" ></text>
</g>
<g >
<title>ieee80211_rx_list (5 samples, 0.01%)</title><rect x="235.1" y="1669" width="0.1" height="15.0" fill="rgb(207,208,12)" rx="2" ry="2" />
<text  x="238.07" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="480.3" y="1589" width="0.5" height="15.0" fill="rgb(253,228,7)" rx="2" ry="2" />
<text  x="483.26" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34 samples, 0.08%)</title><rect x="680.8" y="1637" width="0.9" height="15.0" fill="rgb(211,103,7)" rx="2" ry="2" />
<text  x="683.82" y="1647.5" ></text>
</g>
<g >
<title>[code] (9 samples, 0.02%)</title><rect x="59.8" y="1685" width="0.2" height="15.0" fill="rgb(243,130,45)" rx="2" ry="2" />
<text  x="62.80" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (89 samples, 0.21%)</title><rect x="209.7" y="1781" width="2.5" height="15.0" fill="rgb(209,25,26)" rx="2" ry="2" />
<text  x="212.74" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1717" width="0.1" height="15.0" fill="rgb(241,226,34)" rx="2" ry="2" />
<text  x="233.22" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 0.10%)</title><rect x="1184.0" y="1429" width="1.2" height="15.0" fill="rgb(216,211,44)" rx="2" ry="2" />
<text  x="1187.02" y="1439.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="221.9" y="1749" width="0.1" height="15.0" fill="rgb(241,224,36)" rx="2" ry="2" />
<text  x="224.90" y="1759.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (23 samples, 0.05%)</title><rect x="60.2" y="1717" width="0.6" height="15.0" fill="rgb(229,81,51)" rx="2" ry="2" />
<text  x="63.18" y="1727.5" ></text>
</g>
<g >
<title>TypeChar::DeserializeFrom (43 samples, 0.10%)</title><rect x="498.8" y="1653" width="1.1" height="15.0" fill="rgb(254,177,17)" rx="2" ry="2" />
<text  x="501.75" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::~vector (66 samples, 0.15%)</title><rect x="508.5" y="1765" width="1.8" height="15.0" fill="rgb(212,146,25)" rx="2" ry="2" />
<text  x="511.49" y="1775.5" ></text>
</g>
<g >
<title>BPlusTreeIndex::InsertEntry (6,731 samples, 15.51%)</title><rect x="290.0" y="1765" width="183.0" height="15.0" fill="rgb(253,93,23)" rx="2" ry="2" />
<text  x="292.95" y="1775.5" >BPlusTreeIndex::InsertE..</text>
</g>
<g >
<title>std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, Event&gt; &gt; &gt;::find&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; (16 samples, 0.04%)</title><rect x="113.9" y="1701" width="0.4" height="15.0" fill="rgb(214,31,31)" rx="2" ry="2" />
<text  x="116.87" y="1711.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="59.0" y="1397" width="0.1" height="15.0" fill="rgb(240,145,0)" rx="2" ry="2" />
<text  x="61.96" y="1407.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="12.0" y="1525" width="0.3" height="15.0" fill="rgb(251,54,2)" rx="2" ry="2" />
<text  x="15.01" y="1535.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (6 samples, 0.01%)</title><rect x="118.9" y="1733" width="0.2" height="15.0" fill="rgb(215,1,3)" rx="2" ry="2" />
<text  x="121.93" y="1743.5" ></text>
</g>
<g >
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::insert (4 samples, 0.01%)</title><rect x="119.4" y="1733" width="0.1" height="15.0" fill="rgb(237,192,12)" rx="2" ry="2" />
<text  x="122.39" y="1743.5" ></text>
</g>
<g >
<title>cat (26 samples, 0.06%)</title><rect x="24.6" y="1845" width="0.7" height="15.0" fill="rgb(254,104,13)" rx="2" ry="2" />
<text  x="27.61" y="1855.5" ></text>
</g>
<g >
<title>read (5 samples, 0.01%)</title><rect x="688.2" y="1797" width="0.2" height="15.0" fill="rgb(230,90,24)" rx="2" ry="2" />
<text  x="691.25" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 0.06%)</title><rect x="686.8" y="1477" width="0.7" height="15.0" fill="rgb(224,217,38)" rx="2" ry="2" />
<text  x="689.78" y="1487.5" ></text>
</g>
<g >
<title>Schema::GetColumns (10 samples, 0.02%)</title><rect x="330.1" y="1637" width="0.3" height="15.0" fill="rgb(239,170,29)" rx="2" ry="2" />
<text  x="333.12" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="230.1" y="1813" width="0.1" height="15.0" fill="rgb(223,76,26)" rx="2" ry="2" />
<text  x="233.06" y="1823.5" ></text>
</g>
<g >
<title>[code] (15 samples, 0.03%)</title><rect x="58.5" y="869" width="0.4" height="15.0" fill="rgb(244,169,47)" rx="2" ry="2" />
<text  x="61.49" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="221.2" y="1717" width="0.2" height="15.0" fill="rgb(209,140,21)" rx="2" ry="2" />
<text  x="224.20" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,094 samples, 25.57%)</title><rect x="849.5" y="1717" width="301.7" height="15.0" fill="rgb(249,183,25)" rx="2" ry="2" />
<text  x="852.48" y="1727.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>Field::CompareGreaterThan (16 samples, 0.04%)</title><rect x="448.1" y="1701" width="0.4" height="15.0" fill="rgb(235,6,25)" rx="2" ry="2" />
<text  x="451.11" y="1711.5" ></text>
</g>
<g >
<title>Row::DeserializeFrom (1,074 samples, 2.48%)</title><rect x="300.9" y="1637" width="29.2" height="15.0" fill="rgb(216,159,12)" rx="2" ry="2" />
<text  x="303.91" y="1647.5" >Ro..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="239.2" y="1701" width="0.1" height="15.0" fill="rgb(236,222,48)" rx="2" ry="2" />
<text  x="242.17" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,221 samples, 2.81%)</title><rect x="1118.0" y="1653" width="33.2" height="15.0" fill="rgb(241,196,4)" rx="2" ry="2" />
<text  x="1121.01" y="1663.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (69 samples, 0.16%)</title><rect x="679.9" y="1749" width="1.8" height="15.0" fill="rgb(222,210,44)" rx="2" ry="2" />
<text  x="682.87" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (24 samples, 0.06%)</title><rect x="409.5" y="1637" width="0.7" height="15.0" fill="rgb(208,20,37)" rx="2" ry="2" />
<text  x="412.52" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="55.1" y="1701" width="0.1" height="15.0" fill="rgb(247,99,28)" rx="2" ry="2" />
<text  x="58.07" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="241.8" y="1669" width="0.1" height="15.0" fill="rgb(238,137,27)" rx="2" ry="2" />
<text  x="244.78" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12 samples, 0.03%)</title><rect x="479.6" y="1653" width="0.4" height="15.0" fill="rgb(250,1,29)" rx="2" ry="2" />
<text  x="482.63" y="1663.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (39 samples, 0.09%)</title><rect x="161.6" y="1749" width="1.1" height="15.0" fill="rgb(218,134,43)" rx="2" ry="2" />
<text  x="164.63" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (5 samples, 0.01%)</title><rect x="456.7" y="1669" width="0.1" height="15.0" fill="rgb(210,36,40)" rx="2" ry="2" />
<text  x="459.71" y="1679.5" ></text>
</g>
<g >
<title>[code] (20 samples, 0.05%)</title><rect x="16.1" y="1589" width="0.5" height="15.0" fill="rgb(209,48,20)" rx="2" ry="2" />
<text  x="19.09" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="22.4" y="1781" width="0.3" height="15.0" fill="rgb(243,144,45)" rx="2" ry="2" />
<text  x="25.38" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (7 samples, 0.02%)</title><rect x="471.4" y="1669" width="0.2" height="15.0" fill="rgb(251,3,11)" rx="2" ry="2" />
<text  x="474.42" y="1679.5" ></text>
</g>
<g >
<title>[code] (10 samples, 0.02%)</title><rect x="59.1" y="1461" width="0.3" height="15.0" fill="rgb(238,184,11)" rx="2" ry="2" />
<text  x="62.12" y="1471.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (18 samples, 0.04%)</title><rect x="163.0" y="1765" width="0.5" height="15.0" fill="rgb(239,225,32)" rx="2" ry="2" />
<text  x="166.05" y="1775.5" ></text>
</g>
<g >
<title>Row::GetSerializedSize (5 samples, 0.01%)</title><rect x="470.2" y="1733" width="0.1" height="15.0" fill="rgb(221,149,5)" rx="2" ry="2" />
<text  x="473.20" y="1743.5" ></text>
</g>
<g >
<title>[libjvm.so] (7 samples, 0.02%)</title><rect x="22.0" y="1813" width="0.2" height="15.0" fill="rgb(243,35,9)" rx="2" ry="2" />
<text  x="24.99" y="1823.5" ></text>
</g>
<g >
<title>ntfs_write_significant_bytes (6 samples, 0.01%)</title><rect x="678.1" y="1829" width="0.2" height="15.0" fill="rgb(228,196,50)" rx="2" ry="2" />
<text  x="681.13" y="1839.5" ></text>
</g>
<g >
<title>[code] (78 samples, 0.18%)</title><rect x="56.8" y="1381" width="2.1" height="15.0" fill="rgb(210,56,27)" rx="2" ry="2" />
<text  x="59.81" y="1391.5" ></text>
</g>
<g >
<title>std::fill_n&lt;char*, unsigned long, char&gt; (34 samples, 0.08%)</title><rect x="395.4" y="1557" width="0.9" height="15.0" fill="rgb(228,51,14)" rx="2" ry="2" />
<text  x="398.40" y="1567.5" ></text>
</g>
<g >
<title>Page::WUnlatch (9 samples, 0.02%)</title><rect x="368.0" y="1669" width="0.2" height="15.0" fill="rgb(251,32,12)" rx="2" ry="2" />
<text  x="370.96" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (682 samples, 1.57%)</title><rect x="528.3" y="1685" width="18.5" height="15.0" fill="rgb(254,105,49)" rx="2" ry="2" />
<text  x="531.29" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="683.3" y="1797" width="0.3" height="15.0" fill="rgb(238,42,53)" rx="2" ry="2" />
<text  x="686.27" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="214.2" y="1749" width="0.1" height="15.0" fill="rgb(220,105,23)" rx="2" ry="2" />
<text  x="217.18" y="1759.5" ></text>
</g>
<g >
<title>[msedge] (8 samples, 0.02%)</title><rect x="21.5" y="1781" width="0.2" height="15.0" fill="rgb(252,209,24)" rx="2" ry="2" />
<text  x="24.48" y="1791.5" ></text>
</g>
<g >
<title>[msedge] (14 samples, 0.03%)</title><rect x="13.9" y="1653" width="0.4" height="15.0" fill="rgb(215,209,11)" rx="2" ry="2" />
<text  x="16.94" y="1663.5" ></text>
</g>
<g >
<title>BufferPoolManager::UnpinPage (51 samples, 0.12%)</title><rect x="446.4" y="1717" width="1.4" height="15.0" fill="rgb(234,140,9)" rx="2" ry="2" />
<text  x="449.42" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.03%)</title><rect x="346.7" y="1573" width="0.3" height="15.0" fill="rgb(235,151,43)" rx="2" ry="2" />
<text  x="349.69" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="18.6" y="1797" width="0.2" height="15.0" fill="rgb(247,131,38)" rx="2" ry="2" />
<text  x="21.65" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="235.7" y="1749" width="0.3" height="15.0" fill="rgb(229,92,9)" rx="2" ry="2" />
<text  x="238.75" y="1759.5" ></text>
</g>
<g >
<title>ps (17 samples, 0.04%)</title><rect x="688.2" y="1845" width="0.4" height="15.0" fill="rgb(244,28,8)" rx="2" ry="2" />
<text  x="691.16" y="1855.5" ></text>
</g>
<g >
<title>ntfs_rl_vcn_to_lcn (6 samples, 0.01%)</title><rect x="678.0" y="1829" width="0.1" height="15.0" fill="rgb(209,8,8)" rx="2" ry="2" />
<text  x="680.96" y="1839.5" ></text>
</g>
<g >
<title>[code] (46 samples, 0.11%)</title><rect x="57.7" y="1253" width="1.2" height="15.0" fill="rgb(241,147,22)" rx="2" ry="2" />
<text  x="60.68" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (265 samples, 0.61%)</title><rect x="165.9" y="1701" width="7.2" height="15.0" fill="rgb(247,39,48)" rx="2" ry="2" />
<text  x="168.93" y="1711.5" ></text>
</g>
<g >
<title>Field::Field (72 samples, 0.17%)</title><rect x="451.4" y="1637" width="1.9" height="15.0" fill="rgb(229,22,20)" rx="2" ry="2" />
<text  x="454.37" y="1647.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (4 samples, 0.01%)</title><rect x="59.0" y="1413" width="0.1" height="15.0" fill="rgb(235,211,38)" rx="2" ry="2" />
<text  x="61.96" y="1423.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52 samples, 0.12%)</title><rect x="659.1" y="1797" width="1.4" height="15.0" fill="rgb(221,108,8)" rx="2" ry="2" />
<text  x="662.12" y="1807.5" ></text>
</g>
<g >
<title>__GI___ioctl (60 samples, 0.14%)</title><rect x="683.9" y="1749" width="1.7" height="15.0" fill="rgb(207,66,45)" rx="2" ry="2" />
<text  x="686.92" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (41 samples, 0.09%)</title><rect x="445.3" y="1701" width="1.1" height="15.0" fill="rgb(243,27,4)" rx="2" ry="2" />
<text  x="448.31" y="1711.5" ></text>
</g>
<g >
<title>IndexKey::SerializeFromKey (90 samples, 0.21%)</title><rect x="470.4" y="1749" width="2.4" height="15.0" fill="rgb(206,155,44)" rx="2" ry="2" />
<text  x="473.39" y="1759.5" ></text>
</g>
<g >
<title>start_thread (28 samples, 0.06%)</title><rect x="20.5" y="1829" width="0.8" height="15.0" fill="rgb(226,112,20)" rx="2" ry="2" />
<text  x="23.53" y="1839.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (24 samples, 0.06%)</title><rect x="206.3" y="1781" width="0.6" height="15.0" fill="rgb(207,176,16)" rx="2" ry="2" />
<text  x="209.26" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="24.7" y="1829" width="0.2" height="15.0" fill="rgb(211,46,54)" rx="2" ry="2" />
<text  x="27.71" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="14.8" y="1685" width="0.1" height="15.0" fill="rgb(253,126,3)" rx="2" ry="2" />
<text  x="17.81" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1653" width="0.2" height="15.0" fill="rgb(214,154,37)" rx="2" ry="2" />
<text  x="57.80" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="23.5" y="1781" width="0.2" height="15.0" fill="rgb(214,25,53)" rx="2" ry="2" />
<text  x="26.46" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (124 samples, 0.29%)</title><rect x="154.5" y="1461" width="3.3" height="15.0" fill="rgb(251,182,22)" rx="2" ry="2" />
<text  x="157.45" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="17.3" y="1829" width="0.2" height="15.0" fill="rgb(229,64,33)" rx="2" ry="2" />
<text  x="20.29" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,046 samples, 2.41%)</title><rect x="564.3" y="1653" width="28.5" height="15.0" fill="rgb(212,108,41)" rx="2" ry="2" />
<text  x="567.33" y="1663.5" >[[..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.01%)</title><rect x="231.6" y="1829" width="0.1" height="15.0" fill="rgb(209,96,50)" rx="2" ry="2" />
<text  x="234.56" y="1839.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::Free (38 samples, 0.09%)</title><rect x="463.5" y="1669" width="1.0" height="15.0" fill="rgb(245,160,25)" rx="2" ry="2" />
<text  x="466.51" y="1679.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1141" width="1.0" height="15.0" fill="rgb(251,111,1)" rx="2" ry="2" />
<text  x="60.90" y="1151.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (20 samples, 0.05%)</title><rect x="495.8" y="1685" width="0.6" height="15.0" fill="rgb(206,59,41)" rx="2" ry="2" />
<text  x="498.84" y="1695.5" ></text>
</g>
<g >
<title>BPlusTreeInternalPage::EntryAt (7 samples, 0.02%)</title><rect x="407.8" y="1701" width="0.2" height="15.0" fill="rgb(211,18,36)" rx="2" ry="2" />
<text  x="410.78" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1781" width="0.2" height="15.0" fill="rgb(243,26,28)" rx="2" ry="2" />
<text  x="217.69" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.01%)</title><rect x="369.1" y="1605" width="0.2" height="15.0" fill="rgb(254,11,39)" rx="2" ry="2" />
<text  x="372.10" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (11 samples, 0.03%)</title><rect x="495.4" y="1653" width="0.3" height="15.0" fill="rgb(218,178,41)" rx="2" ry="2" />
<text  x="498.35" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="10.5" y="1685" width="0.1" height="15.0" fill="rgb(243,177,41)" rx="2" ry="2" />
<text  x="13.46" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="245.2" y="1781" width="0.1" height="15.0" fill="rgb(252,12,18)" rx="2" ry="2" />
<text  x="248.21" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (933 samples, 2.15%)</title><rect x="1125.8" y="1621" width="25.4" height="15.0" fill="rgb(208,111,36)" rx="2" ry="2" />
<text  x="1128.84" y="1631.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="219.7" y="1621" width="0.2" height="15.0" fill="rgb(237,65,9)" rx="2" ry="2" />
<text  x="222.70" y="1631.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (5 samples, 0.01%)</title><rect x="367.5" y="1637" width="0.2" height="15.0" fill="rgb(207,48,5)" rx="2" ry="2" />
<text  x="370.52" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.01%)</title><rect x="683.6" y="1829" width="0.2" height="15.0" fill="rgb(205,97,33)" rx="2" ry="2" />
<text  x="686.65" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="678.6" y="1797" width="0.3" height="15.0" fill="rgb(239,107,26)" rx="2" ry="2" />
<text  x="681.56" y="1807.5" ></text>
</g>
<g >
<title>BlockHeader::GetBlockSize (17 samples, 0.04%)</title><rect x="340.2" y="1621" width="0.5" height="15.0" fill="rgb(219,49,0)" rx="2" ry="2" />
<text  x="343.24" y="1631.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="693" width="0.1" height="15.0" fill="rgb(234,38,30)" rx="2" ry="2" />
<text  x="61.79" y="703.5" ></text>
</g>
<g >
<title>EventList::internalUpdate (46 samples, 0.11%)</title><rect x="113.1" y="1717" width="1.2" height="15.0" fill="rgb(233,125,26)" rx="2" ry="2" />
<text  x="116.05" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (154 samples, 0.35%)</title><rect x="285.2" y="1445" width="4.2" height="15.0" fill="rgb(221,58,18)" rx="2" ry="2" />
<text  x="288.19" y="1455.5" ></text>
</g>
<g >
<title>Field::GetLength (5 samples, 0.01%)</title><rect x="377.7" y="1637" width="0.1" height="15.0" fill="rgb(251,11,37)" rx="2" ry="2" />
<text  x="380.69" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.02%)</title><rect x="214.7" y="1685" width="0.2" height="15.0" fill="rgb(207,109,25)" rx="2" ry="2" />
<text  x="217.69" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 0.14%)</title><rect x="685.9" y="1621" width="1.6" height="15.0" fill="rgb(213,135,37)" rx="2" ry="2" />
<text  x="688.85" y="1631.5" ></text>
</g>
<g >
<title>[code] (38 samples, 0.09%)</title><rect x="57.9" y="1173" width="1.0" height="15.0" fill="rgb(254,114,54)" rx="2" ry="2" />
<text  x="60.90" y="1183.5" ></text>
</g>
<g >
<title>g_socket_receive_message (11 samples, 0.03%)</title><rect x="219.6" y="1781" width="0.3" height="15.0" fill="rgb(223,141,48)" rx="2" ry="2" />
<text  x="222.64" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 0.06%)</title><rect x="511.9" y="1797" width="0.7" height="15.0" fill="rgb(228,15,46)" rx="2" ry="2" />
<text  x="514.89" y="1807.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="15.4" y="1781" width="1.4" height="15.0" fill="rgb(227,69,46)" rx="2" ry="2" />
<text  x="18.41" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 0.05%)</title><rect x="242.3" y="1765" width="0.5" height="15.0" fill="rgb(239,150,28)" rx="2" ry="2" />
<text  x="245.30" y="1775.5" ></text>
</g>
<g >
<title>[code] (22 samples, 0.05%)</title><rect x="22.8" y="1765" width="0.6" height="15.0" fill="rgb(215,30,28)" rx="2" ry="2" />
<text  x="25.81" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.03%)</title><rect x="520.0" y="1797" width="0.3" height="15.0" fill="rgb(240,22,17)" rx="2" ry="2" />
<text  x="522.97" y="1807.5" ></text>
</g>
<g >
<title>TableIterator::TableIterator (401 samples, 0.92%)</title><rect x="492.5" y="1749" width="10.9" height="15.0" fill="rgb(234,88,10)" rx="2" ry="2" />
<text  x="495.50" y="1759.5" ></text>
</g>
<g >
<title>ieee80211_iface_work (14 samples, 0.03%)</title><rect x="244.8" y="1765" width="0.4" height="15.0" fill="rgb(207,175,31)" rx="2" ry="2" />
<text  x="247.83" y="1775.5" ></text>
</g>
<g >
<title>Type::GetInstance (4 samples, 0.01%)</title><rect x="298.4" y="1637" width="0.1" height="15.0" fill="rgb(237,113,30)" rx="2" ry="2" />
<text  x="301.36" y="1647.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="661" width="0.1" height="15.0" fill="rgb(228,217,20)" rx="2" ry="2" />
<text  x="61.79" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="480.5" y="1509" width="0.3" height="15.0" fill="rgb(237,121,50)" rx="2" ry="2" />
<text  x="483.50" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="22.6" y="1653" width="0.1" height="15.0" fill="rgb(234,206,48)" rx="2" ry="2" />
<text  x="25.59" y="1663.5" ></text>
</g>
<g >
<title>[perf-162284.map] (4 samples, 0.01%)</title><rect x="59.0" y="1349" width="0.1" height="15.0" fill="rgb(237,0,41)" rx="2" ry="2" />
<text  x="61.96" y="1359.5" ></text>
</g>
<g >
<title>g_slice_alloc (12 samples, 0.03%)</title><rect x="223.2" y="1829" width="0.3" height="15.0" fill="rgb(219,42,35)" rx="2" ry="2" />
<text  x="226.15" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (9 samples, 0.02%)</title><rect x="486.3" y="1685" width="0.3" height="15.0" fill="rgb(243,52,48)" rx="2" ry="2" />
<text  x="489.32" y="1695.5" ></text>
</g>
<g >
<title>Field::GetLength (12 samples, 0.03%)</title><rect x="378.9" y="1637" width="0.3" height="15.0" fill="rgb(248,126,26)" rx="2" ry="2" />
<text  x="381.89" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="24.6" y="1829" width="0.1" height="15.0" fill="rgb(240,39,29)" rx="2" ry="2" />
<text  x="27.61" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.01%)</title><rect x="330.0" y="1589" width="0.1" height="15.0" fill="rgb(218,139,36)" rx="2" ry="2" />
<text  x="333.02" y="1599.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (54 samples, 0.12%)</title><rect x="634.1" y="1813" width="1.5" height="15.0" fill="rgb(254,109,12)" rx="2" ry="2" />
<text  x="637.15" y="1823.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (10 samples, 0.02%)</title><rect x="360.4" y="1621" width="0.3" height="15.0" fill="rgb(246,145,30)" rx="2" ry="2" />
<text  x="363.40" y="1631.5" ></text>
</g>
<g >
<title>[code] (20 samples, 0.05%)</title><rect x="58.4" y="933" width="0.5" height="15.0" fill="rgb(218,58,41)" rx="2" ry="2" />
<text  x="61.36" y="943.5" ></text>
</g>
<g >
<title>TypeFloat::DeserializeFrom (7 samples, 0.02%)</title><rect x="489.6" y="1685" width="0.2" height="15.0" fill="rgb(245,166,6)" rx="2" ry="2" />
<text  x="492.56" y="1695.5" ></text>
</g>
<g >
<title>ntfs_fetch_cache (5 samples, 0.01%)</title><rect x="632.9" y="1797" width="0.1" height="15.0" fill="rgb(254,96,54)" rx="2" ry="2" />
<text  x="635.87" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (36 samples, 0.08%)</title><rect x="446.8" y="1653" width="0.9" height="15.0" fill="rgb(206,218,20)" rx="2" ry="2" />
<text  x="449.75" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 0.05%)</title><rect x="1150.3" y="1429" width="0.6" height="15.0" fill="rgb(216,124,17)" rx="2" ry="2" />
<text  x="1153.32" y="1439.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 0.03%)</title><rect x="410.4" y="1541" width="0.3" height="15.0" fill="rgb(211,117,17)" rx="2" ry="2" />
<text  x="413.39" y="1551.5" ></text>
</g>
<g >
<title>[code] (51 samples, 0.12%)</title><rect x="15.4" y="1765" width="1.4" height="15.0" fill="rgb(232,134,20)" rx="2" ry="2" />
<text  x="18.41" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (16 samples, 0.04%)</title><rect x="434.2" y="1621" width="0.4" height="15.0" fill="rgb(215,229,34)" rx="2" ry="2" />
<text  x="437.19" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 0.03%)</title><rect x="221.1" y="1749" width="0.3" height="15.0" fill="rgb(227,128,9)" rx="2" ry="2" />
<text  x="224.06" y="1759.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (23 samples, 0.05%)</title><rect x="206.9" y="1781" width="0.6" height="15.0" fill="rgb(212,193,15)" rx="2" ry="2" />
<text  x="209.92" y="1791.5" ></text>
</g>
<g >
<title>[code] (23 samples, 0.05%)</title><rect x="22.8" y="1781" width="0.6" height="15.0" fill="rgb(213,5,37)" rx="2" ry="2" />
<text  x="25.78" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="230.2" y="1701" width="0.1" height="15.0" fill="rgb(225,77,37)" rx="2" ry="2" />
<text  x="233.22" y="1711.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (5 samples, 0.01%)</title><rect x="324.5" y="1525" width="0.1" height="15.0" fill="rgb(229,196,23)" rx="2" ry="2" />
<text  x="327.49" y="1535.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="682.3" y="1381" width="0.1" height="15.0" fill="rgb(254,21,40)" rx="2" ry="2" />
<text  x="685.26" y="1391.5" ></text>
</g>
<g >
<title>[code] (17 samples, 0.04%)</title><rect x="58.4" y="901" width="0.5" height="15.0" fill="rgb(207,142,52)" rx="2" ry="2" />
<text  x="61.44" y="911.5" ></text>
</g>
<g >
<title>__libc_read (1,401 samples, 3.23%)</title><rect x="593.8" y="1797" width="38.1" height="15.0" fill="rgb(244,112,32)" rx="2" ry="2" />
<text  x="596.79" y="1807.5" >__l..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="242.0" y="1765" width="0.2" height="15.0" fill="rgb(222,34,21)" rx="2" ry="2" />
<text  x="244.97" y="1775.5" ></text>
</g>
<g >
<title>[code] (6 samples, 0.01%)</title><rect x="16.4" y="1477" width="0.2" height="15.0" fill="rgb(231,46,5)" rx="2" ry="2" />
<text  x="19.42" y="1487.5" ></text>
</g>
<g >
<title>kworker/5:4-eve (9 samples, 0.02%)</title><rect x="241.9" y="1845" width="0.3" height="15.0" fill="rgb(254,90,44)" rx="2" ry="2" />
<text  x="244.95" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,217 samples, 2.81%)</title><rect x="559.7" y="1765" width="33.1" height="15.0" fill="rgb(210,90,21)" rx="2" ry="2" />
<text  x="562.68" y="1775.5" >[[..</text>
</g>
<g >
<title>[unknown] (7 samples, 0.02%)</title><rect x="245.6" y="1813" width="0.2" height="15.0" fill="rgb(217,96,0)" rx="2" ry="2" />
<text  x="248.56" y="1823.5" ></text>
</g>
<g >
<title>Schema::GetColumnCount (4 samples, 0.01%)</title><rect x="342.1" y="1669" width="0.1" height="15.0" fill="rgb(239,198,24)" rx="2" ry="2" />
<text  x="345.09" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1797" width="0.4" height="15.0" fill="rgb(241,65,49)" rx="2" ry="2" />
<text  x="694.13" y="1807.5" ></text>
</g>
<g >
<title>nvme_irq (5 samples, 0.01%)</title><rect x="1151.1" y="1605" width="0.1" height="15.0" fill="rgb(235,35,24)" rx="2" ry="2" />
<text  x="1154.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (4 samples, 0.01%)</title><rect x="468.4" y="1637" width="0.1" height="15.0" fill="rgb(229,19,52)" rx="2" ry="2" />
<text  x="471.40" y="1647.5" ></text>
</g>
<g >
<title>[code] (9 samples, 0.02%)</title><rect x="58.7" y="773" width="0.2" height="15.0" fill="rgb(220,113,45)" rx="2" ry="2" />
<text  x="61.66" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="56.2" y="1429" width="0.1" height="15.0" fill="rgb(250,77,9)" rx="2" ry="2" />
<text  x="59.16" y="1439.5" ></text>
</g>
<g >
<title>TablePage::GetNextTupleRid (12 samples, 0.03%)</title><rect x="503.4" y="1749" width="0.3" height="15.0" fill="rgb(247,132,44)" rx="2" ry="2" />
<text  x="506.41" y="1759.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="20.7" y="1717" width="0.6" height="15.0" fill="rgb(222,182,24)" rx="2" ry="2" />
<text  x="23.69" y="1727.5" ></text>
</g>
<g >
<title>start_thread (12 samples, 0.03%)</title><rect x="21.4" y="1829" width="0.3" height="15.0" fill="rgb(223,156,14)" rx="2" ry="2" />
<text  x="24.37" y="1839.5" ></text>
</g>
<g >
<title>[code] (69 samples, 0.16%)</title><rect x="57.1" y="1349" width="1.8" height="15.0" fill="rgb(227,50,25)" rx="2" ry="2" />
<text  x="60.05" y="1359.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74 samples, 0.17%)</title><rect x="679.7" y="1797" width="2.0" height="15.0" fill="rgb(211,80,16)" rx="2" ry="2" />
<text  x="682.73" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="678.6" y="1733" width="0.3" height="15.0" fill="rgb(205,156,19)" rx="2" ry="2" />
<text  x="681.64" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;Field, std::allocator&lt;Field&gt; &gt;::_M_realloc_insert&lt;Field const&amp;&gt; (74 samples, 0.17%)</title><rect x="506.0" y="1749" width="2.0" height="15.0" fill="rgb(205,28,27)" rx="2" ry="2" />
<text  x="508.99" y="1759.5" ></text>
</g>
<g >
<title>DiskManager::IsPageFree (32 samples, 0.07%)</title><rect x="479.3" y="1717" width="0.9" height="15.0" fill="rgb(210,161,11)" rx="2" ry="2" />
<text  x="482.28" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (6 samples, 0.01%)</title><rect x="679.4" y="1621" width="0.2" height="15.0" fill="rgb(227,139,45)" rx="2" ry="2" />
<text  x="682.43" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="220.9" y="1701" width="0.1" height="15.0" fill="rgb(213,198,14)" rx="2" ry="2" />
<text  x="223.90" y="1711.5" ></text>
</g>
<g >
<title>[libjvm.so] (7 samples, 0.02%)</title><rect x="22.0" y="1781" width="0.2" height="15.0" fill="rgb(210,127,49)" rx="2" ry="2" />
<text  x="24.99" y="1791.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="458.4" y="1589" width="0.1" height="15.0" fill="rgb(251,199,11)" rx="2" ry="2" />
<text  x="461.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (8 samples, 0.02%)</title><rect x="482.7" y="1669" width="0.2" height="15.0" fill="rgb(225,99,49)" rx="2" ry="2" />
<text  x="485.65" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1,251 samples, 2.88%)</title><rect x="1151.2" y="1813" width="34.0" height="15.0" fill="rgb(224,97,35)" rx="2" ry="2" />
<text  x="1154.22" y="1823.5" >[u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1717" width="0.3" height="15.0" fill="rgb(244,104,3)" rx="2" ry="2" />
<text  x="29.05" y="1727.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (16 samples, 0.04%)</title><rect x="664.1" y="1829" width="0.4" height="15.0" fill="rgb(239,7,28)" rx="2" ry="2" />
<text  x="667.09" y="1839.5" ></text>
</g>
<g >
<title>[msedge] (22 samples, 0.05%)</title><rect x="681.9" y="1605" width="0.6" height="15.0" fill="rgb(211,192,40)" rx="2" ry="2" />
<text  x="684.91" y="1615.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="688.2" y="1669" width="0.2" height="15.0" fill="rgb(209,96,46)" rx="2" ry="2" />
<text  x="691.25" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272 samples, 0.63%)</title><rect x="1143.5" y="1541" width="7.4" height="15.0" fill="rgb(208,29,41)" rx="2" ry="2" />
<text  x="1146.55" y="1551.5" ></text>
</g>
<g >
<title>[msedge] (25 samples, 0.06%)</title><rect x="13.9" y="1717" width="0.6" height="15.0" fill="rgb(245,9,19)" rx="2" ry="2" />
<text  x="16.86" y="1727.5" ></text>
</g>
<g >
<title>[msedge] (28 samples, 0.06%)</title><rect x="681.8" y="1701" width="0.7" height="15.0" fill="rgb(254,58,1)" rx="2" ry="2" />
<text  x="684.77" y="1711.5" ></text>
</g>
<g >
<title>__strlen_avx2 (105 samples, 0.24%)</title><rect x="636.8" y="1813" width="2.8" height="15.0" fill="rgb(224,59,6)" rx="2" ry="2" />
<text  x="639.79" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (4 samples, 0.01%)</title><rect x="491.3" y="1637" width="0.1" height="15.0" fill="rgb(236,87,16)" rx="2" ry="2" />
<text  x="494.30" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5 samples, 0.01%)</title><rect x="411.3" y="1653" width="0.1" height="15.0" fill="rgb(205,194,19)" rx="2" ry="2" />
<text  x="414.28" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="10.4" y="1749" width="0.2" height="15.0" fill="rgb(243,201,26)" rx="2" ry="2" />
<text  x="13.44" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (51 samples, 0.12%)</title><rect x="320.1" y="1589" width="1.4" height="15.0" fill="rgb(239,24,10)" rx="2" ry="2" />
<text  x="323.14" y="1599.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="26.0" y="1733" width="0.3" height="15.0" fill="rgb(244,43,36)" rx="2" ry="2" />
<text  x="29.05" y="1743.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;char*, unsigned long, char&gt; (29 samples, 0.07%)</title><rect x="459.2" y="1621" width="0.8" height="15.0" fill="rgb(239,126,35)" rx="2" ry="2" />
<text  x="462.21" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (257 samples, 0.59%)</title><rect x="150.9" y="1509" width="7.0" height="15.0" fill="rgb(238,39,39)" rx="2" ry="2" />
<text  x="153.86" y="1519.5" ></text>
</g>
<g >
<title>[[vdso]] (10 samples, 0.02%)</title><rect x="676.4" y="1813" width="0.2" height="15.0" fill="rgb(213,92,17)" rx="2" ry="2" />
<text  x="679.36" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="54.8" y="1717" width="0.2" height="15.0" fill="rgb(241,80,18)" rx="2" ry="2" />
<text  x="57.80" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38 samples, 0.09%)</title><rect x="204.4" y="1557" width="1.0" height="15.0" fill="rgb(240,155,33)" rx="2" ry="2" />
<text  x="207.39" y="1567.5" ></text>
</g>
<g >
<title>JS_CallFunction (10 samples, 0.02%)</title><rect x="225.9" y="1797" width="0.3" height="15.0" fill="rgb(208,161,18)" rx="2" ry="2" />
<text  x="228.90" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27 samples, 0.06%)</title><rect x="105.4" y="1621" width="0.7" height="15.0" fill="rgb(228,39,19)" rx="2" ry="2" />
<text  x="108.41" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_create_storage (50 samples, 0.12%)</title><rect x="430.0" y="1621" width="1.4" height="15.0" fill="rgb(242,100,49)" rx="2" ry="2" />
<text  x="433.02" y="1631.5" ></text>
</g>
<g >
<title>[msedge] (5 samples, 0.01%)</title><rect x="14.2" y="1541" width="0.1" height="15.0" fill="rgb(230,109,20)" rx="2" ry="2" />
<text  x="17.16" y="1551.5" ></text>
</g>
<g >
<title>Column::GetType (6 samples, 0.01%)</title><rect x="382.5" y="1637" width="0.2" height="15.0" fill="rgb(233,100,13)" rx="2" ry="2" />
<text  x="385.51" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 0.06%)</title><rect x="1184.6" y="1397" width="0.6" height="15.0" fill="rgb(222,9,25)" rx="2" ry="2" />
<text  x="1187.59" y="1407.5" ></text>
</g>
<g >
<title>Field::Field (10 samples, 0.02%)</title><rect x="506.6" y="1701" width="0.3" height="15.0" fill="rgb(210,128,33)" rx="2" ry="2" />
<text  x="509.64" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="691.1" y="1813" width="0.4" height="15.0" fill="rgb(234,219,20)" rx="2" ry="2" />
<text  x="694.13" y="1823.5" ></text>
</g>
<g >
<title>[code] (47 samples, 0.11%)</title><rect x="11.1" y="1733" width="1.3" height="15.0" fill="rgb(227,158,50)" rx="2" ry="2" />
<text  x="14.12" y="1743.5" ></text>
</g>
<g >
<title>ThreadPoolForeg (50 samples, 0.12%)</title><rect x="19.9" y="1845" width="1.4" height="15.0" fill="rgb(209,61,12)" rx="2" ry="2" />
<text  x="22.93" y="1855.5" ></text>
</g>
<g >
<title>operator new[] (32 samples, 0.07%)</title><rect x="160.1" y="1733" width="0.8" height="15.0" fill="rgb(233,56,13)" rx="2" ry="2" />
<text  x="163.05" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.02%)</title><rect x="230.9" y="1781" width="0.1" height="15.0" fill="rgb(230,66,20)" rx="2" ry="2" />
<text  x="233.85" y="1791.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (30 samples, 0.07%)</title><rect x="113.1" y="1701" width="0.8" height="15.0" fill="rgb(240,81,48)" rx="2" ry="2" />
<text  x="116.05" y="1711.5" ></text>
</g>
<g >
<title>[code] (4 samples, 0.01%)</title><rect x="58.8" y="229" width="0.1" height="15.0" fill="rgb(210,170,23)" rx="2" ry="2" />
<text  x="61.79" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 0.05%)</title><rect x="480.2" y="1605" width="0.6" height="15.0" fill="rgb(236,155,7)" rx="2" ry="2" />
<text  x="483.23" y="1615.5" ></text>
</g>
<g >
<title>[msedge] (21 samples, 0.05%)</title><rect x="20.7" y="1701" width="0.6" height="15.0" fill="rgb(237,86,23)" rx="2" ry="2" />
<text  x="23.69" y="1711.5" ></text>
</g>
<g >
<title>std::__1::chrono::steady_clock::now (12 samples, 0.03%)</title><rect x="212.2" y="1797" width="0.3" height="15.0" fill="rgb(205,151,3)" rx="2" ry="2" />
<text  x="215.17" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207 samples, 0.48%)</title><rect x="587.1" y="1477" width="5.7" height="15.0" fill="rgb(245,111,0)" rx="2" ry="2" />
<text  x="590.15" y="1487.5" ></text>
</g>
<g >
<title>ManagedHeap&lt;512&gt;::AllocateInChunk (21 samples, 0.05%)</title><rect x="488.9" y="1637" width="0.5" height="15.0" fill="rgb(217,35,37)" rx="2" ry="2" />
<text  x="491.85" y="1647.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (25 samples, 0.06%)</title><rect x="520.5" y="1797" width="0.7" height="15.0" fill="rgb(242,229,5)" rx="2" ry="2" />
<text  x="523.51" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="240.4" y="1701" width="0.4" height="15.0" fill="rgb(214,103,51)" rx="2" ry="2" />
<text  x="243.40" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="494.4" y="1589" width="0.4" height="15.0" fill="rgb(210,45,23)" rx="2" ry="2" />
<text  x="497.43" y="1599.5" ></text>
</g>
<g >
<title>IndexKey::DeserializeToKey (5 samples, 0.01%)</title><rect x="376.8" y="1685" width="0.1" height="15.0" fill="rgb(251,36,2)" rx="2" ry="2" />
<text  x="379.80" y="1695.5" ></text>
</g>
</g>
</svg>
